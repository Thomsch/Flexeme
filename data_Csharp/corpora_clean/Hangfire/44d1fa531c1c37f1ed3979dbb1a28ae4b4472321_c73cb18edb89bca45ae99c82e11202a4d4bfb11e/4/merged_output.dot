digraph  {
n17 [label="HangFire.Web.AspNetBackgroundJobServer", span=""];
n0 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", label="Entry HangFire.Web.AspNetBackgroundJobServer.Start()", span="14-14"];
n1 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", label="base.Start()", span="16-16"];
n2 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", label="HostingEnvironment.RegisterObject(this)", span="17-17"];
n4 [cluster="HangFire.BackgroundJobServer.Start()", label="Entry HangFire.BackgroundJobServer.Start()", span="50-50"];
n3 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", label="Exit HangFire.Web.AspNetBackgroundJobServer.Start()", span="14-14"];
n5 [cluster="Unk.RegisterObject", label="Entry Unk.RegisterObject", span=""];
n6 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="24-24"];
n7 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="var wasStopped = base.Stop()", span="26-26"];
n8 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label=wasStopped, span="27-27"];
n12 [cluster="HangFire.BackgroundJobServer.Stop()", label="Entry HangFire.BackgroundJobServer.Stop()", span="64-64"];
n10 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="return wasStopped;", span="32-32"];
n9 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="HostingEnvironment.UnregisterObject(this)", span="29-29"];
n13 [cluster="Unk.UnregisterObject", label="Entry Unk.UnregisterObject", span=""];
n11 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", span="24-24"];
n14 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="35-35"];
n15 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", label="Stop()", span="37-37"];
n16 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="35-35"];
m0_15 [cluster="Unk.Setup", file="BackgroundJobServer.cs", label="Entry Unk.Setup", span=""];
m0_16 [cluster="Unk.Returns", file="BackgroundJobServer.cs", label="Entry Unk.Returns", span=""];
m0_19 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="27-27"];
m0_17 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="27-27"];
m0_18 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27"];
m0_20 [cluster="Unk.>", file="BackgroundJobServer.cs", label="Entry Unk.>", span=""];
m0_75 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m0_76 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="BackgroundJobServer.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="82-83"];
m0_77 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="BackgroundJobServer.cs", label="var scheduler = CreateScheduler()", span="84-84"];
m0_78 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="BackgroundJobServer.cs", label="scheduler.Execute(_token)", span="86-86"];
m0_79 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="BackgroundJobServer.cs", label="_stateMachine.Verify(\r\n                x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="88-90"];
m0_80 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m0_14 [cluster="Mock<IStateMachineFactory>.cstr", file="BackgroundJobServer.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m0_57 [cluster="HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m0_21 [cluster="Unk.Create", file="BackgroundJobServer.cs", label="Entry Unk.Create", span=""];
m0_42 [cluster="System.TimeSpan.FromMilliseconds(double)", file="BackgroundJobServer.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m0_37 [cluster="Unk.Equal", file="BackgroundJobServer.cs", label="Entry Unk.Equal", span=""];
m0_66 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m0_67 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="BackgroundJobServer.cs", label="var scheduler = CreateScheduler()", span="69-69"];
m0_68 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="BackgroundJobServer.cs", label="scheduler.Execute(_token)", span="71-71"];
m0_69 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="BackgroundJobServer.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", span="73-76"];
m0_70 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m0_41 [cluster="SchedulePoller.cstr", file="BackgroundJobServer.cs", label="Entry SchedulePoller.cstr", span=""];
m0_6 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="BackgroundJobServer.cs", label="1: _stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28"];
m0_29 [cluster="Unk.GetFirstByLowestScoreFromSet", file="BackgroundJobServer.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m0_25 [cluster="Unk.GetConnection", file="BackgroundJobServer.cs", label="HangFire.BackgroundJobServer", span=""];
m0_12 [cluster="Mock<IStateMachine>.cstr", file="BackgroundJobServer.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m0_50 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m0_51 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", color=green, community=0, file="BackgroundJobServer.cs", label="1: var scheduler = CreateScheduler()", span="58-58"];
m0_52 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="BackgroundJobServer.cs", label="scheduler.Execute(_token)", span="60-60"];
m0_53 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="BackgroundJobServer.cs", label="_storage.Verify(x => x.GetConnection())", span="62-62"];
m0_54 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="BackgroundJobServer.cs", label="_connection.Verify(x => x.Dispose())", span="63-63"];
m0_55 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m0_33 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m0_34 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, TimeSpan.FromMilliseconds(-1)))", span="38-40"];
m0_35 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServer.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m0_36 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m0_0 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m0_1 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="BackgroundJobServer.cs", label="_storage = new Mock<JobStorage>()", span="21-21"];
m0_2 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="BackgroundJobServer.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m0_3 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="BackgroundJobServer.cs", label="0: _stateMachine = new Mock<IStateMachine>()", span="23-23"];
m0_4 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="BackgroundJobServer.cs", label="_token = new CancellationToken(true)", span="24-24"];
m0_5 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="BackgroundJobServer.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26"];
m0_65 [cluster="Unk.Dispose", file="BackgroundJobServer.cs", label="Entry Unk.Dispose", span=""];
m0_22 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="30-30"];
m0_23 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="1: x.GetConnection()", span="30-30"];
m0_24 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="30-30"];
m0_74 [cluster="Unk.TryToChangeState", file="BackgroundJobServer.cs", label="Entry Unk.TryToChangeState", span=""];
m0_7 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, file="BackgroundJobServer.cs", label="0: Entry HangFire.BackgroundJobServer.Start()", span="50-50"];
m0_8 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_server != null", span="52-52"];
m0_9 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="54-54"];
m0_84 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="83-83"];
m0_39 [cluster="lambda expression", file="BackgroundJobServer.cs", label="new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, TimeSpan.FromMilliseconds(-1))", span="39-40"];
m0_48 [cluster="lambda expression", file="BackgroundJobServer.cs", label="new SchedulePoller(\r\n                    _storage.Object, null, TimeSpan.FromMilliseconds(-1))", span="49-50"];
m0_26 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="31-32"];
m0_60 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetConnection()", span="62-62"];
m0_38 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="39-40"];
m0_40 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="39-40"];
m0_47 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="49-50"];
m0_49 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="49-50"];
m0_59 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="62-62"];
m0_62 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="63-63"];
m0_71 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="73-76"];
m0_81 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="82-83"];
m0_87 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="89-89"];
m0_28 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="31-32"];
m0_27 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="31-32"];
m0_61 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="62-62"];
m0_72 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", span="73-76"];
m0_82 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="82-83"];
m0_88 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>())", span="89-89"];
m0_64 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="63-63"];
m0_63 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.Dispose()", span="63-63"];
m0_73 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="73-76"];
m0_83 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="82-83"];
m0_89 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="89-89"];
m0_30 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="32-32"];
m0_32 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="32-32"];
m0_31 [cluster="lambda expression", file="BackgroundJobServer.cs", label="time > 0", span="32-32"];
m0_85 [cluster="lambda expression", file="BackgroundJobServer.cs", label="time > 0", span="83-83"];
m0_86 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="83-83"];
m0_13 [cluster="HangFire.Server.JobServer.JobServer(string, string, int, System.TimeSpan, HangFire.JobActivator)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.JobServer.JobServer(string, string, int, System.TimeSpan, HangFire.JobActivator)", span="30-30"];
m0_58 [cluster="Unk.Verify", file="BackgroundJobServer.cs", label="Entry Unk.Verify", span=""];
m0_10 [cluster="Mock<JobStorage>.cstr", color=red, community=0, file="BackgroundJobServer.cs", label="0: Entry Mock<JobStorage>.cstr", span=""];
m0_11 [cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobServer.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_56 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m0_90 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="BackgroundJobServer.cs", label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, TimeSpan.Zero);", span="95-95"];
m0_91 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m0_43 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m0_44 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, TimeSpan.FromMilliseconds(-1)))", span="48-50"];
m0_45 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="52-52"];
m0_46 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m0_92 [file="BackgroundJobServer.cs", label="HangFire.Core.Tests.Server.SchedulePollerFacts", span=""];
m1_0 [cluster="HangFire.Client.ClientContext.ClientContext()", file="ClientContext.cs", label="Entry HangFire.Client.ClientContext.ClientContext()", span="6-6"];
m1_1 [cluster="HangFire.Client.ClientContext.ClientContext()", color=red, community=0, file="ClientContext.cs", label="1: Items = new Dictionary<string, object>()", span="8-8"];
m1_2 [cluster="HangFire.Client.ClientContext.ClientContext()", file="ClientContext.cs", label="Exit HangFire.Client.ClientContext.ClientContext()", span="6-6"];
m1_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ClientContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_4 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", file="ClientContext.cs", label="Entry HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", span="11-11"];
m1_5 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", color=red, community=0, file="ClientContext.cs", label="0: Items = clientContext.Items", span="13-13"];
m1_6 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", file="ClientContext.cs", label="Exit HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", span="11-11"];
m1_7 [file="ClientContext.cs", label="HangFire.Client.ClientContext", span=""];
m2_7 [cluster="System.Action.Invoke()", file="ClientJobDescriptor.cs", label="Entry System.Action.Invoke()", span="0-0"];
m2_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_13 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29"];
m2_14 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=green, community=0, file="ClientJobDescriptor.cs", label="1: return Job.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(Job[name])\r\n                : default(T);", span="31-33"];
m2_15 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29"];
m2_17 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="ClientJobDescriptor.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m2_38 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="ClientJobDescriptor.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m2_34 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="ClientJobDescriptor.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m2_39 [cluster="string.Format(string, object, object)", file="ClientJobDescriptor.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_37 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="ClientJobDescriptor.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m2_8 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24"];
m2_9 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="Job.Add(name, JobHelper.ToJson(value))", span="26-26"];
m2_10 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24"];
m2_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8"];
m2_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="ClientJobDescriptor.cs", label="1: Job = job", span="10-10"];
m2_2 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="ClientJobDescriptor.cs", label="0: JobId = jobId", span="11-11"];
m2_3 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8"];
m2_33 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="ClientJobDescriptor.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m2_4 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19"];
m2_5 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", color=red, community=0, file="ClientJobDescriptor.cs", label="0: EnqueueAction()", span="21-21"];
m2_6 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19"];
m2_35 [cluster="object.GetType()", file="ClientJobDescriptor.cs", label="Entry object.GetType()", span="0-0"];
m2_11 [cluster="HangFire.JobHelper.ToJson(object)", file="ClientJobDescriptor.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m2_18 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36"];
m2_19 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="var result = new Dictionary<string, string>()", span="38-38"];
m2_20 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="jobProperties != null", span="39-39"];
m2_21 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="TypeDescriptor.GetProperties(jobProperties)", span="41-41"];
m2_22 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="var propertyValue = descriptor.GetValue(jobProperties)", span="43-43"];
m2_29 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="result.Add(descriptor.Name, value)", span="64-64"];
m2_30 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="return result;", span="68-68"];
m2_28 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="throw new InvalidOperationException(\r\n                                String.Format(\r\n                                    ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                    descriptor.Name,\r\n                                    descriptor.PropertyType),\r\n                                ex);", span="55-60"];
m2_23 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="string value = null", span="44-44"];
m2_24 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="propertyValue != null", span="46-46"];
m2_25 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="50-50"];
m2_26 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="value = converter.ConvertToInvariantString(propertyValue)", span="51-51"];
m2_27 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label=Exception, span="53-53"];
m2_31 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36"];
m2_36 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ClientJobDescriptor.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m2_40 [file="ClientJobDescriptor.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m3_0 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs", label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m3_1 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs", label="Exception = exception", span="11-11"];
m3_2 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs", label="Exit HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m3_3 [file="ClientJobExceptionContext.cs", label="HangFire.Filters.ClientJobExceptionContext", span=""];
m7_24 [cluster="Unk.>", file="DequeuedJobsWatcher.cs", label="Entry Unk.>", span=""];
m7_0 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
m7_1 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="DequeuedJobsWatcher.cs", label="_connection = connection", span="21-21"];
m7_29 [cluster="int.ToString()", file="DequeuedJobsWatcher.cs", label="Entry int.ToString()", span="0-0"];
m7_26 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m7_27 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m7_2 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="DequeuedJobsWatcher.cs", label="_queues = queues", span="22-22"];
m7_3 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
m7_25 [cluster="System.TimeSpan.FromSeconds(double)", file="DequeuedJobsWatcher.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m7_20 [cluster="Unk.Query", file="DequeuedJobsWatcher.cs", label="Entry Unk.Query", span=""];
m7_28 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23"];
m7_21 [cluster="Unk.SingleOrDefault", file="DequeuedJobsWatcher.cs", label="Entry Unk.SingleOrDefault", span=""];
m7_4 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25"];
m7_16 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="DequeuedJobsWatcher.cs", label="1: job == null", span="67-67"];
m7_5 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="Job job = null", span="27-27"];
m7_14 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="62-62"];
m7_13 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="job == null", span="60-60"];
m7_11 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="job = _connection.Query<Job>(\r\n                        @''select Id, InvocationData, Arguments from HangFire.Job where Id = @id'',\r\n                        parameters)\r\n                        .SingleOrDefault()", span="52-55"];
m7_6 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="string queueName = null", span="28-28"];
m7_17 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="DequeuedJobsWatcher.cs", label="0: var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="69-69"];
m7_18 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="DequeuedJobsWatcher.cs", label="1: return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", span="71-74"];
m7_12 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="queueName = idAndQueue.Queue", span="57-57"];
m7_15 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="DequeuedJobsWatcher.cs", label="1: return null;", span="64-64"];
m7_8 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="idAndQueue != null", span="42-42"];
m7_10 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", span="50-50"];
m7_9 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="var parameters = new DynamicParameters()", span="49-49"];
m7_7 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="var idAndQueue = _connection.Query(@''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt is null\r\nand Queue in @queues'',\r\n                    new { queues = _queues })\r\n                    .SingleOrDefault()", span="33-40"];
m7_19 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25"];
m7_22 [cluster="DynamicParameters.cstr", file="DequeuedJobsWatcher.cs", label="Entry DynamicParameters.cstr", span=""];
m7_23 [cluster="Unk.Add", file="DequeuedJobsWatcher.cs", label="Entry Unk.Add", span=""];
m7_30 [file="DequeuedJobsWatcher.cs", label="HangFire.SqlServer.SqlServerFetcher", span=""];
m8_65 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152"];
m8_66 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job by the \'checked\' flag in the \'Fetched\' state should not be re-queue'' +\r\n                    ''d'', new string[] {\r\n                        ''checkpoint-2''})", span="154-156"];
m8_67 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="158-158"];
m8_76 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="176-176"];
m8_68 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="160-160"];
m8_71 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="166-166"];
m8_75 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174"];
m8_69 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="162-162"];
m8_72 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="168-168"];
m8_70 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was fetched a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164"];
m8_74 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="172-172"];
m8_73 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="170-170"];
m8_77 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152"];
m8_54 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124"];
m8_55 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed job in the \'Checked\' state should be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="126-127"];
m8_56 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="129-129"];
m8_63 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="143-143"];
m8_57 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="131-131"];
m8_59 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="135-135"];
m8_62 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141"];
m8_58 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="133-133"];
m8_60 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="137-137"];
m8_61 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="139-139"];
m8_64 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124"];
m8_39 [cluster="Unk.Given", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Given", span=""];
m8_78 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184"];
m8_79 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out jobs in the \'Fetched\' state should be re-queued'', new string[] {\r\n                        ''checkpoint-2''})", span="186-187"];
m8_80 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="189-189"];
m8_88 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="205-205"];
m8_81 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191"];
m8_83 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195"];
m8_87 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the job does not have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="203-203"];
m8_82 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193"];
m8_84 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="197-197"];
m8_86 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="201-201"];
m8_85 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="199-199"];
m8_89 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184"];
m8_40 [cluster="Unk.When", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.When", span=""];
m8_41 [cluster="Unk.Then", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Then", span=""];
m8_25 [cluster="Unk.OnScenarioStart", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m8_26 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66"];
m8_27 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m8_28 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66"];
m8_29 [cluster="Unk.CollectScenarioErrors", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m8_42 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97"];
m8_43 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Non-timed out job in the \'Checked\' state should not be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="99-100"];
m8_44 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="102-102"];
m8_51 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="116-116"];
m8_45 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="104-104"];
m8_47 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="108-108"];
m8_50 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="114-114"];
m8_46 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was checked a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="106-106"];
m8_48 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="110-110"];
m8_49 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="112-112"];
m8_52 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97"];
m8_22 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m8_23 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DequeuedJobsWatcher.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m8_24 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m8_101 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242"];
m8_102 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job in the Succeeded state does not move to the Enqueued state'', new string[] {\r\n                        ''checkpoint-4''})", span="244-245"];
m8_103 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="247-247"];
m8_110 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="261-261"];
m8_104 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="249-249"];
m8_107 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="255-255"];
m8_109 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="259-259"];
m8_105 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="251-251"];
m8_108 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="257-257"];
m8_106 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="253-253"];
m8_111 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242"];
m8_132 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314"];
m8_134 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="318-318"];
m8_133 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Succeeded job of non-existing type will not be moved to the failed state'', ((string[])(null)))", span="316-316"];
m8_141 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="332-332"];
m8_135 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="320-320"];
m8_138 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="326-326"];
m8_140 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="330-330"];
m8_136 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="322-322"];
m8_139 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="328-328"];
m8_137 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="324-324"];
m8_142 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314"];
m8_53 [cluster="Unk.And", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.And", span=""];
m8_113 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="268-268"];
m8_115 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="272-272"];
m8_114 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job is being enqueued on it\'s actual queue after timing out'', ((string[])(null)))", span="270-270"];
m8_120 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="282-282"];
m8_118 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="278-278"];
m8_116 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''a dequeued job from the \'test\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="274-274"];
m8_119 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="280-280"];
m8_117 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="276-276"];
m8_121 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="268-268"];
m8_122 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290"];
m8_124 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="295-295"];
m8_123 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When the server could not find the job\'s type, the job is moved to the Failed sta'' +\r\n                    ''te'', ((string[])(null)))", span="292-293"];
m8_130 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="307-307"];
m8_125 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="297-297"];
m8_127 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="301-301"];
m8_129 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="305-305"];
m8_126 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="299-299"];
m8_128 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the job moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="303-303"];
m8_131 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290"];
m8_38 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m8_30 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76"];
m8_31 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="3: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''A job in the implicit \'Dequeued\' state moved to the \'Checked\' state'', new string[] {\r\n                        ''checkpoint-1-1''})", span="78-79"];
m8_32 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="81-81"];
m8_33 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="1: testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="83-83"];
m8_34 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m8_35 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''it marks the job as \'checked\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m8_36 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="89-89"];
m8_37 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76"];
m8_112 [cluster="Unk.But", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.But", span=""];
m8_90 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214"];
m8_91 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job\'s state is changed to the Enqueued when the job is being timed out after proc'' +\r\n                    ''eeding to the Processing state'', new string[] {\r\n                        ''checkpoint-3''})", span="216-218"];
m8_92 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="220-220"];
m8_99 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="this.ScenarioCleanup()", span="234-234"];
m8_93 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="222-222"];
m8_96 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="228-228"];
m8_98 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="232-232"];
m8_94 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it\'s state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="224-224"];
m8_97 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.Then(''the job moved to the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="230-230"];
m8_95 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="226-226"];
m8_100 [cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214"];
m8_143 [file="DequeuedJobsWatcher.feature.cs", label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", span=""];
m9_195 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HangFireConfig.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_138 [cluster="HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", span="49-49"];
m9_31 [cluster="Unk.RegisterPathHandlerFactory", file="HangFireConfig.cs", label="Entry Unk.RegisterPathHandlerFactory", span=""];
m9_196 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="HangFireConfig.cs", label="Entry HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7"];
m9_223 [cluster="string.Format(string, object, object)", file="HangFireConfig.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_5 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(\r\n                ''/queues/fetched/(?<Queue>.+)'',\r\n                x => new FetchedJobsPage(x.Groups[''Queue''].Value))", span="46-48"];
m9_51 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m9_47 [cluster="HangFire.Web.Pages.QueuesPage.QueuesPage()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.QueuesPage.QueuesPage()", span="53-53"];
m9_0 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="Entry MvcSample.HangFireConfig.Start()", span="16-16"];
m9_1 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="RedisFactory.Db = 3", span="20-20"];
m9_2 [cluster="MvcSample.HangFireConfig.Start()", color=green, community=1, file="HangFireConfig.cs", label="3: _server = new AspNetBackgroundJobServer\r\n            {\r\n                MachineName = Environment.MachineName,\r\n                Queue = ''default'',\r\n                WorkersCount = Environment.ProcessorCount * 2\r\n            }", span="22-27"];
m9_3 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="GlobalJobFilters.Filters.Add(new PreserveCultureFilter())", span="29-29"];
m9_4 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="Exit MvcSample.HangFireConfig.Start()", span="16-16"];
m9_6 [cluster="HangFire.PreserveCultureFilter.PreserveCultureFilter()", file="HangFireConfig.cs", label="Entry HangFire.PreserveCultureFilter.PreserveCultureFilter()", span="8-8"];
m9_7 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="HangFireConfig.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m9_8 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/enqueued/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId)))", span="56-57"];
m9_9 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/processing'', x => new ProcessingJobsPage())", span="59-59"];
m9_10 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/processing/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName)))", span="60-61"];
m9_11 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/processing/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName)))", span="63-64"];
m9_12 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/scheduled'', x => new ScheduledJobsPage())", span="66-66"];
m9_13 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/scheduled/enqueue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName)))", span="68-69"];
m9_14 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/scheduled/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName)))", span="71-72"];
m9_15 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/servers'', x => new ServersPage())", span="74-74"];
m9_16 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/succeeded'', x => new SucceededJobs())", span="75-75"];
m9_17 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/succeeded/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName)))", span="76-77"];
m9_18 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/failed'', x => new FailedJobsPage())", span="79-79"];
m9_19 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/failed/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName)))", span="81-82"];
m9_20 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/failed/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName)))", span="84-85"];
m9_21 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/deleted'', x => new DeletedJobsPage())", span="87-87"];
m9_22 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/deleted/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName)))", span="89-90"];
m9_23 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(\r\n                ''/actions/requeue/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value)))", span="92-94"];
m9_24 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(\r\n                ''/actions/delete/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value)))", span="96-98"];
m9_25 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/js/scripts.js'',  x => new JavaScriptHandler())", span="100-100"];
m9_26 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(''/css/styles.css'', x => new StyleSheetHandler())", span="101-101"];
m9_27 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(\r\n                ''/fonts/(?<File>.+)'',\r\n                x => new FontsHandler(x.Groups[''File''].Value))", span="103-105"];
m9_28 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="RegisterPathHandlerFactory(\r\n                ''/stats'',\r\n                x => new JsonStats())", span="107-109"];
m9_29 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="35-35"];
m9_43 [cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6"];
m9_112 [cluster="HangFire.Web.Pages.SucceededJobs.SucceededJobs()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.SucceededJobs.SucceededJobs()", span="54-54"];
m9_165 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="HangFireConfig.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m9_217 [cluster="string.EndsWith(string, System.StringComparison)", file="HangFireConfig.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m9_74 [cluster="HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", span="43-43"];
m9_179 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="HangFireConfig.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119"];
m9_180 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="HangFireConfig.cs", label="_defaultHandlerFactory = handlerFactory", span="121-121"];
m9_181 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119"];
m9_219 [cluster="System.Func<T, TResult>.Invoke(T)", file="HangFireConfig.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_220 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="HangFireConfig.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179"];
m9_221 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="HangFireConfig.cs", label="return String.Format(''{0}.Content.{1}'', typeof (HangFirePageFactory).Namespace, contentFolder);", span="181-181"];
m9_222 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179"];
m9_200 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="Entry HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149"];
m9_201 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="resource.Length == 0 || resource.Equals(''/'', StringComparison.OrdinalIgnoreCase)", span="151-151"];
m9_209 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="var match = Regex.Match(\r\n                    resource,\r\n                    pattern, \r\n                    RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline)", span="165-168"];
m9_202 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="return _defaultHandlerFactory();", span="153-153"];
m9_203 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label=PathHandlerFactories, span="156-156"];
m9_204 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="var pattern = pathHandlerFactory.Item1", span="158-158"];
m9_212 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="return null;", span="176-176"];
m9_211 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="return pathHandlerFactory.Item2(match);", span="172-172"];
m9_205 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="!pattern.StartsWith(''^'', StringComparison.OrdinalIgnoreCase)", span="160-160"];
m9_206 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="pattern = ''^'' + pattern", span="161-161"];
m9_207 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="!pattern.EndsWith(''$'', StringComparison.OrdinalIgnoreCase)", span="162-162"];
m9_208 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="pattern += ''$''", span="163-163"];
m9_210 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="match.Success", span="170-170"];
m9_213 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149"];
m9_92 [cluster="HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", span="43-43"];
m9_63 [cluster="HangFire.BackgroundJob.Delete(string)", file="HangFireConfig.cs", label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164"];
m9_169 [cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="HangFireConfig.cs", label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22"];
m9_39 [cluster="HangFire.Web.Pages.DashboardPage.DashboardPage()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.DashboardPage.DashboardPage()", span="47-47"];
m9_197 [cluster="Unk.Add", file="HangFireConfig.cs", label="Entry Unk.Add", span=""];
m9_148 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="HangFireConfig.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m9_216 [cluster="string.StartsWith(string, System.StringComparison)", file="HangFireConfig.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m9_215 [cluster="System.Func<TResult>.Invoke()", file="HangFireConfig.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m9_177 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="HangFireConfig.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m9_59 [cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="HangFireConfig.cs", label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26"];
m9_70 [cluster="HangFire.BackgroundJob.Requeue(string)", file="HangFireConfig.cs", label="Entry HangFire.BackgroundJob.Requeue(string)", span="197-197"];
m9_173 [cluster="HangFire.Web.JsonStats.JsonStats()", file="HangFireConfig.cs", label="Entry HangFire.Web.JsonStats.JsonStats()", span="22-22"];
m9_218 [cluster="System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", file="HangFireConfig.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m9_122 [cluster="HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", span="48-48"];
m9_155 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="98-98"];
m9_33 [cluster="lambda expression", file="HangFireConfig.cs", label="new ErrorPage(ex)", span="37-37"];
m9_36 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="39-39"];
m9_40 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="43-43"];
m9_44 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="45-45"];
m9_48 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="48-48"];
m9_52 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="51-51"];
m9_56 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="53-54"];
m9_64 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="56-57"];
m9_71 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="59-59"];
m9_75 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="60-61"];
m9_82 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="63-64"];
m9_89 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="66-66"];
m9_93 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="68-69"];
m9_99 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="71-72"];
m9_105 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="74-74"];
m9_109 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="75-75"];
m9_113 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="76-77"];
m9_119 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="79-79"];
m9_123 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="81-82"];
m9_129 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="84-85"];
m9_135 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="87-87"];
m9_139 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="89-90"];
m9_145 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="94-94"];
m9_152 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="98-98"];
m9_158 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="100-100"];
m9_162 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="101-101"];
m9_166 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="105-105"];
m9_170 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="109-109"];
m9_32 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="37-37"];
m9_34 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="37-37"];
m9_37 [cluster="lambda expression", file="HangFireConfig.cs", label="new DashboardPage()", span="39-39"];
m9_38 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="39-39"];
m9_41 [cluster="lambda expression", file="HangFireConfig.cs", label="new JobDetailsPage(x.Groups[''JobId''].Value)", span="43-43"];
m9_42 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="43-43"];
m9_45 [cluster="lambda expression", file="HangFireConfig.cs", label="new QueuesPage()", span="45-45"];
m9_46 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="45-45"];
m9_49 [cluster="lambda expression", file="HangFireConfig.cs", label="new FetchedJobsPage(x.Groups[''Queue''].Value)", span="48-48"];
m9_50 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="48-48"];
m9_53 [cluster="lambda expression", file="HangFireConfig.cs", label="new EnqueuedJobsPage(x.Groups[''Queue''].Value)", span="51-51"];
m9_54 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="51-51"];
m9_57 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId))", span="53-54"];
m9_58 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="53-54"];
m9_61 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Delete(jobId)", span="54-54"];
m9_60 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="54-54"];
m9_62 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="54-54"];
m9_65 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId))", span="56-57"];
m9_66 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="56-57"];
m9_68 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Requeue(jobId)", span="57-57"];
m9_67 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="57-57"];
m9_69 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="57-57"];
m9_72 [cluster="lambda expression", file="HangFireConfig.cs", label="new ProcessingJobsPage()", span="59-59"];
m9_73 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="59-59"];
m9_76 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName))", span="60-61"];
m9_77 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="60-61"];
m9_79 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Delete(jobId, ProcessingState.StateName)", span="61-61"];
m9_78 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="61-61"];
m9_80 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="61-61"];
m9_83 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName))", span="63-64"];
m9_84 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="63-64"];
m9_86 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Requeue(jobId, ProcessingState.StateName)", span="64-64"];
m9_85 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="64-64"];
m9_87 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="64-64"];
m9_90 [cluster="lambda expression", file="HangFireConfig.cs", label="new ScheduledJobsPage()", span="66-66"];
m9_91 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="66-66"];
m9_94 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName))", span="68-69"];
m9_95 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="68-69"];
m9_97 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Requeue(jobId, ScheduledState.StateName)", span="69-69"];
m9_96 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="69-69"];
m9_98 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="69-69"];
m9_100 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName))", span="71-72"];
m9_101 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="71-72"];
m9_103 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Delete(jobId, ScheduledState.StateName)", span="72-72"];
m9_102 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="72-72"];
m9_104 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="72-72"];
m9_106 [cluster="lambda expression", file="HangFireConfig.cs", label="new ServersPage()", span="74-74"];
m9_107 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="74-74"];
m9_110 [cluster="lambda expression", file="HangFireConfig.cs", label="new SucceededJobs()", span="75-75"];
m9_111 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="75-75"];
m9_114 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName))", span="76-77"];
m9_115 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="76-77"];
m9_117 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Requeue(jobId, SucceededState.StateName)", span="77-77"];
m9_116 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="77-77"];
m9_118 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="77-77"];
m9_120 [cluster="lambda expression", file="HangFireConfig.cs", label="new FailedJobsPage()", span="79-79"];
m9_121 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="79-79"];
m9_124 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName))", span="81-82"];
m9_125 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="81-82"];
m9_127 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Requeue(jobId, FailedState.StateName)", span="82-82"];
m9_126 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="82-82"];
m9_128 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="82-82"];
m9_130 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName))", span="84-85"];
m9_131 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="84-85"];
m9_133 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Delete(jobId, FailedState.StateName)", span="85-85"];
m9_132 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="85-85"];
m9_134 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="85-85"];
m9_136 [cluster="lambda expression", file="HangFireConfig.cs", label="new DeletedJobsPage()", span="87-87"];
m9_137 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="87-87"];
m9_140 [cluster="lambda expression", file="HangFireConfig.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName))", span="89-90"];
m9_141 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="89-90"];
m9_143 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Requeue(jobId, DeletedState.StateName)", span="90-90"];
m9_142 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="90-90"];
m9_144 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="90-90"];
m9_146 [cluster="lambda expression", file="HangFireConfig.cs", label="new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value))", span="94-94"];
m9_150 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Requeue(x.Groups[''JobId''].Value)", span="94-94"];
m9_147 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="94-94"];
m9_149 [cluster="lambda expression", file="HangFireConfig.cs", label="Entry lambda expression", span="94-94"];
m9_151 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="94-94"];
m9_153 [cluster="lambda expression", file="HangFireConfig.cs", label="new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value))", span="98-98"];
m9_156 [cluster="lambda expression", file="HangFireConfig.cs", label="BackgroundJob.Delete(x.Groups[''JobId''].Value)", span="98-98"];
m9_154 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="98-98"];
m9_157 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="98-98"];
m9_159 [cluster="lambda expression", file="HangFireConfig.cs", label="new JavaScriptHandler()", span="100-100"];
m9_160 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="100-100"];
m9_163 [cluster="lambda expression", file="HangFireConfig.cs", label="new StyleSheetHandler()", span="101-101"];
m9_164 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="101-101"];
m9_167 [cluster="lambda expression", file="HangFireConfig.cs", label="new FontsHandler(x.Groups[''File''].Value)", span="105-105"];
m9_168 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="105-105"];
m9_171 [cluster="lambda expression", file="HangFireConfig.cs", label="new JsonStats()", span="109-109"];
m9_172 [cluster="lambda expression", file="HangFireConfig.cs", label="Exit lambda expression", span="109-109"];
m9_161 [cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="HangFireConfig.cs", label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33"];
m9_214 [cluster="string.Equals(string, System.StringComparison)", file="HangFireConfig.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m9_55 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m9_182 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="Entry HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124"];
m9_183 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="context == null", span="126-126"];
m9_185 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="!HangFireConfiguration.EnableRemoteMonitorAccess && !context.Request.IsLocal", span="128-128"];
m9_186 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="return HttpStatusHandler.Process(context, HttpStatusCode.Unauthorized);", span="130-130"];
m9_187 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="context.Items.Add(''GenerationStartedAt'', DateTime.UtcNow)", span="133-133"];
m9_188 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="var request = context.Request", span="135-135"];
m9_192 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="return HttpStatusHandler.Process(context, HttpStatusCode.NotFound);", span="143-143"];
m9_184 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="throw new ArgumentNullException(''context'');", span="126-126"];
m9_189 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="var resource = request.PathInfo.Length == 0\r\n                ? String.Empty\r\n                : request.PathInfo.ToLowerInvariant()", span="136-138"];
m9_190 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="var handler = FindHandler(resource)", span="140-140"];
m9_191 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="handler == null", span="141-141"];
m9_193 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="return handler;", span="146-146"];
m9_194 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124"];
m9_108 [cluster="HangFire.Web.Pages.ServersPage.ServersPage()", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.ServersPage.ServersPage()", span="53-53"];
m9_178 [cluster="System.Collections.Generic.List<T>.Add(T)", file="HangFireConfig.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_198 [cluster="Unk.ToLowerInvariant", file="HangFireConfig.cs", label="Entry Unk.ToLowerInvariant", span=""];
m9_35 [cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="HangFireConfig.cs", label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6"];
m9_81 [cluster="HangFire.BackgroundJob.Delete(string, string)", file="HangFireConfig.cs", label="Entry HangFire.BackgroundJob.Delete(string, string)", span="182-182"];
m9_224 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="HangFireConfig.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184"];
m9_225 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="HangFireConfig.cs", label="return String.Format(''{0}.{1}'', GetContentFolderNamespace(contentFolder), resourceName);", span="186-186"];
m9_226 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184"];
m9_199 [cluster="Unk.FindHandler", file="HangFireConfig.cs", label="Entry Unk.FindHandler", span=""];
m9_174 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="HangFireConfig.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112"];
m9_175 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="HangFireConfig.cs", label="PathHandlerFactories.Add(new Tuple<string, Func<Match, IHttpHandler>>(\r\n                pathPattern, handlerFactory))", span="115-116"];
m9_176 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112"];
m9_30 [cluster="Unk.RegisterDefaultPathHandlerFactory", file="HangFireConfig.cs", label="Entry Unk.RegisterDefaultPathHandlerFactory", span=""];
m9_227 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="HangFireConfig.cs", label="Entry HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189"];
m9_228 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="HangFireConfig.cs", label="Exit HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189"];
m9_88 [cluster="HangFire.BackgroundJob.Requeue(string, string)", file="HangFireConfig.cs", label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="215-215"];
m9_229 [file="HangFireConfig.cs", label="System.Text.RegularExpressions.Match", span=""];
m9_230 [file="HangFireConfig.cs", label="System.Text.RegularExpressions.Match", span=""];
m9_231 [file="HangFireConfig.cs", label="HangFire.Web.HangFirePageFactory", span=""];
m10_70 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="HistoryStatisticsFilter.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m10_104 [cluster="System.Collections.Generic.List<T>.List()", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_121 [cluster="long.Parse(string)", file="HistoryStatisticsFilter.cs", label="Entry long.Parse(string)", span="0-0"];
m10_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="329-329"];
m10_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="331-336"];
m10_184 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="var jobs = _connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="338-341"];
m10_185 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="343-343"];
m10_186 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label=jobs, span="345-345"];
m10_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="347-354"];
m10_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="return new JobList<FetchedJobDto>(result);", span="357-357"];
m10_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="329-329"];
m10_71 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m10_52 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m10_232 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="415-415"];
m10_233 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="var stats = new StatisticsDto()", span="417-417"];
m10_234 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\n''", span="419-426"];
m10_238 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="434-434"];
m10_239 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Failed = getCountIfExists(FailedState.StateName)", span="435-435"];
m10_240 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="436-436"];
m10_241 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="437-437"];
m10_242 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Servers = multi.Read<int>().Single()", span="439-439"];
m10_243 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="441-441"];
m10_244 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", span="442-442"];
m10_245 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="stats.Queues = _queueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi(_connection).GetQueues())\r\n                .Count()", span="445-447"];
m10_246 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="return stats;", span="449-449"];
m10_235 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="var multi = _connection.QueryMultiple(sql)", span="428-428"];
m10_236 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="430-430"];
m10_237 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="432-432"];
m10_247 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="415-415"];
m10_50 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m10_93 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="185-185"];
m10_94 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="HistoryStatisticsFilter.cs", label="return GetTimelineStats(''failed'');", span="187-187"];
m10_95 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="185-185"];
m10_113 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m10_266 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m10_8 [cluster="Unk.EnlistTransaction", file="HistoryStatisticsFilter.cs", label="Entry Unk.EnlistTransaction", span=""];
m10_198 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="452-452"];
m10_267 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var endDate = DateTime.UtcNow", span="454-454"];
m10_274 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="462-462"];
m10_268 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var dates = new List<DateTime>()", span="455-455"];
m10_271 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="dates.Add(endDate)", span="458-458"];
m10_272 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="endDate = endDate.AddHours(-1)", span="459-459"];
m10_269 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var i = 0", span="456-456"];
m10_282 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="i < dates.Count", span="480-480"];
m10_284 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="result.Add(dates[i], value)", span="483-483"];
m10_270 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="i < 24", span="456-456"];
m10_273 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="i++", span="456-456"];
m10_275 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="464-467"];
m10_276 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="469-472"];
m10_277 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label=keys, span="474-474"];
m10_278 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="!valuesMap.ContainsKey(key)", span="476-476"];
m10_279 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="valuesMap.Add(key, 0)", span="476-476"];
m10_283 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="482-482"];
m10_280 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var result = new Dictionary<DateTime, long>()", span="479-479"];
m10_281 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var i = 0", span="480-480"];
m10_286 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="return result;", span="486-486"];
m10_285 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="i++", span="480-480"];
m10_287 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="452-452"];
m10_192 [cluster="Unk.ToString", file="HistoryStatisticsFilter.cs", label="Entry Unk.ToString", span=""];
m10_202 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="370-370"];
m10_203 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="372-375"];
m10_204 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="377-377"];
m10_205 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="379-379"];
m10_208 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="382-382"];
m10_209 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="var history =\r\n                    multi.Read<SqlState>()\r\n                        .ToList()\r\n                        .Select(x => new StateHistoryDto\r\n                         {\r\n                             StateName = x.Name,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         })\r\n                        .ToList()", span="383-393"];
m10_206 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="job == null", span="380-380"];
m10_210 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="return new JobDetailsDto\r\n                {\r\n                    CreatedAt = job.CreatedAt,\r\n                    Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="395-401"];
m10_207 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="return null;", span="380-380"];
m10_211 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="370-370"];
m10_251 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m10_58 [cluster="Unk.DeserializeJobs", file="HistoryStatisticsFilter.cs", label="Entry Unk.DeserializeJobs", span=""];
m10_40 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="93-93"];
m10_41 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="HistoryStatisticsFilter.cs", label="return GetNumberOfJobsByStateName(ProcessingState.StateName);", span="95-95"];
m10_42 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="93-93"];
m10_195 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="360-360"];
m10_196 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="HistoryStatisticsFilter.cs", label="return GetHourlyTimelineStats(''succeeded'');", span="362-362"];
m10_197 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="360-360"];
m10_181 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m10_249 [cluster="Unk.Read", file="HistoryStatisticsFilter.cs", label="Entry Unk.Read", span=""];
m10_81 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m10_114 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="231-231"];
m10_115 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="HistoryStatisticsFilter.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="233-244"];
m10_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="231-231"];
m10_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="214-214"];
m10_107 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="HistoryStatisticsFilter.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="216-228"];
m10_108 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="214-214"];
m10_262 [cluster="Unk.ContainsKey", file="HistoryStatisticsFilter.cs", label="Entry Unk.ContainsKey", span=""];
m10_88 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m10_146 [cluster="Unk.EnqueuedJobs", file="HistoryStatisticsFilter.cs", label="Entry Unk.EnqueuedJobs", span=""];
m10_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="180-180"];
m10_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="HistoryStatisticsFilter.cs", label="return GetTimelineStats(''succeeded'');", span="182-182"];
m10_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="180-180"];
m10_68 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m10_27 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="69-69"];
m10_28 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="HistoryStatisticsFilter.cs", label="var queueApi = GetQueueApi(queue)", span="71-71"];
m10_29 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="HistoryStatisticsFilter.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="72-72"];
m10_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="HistoryStatisticsFilter.cs", label="return counters.FetchedCount ?? 0;", span="74-74"];
m10_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="69-69"];
m10_51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_248 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m10_250 [cluster="System.Func<T, TResult>.Invoke(T)", file="HistoryStatisticsFilter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m10_72 [cluster="int.ToString()", file="HistoryStatisticsFilter.cs", label="Entry int.ToString()", span="0-0"];
m10_32 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="77-77"];
m10_33 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="HistoryStatisticsFilter.cs", label="return GetNumberOfJobsByStateName(FailedState.StateName);", span="79-79"];
m10_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="77-77"];
m10_105 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m10_59 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="134-134"];
m10_60 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="138-138"];
m10_61 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label=jobs, span="140-140"];
m10_63 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="143-143"];
m10_64 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="145-146"];
m10_65 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="return new JobList<TDto>(result);", span="149-149"];
m10_62 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="142-142"];
m10_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="134-134"];
m10_6 [cluster="TransactionScope.cstr", file="HistoryStatisticsFilter.cs", label="Entry TransactionScope.cstr", span=""];
m10_141 [cluster="Unk.ToArray", file="HistoryStatisticsFilter.cs", label="Entry Unk.ToArray", span=""];
m10_325 [cluster="System.DateTime.AddDays(double)", file="HistoryStatisticsFilter.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m10_15 [cluster="Unk.Dispose", file="HistoryStatisticsFilter.cs", label="Entry Unk.Dispose", span=""];
m10_215 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m10_343 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m10_25 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="529-529"];
m10_339 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="HistoryStatisticsFilter.cs", label="var provider = _queueProviders.GetProvider(queueName)", span="531-531"];
m10_340 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="HistoryStatisticsFilter.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi(_connection)", span="532-532"];
m10_341 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="HistoryStatisticsFilter.cs", label="return monitoringApi;", span="534-534"];
m10_342 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="529-529"];
m10_128 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m10_336 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="512-512"];
m10_47 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="103-108"];
m10_48 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="103-108"];
m10_49 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="103-108"];
m10_85 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="172-177"];
m10_86 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="172-177"];
m10_87 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="172-177"];
m10_109 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="220-228"];
m10_110 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="220-228"];
m10_111 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="220-228"];
m10_117 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="237-244"];
m10_118 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="237-244"];
m10_119 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="237-244"];
m10_125 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="253-257"];
m10_126 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                }", span="253-257"];
m10_127 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="253-257"];
m10_147 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="263-263"];
m10_151 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="264-264"];
m10_155 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="264-264"];
m10_158 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="265-265"];
m10_148 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.GetJobQueueMonitoringApi(_connection)", span="263-263"];
m10_149 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="263-263"];
m10_152 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.GetQueues()", span="264-264"];
m10_153 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="264-264"];
m10_156 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new { Monitoring = monitoring, Queue = queue }", span="264-264"];
m10_157 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="264-264"];
m10_159 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.Queue", span="265-265"];
m10_160 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="265-265"];
m10_172 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="311-318"];
m10_173 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName \r\n                        ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="311-318"];
m10_174 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="311-318"];
m10_216 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="382-382"];
m10_219 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="382-382"];
m10_222 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="386-392"];
m10_217 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.Name", span="382-382"];
m10_218 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="382-382"];
m10_220 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.Value", span="382-382"];
m10_221 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="382-382"];
m10_223 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="new StateHistoryDto\r\n                         {\r\n                             StateName = x.Name,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         }", span="386-392"];
m10_224 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="386-392"];
m10_253 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="430-430"];
m10_256 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="430-430"];
m10_260 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="432-432"];
m10_263 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="446-446"];
m10_254 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.State", span="430-430"];
m10_255 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="430-430"];
m10_257 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.Count", span="430-430"];
m10_258 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="430-430"];
m10_259 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="432-432"];
m10_261 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="432-432"];
m10_264 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.GetJobQueueMonitoringApi(_connection).GetQueues()", span="446-446"];
m10_265 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="446-446"];
m10_294 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="462-462"];
m10_293 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="462-462"];
m10_298 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="472-472"];
m10_301 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="472-472"];
m10_295 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="462-462"];
m10_299 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="(string)x.Key", span="472-472"];
m10_300 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="472-472"];
m10_302 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="(long)x.Count", span="472-472"];
m10_303 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="472-472"];
m10_330 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="502-502"];
m10_326 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="501-501"];
m10_329 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="502-502"];
m10_333 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="512-512"];
m10_327 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.ToString(''yyyy-MM-dd'')", span="501-501"];
m10_328 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="501-501"];
m10_331 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="502-502"];
m10_334 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="(string)x.Key", span="512-512"];
m10_335 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="512-512"];
m10_337 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="(long)x.Count", span="512-512"];
m10_338 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="512-512"];
m10_145 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m10_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_57 [cluster="Unk.ToList", file="HistoryStatisticsFilter.cs", label="Entry Unk.ToList", span=""];
m10_332 [cluster="Unk.Format", file="HistoryStatisticsFilter.cs", label="Entry Unk.Format", span=""];
m10_46 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="111-111"];
m10_53 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="117-124"];
m10_54 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="var jobs = _connection.Query<SqlJob>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="126-129"];
m10_55 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="return DeserializeJobs(jobs, selector);", span="131-131"];
m10_56 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="111-111"];
m10_193 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m10_296 [cluster="System.DateTime.ToString(string)", file="HistoryStatisticsFilter.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m10_176 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="321-321"];
m10_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="var queueApi = GetQueueApi(queue)", span="323-323"];
m10_178 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="324-324"];
m10_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="return FetchedJobs(fetchedJobIds);", span="326-326"];
m10_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="321-321"];
m10_142 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="HistoryStatisticsFilter.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m10_292 [cluster="Unk.ElementAt", file="HistoryStatisticsFilter.cs", label="Entry Unk.ElementAt", span=""];
m10_9 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="49-49"];
m10_10 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="HistoryStatisticsFilter.cs", label="_transaction.Complete()", span="51-51"];
m10_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="HistoryStatisticsFilter.cs", label="_transaction.Dispose()", span="52-52"];
m10_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="HistoryStatisticsFilter.cs", label="_connection.Dispose()", span="53-53"];
m10_13 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="49-49"];
m10_167 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="295-295"];
m10_168 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="297-302"];
m10_169 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="var jobs = _connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="304-307"];
m10_170 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName \r\n                        ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="309-318"];
m10_171 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="295-295"];
m10_191 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="HistoryStatisticsFilter.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m10_289 [cluster="Unk.Query", file="HistoryStatisticsFilter.cs", label="Entry Unk.Query", span=""];
m10_43 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="98-98"];
m10_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="HistoryStatisticsFilter.cs", label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="100-108"];
m10_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="98-98"];
m10_290 [cluster="Unk.Add", file="HistoryStatisticsFilter.cs", label="Entry Unk.Add", span=""];
m10_14 [cluster="Unk.Complete", file="HistoryStatisticsFilter.cs", label="Entry Unk.Complete", span=""];
m10_7 [cluster="TransactionOptions.cstr", file="HistoryStatisticsFilter.cs", label="Entry TransactionOptions.cstr", span=""];
m10_190 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="HistoryStatisticsFilter.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m10_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m10_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="HistoryStatisticsFilter.cs", label="_connection = connection", span="40-40"];
m10_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="HistoryStatisticsFilter.cs", label="_queueProviders = queueProviders", span="41-41"];
m10_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="HistoryStatisticsFilter.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="42-44"];
m10_4 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="HistoryStatisticsFilter.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="46-46"];
m10_5 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m10_288 [cluster="System.DateTime.AddHours(double)", file="HistoryStatisticsFilter.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m10_16 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="56-56"];
m10_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="HistoryStatisticsFilter.cs", label="return GetNumberOfJobsByStateName(ScheduledState.StateName);", span="58-58"];
m10_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="56-56"];
m10_212 [cluster="Unk.QueryMultiple", file="HistoryStatisticsFilter.cs", label="Entry Unk.QueryMultiple", span=""];
m10_120 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m10_82 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="167-167"];
m10_83 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="HistoryStatisticsFilter.cs", label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="169-177"];
m10_84 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="167-167"];
m10_229 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="410-410"];
m10_230 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="HistoryStatisticsFilter.cs", label="return GetNumberOfJobsByStateName(DeletedState.StateName);", span="412-412"];
m10_231 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="410-410"];
m10_161 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m10_162 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="var queueApi = GetQueueApi(queue)", span="289-289"];
m10_163 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="290-290"];
m10_164 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="return EnqueuedJobs(enqueuedJobIds);", span="292-292"];
m10_165 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m10_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="190-190"];
m10_97 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="192-194"];
m10_98 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label="var result = new List<ServerDto>()", span="196-196"];
m10_99 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label=servers, span="198-198"];
m10_101 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="201-208"];
m10_102 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label="return result;", span="211-211"];
m10_100 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="200-200"];
m10_103 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="190-190"];
m10_297 [cluster="string.Format(string, object, object)", file="HistoryStatisticsFilter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_139 [cluster="Unk.SelectMany", file="HistoryStatisticsFilter.cs", label="Entry Unk.SelectMany", span=""];
m10_214 [cluster="Unk.ToDictionary", file="HistoryStatisticsFilter.cs", label="Entry Unk.ToDictionary", span=""];
m10_226 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="405-405"];
m10_227 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="HistoryStatisticsFilter.cs", label="return GetNumberOfJobsByStateName(SucceededState.StateName);", span="407-407"];
m10_228 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="405-405"];
m10_69 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="152-152"];
m10_75 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="HistoryStatisticsFilter.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="154-154"];
m10_76 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="HistoryStatisticsFilter.cs", label="data.Arguments = arguments", span="155-155"];
m10_77 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="HistoryStatisticsFilter.cs", label="return data.Deserialize();", span="159-159"];
m10_78 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="HistoryStatisticsFilter.cs", label=JobLoadException, span="161-161"];
m10_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="HistoryStatisticsFilter.cs", label="return null;", span="163-163"];
m10_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="152-152"];
m10_175 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m10_112 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m10_26 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m10_38 [cluster="Unk.>", file="HistoryStatisticsFilter.cs", label="Entry Unk.>", span=""];
m10_143 [cluster="Unk.GetEnqueuedJobIds", file="HistoryStatisticsFilter.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m10_140 [cluster="Unk.OrderBy", file="HistoryStatisticsFilter.cs", label="Entry Unk.OrderBy", span=""];
m10_144 [cluster="Unk.GetEnqueuedAndFetchedCount", file="HistoryStatisticsFilter.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m10_154 [cluster="Unk.GetQueues", file="HistoryStatisticsFilter.cs", label="Entry Unk.GetQueues", span=""];
m10_92 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="489-489"];
m10_304 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var endDate = DateTime.UtcNow.Date", span="491-491"];
m10_311 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="502-502"];
m10_305 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var startDate = endDate.AddDays(-7)", span="492-492"];
m10_307 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="startDate <= endDate", span="495-495"];
m10_308 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="dates.Add(endDate)", span="497-497"];
m10_309 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="endDate = endDate.AddDays(-1)", span="498-498"];
m10_306 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var dates = new List<DateTime>()", span="493-493"];
m10_310 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="501-501"];
m10_321 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="result.Add(dates[i], value)", span="523-523"];
m10_319 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="i < stringDates.Count", span="520-520"];
m10_312 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="504-507"];
m10_313 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="509-512"];
m10_314 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label=keys, span="514-514"];
m10_315 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="!valuesMap.ContainsKey(key)", span="516-516"];
m10_316 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="valuesMap.Add(key, 0)", span="516-516"];
m10_320 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="522-522"];
m10_317 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var result = new Dictionary<DateTime, long>()", span="519-519"];
m10_318 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="var i = 0", span="520-520"];
m10_323 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="return result;", span="526-526"];
m10_322 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="i++", span="520-520"];
m10_324 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="489-489"];
m10_291 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_74 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m10_122 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="247-247"];
m10_123 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="HistoryStatisticsFilter.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                });", span="249-257"];
m10_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="247-247"];
m10_199 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="365-365"];
m10_200 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="HistoryStatisticsFilter.cs", label="return GetHourlyTimelineStats(''failed'');", span="367-367"];
m10_201 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="365-365"];
m10_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="61-61"];
m10_21 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="HistoryStatisticsFilter.cs", label="var queueApi = GetQueueApi(queue)", span="63-63"];
m10_22 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="HistoryStatisticsFilter.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="64-64"];
m10_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="HistoryStatisticsFilter.cs", label="return counters.EnqueuedCount ?? 0;", span="66-66"];
m10_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="61-61"];
m10_166 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m10_252 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m10_138 [cluster="Unk.Select", file="HistoryStatisticsFilter.cs", label="Entry Unk.Select", span=""];
m10_150 [cluster="Unk.GetJobQueueMonitoringApi", file="HistoryStatisticsFilter.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m10_225 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m10_67 [cluster="System.Collections.Generic.List<T>.List(int)", file="HistoryStatisticsFilter.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m10_39 [cluster="Unk.Single", file="HistoryStatisticsFilter.cs", label="Entry Unk.Single", span=""];
m10_129 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="260-260"];
m10_130 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="var tuples = _queueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi(_connection))\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="262-266"];
m10_131 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="268-268"];
m10_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label=tuples, span="270-270"];
m10_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = EnqueuedJobs(enqueuedJobIds)\r\n                })", span="275-281"];
m10_136 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="return result;", span="284-284"];
m10_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="272-272"];
m10_134 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="273-273"];
m10_137 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="260-260"];
m10_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="82-82"];
m10_35 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="HistoryStatisticsFilter.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="84-85"];
m10_36 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="HistoryStatisticsFilter.cs", label="return _connection.Query<int>(\r\n                sqlQuery,\r\n                new { state = stateName })\r\n                .Single();", span="87-90"];
m10_37 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="82-82"];
m10_213 [cluster="Unk.SingleOrDefault", file="HistoryStatisticsFilter.cs", label="Entry Unk.SingleOrDefault", span=""];
m10_194 [cluster="Unk.DeserializeJob", file="HistoryStatisticsFilter.cs", label="Entry Unk.DeserializeJob", span=""];
m10_344 [file="HistoryStatisticsFilter.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m10_345 [file="HistoryStatisticsFilter.cs", label=countByStates, span=""];
m10_346 [file="HistoryStatisticsFilter.cs", label=string, span=""];
m10_347 [file="HistoryStatisticsFilter.cs", label=string, span=""];
m13_0 [cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="IClientJobExceptionFilter.cs", label="Entry HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4"];
m13_1 [cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="IClientJobExceptionFilter.cs", label="Exit HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4"];
m14_2 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="IClientJobFilter.cs", label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5"];
m14_3 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="IClientJobFilter.cs", label="Exit HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5"];
m14_0 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="IClientJobFilter.cs", label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4"];
m14_1 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="IClientJobFilter.cs", label="Exit HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4"];
m15_2 [cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IJobStateAppliedFilter.cs", label="Entry HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m15_3 [cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IJobStateAppliedFilter.cs", label="Exit HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m15_0 [cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IJobStateAppliedFilter.cs", label="Entry HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m15_1 [cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IJobStateAppliedFilter.cs", label="Exit HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m16_0 [cluster="HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IJobStateChangingFilter.cs", label="Entry HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m16_1 [cluster="HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IJobStateChangingFilter.cs", label="Exit HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m19_0 [cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="IServerJobExceptionFilter.cs", label="Entry HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4"];
m19_1 [cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="IServerJobExceptionFilter.cs", label="Exit HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4"];
m20_0 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="IServerJobFilter.cs", label="Entry HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="4-4"];
m20_1 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="IServerJobFilter.cs", label="Exit HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="4-4"];
m20_2 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="IServerJobFilter.cs", label="Entry HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="5-5"];
m20_3 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="IServerJobFilter.cs", label="Exit HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="5-5"];
m21_8 [cluster="Hangfire.JobStorage.GetConnection()", file="JobClient.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m21_0 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="JobClient.cs", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26"];
m21_1 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", color=red, community=0, file="JobClient.cs", label="0: _heartbeatInterval = heartbeatInterval", span="28-28"];
m21_2 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="JobClient.cs", label="Exit Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26"];
m21_3 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClient.cs", label="Entry Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m21_4 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="JobClient.cs", label="1: var connection = context.Storage.GetConnection()", span="33-33"];
m21_5 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="JobClient.cs", label="3: connection.Heartbeat(context.ServerId)", span="35-35"];
m21_6 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="JobClient.cs", label="3: context.Sleep(_heartbeatInterval)", span="38-38"];
m21_7 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClient.cs", label="Exit Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m21_10 [cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="JobClient.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23"];
m21_11 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="JobClient.cs", label="Entry Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m21_12 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", color=red, community=0, file="JobClient.cs", label="3: return ''Server Heartbeat'';", span="43-43"];
m21_13 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="JobClient.cs", label="Exit Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m21_9 [cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="JobClient.cs", label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m21_14 [file="JobClient.cs", label="Hangfire.Server.ServerHeartbeat", span=""];
m23_0 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Entry HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", span="8-8"];
m23_1 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", color=red, community=0, file="JobEnqueuedContext.cs", label="1: JobDescriptor = jobDescriptor", span="15-15"];
m23_2 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Canceled = canceled", span="16-16"];
m23_3 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Exception = exception", span="17-17"];
m23_4 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Exit HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", span="8-8"];
m23_5 [file="JobEnqueuedContext.cs", label="HangFire.Filters.JobEnqueuedContext", span=""];
m24_0 [cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="JobEnqueueingContext.cs", label="Entry HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6"];
m24_1 [cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="JobEnqueueingContext.cs", label="0: JobDescriptor = jobDescriptor", span="11-11"];
m24_2 [cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="JobEnqueueingContext.cs", label="Exit HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6"];
m24_3 [file="JobEnqueueingContext.cs", label="HangFire.Filters.JobEnqueueingContext", span=""];
m25_2 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="JobFetcher.cs", label="Entry HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m25_3 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", color=green, community=0, file="JobFetcher.cs", label="1: return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="38-41"];
m25_4 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="JobFetcher.cs", label="Exit HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m25_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_12 [cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="JobFetcher.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6"];
m25_7 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFetcher.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m25_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobFetcher.cs", label="0: context.Transaction.Jobs.Expire(context.JobId, JobExpirationTimeout)", span="49-49"];
m25_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobFetcher.cs", label="3: context.Transaction.Values.Increment(''stats:succeeded'')", span="50-50"];
m25_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFetcher.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m25_11 [cluster="HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="JobFetcher.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="7-7"];
m25_18 [cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="JobFetcher.cs", label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8"];
m25_17 [cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="JobFetcher.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7"];
m25_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFetcher.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53"];
m25_15 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="JobFetcher.cs", label="1: context.Transaction.Jobs.Persist(context.JobId)", span="56-56"];
m25_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFetcher.cs", label="context.Transaction.Values.Decrement(''stats:succeeded'')", span="55-55"];
m25_16 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFetcher.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="53-53"];
m25_6 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFetcher.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m26_119 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="128-128"];
m26_121 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", color=green, community=0, file="JobFetcher.feature.cs", label="3: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="135-157"];
m26_120 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="JobFetcher.feature.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="130-133"];
m26_122 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="128-128"];
m26_15 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="26-26"];
m26_16 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="JobFetcher.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null, _queueProviders))", span="28-29"];
m26_17 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="JobFetcher.feature.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="31-31"];
m26_18 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="26-26"];
m26_293 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="322-322"];
m26_294 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="324-335"];
m26_295 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="322-322"];
m26_50 [cluster="Unk.GetTestJob", file="JobFetcher.feature.cs", label="Entry Unk.GetTestJob", span=""];
m26_7 [cluster="Mock<IPersistentJobQueue>.cstr", file="JobFetcher.feature.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m26_103 [cluster="Mock<IState>.cstr", file="JobFetcher.feature.cs", label="Entry Mock<IState>.cstr", span=""];
m26_51 [cluster="System.DateTime.AddMinutes(double)", file="JobFetcher.feature.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m26_280 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m26_393 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="453-453"];
m26_394 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="455-467"];
m26_395 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="453-453"];
m26_380 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181"];
m26_36 [cluster="Unk.UseConnection", file="JobFetcher.feature.cs", label="Entry Unk.UseConnection", span=""];
m26_19 [cluster="Unk.Equal", file="JobFetcher.feature.cs", label="Entry Unk.Equal", span=""];
m26_60 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="67-67"];
m26_62 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="74-86"];
m26_61 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="JobFetcher.feature.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="69-72"];
m26_63 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="67-67"];
m26_32 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="44-44"];
m26_34 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="51-63"];
m26_33 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="JobFetcher.feature.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="46-49"];
m26_35 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="44-44"];
m26_318 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160"];
m26_211 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134"];
m26_118 [cluster="Unk.SetJobState", file="JobFetcher.feature.cs", label="Entry Unk.SetJobState", span=""];
m26_153 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="161-161"];
m26_154 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", color=green, community=0, file="JobFetcher.feature.cs", label="3: UseConnection(sql =>\r\n            {\r\n                var correctJobQueue = new Mock<IPersistentJobQueue>();\r\n                var correctProvider = new Mock<IPersistentJobQueueProvider>();\r\n                correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object);\r\n\r\n                _queueProviders.Add(correctProvider.Object, new [] { ''default'' });\r\n\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''));\r\n            })", span="163-175"];
m26_155 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="161-161"];
m26_441 [cluster="Unk.ToArray", file="JobFetcher.feature.cs", label="Entry Unk.ToArray", span=""];
m26_212 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="221-221"];
m26_213 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=0, file="JobFetcher.feature.cs", label="3: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="223-234"];
m26_214 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="221-221"];
m26_78 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="90-90"];
m26_80 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="97-124"];
m26_79 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="JobFetcher.feature.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="92-95"];
m26_81 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="90-90"];
m26_344 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="388-388"];
m26_345 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="390-401"];
m26_346 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="388-388"];
m26_419 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="488-488"];
m26_420 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="490-501"];
m26_421 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="488-488"];
m26_464 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="546-546"];
m26_465 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="548-559"];
m26_466 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="546-546"];
m26_59 [cluster="Unk.ExpireJob", file="JobFetcher.feature.cs", label="Entry Unk.ExpireJob", span=""];
m26_13 [cluster="Unk.>", file="JobFetcher.feature.cs", label="Entry Unk.>", span=""];
m26_194 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="201-201"];
m26_195 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", color=green, community=0, file="JobFetcher.feature.cs", label="0: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="203-217"];
m26_196 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="201-201"];
m26_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m26_476 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="563-563"];
m26_477 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="565-576"];
m26_478 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="563-563"];
m26_504 [cluster="System.Action<T>.Invoke(T)", file="JobFetcher.feature.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m26_500 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="596-596"];
m26_502 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="JobFetcher.feature.cs", label="action(connection)", span="600-600"];
m26_501 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="JobFetcher.feature.cs", label="var connection = ConnectionUtils.CreateConnection()", span="598-598"];
m26_503 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="596-596"];
m26_449 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195"];
m26_46 [cluster="Unk.Query", file="JobFetcher.feature.cs", label="Entry Unk.Query", span=""];
m26_224 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="238-238"];
m26_225 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", color=green, community=0, file="JobFetcher.feature.cs", label="3: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="240-249"];
m26_226 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="238-238"];
m26_381 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="436-436"];
m26_382 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="438-449"];
m26_383 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="436-436"];
m26_58 [cluster="System.TimeSpan.FromDays(double)", file="JobFetcher.feature.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m26_176 [cluster="Unk.Enqueue", file="JobFetcher.feature.cs", label="Entry Unk.Enqueue", span=""];
m26_254 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148"];
m26_237 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141"];
m26_267 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="290-290"];
m26_268 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="292-301"];
m26_269 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="290-290"];
m26_48 [cluster="Unk.ToString", file="JobFetcher.feature.cs", label="Entry Unk.ToString", span=""];
m26_319 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="354-354"];
m26_320 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="356-367"];
m26_321 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="354-354"];
m26_152 [cluster="Unk.AddJobState", file="JobFetcher.feature.cs", label="Entry Unk.AddJobState", span=""];
m26_164 [cluster="Unk.Add", file="JobFetcher.feature.cs", label="Entry Unk.Add", span=""];
m26_331 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="371-371"];
m26_332 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="373-384"];
m26_333 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="371-371"];
m26_73 [cluster="Unk.NotNull", file="JobFetcher.feature.cs", label="Entry Unk.NotNull", span=""];
m26_356 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="405-405"];
m26_357 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="407-418"];
m26_358 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="405-405"];
m26_104 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFetcher.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m26_5 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="JobFetcher.feature.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m26_52 [cluster="System.DateTime.AddDays(double)", file="JobFetcher.feature.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m26_343 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174"];
m26_6 [cluster="Unk.Setup", file="JobFetcher.feature.cs", label="Entry Unk.Setup", span=""];
m26_368 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="422-422"];
m26_369 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="424-432"];
m26_370 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="422-422"];
m26_305 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="339-339"];
m26_306 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="341-350"];
m26_307 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="339-339"];
m26_54 [cluster="Unk.Null", file="JobFetcher.feature.cs", label="Entry Unk.Null", span=""];
m26_431 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="505-505"];
m26_432 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="507-523"];
m26_433 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="505-505"];
m26_406 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188"];
m26_509 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50"];
m26_114 [cluster="Unk.SerializeData", file="JobFetcher.feature.cs", label="Entry Unk.SerializeData", span=""];
m26_49 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="604-604"];
m26_505 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="JobFetcher.feature.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection, _queueProviders)", span="608-608"];
m26_506 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="JobFetcher.feature.cs", label="action(transaction)", span="610-610"];
m26_507 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="JobFetcher.feature.cs", label="transaction.Commit()", span="611-611"];
m26_508 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="604-604"];
m26_0 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="16-16"];
m26_3 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="JobFetcher.feature.cs", label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="22-22"];
m26_2 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="JobFetcher.feature.cs", label="defaultProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="19-20"];
m26_1 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="JobFetcher.feature.cs", label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="18-18"];
m26_4 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="16-16"];
m26_9 [cluster="PersistentJobQueueProviderCollection.cstr", file="JobFetcher.feature.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m26_407 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="471-471"];
m26_408 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="473-484"];
m26_409 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="471-471"];
m26_28 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="38-38"];
m26_123 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="135-157"];
m26_124 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="137-137"];
m26_125 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: var state = new Mock<IState>()", span="139-139"];
m26_129 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Commit(sql, x => x.AddJobState(jobId, state.Object))", span="145-145"];
m26_150 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: x.AddJobState(jobId, state.Object)", span="145-145"];
m26_130 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: var job = GetTestJob(sql, jobId)", span="147-147"];
m26_134 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: Assert.Equal((string)jobId, jobState.JobId.ToString())", span="152-152"];
m26_128 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="142-143"];
m26_149 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="145-145"];
m26_131 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.Null(job.StateName)", span="148-148"];
m26_132 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: Assert.Null(job.StateId)", span="149-149"];
m26_133 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: var jobState = sql.Query(''select * from HangFire.State'').Single()", span="151-151"];
m26_135 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.Equal(''State'', jobState.Name)", span="153-153"];
m26_136 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.Equal(''Reason'', jobState.Reason)", span="154-154"];
m26_137 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.NotNull(jobState.CreatedAt)", span="155-155"];
m26_138 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="156-156"];
m26_126 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: state.Setup(x => x.Name).Returns(''State'')", span="140-140"];
m26_127 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: state.Setup(x => x.Reason).Returns(''Reason'')", span="141-141"];
m26_151 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="145-145"];
m26_140 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="140-140"];
m26_143 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="141-141"];
m26_146 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="142-142"];
m26_139 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="135-157"];
m26_141 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: x.Name", span="140-140"];
m26_142 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="140-140"];
m26_144 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: x.Reason", span="141-141"];
m26_145 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="141-141"];
m26_147 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: x.SerializeData()", span="142-142"];
m26_148 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="142-142"];
m26_156 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="163-175"];
m26_161 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="172-172"];
m26_160 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: _queueProviders.Add(correctProvider.Object, new [] { ''default'' })", span="170-170"];
m26_162 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''))", span="174-174"];
m26_169 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="172-172"];
m26_157 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="165-165"];
m26_163 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="163-175"];
m26_173 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="174-174"];
m26_158 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="166-166"];
m26_159 [cluster="lambda expression", file="JobFetcher.feature.cs", label="correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object)", span="167-168"];
m26_170 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: x.AddToQueue(''default'', ''1'')", span="172-172"];
m26_171 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="172-172"];
m26_174 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: x.Enqueue(''default'', ''1'')", span="174-174"];
m26_175 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="174-174"];
m26_183 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="188-197"];
m26_187 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: Assert.Equal(1, record.Value)", span="195-195"];
m26_185 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="192-192"];
m26_186 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''my-key'', record.Key)", span="194-194"];
m26_188 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="196-196"];
m26_197 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="203-217"];
m26_198 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="205-205"];
m26_199 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: var record = sql.Query(''select * from HangFire.Counter'').Single()", span="207-207"];
m26_208 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="205-205"];
m26_200 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: Assert.Equal(''my-key'', record.Key)", span="209-209"];
m26_201 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: Assert.Equal(1, record.Value)", span="210-210"];
m26_202 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: Assert.NotNull(record.ExpireAt)", span="211-211"];
m26_203 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: var expireAt = (DateTime) record.ExpireAt", span="213-213"];
m26_204 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="215-215"];
m26_205 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="216-216"];
m26_206 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="203-217"];
m26_209 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="205-205"];
m26_210 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="205-205"];
m26_215 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="223-234"];
m26_216 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="225-229"];
m26_217 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="231-231"];
m26_220 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="225-229"];
m26_218 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: Assert.Equal(2, recordCount)", span="233-233"];
m26_219 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="223-234"];
m26_221 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: x.IncrementCounter(''my-key'')", span="227-227"];
m26_222 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: x.IncrementCounter(''my-key'')", span="228-228"];
m26_223 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="225-229"];
m26_227 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="240-249"];
m26_228 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: Commit(sql, x => x.DecrementCounter(''my-key''))", span="242-242"];
m26_229 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: var record = sql.Query(''select * from HangFire.Counter'').Single()", span="244-244"];
m26_234 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="242-242"];
m26_230 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: Assert.Equal(''my-key'', record.Key)", span="246-246"];
m26_231 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: Assert.Equal(-1, record.Value)", span="247-247"];
m26_232 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="1: Assert.Equal((DateTime?)null, record.ExpireAt)", span="248-248"];
m26_233 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="240-249"];
m26_235 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: x.DecrementCounter(''my-key'')", span="242-242"];
m26_236 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="242-242"];
m26_241 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="255-269"];
m26_242 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="257-257"];
m26_243 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="0: var record = sql.Query(''select * from HangFire.Counter'').Single()", span="259-259"];
m26_251 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="257-257"];
m26_244 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.Equal(''my-key'', record.Key)", span="261-261"];
m26_245 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.Equal(-1, record.Value)", span="262-262"];
m26_246 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: Assert.NotNull(record.ExpireAt)", span="263-263"];
m26_247 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="3: var expireAt = (DateTime)record.ExpireAt", span="265-265"];
m26_248 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="267-267"];
m26_249 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="268-268"];
m26_250 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="255-269"];
m26_252 [cluster="lambda expression", color=green, community=0, file="JobFetcher.feature.cs", label="2: x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="257-257"];
m26_253 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="257-257"];
m26_21 [cluster="lambda expression", file="JobFetcher.feature.cs", label="new SqlServerWriteOnlyTransaction(null, _queueProviders)", span="29-29"];
m26_40 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="56-56"];
m26_41 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var job = GetTestJob(sql, jobId)", span="58-58"];
m26_43 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="61-61"];
m26_67 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="79-79"];
m26_68 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var job = GetTestJob(sql, jobId)", span="81-81"];
m26_70 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="84-84"];
m26_89 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="108-108"];
m26_90 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var job = GetTestJob(sql, jobId)", span="110-110"];
m26_93 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="114-114"];
m26_184 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="190-190"];
m26_259 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="277-281"];
m26_271 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="294-294"];
m26_285 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="309-313"];
m26_297 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="326-330"];
m26_309 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="343-343"];
m26_323 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="358-362"];
m26_335 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="375-379"];
m26_348 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="392-396"];
m26_360 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="409-413"];
m26_372 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="426-426"];
m26_385 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="440-444"];
m26_397 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="457-462"];
m26_411 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="475-479"];
m26_423 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="492-496"];
m26_435 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="509-516"];
m26_454 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="531-537"];
m26_468 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="550-554"];
m26_480 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="567-571"];
m26_492 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="584-588"];
m26_38 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="53-53"];
m26_39 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m26_65 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="76-76"];
m26_66 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m26_83 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="99-99"];
m26_84 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="100-100"];
m26_96 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="118-118"];
m26_272 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="296-296"];
m26_310 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="345-345"];
m26_324 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="364-364"];
m26_373 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="428-428"];
m26_436 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="518-518"];
m26_260 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="283-283"];
m26_286 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="315-315"];
m26_298 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="332-332"];
m26_336 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="381-381"];
m26_349 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="398-398"];
m26_361 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="415-415"];
m26_386 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="446-446"];
m26_398 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="464-464"];
m26_412 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="481-481"];
m26_424 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="498-498"];
m26_455 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="539-539"];
m26_469 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="556-556"];
m26_481 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="573-573"];
m26_493 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="590-590"];
m26_97 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="119-119"];
m26_85 [cluster="lambda expression", file="JobFetcher.feature.cs", label="var state = new Mock<IState>()", span="102-102"];
m26_91 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''State'', job.StateName)", span="111-111"];
m26_98 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''State'', jobState.Name)", span="120-120"];
m26_99 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="121-121"];
m26_101 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="123-123"];
m26_261 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(2, recordCount)", span="285-285"];
m26_273 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''my-key'', record.Key)", span="298-298"];
m26_274 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''my-value'', record.Value)", span="299-299"];
m26_275 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(0.0, record.Score, 2)", span="300-300"];
m26_287 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(2, recordCount)", span="317-317"];
m26_299 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(1, recordCount)", span="334-334"];
m26_311 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''my-key'', record.Key)", span="347-347"];
m26_312 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''my-value'', record.Value)", span="348-348"];
m26_313 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(3.2, record.Score, 3)", span="349-349"];
m26_325 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(3.2, record.Score, 3)", span="366-366"];
m26_337 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(0, recordCount)", span="383-383"];
m26_350 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(1, recordCount)", span="400-400"];
m26_362 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(1, recordCount)", span="417-417"];
m26_374 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''my-key'', record.Key)", span="430-430"];
m26_375 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''my-value'', record.Value)", span="431-431"];
m26_387 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(2, recordCount)", span="448-448"];
m26_399 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(0, recordCount)", span="466-466"];
m26_413 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(1, recordCount)", span="483-483"];
m26_425 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(1, recordCount)", span="500-500"];
m26_437 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(2, records.Length)", span="520-520"];
m26_438 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''1'', records[0].Value)", span="521-521"];
m26_439 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(''2'', records[1].Value)", span="522-522"];
m26_456 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(2, recordCount)", span="541-541"];
m26_470 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(0, recordCount)", span="558-558"];
m26_482 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(0, recordCount)", span="575-575"];
m26_494 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Equal(1, recordCount)", span="592-592"];
m26_86 [cluster="lambda expression", file="JobFetcher.feature.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="103-103"];
m26_87 [cluster="lambda expression", file="JobFetcher.feature.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="104-104"];
m26_88 [cluster="lambda expression", file="JobFetcher.feature.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="105-106"];
m26_44 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Null(anotherJob.ExpireAt)", span="62-62"];
m26_69 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Null(job.ExpireAt)", span="82-82"];
m26_94 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Null(anotherJob.StateName)", span="115-115"];
m26_95 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.Null(anotherJob.StateId)", span="116-116"];
m26_71 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="85-85"];
m26_92 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.NotNull(job.StateId)", span="112-112"];
m26_100 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.NotNull(jobState.CreatedAt)", span="122-122"];
m26_112 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.SerializeData()", span="105-105"];
m26_166 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="167-167"];
m26_189 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="188-197"];
m26_42 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1))", span="59-59"];
m26_56 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="56-56"];
m26_11 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="19-19"];
m26_167 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="167-167"];
m26_191 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.IncrementCounter(''my-key'')", span="190-190"];
m26_264 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.DecrementCounter(''my-key'')", span="279-279"];
m26_265 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.DecrementCounter(''my-key'')", span="280-280"];
m26_20 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="29-29"];
m26_22 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="29-29"];
m26_37 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="51-63"];
m26_55 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="56-56"];
m26_64 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="74-86"];
m26_74 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="79-79"];
m26_82 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="97-124"];
m26_115 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="108-108"];
m26_190 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="190-190"];
m26_258 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="275-286"];
m26_263 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="277-281"];
m26_270 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="292-301"];
m26_277 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="294-294"];
m26_284 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="307-318"];
m26_289 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="309-313"];
m26_296 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="324-335"];
m26_301 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="326-330"];
m26_308 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="341-350"];
m26_315 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="343-343"];
m26_322 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="356-367"];
m26_327 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="358-362"];
m26_334 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="373-384"];
m26_339 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="375-379"];
m26_347 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="390-401"];
m26_352 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="392-396"];
m26_359 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="407-418"];
m26_364 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="409-413"];
m26_371 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="424-432"];
m26_377 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="426-426"];
m26_384 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="438-449"];
m26_389 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="440-444"];
m26_396 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="455-467"];
m26_401 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="457-462"];
m26_410 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="473-484"];
m26_415 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="475-479"];
m26_422 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="490-501"];
m26_427 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="492-496"];
m26_434 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="507-523"];
m26_442 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="509-516"];
m26_453 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="529-542"];
m26_458 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="531-537"];
m26_467 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="548-559"];
m26_472 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="550-554"];
m26_479 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="565-576"];
m26_484 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="567-571"];
m26_491 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="582-593"];
m26_496 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="584-588"];
m26_75 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.PersistJob(jobId)", span="79-79"];
m26_116 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.SetJobState(jobId, state.Object)", span="108-108"];
m26_102 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="97-124"];
m26_262 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="275-286"];
m26_276 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="292-301"];
m26_288 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="307-318"];
m26_300 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="324-335"];
m26_314 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="341-350"];
m26_326 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="356-367"];
m26_338 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="373-384"];
m26_351 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="390-401"];
m26_363 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="407-418"];
m26_376 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="424-432"];
m26_388 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="438-449"];
m26_400 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="455-467"];
m26_414 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="473-484"];
m26_426 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="490-501"];
m26_440 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="507-523"];
m26_457 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="529-542"];
m26_471 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="548-559"];
m26_483 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="565-576"];
m26_495 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="582-593"];
m26_10 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="19-19"];
m26_105 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="103-103"];
m26_108 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="104-104"];
m26_111 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="105-105"];
m26_45 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="51-63"];
m26_72 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="74-86"];
m26_113 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="105-105"];
m26_168 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="167-167"];
m26_57 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="56-56"];
m26_12 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="19-19"];
m26_192 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="190-190"];
m26_266 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="277-281"];
m26_29 [cluster="lambda expression", file="JobFetcher.feature.cs", label="new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null)", span="38-38"];
m26_76 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="79-79"];
m26_117 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="108-108"];
m26_279 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="294-294"];
m26_278 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="294-294"];
m26_292 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="309-313"];
m26_290 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="311-311"];
m26_291 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="312-312"];
m26_304 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="326-330"];
m26_302 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="328-328"];
m26_303 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="329-329"];
m26_317 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="343-343"];
m26_316 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="343-343"];
m26_330 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="358-362"];
m26_328 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="360-360"];
m26_329 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="361-361"];
m26_342 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="375-379"];
m26_340 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="377-377"];
m26_341 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="378-378"];
m26_355 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="392-396"];
m26_353 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="394-394"];
m26_354 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="395-395"];
m26_367 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="409-413"];
m26_365 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="411-411"];
m26_366 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="412-412"];
m26_379 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="426-426"];
m26_378 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="426-426"];
m26_392 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="440-444"];
m26_390 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="442-442"];
m26_391 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="443-443"];
m26_405 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="457-462"];
m26_402 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="459-459"];
m26_403 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="460-460"];
m26_404 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="461-461"];
m26_418 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="475-479"];
m26_416 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="477-477"];
m26_417 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="478-478"];
m26_430 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="492-496"];
m26_428 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="494-494"];
m26_429 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="495-495"];
m26_448 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="509-516"];
m26_443 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''0'')", span="511-511"];
m26_444 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''1'')", span="512-512"];
m26_445 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''2'')", span="513-513"];
m26_446 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''3'')", span="514-514"];
m26_447 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.TrimList(''my-key'', 1, 2)", span="515-515"];
m26_463 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="531-537"];
m26_459 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''0'')", span="533-533"];
m26_460 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''1'')", span="534-534"];
m26_461 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''2'')", span="535-535"];
m26_462 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.TrimList(''my-key'', 1, 100)", span="536-536"];
m26_475 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="550-554"];
m26_473 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''0'')", span="552-552"];
m26_474 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.TrimList(''my-key'', 1, 100)", span="553-553"];
m26_487 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="567-571"];
m26_485 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''0'')", span="569-569"];
m26_486 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.TrimList(''my-key'', 1, 0)", span="570-570"];
m26_499 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="584-588"];
m26_497 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.InsertToList(''my-key'', ''0'')", span="586-586"];
m26_498 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.TrimList(''another-key'', 1, 0)", span="587-587"];
m26_107 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="103-103"];
m26_106 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.Name", span="103-103"];
m26_110 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="104-104"];
m26_109 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.Reason", span="104-104"];
m26_30 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="38-38"];
m26_450 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="527-527"];
m26_451 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="529-542"];
m26_452 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="527-527"];
m26_238 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="253-253"];
m26_239 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", color=green, community=0, file="JobFetcher.feature.cs", label="0: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="255-269"];
m26_240 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="253-253"];
m26_281 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="305-305"];
m26_282 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="307-318"];
m26_283 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="305-305"];
m26_207 [cluster="System.DateTime.AddHours(double)", file="JobFetcher.feature.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m26_180 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="186-186"];
m26_181 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", color=green, community=0, file="JobFetcher.feature.cs", label="3: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="188-197"];
m26_182 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="186-186"];
m26_47 [cluster="Unk.Single", file="JobFetcher.feature.cs", label="Entry Unk.Single", span=""];
m26_53 [cluster="Unk.True", file="JobFetcher.feature.cs", label="Entry Unk.True", span=""];
m26_488 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="580-580"];
m26_489 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="582-593"];
m26_490 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="580-580"];
m26_172 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119"];
m26_14 [cluster="Unk.GetJobQueue", file="JobFetcher.feature.cs", label="Entry Unk.GetJobQueue", span=""];
m26_31 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m26_193 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127"];
m26_177 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="178-178"];
m26_178 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="JobFetcher.feature.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="180-182"];
m26_179 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="178-178"];
m26_24 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="35-35"];
m26_26 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="JobFetcher.feature.cs", label="Assert.Equal(''queueProviders'', exception.ParamName)", span="40-40"];
m26_25 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="JobFetcher.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null))", span="37-38"];
m26_27 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="35-35"];
m26_8 [cluster="Unk.Returns", file="JobFetcher.feature.cs", label="Entry Unk.Returns", span=""];
m26_77 [cluster="Unk.PersistJob", file="JobFetcher.feature.cs", label="Entry Unk.PersistJob", span=""];
m26_165 [cluster="Unk.Verify", file="JobFetcher.feature.cs", label="Entry Unk.Verify", span=""];
m26_255 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="273-273"];
m26_256 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="JobFetcher.feature.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="275-286"];
m26_257 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="273-273"];
m26_510 [file="JobFetcher.feature.cs", label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span=""];
m26_518 [file="JobFetcher.feature.cs", label=arrangeSql, span=""];
m26_519 [file="JobFetcher.feature.cs", label=jobId, span=""];
m26_520 [file="JobFetcher.feature.cs", label=state, span=""];
m26_511 [file="JobFetcher.feature.cs", label=arrangeSql, span=""];
m26_513 [file="JobFetcher.feature.cs", label=arrangeSql, span=""];
m26_515 [file="JobFetcher.feature.cs", label=arrangeSql, span=""];
m26_512 [file="JobFetcher.feature.cs", label=jobId, span=""];
m26_514 [file="JobFetcher.feature.cs", label=jobId, span=""];
m26_516 [file="JobFetcher.feature.cs", label=jobId, span=""];
m26_517 [file="JobFetcher.feature.cs", label=state, span=""];
m28_4 [cluster="HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="JobFilter.cs", label="Entry HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="12-12"];
m28_5 [cluster="HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="JobFilter.cs", label="Exit HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="12-12"];
m28_0 [cluster="HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="JobFilter.cs", label="Entry HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4"];
m28_1 [cluster="HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="JobFilter.cs", label="Exit HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4"];
m28_6 [cluster="HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="JobFilter.cs", label="Entry HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="16-16"];
m28_7 [cluster="HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="JobFilter.cs", label="Exit HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="16-16"];
m28_2 [cluster="HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="JobFilter.cs", label="Entry HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="8-8"];
m28_3 [cluster="HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="JobFilter.cs", label="Exit HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="8-8"];
m29_0 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m29_1 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Performed = true", span="185-185"];
m29_2 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m29_7 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m29_8 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m29_3 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m29_4 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="A = a", span="196-196"];
m29_5 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="B = b", span="197-197"];
m29_6 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m29_9 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m29_10 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Disposed = true", span="211-211"];
m29_11 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m29_12 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.CorrectJob", span=""];
m29_13 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span=""];
m29_14 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.DisposableJob", span=""];
m31_12 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobPerformedContext.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m31_13 [cluster="Unk.Equal", file="JobPerformedContext.cs", label="Entry Unk.Equal", span=""];
m31_0 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="13-13"];
m31_1 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", color=red, community=0, file="JobPerformedContext.cs", label="0: var type = typeof(InvocationDataFacts)", span="15-15"];
m31_2 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", color=red, community=0, file="JobPerformedContext.cs", label="2: var methodInfo = type.GetMethod(''Sample'')", span="16-16"];
m31_3 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", color=red, community=0, file="JobPerformedContext.cs", label="2: var serializedData = new InvocationData(\r\n                type.AssemblyQualifiedName,\r\n                methodInfo.Name,\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                JobHelper.ToJson(new [] { JobHelper.ToJson(''Hello'') }))", span="18-22"];
m31_5 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobPerformedContext.cs", label="Assert.Equal(type, job.Type)", span="26-26"];
m31_6 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobPerformedContext.cs", label="Assert.Equal(methodInfo, job.Method)", span="27-27"];
m31_4 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", color=red, community=0, file="JobPerformedContext.cs", label="2: var job = serializedData.Deserialize()", span="24-24"];
m31_7 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobPerformedContext.cs", label="Assert.Equal(''Hello'', job.Args[0])", span="28-28"];
m31_8 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="13-13"];
m31_56 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="JobPerformedContext.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="291-291"];
m31_63 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153"];
m31_94 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153"];
m31_9 [cluster="System.Type.GetMethod(string)", file="JobPerformedContext.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m31_49 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143"];
m31_91 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143"];
m31_14 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="32-32"];
m31_15 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="JobPerformedContext.cs", label="var serializedData = new InvocationData(null, null, null, null)", span="34-34"];
m31_16 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="JobPerformedContext.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="36-37"];
m31_17 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="32-32"];
m31_92 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", span="147-147"];
m31_93 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", span="147-147"];
m31_18 [cluster="Unk.>", file="JobPerformedContext.cs", label="Entry Unk.>", span=""];
m31_29 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54"];
m31_30 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="JobPerformedContext.cs", label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''NonExistingMethod'',\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                '''')", span="56-60"];
m31_31 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="JobPerformedContext.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="62-63"];
m31_32 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54"];
m31_64 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92"];
m31_65 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="JobPerformedContext.cs", label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method(''asd'', 123)))", span="94-95"];
m31_66 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="JobPerformedContext.cs", label="var job = serializedData.Deserialize()", span="97-97"];
m31_67 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="JobPerformedContext.cs", label="Assert.False(job.Method.ContainsGenericParameters)", span="99-99"];
m31_68 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92"];
m31_72 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154"];
m31_95 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154"];
m31_58 [cluster="Unk.False", file="JobPerformedContext.cs", label="Entry Unk.False", span=""];
m31_73 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103"];
m31_74 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="JobPerformedContext.cs", label="var serializedData = new InvocationData(\r\n                typeof(IParent).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="105-109"];
m31_75 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="JobPerformedContext.cs", label="var job = serializedData.Deserialize()", span="111-111"];
m31_76 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="JobPerformedContext.cs", label="Assert.Equal(typeof(IParent), job.Type)", span="113-113"];
m31_77 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103"];
m31_45 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobPerformedContext.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70"];
m31_36 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67"];
m31_37 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="var job = Job.FromExpression(() => Sample(''Hello''))", span="69-69"];
m31_38 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="var invocationData = InvocationData.Serialize(job)", span="71-71"];
m31_39 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="Assert.Equal(typeof(InvocationDataFacts).AssemblyQualifiedName, invocationData.Type)", span="73-73"];
m31_40 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="Assert.Equal(''Sample'', invocationData.Method)", span="74-74"];
m31_41 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="Assert.Equal(JobHelper.ToJson(new[] { typeof(string) }), invocationData.ParameterTypes)", span="75-75"];
m31_42 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="Assert.Equal(JobHelper.ToJson(new[] { ''\''Hello\'''' }), invocationData.Arguments)", span="76-76"];
m31_43 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67"];
m31_50 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80"];
m31_51 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="JobPerformedContext.cs", label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method()))", span="82-83"];
m31_52 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="JobPerformedContext.cs", label="var job = serializedData.Deserialize()", span="85-85"];
m31_53 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="JobPerformedContext.cs", label="Assert.False(job.Type.GetTypeInfo().ContainsGenericParameters)", span="87-87"];
m31_54 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="JobPerformedContext.cs", label="Assert.Equal(typeof(string), job.Type.GetGenericArguments()[0])", span="88-88"];
m31_55 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80"];
m31_96 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", span="159-159"];
m31_97 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", span="159-159"];
m31_59 [cluster="System.Type.GetGenericArguments()", file="JobPerformedContext.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m31_11 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobPerformedContext.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m31_57 [cluster="System.Type.GetTypeInfo()", file="JobPerformedContext.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m31_88 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="139-139"];
m31_20 [cluster="lambda expression", file="JobPerformedContext.cs", label="serializedData.Deserialize()", span="37-37"];
m31_19 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="37-37"];
m31_21 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="37-37"];
m31_27 [cluster="lambda expression", file="JobPerformedContext.cs", label="serializedData.Deserialize()", span="50-50"];
m31_26 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="50-50"];
m31_28 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="50-50"];
m31_34 [cluster="lambda expression", file="JobPerformedContext.cs", label="serializedData.Deserialize()", span="63-63"];
m31_33 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="63-63"];
m31_35 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="63-63"];
m31_46 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="69-69"];
m31_47 [cluster="lambda expression", file="JobPerformedContext.cs", label="Sample(''Hello'')", span="69-69"];
m31_48 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="69-69"];
m31_60 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="83-83"];
m31_61 [cluster="lambda expression", file="JobPerformedContext.cs", label="x.Method()", span="83-83"];
m31_62 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="83-83"];
m31_69 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="95-95"];
m31_70 [cluster="lambda expression", file="JobPerformedContext.cs", label="x.Method(''asd'', 123)", span="95-95"];
m31_71 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="95-95"];
m31_89 [cluster="lambda expression", file="JobPerformedContext.cs", label="serializedData.Deserialize()", span="139-139"];
m31_90 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="139-139"];
m31_22 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41"];
m31_23 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="JobPerformedContext.cs", label="var serializedData = new InvocationData(\r\n                ''NonExistingType'',\r\n                ''Perform'',\r\n                '''',\r\n                '''')", span="43-47"];
m31_24 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="JobPerformedContext.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="49-50"];
m31_25 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41"];
m31_83 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131"];
m31_84 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="JobPerformedContext.cs", label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''ListMethod'',\r\n                JobHelper.ToJson(new [] { typeof(IList<string>) }),\r\n                JobHelper.ToJson(new [] { ''asdfasdf'' }))", span="133-137"];
m31_85 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="JobPerformedContext.cs", label="var exception = Assert.Throws<JobLoadException>(() => serializedData.Deserialize())", span="139-139"];
m31_86 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="JobPerformedContext.cs", label="Assert.IsType<JsonReaderException>(exception.InnerException)", span="140-140"];
m31_87 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131"];
m31_78 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="JobPerformedContext.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117"];
m31_79 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="JobPerformedContext.cs", label="var serializedData = new InvocationData(\r\n                typeof(IChild).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="119-123"];
m31_80 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="JobPerformedContext.cs", label="var job = serializedData.Deserialize()", span="125-125"];
m31_81 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="JobPerformedContext.cs", label="Assert.Equal(typeof(IChild), job.Type)", span="127-127"];
m31_82 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="JobPerformedContext.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117"];
m31_10 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobPerformedContext.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31"];
m31_44 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobPerformedContext.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233"];
m31_98 [file="JobPerformedContext.cs", label=serializedData, span=""];
m31_99 [file="JobPerformedContext.cs", label=serializedData, span=""];
m31_100 [file="JobPerformedContext.cs", label=serializedData, span=""];
m31_101 [file="JobPerformedContext.cs", label=serializedData, span=""];
m33_0 [cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="JobPerformingContext.cs", label="Entry HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="6-6"];
m33_1 [cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", color=red, community=0, file="JobPerformingContext.cs", label="1: JobDescriptor = jobDescriptor", span="11-11"];
m33_2 [cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="JobPerformingContext.cs", label="Exit HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="6-6"];
m33_3 [file="JobPerformingContext.cs", label="HangFire.Filters.JobPerformingContext", span=""];
m35_39 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m35_55 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', state.JobId)))", span="99-100"];
m35_47 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Entry HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="77-77"];
m35_48 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="var oldState = redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId), ''State'')", span="82-83"];
m35_49 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="allowedStates.Length > 0 && !allowedStates.Contains(oldState)", span="85-85"];
m35_51 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="var transaction = redis.CreateTransaction()", span="90-90"];
m35_54 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Descriptors[oldState].Unapply(transaction, state.JobId)", span="96-96"];
m35_56 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label=filters, span="102-102"];
m35_58 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="AppendHistory(transaction, state, true)", span="108-108"];
m35_59 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="state.Apply(transaction)", span="110-110"];
m35_60 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label=filters, span="112-112"];
m35_61 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="filter.OnStateApplied(transaction, state)", span="114-114"];
m35_52 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="!String.IsNullOrEmpty(oldState)", span="92-92"];
m35_53 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Descriptors.ContainsKey(oldState)", span="94-94"];
m35_57 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="filter.OnStateUnapplied(transaction, oldState)", span="104-104"];
m35_50 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="return false;", span="87-87"];
m35_62 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="return transaction.Commit();", span="117-117"];
m35_63 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Exit HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="77-77"];
m35_107 [cluster="Unk.EnqueueItemOnList", file="JobState.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m35_99 [cluster="Unk.SetRangeInHash", file="JobState.cs", label="Entry Unk.SetRangeInHash", span=""];
m35_43 [cluster="System.TimeSpan.FromMinutes(double)", file="JobState.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m35_73 [cluster="Unk.Apply", file="JobState.cs", label="Entry Unk.Apply", span=""];
m35_106 [cluster="HangFire.JobHelper.ToJson(object)", file="JobState.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m35_42 [cluster="string.Format(string, object)", file="JobState.cs", label="Entry string.Format(string, object)", span="0-0"];
m35_95 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m35_79 [cluster="Unk.RemoveEntry", file="JobState.cs", label="Entry Unk.RemoveEntry", span=""];
m35_71 [cluster="Unk.OnStateUnapplied", file="JobState.cs", label="Entry Unk.OnStateUnapplied", span=""];
m35_74 [cluster="Unk.OnStateApplied", file="JobState.cs", label="Entry Unk.OnStateApplied", span=""];
m35_16 [cluster="HangFire.States.FailedStateDescriptor.FailedStateDescriptor()", file="JobState.cs", label="Entry HangFire.States.FailedStateDescriptor.FailedStateDescriptor()", span="5-5"];
m35_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m35_18 [cluster="HangFire.States.ProcessingStateDescriptor.ProcessingStateDescriptor()", file="JobState.cs", label="Entry HangFire.States.ProcessingStateDescriptor.ProcessingStateDescriptor()", span="5-5"];
m35_17 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs", label="Entry HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="41-41"];
m35_21 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs", label="Descriptors.Add(stateName, descriptor)", span="44-44"];
m35_22 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs", label="Exit HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="41-41"];
m35_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobState.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m35_69 [cluster="Unk.Unapply", file="JobState.cs", label="Entry Unk.Unapply", span=""];
m35_40 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobState.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m35_103 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="155-157"];
m35_77 [cluster="lambda expression", file="JobState.cs", label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', state.JobId))", span="99-100"];
m35_97 [cluster="lambda expression", file="JobState.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        })", span="139-144"];
m35_101 [cluster="lambda expression", file="JobState.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties)", span="146-148"];
m35_104 [cluster="lambda expression", file="JobState.cs", label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties))", span="155-157"];
m35_76 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="99-100"];
m35_78 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="99-100"];
m35_96 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="139-144"];
m35_98 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="139-144"];
m35_100 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="146-148"];
m35_102 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="146-148"];
m35_105 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="155-157"];
m35_10 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="Entry HangFire.States.JobState.JobState()", span="33-33"];
m35_11 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="RegisterDescriptor(FailedState.Name, new FailedStateDescriptor())", span="35-35"];
m35_12 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="RegisterDescriptor(ProcessingState.Name, new ProcessingStateDescriptor())", span="36-36"];
m35_13 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="RegisterDescriptor(ScheduledState.Name, new ScheduledStateDescriptor())", span="37-37"];
m35_14 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="RegisterDescriptor(SucceededState.Name, new SucceededStateDescriptor())", span="38-38"];
m35_15 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="Exit HangFire.States.JobState.JobState()", span="33-33"];
m35_0 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="JobState.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m35_1 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="JobState.cs", label="Exit Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m35_65 [cluster="Unk.Contains", file="JobState.cs", label="Entry Unk.Contains", span=""];
m35_24 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m35_29 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="JobState.cs", label="3: var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="53-54"];
m35_27 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="state == null", span="51-51"];
m35_30 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', state.JobId), TimeSpan.FromMinutes(1))", span="56-57"];
m35_31 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label=changingFilters, span="59-59"];
m35_36 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="JobState.cs", label="3: var appliedFilters = GlobalJobFilters.Filters\r\n                    .OfType<IStateAppliedFilter>().ToList()", span="70-71"];
m35_37 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="return ApplyState(redis, state, appliedFilters, allowedStates);", span="73-73"];
m35_25 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="redis == null", span="50-50"];
m35_28 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="throw new ArgumentNullException(''state'');", span="51-51"];
m35_35 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="AppendHistory(redis, oldState, false)", span="66-66"];
m35_34 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="oldState != state", span="64-64"];
m35_32 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="var oldState = state", span="61-61"];
m35_33 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="state = filter.OnStateChanged(redis, oldState)", span="62-62"];
m35_26 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="throw new ArgumentNullException(''redis'');", span="50-50"];
m35_38 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobState.cs", label="Exit HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m35_46 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="JobState.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m35_80 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="JobState.cs", label="var transaction = redis.CreateTransaction()", span="124-124"];
m35_81 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="JobState.cs", label="AppendHistory(transaction, state, appendToJob)", span="126-126"];
m35_82 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="JobState.cs", label="transaction.Commit()", span="127-127"];
m35_83 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="JobState.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m35_64 [cluster="Unk.GetValueFromHash", file="JobState.cs", label="Entry Unk.GetValueFromHash", span=""];
m35_75 [cluster="Unk.Commit", file="JobState.cs", label="Entry Unk.Commit", span=""];
m35_45 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="JobState.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m35_67 [cluster="Unk.IsNullOrEmpty", file="JobState.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m35_20 [cluster="HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", file="JobState.cs", label="Entry HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", span="5-5"];
m35_70 [cluster="Unk.QueueCommand", file="JobState.cs", label="Entry Unk.QueueCommand", span=""];
m35_19 [cluster="HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", file="JobState.cs", label="Entry HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", span="5-5"];
m35_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m35_72 [cluster="Unk.AppendHistory", file="JobState.cs", label="Entry Unk.AppendHistory", span=""];
m35_84 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m35_85 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="var properties = state.GetProperties()", span="134-134"];
m35_87 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label=appendToJob, span="137-137"];
m35_88 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        }))", span="139-144"];
m35_89 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties))", span="146-148"];
m35_90 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="properties.Add(''State'', state.StateName)", span="151-151"];
m35_91 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="properties.Add(''Reason'', state.Reason)", span="152-152"];
m35_93 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties)))", span="155-157"];
m35_86 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="var now = DateTime.UtcNow", span="135-135"];
m35_92 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="153-153"];
m35_94 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="JobState.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m35_44 [cluster="Unk.AcquireLock", file="JobState.cs", label="Entry Unk.AcquireLock", span=""];
m35_66 [cluster="Unk.CreateTransaction", file="JobState.cs", label="Entry Unk.CreateTransaction", span=""];
m35_68 [cluster="Unk.ContainsKey", file="JobState.cs", label="Entry Unk.ContainsKey", span=""];
m35_6 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="Entry HangFire.States.JobState.GetProperties()", span="24-24"];
m35_7 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="return new Dictionary<string, string>();", span="26-26"];
m35_8 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="Exit HangFire.States.JobState.GetProperties()", span="24-24"];
m35_109 [file="JobState.cs", label="HangFire.States.JobState", span=""];
m35_110 [file="JobState.cs", label="HangFire.States.JobState", span=""];
m35_111 [file="JobState.cs", label=properties, span=""];
m36_5 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21"];
m36_6 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", color=green, community=0, file="JobSteps.cs", label="2: Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="23-23"];
m36_7 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21"];
m36_8 [cluster="HangFire.Web.CombinedResourceHandler.WriteResponse()", file="JobSteps.cs", label="Exit HangFire.Web.CombinedResourceHandler.WriteResponse()", span="36-36"];
m36_4 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="JobSteps.cs", label="Exit HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", span="26-26"];
m36_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m36_0 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="JobSteps.cs", label="Entry HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", span="26-26"];
m36_1 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="JobSteps.cs", label="_assembly = assembly", span="31-31"];
m36_2 [cluster="HangFire.Web.CombinedResourceHandler.CombinedResourceHandler(System.Reflection.Assembly, string, params string[])", file="JobSteps.cs", label="_baseNamespace = baseNamespace", span="32-32"];
m36_26 [cluster="Unk.GetValueFromHash", file="JobSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m36_17 [cluster="Unk.SetRangeInHash", file="JobSteps.cs", label="Entry Unk.SetRangeInHash", span=""];
m36_3 [cluster="string.Format(string, object)", file="JobSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m36_9 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27"];
m36_12 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33"];
m36_13 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", color=green, community=0, file="JobSteps.cs", label="2: Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="35-42"];
m36_14 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33"];
m36_27 [cluster="Unk.AreEqual", file="JobSteps.cs", label="Entry Unk.AreEqual", span=""];
m36_10 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", color=green, community=0, file="JobSteps.cs", label="2: Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="29-29"];
m36_16 [cluster="HangFire.JobHelper.ToJson(object)", file="JobSteps.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m36_18 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="46-46"];
m36_19 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="48-51"];
m36_20 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="46-46"];
m36_21 [cluster="Unk.SetEntryInHash", file="JobSteps.cs", label="Entry Unk.SetEntryInHash", span=""];
m36_11 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="HangFire.Web.CombinedResourceHandler", span=""];
m36_22 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="57-57"];
m36_23 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="59-61"];
m36_24 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Assert.AreEqual(state, jobState)", span="63-63"];
m36_25 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="57-57"];
m37_7 [cluster="Hangfire.SqlServer.SqlCommandSet.SqlCommandSet()", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlCommandSet.SqlCommandSet()", span="68-68"];
m37_43 [cluster="Hangfire.SqlServer.SqlCommandSet.ExecuteNonQuery()", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlCommandSet.ExecuteNonQuery()", span="97-97"];
m37_23 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Perform.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m37_24 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75"];
m37_25 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="_commandSet != null && _commandSet.CommandCount > 0", span="77-77"];
m37_26 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="_commandSet.Connection = Connection as SqlConnection", span="79-79"];
m37_35 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label=_commandList, span="98-98"];
m37_27 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="_commandSet.Transaction = Transaction as SqlTransaction", span="80-80"];
m37_28 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="var batchTimeout = CommandTimeout ?? _defaultTimeout", span="82-82"];
m37_29 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="batchTimeout > 0", span="84-84"];
m37_30 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="batchTimeout = batchTimeout * _commandSet.CommandCount", span="86-86"];
m37_33 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="_commandSet.BatchCommand.CommandTimeout = batchTimeout", span="94-94"];
m37_31 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="CommandBatchMaxTimeout.HasValue", span="88-88"];
m37_32 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="batchTimeout = Math.Min(CommandBatchMaxTimeout.Value, batchTimeout)", span="90-90"];
m37_34 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="_commandSet.ExecuteNonQuery()", span="95-95"];
m37_36 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="command.Connection = Connection", span="100-100"];
m37_37 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="command.Transaction = Transaction", span="101-101"];
m37_38 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="CommandTimeout.HasValue", span="103-103"];
m37_39 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="command.CommandTimeout = CommandTimeout.Value", span="105-105"];
m37_40 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="command.ExecuteNonQuery()", span="108-108"];
m37_41 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75"];
m37_17 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", span="63-63"];
m37_18 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="Perform.cs", label="_commandSet != null && command is SqlCommand", span="65-65"];
m37_19 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="Perform.cs", label="_commandSet.Append((SqlCommand)command)", span="67-67"];
m37_20 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="Perform.cs", label="_commandList.Add(command)", span="71-71"];
m37_21 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", span="63-63"];
m37_42 [cluster="System.Math.Min(int, int)", file="Perform.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m37_22 [cluster="Hangfire.SqlServer.SqlCommandSet.Append(SqlCommand)", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlCommandSet.Append(SqlCommand)", span="91-91"];
m37_14 [cluster="SqlCommand.cstr", file="Perform.cs", label="Entry SqlCommand.cstr", span=""];
m37_44 [cluster="Unk.ExecuteNonQuery", file="Perform.cs", label="Entry Unk.ExecuteNonQuery", span=""];
m37_0 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", span="29-29"];
m37_1 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", color=green, community=0, file="Perform.cs", label="0: SqlCommandSet.IsAvailable && preferBatching", span="31-31"];
m37_2 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="Perform.cs", label="_commandSet = new SqlCommandSet()", span="35-35"];
m37_3 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="Perform.cs", label="_defaultTimeout = _commandSet.BatchCommand.CommandTimeout", span="36-36"];
m37_4 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="Perform.cs", label=Exception, span="38-38"];
m37_5 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="Perform.cs", label="_commandSet = null", span="40-40"];
m37_6 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", span="29-29"];
m37_8 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", span="51-51"];
m37_9 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="Perform.cs", label="var command = new SqlCommand(commandText)", span="53-53"];
m37_10 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", color=red, community=0, file="Perform.cs", label="3: parameters", span="55-55"];
m37_11 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="Perform.cs", label="command.Parameters.Add(parameter)", span="57-57"];
m37_12 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", color=green, community=0, file="Perform.cs", label="3: Append(command)", span="60-60"];
m37_13 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", span="51-51"];
m37_16 [cluster="Unk.Append", file="Perform.cs", label="Entry Unk.Append", span=""];
m37_15 [cluster="Unk.Add", file="Perform.cs", label="Entry Unk.Add", span=""];
m37_45 [file="Perform.cs", label="Hangfire.SqlServer.SqlCommandBatch", span=""];
m38_0 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", file="PerformContext.cs", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", span="7-7"];
m38_1 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", color=green, community=0, file="PerformContext.cs", label="1: Items = context.Items", span="10-10"];
m38_2 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", file="PerformContext.cs", label="Exit HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", span="7-7"];
m38_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m38_3 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="PerformContext.cs", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
m38_4 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", color=green, community=0, file="PerformContext.cs", label="3: JobDescriptor = jobDescriptor", span="16-16"];
m38_5 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", color=green, community=0, file="PerformContext.cs", label="3: Items = new Dictionary<string, object>()", span="17-17"];
m38_6 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="PerformContext.cs", label="Exit HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
m38_8 [file="PerformContext.cs", label="HangFire.Filters.PerformContext", span=""];
m39_0 [cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="PerformedContext.cs", label="Entry HangFire.RecurringAttribute.RecurringAttribute(int)", span="10-10"];
m39_1 [cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", color=green, community=0, file="PerformedContext.cs", label="1: Seconds = seconds", span="12-12"];
m39_2 [cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="PerformedContext.cs", label="Exit HangFire.RecurringAttribute.RecurringAttribute(int)", span="10-10"];
m39_26 [file="PerformedContext.cs", label="HangFire.RecurringAttribute", span=""];
m42_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Program.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m42_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="Program.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m42_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="Program.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="57-57"];
m42_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="Program.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m42_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m42_3 [cluster="HangFire.States.SucceededState.SerializeData()", file="Program.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44"];
m42_4 [cluster="HangFire.States.SucceededState.SerializeData()", file="Program.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49"];
m42_5 [cluster="HangFire.States.SucceededState.SerializeData()", file="Program.cs", label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44"];
m42_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m42_0 [cluster="HangFire.States.SucceededState.SucceededState()", file="Program.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m42_1 [cluster="HangFire.States.SucceededState.SucceededState()", file="Program.cs", label="SucceededAt = DateTime.UtcNow", span="29-29"];
m42_2 [cluster="HangFire.States.SucceededState.SucceededState()", file="Program.cs", label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27"];
m42_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="Program.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m42_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="Program.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60"];
m42_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="Program.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="63-63"];
m42_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="Program.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60"];
m42_16 [file="Program.cs", label="HangFire.States.SucceededState", span=""];
m43_11 [cluster="Unk.EnqueueItemOnList", file="QueueSteps.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m43_15 [cluster="Unk.Then", file="QueueSteps.cs", label="Entry Unk.Then", span=""];
m43_16 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="39-39"];
m43_17 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", color=green, community=0, file="QueueSteps.cs", label="2: var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="41-42"];
m43_18 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", color=green, community=0, file="QueueSteps.cs", label="2: CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="44-44"];
m43_19 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="39-39"];
m43_2 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17"];
m43_3 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="QueueSteps.cs", label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", span="19-19"];
m43_4 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17"];
m43_5 [cluster="string.Format(string, object)", file="QueueSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m43_43 [cluster="Unk.AreEqual", file="QueueSteps.cs", label="Entry Unk.AreEqual", span=""];
m43_42 [cluster="Unk.GetListCount", file="QueueSteps.cs", label="Entry Unk.GetListCount", span=""];
m43_25 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="55-55"];
m43_26 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="QueueSteps.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="57-58"];
m43_27 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="QueueSteps.cs", label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="60-60"];
m43_28 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="55-55"];
m43_7 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="23-23"];
m43_8 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="QueueSteps.cs", label="Given(''a job'')", span="25-25"];
m43_9 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="QueueSteps.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                JobSteps.DefaultJobId)", span="27-29"];
m43_10 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="23-23"];
m43_22 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="49-49"];
m43_23 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="QueueSteps.cs", label="Then(String.Format(''the '{0}' queue does not contain the job'', DefaultQueue))", span="51-51"];
m43_24 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="49-49"];
m43_20 [cluster="Unk.GetAllItemsFromList", file="QueueSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m43_21 [cluster="Unk.Contains", file="QueueSteps.cs", label="Entry Unk.Contains", span=""];
m43_6 [cluster="Unk.Given", file="QueueSteps.cs", label="Entry Unk.Given", span=""];
m43_29 [cluster="Unk.DoesNotContain", file="QueueSteps.cs", label="Entry Unk.DoesNotContain", span=""];
m43_12 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="33-33"];
m43_13 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", color=green, community=0, file="QueueSteps.cs", label="1: Then(String.Format(''the '{0}' queue contains the job'', DefaultQueue))", span="35-35"];
m43_14 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="33-33"];
m43_44 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="90-90"];
m43_45 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", color=green, community=0, file="QueueSteps.cs", label="0: var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="92-93"];
m43_46 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", color=green, community=0, file="QueueSteps.cs", label="1: Assert.AreEqual(length, actualLength)", span="94-94"];
m43_47 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="90-90"];
m43_38 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="82-82"];
m43_39 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", color=green, community=0, file="QueueSteps.cs", label="1: var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="84-85"];
m43_40 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", color=green, community=0, file="QueueSteps.cs", label="1: Assert.AreEqual(0, length)", span="86-86"];
m43_41 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="82-82"];
m43_0 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="12-12"];
m43_1 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="12-12"];
m44_20 [cluster="Unk.GetType", file="RecurringJobsFilter.cs", label="Entry Unk.GetType", span=""];
m44_21 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="RecurringJobsFilter.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m44_19 [cluster="Unk.GetValueFromHash", file="RecurringJobsFilter.cs", label="Entry Unk.GetValueFromHash", span=""];
m44_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="RecurringJobsFilter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m44_24 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="RecurringJobsFilter.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m44_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobsFilter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m44_3 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="Entry HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="20-20"];
m44_4 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="redis == null", span="22-22"];
m44_6 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="state == null", span="23-23"];
m44_8 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="state.StateName != SucceededState.Name", span="25-25"];
m44_9 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="return state;", span="27-27"];
m44_10 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="var jobType = redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId),\r\n                ''Type'')", span="30-32"];
m44_14 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="return new ScheduledState(\r\n                    state.JobId, \r\n                    ''Scheduled as a recurring job.'',\r\n                    DateTime.UtcNow.AddSeconds(recurringAttribute.Seconds));", span="40-43"];
m44_15 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="return state;", span="46-46"];
m44_5 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="throw new ArgumentNullException(''redis'');", span="22-22"];
m44_7 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="throw new ArgumentNullException(''state'');", span="23-23"];
m44_11 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="var type = Type.GetType(jobType)", span="33-33"];
m44_12 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="var recurringAttribute = type.GetCustomAttributes(true).OfType<RecurringAttribute>().SingleOrDefault()", span="36-36"];
m44_13 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="recurringAttribute != null", span="38-38"];
m44_16 [cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs", label="Exit HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="20-20"];
m44_25 [cluster="System.DateTime.AddSeconds(double)", file="RecurringJobsFilter.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m44_22 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="RecurringJobsFilter.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m44_18 [cluster="string.Format(string, object)", file="RecurringJobsFilter.cs", label="Entry string.Format(string, object)", span="0-0"];
m44_0 [cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="RecurringJobsFilter.cs", label="Entry HangFire.RecurringAttribute.RecurringAttribute(int)", span="10-10"];
m44_1 [cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="RecurringJobsFilter.cs", label="Seconds = seconds", span="12-12"];
m44_2 [cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="RecurringJobsFilter.cs", label="Exit HangFire.RecurringAttribute.RecurringAttribute(int)", span="10-10"];
m44_26 [file="RecurringJobsFilter.cs", label="HangFire.RecurringAttribute", span=""];
m45_0 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22"];
m45_1 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="_job = Job.FromExpression(() => Console.WriteLine())", span="24-24"];
m45_2 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="_newStateMock = new Mock<State>()", span="25-25"];
m45_3 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="_newStateMock.Setup(x => x.Name).Returns(NewState)", span="26-26"];
m45_4 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28"];
m45_5 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="_filters = new List<IApplyStateFilter>()", span="30-30"];
m45_6 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="_handlers = new StateHandlerCollection()", span="31-31"];
m45_7 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22"];
m45_13 [cluster="System.Collections.Generic.List<T>.List()", file="RetryJobsFilter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m45_33 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="RetryJobsFilter.cs", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="45-45"];
m45_190 [cluster="Unk.Same", file="RetryJobsFilter.cs", label="Entry Unk.Same", span=""];
m45_12 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="RetryJobsFilter.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m45_113 [cluster="Unk.Apply", file="RetryJobsFilter.cs", label="Entry Unk.Apply", span=""];
m45_29 [cluster="Unk.Equal", file="RetryJobsFilter.cs", label="Entry Unk.Equal", span=""];
m45_195 [cluster="Mock<IStorageConnection>.cstr", file="RetryJobsFilter.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m45_52 [cluster="Unk.SetJobState", file="RetryJobsFilter.cs", label="Entry Unk.SetJobState", span=""];
m45_160 [cluster="Unk.OnStateUnapplied", file="RetryJobsFilter.cs", label="Entry Unk.OnStateUnapplied", span=""];
m45_130 [cluster="Unk.ExpireJob", file="RetryJobsFilter.cs", label="Entry Unk.ExpireJob", span=""];
m45_28 [cluster="Unk.>", file="RetryJobsFilter.cs", label="Entry Unk.>", span=""];
m45_197 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="RetryJobsFilter.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m45_155 [cluster="Mock<IApplyStateFilter>.cstr", file="RetryJobsFilter.cs", label="Entry Mock<IApplyStateFilter>.cstr", span=""];
m45_196 [cluster="ApplyStateContext.cstr", file="RetryJobsFilter.cs", label="Entry ApplyStateContext.cstr", span=""];
m45_180 [cluster="Unk.OnStateApplied", file="RetryJobsFilter.cs", label="Entry Unk.OnStateApplied", span=""];
m45_184 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
m45_185 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="201-201"];
m45_186 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="RetryJobsFilter.cs", label="Assert.Equal(OldState, context.OldStateName)", span="203-203"];
m45_187 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="RetryJobsFilter.cs", label="Assert.Same(_newStateMock.Object, context.NewState)", span="204-204"];
m45_188 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="RetryJobsFilter.cs", label="Assert.Same(_job, context.Job)", span="205-205"];
m45_189 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
m45_27 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208"];
m45_191 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="RetryJobsFilter.cs", label="var connectionMock = new Mock<IStorageConnection>()", span="210-210"];
m45_192 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="RetryJobsFilter.cs", label="connectionMock.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="211-211"];
m45_193 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="RetryJobsFilter.cs", label="return new ApplyStateContext(\r\n                connectionMock.Object,\r\n                new StateContext(JobId, _job),\r\n                _newStateMock.Object,\r\n                OldState);", span="213-217"];
m45_194 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208"];
m45_14 [cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", file="RetryJobsFilter.cs", label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
m45_48 [cluster="Unk.InSequence", file="RetryJobsFilter.cs", label="Entry Unk.InSequence", span=""];
m45_156 [cluster="Unk.Add", file="RetryJobsFilter.cs", label="Entry Unk.Add", span=""];
m45_70 [cluster="Mock<StateHandler>.cstr", file="RetryJobsFilter.cs", label="Entry Mock<StateHandler>.cstr", span=""];
m45_57 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74"];
m45_58 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="77-77"];
m45_59 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="var handler1 = new Mock<StateHandler>()", span="79-79"];
m45_65 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="handler1.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="88-88"];
m45_66 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="handler2.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="89-89"];
m45_68 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, _filters)", span="94-94"];
m45_60 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="handler1.Setup(x => x.StateName).Returns(OldState)", span="80-80"];
m45_63 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="_handlers.AddHandler(handler1.Object)", span="85-85"];
m45_61 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="var handler2 = new Mock<StateHandler>()", span="82-82"];
m45_62 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="handler2.Setup(x => x.StateName).Returns(OldState)", span="83-83"];
m45_64 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="_handlers.AddHandler(handler2.Object)", span="86-86"];
m45_67 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="90-91"];
m45_69 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74"];
m45_144 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
m45_145 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="153-153"];
m45_146 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="var filter1 = new Mock<IApplyStateFilter>()", span="155-155"];
m45_150 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="filter1.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="161-162"];
m45_151 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="filter2.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="163-164"];
m45_153 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, _filters)", span="170-170"];
m45_147 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="var filter2 = new Mock<IApplyStateFilter>()", span="156-156"];
m45_148 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="_filters.Add(filter1.Object)", span="158-158"];
m45_149 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="_filters.Add(filter2.Object)", span="159-159"];
m45_152 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="165-167"];
m45_154 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
m45_117 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
m45_118 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="130-130"];
m45_119 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="RetryJobsFilter.cs", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(true)", span="131-131"];
m45_120 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, _filters)", span="133-133"];
m45_121 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="RetryJobsFilter.cs", label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="135-135"];
m45_122 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
m45_34 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46"];
m45_35 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="48-48"];
m45_36 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="RetryJobsFilter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(_handlers, null))", span="50-51"];
m45_37 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="RetryJobsFilter.cs", label="Assert.Equal(''filters'', exception.ParamName)", span="53-53"];
m45_38 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46"];
m45_9 [cluster="Mock<State>.cstr", file="RetryJobsFilter.cs", label="Entry Mock<State>.cstr", span=""];
m45_10 [cluster="Unk.Setup", file="RetryJobsFilter.cs", label="Entry Unk.Setup", span=""];
m45_22 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35"];
m45_23 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="37-37"];
m45_24 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="RetryJobsFilter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(null, _filters))", span="39-40"];
m45_25 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="RetryJobsFilter.cs", label="Assert.Equal(''handlers'', exception.ParamName)", span="42-42"];
m45_26 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35"];
m45_81 [cluster="Unk.Unapply", file="RetryJobsFilter.cs", label="Entry Unk.Unapply", span=""];
m45_71 [cluster="Unk.AddHandler", file="RetryJobsFilter.cs", label="Entry Unk.AddHandler", span=""];
m45_198 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="211-211"];
m45_15 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="24-24"];
m45_19 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="26-26"];
m45_16 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Console.WriteLine()", span="24-24"];
m45_17 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="24-24"];
m45_20 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.Name", span="26-26"];
m45_21 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="26-26"];
m45_31 [cluster="lambda expression", file="RetryJobsFilter.cs", label="context.ApplyState(null, _filters)", span="40-40"];
m45_30 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="40-40"];
m45_32 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="40-40"];
m45_40 [cluster="lambda expression", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, null)", span="51-51"];
m45_39 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="51-51"];
m45_41 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="51-51"];
m45_49 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="60-61"];
m45_53 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="63-63"];
m45_50 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.SetJobState(\r\n                JobId, _newStateMock.Object)", span="60-61"];
m45_51 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="60-61"];
m45_54 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.Commit()", span="63-63"];
m45_55 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="63-63"];
m45_79 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.Unapply(context, _transaction.Object)", span="88-88"];
m45_83 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.Unapply(context, _transaction.Object)", span="89-89"];
m45_72 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="80-80"];
m45_75 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="83-83"];
m45_78 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="88-88"];
m45_82 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="89-89"];
m45_85 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="90-90"];
m45_73 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.StateName", span="80-80"];
m45_74 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="80-80"];
m45_76 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.StateName", span="83-83"];
m45_77 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="83-83"];
m45_80 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="88-88"];
m45_84 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="89-89"];
m45_86 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="90-90"];
m45_87 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="90-90"];
m45_111 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.Apply(context, _transaction.Object)", span="118-118"];
m45_115 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.Apply(context, _transaction.Object)", span="119-119"];
m45_101 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="106-106"];
m45_104 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="109-109"];
m45_107 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="115-115"];
m45_110 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="118-118"];
m45_114 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="119-119"];
m45_102 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.StateName", span="106-106"];
m45_103 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="106-106"];
m45_105 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.StateName", span="109-109"];
m45_106 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="109-109"];
m45_108 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="115-115"];
m45_109 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="115-115"];
m45_112 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="118-118"];
m45_116 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="119-119"];
m45_124 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="131-131"];
m45_127 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="135-135"];
m45_125 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.ExpireJobOnApply", span="131-131"];
m45_126 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="131-131"];
m45_128 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="135-135"];
m45_129 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="135-135"];
m45_137 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="142-142"];
m45_140 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="146-146"];
m45_138 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.ExpireJobOnApply", span="142-142"];
m45_139 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="142-142"];
m45_141 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.PersistJob(JobId)", span="146-146"];
m45_142 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="146-146"];
m45_158 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.OnStateUnapplied(context, _transaction.Object)", span="161-161"];
m45_162 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.OnStateUnapplied(context, _transaction.Object)", span="163-163"];
m45_157 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="161-161"];
m45_161 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="163-163"];
m45_164 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="166-166"];
m45_159 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="161-161"];
m45_163 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="163-163"];
m45_165 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="166-166"];
m45_166 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="166-166"];
m45_178 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.OnStateApplied(context, _transaction.Object)", span="187-187"];
m45_182 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.OnStateApplied(context, _transaction.Object)", span="189-189"];
m45_177 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="187-187"];
m45_181 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Entry lambda expression", span="189-189"];
m45_179 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="187-187"];
m45_183 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="189-189"];
m45_199 [cluster="lambda expression", file="RetryJobsFilter.cs", label="x.CreateWriteTransaction()", span="211-211"];
m45_200 [cluster="lambda expression", file="RetryJobsFilter.cs", label="Exit lambda expression", span="211-211"];
m45_131 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
m45_132 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="141-141"];
m45_133 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="RetryJobsFilter.cs", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(false)", span="142-142"];
m45_134 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, _filters)", span="144-144"];
m45_135 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="RetryJobsFilter.cs", label="_transaction.Verify(x => x.PersistJob(JobId))", span="146-146"];
m45_136 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
m45_56 [cluster="Unk.Commit", file="RetryJobsFilter.cs", label="Entry Unk.Commit", span=""];
m45_167 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
m45_168 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="179-179"];
m45_169 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="var filter1 = new Mock<IApplyStateFilter>()", span="181-181"];
m45_173 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="filter1.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="187-188"];
m45_174 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="filter2.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="189-190"];
m45_175 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, _filters)", span="193-193"];
m45_170 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="var filter2 = new Mock<IApplyStateFilter>()", span="182-182"];
m45_171 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="_filters.Add(filter1.Object)", span="184-184"];
m45_172 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="_filters.Add(filter2.Object)", span="185-185"];
m45_176 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
m45_201 [cluster="Unk.CreateWriteTransaction", file="RetryJobsFilter.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m45_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RetryJobsFilter.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m45_42 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57"];
m45_43 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="RetryJobsFilter.cs", label="_transaction.Setup(x => x.SetJobState(\r\n                JobId, _newStateMock.Object)).InSequence()", span="60-61"];
m45_44 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="RetryJobsFilter.cs", label="_transaction.Setup(x => x.Commit()).InSequence()", span="63-63"];
m45_45 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="65-65"];
m45_46 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, _filters)", span="68-68"];
m45_47 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57"];
m45_88 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
m45_89 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="var context = CreateContext()", span="103-103"];
m45_90 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="var handler1 = new Mock<StateHandler>()", span="105-105"];
m45_97 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="handler1.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="118-118"];
m45_98 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="handler2.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="119-119"];
m45_99 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="context.ApplyState(_handlers, _filters)", span="122-122"];
m45_91 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="handler1.Setup(x => x.StateName).Returns(NewState)", span="106-106"];
m45_94 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="_handlers.AddHandler(handler1.Object)", span="111-111"];
m45_92 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="var handler2 = new Mock<StateHandler>()", span="108-108"];
m45_93 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="handler2.Setup(x => x.StateName).Returns(NewState)", span="109-109"];
m45_95 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="_handlers.AddHandler(handler2.Object)", span="112-112"];
m45_96 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="114-116"];
m45_100 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="RetryJobsFilter.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
m45_11 [cluster="Unk.Returns", file="RetryJobsFilter.cs", label="Entry Unk.Returns", span=""];
m45_143 [cluster="Unk.PersistJob", file="RetryJobsFilter.cs", label="Entry Unk.PersistJob", span=""];
m45_123 [cluster="Unk.Verify", file="RetryJobsFilter.cs", label="Entry Unk.Verify", span=""];
m45_18 [cluster="System.Console.WriteLine()", file="RetryJobsFilter.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m45_202 [file="RetryJobsFilter.cs", label="HangFire.Core.Tests.States.ApplyStateContextFacts", span=""];
m45_203 [file="RetryJobsFilter.cs", label=context, span=""];
m45_204 [file="RetryJobsFilter.cs", label=context, span=""];
m45_205 [file="RetryJobsFilter.cs", label=context, span=""];
m45_206 [file="RetryJobsFilter.cs", label=context, span=""];
m45_207 [file="RetryJobsFilter.cs", label=context, span=""];
m45_208 [file="RetryJobsFilter.cs", label=context, span=""];
m46_0 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, string, int)", span="4-4"];
m46_1 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="ServerName = serverName", span="6-6"];
m46_2 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", color=red, community=0, file="ServerContext.cs", label="1: Queue = queue", span="7-7"];
m46_3 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="WorkersCount = workersCount", span="8-8"];
m46_4 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="Exit HangFire.Server.ServerContext.ServerContext(string, string, int)", span="4-4"];
m46_5 [file="ServerContext.cs", label="HangFire.Server.ServerContext", span=""];
m47_0 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="ServerExceptionContext.cs", label="Entry HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6"];
m47_1 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", color=green, community=0, file="ServerExceptionContext.cs", label="3: Exception = exception", span="11-11"];
m47_2 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="ServerExceptionContext.cs", label="Exit HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6"];
m47_3 [file="ServerExceptionContext.cs", label="HangFire.Filters.ServerExceptionContext", span=""];
m48_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerJobDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m48_29 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="ServerJobDescriptor.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m48_20 [cluster="System.Type.GetType(string, bool, bool)", file="ServerJobDescriptor.cs", label="Entry System.Type.GetType(string, bool, bool)", span="0-0"];
m48_41 [cluster="HangFire.BackgroundJob.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="Entry HangFire.BackgroundJob.GetParameter<T>(string)", span="22-22"];
m48_37 [cluster="HangFire.BackgroundJob.SetParameter(string, object)", file="ServerJobDescriptor.cs", label="Entry HangFire.BackgroundJob.SetParameter(string, object)", span="11-11"];
m48_21 [cluster="HangFire.JobActivator.ActivateJob(System.Type)", file="ServerJobDescriptor.cs", label="Entry HangFire.JobActivator.ActivateJob(System.Type)", span="6-6"];
m48_24 [cluster="string.Format(string, object, object)", file="ServerJobDescriptor.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m48_34 [cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", span="63-63"];
m48_35 [cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs", label="_jobInstance.SetParameter(name, value)", span="65-65"];
m48_36 [cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", span="63-63"];
m48_38 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="68-68"];
m48_39 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="return _jobInstance.GetParameter<T>(name);", span="70-70"];
m48_40 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="68-68"];
m48_27 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="ServerJobDescriptor.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m48_33 [cluster="HangFire.BackgroundJob.Perform()", file="ServerJobDescriptor.cs", label="Entry HangFire.BackgroundJob.Perform()", span="9-9"];
m48_23 [cluster="object.GetType()", file="ServerJobDescriptor.cs", label="Entry object.GetType()", span="0-0"];
m48_0 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m48_1 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="activator == null", span="16-16"];
m48_3 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ServerJobDescriptor.cs", label="3: jobProperties == null", span="17-17"];
m48_5 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ServerJobDescriptor.cs", label="3: JobId = jobId", span="19-19"];
m48_6 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ServerJobDescriptor.cs", label="3: var type = Type.GetType(jobType, true, true)", span="21-21"];
m48_7 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="_jobInstance = activator.ActivateJob(type)", span="22-22"];
m48_9 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''{0} returned NULL instance of the '{1}' type.'',\r\n                    activator.GetType().FullName,\r\n                    type.FullName));", span="26-29"];
m48_10 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ServerJobDescriptor.cs", label="3: jobProperties", span="32-32"];
m48_2 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''activator'');", span="16-16"];
m48_4 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ServerJobDescriptor.cs", label="3: throw new ArgumentNullException(''jobProperties'');", span="17-17"];
m48_8 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="_jobInstance == null", span="24-24"];
m48_11 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="var propertyInfo = _jobInstance.GetType().GetProperty(arg.Key)", span="34-34"];
m48_12 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="propertyInfo != null", span="35-35"];
m48_13 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="var converter = TypeDescriptor.GetConverter(propertyInfo.PropertyType)", span="37-37"];
m48_14 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="var value = converter.ConvertFromInvariantString(arg.Value)", span="41-41"];
m48_15 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="propertyInfo.SetValue(_jobInstance, value, null)", span="42-42"];
m48_17 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not set the property '{0}' of the instance of class '{1}'. See the inner exception for details.'',\r\n                                propertyInfo.Name, _jobInstance.GetType().Name),\r\n                            ex);", span="46-50"];
m48_16 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label=Exception, span="44-44"];
m48_18 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m48_42 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.Dispose()", span="73-73"];
m48_43 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="var disposable = _jobInstance as IDisposable", span="75-75"];
m48_44 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="disposable != null", span="76-76"];
m48_45 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="disposable.Dispose()", span="78-78"];
m48_46 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.Dispose()", span="73-73"];
m48_25 [cluster="System.Type.GetProperty(string)", file="ServerJobDescriptor.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m48_47 [cluster="System.IDisposable.Dispose()", file="ServerJobDescriptor.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m48_28 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ServerJobDescriptor.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m48_22 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ServerJobDescriptor.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m48_30 [cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.Perform()", span="58-58"];
m48_31 [cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="ServerJobDescriptor.cs", label="_jobInstance.Perform()", span="60-60"];
m48_32 [cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.Perform()", span="58-58"];
m48_26 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ServerJobDescriptor.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m48_48 [file="ServerJobDescriptor.cs", label="HangFire.Server.ServerJobDescriptor", span=""];
m49_0 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", file="ServerJobExceptionContext.cs", label="Entry HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", span="8-8"];
m49_1 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", color=red, community=0, file="ServerJobExceptionContext.cs", label="3: JobDescriptor = jobDescriptor", span="14-14"];
m49_2 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", color=red, community=0, file="ServerJobExceptionContext.cs", label="3: Exception = exception", span="15-15"];
m49_3 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", file="ServerJobExceptionContext.cs", label="Exit HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", span="8-8"];
m49_4 [file="ServerJobExceptionContext.cs", label="HangFire.Filters.ServerJobExceptionContext", span=""];
m50_2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m50_3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m50_6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m50_7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m50_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m50_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m50_12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m50_13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m50_8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m50_9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m50_4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m50_5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m50_10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m50_11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m50_14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerJobInvoker.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m50_15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerJobInvoker.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m51_44 [cluster="System.Threading.Thread.Join()", file="Worker.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m51_62 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m51_63 [cluster="string.Format(string, params object[])", file="Worker.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m51_21 [cluster="System.Threading.Thread.Start()", file="Worker.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m51_45 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m51_11 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Worker.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m51_9 [cluster="string.Format(string, object)", file="Worker.cs", label="Entry string.Format(string, object)", span="0-0"];
m51_34 [cluster="System.Threading.ManualResetEventSlim.Set()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m51_22 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Entry HangFire.Server.Worker.Stop()", span="70-70"];
m51_23 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="72-72"];
m51_24 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label=_started, span="74-74"];
m51_25 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="_cts.Cancel()", span="76-76"];
m51_26 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Exit HangFire.Server.Worker.Stop()", span="70-70"];
m51_27 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m51_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
m51_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="Worker.cs", label="_pool = pool", span="42-42"];
m51_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="1: _serverContext = serverContext", span="43-43"];
m51_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="0: _workerNumber = workerNumber", span="44-44"];
m51_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="1: _jobInvoker = jobInvoker", span="45-45"];
m51_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="0: _jobActivator = jobActivator", span="46-46"];
m51_6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="1: Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', workerNumber))", span="48-48"];
m51_7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="0: _thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', workerNumber),\r\n                    IsBackground = true\r\n                }", span="50-54"];
m51_8 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
m51_95 [cluster="HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="Worker.cs", label="Entry HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="33-33"];
m51_106 [cluster="Unk.>", file="Worker.cs", label="Entry Unk.>", span=""];
m51_10 [cluster="Unk.GetLogger", file="Worker.cs", label="Entry Unk.GetLogger", span=""];
m51_60 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m51_47 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Entry HangFire.Server.Worker.DoWork()", span="127-127"];
m51_48 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=true, span="131-131"];
m51_49 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_pool.NotifyReady(this)", span="133-133"];
m51_54 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=OperationCanceledException, span="143-143"];
m51_55 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=Exception, span="146-146"];
m51_50 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_jobIsReady.Wait(_cts.Token)", span="134-134"];
m51_51 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=_jobLock, span="136-136"];
m51_52 [cluster="HangFire.Server.Worker.DoWork()", color=red, community=0, file="Worker.cs", label="3: PerformJob(_jobId)", span="138-138"];
m51_53 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_jobIsReady.Reset()", span="139-139"];
m51_56 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Crashed = true", span="148-148"];
m51_57 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="149-152"];
m51_58 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Exit HangFire.Server.Worker.DoWork()", span="127-127"];
m51_98 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="Worker.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m51_94 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="Worker.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m51_20 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Worker.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m51_12 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Entry HangFire.Server.Worker.Start()", span="57-57"];
m51_13 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="59-59"];
m51_14 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label=_started, span="61-61"];
m51_15 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="throw new InvalidOperationException(''Worker has been already started.'');", span="63-63"];
m51_16 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="_thread.Start()", span="66-66"];
m51_17 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="_started = true", span="67-67"];
m51_18 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Exit HangFire.Server.Worker.Start()", span="57-57"];
m51_92 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
m51_90 [cluster="Unk.Warn", file="Worker.cs", label="Entry Unk.Warn", span=""];
m51_91 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="Worker.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", span="16-16"];
m51_61 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="Entry HangFire.Server.Worker.PerformJob(string)", span="157-157"];
m51_65 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: Dictionary<string, string> jobArgs", span="159-159"];
m51_67 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: GetJobTypeAndArgs(jobId, out jobType, out jobArgs)", span="162-162"];
m51_69 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=1, file="Worker.cs", label="3: Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    jobId))", span="166-168"];
m51_73 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: !JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(jobId, ''Worker has started processing.'', workerContext.ServerContext.ServerName),\r\n                    EnqueuedState.Name,\r\n                    ProcessingState.Name)", span="177-181"];
m51_77 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: jobDescriptor = new ServerJobDescriptor(_jobActivator, jobId, jobType, jobArgs)", span="196-196"];
m51_81 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    jobId))", span="203-205"];
m51_84 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(jobId, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="225-228"];
m51_85 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(jobId, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="232-235"];
m51_86 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=3, file="Worker.cs", label="3: JobServer.RemoveFromFetchedQueue(\r\n                    Redis, jobId, _serverContext.Queue)", span="244-245"];
m51_66 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: string jobType", span="160-160"];
m51_68 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: String.IsNullOrEmpty(jobType)", span="164-164"];
m51_71 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: var workerContext = new WorkerContext(_serverContext, _workerNumber, Redis)", span="173-173"];
m51_70 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: return;", span="170-170"];
m51_72 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label=Redis, span="175-175"];
m51_78 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="3: _jobInvoker.PerformJob(workerContext, jobDescriptor)", span="197-197"];
m51_74 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="return;", span="183-183"];
m51_75 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="Exception exception = null", span="191-191"];
m51_76 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="ServerJobDescriptor jobDescriptor = null", span="193-193"];
m51_79 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label=Exception, span="199-199"];
m51_82 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label=Redis, span="221-221"];
m51_80 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="exception = ex", span="201-201"];
m51_83 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="exception == null", span="223-223"];
m51_87 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="Exit HangFire.Server.Worker.PerformJob(string)", span="157-157"];
m51_88 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="Worker.cs", label="Entry HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
m51_100 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="Worker.cs", label="3: Redis", span="254-254"];
m51_101 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=1, file="Worker.cs", label="3: var result = Redis.GetValuesFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    new[] { ''Type'', ''Args'' })", span="256-258"];
m51_102 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="Worker.cs", label="3: jobType = result[0]", span="260-260"];
m51_103 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="Worker.cs", label="3: jobArgs = JobHelper.FromJson<Dictionary<string, string>>(result[1])", span="261-261"];
m51_104 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="Worker.cs", label="Exit HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
m51_89 [cluster="string.IsNullOrEmpty(string)", file="Worker.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m51_28 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="Entry HangFire.Server.Worker.Process(string)", span="98-98"];
m51_29 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="100-100"];
m51_31 [cluster="HangFire.Server.Worker.Process(string)", color=red, community=0, file="Worker.cs", label="0: _jobId = jobId", span="104-104"];
m51_30 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label=_jobLock, span="102-102"];
m51_32 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="_jobIsReady.Set()", span="107-107"];
m51_33 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="Exit HangFire.Server.Worker.Process(string)", span="98-98"];
m51_64 [cluster="Unk.Fatal", file="Worker.cs", label="Entry Unk.Fatal", span=""];
m51_97 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m51_19 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="Worker.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m51_93 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="Worker.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m51_59 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="Worker.cs", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="80-80"];
m51_105 [cluster="Unk.GetValuesFromHash", file="Worker.cs", label="Entry Unk.GetValuesFromHash", span=""];
m51_99 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="Worker.cs", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="99-99"];
m51_35 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Entry HangFire.Server.Worker.Dispose()", span="110-110"];
m51_36 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label=_disposed, span="112-112"];
m51_37 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="return;", span="113-113"];
m51_38 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_disposed = true", span="115-115"];
m51_39 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label=_started, span="117-117"];
m51_40 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_thread.Join()", span="119-119"];
m51_41 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_cts.Dispose()", span="122-122"];
m51_42 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_jobIsReady.Dispose()", span="123-123"];
m51_43 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Exit HangFire.Server.Worker.Dispose()", span="110-110"];
m51_96 [cluster="Unk.Error", file="Worker.cs", label="Entry Unk.Error", span=""];
m51_46 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m51_107 [file="Worker.cs", label="HangFire.Server.Worker", span=""];
m52_134 [cluster="Hangfire.JobStorage.GetConnection()", file="WorkerContext.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m52_137 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", file="WorkerContext.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", span="44-44"];
m52_142 [cluster="string.IsNullOrWhiteSpace(string)", file="WorkerContext.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m52_149 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="70-70"];
m52_148 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m52_140 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m52_131 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m52_147 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m52_143 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="WorkerContext.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m52_130 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m52_132 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m52_144 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="101-101"];
m52_133 [cluster="int.TryParse(string, out int)", file="WorkerContext.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m52_135 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m52_138 [cluster="Hangfire.Storage.IStorageConnection.GetRecurringJobs()", file="WorkerContext.cs", label="Entry Hangfire.Storage.IStorageConnection.GetRecurringJobs()", span="55-55"];
m52_146 [cluster="string.IsNullOrEmpty(string)", file="WorkerContext.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m52_145 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="146-146"];
m52_141 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="76-76"];
m52_0 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m52_1 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n'')", span="61-61"];
m52_2 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Layout = new LayoutPage(Strings.RecurringJobsPage_Title)", span="74-74"];
m52_3 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="List<RecurringJobDto> recurringJobs", span="75-75"];
m52_4 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="int from, perPage", span="77-77"];
m52_5 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="int.TryParse(Query(''from''), out from)", span="79-79"];
m52_6 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="int.TryParse(Query(''count''), out perPage)", span="80-80"];
m52_11 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="pager = new Pager(from, perPage, storageConnection.GetRecurringJobCount())", span="89-89"];
m52_7 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Pager pager = null", span="82-82"];
m52_8 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="var connection = Storage.GetConnection()", span="84-84"];
m52_36 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="pager != null", span="226-226"];
m52_39 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Html.PerPageSelector(pager))", span="239-239"];
m52_122 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="pager != null", span="786-786"];
m52_125 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Html.Paginator(pager))", span="799-799"];
m52_9 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="var storageConnection = connection as JobStorageConnection", span="86-86"];
m52_13 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="recurringJobs = connection.GetRecurringJobs()", span="94-94"];
m52_10 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="storageConnection != null", span="87-87"];
m52_12 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="recurringJobs = storageConnection.GetRecurringJobs(pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="90-90"];
m52_14 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-12\''>\r\n        <h1 class=\''page-header\'''' +\r\n''>'')", span="102-103"];
m52_17 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="recurringJobs.Count == 0", span="118-118"];
m52_56 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label=recurringJobs, span="339-339"];
m52_15 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_Title)", span="108-108"];
m52_16 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</h1>\r\n\r\n'')", span="113-113"];
m52_18 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", span="124-124"];
m52_21 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="146-148"];
m52_19 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_NoJobs)", span="129-129"];
m52_20 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="134-134"];
m52_22 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Url.To(''/recurring/trigger''))", span="153-153"];
m52_23 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="158-158"];
m52_24 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_Triggering)", span="163-163"];
m52_25 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-play-circle\''></span>\r\n                        '')", span="168-169"];
m52_26 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_TriggerNow)", span="174-174"];
m52_27 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="179-180"];
m52_28 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Url.To(''/recurring/remove''))", span="185-185"];
m52_29 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="190-190"];
m52_30 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_Deleting)", span="195-195"];
m52_31 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="200-200"];
m52_32 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_DeleteConfirm)", span="205-205"];
m52_33 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-remove\''></span>\r\n                        '')", span="210-211"];
m52_34 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_Delete)", span="216-216"];
m52_35 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n'')", span="221-221"];
m52_37 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                        '')", span="232-232"];
m52_41 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(@''                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="254-263"];
m52_38 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral('' '')", span="234-234"];
m52_40 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n'')", span="244-244"];
m52_42 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_Id)", span="268-268"];
m52_43 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="273-273"];
m52_44 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_Table_Cron)", span="278-278"];
m52_45 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="283-283"];
m52_46 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_Table_TimeZone)", span="288-288"];
m52_47 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="293-293"];
m52_48 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_Job)", span="298-298"];
m52_49 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="303-303"];
m52_50 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_Table_NextExecution)", span="308-308"];
m52_51 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="313-313"];
m52_52 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_Table_LastExecution)", span="318-318"];
m52_53 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="323-323"];
m52_54 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_Created)", span="328-328"];
m52_55 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="333-334"];
m52_57 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                <tr class=\''js-jobs-list-row hover\''>\r\n            '' +\r\n''                        <td>\r\n                                        <input typ'' +\r\n''e=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="345-347"];
m52_121 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n'')", span="780-781"];
m52_58 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(job.Id)", span="352-352"];
m52_60 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(job.Id)", span="363-363"];
m52_69 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(job.Cron)", span="420-420"];
m52_72 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(job.Cron)", span="442-442"];
m52_75 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="!String.IsNullOrWhiteSpace(job.TimeZoneId)", span="463-463"];
m52_77 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(TimeZoneInfo.FindSystemTimeZoneById(job.TimeZoneId).DisplayName)", span="474-474"];
m52_79 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(job.TimeZoneId)", span="484-484"];
m52_84 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="job.Job != null", span="519-519"];
m52_87 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Html.JobName(job.Job))", span="532-532"];
m52_90 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(job.LoadException.InnerException.Message)", span="554-554"];
m52_93 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="job.NextExecution != null", span="575-575"];
m52_94 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Html.RelativeTime(job.NextExecution.Value))", span="583-583"];
m52_99 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="job.LastExecution != null", span="624-624"];
m52_100 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="!String.IsNullOrEmpty(job.LastJobId)", span="626-626"];
m52_102 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Url.JobDetails(job.LastJobId))", span="637-637"];
m52_104 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write($''background-color: {JobHistoryRenderer.GetForegroundStateColor(job.LastJobState)};'')", span="648-648"];
m52_106 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Html.RelativeTime(job.LastExecution.Value))", span="658-658"];
m52_111 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Html.RelativeTime(job.LastExecution.Value))", span="692-692"];
m52_117 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="job.CreatedAt != null", span="736-736"];
m52_118 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Html.RelativeTime(job.CreatedAt.Value))", span="744-744"];
m52_59 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\'' />\r\n                                    </td>\r\n                                '' +\r\n''    <td class=\''min-width\''>'')", span="357-358"];
m52_61 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</td>\r\n                                    <td class=\''min-width\''>\r\n              '' +\r\n''                          '')", span="368-369"];
m52_62 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n'')", span="373-373"];
m52_63 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="string cronDescription = null", span="379-379"];
m52_64 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n'')", span="394-394"];
m52_65 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="cronDescription != null", span="399-399"];
m52_67 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(cronDescription)", span="410-410"];
m52_66 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            <code title=\'''')", span="405-405"];
m52_71 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            <code>'')", span="437-437"];
m52_68 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''>'')", span="415-415"];
m52_70 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</code>\r\n'')", span="425-425"];
m52_73 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</code>\r\n'')", span="447-447"];
m52_74 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n'')", span="457-458"];
m52_76 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            <span title=\'''')", span="469-469"];
m52_81 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            '')", span="501-501"];
m52_78 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\'' data-container=\''body\''>'')", span="479-479"];
m52_80 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</span>\r\n'')", span="489-489"];
m52_82 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral('' UTC\r\n'')", span="503-503"];
m52_83 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''word-break\''>\r\n'')", span="513-514"];
m52_85 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            '')", span="525-525"];
m52_89 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            <em>'')", span="549-549"];
m52_86 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral('' '')", span="527-527"];
m52_88 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n'')", span="537-537"];
m52_91 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</em>\r\n'')", span="559-559"];
m52_92 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="569-570"];
m52_95 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            <em>'')", span="598-598"];
m52_96 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_NotAvailable)", span="603-603"];
m52_97 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</em>\r\n'')", span="608-608"];
m52_98 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="618-619"];
m52_113 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            <em>'')", span="710-710"];
m52_101 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                                <a href=\'''')", span="632-632"];
m52_108 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                                <em>\r\n                           '' +\r\n''                         '')", span="676-677"];
m52_103 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''>\r\n                                                    <span class=\''label label-'' +\r\n''default label-hover\'' style=\'''')", span="642-643"];
m52_105 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\''>\r\n                                                        '')", span="653-653"];
m52_107 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n                                                    </span>\r\n                  '' +\r\n''                              </a>\r\n'')", span="663-664"];
m52_109 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.RecurringJobsPage_Canceled)", span="682-682"];
m52_110 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral('' '')", span="687-687"];
m52_112 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n                                                </em>\r\n'')", span="697-697"];
m52_114 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Write(Strings.Common_NotAvailable)", span="715-715"];
m52_115 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''</em>\r\n'')", span="720-720"];
m52_116 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="730-731"];
m52_119 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="759-759"];
m52_120 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                                    </td>\r\n                                </tr>\r'' +\r\n''\n'')", span="769-770"];
m52_123 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''                    '')", span="792-792"];
m52_127 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''            </div>\r\n'')", span="814-814"];
m52_124 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral('' '')", span="794-794"];
m52_126 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''\r\n'')", span="804-804"];
m52_128 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="WriteLiteral(''    </div>\r\n</div>    '')", span="824-824"];
m52_129 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="WorkerContext.cs", label="Exit Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m52_139 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="WorkerContext.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m52_136 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", file="WorkerContext.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", span="38-38"];
m52_150 [file="WorkerContext.cs", label="Hangfire.Dashboard.Pages.RecurringJobsPage", span=""];
m53_43 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="80-80"];
m53_44 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="WorkerPool.cs", label="_freeWorkers.Add(worker)", span="82-82"];
m53_45 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="WorkerPool.cs", label="Exit HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="80-80"];
m53_12 [cluster="System.Collections.Generic.List<T>.List(int)", file="WorkerPool.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m53_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerPool.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m53_40 [cluster="HangFire.Server.Worker.Stop()", file="WorkerPool.cs", label="Entry HangFire.Server.Worker.Stop()", span="70-70"];
m53_46 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="WorkerPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m53_0 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="18-18"];
m53_1 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="_workers = new List<Worker>(serverContext.WorkersCount)", span="23-23"];
m53_3 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="_logger.Info(String.Format(''Starting {0} workers...'', serverContext.WorkersCount))", span="26-26"];
m53_5 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="i < serverContext.WorkersCount", span="28-28"];
m53_6 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=2, file="WorkerPool.cs", label="3: var worker = new Worker(\r\n                    this,\r\n                    serverContext,\r\n                    i,\r\n                    jobInvoker,\r\n                    jobActivator)", span="30-35"];
m53_2 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="_freeWorkers = new BlockingCollection<Worker>()", span="24-24"];
m53_4 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="var i = 0", span="28-28"];
m53_9 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="i++", span="28-28"];
m53_10 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="_logger.Info(''Workers were started.'')", span="41-41"];
m53_7 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="worker.Start()", span="37-37"];
m53_8 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="_workers.Add(worker)", span="38-38"];
m53_11 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="Exit HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="18-18"];
m53_27 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m53_13 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="WorkerPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m53_42 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="WorkerPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m53_26 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="WorkerPool.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m53_19 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="44-44"];
m53_20 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="46-46"];
m53_22 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="worker = _freeWorkers.Take(cancellationToken)", span="51-51"];
m53_21 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Worker worker", span="48-48"];
m53_23 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="worker.Crashed", span="53-53"];
m53_24 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="return worker;", span="55-55"];
m53_25 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Exit HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="44-44"];
m53_41 [cluster="HangFire.Server.Worker.Dispose()", file="WorkerPool.cs", label="Entry HangFire.Server.Worker.Dispose()", span="110-110"];
m53_14 [cluster="string.Format(string, object)", file="WorkerPool.cs", label="Entry string.Format(string, object)", span="0-0"];
m53_28 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerPool.Dispose()", span="58-58"];
m53_29 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label=_disposed, span="60-60"];
m53_30 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="return;", span="61-61"];
m53_31 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="_disposed = true", span="63-63"];
m53_32 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="_logger.Info(''Stopping workers...'')", span="65-65"];
m53_33 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label=_workers, span="66-66"];
m53_34 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="worker.Stop()", span="68-68"];
m53_35 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label=_workers, span="71-71"];
m53_36 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="worker.Dispose()", span="73-73"];
m53_37 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="_logger.Info(''Workers were stopped.'')", span="75-75"];
m53_38 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="_freeWorkers.Dispose()", span="77-77"];
m53_39 [cluster="HangFire.Server.WorkerPool.Dispose()", file="WorkerPool.cs", label="Exit HangFire.Server.WorkerPool.Dispose()", span="58-58"];
m53_17 [cluster="HangFire.Server.Worker.Start()", file="WorkerPool.cs", label="Entry HangFire.Server.Worker.Start()", span="57-57"];
m53_15 [cluster="Unk.Info", file="WorkerPool.cs", label="Entry Unk.Info", span=""];
m53_16 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="WorkerPool.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
m53_47 [file="WorkerPool.cs", label="HangFire.Server.WorkerPool", span=""];
n17 -> n1  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n17 -> n2  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n17 -> n7  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n17 -> n9  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n17 -> n15  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n12  [key=2, style=dotted];
n7 -> n10  [color=darkseagreen4, key=1, label=wasStopped, style=dashed];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=2, style=dotted];
n11 -> n6  [color=blue, key=0, style=bold];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n6  [key=2, style=dotted];
n16 -> n14  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_17  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_20  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_21  [key=2, style=dotted];
m0_20 -> n12  [color=blue, key=0, style=bold];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_15  [key=2, style=dotted];
m0_76 -> m0_16  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_77 -> m0_56  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_57  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_58  [key=2, style=dotted];
m0_79 -> m0_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_80 -> m0_75  [color=blue, key=0, style=bold];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_56  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_57  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_58  [key=2, style=dotted];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_66  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_15  [color=green, key=2, style=dotted];
m0_6 -> m0_16  [color=green, key=2, style=dotted];
m0_6 -> m0_17  [color=green, key=1, label="lambda expression", style=dashed];
m0_25 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_3  [color=red, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_8  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_10  [color=red, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_23  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_50 -> m0_51  [color=green, key=0, style=solid];
m0_51 -> m0_52  [color=green, key=0, style=solid];
m0_51 -> m0_56  [color=green, key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_58  [key=2, style=dotted];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_58  [key=2, style=dotted];
m0_54 -> m0_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_55 -> m0_50  [color=blue, key=0, style=bold];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_20  [key=2, style=dotted];
m0_34 -> m0_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=2, style=dotted];
m0_36 -> m0_33  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_10  [key=2, style=dotted];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_12  [color=green, key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_13  [key=2, style=dotted];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_14  [key=2, style=dotted];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> n12  [key=2, style=dotted];
m0_23 -> m0_25  [color=green, key=2, style=dotted];
m0_24 -> m0_22  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_15  [color=green, key=2, style=dotted];
m0_7 -> m0_16  [color=green, key=2, style=dotted];
m0_7 -> m0_22  [color=green, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_10  [color=red, key=0, style=solid];
m0_9 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_12  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=2, style=dotted];
m0_39 -> m0_42  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_41  [key=2, style=dotted];
m0_48 -> m0_42  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_60 -> m0_25  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_40 -> m0_38  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_49 -> m0_47  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_28 -> m0_26  [color=blue, key=0, style=bold];
m0_27 -> m0_20  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_27 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_61 -> m0_59  [color=blue, key=0, style=bold];
m0_72 -> m0_20  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_74  [key=2, style=dotted];
m0_82 -> m0_20  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_29  [key=2, style=dotted];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_88 -> m0_20  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_74  [key=2, style=dotted];
m0_64 -> m0_62  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=2, style=dotted];
m0_73 -> m0_71  [color=blue, key=0, style=bold];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_89 -> m0_87  [color=blue, key=0, style=bold];
m0_30 -> m0_31  [key=0, style=solid];
m0_32 -> m0_30  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_84  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_13  [color=red, key=2, style=dotted];
m0_11 -> m0_7  [color=blue, key=0, style=bold];
m0_56 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_41  [key=2, style=dotted];
m0_91 -> m0_56  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_20  [key=2, style=dotted];
m0_44 -> m0_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_37  [key=2, style=dotted];
m0_46 -> m0_43  [color=blue, key=0, style=bold];
m0_92 -> m0_3  [color=green, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_6  [color=green, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_7  [color=green, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_51  [color=green, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m0_92 -> m0_90  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> m1_3  [color=red, key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_7 -> m1_1  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m1_7 -> m1_5  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_14 -> m2_15  [color=green, key=0, style=solid];
m2_14 -> m2_16  [color=green, key=2, style=dotted];
m2_14 -> m2_17  [color=green, key=2, style=dotted];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_9 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_8  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_0 -> m2_2  [color=green, key=1, label=string, style=dashed];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [color=red, key=0, style=solid];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_7  [color=red, key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_18 -> m2_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_18 -> m2_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_32  [key=2, style=dotted];
m2_19 -> m2_29  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_19 -> m2_30  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_30  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_30  [key=0, style=solid];
m2_21 -> m2_33  [key=2, style=dotted];
m2_21 -> m2_28  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m2_21 -> m2_29  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_34  [key=2, style=dotted];
m2_22 -> m2_24  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m2_22 -> m2_26  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m2_29 -> m2_21  [key=0, style=solid];
m2_29 -> m2_12  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_28 -> m2_31  [key=0, style=solid];
m2_28 -> m2_38  [key=2, style=dotted];
m2_28 -> m2_39  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_29  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_23 -> m2_23  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_29  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_35  [key=2, style=dotted];
m2_25 -> m2_36  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=0, style=solid];
m2_26 -> m2_37  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_31 -> m2_18  [color=blue, key=0, style=bold];
m2_40 -> m2_1  [color=green, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m2_40 -> m2_2  [color=green, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m2_40 -> m2_5  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m2_40 -> m2_9  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m2_40 -> m2_14  [color=green, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientJobExceptionContext", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_16 -> m7_6  [color=green, key=0, style=solid];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_5 -> m7_16  [color=green, key=1, label=job, style=dashed];
m7_5 -> m7_17  [color=green, key=1, label=job, style=dashed];
m7_5 -> m7_18  [color=green, key=1, label=job, style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_14 -> m7_16  [color=green, key=0, style=solid];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_14 -> m7_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_14 -> m7_25  [key=2, style=dotted];
m7_14 -> m7_26  [key=2, style=dotted];
m7_13 -> m7_16  [color=green, key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_11 -> m7_16  [color=green, key=1, label=job, style=dashed];
m7_11 -> m7_17  [color=green, key=1, label=job, style=dashed];
m7_11 -> m7_18  [color=green, key=1, label=job, style=dashed];
m7_11 -> m7_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_24  [key=2, style=dotted];
m7_11 -> m7_21  [key=2, style=dotted];
m7_6 -> m7_18  [color=green, key=1, label=queueName, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_17 -> m7_18  [color=green, key=0, style=solid];
m7_17 -> m7_27  [color=green, key=2, style=dotted];
m7_18 -> m7_19  [color=green, key=0, style=solid];
m7_18 -> m7_28  [color=green, key=2, style=dotted];
m7_18 -> m7_29  [color=green, key=2, style=dotted];
m7_12 -> m7_18  [color=green, key=1, label=queueName, style=dashed];
m7_12 -> m7_13  [key=0, style=solid];
m7_15 -> m7_19  [color=green, key=0, style=solid];
m7_8 -> m7_13  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_23  [key=2, style=dotted];
m7_9 -> m7_11  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_22  [key=2, style=dotted];
m7_7 -> m7_12  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_10  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m7_7 -> m7_21  [key=2, style=dotted];
m7_7 -> m7_20  [key=2, style=dotted];
m7_19 -> m7_4  [color=blue, key=0, style=bold];
m7_30 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m7_30 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m7_30 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m7_30 -> m7_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m8_65 -> m8_66  [color=green, key=0, style=solid];
m8_66 -> m8_67  [color=green, key=0, style=solid];
m8_66 -> m8_38  [color=green, key=2, style=dotted];
m8_67 -> m8_22  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_26  [key=2, style=dotted];
m8_68 -> m8_39  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_71 -> m8_40  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_53  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_53  [key=2, style=dotted];
m8_72 -> m8_41  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_53  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_53  [key=2, style=dotted];
m8_73 -> m8_53  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_77 -> m8_65  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [color=green, key=0, style=solid];
m8_55 -> m8_56  [color=green, key=0, style=solid];
m8_55 -> m8_38  [color=green, key=2, style=dotted];
m8_56 -> m8_22  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_26  [key=2, style=dotted];
m8_57 -> m8_39  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_59 -> m8_40  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_53  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_53  [key=2, style=dotted];
m8_60 -> m8_41  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_53  [key=2, style=dotted];
m8_64 -> m8_54  [color=blue, key=0, style=bold];
m8_78 -> m8_79  [color=green, key=0, style=solid];
m8_79 -> m8_80  [color=green, key=0, style=solid];
m8_79 -> m8_38  [color=green, key=2, style=dotted];
m8_80 -> m8_22  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_26  [key=2, style=dotted];
m8_81 -> m8_39  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_83 -> m8_40  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_53  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_53  [key=2, style=dotted];
m8_84 -> m8_41  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_53  [key=2, style=dotted];
m8_85 -> m8_53  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_89 -> m8_78  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [color=green, key=0, style=solid];
m8_43 -> m8_44  [color=green, key=0, style=solid];
m8_43 -> m8_38  [color=green, key=2, style=dotted];
m8_44 -> m8_22  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_26  [key=2, style=dotted];
m8_45 -> m8_39  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_47 -> m8_40  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_53  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_53  [key=2, style=dotted];
m8_48 -> m8_41  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_53  [key=2, style=dotted];
m8_52 -> m8_42  [color=blue, key=0, style=bold];
m8_22 -> m8_31  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_43  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_55  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_66  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_79  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_91  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_102  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_114  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_123  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_22 -> m8_133  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=2, style=dotted];
m8_24 -> m8_22  [color=blue, key=0, style=bold];
m8_101 -> m8_102  [color=green, key=0, style=solid];
m8_102 -> m8_103  [color=green, key=0, style=solid];
m8_102 -> m8_38  [color=green, key=2, style=dotted];
m8_103 -> m8_22  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_26  [key=2, style=dotted];
m8_104 -> m8_39  [key=2, style=dotted];
m8_104 -> m8_105  [key=0, style=solid];
m8_107 -> m8_40  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_112  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_53  [key=2, style=dotted];
m8_108 -> m8_41  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_53  [key=2, style=dotted];
m8_111 -> m8_101  [color=blue, key=0, style=bold];
m8_132 -> m8_133  [key=0, style=solid];
m8_134 -> m8_22  [key=2, style=dotted];
m8_134 -> m8_135  [key=0, style=solid];
m8_133 -> m8_38  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_26  [key=2, style=dotted];
m8_135 -> m8_39  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_138 -> m8_40  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_112  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_53  [key=2, style=dotted];
m8_139 -> m8_41  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_53  [key=2, style=dotted];
m8_142 -> m8_132  [color=blue, key=0, style=bold];
m8_113 -> m8_114  [key=0, style=solid];
m8_115 -> m8_22  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_114 -> m8_38  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_26  [key=2, style=dotted];
m8_118 -> m8_40  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_53  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_41  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_53  [key=2, style=dotted];
m8_121 -> m8_113  [color=blue, key=0, style=bold];
m8_122 -> m8_123  [key=0, style=solid];
m8_124 -> m8_22  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_123 -> m8_38  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_26  [key=2, style=dotted];
m8_125 -> m8_39  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_127 -> m8_40  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_53  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_53  [key=2, style=dotted];
m8_128 -> m8_41  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_131 -> m8_122  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [color=green, key=0, style=solid];
m8_31 -> m8_32  [color=green, key=0, style=solid];
m8_31 -> m8_38  [color=green, key=2, style=dotted];
m8_32 -> m8_33  [color=green, key=0, style=solid];
m8_32 -> m8_22  [color=green, key=2, style=dotted];
m8_33 -> m8_34  [color=green, key=0, style=solid];
m8_33 -> m8_39  [color=green, key=2, style=dotted];
m8_34 -> m8_35  [color=green, key=0, style=solid];
m8_34 -> m8_40  [color=green, key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_41  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_26  [key=2, style=dotted];
m8_37 -> m8_30  [color=blue, key=0, style=bold];
m8_90 -> m8_91  [color=green, key=0, style=solid];
m8_91 -> m8_92  [color=green, key=0, style=solid];
m8_91 -> m8_38  [color=green, key=2, style=dotted];
m8_92 -> m8_22  [key=2, style=dotted];
m8_92 -> m8_93  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_26  [key=2, style=dotted];
m8_93 -> m8_39  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_96 -> m8_40  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_53  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_53  [key=2, style=dotted];
m8_97 -> m8_41  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_53  [key=2, style=dotted];
m8_100 -> m8_90  [color=blue, key=0, style=bold];
m8_143 -> m8_32  [color=green, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_36  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_44  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_51  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_56  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_63  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_67  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_76  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_80  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_88  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_99  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_103  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_110  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_115  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_120  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_124  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_130  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_134  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m8_143 -> m8_141  [color=darkseagreen4, key=1, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", style=dashed];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_31  [key=2, style=dotted];
m9_5 -> m9_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_33  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m9_2 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_30  [key=2, style=dotted];
m9_2 -> m9_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_2 -> m9_5  [color=green, key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_31  [key=2, style=dotted];
m9_3 -> m9_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_3 -> m9_6  [key=2, style=dotted];
m9_3 -> m9_7  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_31  [key=2, style=dotted];
m9_4 -> m9_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_31  [key=2, style=dotted];
m9_6 -> m9_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_31  [key=2, style=dotted];
m9_7 -> m9_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_31  [key=2, style=dotted];
m9_8 -> m9_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_31  [key=2, style=dotted];
m9_9 -> m9_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_31  [key=2, style=dotted];
m9_10 -> m9_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_31  [key=2, style=dotted];
m9_11 -> m9_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_31  [key=2, style=dotted];
m9_12 -> m9_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_31  [key=2, style=dotted];
m9_13 -> m9_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_31  [key=2, style=dotted];
m9_14 -> m9_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_31  [key=2, style=dotted];
m9_15 -> m9_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_31  [key=2, style=dotted];
m9_16 -> m9_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_31  [key=2, style=dotted];
m9_17 -> m9_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_31  [key=2, style=dotted];
m9_18 -> m9_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_31  [key=2, style=dotted];
m9_19 -> m9_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_31  [key=2, style=dotted];
m9_20 -> m9_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_31  [key=2, style=dotted];
m9_21 -> m9_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_31  [key=2, style=dotted];
m9_22 -> m9_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_31  [key=2, style=dotted];
m9_23 -> m9_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_31  [key=2, style=dotted];
m9_24 -> m9_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_31  [key=2, style=dotted];
m9_25 -> m9_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_31  [key=2, style=dotted];
m9_26 -> m9_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_31  [key=2, style=dotted];
m9_27 -> m9_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_31  [key=2, style=dotted];
m9_28 -> m9_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_29 -> m9_0  [color=blue, key=0, style=bold];
m9_179 -> m9_180  [key=0, style=solid];
m9_180 -> m9_181  [key=0, style=solid];
m9_181 -> m9_179  [color=blue, key=0, style=bold];
m9_220 -> m9_221  [key=0, style=solid];
m9_221 -> m9_222  [key=0, style=solid];
m9_221 -> m9_223  [key=2, style=dotted];
m9_222 -> m9_220  [color=blue, key=0, style=bold];
m9_200 -> m9_201  [key=0, style=solid];
m9_200 -> m9_209  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_203  [key=0, style=solid];
m9_201 -> m9_214  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_218  [key=2, style=dotted];
m9_209 -> m9_211  [color=darkseagreen4, key=1, label=match, style=dashed];
m9_202 -> m9_213  [key=0, style=solid];
m9_202 -> m9_215  [key=2, style=dotted];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_212  [key=0, style=solid];
m9_203 -> m9_211  [color=darkseagreen4, key=1, label=pathHandlerFactory, style=dashed];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_206  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_204 -> m9_207  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_204 -> m9_208  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_204 -> m9_209  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_212 -> m9_213  [key=0, style=solid];
m9_211 -> m9_213  [key=0, style=solid];
m9_211 -> m9_219  [key=2, style=dotted];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_207  [key=0, style=solid];
m9_205 -> m9_216  [key=2, style=dotted];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_206  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_206 -> m9_208  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_206 -> m9_209  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_209  [key=0, style=solid];
m9_207 -> m9_217  [key=2, style=dotted];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_208  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_203  [key=0, style=solid];
m9_213 -> m9_200  [color=blue, key=0, style=bold];
m9_155 -> m9_156  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_48 -> m9_49  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_71 -> m9_72  [key=0, style=solid];
m9_75 -> m9_76  [key=0, style=solid];
m9_82 -> m9_83  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_105 -> m9_106  [key=0, style=solid];
m9_109 -> m9_110  [key=0, style=solid];
m9_113 -> m9_114  [key=0, style=solid];
m9_119 -> m9_120  [key=0, style=solid];
m9_123 -> m9_124  [key=0, style=solid];
m9_129 -> m9_130  [key=0, style=solid];
m9_135 -> m9_136  [key=0, style=solid];
m9_139 -> m9_140  [key=0, style=solid];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_150  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_156  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m9_158 -> m9_159  [key=0, style=solid];
m9_162 -> m9_163  [key=0, style=solid];
m9_166 -> m9_167  [key=0, style=solid];
m9_170 -> m9_171  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_34 -> m9_32  [color=blue, key=0, style=bold];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_39  [key=2, style=dotted];
m9_38 -> m9_36  [color=blue, key=0, style=bold];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_43  [key=2, style=dotted];
m9_42 -> m9_40  [color=blue, key=0, style=bold];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_47  [key=2, style=dotted];
m9_46 -> m9_44  [color=blue, key=0, style=bold];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_51  [key=2, style=dotted];
m9_50 -> m9_48  [color=blue, key=0, style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_55  [key=2, style=dotted];
m9_54 -> m9_52  [color=blue, key=0, style=bold];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_59  [key=2, style=dotted];
m9_57 -> m9_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_58 -> m9_56  [color=blue, key=0, style=bold];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_63  [key=2, style=dotted];
m9_60 -> m9_61  [key=0, style=solid];
m9_62 -> m9_60  [color=blue, key=0, style=bold];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_59  [key=2, style=dotted];
m9_65 -> m9_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_66 -> m9_64  [color=blue, key=0, style=bold];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_70  [key=2, style=dotted];
m9_67 -> m9_68  [key=0, style=solid];
m9_69 -> m9_67  [color=blue, key=0, style=bold];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_74  [key=2, style=dotted];
m9_73 -> m9_71  [color=blue, key=0, style=bold];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_59  [key=2, style=dotted];
m9_76 -> m9_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_75  [color=blue, key=0, style=bold];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_81  [key=2, style=dotted];
m9_78 -> m9_79  [key=0, style=solid];
m9_80 -> m9_78  [color=blue, key=0, style=bold];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_59  [key=2, style=dotted];
m9_83 -> m9_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_84 -> m9_82  [color=blue, key=0, style=bold];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_88  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_87 -> m9_85  [color=blue, key=0, style=bold];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_92  [key=2, style=dotted];
m9_91 -> m9_89  [color=blue, key=0, style=bold];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_59  [key=2, style=dotted];
m9_94 -> m9_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_95 -> m9_93  [color=blue, key=0, style=bold];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_88  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_98 -> m9_96  [color=blue, key=0, style=bold];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_59  [key=2, style=dotted];
m9_100 -> m9_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_101 -> m9_99  [color=blue, key=0, style=bold];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_81  [key=2, style=dotted];
m9_102 -> m9_103  [key=0, style=solid];
m9_104 -> m9_102  [color=blue, key=0, style=bold];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_108  [key=2, style=dotted];
m9_107 -> m9_105  [color=blue, key=0, style=bold];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_112  [key=2, style=dotted];
m9_111 -> m9_109  [color=blue, key=0, style=bold];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_59  [key=2, style=dotted];
m9_114 -> m9_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_115 -> m9_113  [color=blue, key=0, style=bold];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_88  [key=2, style=dotted];
m9_116 -> m9_117  [key=0, style=solid];
m9_118 -> m9_116  [color=blue, key=0, style=bold];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_122  [key=2, style=dotted];
m9_121 -> m9_119  [color=blue, key=0, style=bold];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_59  [key=2, style=dotted];
m9_124 -> m9_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_125 -> m9_123  [color=blue, key=0, style=bold];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_88  [key=2, style=dotted];
m9_126 -> m9_127  [key=0, style=solid];
m9_128 -> m9_126  [color=blue, key=0, style=bold];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_59  [key=2, style=dotted];
m9_130 -> m9_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_131 -> m9_129  [color=blue, key=0, style=bold];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_81  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_134 -> m9_132  [color=blue, key=0, style=bold];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_138  [key=2, style=dotted];
m9_137 -> m9_135  [color=blue, key=0, style=bold];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_59  [key=2, style=dotted];
m9_140 -> m9_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_141 -> m9_139  [color=blue, key=0, style=bold];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_88  [key=2, style=dotted];
m9_142 -> m9_143  [key=0, style=solid];
m9_144 -> m9_142  [color=blue, key=0, style=bold];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_148  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_70  [key=2, style=dotted];
m9_147 -> m9_145  [color=blue, key=0, style=bold];
m9_149 -> m9_150  [key=0, style=solid];
m9_151 -> m9_149  [color=blue, key=0, style=bold];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_148  [key=2, style=dotted];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_63  [key=2, style=dotted];
m9_154 -> m9_152  [color=blue, key=0, style=bold];
m9_157 -> m9_155  [color=blue, key=0, style=bold];
m9_159 -> m9_160  [key=0, style=solid];
m9_159 -> m9_161  [key=2, style=dotted];
m9_160 -> m9_158  [color=blue, key=0, style=bold];
m9_163 -> m9_164  [key=0, style=solid];
m9_163 -> m9_165  [key=2, style=dotted];
m9_164 -> m9_162  [color=blue, key=0, style=bold];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_169  [key=2, style=dotted];
m9_168 -> m9_166  [color=blue, key=0, style=bold];
m9_171 -> m9_172  [key=0, style=solid];
m9_171 -> m9_173  [key=2, style=dotted];
m9_172 -> m9_170  [color=blue, key=0, style=bold];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_185  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m9_182 -> m9_186  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m9_182 -> m9_187  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m9_182 -> m9_188  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m9_182 -> m9_192  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_185  [key=0, style=solid];
m9_185 -> m9_186  [key=0, style=solid];
m9_185 -> m9_187  [key=0, style=solid];
m9_186 -> m9_194  [key=0, style=solid];
m9_186 -> m9_196  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_197  [key=2, style=dotted];
m9_188 -> m9_189  [key=0, style=solid];
m9_192 -> m9_194  [key=0, style=solid];
m9_192 -> m9_196  [key=2, style=dotted];
m9_184 -> m9_194  [key=0, style=solid];
m9_184 -> m9_195  [key=2, style=dotted];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_198  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_190 -> m9_199  [key=2, style=dotted];
m9_190 -> m9_193  [color=darkseagreen4, key=1, label=handler, style=dashed];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_193  [key=0, style=solid];
m9_193 -> m9_194  [key=0, style=solid];
m9_194 -> m9_182  [color=blue, key=0, style=bold];
m9_224 -> m9_225  [key=0, style=solid];
m9_225 -> m9_226  [key=0, style=solid];
m9_225 -> m9_220  [key=2, style=dotted];
m9_225 -> m9_223  [key=2, style=dotted];
m9_226 -> m9_224  [color=blue, key=0, style=bold];
m9_174 -> m9_175  [key=0, style=solid];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_177  [key=2, style=dotted];
m9_175 -> m9_178  [key=2, style=dotted];
m9_176 -> m9_174  [color=blue, key=0, style=bold];
m9_227 -> m9_228  [key=0, style=solid];
m9_228 -> m9_227  [color=blue, key=0, style=bold];
m9_229 -> m9_150  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m9_230 -> m9_156  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m9_231 -> m9_190  [color=darkseagreen4, key=1, label="HangFire.Web.HangFirePageFactory", style=dashed];
m10_182 -> m10_183  [key=0, style=solid];
m10_182 -> m10_184  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<int>", style=dashed];
m10_183 -> m10_184  [key=0, style=solid];
m10_184 -> m10_185  [key=0, style=solid];
m10_184 -> m10_38  [key=2, style=dotted];
m10_184 -> m10_57  [key=2, style=dotted];
m10_184 -> m10_186  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m10_185 -> m10_186  [key=0, style=solid];
m10_185 -> m10_190  [key=2, style=dotted];
m10_185 -> m10_187  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_185 -> m10_188  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_188  [key=0, style=solid];
m10_187 -> m10_186  [key=0, style=solid];
m10_187 -> m10_191  [key=2, style=dotted];
m10_187 -> m10_192  [key=2, style=dotted];
m10_187 -> m10_193  [key=2, style=dotted];
m10_187 -> m10_194  [key=2, style=dotted];
m10_187 -> m10_73  [key=2, style=dotted];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_74  [key=2, style=dotted];
m10_189 -> m10_182  [color=blue, key=0, style=bold];
m10_232 -> m10_233  [key=0, style=solid];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_248  [key=2, style=dotted];
m10_233 -> m10_238  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_239  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_240  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_241  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_242  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_243  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_244  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_245  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_233 -> m10_246  [color=darkseagreen4, key=1, label=stats, style=dashed];
m10_234 -> m10_235  [key=0, style=solid];
m10_238 -> m10_239  [key=0, style=solid];
m10_238 -> m10_250  [key=2, style=dotted];
m10_239 -> m10_240  [key=0, style=solid];
m10_239 -> m10_250  [key=2, style=dotted];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_250  [key=2, style=dotted];
m10_241 -> m10_242  [key=0, style=solid];
m10_241 -> m10_250  [key=2, style=dotted];
m10_242 -> m10_243  [key=0, style=solid];
m10_242 -> m10_38  [key=2, style=dotted];
m10_242 -> m10_39  [key=2, style=dotted];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_38  [key=2, style=dotted];
m10_243 -> m10_213  [key=2, style=dotted];
m10_244 -> m10_245  [key=0, style=solid];
m10_244 -> m10_38  [key=2, style=dotted];
m10_244 -> m10_213  [key=2, style=dotted];
m10_245 -> m10_246  [key=0, style=solid];
m10_245 -> m10_251  [key=2, style=dotted];
m10_245 -> m10_252  [key=2, style=dotted];
m10_245 -> m10_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_246 -> m10_247  [key=0, style=solid];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_212  [key=2, style=dotted];
m10_235 -> m10_242  [color=darkseagreen4, key=1, label=multi, style=dashed];
m10_235 -> m10_243  [color=darkseagreen4, key=1, label=multi, style=dashed];
m10_235 -> m10_244  [color=darkseagreen4, key=1, label=multi, style=dashed];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_249  [key=2, style=dotted];
m10_236 -> m10_214  [key=2, style=dotted];
m10_236 -> m10_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_236 -> m10_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_236 -> m10_260  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m10_237 -> m10_238  [key=0, style=solid];
m10_237 -> m10_260  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_237 -> m10_239  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m10_237 -> m10_240  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m10_237 -> m10_241  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m10_247 -> m10_232  [color=blue, key=0, style=bold];
m10_93 -> m10_94  [key=0, style=solid];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_92  [key=2, style=dotted];
m10_95 -> m10_93  [color=blue, key=0, style=bold];
m10_198 -> m10_267  [key=0, style=solid];
m10_198 -> m10_274  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_198 -> m10_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_267 -> m10_268  [key=0, style=solid];
m10_267 -> m10_271  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m10_267 -> m10_272  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m10_274 -> m10_275  [key=0, style=solid];
m10_274 -> m10_138  [key=2, style=dotted];
m10_274 -> m10_57  [key=2, style=dotted];
m10_274 -> m10_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_274 -> m10_276  [color=darkseagreen4, key=1, label=keys, style=dashed];
m10_274 -> m10_277  [color=darkseagreen4, key=1, label=keys, style=dashed];
m10_268 -> m10_269  [key=0, style=solid];
m10_268 -> m10_104  [key=2, style=dotted];
m10_268 -> m10_271  [color=darkseagreen4, key=1, label=dates, style=dashed];
m10_268 -> m10_274  [color=darkseagreen4, key=1, label=dates, style=dashed];
m10_268 -> m10_282  [color=darkseagreen4, key=1, label=dates, style=dashed];
m10_268 -> m10_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m10_271 -> m10_272  [key=0, style=solid];
m10_271 -> m10_73  [key=2, style=dotted];
m10_272 -> m10_273  [key=0, style=solid];
m10_272 -> m10_288  [key=2, style=dotted];
m10_272 -> m10_272  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m10_269 -> m10_270  [key=0, style=solid];
m10_269 -> m10_273  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_282 -> m10_283  [key=0, style=solid];
m10_282 -> m10_286  [key=0, style=solid];
m10_284 -> m10_285  [key=0, style=solid];
m10_284 -> m10_290  [key=2, style=dotted];
m10_270 -> m10_271  [key=0, style=solid];
m10_270 -> m10_274  [key=0, style=solid];
m10_273 -> m10_270  [key=0, style=solid];
m10_273 -> m10_273  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_275 -> m10_276  [key=0, style=solid];
m10_276 -> m10_277  [key=0, style=solid];
m10_276 -> m10_289  [key=2, style=dotted];
m10_276 -> m10_214  [key=2, style=dotted];
m10_276 -> m10_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_276 -> m10_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_276 -> m10_278  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m10_276 -> m10_279  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m10_276 -> m10_283  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m10_277 -> m10_278  [key=0, style=solid];
m10_277 -> m10_280  [key=0, style=solid];
m10_277 -> m10_279  [color=darkseagreen4, key=1, label=key, style=dashed];
m10_278 -> m10_279  [key=0, style=solid];
m10_278 -> m10_277  [key=0, style=solid];
m10_278 -> m10_262  [key=2, style=dotted];
m10_279 -> m10_277  [key=0, style=solid];
m10_279 -> m10_290  [key=2, style=dotted];
m10_283 -> m10_284  [key=0, style=solid];
m10_283 -> m10_292  [key=2, style=dotted];
m10_280 -> m10_281  [key=0, style=solid];
m10_280 -> m10_291  [key=2, style=dotted];
m10_280 -> m10_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_280 -> m10_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_281 -> m10_282  [key=0, style=solid];
m10_281 -> m10_283  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_281 -> m10_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_281 -> m10_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_286 -> m10_287  [key=0, style=solid];
m10_285 -> m10_282  [key=0, style=solid];
m10_285 -> m10_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_287 -> m10_198  [color=blue, key=0, style=bold];
m10_202 -> m10_203  [key=0, style=solid];
m10_202 -> m10_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_203 -> m10_204  [key=0, style=solid];
m10_204 -> m10_205  [key=0, style=solid];
m10_204 -> m10_212  [key=2, style=dotted];
m10_204 -> m10_208  [color=darkseagreen4, key=1, label=multi, style=dashed];
m10_204 -> m10_209  [color=darkseagreen4, key=1, label=multi, style=dashed];
m10_205 -> m10_206  [key=0, style=solid];
m10_205 -> m10_38  [key=2, style=dotted];
m10_205 -> m10_213  [key=2, style=dotted];
m10_205 -> m10_210  [color=darkseagreen4, key=1, label=job, style=dashed];
m10_208 -> m10_209  [key=0, style=solid];
m10_208 -> m10_38  [key=2, style=dotted];
m10_208 -> m10_214  [key=2, style=dotted];
m10_208 -> m10_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_208 -> m10_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_208 -> m10_210  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_38  [key=2, style=dotted];
m10_209 -> m10_57  [key=2, style=dotted];
m10_209 -> m10_138  [key=2, style=dotted];
m10_209 -> m10_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_206 -> m10_207  [key=0, style=solid];
m10_206 -> m10_208  [key=0, style=solid];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_215  [key=2, style=dotted];
m10_210 -> m10_194  [key=2, style=dotted];
m10_207 -> m10_211  [key=0, style=solid];
m10_211 -> m10_202  [color=blue, key=0, style=bold];
m10_40 -> m10_41  [key=0, style=solid];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_19  [key=2, style=dotted];
m10_42 -> m10_40  [color=blue, key=0, style=bold];
m10_195 -> m10_196  [key=0, style=solid];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_198  [key=2, style=dotted];
m10_197 -> m10_195  [color=blue, key=0, style=bold];
m10_114 -> m10_115  [key=0, style=solid];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_46  [key=2, style=dotted];
m10_115 -> m10_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_116 -> m10_114  [color=blue, key=0, style=bold];
m10_106 -> m10_107  [key=0, style=solid];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_46  [key=2, style=dotted];
m10_107 -> m10_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_108 -> m10_106  [color=blue, key=0, style=bold];
m10_89 -> m10_90  [key=0, style=solid];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_92  [key=2, style=dotted];
m10_91 -> m10_89  [color=blue, key=0, style=bold];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_25  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_26  [key=2, style=dotted];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_27  [color=blue, key=0, style=bold];
m10_32 -> m10_33  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_19  [key=2, style=dotted];
m10_34 -> m10_32  [color=blue, key=0, style=bold];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>", style=dashed];
m10_59 -> m10_63  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_67  [key=2, style=dotted];
m10_60 -> m10_64  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_60 -> m10_65  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_65  [key=0, style=solid];
m10_61 -> m10_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m10_61 -> m10_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_69  [key=2, style=dotted];
m10_63 -> m10_70  [key=2, style=dotted];
m10_64 -> m10_61  [key=0, style=solid];
m10_64 -> m10_71  [key=2, style=dotted];
m10_64 -> m10_72  [key=2, style=dotted];
m10_64 -> m10_73  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_74  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_68  [key=2, style=dotted];
m10_66 -> m10_59  [color=blue, key=0, style=bold];
m10_25 -> m10_339  [key=0, style=solid];
m10_339 -> m10_340  [key=0, style=solid];
m10_339 -> m10_343  [key=2, style=dotted];
m10_340 -> m10_341  [key=0, style=solid];
m10_340 -> m10_150  [key=2, style=dotted];
m10_341 -> m10_342  [key=0, style=solid];
m10_342 -> m10_25  [color=blue, key=0, style=bold];
m10_336 -> m10_337  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_50  [key=2, style=dotted];
m10_48 -> m10_51  [key=2, style=dotted];
m10_48 -> m10_52  [key=2, style=dotted];
m10_49 -> m10_47  [color=blue, key=0, style=bold];
m10_85 -> m10_86  [key=0, style=solid];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_88  [key=2, style=dotted];
m10_86 -> m10_52  [key=2, style=dotted];
m10_87 -> m10_85  [color=blue, key=0, style=bold];
m10_109 -> m10_110  [key=0, style=solid];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_112  [key=2, style=dotted];
m10_110 -> m10_113  [key=2, style=dotted];
m10_111 -> m10_109  [color=blue, key=0, style=bold];
m10_117 -> m10_118  [key=0, style=solid];
m10_118 -> m10_119  [key=0, style=solid];
m10_118 -> m10_120  [key=2, style=dotted];
m10_118 -> m10_51  [key=2, style=dotted];
m10_118 -> m10_121  [key=2, style=dotted];
m10_118 -> m10_113  [key=2, style=dotted];
m10_119 -> m10_117  [color=blue, key=0, style=bold];
m10_125 -> m10_126  [key=0, style=solid];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_128  [key=2, style=dotted];
m10_126 -> m10_113  [key=2, style=dotted];
m10_127 -> m10_125  [color=blue, key=0, style=bold];
m10_147 -> m10_148  [key=0, style=solid];
m10_151 -> m10_152  [key=0, style=solid];
m10_155 -> m10_156  [key=0, style=solid];
m10_158 -> m10_159  [key=0, style=solid];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_150  [key=2, style=dotted];
m10_149 -> m10_147  [color=blue, key=0, style=bold];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_154  [key=2, style=dotted];
m10_153 -> m10_151  [color=blue, key=0, style=bold];
m10_156 -> m10_157  [key=0, style=solid];
m10_157 -> m10_155  [color=blue, key=0, style=bold];
m10_159 -> m10_160  [key=0, style=solid];
m10_160 -> m10_158  [color=blue, key=0, style=bold];
m10_172 -> m10_173  [key=0, style=solid];
m10_173 -> m10_174  [key=0, style=solid];
m10_173 -> m10_175  [key=2, style=dotted];
m10_173 -> m10_113  [key=2, style=dotted];
m10_174 -> m10_172  [color=blue, key=0, style=bold];
m10_216 -> m10_217  [key=0, style=solid];
m10_219 -> m10_220  [key=0, style=solid];
m10_222 -> m10_223  [key=0, style=solid];
m10_217 -> m10_218  [key=0, style=solid];
m10_218 -> m10_216  [color=blue, key=0, style=bold];
m10_220 -> m10_221  [key=0, style=solid];
m10_221 -> m10_219  [color=blue, key=0, style=bold];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_225  [key=2, style=dotted];
m10_223 -> m10_38  [key=2, style=dotted];
m10_224 -> m10_222  [color=blue, key=0, style=bold];
m10_253 -> m10_254  [key=0, style=solid];
m10_256 -> m10_257  [key=0, style=solid];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_262  [key=2, style=dotted];
m10_263 -> m10_264  [key=0, style=solid];
m10_254 -> m10_255  [key=0, style=solid];
m10_255 -> m10_253  [color=blue, key=0, style=bold];
m10_257 -> m10_258  [key=0, style=solid];
m10_258 -> m10_256  [color=blue, key=0, style=bold];
m10_259 -> m10_260  [key=0, style=solid];
m10_261 -> m10_259  [color=blue, key=0, style=bold];
m10_264 -> m10_265  [key=0, style=solid];
m10_264 -> m10_150  [key=2, style=dotted];
m10_264 -> m10_266  [key=2, style=dotted];
m10_265 -> m10_263  [color=blue, key=0, style=bold];
m10_294 -> m10_295  [key=0, style=solid];
m10_294 -> m10_296  [key=2, style=dotted];
m10_294 -> m10_297  [key=2, style=dotted];
m10_293 -> m10_294  [key=0, style=solid];
m10_298 -> m10_299  [key=0, style=solid];
m10_301 -> m10_302  [key=0, style=solid];
m10_295 -> m10_293  [color=blue, key=0, style=bold];
m10_299 -> m10_300  [key=0, style=solid];
m10_300 -> m10_298  [color=blue, key=0, style=bold];
m10_302 -> m10_303  [key=0, style=solid];
m10_303 -> m10_301  [color=blue, key=0, style=bold];
m10_330 -> m10_331  [key=0, style=solid];
m10_330 -> m10_332  [key=2, style=dotted];
m10_326 -> m10_327  [key=0, style=solid];
m10_329 -> m10_330  [key=0, style=solid];
m10_333 -> m10_334  [key=0, style=solid];
m10_327 -> m10_328  [key=0, style=solid];
m10_327 -> m10_296  [key=2, style=dotted];
m10_328 -> m10_326  [color=blue, key=0, style=bold];
m10_331 -> m10_329  [color=blue, key=0, style=bold];
m10_334 -> m10_335  [key=0, style=solid];
m10_335 -> m10_333  [color=blue, key=0, style=bold];
m10_337 -> m10_338  [key=0, style=solid];
m10_338 -> m10_336  [color=blue, key=0, style=bold];
m10_46 -> m10_53  [key=0, style=solid];
m10_46 -> m10_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_46 -> m10_55  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m10_53 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_38  [key=2, style=dotted];
m10_54 -> m10_57  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_58  [key=2, style=dotted];
m10_56 -> m10_46  [color=blue, key=0, style=bold];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_177 -> m10_178  [key=0, style=solid];
m10_177 -> m10_25  [key=2, style=dotted];
m10_178 -> m10_179  [key=0, style=solid];
m10_178 -> m10_181  [key=2, style=dotted];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_182  [key=2, style=dotted];
m10_180 -> m10_176  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_14  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_15  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_15  [key=2, style=dotted];
m10_13 -> m10_9  [color=blue, key=0, style=bold];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_169  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<int>", style=dashed];
m10_168 -> m10_169  [key=0, style=solid];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_38  [key=2, style=dotted];
m10_169 -> m10_57  [key=2, style=dotted];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_58  [key=2, style=dotted];
m10_170 -> m10_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_171 -> m10_167  [color=blue, key=0, style=bold];
m10_43 -> m10_44  [key=0, style=solid];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_46  [key=2, style=dotted];
m10_44 -> m10_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_45 -> m10_43  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_7  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_8  [key=2, style=dotted];
m10_5 -> m10_0  [color=blue, key=0, style=bold];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=2, style=dotted];
m10_18 -> m10_16  [color=blue, key=0, style=bold];
m10_82 -> m10_83  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_46  [key=2, style=dotted];
m10_83 -> m10_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_84 -> m10_82  [color=blue, key=0, style=bold];
m10_229 -> m10_230  [key=0, style=solid];
m10_230 -> m10_231  [key=0, style=solid];
m10_230 -> m10_19  [key=2, style=dotted];
m10_231 -> m10_229  [color=blue, key=0, style=bold];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_25  [key=2, style=dotted];
m10_163 -> m10_164  [key=0, style=solid];
m10_163 -> m10_166  [key=2, style=dotted];
m10_164 -> m10_165  [key=0, style=solid];
m10_164 -> m10_167  [key=2, style=dotted];
m10_165 -> m10_161  [color=blue, key=0, style=bold];
m10_96 -> m10_97  [key=0, style=solid];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_38  [key=2, style=dotted];
m10_97 -> m10_57  [key=2, style=dotted];
m10_97 -> m10_99  [color=darkseagreen4, key=1, label=servers, style=dashed];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_104  [key=2, style=dotted];
m10_98 -> m10_101  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_98 -> m10_102  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_102  [key=0, style=solid];
m10_99 -> m10_101  [color=darkseagreen4, key=1, label=server, style=dashed];
m10_101 -> m10_99  [key=0, style=solid];
m10_101 -> m10_105  [key=2, style=dotted];
m10_101 -> m10_73  [key=2, style=dotted];
m10_102 -> m10_103  [key=0, style=solid];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_38  [key=2, style=dotted];
m10_103 -> m10_96  [color=blue, key=0, style=bold];
m10_226 -> m10_227  [key=0, style=solid];
m10_227 -> m10_228  [key=0, style=solid];
m10_227 -> m10_19  [key=2, style=dotted];
m10_228 -> m10_226  [color=blue, key=0, style=bold];
m10_69 -> m10_75  [key=0, style=solid];
m10_69 -> m10_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_68  [key=2, style=dotted];
m10_75 -> m10_77  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_76 -> m10_77  [key=0, style=solid];
m10_77 -> m10_80  [key=0, style=solid];
m10_77 -> m10_81  [key=2, style=dotted];
m10_78 -> m10_79  [key=0, style=solid];
m10_79 -> m10_80  [key=0, style=solid];
m10_80 -> m10_69  [color=blue, key=0, style=bold];
m10_92 -> m10_304  [key=0, style=solid];
m10_92 -> m10_311  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_92 -> m10_330  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_304 -> m10_305  [key=0, style=solid];
m10_304 -> m10_307  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m10_304 -> m10_308  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m10_304 -> m10_309  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m10_311 -> m10_312  [key=0, style=solid];
m10_311 -> m10_138  [key=2, style=dotted];
m10_311 -> m10_57  [key=2, style=dotted];
m10_311 -> m10_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_311 -> m10_313  [color=darkseagreen4, key=1, label=keys, style=dashed];
m10_311 -> m10_314  [color=darkseagreen4, key=1, label=keys, style=dashed];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_325  [key=2, style=dotted];
m10_305 -> m10_307  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m10_307 -> m10_308  [key=0, style=solid];
m10_307 -> m10_310  [key=0, style=solid];
m10_308 -> m10_309  [key=0, style=solid];
m10_308 -> m10_73  [key=2, style=dotted];
m10_309 -> m10_307  [key=0, style=solid];
m10_309 -> m10_325  [key=2, style=dotted];
m10_309 -> m10_309  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m10_306 -> m10_307  [key=0, style=solid];
m10_306 -> m10_104  [key=2, style=dotted];
m10_306 -> m10_308  [color=darkseagreen4, key=1, label=dates, style=dashed];
m10_306 -> m10_310  [color=darkseagreen4, key=1, label=dates, style=dashed];
m10_306 -> m10_321  [color=darkseagreen4, key=1, label=dates, style=dashed];
m10_310 -> m10_311  [key=0, style=solid];
m10_310 -> m10_138  [key=2, style=dotted];
m10_310 -> m10_57  [key=2, style=dotted];
m10_310 -> m10_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_310 -> m10_319  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m10_321 -> m10_322  [key=0, style=solid];
m10_321 -> m10_290  [key=2, style=dotted];
m10_319 -> m10_320  [key=0, style=solid];
m10_319 -> m10_323  [key=0, style=solid];
m10_312 -> m10_313  [key=0, style=solid];
m10_313 -> m10_314  [key=0, style=solid];
m10_313 -> m10_289  [key=2, style=dotted];
m10_313 -> m10_214  [key=2, style=dotted];
m10_313 -> m10_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_313 -> m10_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_313 -> m10_315  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m10_313 -> m10_316  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m10_313 -> m10_320  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m10_314 -> m10_315  [key=0, style=solid];
m10_314 -> m10_317  [key=0, style=solid];
m10_314 -> m10_316  [color=darkseagreen4, key=1, label=key, style=dashed];
m10_315 -> m10_316  [key=0, style=solid];
m10_315 -> m10_314  [key=0, style=solid];
m10_315 -> m10_262  [key=2, style=dotted];
m10_316 -> m10_314  [key=0, style=solid];
m10_316 -> m10_290  [key=2, style=dotted];
m10_320 -> m10_321  [key=0, style=solid];
m10_320 -> m10_292  [key=2, style=dotted];
m10_317 -> m10_318  [key=0, style=solid];
m10_317 -> m10_291  [key=2, style=dotted];
m10_317 -> m10_321  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_317 -> m10_323  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_318 -> m10_319  [key=0, style=solid];
m10_318 -> m10_320  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_318 -> m10_321  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_318 -> m10_322  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_323 -> m10_324  [key=0, style=solid];
m10_322 -> m10_319  [key=0, style=solid];
m10_322 -> m10_322  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_324 -> m10_92  [color=blue, key=0, style=bold];
m10_122 -> m10_123  [key=0, style=solid];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_46  [key=2, style=dotted];
m10_123 -> m10_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_124 -> m10_122  [color=blue, key=0, style=bold];
m10_199 -> m10_200  [key=0, style=solid];
m10_200 -> m10_201  [key=0, style=solid];
m10_200 -> m10_198  [key=2, style=dotted];
m10_201 -> m10_199  [color=blue, key=0, style=bold];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_25  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_26  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_24 -> m10_20  [color=blue, key=0, style=bold];
m10_129 -> m10_130  [key=0, style=solid];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_138  [key=2, style=dotted];
m10_130 -> m10_139  [key=2, style=dotted];
m10_130 -> m10_140  [key=2, style=dotted];
m10_130 -> m10_141  [key=2, style=dotted];
m10_130 -> m10_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_130 -> m10_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_130 -> m10_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_130 -> m10_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_130 -> m10_132  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m10_131 -> m10_132  [key=0, style=solid];
m10_131 -> m10_142  [key=2, style=dotted];
m10_131 -> m10_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_131 -> m10_136  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_132 -> m10_133  [key=0, style=solid];
m10_132 -> m10_136  [key=0, style=solid];
m10_132 -> m10_134  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m10_132 -> m10_135  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m10_135 -> m10_132  [key=0, style=solid];
m10_135 -> m10_145  [key=2, style=dotted];
m10_135 -> m10_146  [key=2, style=dotted];
m10_135 -> m10_73  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_143  [key=2, style=dotted];
m10_133 -> m10_135  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_144  [key=2, style=dotted];
m10_137 -> m10_129  [color=blue, key=0, style=bold];
m10_19 -> m10_35  [key=0, style=solid];
m10_19 -> m10_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_35 -> m10_36  [key=0, style=solid];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_38  [key=2, style=dotted];
m10_36 -> m10_39  [key=2, style=dotted];
m10_37 -> m10_19  [color=blue, key=0, style=bold];
m10_344 -> m10_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_44  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_54  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_55  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_83  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_90  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_94  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_97  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_115  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_123  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_130  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_148  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_135  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_162  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_164  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_169  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_170  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_177  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_179  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_184  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_187  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_196  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_200  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_204  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_210  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_227  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_230  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_235  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_245  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_264  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_276  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_313  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_339  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_344 -> m10_340  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m10_345 -> m10_260  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m10_346 -> m10_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_347 -> m10_330  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_2  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_2  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [color=red, key=0, style=solid];
m21_1 -> m21_2  [color=red, key=0, style=solid];
m21_2 -> m21_0  [color=blue, key=0, style=bold];
m21_3 -> m21_4  [color=red, key=0, style=solid];
m21_3 -> m21_5  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m21_3 -> m21_6  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m21_4 -> m21_5  [color=red, key=0, style=solid];
m21_4 -> m21_8  [color=red, key=2, style=dotted];
m21_5 -> m21_6  [color=red, key=0, style=solid];
m21_5 -> m21_9  [color=red, key=2, style=dotted];
m21_6 -> m21_7  [color=red, key=0, style=solid];
m21_6 -> m21_10  [color=red, key=2, style=dotted];
m21_7 -> m21_3  [color=blue, key=0, style=bold];
m21_11 -> m21_12  [color=red, key=0, style=solid];
m21_12 -> m21_13  [color=red, key=0, style=solid];
m21_13 -> m21_11  [color=blue, key=0, style=bold];
m21_14 -> m21_1  [color=red, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m21_14 -> m21_6  [color=red, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m23_0 -> m23_1  [color=red, key=0, style=solid];
m23_0 -> m23_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m23_0 -> m23_3  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m23_1 -> m23_2  [color=red, key=0, style=solid];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_4  [key=0, style=solid];
m23_4 -> m23_0  [color=blue, key=0, style=bold];
m23_5 -> m23_1  [color=red, key=1, label="HangFire.Filters.JobEnqueuedContext", style=dashed];
m23_5 -> m23_2  [color=darkseagreen4, key=1, label="HangFire.Filters.JobEnqueuedContext", style=dashed];
m23_5 -> m23_3  [color=darkseagreen4, key=1, label="HangFire.Filters.JobEnqueuedContext", style=dashed];
m24_0 -> m24_1  [color=red, key=0, style=solid];
m24_1 -> m24_2  [color=red, key=0, style=solid];
m24_2 -> m24_0  [color=blue, key=0, style=bold];
m24_3 -> m24_1  [color=red, key=1, label="HangFire.Filters.JobEnqueueingContext", style=dashed];
m25_2 -> m25_3  [color=green, key=0, style=solid];
m25_3 -> m25_4  [color=green, key=0, style=solid];
m25_3 -> m25_5  [color=green, key=2, style=dotted];
m25_3 -> m25_6  [color=green, key=2, style=dotted];
m25_4 -> m25_2  [color=blue, key=0, style=bold];
m25_7 -> m25_8  [color=green, key=0, style=solid];
m25_7 -> m25_9  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m25_8 -> m25_9  [color=green, key=0, style=solid];
m25_8 -> m25_11  [color=green, key=2, style=dotted];
m25_9 -> m25_10  [color=green, key=0, style=solid];
m25_9 -> m25_12  [color=green, key=2, style=dotted];
m25_10 -> m25_7  [color=blue, key=0, style=bold];
m25_13 -> m25_15  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m25_13 -> m25_14  [key=0, style=solid];
m25_15 -> m25_16  [color=green, key=0, style=solid];
m25_15 -> m25_18  [color=green, key=2, style=dotted];
m25_14 -> m25_15  [color=green, key=0, style=solid];
m25_14 -> m25_17  [key=2, style=dotted];
m25_16 -> m25_13  [color=blue, key=0, style=bold];
m26_119 -> m26_120  [key=0, style=solid];
m26_121 -> m26_122  [color=green, key=0, style=solid];
m26_121 -> m26_36  [color=green, key=2, style=dotted];
m26_121 -> m26_123  [color=green, key=1, label="lambda expression", style=dashed];
m26_120 -> m26_121  [color=green, key=0, style=solid];
m26_120 -> m26_124  [color=green, key=1, label=arrangeSql, style=dashed];
m26_122 -> m26_119  [color=blue, key=0, style=bold];
m26_15 -> m26_16  [key=0, style=solid];
m26_16 -> m26_13  [key=2, style=dotted];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_17 -> m26_19  [key=2, style=dotted];
m26_17 -> m26_18  [key=0, style=solid];
m26_18 -> m26_15  [color=blue, key=0, style=bold];
m26_293 -> m26_294  [key=0, style=solid];
m26_294 -> m26_36  [key=2, style=dotted];
m26_294 -> m26_295  [key=0, style=solid];
m26_294 -> m26_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_295 -> m26_293  [color=blue, key=0, style=bold];
m26_393 -> m26_394  [key=0, style=solid];
m26_394 -> m26_36  [key=2, style=dotted];
m26_394 -> m26_395  [key=0, style=solid];
m26_394 -> m26_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_395 -> m26_393  [color=blue, key=0, style=bold];
m26_60 -> m26_61  [key=0, style=solid];
m26_62 -> m26_36  [key=2, style=dotted];
m26_62 -> m26_63  [key=0, style=solid];
m26_62 -> m26_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_61 -> m26_62  [key=0, style=solid];
m26_61 -> m26_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_61 -> m26_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_63 -> m26_60  [color=blue, key=0, style=bold];
m26_32 -> m26_33  [key=0, style=solid];
m26_34 -> m26_36  [key=2, style=dotted];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_33 -> m26_34  [key=0, style=solid];
m26_33 -> m26_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_33 -> m26_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_35 -> m26_32  [color=blue, key=0, style=bold];
m26_153 -> m26_154  [color=green, key=0, style=solid];
m26_154 -> m26_155  [color=green, key=0, style=solid];
m26_154 -> m26_36  [color=green, key=2, style=dotted];
m26_154 -> m26_156  [color=green, key=1, label="lambda expression", style=dashed];
m26_155 -> m26_153  [color=blue, key=0, style=bold];
m26_212 -> m26_213  [color=green, key=0, style=solid];
m26_213 -> m26_214  [color=green, key=0, style=solid];
m26_213 -> m26_36  [color=green, key=2, style=dotted];
m26_213 -> m26_215  [color=green, key=1, label="lambda expression", style=dashed];
m26_214 -> m26_212  [color=blue, key=0, style=bold];
m26_78 -> m26_79  [key=0, style=solid];
m26_80 -> m26_36  [key=2, style=dotted];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_79 -> m26_80  [key=0, style=solid];
m26_79 -> m26_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_79 -> m26_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_81 -> m26_78  [color=blue, key=0, style=bold];
m26_344 -> m26_345  [key=0, style=solid];
m26_345 -> m26_36  [key=2, style=dotted];
m26_345 -> m26_346  [key=0, style=solid];
m26_345 -> m26_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_346 -> m26_344  [color=blue, key=0, style=bold];
m26_419 -> m26_420  [key=0, style=solid];
m26_420 -> m26_36  [key=2, style=dotted];
m26_420 -> m26_421  [key=0, style=solid];
m26_420 -> m26_422  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_421 -> m26_419  [color=blue, key=0, style=bold];
m26_464 -> m26_465  [key=0, style=solid];
m26_465 -> m26_36  [key=2, style=dotted];
m26_465 -> m26_466  [key=0, style=solid];
m26_465 -> m26_467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_466 -> m26_464  [color=blue, key=0, style=bold];
m26_194 -> m26_195  [color=green, key=0, style=solid];
m26_195 -> m26_196  [color=green, key=0, style=solid];
m26_195 -> m26_36  [color=green, key=2, style=dotted];
m26_195 -> m26_197  [color=green, key=1, label="lambda expression", style=dashed];
m26_196 -> m26_194  [color=blue, key=0, style=bold];
m26_476 -> m26_477  [key=0, style=solid];
m26_477 -> m26_36  [key=2, style=dotted];
m26_477 -> m26_478  [key=0, style=solid];
m26_477 -> m26_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_478 -> m26_476  [color=blue, key=0, style=bold];
m26_500 -> m26_502  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m26_500 -> m26_501  [key=0, style=solid];
m26_502 -> m26_504  [key=2, style=dotted];
m26_502 -> m26_503  [key=0, style=solid];
m26_501 -> m26_502  [key=0, style=solid];
m26_501 -> m26_31  [key=2, style=dotted];
m26_503 -> m26_500  [color=blue, key=0, style=bold];
m26_224 -> m26_225  [color=green, key=0, style=solid];
m26_225 -> m26_226  [color=green, key=0, style=solid];
m26_225 -> m26_36  [color=green, key=2, style=dotted];
m26_225 -> m26_227  [color=green, key=1, label="lambda expression", style=dashed];
m26_226 -> m26_224  [color=blue, key=0, style=bold];
m26_381 -> m26_382  [key=0, style=solid];
m26_382 -> m26_36  [key=2, style=dotted];
m26_382 -> m26_383  [key=0, style=solid];
m26_382 -> m26_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_383 -> m26_381  [color=blue, key=0, style=bold];
m26_267 -> m26_268  [key=0, style=solid];
m26_268 -> m26_36  [key=2, style=dotted];
m26_268 -> m26_269  [key=0, style=solid];
m26_268 -> m26_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_269 -> m26_267  [color=blue, key=0, style=bold];
m26_319 -> m26_320  [key=0, style=solid];
m26_320 -> m26_36  [key=2, style=dotted];
m26_320 -> m26_321  [key=0, style=solid];
m26_320 -> m26_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_321 -> m26_319  [color=blue, key=0, style=bold];
m26_331 -> m26_332  [key=0, style=solid];
m26_332 -> m26_36  [key=2, style=dotted];
m26_332 -> m26_333  [key=0, style=solid];
m26_332 -> m26_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_333 -> m26_331  [color=blue, key=0, style=bold];
m26_356 -> m26_357  [key=0, style=solid];
m26_357 -> m26_36  [key=2, style=dotted];
m26_357 -> m26_358  [key=0, style=solid];
m26_357 -> m26_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_358 -> m26_356  [color=blue, key=0, style=bold];
m26_368 -> m26_369  [key=0, style=solid];
m26_369 -> m26_36  [key=2, style=dotted];
m26_369 -> m26_370  [key=0, style=solid];
m26_369 -> m26_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_370 -> m26_368  [color=blue, key=0, style=bold];
m26_305 -> m26_306  [key=0, style=solid];
m26_306 -> m26_36  [key=2, style=dotted];
m26_306 -> m26_307  [key=0, style=solid];
m26_306 -> m26_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_307 -> m26_305  [color=blue, key=0, style=bold];
m26_431 -> m26_432  [key=0, style=solid];
m26_432 -> m26_36  [key=2, style=dotted];
m26_432 -> m26_433  [key=0, style=solid];
m26_432 -> m26_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_433 -> m26_431  [color=blue, key=0, style=bold];
m26_49 -> m26_505  [key=0, style=solid];
m26_49 -> m26_506  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m26_505 -> m26_506  [key=0, style=solid];
m26_505 -> m26_23  [key=2, style=dotted];
m26_505 -> m26_507  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m26_506 -> m26_507  [key=0, style=solid];
m26_506 -> m26_504  [key=2, style=dotted];
m26_507 -> m26_508  [key=0, style=solid];
m26_507 -> m26_509  [key=2, style=dotted];
m26_508 -> m26_49  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_9  [key=2, style=dotted];
m26_2 -> m26_6  [key=2, style=dotted];
m26_2 -> m26_8  [key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_7  [key=2, style=dotted];
m26_2 -> m26_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_1 -> m26_3  [color=darkseagreen4, key=1, label=defaultProvider, style=dashed];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_5  [key=2, style=dotted];
m26_4 -> m26_0  [color=blue, key=0, style=bold];
m26_407 -> m26_408  [key=0, style=solid];
m26_408 -> m26_36  [key=2, style=dotted];
m26_408 -> m26_409  [key=0, style=solid];
m26_408 -> m26_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_409 -> m26_407  [color=blue, key=0, style=bold];
m26_28 -> m26_29  [key=0, style=solid];
m26_123 -> m26_124  [color=green, key=0, style=solid];
m26_123 -> m26_129  [color=green, key=1, label=SqlConnection, style=dashed];
m26_123 -> m26_130  [color=green, key=1, label=SqlConnection, style=dashed];
m26_123 -> m26_133  [color=green, key=1, label=SqlConnection, style=dashed];
m26_124 -> m26_125  [color=green, key=0, style=solid];
m26_124 -> m26_46  [color=green, key=2, style=dotted];
m26_124 -> m26_47  [color=green, key=2, style=dotted];
m26_124 -> m26_48  [color=green, key=2, style=dotted];
m26_124 -> m26_129  [color=green, key=1, label=jobId, style=dashed];
m26_124 -> m26_150  [color=green, key=1, label=jobId, style=dashed];
m26_124 -> m26_130  [color=green, key=1, label=jobId, style=dashed];
m26_124 -> m26_134  [color=green, key=1, label=jobId, style=dashed];
m26_125 -> m26_129  [color=green, key=1, label=state, style=dashed];
m26_125 -> m26_126  [color=green, key=0, style=solid];
m26_125 -> m26_103  [color=green, key=2, style=dotted];
m26_125 -> m26_127  [color=green, key=1, label=state, style=dashed];
m26_125 -> m26_128  [color=green, key=1, label=state, style=dashed];
m26_125 -> m26_150  [color=green, key=1, label=state, style=dashed];
m26_129 -> m26_130  [color=green, key=0, style=solid];
m26_129 -> m26_49  [color=green, key=2, style=dotted];
m26_129 -> m26_149  [color=green, key=1, label="lambda expression", style=dashed];
m26_150 -> m26_151  [color=green, key=0, style=solid];
m26_150 -> m26_152  [color=green, key=2, style=dotted];
m26_130 -> m26_131  [color=green, key=0, style=solid];
m26_130 -> m26_50  [color=green, key=2, style=dotted];
m26_130 -> m26_132  [color=green, key=1, label=job, style=dashed];
m26_134 -> m26_135  [color=green, key=0, style=solid];
m26_134 -> m26_48  [color=green, key=2, style=dotted];
m26_134 -> m26_19  [color=green, key=2, style=dotted];
m26_128 -> m26_129  [color=green, key=0, style=solid];
m26_128 -> m26_6  [color=green, key=2, style=dotted];
m26_128 -> m26_104  [color=green, key=2, style=dotted];
m26_128 -> m26_8  [color=green, key=2, style=dotted];
m26_128 -> m26_146  [color=green, key=1, label="lambda expression", style=dashed];
m26_149 -> m26_150  [color=green, key=0, style=solid];
m26_131 -> m26_132  [color=green, key=0, style=solid];
m26_131 -> m26_54  [color=green, key=2, style=dotted];
m26_132 -> m26_133  [color=green, key=0, style=solid];
m26_132 -> m26_54  [color=green, key=2, style=dotted];
m26_133 -> m26_134  [color=green, key=0, style=solid];
m26_133 -> m26_46  [color=green, key=2, style=dotted];
m26_133 -> m26_47  [color=green, key=2, style=dotted];
m26_133 -> m26_135  [color=green, key=1, label=jobState, style=dashed];
m26_133 -> m26_136  [color=green, key=1, label=jobState, style=dashed];
m26_133 -> m26_137  [color=green, key=1, label=jobState, style=dashed];
m26_133 -> m26_138  [color=green, key=1, label=jobState, style=dashed];
m26_135 -> m26_136  [color=green, key=0, style=solid];
m26_135 -> m26_19  [color=green, key=2, style=dotted];
m26_136 -> m26_137  [color=green, key=0, style=solid];
m26_136 -> m26_19  [color=green, key=2, style=dotted];
m26_137 -> m26_138  [color=green, key=0, style=solid];
m26_137 -> m26_73  [color=green, key=2, style=dotted];
m26_138 -> m26_139  [color=green, key=0, style=solid];
m26_138 -> m26_19  [color=green, key=2, style=dotted];
m26_126 -> m26_127  [color=green, key=0, style=solid];
m26_126 -> m26_6  [color=green, key=2, style=dotted];
m26_126 -> m26_8  [color=green, key=2, style=dotted];
m26_126 -> m26_140  [color=green, key=1, label="lambda expression", style=dashed];
m26_127 -> m26_128  [color=green, key=0, style=solid];
m26_127 -> m26_6  [color=green, key=2, style=dotted];
m26_127 -> m26_8  [color=green, key=2, style=dotted];
m26_127 -> m26_143  [color=green, key=1, label="lambda expression", style=dashed];
m26_151 -> m26_149  [color=blue, key=0, style=bold];
m26_140 -> m26_141  [color=green, key=0, style=solid];
m26_143 -> m26_144  [color=green, key=0, style=solid];
m26_146 -> m26_147  [color=green, key=0, style=solid];
m26_139 -> m26_123  [color=blue, key=0, style=bold];
m26_141 -> m26_142  [color=green, key=0, style=solid];
m26_142 -> m26_140  [color=blue, key=0, style=bold];
m26_144 -> m26_145  [color=green, key=0, style=solid];
m26_145 -> m26_143  [color=blue, key=0, style=bold];
m26_147 -> m26_148  [color=green, key=0, style=solid];
m26_147 -> m26_114  [color=green, key=2, style=dotted];
m26_148 -> m26_146  [color=blue, key=0, style=bold];
m26_156 -> m26_161  [color=green, key=1, label=SqlConnection, style=dashed];
m26_156 -> m26_157  [key=0, style=solid];
m26_161 -> m26_162  [color=green, key=0, style=solid];
m26_161 -> m26_49  [color=green, key=2, style=dotted];
m26_161 -> m26_169  [color=green, key=1, label="lambda expression", style=dashed];
m26_160 -> m26_161  [color=green, key=0, style=solid];
m26_160 -> m26_164  [color=green, key=2, style=dotted];
m26_162 -> m26_163  [color=green, key=0, style=solid];
m26_162 -> m26_165  [color=green, key=2, style=dotted];
m26_162 -> m26_173  [color=green, key=1, label="lambda expression", style=dashed];
m26_169 -> m26_170  [color=green, key=0, style=solid];
m26_157 -> m26_162  [color=green, key=1, label=correctJobQueue, style=dashed];
m26_157 -> m26_158  [key=0, style=solid];
m26_157 -> m26_7  [key=2, style=dotted];
m26_157 -> m26_159  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m26_163 -> m26_156  [color=blue, key=0, style=bold];
m26_173 -> m26_174  [color=green, key=0, style=solid];
m26_158 -> m26_160  [color=green, key=1, label=correctProvider, style=dashed];
m26_158 -> m26_159  [key=0, style=solid];
m26_158 -> m26_5  [key=2, style=dotted];
m26_159 -> m26_160  [color=green, key=0, style=solid];
m26_159 -> m26_6  [key=2, style=dotted];
m26_159 -> m26_8  [key=2, style=dotted];
m26_159 -> m26_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_170 -> m26_171  [color=green, key=0, style=solid];
m26_170 -> m26_172  [color=green, key=2, style=dotted];
m26_171 -> m26_169  [color=blue, key=0, style=bold];
m26_174 -> m26_175  [color=green, key=0, style=solid];
m26_174 -> m26_176  [color=green, key=2, style=dotted];
m26_175 -> m26_173  [color=blue, key=0, style=bold];
m26_183 -> m26_184  [key=0, style=solid];
m26_183 -> m26_185  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_187 -> m26_188  [color=green, key=0, style=solid];
m26_187 -> m26_19  [color=green, key=2, style=dotted];
m26_185 -> m26_187  [color=green, key=1, label=record, style=dashed];
m26_185 -> m26_46  [key=2, style=dotted];
m26_185 -> m26_47  [key=2, style=dotted];
m26_185 -> m26_186  [key=0, style=solid];
m26_185 -> m26_188  [color=darkseagreen4, key=1, label=record, style=dashed];
m26_186 -> m26_187  [color=green, key=0, style=solid];
m26_186 -> m26_19  [key=2, style=dotted];
m26_188 -> m26_19  [key=2, style=dotted];
m26_188 -> m26_189  [key=0, style=solid];
m26_197 -> m26_198  [color=green, key=0, style=solid];
m26_197 -> m26_199  [color=green, key=1, label=SqlConnection, style=dashed];
m26_198 -> m26_199  [color=green, key=0, style=solid];
m26_198 -> m26_49  [color=green, key=2, style=dotted];
m26_198 -> m26_208  [color=green, key=1, label="lambda expression", style=dashed];
m26_199 -> m26_200  [color=green, key=0, style=solid];
m26_199 -> m26_46  [color=green, key=2, style=dotted];
m26_199 -> m26_47  [color=green, key=2, style=dotted];
m26_199 -> m26_201  [color=green, key=1, label=record, style=dashed];
m26_199 -> m26_202  [color=green, key=1, label=record, style=dashed];
m26_199 -> m26_203  [color=green, key=1, label=record, style=dashed];
m26_208 -> m26_209  [color=green, key=0, style=solid];
m26_200 -> m26_201  [color=green, key=0, style=solid];
m26_200 -> m26_19  [color=green, key=2, style=dotted];
m26_201 -> m26_202  [color=green, key=0, style=solid];
m26_201 -> m26_19  [color=green, key=2, style=dotted];
m26_202 -> m26_203  [color=green, key=0, style=solid];
m26_202 -> m26_73  [color=green, key=2, style=dotted];
m26_203 -> m26_204  [color=green, key=0, style=solid];
m26_203 -> m26_205  [color=green, key=1, label=expireAt, style=dashed];
m26_204 -> m26_205  [color=green, key=0, style=solid];
m26_204 -> m26_207  [color=green, key=2, style=dotted];
m26_204 -> m26_53  [color=green, key=2, style=dotted];
m26_205 -> m26_206  [color=green, key=0, style=solid];
m26_205 -> m26_207  [color=green, key=2, style=dotted];
m26_205 -> m26_53  [color=green, key=2, style=dotted];
m26_206 -> m26_197  [color=blue, key=0, style=bold];
m26_209 -> m26_210  [color=green, key=0, style=solid];
m26_209 -> m26_58  [color=green, key=2, style=dotted];
m26_209 -> m26_211  [color=green, key=2, style=dotted];
m26_210 -> m26_208  [color=blue, key=0, style=bold];
m26_215 -> m26_216  [color=green, key=0, style=solid];
m26_215 -> m26_217  [color=green, key=1, label=SqlConnection, style=dashed];
m26_216 -> m26_217  [color=green, key=0, style=solid];
m26_216 -> m26_49  [color=green, key=2, style=dotted];
m26_216 -> m26_220  [color=green, key=1, label="lambda expression", style=dashed];
m26_217 -> m26_218  [color=green, key=0, style=solid];
m26_217 -> m26_13  [color=green, key=2, style=dotted];
m26_217 -> m26_47  [color=green, key=2, style=dotted];
m26_220 -> m26_221  [color=green, key=0, style=solid];
m26_220 -> m26_222  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_218 -> m26_219  [color=green, key=0, style=solid];
m26_218 -> m26_19  [color=green, key=2, style=dotted];
m26_219 -> m26_215  [color=blue, key=0, style=bold];
m26_221 -> m26_222  [color=green, key=0, style=solid];
m26_221 -> m26_193  [color=green, key=2, style=dotted];
m26_222 -> m26_223  [color=green, key=0, style=solid];
m26_222 -> m26_193  [color=green, key=2, style=dotted];
m26_223 -> m26_220  [color=blue, key=0, style=bold];
m26_227 -> m26_228  [color=green, key=0, style=solid];
m26_227 -> m26_229  [color=green, key=1, label=SqlConnection, style=dashed];
m26_228 -> m26_229  [color=green, key=0, style=solid];
m26_228 -> m26_49  [color=green, key=2, style=dotted];
m26_228 -> m26_234  [color=green, key=1, label="lambda expression", style=dashed];
m26_229 -> m26_230  [color=green, key=0, style=solid];
m26_229 -> m26_46  [color=green, key=2, style=dotted];
m26_229 -> m26_47  [color=green, key=2, style=dotted];
m26_229 -> m26_231  [color=green, key=1, label=record, style=dashed];
m26_229 -> m26_232  [color=green, key=1, label=record, style=dashed];
m26_234 -> m26_235  [color=green, key=0, style=solid];
m26_230 -> m26_231  [color=green, key=0, style=solid];
m26_230 -> m26_19  [color=green, key=2, style=dotted];
m26_231 -> m26_232  [color=green, key=0, style=solid];
m26_231 -> m26_19  [color=green, key=2, style=dotted];
m26_232 -> m26_233  [color=green, key=0, style=solid];
m26_232 -> m26_19  [color=green, key=2, style=dotted];
m26_233 -> m26_227  [color=blue, key=0, style=bold];
m26_235 -> m26_236  [color=green, key=0, style=solid];
m26_235 -> m26_237  [color=green, key=2, style=dotted];
m26_236 -> m26_234  [color=blue, key=0, style=bold];
m26_241 -> m26_242  [color=green, key=0, style=solid];
m26_241 -> m26_243  [color=green, key=1, label=SqlConnection, style=dashed];
m26_242 -> m26_243  [color=green, key=0, style=solid];
m26_242 -> m26_49  [color=green, key=2, style=dotted];
m26_242 -> m26_251  [color=green, key=1, label="lambda expression", style=dashed];
m26_243 -> m26_244  [color=green, key=0, style=solid];
m26_243 -> m26_46  [color=green, key=2, style=dotted];
m26_243 -> m26_47  [color=green, key=2, style=dotted];
m26_243 -> m26_245  [color=green, key=1, label=record, style=dashed];
m26_243 -> m26_246  [color=green, key=1, label=record, style=dashed];
m26_243 -> m26_247  [color=green, key=1, label=record, style=dashed];
m26_251 -> m26_252  [color=green, key=0, style=solid];
m26_244 -> m26_245  [color=green, key=0, style=solid];
m26_244 -> m26_19  [color=green, key=2, style=dotted];
m26_245 -> m26_246  [color=green, key=0, style=solid];
m26_245 -> m26_19  [color=green, key=2, style=dotted];
m26_246 -> m26_247  [color=green, key=0, style=solid];
m26_246 -> m26_73  [color=green, key=2, style=dotted];
m26_247 -> m26_248  [color=green, key=0, style=solid];
m26_247 -> m26_249  [color=green, key=1, label=expireAt, style=dashed];
m26_248 -> m26_249  [color=green, key=0, style=solid];
m26_248 -> m26_207  [color=green, key=2, style=dotted];
m26_248 -> m26_53  [color=green, key=2, style=dotted];
m26_249 -> m26_250  [color=green, key=0, style=solid];
m26_249 -> m26_207  [color=green, key=2, style=dotted];
m26_249 -> m26_53  [color=green, key=2, style=dotted];
m26_250 -> m26_241  [color=blue, key=0, style=bold];
m26_252 -> m26_253  [color=green, key=0, style=solid];
m26_252 -> m26_58  [color=green, key=2, style=dotted];
m26_252 -> m26_254  [color=green, key=2, style=dotted];
m26_253 -> m26_251  [color=blue, key=0, style=bold];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_23  [key=2, style=dotted];
m26_40 -> m26_49  [key=2, style=dotted];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_41 -> m26_50  [key=2, style=dotted];
m26_41 -> m26_42  [key=0, style=solid];
m26_43 -> m26_50  [key=2, style=dotted];
m26_43 -> m26_44  [key=0, style=solid];
m26_67 -> m26_49  [key=2, style=dotted];
m26_67 -> m26_68  [key=0, style=solid];
m26_67 -> m26_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_68 -> m26_50  [key=2, style=dotted];
m26_68 -> m26_69  [key=0, style=solid];
m26_70 -> m26_50  [key=2, style=dotted];
m26_70 -> m26_71  [key=0, style=solid];
m26_89 -> m26_49  [key=2, style=dotted];
m26_89 -> m26_90  [key=0, style=solid];
m26_89 -> m26_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_90 -> m26_50  [key=2, style=dotted];
m26_90 -> m26_91  [key=0, style=solid];
m26_90 -> m26_92  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_93 -> m26_50  [key=2, style=dotted];
m26_93 -> m26_94  [key=0, style=solid];
m26_93 -> m26_95  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m26_184 -> m26_49  [key=2, style=dotted];
m26_184 -> m26_185  [key=0, style=solid];
m26_184 -> m26_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_259 -> m26_49  [key=2, style=dotted];
m26_259 -> m26_260  [key=0, style=solid];
m26_259 -> m26_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_271 -> m26_49  [key=2, style=dotted];
m26_271 -> m26_272  [key=0, style=solid];
m26_271 -> m26_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_285 -> m26_49  [key=2, style=dotted];
m26_285 -> m26_286  [key=0, style=solid];
m26_285 -> m26_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_297 -> m26_49  [key=2, style=dotted];
m26_297 -> m26_298  [key=0, style=solid];
m26_297 -> m26_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_309 -> m26_49  [key=2, style=dotted];
m26_309 -> m26_310  [key=0, style=solid];
m26_309 -> m26_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_323 -> m26_49  [key=2, style=dotted];
m26_323 -> m26_324  [key=0, style=solid];
m26_323 -> m26_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_335 -> m26_49  [key=2, style=dotted];
m26_335 -> m26_336  [key=0, style=solid];
m26_335 -> m26_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_348 -> m26_49  [key=2, style=dotted];
m26_348 -> m26_349  [key=0, style=solid];
m26_348 -> m26_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_360 -> m26_49  [key=2, style=dotted];
m26_360 -> m26_361  [key=0, style=solid];
m26_360 -> m26_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_372 -> m26_49  [key=2, style=dotted];
m26_372 -> m26_373  [key=0, style=solid];
m26_372 -> m26_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_385 -> m26_49  [key=2, style=dotted];
m26_385 -> m26_386  [key=0, style=solid];
m26_385 -> m26_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_397 -> m26_49  [key=2, style=dotted];
m26_397 -> m26_398  [key=0, style=solid];
m26_397 -> m26_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_411 -> m26_49  [key=2, style=dotted];
m26_411 -> m26_412  [key=0, style=solid];
m26_411 -> m26_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_423 -> m26_49  [key=2, style=dotted];
m26_423 -> m26_424  [key=0, style=solid];
m26_423 -> m26_427  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_435 -> m26_49  [key=2, style=dotted];
m26_435 -> m26_436  [key=0, style=solid];
m26_435 -> m26_442  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_454 -> m26_49  [key=2, style=dotted];
m26_454 -> m26_455  [key=0, style=solid];
m26_454 -> m26_458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_468 -> m26_49  [key=2, style=dotted];
m26_468 -> m26_469  [key=0, style=solid];
m26_468 -> m26_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_480 -> m26_49  [key=2, style=dotted];
m26_480 -> m26_481  [key=0, style=solid];
m26_480 -> m26_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_492 -> m26_49  [key=2, style=dotted];
m26_492 -> m26_493  [key=0, style=solid];
m26_492 -> m26_496  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_38 -> m26_46  [key=2, style=dotted];
m26_38 -> m26_47  [key=2, style=dotted];
m26_38 -> m26_48  [key=2, style=dotted];
m26_38 -> m26_40  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_38 -> m26_41  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_39 -> m26_46  [key=2, style=dotted];
m26_39 -> m26_47  [key=2, style=dotted];
m26_39 -> m26_48  [key=2, style=dotted];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_43  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m26_65 -> m26_46  [key=2, style=dotted];
m26_65 -> m26_47  [key=2, style=dotted];
m26_65 -> m26_48  [key=2, style=dotted];
m26_65 -> m26_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_65 -> m26_68  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_65 -> m26_66  [key=0, style=solid];
m26_65 -> m26_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_66 -> m26_46  [key=2, style=dotted];
m26_66 -> m26_47  [key=2, style=dotted];
m26_66 -> m26_48  [key=2, style=dotted];
m26_66 -> m26_67  [key=0, style=solid];
m26_66 -> m26_70  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m26_83 -> m26_46  [key=2, style=dotted];
m26_83 -> m26_47  [key=2, style=dotted];
m26_83 -> m26_48  [key=2, style=dotted];
m26_83 -> m26_89  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_83 -> m26_90  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_83 -> m26_84  [key=0, style=solid];
m26_83 -> m26_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_83 -> m26_97  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_84 -> m26_46  [key=2, style=dotted];
m26_84 -> m26_47  [key=2, style=dotted];
m26_84 -> m26_48  [key=2, style=dotted];
m26_84 -> m26_93  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m26_84 -> m26_85  [key=0, style=solid];
m26_96 -> m26_46  [key=2, style=dotted];
m26_96 -> m26_47  [key=2, style=dotted];
m26_96 -> m26_97  [key=0, style=solid];
m26_96 -> m26_98  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m26_96 -> m26_99  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m26_96 -> m26_100  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m26_96 -> m26_101  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m26_272 -> m26_46  [key=2, style=dotted];
m26_272 -> m26_47  [key=2, style=dotted];
m26_272 -> m26_273  [key=0, style=solid];
m26_272 -> m26_274  [color=darkseagreen4, key=1, label=record, style=dashed];
m26_272 -> m26_275  [color=darkseagreen4, key=1, label=record, style=dashed];
m26_310 -> m26_46  [key=2, style=dotted];
m26_310 -> m26_47  [key=2, style=dotted];
m26_310 -> m26_311  [key=0, style=solid];
m26_310 -> m26_312  [color=darkseagreen4, key=1, label=record, style=dashed];
m26_310 -> m26_313  [color=darkseagreen4, key=1, label=record, style=dashed];
m26_324 -> m26_46  [key=2, style=dotted];
m26_324 -> m26_47  [key=2, style=dotted];
m26_324 -> m26_325  [key=0, style=solid];
m26_373 -> m26_46  [key=2, style=dotted];
m26_373 -> m26_47  [key=2, style=dotted];
m26_373 -> m26_374  [key=0, style=solid];
m26_373 -> m26_375  [color=darkseagreen4, key=1, label=record, style=dashed];
m26_436 -> m26_46  [key=2, style=dotted];
m26_436 -> m26_437  [key=0, style=solid];
m26_436 -> m26_441  [key=2, style=dotted];
m26_436 -> m26_438  [color=darkseagreen4, key=1, label=records, style=dashed];
m26_436 -> m26_439  [color=darkseagreen4, key=1, label=records, style=dashed];
m26_260 -> m26_47  [key=2, style=dotted];
m26_260 -> m26_13  [key=2, style=dotted];
m26_260 -> m26_261  [key=0, style=solid];
m26_286 -> m26_47  [key=2, style=dotted];
m26_286 -> m26_13  [key=2, style=dotted];
m26_286 -> m26_287  [key=0, style=solid];
m26_298 -> m26_47  [key=2, style=dotted];
m26_298 -> m26_13  [key=2, style=dotted];
m26_298 -> m26_299  [key=0, style=solid];
m26_336 -> m26_47  [key=2, style=dotted];
m26_336 -> m26_13  [key=2, style=dotted];
m26_336 -> m26_337  [key=0, style=solid];
m26_349 -> m26_47  [key=2, style=dotted];
m26_349 -> m26_13  [key=2, style=dotted];
m26_349 -> m26_350  [key=0, style=solid];
m26_361 -> m26_47  [key=2, style=dotted];
m26_361 -> m26_13  [key=2, style=dotted];
m26_361 -> m26_362  [key=0, style=solid];
m26_386 -> m26_47  [key=2, style=dotted];
m26_386 -> m26_13  [key=2, style=dotted];
m26_386 -> m26_387  [key=0, style=solid];
m26_398 -> m26_47  [key=2, style=dotted];
m26_398 -> m26_13  [key=2, style=dotted];
m26_398 -> m26_399  [key=0, style=solid];
m26_412 -> m26_47  [key=2, style=dotted];
m26_412 -> m26_13  [key=2, style=dotted];
m26_412 -> m26_413  [key=0, style=solid];
m26_424 -> m26_47  [key=2, style=dotted];
m26_424 -> m26_13  [key=2, style=dotted];
m26_424 -> m26_425  [key=0, style=solid];
m26_455 -> m26_47  [key=2, style=dotted];
m26_455 -> m26_13  [key=2, style=dotted];
m26_455 -> m26_456  [key=0, style=solid];
m26_469 -> m26_47  [key=2, style=dotted];
m26_469 -> m26_13  [key=2, style=dotted];
m26_469 -> m26_470  [key=0, style=solid];
m26_481 -> m26_47  [key=2, style=dotted];
m26_481 -> m26_13  [key=2, style=dotted];
m26_481 -> m26_482  [key=0, style=solid];
m26_493 -> m26_47  [key=2, style=dotted];
m26_493 -> m26_13  [key=2, style=dotted];
m26_493 -> m26_494  [key=0, style=solid];
m26_97 -> m26_48  [key=2, style=dotted];
m26_97 -> m26_19  [key=2, style=dotted];
m26_97 -> m26_98  [key=0, style=solid];
m26_85 -> m26_103  [key=2, style=dotted];
m26_85 -> m26_89  [color=darkseagreen4, key=1, label=state, style=dashed];
m26_85 -> m26_86  [key=0, style=solid];
m26_85 -> m26_87  [color=darkseagreen4, key=1, label=state, style=dashed];
m26_85 -> m26_88  [color=darkseagreen4, key=1, label=state, style=dashed];
m26_85 -> m26_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m26_91 -> m26_19  [key=2, style=dotted];
m26_91 -> m26_92  [key=0, style=solid];
m26_98 -> m26_19  [key=2, style=dotted];
m26_98 -> m26_99  [key=0, style=solid];
m26_99 -> m26_19  [key=2, style=dotted];
m26_99 -> m26_100  [key=0, style=solid];
m26_101 -> m26_19  [key=2, style=dotted];
m26_101 -> m26_102  [key=0, style=solid];
m26_261 -> m26_19  [key=2, style=dotted];
m26_261 -> m26_262  [key=0, style=solid];
m26_273 -> m26_19  [key=2, style=dotted];
m26_273 -> m26_274  [key=0, style=solid];
m26_274 -> m26_19  [key=2, style=dotted];
m26_274 -> m26_275  [key=0, style=solid];
m26_275 -> m26_19  [key=2, style=dotted];
m26_275 -> m26_276  [key=0, style=solid];
m26_287 -> m26_19  [key=2, style=dotted];
m26_287 -> m26_288  [key=0, style=solid];
m26_299 -> m26_19  [key=2, style=dotted];
m26_299 -> m26_300  [key=0, style=solid];
m26_311 -> m26_19  [key=2, style=dotted];
m26_311 -> m26_312  [key=0, style=solid];
m26_312 -> m26_19  [key=2, style=dotted];
m26_312 -> m26_313  [key=0, style=solid];
m26_313 -> m26_19  [key=2, style=dotted];
m26_313 -> m26_314  [key=0, style=solid];
m26_325 -> m26_19  [key=2, style=dotted];
m26_325 -> m26_326  [key=0, style=solid];
m26_337 -> m26_19  [key=2, style=dotted];
m26_337 -> m26_338  [key=0, style=solid];
m26_350 -> m26_19  [key=2, style=dotted];
m26_350 -> m26_351  [key=0, style=solid];
m26_362 -> m26_19  [key=2, style=dotted];
m26_362 -> m26_363  [key=0, style=solid];
m26_374 -> m26_19  [key=2, style=dotted];
m26_374 -> m26_375  [key=0, style=solid];
m26_375 -> m26_19  [key=2, style=dotted];
m26_375 -> m26_376  [key=0, style=solid];
m26_387 -> m26_19  [key=2, style=dotted];
m26_387 -> m26_388  [key=0, style=solid];
m26_399 -> m26_19  [key=2, style=dotted];
m26_399 -> m26_400  [key=0, style=solid];
m26_413 -> m26_19  [key=2, style=dotted];
m26_413 -> m26_414  [key=0, style=solid];
m26_425 -> m26_19  [key=2, style=dotted];
m26_425 -> m26_426  [key=0, style=solid];
m26_437 -> m26_19  [key=2, style=dotted];
m26_437 -> m26_438  [key=0, style=solid];
m26_438 -> m26_19  [key=2, style=dotted];
m26_438 -> m26_439  [key=0, style=solid];
m26_439 -> m26_19  [key=2, style=dotted];
m26_439 -> m26_440  [key=0, style=solid];
m26_456 -> m26_19  [key=2, style=dotted];
m26_456 -> m26_457  [key=0, style=solid];
m26_470 -> m26_19  [key=2, style=dotted];
m26_470 -> m26_471  [key=0, style=solid];
m26_482 -> m26_19  [key=2, style=dotted];
m26_482 -> m26_483  [key=0, style=solid];
m26_494 -> m26_19  [key=2, style=dotted];
m26_494 -> m26_495  [key=0, style=solid];
m26_86 -> m26_6  [key=2, style=dotted];
m26_86 -> m26_8  [key=2, style=dotted];
m26_86 -> m26_87  [key=0, style=solid];
m26_86 -> m26_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_87 -> m26_6  [key=2, style=dotted];
m26_87 -> m26_8  [key=2, style=dotted];
m26_87 -> m26_88  [key=0, style=solid];
m26_87 -> m26_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_88 -> m26_6  [key=2, style=dotted];
m26_88 -> m26_8  [key=2, style=dotted];
m26_88 -> m26_104  [key=2, style=dotted];
m26_88 -> m26_89  [key=0, style=solid];
m26_88 -> m26_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_44 -> m26_54  [key=2, style=dotted];
m26_44 -> m26_45  [key=0, style=solid];
m26_69 -> m26_54  [key=2, style=dotted];
m26_69 -> m26_70  [key=0, style=solid];
m26_94 -> m26_54  [key=2, style=dotted];
m26_94 -> m26_95  [key=0, style=solid];
m26_95 -> m26_54  [key=2, style=dotted];
m26_95 -> m26_96  [key=0, style=solid];
m26_71 -> m26_73  [key=2, style=dotted];
m26_71 -> m26_72  [key=0, style=solid];
m26_92 -> m26_73  [key=2, style=dotted];
m26_92 -> m26_93  [key=0, style=solid];
m26_100 -> m26_73  [key=2, style=dotted];
m26_100 -> m26_101  [key=0, style=solid];
m26_112 -> m26_114  [key=2, style=dotted];
m26_112 -> m26_113  [key=0, style=solid];
m26_166 -> m26_167  [key=0, style=solid];
m26_189 -> m26_183  [color=blue, key=0, style=bold];
m26_42 -> m26_53  [key=2, style=dotted];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_51  [key=2, style=dotted];
m26_42 -> m26_52  [key=2, style=dotted];
m26_56 -> m26_58  [key=2, style=dotted];
m26_56 -> m26_57  [key=0, style=solid];
m26_56 -> m26_59  [key=2, style=dotted];
m26_11 -> m26_13  [key=2, style=dotted];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_14  [key=2, style=dotted];
m26_167 -> m26_13  [key=2, style=dotted];
m26_167 -> m26_168  [key=0, style=solid];
m26_167 -> m26_14  [key=2, style=dotted];
m26_191 -> m26_193  [key=2, style=dotted];
m26_191 -> m26_192  [key=0, style=solid];
m26_264 -> m26_237  [key=2, style=dotted];
m26_264 -> m26_265  [key=0, style=solid];
m26_265 -> m26_237  [key=2, style=dotted];
m26_265 -> m26_266  [key=0, style=solid];
m26_20 -> m26_21  [key=0, style=solid];
m26_22 -> m26_20  [color=blue, key=0, style=bold];
m26_37 -> m26_40  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_37 -> m26_41  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_37 -> m26_43  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_39  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_55 -> m26_56  [key=0, style=solid];
m26_64 -> m26_67  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_64 -> m26_68  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_64 -> m26_70  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_66  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_74 -> m26_75  [key=0, style=solid];
m26_82 -> m26_89  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_82 -> m26_90  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_82 -> m26_93  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_82 -> m26_83  [key=0, style=solid];
m26_82 -> m26_84  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_82 -> m26_96  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_115 -> m26_116  [key=0, style=solid];
m26_190 -> m26_191  [key=0, style=solid];
m26_258 -> m26_259  [key=0, style=solid];
m26_258 -> m26_260  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_263 -> m26_264  [key=0, style=solid];
m26_263 -> m26_265  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_270 -> m26_271  [key=0, style=solid];
m26_270 -> m26_272  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_277 -> m26_278  [key=0, style=solid];
m26_284 -> m26_285  [key=0, style=solid];
m26_284 -> m26_286  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_289 -> m26_290  [key=0, style=solid];
m26_289 -> m26_291  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_296 -> m26_297  [key=0, style=solid];
m26_296 -> m26_298  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_301 -> m26_302  [key=0, style=solid];
m26_301 -> m26_303  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_308 -> m26_309  [key=0, style=solid];
m26_308 -> m26_310  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_315 -> m26_316  [key=0, style=solid];
m26_322 -> m26_323  [key=0, style=solid];
m26_322 -> m26_324  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_327 -> m26_328  [key=0, style=solid];
m26_327 -> m26_329  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_334 -> m26_335  [key=0, style=solid];
m26_334 -> m26_336  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_339 -> m26_340  [key=0, style=solid];
m26_339 -> m26_341  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_347 -> m26_348  [key=0, style=solid];
m26_347 -> m26_349  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_352 -> m26_353  [key=0, style=solid];
m26_352 -> m26_354  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_359 -> m26_360  [key=0, style=solid];
m26_359 -> m26_361  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_364 -> m26_365  [key=0, style=solid];
m26_364 -> m26_366  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_371 -> m26_372  [key=0, style=solid];
m26_371 -> m26_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_377 -> m26_378  [key=0, style=solid];
m26_384 -> m26_385  [key=0, style=solid];
m26_384 -> m26_386  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_389 -> m26_390  [key=0, style=solid];
m26_389 -> m26_391  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_396 -> m26_397  [key=0, style=solid];
m26_396 -> m26_398  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_401 -> m26_402  [key=0, style=solid];
m26_401 -> m26_403  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_401 -> m26_404  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_410 -> m26_411  [key=0, style=solid];
m26_410 -> m26_412  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_415 -> m26_416  [key=0, style=solid];
m26_415 -> m26_417  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_422 -> m26_423  [key=0, style=solid];
m26_422 -> m26_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_427 -> m26_428  [key=0, style=solid];
m26_427 -> m26_429  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_434 -> m26_435  [key=0, style=solid];
m26_434 -> m26_436  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_442 -> m26_443  [key=0, style=solid];
m26_442 -> m26_444  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_442 -> m26_445  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_442 -> m26_446  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_442 -> m26_447  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_453 -> m26_454  [key=0, style=solid];
m26_453 -> m26_455  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_458 -> m26_459  [key=0, style=solid];
m26_458 -> m26_460  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_458 -> m26_461  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_458 -> m26_462  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_467 -> m26_468  [key=0, style=solid];
m26_467 -> m26_469  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_472 -> m26_473  [key=0, style=solid];
m26_472 -> m26_474  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_479 -> m26_480  [key=0, style=solid];
m26_479 -> m26_481  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_484 -> m26_485  [key=0, style=solid];
m26_484 -> m26_486  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_491 -> m26_492  [key=0, style=solid];
m26_491 -> m26_493  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_496 -> m26_497  [key=0, style=solid];
m26_496 -> m26_498  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m26_75 -> m26_76  [key=0, style=solid];
m26_75 -> m26_77  [key=2, style=dotted];
m26_116 -> m26_117  [key=0, style=solid];
m26_116 -> m26_118  [key=2, style=dotted];
m26_102 -> m26_82  [color=blue, key=0, style=bold];
m26_262 -> m26_258  [color=blue, key=0, style=bold];
m26_276 -> m26_270  [color=blue, key=0, style=bold];
m26_288 -> m26_284  [color=blue, key=0, style=bold];
m26_300 -> m26_296  [color=blue, key=0, style=bold];
m26_314 -> m26_308  [color=blue, key=0, style=bold];
m26_326 -> m26_322  [color=blue, key=0, style=bold];
m26_338 -> m26_334  [color=blue, key=0, style=bold];
m26_351 -> m26_347  [color=blue, key=0, style=bold];
m26_363 -> m26_359  [color=blue, key=0, style=bold];
m26_376 -> m26_371  [color=blue, key=0, style=bold];
m26_388 -> m26_384  [color=blue, key=0, style=bold];
m26_400 -> m26_396  [color=blue, key=0, style=bold];
m26_414 -> m26_410  [color=blue, key=0, style=bold];
m26_426 -> m26_422  [color=blue, key=0, style=bold];
m26_440 -> m26_434  [color=blue, key=0, style=bold];
m26_457 -> m26_453  [color=blue, key=0, style=bold];
m26_471 -> m26_467  [color=blue, key=0, style=bold];
m26_483 -> m26_479  [color=blue, key=0, style=bold];
m26_495 -> m26_491  [color=blue, key=0, style=bold];
m26_10 -> m26_11  [key=0, style=solid];
m26_105 -> m26_106  [key=0, style=solid];
m26_108 -> m26_109  [key=0, style=solid];
m26_111 -> m26_112  [key=0, style=solid];
m26_45 -> m26_37  [color=blue, key=0, style=bold];
m26_72 -> m26_64  [color=blue, key=0, style=bold];
m26_113 -> m26_111  [color=blue, key=0, style=bold];
m26_168 -> m26_166  [color=blue, key=0, style=bold];
m26_57 -> m26_55  [color=blue, key=0, style=bold];
m26_12 -> m26_10  [color=blue, key=0, style=bold];
m26_192 -> m26_190  [color=blue, key=0, style=bold];
m26_266 -> m26_263  [color=blue, key=0, style=bold];
m26_29 -> m26_23  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_31  [key=2, style=dotted];
m26_76 -> m26_74  [color=blue, key=0, style=bold];
m26_117 -> m26_115  [color=blue, key=0, style=bold];
m26_279 -> m26_277  [color=blue, key=0, style=bold];
m26_278 -> m26_279  [key=0, style=solid];
m26_278 -> m26_280  [key=2, style=dotted];
m26_292 -> m26_289  [color=blue, key=0, style=bold];
m26_290 -> m26_291  [key=0, style=solid];
m26_290 -> m26_280  [key=2, style=dotted];
m26_291 -> m26_292  [key=0, style=solid];
m26_291 -> m26_280  [key=2, style=dotted];
m26_304 -> m26_301  [color=blue, key=0, style=bold];
m26_302 -> m26_303  [key=0, style=solid];
m26_302 -> m26_280  [key=2, style=dotted];
m26_303 -> m26_304  [key=0, style=solid];
m26_303 -> m26_280  [key=2, style=dotted];
m26_317 -> m26_315  [color=blue, key=0, style=bold];
m26_316 -> m26_317  [key=0, style=solid];
m26_316 -> m26_318  [key=2, style=dotted];
m26_330 -> m26_327  [color=blue, key=0, style=bold];
m26_328 -> m26_329  [key=0, style=solid];
m26_328 -> m26_280  [key=2, style=dotted];
m26_329 -> m26_330  [key=0, style=solid];
m26_329 -> m26_318  [key=2, style=dotted];
m26_342 -> m26_339  [color=blue, key=0, style=bold];
m26_340 -> m26_341  [key=0, style=solid];
m26_340 -> m26_280  [key=2, style=dotted];
m26_341 -> m26_342  [key=0, style=solid];
m26_341 -> m26_343  [key=2, style=dotted];
m26_355 -> m26_352  [color=blue, key=0, style=bold];
m26_353 -> m26_354  [key=0, style=solid];
m26_353 -> m26_280  [key=2, style=dotted];
m26_354 -> m26_355  [key=0, style=solid];
m26_354 -> m26_343  [key=2, style=dotted];
m26_367 -> m26_364  [color=blue, key=0, style=bold];
m26_365 -> m26_366  [key=0, style=solid];
m26_365 -> m26_280  [key=2, style=dotted];
m26_366 -> m26_367  [key=0, style=solid];
m26_366 -> m26_343  [key=2, style=dotted];
m26_379 -> m26_377  [color=blue, key=0, style=bold];
m26_378 -> m26_379  [key=0, style=solid];
m26_378 -> m26_380  [key=2, style=dotted];
m26_392 -> m26_389  [color=blue, key=0, style=bold];
m26_390 -> m26_391  [key=0, style=solid];
m26_390 -> m26_380  [key=2, style=dotted];
m26_391 -> m26_392  [key=0, style=solid];
m26_391 -> m26_380  [key=2, style=dotted];
m26_405 -> m26_401  [color=blue, key=0, style=bold];
m26_402 -> m26_403  [key=0, style=solid];
m26_402 -> m26_380  [key=2, style=dotted];
m26_403 -> m26_404  [key=0, style=solid];
m26_403 -> m26_380  [key=2, style=dotted];
m26_404 -> m26_405  [key=0, style=solid];
m26_404 -> m26_406  [key=2, style=dotted];
m26_418 -> m26_415  [color=blue, key=0, style=bold];
m26_416 -> m26_417  [key=0, style=solid];
m26_416 -> m26_380  [key=2, style=dotted];
m26_417 -> m26_418  [key=0, style=solid];
m26_417 -> m26_406  [key=2, style=dotted];
m26_430 -> m26_427  [color=blue, key=0, style=bold];
m26_428 -> m26_429  [key=0, style=solid];
m26_428 -> m26_380  [key=2, style=dotted];
m26_429 -> m26_430  [key=0, style=solid];
m26_429 -> m26_406  [key=2, style=dotted];
m26_448 -> m26_442  [color=blue, key=0, style=bold];
m26_443 -> m26_444  [key=0, style=solid];
m26_443 -> m26_380  [key=2, style=dotted];
m26_444 -> m26_445  [key=0, style=solid];
m26_444 -> m26_380  [key=2, style=dotted];
m26_445 -> m26_446  [key=0, style=solid];
m26_445 -> m26_380  [key=2, style=dotted];
m26_446 -> m26_447  [key=0, style=solid];
m26_446 -> m26_380  [key=2, style=dotted];
m26_447 -> m26_448  [key=0, style=solid];
m26_447 -> m26_449  [key=2, style=dotted];
m26_463 -> m26_458  [color=blue, key=0, style=bold];
m26_459 -> m26_460  [key=0, style=solid];
m26_459 -> m26_380  [key=2, style=dotted];
m26_460 -> m26_461  [key=0, style=solid];
m26_460 -> m26_380  [key=2, style=dotted];
m26_461 -> m26_462  [key=0, style=solid];
m26_461 -> m26_380  [key=2, style=dotted];
m26_462 -> m26_463  [key=0, style=solid];
m26_462 -> m26_449  [key=2, style=dotted];
m26_475 -> m26_472  [color=blue, key=0, style=bold];
m26_473 -> m26_474  [key=0, style=solid];
m26_473 -> m26_380  [key=2, style=dotted];
m26_474 -> m26_475  [key=0, style=solid];
m26_474 -> m26_449  [key=2, style=dotted];
m26_487 -> m26_484  [color=blue, key=0, style=bold];
m26_485 -> m26_486  [key=0, style=solid];
m26_485 -> m26_380  [key=2, style=dotted];
m26_486 -> m26_487  [key=0, style=solid];
m26_486 -> m26_449  [key=2, style=dotted];
m26_499 -> m26_496  [color=blue, key=0, style=bold];
m26_497 -> m26_498  [key=0, style=solid];
m26_497 -> m26_380  [key=2, style=dotted];
m26_498 -> m26_499  [key=0, style=solid];
m26_498 -> m26_449  [key=2, style=dotted];
m26_107 -> m26_105  [color=blue, key=0, style=bold];
m26_106 -> m26_107  [key=0, style=solid];
m26_110 -> m26_108  [color=blue, key=0, style=bold];
m26_109 -> m26_110  [key=0, style=solid];
m26_30 -> m26_28  [color=blue, key=0, style=bold];
m26_450 -> m26_451  [key=0, style=solid];
m26_451 -> m26_36  [key=2, style=dotted];
m26_451 -> m26_452  [key=0, style=solid];
m26_451 -> m26_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_452 -> m26_450  [color=blue, key=0, style=bold];
m26_238 -> m26_239  [color=green, key=0, style=solid];
m26_239 -> m26_240  [color=green, key=0, style=solid];
m26_239 -> m26_36  [color=green, key=2, style=dotted];
m26_239 -> m26_241  [color=green, key=1, label="lambda expression", style=dashed];
m26_240 -> m26_238  [color=blue, key=0, style=bold];
m26_281 -> m26_282  [key=0, style=solid];
m26_282 -> m26_36  [key=2, style=dotted];
m26_282 -> m26_283  [key=0, style=solid];
m26_282 -> m26_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_283 -> m26_281  [color=blue, key=0, style=bold];
m26_180 -> m26_181  [color=green, key=0, style=solid];
m26_181 -> m26_182  [color=green, key=0, style=solid];
m26_181 -> m26_36  [color=green, key=2, style=dotted];
m26_181 -> m26_183  [color=green, key=1, label="lambda expression", style=dashed];
m26_182 -> m26_180  [color=blue, key=0, style=bold];
m26_488 -> m26_489  [key=0, style=solid];
m26_489 -> m26_36  [key=2, style=dotted];
m26_489 -> m26_490  [key=0, style=solid];
m26_489 -> m26_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_490 -> m26_488  [color=blue, key=0, style=bold];
m26_177 -> m26_178  [key=0, style=solid];
m26_178 -> m26_46  [key=2, style=dotted];
m26_178 -> m26_47  [key=2, style=dotted];
m26_178 -> m26_179  [key=0, style=solid];
m26_179 -> m26_177  [color=blue, key=0, style=bold];
m26_24 -> m26_25  [key=0, style=solid];
m26_26 -> m26_19  [key=2, style=dotted];
m26_26 -> m26_27  [key=0, style=solid];
m26_25 -> m26_13  [key=2, style=dotted];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_27 -> m26_24  [color=blue, key=0, style=bold];
m26_255 -> m26_256  [key=0, style=solid];
m26_256 -> m26_36  [key=2, style=dotted];
m26_256 -> m26_257  [key=0, style=solid];
m26_256 -> m26_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_257 -> m26_255  [color=blue, key=0, style=bold];
m26_510 -> m26_121  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_129  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_130  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_154  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_161  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_160  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_181  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_195  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_198  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_213  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_216  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_225  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_228  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_239  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_242  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_43  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_62  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_67  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_68  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_70  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_89  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_90  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_93  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_184  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_256  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_259  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_268  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_271  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_282  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_285  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_294  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_297  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_306  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_309  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_320  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_323  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_332  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_335  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_345  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_348  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_357  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_360  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_369  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_372  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_382  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_385  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_394  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_397  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_408  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_411  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_420  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_423  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_432  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_435  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_451  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_454  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_465  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_468  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_477  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_480  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_489  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_492  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_510 -> m26_505  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m26_518 -> m26_124  [color=green, key=1, label=arrangeSql, style=dashed];
m26_519 -> m26_150  [color=green, key=1, label=jobId, style=dashed];
m26_520 -> m26_150  [color=green, key=1, label=state, style=dashed];
m26_511 -> m26_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_511 -> m26_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_513 -> m26_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_513 -> m26_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_515 -> m26_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_515 -> m26_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m26_512 -> m26_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_514 -> m26_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_516 -> m26_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_517 -> m26_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_4  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_6  [color=blue, key=0, style=bold];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_2  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_0  [color=blue, key=0, style=bold];
m29_7 -> m29_8  [key=0, style=solid];
m29_8 -> m29_7  [color=blue, key=0, style=bold];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_6 -> m29_3  [color=blue, key=0, style=bold];
m29_9 -> m29_10  [key=0, style=solid];
m29_10 -> m29_11  [key=0, style=solid];
m29_11 -> m29_9  [color=blue, key=0, style=bold];
m29_12 -> m29_1  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.CorrectJob", style=dashed];
m29_13 -> m29_4  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.ArgumentsJob", style=dashed];
m29_13 -> m29_5  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.ArgumentsJob", style=dashed];
m29_14 -> m29_10  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.DisposableJob", style=dashed];
m31_0 -> m31_1  [color=red, key=0, style=solid];
m31_1 -> m31_2  [color=red, key=0, style=solid];
m31_1 -> m31_3  [color=red, key=1, label=type, style=dashed];
m31_1 -> m31_5  [color=red, key=1, label=type, style=dashed];
m31_2 -> m31_3  [color=red, key=0, style=solid];
m31_2 -> m31_9  [color=red, key=2, style=dotted];
m31_2 -> m31_6  [color=red, key=1, label=methodInfo, style=dashed];
m31_3 -> m31_4  [color=red, key=0, style=solid];
m31_3 -> m31_10  [color=red, key=2, style=dotted];
m31_3 -> m31_11  [color=red, key=2, style=dotted];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_13  [key=2, style=dotted];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_13  [key=2, style=dotted];
m31_4 -> m31_5  [color=red, key=0, style=solid];
m31_4 -> m31_12  [color=red, key=2, style=dotted];
m31_4 -> m31_6  [color=red, key=1, label=job, style=dashed];
m31_4 -> m31_7  [color=red, key=1, label=job, style=dashed];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_13  [key=2, style=dotted];
m31_8 -> m31_0  [color=blue, key=0, style=bold];
m31_63 -> m31_94  [key=0, style=solid];
m31_94 -> m31_63  [color=blue, key=0, style=bold];
m31_49 -> m31_91  [key=0, style=solid];
m31_49 -> m31_3  [color=red, key=3, label="Parameter variable string arg", style=bold];
m31_91 -> m31_49  [color=blue, key=0, style=bold];
m31_14 -> m31_15  [key=0, style=solid];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_10  [key=2, style=dotted];
m31_15 -> m31_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_18  [key=2, style=dotted];
m31_16 -> m31_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_17 -> m31_14  [color=blue, key=0, style=bold];
m31_92 -> m31_93  [key=0, style=solid];
m31_93 -> m31_92  [color=blue, key=0, style=bold];
m31_29 -> m31_30  [key=0, style=solid];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_10  [key=2, style=dotted];
m31_30 -> m31_11  [key=2, style=dotted];
m31_30 -> m31_34  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_18  [key=2, style=dotted];
m31_31 -> m31_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_32 -> m31_29  [color=blue, key=0, style=bold];
m31_64 -> m31_65  [key=0, style=solid];
m31_65 -> m31_66  [key=0, style=solid];
m31_65 -> m31_56  [key=2, style=dotted];
m31_65 -> m31_45  [key=2, style=dotted];
m31_65 -> m31_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_12  [key=2, style=dotted];
m31_67 -> m31_68  [key=0, style=solid];
m31_67 -> m31_58  [key=2, style=dotted];
m31_68 -> m31_64  [color=blue, key=0, style=bold];
m31_72 -> m31_95  [key=0, style=solid];
m31_72 -> m31_65  [color=darkorchid, key=3, label="Parameter variable T2 arg2", style=bold];
m31_95 -> m31_72  [color=blue, key=0, style=bold];
m31_73 -> m31_74  [key=0, style=solid];
m31_74 -> m31_75  [key=0, style=solid];
m31_74 -> m31_10  [key=2, style=dotted];
m31_74 -> m31_11  [key=2, style=dotted];
m31_75 -> m31_76  [key=0, style=solid];
m31_75 -> m31_12  [key=2, style=dotted];
m31_76 -> m31_77  [key=0, style=solid];
m31_76 -> m31_13  [key=2, style=dotted];
m31_77 -> m31_73  [color=blue, key=0, style=bold];
m31_36 -> m31_37  [key=0, style=solid];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_44  [key=2, style=dotted];
m31_37 -> m31_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_38 -> m31_39  [key=0, style=solid];
m31_38 -> m31_45  [key=2, style=dotted];
m31_38 -> m31_40  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m31_38 -> m31_41  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m31_38 -> m31_42  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m31_39 -> m31_40  [key=0, style=solid];
m31_39 -> m31_13  [key=2, style=dotted];
m31_40 -> m31_41  [key=0, style=solid];
m31_40 -> m31_13  [key=2, style=dotted];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_11  [key=2, style=dotted];
m31_41 -> m31_13  [key=2, style=dotted];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_11  [key=2, style=dotted];
m31_42 -> m31_13  [key=2, style=dotted];
m31_43 -> m31_36  [color=blue, key=0, style=bold];
m31_50 -> m31_51  [key=0, style=solid];
m31_51 -> m31_52  [key=0, style=solid];
m31_51 -> m31_56  [key=2, style=dotted];
m31_51 -> m31_45  [key=2, style=dotted];
m31_51 -> m31_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_52 -> m31_53  [key=0, style=solid];
m31_52 -> m31_12  [key=2, style=dotted];
m31_52 -> m31_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m31_53 -> m31_54  [key=0, style=solid];
m31_53 -> m31_57  [key=2, style=dotted];
m31_53 -> m31_58  [key=2, style=dotted];
m31_54 -> m31_55  [key=0, style=solid];
m31_54 -> m31_59  [key=2, style=dotted];
m31_54 -> m31_13  [key=2, style=dotted];
m31_55 -> m31_50  [color=blue, key=0, style=bold];
m31_96 -> m31_97  [key=0, style=solid];
m31_97 -> m31_96  [color=blue, key=0, style=bold];
m31_88 -> m31_89  [key=0, style=solid];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_12  [key=2, style=dotted];
m31_19 -> m31_20  [key=0, style=solid];
m31_21 -> m31_19  [color=blue, key=0, style=bold];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_12  [key=2, style=dotted];
m31_26 -> m31_27  [key=0, style=solid];
m31_28 -> m31_26  [color=blue, key=0, style=bold];
m31_34 -> m31_35  [key=0, style=solid];
m31_34 -> m31_12  [key=2, style=dotted];
m31_33 -> m31_34  [key=0, style=solid];
m31_35 -> m31_33  [color=blue, key=0, style=bold];
m31_46 -> m31_47  [key=0, style=solid];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_49  [key=2, style=dotted];
m31_48 -> m31_46  [color=blue, key=0, style=bold];
m31_60 -> m31_61  [key=0, style=solid];
m31_61 -> m31_62  [key=0, style=solid];
m31_61 -> m31_63  [key=2, style=dotted];
m31_62 -> m31_60  [color=blue, key=0, style=bold];
m31_69 -> m31_70  [key=0, style=solid];
m31_70 -> m31_71  [key=0, style=solid];
m31_70 -> m31_72  [key=2, style=dotted];
m31_71 -> m31_69  [color=blue, key=0, style=bold];
m31_89 -> m31_90  [key=0, style=solid];
m31_89 -> m31_12  [key=2, style=dotted];
m31_90 -> m31_88  [color=blue, key=0, style=bold];
m31_22 -> m31_23  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_10  [key=2, style=dotted];
m31_23 -> m31_27  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_18  [key=2, style=dotted];
m31_24 -> m31_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_25 -> m31_22  [color=blue, key=0, style=bold];
m31_83 -> m31_84  [key=0, style=solid];
m31_84 -> m31_85  [key=0, style=solid];
m31_84 -> m31_10  [key=2, style=dotted];
m31_84 -> m31_11  [key=2, style=dotted];
m31_84 -> m31_89  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m31_85 -> m31_86  [key=0, style=solid];
m31_85 -> m31_18  [key=2, style=dotted];
m31_85 -> m31_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_86 -> m31_87  [key=0, style=solid];
m31_86 -> m31_18  [key=2, style=dotted];
m31_87 -> m31_83  [color=blue, key=0, style=bold];
m31_78 -> m31_79  [key=0, style=solid];
m31_79 -> m31_80  [key=0, style=solid];
m31_79 -> m31_10  [key=2, style=dotted];
m31_79 -> m31_11  [key=2, style=dotted];
m31_80 -> m31_81  [key=0, style=solid];
m31_80 -> m31_12  [key=2, style=dotted];
m31_81 -> m31_82  [key=0, style=solid];
m31_81 -> m31_13  [key=2, style=dotted];
m31_82 -> m31_78  [color=blue, key=0, style=bold];
m31_98 -> m31_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m31_99 -> m31_27  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m31_100 -> m31_34  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m31_101 -> m31_89  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m33_0 -> m33_1  [color=red, key=0, style=solid];
m33_1 -> m33_2  [color=red, key=0, style=solid];
m33_2 -> m33_0  [color=blue, key=0, style=bold];
m33_3 -> m33_1  [color=red, key=1, label="HangFire.Filters.JobPerformingContext", style=dashed];
m35_55 -> m35_56  [key=0, style=solid];
m35_55 -> m35_70  [key=2, style=dotted];
m35_55 -> m35_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_47 -> m35_35  [color=darkorchid, key=3, label="method methodReturn bool ApplyState", style=bold];
m35_47 -> m35_48  [key=0, style=solid];
m35_47 -> m35_49  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m35_47 -> m35_51  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m35_47 -> m35_54  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_47 -> m35_55  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_47 -> m35_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_47 -> m35_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m35_47 -> m35_58  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_47 -> m35_59  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_47 -> m35_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m35_47 -> m35_61  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_48 -> m35_42  [key=2, style=dotted];
m35_48 -> m35_49  [key=0, style=solid];
m35_48 -> m35_64  [key=2, style=dotted];
m35_48 -> m35_52  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m35_48 -> m35_53  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m35_48 -> m35_54  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m35_48 -> m35_57  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_51  [key=0, style=solid];
m35_49 -> m35_65  [key=2, style=dotted];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_66  [key=2, style=dotted];
m35_51 -> m35_54  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_51 -> m35_55  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_51 -> m35_57  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_51 -> m35_58  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_51 -> m35_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_51 -> m35_61  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_51 -> m35_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_69  [key=2, style=dotted];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_58  [key=0, style=solid];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_72  [key=2, style=dotted];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_73  [key=2, style=dotted];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_62  [key=0, style=solid];
m35_61 -> m35_60  [key=0, style=solid];
m35_61 -> m35_74  [key=2, style=dotted];
m35_52 -> m35_58  [key=0, style=solid];
m35_52 -> m35_53  [key=0, style=solid];
m35_52 -> m35_67  [key=2, style=dotted];
m35_53 -> m35_54  [key=0, style=solid];
m35_53 -> m35_55  [key=0, style=solid];
m35_53 -> m35_68  [key=2, style=dotted];
m35_57 -> m35_56  [key=0, style=solid];
m35_57 -> m35_71  [key=2, style=dotted];
m35_50 -> m35_63  [key=0, style=solid];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_75  [key=2, style=dotted];
m35_63 -> m35_47  [color=blue, key=0, style=bold];
m35_17 -> m35_21  [key=0, style=solid];
m35_21 -> m35_23  [key=2, style=dotted];
m35_21 -> m35_22  [key=0, style=solid];
m35_22 -> m35_17  [color=blue, key=0, style=bold];
m35_103 -> m35_104  [key=0, style=solid];
m35_77 -> m35_42  [key=2, style=dotted];
m35_77 -> m35_78  [key=0, style=solid];
m35_77 -> m35_79  [key=2, style=dotted];
m35_97 -> m35_42  [key=2, style=dotted];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> m35_9  [key=2, style=dotted];
m35_97 -> m35_99  [key=2, style=dotted];
m35_101 -> m35_42  [key=2, style=dotted];
m35_101 -> m35_102  [key=0, style=solid];
m35_101 -> m35_99  [key=2, style=dotted];
m35_104 -> m35_42  [key=2, style=dotted];
m35_104 -> m35_105  [key=0, style=solid];
m35_104 -> m35_106  [key=2, style=dotted];
m35_104 -> m35_107  [key=2, style=dotted];
m35_76 -> m35_77  [key=0, style=solid];
m35_78 -> m35_76  [color=blue, key=0, style=bold];
m35_96 -> m35_97  [key=0, style=solid];
m35_98 -> m35_96  [color=blue, key=0, style=bold];
m35_100 -> m35_101  [key=0, style=solid];
m35_102 -> m35_100  [color=blue, key=0, style=bold];
m35_105 -> m35_103  [color=blue, key=0, style=bold];
m35_10 -> m35_11  [key=0, style=solid];
m35_11 -> m35_17  [key=2, style=dotted];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_16  [key=2, style=dotted];
m35_12 -> m35_17  [key=2, style=dotted];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_18  [key=2, style=dotted];
m35_13 -> m35_17  [key=2, style=dotted];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_19  [key=2, style=dotted];
m35_14 -> m35_17  [key=2, style=dotted];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_20  [key=2, style=dotted];
m35_15 -> m35_10  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [color=blue, key=0, style=bold];
m35_24 -> m35_27  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_24 -> m35_30  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m35_24 -> m35_37  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_32  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_24 -> m35_33  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m35_24 -> m35_35  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m35_24 -> m35_47  [color=darkorchid, key=3, label="method methodReturn bool Apply", style=bold];
m35_29 -> m35_30  [color=green, key=0, style=solid];
m35_29 -> m35_40  [color=green, key=2, style=dotted];
m35_29 -> m35_41  [color=green, key=2, style=dotted];
m35_29 -> m35_31  [color=green, key=1, label=changingFilters, style=dashed];
m35_27 -> m35_29  [color=green, key=0, style=solid];
m35_27 -> m35_28  [key=0, style=solid];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_42  [key=2, style=dotted];
m35_30 -> m35_43  [key=2, style=dotted];
m35_30 -> m35_44  [key=2, style=dotted];
m35_31 -> m35_36  [color=green, key=0, style=solid];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_33  [color=darkseagreen4, key=1, label=filter, style=dashed];
m35_36 -> m35_37  [color=green, key=0, style=solid];
m35_36 -> m35_40  [color=green, key=2, style=dotted];
m35_36 -> m35_41  [color=green, key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_47  [key=2, style=dotted];
m35_25 -> m35_27  [key=0, style=solid];
m35_25 -> m35_26  [key=0, style=solid];
m35_28 -> m35_38  [key=0, style=solid];
m35_28 -> m35_39  [key=2, style=dotted];
m35_35 -> m35_31  [key=0, style=solid];
m35_35 -> m35_46  [key=2, style=dotted];
m35_34 -> m35_31  [key=0, style=solid];
m35_34 -> m35_35  [key=0, style=solid];
m35_32 -> m35_35  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m35_32 -> m35_34  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m35_32 -> m35_33  [key=0, style=solid];
m35_33 -> m35_37  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_45  [key=2, style=dotted];
m35_26 -> m35_38  [key=0, style=solid];
m35_26 -> m35_39  [key=2, style=dotted];
m35_38 -> m35_24  [color=blue, key=0, style=bold];
m35_46 -> m35_80  [key=0, style=solid];
m35_46 -> m35_81  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_80 -> m35_81  [key=0, style=solid];
m35_80 -> m35_66  [key=2, style=dotted];
m35_80 -> m35_82  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m35_81 -> m35_82  [key=0, style=solid];
m35_81 -> m35_72  [key=2, style=dotted];
m35_82 -> m35_83  [key=0, style=solid];
m35_82 -> m35_75  [key=2, style=dotted];
m35_83 -> m35_46  [color=blue, key=0, style=bold];
m35_84 -> m35_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_84 -> m35_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_84 -> m35_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_84 -> m35_85  [key=0, style=solid];
m35_84 -> m35_87  [color=darkseagreen4, key=1, label=bool, style=dashed];
m35_84 -> m35_88  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_84 -> m35_89  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_84 -> m35_90  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_84 -> m35_91  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_84 -> m35_93  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m35_85 -> m35_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_85 -> m35_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_85 -> m35_86  [key=0, style=solid];
m35_85 -> m35_6  [key=2, style=dotted];
m35_85 -> m35_89  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_85 -> m35_90  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_85 -> m35_91  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_85 -> m35_92  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_85 -> m35_93  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_87 -> m35_88  [key=0, style=solid];
m35_87 -> m35_90  [key=0, style=solid];
m35_88 -> m35_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_88 -> m35_70  [key=2, style=dotted];
m35_88 -> m35_89  [key=0, style=solid];
m35_89 -> m35_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_89 -> m35_70  [key=2, style=dotted];
m35_89 -> m35_90  [key=0, style=solid];
m35_90 -> m35_91  [key=0, style=solid];
m35_90 -> m35_23  [key=2, style=dotted];
m35_91 -> m35_92  [key=0, style=solid];
m35_91 -> m35_23  [key=2, style=dotted];
m35_93 -> m35_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_93 -> m35_70  [key=2, style=dotted];
m35_93 -> m35_94  [key=0, style=solid];
m35_86 -> m35_87  [key=0, style=solid];
m35_86 -> m35_92  [color=darkseagreen4, key=1, label=now, style=dashed];
m35_92 -> m35_93  [key=0, style=solid];
m35_92 -> m35_95  [key=2, style=dotted];
m35_92 -> m35_23  [key=2, style=dotted];
m35_94 -> m35_84  [color=blue, key=0, style=bold];
m35_6 -> m35_7  [key=0, style=solid];
m35_7 -> m35_9  [key=2, style=dotted];
m35_7 -> m35_8  [key=0, style=solid];
m35_8 -> m35_6  [color=blue, key=0, style=bold];
m35_109 -> m35_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_110 -> m35_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_110 -> m35_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_110 -> m35_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m35_111 -> m35_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m35_111 -> m35_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m36_5 -> m36_6  [color=green, key=0, style=solid];
m36_6 -> m36_7  [color=green, key=0, style=solid];
m36_6 -> m36_8  [key=0, style=solid];
m36_6 -> m36_9  [color=green, key=2, style=dotted];
m36_6 -> m36_4  [color=green, key=2, style=dotted];
m36_7 -> m36_6  [key=0, style=solid];
m36_7 -> m36_9  [key=2, style=dotted];
m36_7 -> m36_10  [key=2, style=dotted];
m36_7 -> m36_5  [color=blue, key=0, style=bold];
m36_8 -> m36_5  [color=blue, key=0, style=bold];
m36_4 -> m36_0  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_0 -> m36_3  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m36_1 -> m36_4  [key=2, style=dotted];
m36_1 -> m36_3  [key=2, style=dotted];
m36_1 -> m36_2  [key=0, style=solid];
m36_2 -> m36_0  [color=blue, key=0, style=bold];
m36_2 -> m36_3  [key=0, style=solid];
m36_3 -> m36_4  [key=0, style=solid];
m36_9 -> m36_10  [color=green, key=0, style=solid];
m36_12 -> m36_13  [color=green, key=0, style=solid];
m36_13 -> m36_14  [color=green, key=0, style=solid];
m36_13 -> m36_3  [color=green, key=2, style=dotted];
m36_13 -> m36_15  [color=green, key=2, style=dotted];
m36_13 -> m36_16  [color=green, key=2, style=dotted];
m36_13 -> m36_17  [color=green, key=2, style=dotted];
m36_14 -> m36_12  [color=blue, key=0, style=bold];
m36_10 -> m36_11  [color=green, key=0, style=solid];
m36_10 -> m36_9  [color=green, key=2, style=dotted];
m36_10 -> m36_4  [color=green, key=2, style=dotted];
m36_18 -> m36_19  [key=0, style=solid];
m36_19 -> m36_3  [key=2, style=dotted];
m36_19 -> m36_20  [key=0, style=solid];
m36_19 -> m36_21  [key=2, style=dotted];
m36_20 -> m36_18  [color=blue, key=0, style=bold];
m36_11 -> m36_9  [color=blue, key=0, style=bold];
m36_11 -> m36_1  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m36_11 -> m36_2  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m36_11 -> m36_3  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m36_11 -> m36_6  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m36_11 -> m36_7  [color=darkseagreen4, key=1, label="HangFire.Web.CombinedResourceHandler", style=dashed];
m36_22 -> m36_23  [key=0, style=solid];
m36_22 -> m36_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_23 -> m36_3  [key=2, style=dotted];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_26  [key=2, style=dotted];
m36_24 -> m36_25  [key=0, style=solid];
m36_24 -> m36_27  [key=2, style=dotted];
m36_25 -> m36_22  [color=blue, key=0, style=bold];
m37_24 -> m37_25  [key=0, style=solid];
m37_25 -> m37_26  [key=0, style=solid];
m37_25 -> m37_35  [key=0, style=solid];
m37_26 -> m37_27  [key=0, style=solid];
m37_35 -> m37_36  [key=0, style=solid];
m37_35 -> m37_41  [key=0, style=solid];
m37_27 -> m37_28  [key=0, style=solid];
m37_28 -> m37_29  [key=0, style=solid];
m37_28 -> m37_30  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m37_28 -> m37_33  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m37_29 -> m37_30  [key=0, style=solid];
m37_29 -> m37_33  [key=0, style=solid];
m37_30 -> m37_31  [key=0, style=solid];
m37_30 -> m37_30  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m37_30 -> m37_32  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m37_30 -> m37_33  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m37_33 -> m37_34  [key=0, style=solid];
m37_31 -> m37_32  [key=0, style=solid];
m37_31 -> m37_33  [key=0, style=solid];
m37_32 -> m37_33  [key=0, style=solid];
m37_32 -> m37_42  [key=2, style=dotted];
m37_32 -> m37_32  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m37_34 -> m37_35  [key=0, style=solid];
m37_34 -> m37_43  [key=2, style=dotted];
m37_36 -> m37_37  [key=0, style=solid];
m37_36 -> m37_36  [color=darkseagreen4, key=1, label=command, style=dashed];
m37_37 -> m37_38  [key=0, style=solid];
m37_37 -> m37_37  [color=darkseagreen4, key=1, label=command, style=dashed];
m37_37 -> m37_39  [color=darkseagreen4, key=1, label=command, style=dashed];
m37_37 -> m37_40  [color=darkseagreen4, key=1, label=command, style=dashed];
m37_38 -> m37_39  [key=0, style=solid];
m37_38 -> m37_40  [key=0, style=solid];
m37_39 -> m37_40  [key=0, style=solid];
m37_39 -> m37_39  [color=darkseagreen4, key=1, label=command, style=dashed];
m37_40 -> m37_35  [key=0, style=solid];
m37_40 -> m37_44  [key=2, style=dotted];
m37_41 -> m37_24  [color=blue, key=0, style=bold];
m37_17 -> m37_18  [key=0, style=solid];
m37_17 -> m37_19  [color=darkseagreen4, key=1, label=DbCommand, style=dashed];
m37_17 -> m37_20  [color=darkseagreen4, key=1, label=DbCommand, style=dashed];
m37_18 -> m37_19  [key=0, style=solid];
m37_18 -> m37_20  [key=0, style=solid];
m37_19 -> m37_21  [key=0, style=solid];
m37_19 -> m37_22  [key=2, style=dotted];
m37_20 -> m37_21  [key=0, style=solid];
m37_20 -> m37_23  [key=2, style=dotted];
m37_21 -> m37_17  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [color=green, key=0, style=solid];
m37_1 -> m37_2  [color=green, key=0, style=solid];
m37_1 -> m37_6  [color=green, key=0, style=solid];
m37_2 -> m37_3  [key=0, style=solid];
m37_2 -> m37_7  [key=2, style=dotted];
m37_3 -> m37_4  [key=0, style=solid];
m37_3 -> m37_6  [key=0, style=solid];
m37_4 -> m37_5  [key=0, style=solid];
m37_5 -> m37_6  [key=0, style=solid];
m37_6 -> m37_0  [color=blue, key=0, style=bold];
m37_8 -> m37_9  [key=0, style=solid];
m37_8 -> m37_10  [color=darkseagreen4, key=1, label="params SqlParameter[]", style=dashed];
m37_9 -> m37_10  [color=red, key=0, style=solid];
m37_9 -> m37_14  [key=2, style=dotted];
m37_9 -> m37_11  [color=darkseagreen4, key=1, label=command, style=dashed];
m37_9 -> m37_12  [color=green, key=1, label=command, style=dashed];
m37_10 -> m37_11  [color=red, key=0, style=solid];
m37_10 -> m37_12  [color=green, key=0, style=solid];
m37_11 -> m37_10  [color=red, key=0, style=solid];
m37_11 -> m37_15  [key=2, style=dotted];
m37_12 -> m37_13  [color=green, key=0, style=solid];
m37_12 -> m37_16  [color=green, key=2, style=dotted];
m37_13 -> m37_8  [color=blue, key=0, style=bold];
m37_45 -> m37_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_12  [color=green, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_28  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_34  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_37  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m37_45 -> m37_39  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m38_0 -> m38_1  [color=green, key=0, style=solid];
m38_1 -> m38_2  [color=green, key=0, style=solid];
m38_2 -> m38_0  [color=blue, key=0, style=bold];
m38_3 -> m38_4  [color=green, key=0, style=solid];
m38_4 -> m38_5  [color=green, key=0, style=solid];
m38_5 -> m38_6  [color=green, key=0, style=solid];
m38_5 -> m38_7  [color=green, key=2, style=dotted];
m38_6 -> m38_3  [color=blue, key=0, style=bold];
m38_8 -> m38_1  [color=green, key=1, label="HangFire.Filters.PerformContext", style=dashed];
m38_8 -> m38_4  [color=green, key=1, label="HangFire.Filters.PerformContext", style=dashed];
m38_8 -> m38_5  [color=green, key=1, label="HangFire.Filters.PerformContext", style=dashed];
m39_0 -> m39_1  [color=green, key=0, style=solid];
m39_1 -> m39_2  [color=green, key=0, style=solid];
m39_2 -> m39_0  [color=blue, key=0, style=bold];
m39_26 -> m39_1  [color=green, key=1, label="HangFire.RecurringAttribute", style=dashed];
m42_8 -> m42_9  [key=0, style=solid];
m42_9 -> m42_10  [key=0, style=solid];
m42_9 -> m42_11  [key=2, style=dotted];
m42_10 -> m42_8  [color=blue, key=0, style=bold];
m42_3 -> m42_4  [key=0, style=solid];
m42_4 -> m42_5  [key=0, style=solid];
m42_4 -> m42_6  [key=2, style=dotted];
m42_4 -> m42_7  [key=2, style=dotted];
m42_5 -> m42_3  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_2 -> m42_0  [color=blue, key=0, style=bold];
m42_12 -> m42_13  [key=0, style=solid];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_15  [key=2, style=dotted];
m42_14 -> m42_12  [color=blue, key=0, style=bold];
m42_16 -> m42_1  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m42_16 -> m42_4  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m43_16 -> m43_17  [color=green, key=0, style=solid];
m43_16 -> m43_18  [color=green, key=1, label=string, style=dashed];
m43_17 -> m43_18  [color=green, key=0, style=solid];
m43_17 -> m43_5  [color=green, key=2, style=dotted];
m43_17 -> m43_6  [color=green, key=2, style=dotted];
m43_17 -> m43_20  [key=2, style=dotted];
m43_18 -> m43_19  [color=green, key=0, style=solid];
m43_18 -> m43_5  [color=green, key=2, style=dotted];
m43_18 -> m43_11  [color=green, key=2, style=dotted];
m43_18 -> m43_21  [key=2, style=dotted];
m43_19 -> m43_16  [color=blue, key=0, style=bold];
m43_2 -> m43_3  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_5  [key=2, style=dotted];
m43_3 -> m43_6  [key=2, style=dotted];
m43_4 -> m43_2  [color=blue, key=0, style=bold];
m43_25 -> m43_26  [key=0, style=solid];
m43_26 -> m43_27  [key=0, style=solid];
m43_26 -> m43_5  [key=2, style=dotted];
m43_26 -> m43_20  [key=2, style=dotted];
m43_27 -> m43_28  [key=0, style=solid];
m43_27 -> m43_29  [key=2, style=dotted];
m43_28 -> m43_25  [color=blue, key=0, style=bold];
m43_7 -> m43_8  [key=0, style=solid];
m43_7 -> m43_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_6  [key=2, style=dotted];
m43_9 -> m43_10  [key=0, style=solid];
m43_9 -> m43_5  [key=2, style=dotted];
m43_9 -> m43_11  [key=2, style=dotted];
m43_10 -> m43_7  [color=blue, key=0, style=bold];
m43_22 -> m43_23  [key=0, style=solid];
m43_23 -> m43_24  [key=0, style=solid];
m43_23 -> m43_5  [key=2, style=dotted];
m43_23 -> m43_15  [key=2, style=dotted];
m43_24 -> m43_22  [color=blue, key=0, style=bold];
m43_12 -> m43_13  [color=green, key=0, style=solid];
m43_13 -> m43_14  [color=green, key=0, style=solid];
m43_13 -> m43_15  [color=green, key=2, style=dotted];
m43_13 -> m43_6  [color=green, key=2, style=dotted];
m43_13 -> m43_5  [key=2, style=dotted];
m43_14 -> m43_12  [color=blue, key=0, style=bold];
m43_44 -> m43_45  [color=green, key=0, style=solid];
m43_44 -> m43_46  [color=green, key=1, label=int, style=dashed];
m43_45 -> m43_46  [color=green, key=0, style=solid];
m43_45 -> m43_5  [color=green, key=2, style=dotted];
m43_45 -> m43_42  [color=green, key=2, style=dotted];
m43_46 -> m43_47  [color=green, key=0, style=solid];
m43_46 -> m43_43  [color=green, key=2, style=dotted];
m43_47 -> m43_44  [color=blue, key=0, style=bold];
m43_38 -> m43_39  [color=green, key=0, style=solid];
m43_39 -> m43_40  [color=green, key=0, style=solid];
m43_39 -> m43_5  [color=green, key=2, style=dotted];
m43_39 -> m43_42  [color=green, key=2, style=dotted];
m43_40 -> m43_41  [color=green, key=0, style=solid];
m43_40 -> m43_43  [color=green, key=2, style=dotted];
m43_41 -> m43_38  [color=blue, key=0, style=bold];
m43_0 -> m43_1  [key=0, style=solid];
m43_1 -> m43_0  [color=blue, key=0, style=bold];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_3 -> m44_8  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_3 -> m44_9  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_3 -> m44_10  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m44_3 -> m44_14  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_3 -> m44_15  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_3 -> m44_3  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m44_4 -> m44_5  [key=0, style=solid];
m44_4 -> m44_6  [key=0, style=solid];
m44_6 -> m44_7  [key=0, style=solid];
m44_6 -> m44_8  [key=0, style=solid];
m44_8 -> m44_9  [key=0, style=solid];
m44_8 -> m44_10  [key=0, style=solid];
m44_9 -> m44_16  [key=0, style=solid];
m44_10 -> m44_11  [key=0, style=solid];
m44_10 -> m44_18  [key=2, style=dotted];
m44_10 -> m44_19  [key=2, style=dotted];
m44_14 -> m44_16  [key=0, style=solid];
m44_14 -> m44_24  [key=2, style=dotted];
m44_14 -> m44_25  [key=2, style=dotted];
m44_15 -> m44_16  [key=0, style=solid];
m44_5 -> m44_16  [key=0, style=solid];
m44_5 -> m44_17  [key=2, style=dotted];
m44_7 -> m44_16  [key=0, style=solid];
m44_7 -> m44_17  [key=2, style=dotted];
m44_11 -> m44_12  [key=0, style=solid];
m44_11 -> m44_20  [key=2, style=dotted];
m44_12 -> m44_13  [key=0, style=solid];
m44_12 -> m44_21  [key=2, style=dotted];
m44_12 -> m44_22  [key=2, style=dotted];
m44_12 -> m44_23  [key=2, style=dotted];
m44_12 -> m44_14  [color=darkseagreen4, key=1, label=recurringAttribute, style=dashed];
m44_13 -> m44_14  [key=0, style=solid];
m44_13 -> m44_15  [key=0, style=solid];
m44_16 -> m44_3  [color=blue, key=0, style=bold];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_2  [key=0, style=solid];
m44_2 -> m44_0  [color=blue, key=0, style=bold];
m44_26 -> m44_1  [color=darkseagreen4, key=1, label="HangFire.RecurringAttribute", style=dashed];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_8  [key=2, style=dotted];
m45_1 -> m45_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_2 -> m45_3  [key=0, style=solid];
m45_2 -> m45_9  [key=2, style=dotted];
m45_3 -> m45_4  [key=0, style=solid];
m45_3 -> m45_10  [key=2, style=dotted];
m45_3 -> m45_11  [key=2, style=dotted];
m45_3 -> m45_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_12  [key=2, style=dotted];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_13  [key=2, style=dotted];
m45_6 -> m45_7  [key=0, style=solid];
m45_6 -> m45_14  [key=2, style=dotted];
m45_7 -> m45_0  [color=blue, key=0, style=bold];
m45_184 -> m45_185  [key=0, style=solid];
m45_185 -> m45_186  [key=0, style=solid];
m45_185 -> m45_27  [key=2, style=dotted];
m45_185 -> m45_187  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_185 -> m45_188  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_186 -> m45_187  [key=0, style=solid];
m45_186 -> m45_29  [key=2, style=dotted];
m45_187 -> m45_188  [key=0, style=solid];
m45_187 -> m45_190  [key=2, style=dotted];
m45_188 -> m45_189  [key=0, style=solid];
m45_188 -> m45_190  [key=2, style=dotted];
m45_189 -> m45_184  [color=blue, key=0, style=bold];
m45_27 -> m45_191  [key=0, style=solid];
m45_191 -> m45_192  [key=0, style=solid];
m45_191 -> m45_195  [key=2, style=dotted];
m45_191 -> m45_193  [color=darkseagreen4, key=1, label=connectionMock, style=dashed];
m45_192 -> m45_193  [key=0, style=solid];
m45_192 -> m45_10  [key=2, style=dotted];
m45_192 -> m45_11  [key=2, style=dotted];
m45_192 -> m45_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_193 -> m45_194  [key=0, style=solid];
m45_193 -> m45_196  [key=2, style=dotted];
m45_193 -> m45_197  [key=2, style=dotted];
m45_194 -> m45_27  [color=blue, key=0, style=bold];
m45_57 -> m45_58  [key=0, style=solid];
m45_58 -> m45_59  [key=0, style=solid];
m45_58 -> m45_27  [key=2, style=dotted];
m45_58 -> m45_65  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_58 -> m45_79  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_58 -> m45_66  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_58 -> m45_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_58 -> m45_68  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_59 -> m45_60  [key=0, style=solid];
m45_59 -> m45_70  [key=2, style=dotted];
m45_59 -> m45_63  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m45_59 -> m45_65  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m45_65 -> m45_66  [key=0, style=solid];
m45_65 -> m45_10  [key=2, style=dotted];
m45_65 -> m45_48  [key=2, style=dotted];
m45_65 -> m45_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_66 -> m45_67  [key=0, style=solid];
m45_66 -> m45_10  [key=2, style=dotted];
m45_66 -> m45_48  [key=2, style=dotted];
m45_66 -> m45_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_68 -> m45_69  [key=0, style=solid];
m45_68 -> m45_33  [key=2, style=dotted];
m45_60 -> m45_61  [key=0, style=solid];
m45_60 -> m45_10  [key=2, style=dotted];
m45_60 -> m45_11  [key=2, style=dotted];
m45_60 -> m45_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_63 -> m45_64  [key=0, style=solid];
m45_63 -> m45_71  [key=2, style=dotted];
m45_61 -> m45_62  [key=0, style=solid];
m45_61 -> m45_70  [key=2, style=dotted];
m45_61 -> m45_64  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m45_61 -> m45_66  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m45_62 -> m45_63  [key=0, style=solid];
m45_62 -> m45_10  [key=2, style=dotted];
m45_62 -> m45_11  [key=2, style=dotted];
m45_62 -> m45_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_64 -> m45_65  [key=0, style=solid];
m45_64 -> m45_71  [key=2, style=dotted];
m45_67 -> m45_68  [key=0, style=solid];
m45_67 -> m45_10  [key=2, style=dotted];
m45_67 -> m45_48  [key=2, style=dotted];
m45_67 -> m45_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_69 -> m45_57  [color=blue, key=0, style=bold];
m45_144 -> m45_145  [key=0, style=solid];
m45_145 -> m45_146  [key=0, style=solid];
m45_145 -> m45_27  [key=2, style=dotted];
m45_145 -> m45_150  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_145 -> m45_158  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_145 -> m45_151  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_145 -> m45_162  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_145 -> m45_153  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_146 -> m45_147  [key=0, style=solid];
m45_146 -> m45_155  [key=2, style=dotted];
m45_146 -> m45_148  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m45_146 -> m45_150  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m45_150 -> m45_151  [key=0, style=solid];
m45_150 -> m45_10  [key=2, style=dotted];
m45_150 -> m45_48  [key=2, style=dotted];
m45_150 -> m45_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_151 -> m45_152  [key=0, style=solid];
m45_151 -> m45_10  [key=2, style=dotted];
m45_151 -> m45_48  [key=2, style=dotted];
m45_151 -> m45_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_153 -> m45_154  [key=0, style=solid];
m45_153 -> m45_33  [key=2, style=dotted];
m45_147 -> m45_148  [key=0, style=solid];
m45_147 -> m45_155  [key=2, style=dotted];
m45_147 -> m45_149  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m45_147 -> m45_151  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m45_148 -> m45_149  [key=0, style=solid];
m45_148 -> m45_156  [key=2, style=dotted];
m45_149 -> m45_150  [key=0, style=solid];
m45_149 -> m45_156  [key=2, style=dotted];
m45_152 -> m45_153  [key=0, style=solid];
m45_152 -> m45_10  [key=2, style=dotted];
m45_152 -> m45_48  [key=2, style=dotted];
m45_152 -> m45_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_154 -> m45_144  [color=blue, key=0, style=bold];
m45_117 -> m45_118  [key=0, style=solid];
m45_118 -> m45_119  [key=0, style=solid];
m45_118 -> m45_27  [key=2, style=dotted];
m45_118 -> m45_120  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_119 -> m45_120  [key=0, style=solid];
m45_119 -> m45_10  [key=2, style=dotted];
m45_119 -> m45_11  [key=2, style=dotted];
m45_119 -> m45_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_120 -> m45_121  [key=0, style=solid];
m45_120 -> m45_33  [key=2, style=dotted];
m45_121 -> m45_122  [key=0, style=solid];
m45_121 -> m45_123  [key=2, style=dotted];
m45_121 -> m45_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_122 -> m45_117  [color=blue, key=0, style=bold];
m45_34 -> m45_35  [key=0, style=solid];
m45_35 -> m45_36  [key=0, style=solid];
m45_35 -> m45_27  [key=2, style=dotted];
m45_35 -> m45_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_36 -> m45_37  [key=0, style=solid];
m45_36 -> m45_28  [key=2, style=dotted];
m45_36 -> m45_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_37 -> m45_38  [key=0, style=solid];
m45_37 -> m45_29  [key=2, style=dotted];
m45_38 -> m45_34  [color=blue, key=0, style=bold];
m45_22 -> m45_23  [key=0, style=solid];
m45_23 -> m45_24  [key=0, style=solid];
m45_23 -> m45_27  [key=2, style=dotted];
m45_23 -> m45_31  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_24 -> m45_25  [key=0, style=solid];
m45_24 -> m45_28  [key=2, style=dotted];
m45_24 -> m45_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_25 -> m45_26  [key=0, style=solid];
m45_25 -> m45_29  [key=2, style=dotted];
m45_26 -> m45_22  [color=blue, key=0, style=bold];
m45_198 -> m45_199  [key=0, style=solid];
m45_15 -> m45_16  [key=0, style=solid];
m45_19 -> m45_20  [key=0, style=solid];
m45_16 -> m45_17  [key=0, style=solid];
m45_16 -> m45_18  [key=2, style=dotted];
m45_17 -> m45_15  [color=blue, key=0, style=bold];
m45_20 -> m45_21  [key=0, style=solid];
m45_21 -> m45_19  [color=blue, key=0, style=bold];
m45_31 -> m45_32  [key=0, style=solid];
m45_31 -> m45_33  [key=2, style=dotted];
m45_30 -> m45_31  [key=0, style=solid];
m45_32 -> m45_30  [color=blue, key=0, style=bold];
m45_40 -> m45_41  [key=0, style=solid];
m45_40 -> m45_33  [key=2, style=dotted];
m45_39 -> m45_40  [key=0, style=solid];
m45_41 -> m45_39  [color=blue, key=0, style=bold];
m45_49 -> m45_50  [key=0, style=solid];
m45_53 -> m45_54  [key=0, style=solid];
m45_50 -> m45_51  [key=0, style=solid];
m45_50 -> m45_52  [key=2, style=dotted];
m45_51 -> m45_49  [color=blue, key=0, style=bold];
m45_54 -> m45_55  [key=0, style=solid];
m45_54 -> m45_56  [key=2, style=dotted];
m45_55 -> m45_53  [color=blue, key=0, style=bold];
m45_79 -> m45_80  [key=0, style=solid];
m45_79 -> m45_81  [key=2, style=dotted];
m45_83 -> m45_84  [key=0, style=solid];
m45_83 -> m45_81  [key=2, style=dotted];
m45_72 -> m45_73  [key=0, style=solid];
m45_75 -> m45_76  [key=0, style=solid];
m45_78 -> m45_79  [key=0, style=solid];
m45_82 -> m45_83  [key=0, style=solid];
m45_85 -> m45_86  [key=0, style=solid];
m45_73 -> m45_74  [key=0, style=solid];
m45_74 -> m45_72  [color=blue, key=0, style=bold];
m45_76 -> m45_77  [key=0, style=solid];
m45_77 -> m45_75  [color=blue, key=0, style=bold];
m45_80 -> m45_78  [color=blue, key=0, style=bold];
m45_84 -> m45_82  [color=blue, key=0, style=bold];
m45_86 -> m45_87  [key=0, style=solid];
m45_86 -> m45_28  [key=2, style=dotted];
m45_86 -> m45_52  [key=2, style=dotted];
m45_87 -> m45_85  [color=blue, key=0, style=bold];
m45_111 -> m45_112  [key=0, style=solid];
m45_111 -> m45_113  [key=2, style=dotted];
m45_115 -> m45_116  [key=0, style=solid];
m45_115 -> m45_113  [key=2, style=dotted];
m45_101 -> m45_102  [key=0, style=solid];
m45_104 -> m45_105  [key=0, style=solid];
m45_107 -> m45_108  [key=0, style=solid];
m45_110 -> m45_111  [key=0, style=solid];
m45_114 -> m45_115  [key=0, style=solid];
m45_102 -> m45_103  [key=0, style=solid];
m45_103 -> m45_101  [color=blue, key=0, style=bold];
m45_105 -> m45_106  [key=0, style=solid];
m45_106 -> m45_104  [color=blue, key=0, style=bold];
m45_108 -> m45_109  [key=0, style=solid];
m45_108 -> m45_28  [key=2, style=dotted];
m45_108 -> m45_52  [key=2, style=dotted];
m45_109 -> m45_107  [color=blue, key=0, style=bold];
m45_112 -> m45_110  [color=blue, key=0, style=bold];
m45_116 -> m45_114  [color=blue, key=0, style=bold];
m45_124 -> m45_125  [key=0, style=solid];
m45_127 -> m45_128  [key=0, style=solid];
m45_125 -> m45_126  [key=0, style=solid];
m45_126 -> m45_124  [color=blue, key=0, style=bold];
m45_128 -> m45_129  [key=0, style=solid];
m45_128 -> m45_28  [key=2, style=dotted];
m45_128 -> m45_130  [key=2, style=dotted];
m45_129 -> m45_127  [color=blue, key=0, style=bold];
m45_137 -> m45_138  [key=0, style=solid];
m45_140 -> m45_141  [key=0, style=solid];
m45_138 -> m45_139  [key=0, style=solid];
m45_139 -> m45_137  [color=blue, key=0, style=bold];
m45_141 -> m45_142  [key=0, style=solid];
m45_141 -> m45_143  [key=2, style=dotted];
m45_142 -> m45_140  [color=blue, key=0, style=bold];
m45_158 -> m45_159  [key=0, style=solid];
m45_158 -> m45_160  [key=2, style=dotted];
m45_162 -> m45_163  [key=0, style=solid];
m45_162 -> m45_160  [key=2, style=dotted];
m45_157 -> m45_158  [key=0, style=solid];
m45_161 -> m45_162  [key=0, style=solid];
m45_164 -> m45_165  [key=0, style=solid];
m45_159 -> m45_157  [color=blue, key=0, style=bold];
m45_163 -> m45_161  [color=blue, key=0, style=bold];
m45_165 -> m45_166  [key=0, style=solid];
m45_165 -> m45_28  [key=2, style=dotted];
m45_165 -> m45_52  [key=2, style=dotted];
m45_166 -> m45_164  [color=blue, key=0, style=bold];
m45_178 -> m45_179  [key=0, style=solid];
m45_178 -> m45_180  [key=2, style=dotted];
m45_182 -> m45_183  [key=0, style=solid];
m45_182 -> m45_180  [key=2, style=dotted];
m45_177 -> m45_178  [key=0, style=solid];
m45_181 -> m45_182  [key=0, style=solid];
m45_179 -> m45_177  [color=blue, key=0, style=bold];
m45_183 -> m45_181  [color=blue, key=0, style=bold];
m45_199 -> m45_200  [key=0, style=solid];
m45_199 -> m45_201  [key=2, style=dotted];
m45_200 -> m45_198  [color=blue, key=0, style=bold];
m45_131 -> m45_132  [key=0, style=solid];
m45_132 -> m45_133  [key=0, style=solid];
m45_132 -> m45_27  [key=2, style=dotted];
m45_132 -> m45_134  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_133 -> m45_134  [key=0, style=solid];
m45_133 -> m45_10  [key=2, style=dotted];
m45_133 -> m45_11  [key=2, style=dotted];
m45_133 -> m45_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_134 -> m45_135  [key=0, style=solid];
m45_134 -> m45_33  [key=2, style=dotted];
m45_135 -> m45_136  [key=0, style=solid];
m45_135 -> m45_123  [key=2, style=dotted];
m45_135 -> m45_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_136 -> m45_131  [color=blue, key=0, style=bold];
m45_167 -> m45_168  [key=0, style=solid];
m45_168 -> m45_169  [key=0, style=solid];
m45_168 -> m45_27  [key=2, style=dotted];
m45_168 -> m45_173  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_168 -> m45_178  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_168 -> m45_174  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_168 -> m45_182  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_168 -> m45_175  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_169 -> m45_170  [key=0, style=solid];
m45_169 -> m45_155  [key=2, style=dotted];
m45_169 -> m45_171  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m45_169 -> m45_173  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m45_173 -> m45_174  [key=0, style=solid];
m45_173 -> m45_10  [key=2, style=dotted];
m45_173 -> m45_48  [key=2, style=dotted];
m45_173 -> m45_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_174 -> m45_175  [key=0, style=solid];
m45_174 -> m45_10  [key=2, style=dotted];
m45_174 -> m45_48  [key=2, style=dotted];
m45_174 -> m45_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_175 -> m45_176  [key=0, style=solid];
m45_175 -> m45_33  [key=2, style=dotted];
m45_170 -> m45_171  [key=0, style=solid];
m45_170 -> m45_155  [key=2, style=dotted];
m45_170 -> m45_172  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m45_170 -> m45_174  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m45_171 -> m45_172  [key=0, style=solid];
m45_171 -> m45_156  [key=2, style=dotted];
m45_172 -> m45_173  [key=0, style=solid];
m45_172 -> m45_156  [key=2, style=dotted];
m45_176 -> m45_167  [color=blue, key=0, style=bold];
m45_42 -> m45_43  [key=0, style=solid];
m45_43 -> m45_44  [key=0, style=solid];
m45_43 -> m45_10  [key=2, style=dotted];
m45_43 -> m45_48  [key=2, style=dotted];
m45_43 -> m45_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_44 -> m45_45  [key=0, style=solid];
m45_44 -> m45_10  [key=2, style=dotted];
m45_44 -> m45_48  [key=2, style=dotted];
m45_44 -> m45_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_45 -> m45_46  [key=0, style=solid];
m45_45 -> m45_27  [key=2, style=dotted];
m45_46 -> m45_47  [key=0, style=solid];
m45_46 -> m45_33  [key=2, style=dotted];
m45_47 -> m45_42  [color=blue, key=0, style=bold];
m45_88 -> m45_89  [key=0, style=solid];
m45_89 -> m45_90  [key=0, style=solid];
m45_89 -> m45_27  [key=2, style=dotted];
m45_89 -> m45_97  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_89 -> m45_111  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_89 -> m45_98  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_89 -> m45_115  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_89 -> m45_99  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_90 -> m45_91  [key=0, style=solid];
m45_90 -> m45_70  [key=2, style=dotted];
m45_90 -> m45_94  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m45_90 -> m45_97  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m45_97 -> m45_98  [key=0, style=solid];
m45_97 -> m45_10  [key=2, style=dotted];
m45_97 -> m45_48  [key=2, style=dotted];
m45_97 -> m45_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_98 -> m45_99  [key=0, style=solid];
m45_98 -> m45_10  [key=2, style=dotted];
m45_98 -> m45_48  [key=2, style=dotted];
m45_98 -> m45_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_99 -> m45_100  [key=0, style=solid];
m45_99 -> m45_33  [key=2, style=dotted];
m45_91 -> m45_92  [key=0, style=solid];
m45_91 -> m45_10  [key=2, style=dotted];
m45_91 -> m45_11  [key=2, style=dotted];
m45_91 -> m45_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_94 -> m45_95  [key=0, style=solid];
m45_94 -> m45_71  [key=2, style=dotted];
m45_92 -> m45_93  [key=0, style=solid];
m45_92 -> m45_70  [key=2, style=dotted];
m45_92 -> m45_95  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m45_92 -> m45_98  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m45_93 -> m45_94  [key=0, style=solid];
m45_93 -> m45_10  [key=2, style=dotted];
m45_93 -> m45_11  [key=2, style=dotted];
m45_93 -> m45_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_95 -> m45_96  [key=0, style=solid];
m45_95 -> m45_71  [key=2, style=dotted];
m45_96 -> m45_97  [key=0, style=solid];
m45_96 -> m45_10  [key=2, style=dotted];
m45_96 -> m45_48  [key=2, style=dotted];
m45_96 -> m45_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_100 -> m45_88  [color=blue, key=0, style=bold];
m45_202 -> m45_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_23  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_45  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_89  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_94  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_99  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_118  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_119  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_120  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_133  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_145  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_151  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_162  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_178  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_185  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_202 -> m45_193  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m45_203 -> m45_31  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_204 -> m45_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_205 -> m45_79  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_205 -> m45_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_206 -> m45_111  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_206 -> m45_115  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_207 -> m45_158  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_207 -> m45_162  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_208 -> m45_178  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_208 -> m45_182  [color=darkseagreen4, key=1, label=context, style=dashed];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_2  [color=red, key=1, label=string, style=dashed];
m46_0 -> m46_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m46_1 -> m46_2  [color=red, key=0, style=solid];
m46_2 -> m46_3  [color=red, key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_4 -> m46_0  [color=blue, key=0, style=bold];
m46_5 -> m46_1  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m46_5 -> m46_2  [color=red, key=1, label="HangFire.Server.ServerContext", style=dashed];
m46_5 -> m46_3  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m47_0 -> m47_1  [color=green, key=0, style=solid];
m47_1 -> m47_2  [color=green, key=0, style=solid];
m47_2 -> m47_0  [color=blue, key=0, style=bold];
m47_3 -> m47_1  [color=green, key=1, label="HangFire.Filters.ServerExceptionContext", style=dashed];
m48_34 -> m48_35  [key=0, style=solid];
m48_35 -> m48_36  [key=0, style=solid];
m48_35 -> m48_37  [key=2, style=dotted];
m48_36 -> m48_34  [color=blue, key=0, style=bold];
m48_38 -> m48_39  [key=0, style=solid];
m48_39 -> m48_40  [key=0, style=solid];
m48_39 -> m48_41  [key=2, style=dotted];
m48_40 -> m48_38  [color=blue, key=0, style=bold];
m48_0 -> m48_1  [key=0, style=solid];
m48_0 -> m48_3  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m48_0 -> m48_5  [color=red, key=1, label=string, style=dashed];
m48_0 -> m48_6  [color=red, key=1, label=string, style=dashed];
m48_0 -> m48_7  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m48_0 -> m48_9  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m48_0 -> m48_10  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_3  [color=red, key=0, style=solid];
m48_3 -> m48_4  [color=red, key=0, style=solid];
m48_3 -> m48_5  [color=red, key=0, style=solid];
m48_5 -> m48_6  [color=red, key=0, style=solid];
m48_6 -> m48_7  [color=red, key=0, style=solid];
m48_6 -> m48_20  [color=red, key=2, style=dotted];
m48_6 -> m48_9  [color=red, key=1, label=type, style=dashed];
m48_7 -> m48_8  [key=0, style=solid];
m48_7 -> m48_21  [key=2, style=dotted];
m48_9 -> m48_18  [key=0, style=solid];
m48_9 -> m48_22  [key=2, style=dotted];
m48_9 -> m48_23  [key=2, style=dotted];
m48_9 -> m48_24  [key=2, style=dotted];
m48_10 -> m48_11  [color=red, key=0, style=solid];
m48_10 -> m48_18  [color=red, key=0, style=solid];
m48_2 -> m48_18  [key=0, style=solid];
m48_2 -> m48_19  [key=2, style=dotted];
m48_4 -> m48_18  [color=red, key=0, style=solid];
m48_4 -> m48_19  [color=red, key=2, style=dotted];
m48_8 -> m48_9  [key=0, style=solid];
m48_8 -> m48_10  [color=red, key=0, style=solid];
m48_11 -> m48_12  [key=0, style=solid];
m48_11 -> m48_23  [key=2, style=dotted];
m48_11 -> m48_25  [key=2, style=dotted];
m48_11 -> m48_11  [color=darkseagreen4, key=1, label=arg, style=dashed];
m48_11 -> m48_13  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m48_11 -> m48_14  [color=darkseagreen4, key=1, label=arg, style=dashed];
m48_11 -> m48_15  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m48_11 -> m48_17  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m48_12 -> m48_13  [key=0, style=solid];
m48_12 -> m48_10  [color=red, key=0, style=solid];
m48_13 -> m48_14  [key=0, style=solid];
m48_13 -> m48_26  [key=2, style=dotted];
m48_14 -> m48_15  [key=0, style=solid];
m48_14 -> m48_27  [key=2, style=dotted];
m48_14 -> m48_14  [color=darkseagreen4, key=1, label=arg, style=dashed];
m48_15 -> m48_16  [key=0, style=solid];
m48_15 -> m48_10  [color=red, key=0, style=solid];
m48_15 -> m48_28  [key=2, style=dotted];
m48_17 -> m48_18  [key=0, style=solid];
m48_17 -> m48_29  [key=2, style=dotted];
m48_17 -> m48_23  [key=2, style=dotted];
m48_17 -> m48_24  [key=2, style=dotted];
m48_16 -> m48_17  [key=0, style=solid];
m48_18 -> m48_0  [color=blue, key=0, style=bold];
m48_42 -> m48_43  [key=0, style=solid];
m48_43 -> m48_44  [key=0, style=solid];
m48_43 -> m48_45  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m48_44 -> m48_45  [key=0, style=solid];
m48_44 -> m48_46  [key=0, style=solid];
m48_45 -> m48_46  [key=0, style=solid];
m48_45 -> m48_47  [key=2, style=dotted];
m48_46 -> m48_42  [color=blue, key=0, style=bold];
m48_30 -> m48_31  [key=0, style=solid];
m48_31 -> m48_32  [key=0, style=solid];
m48_31 -> m48_33  [key=2, style=dotted];
m48_32 -> m48_30  [color=blue, key=0, style=bold];
m48_48 -> m48_5  [color=red, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_7  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_8  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_11  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_15  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_17  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_31  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_35  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_39  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m48_48 -> m48_43  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m49_0 -> m49_1  [color=red, key=0, style=solid];
m49_0 -> m49_2  [color=red, key=1, label="System.Exception", style=dashed];
m49_1 -> m49_2  [color=red, key=0, style=solid];
m49_2 -> m49_3  [color=red, key=0, style=solid];
m49_3 -> m49_0  [color=blue, key=0, style=bold];
m49_4 -> m49_1  [color=red, key=1, label="HangFire.Filters.ServerJobExceptionContext", style=dashed];
m49_4 -> m49_2  [color=red, key=1, label="HangFire.Filters.ServerJobExceptionContext", style=dashed];
m50_2 -> m50_3  [key=0, style=solid];
m50_3 -> m50_2  [color=blue, key=0, style=bold];
m50_6 -> m50_7  [key=0, style=solid];
m50_7 -> m50_6  [color=blue, key=0, style=bold];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_0  [color=blue, key=0, style=bold];
m50_12 -> m50_13  [key=0, style=solid];
m50_13 -> m50_12  [color=blue, key=0, style=bold];
m50_8 -> m50_9  [key=0, style=solid];
m50_9 -> m50_8  [color=blue, key=0, style=bold];
m50_4 -> m50_5  [key=0, style=solid];
m50_5 -> m50_4  [color=blue, key=0, style=bold];
m50_10 -> m50_11  [key=0, style=solid];
m50_11 -> m50_10  [color=blue, key=0, style=bold];
m50_14 -> m50_15  [key=0, style=solid];
m50_15 -> m50_14  [color=blue, key=0, style=bold];
m51_22 -> m51_23  [key=0, style=solid];
m51_23 -> m51_24  [key=0, style=solid];
m51_23 -> m51_19  [key=2, style=dotted];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_26  [key=0, style=solid];
m51_25 -> m51_26  [key=0, style=solid];
m51_25 -> m51_27  [key=2, style=dotted];
m51_26 -> m51_22  [color=blue, key=0, style=bold];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_2  [color=red, key=1, label="HangFire.Server.ServerContext", style=dashed];
m51_0 -> m51_3  [color=red, key=1, label=int, style=dashed];
m51_0 -> m51_4  [color=red, key=1, label="HangFire.Server.ServerJobInvoker", style=dashed];
m51_0 -> m51_5  [color=red, key=1, label="HangFire.JobActivator", style=dashed];
m51_0 -> m51_6  [color=red, key=1, label=int, style=dashed];
m51_0 -> m51_7  [color=red, key=1, label=int, style=dashed];
m51_1 -> m51_2  [color=red, key=0, style=solid];
m51_2 -> m51_3  [color=red, key=0, style=solid];
m51_3 -> m51_4  [color=red, key=0, style=solid];
m51_4 -> m51_5  [color=red, key=0, style=solid];
m51_5 -> m51_6  [color=red, key=0, style=solid];
m51_6 -> m51_7  [color=red, key=0, style=solid];
m51_6 -> m51_9  [color=red, key=2, style=dotted];
m51_6 -> m51_10  [color=red, key=2, style=dotted];
m51_7 -> m51_8  [color=red, key=0, style=solid];
m51_7 -> m51_11  [color=red, key=2, style=dotted];
m51_7 -> m51_9  [color=red, key=2, style=dotted];
m51_8 -> m51_0  [color=blue, key=0, style=bold];
m51_47 -> m51_48  [key=0, style=solid];
m51_48 -> m51_49  [key=0, style=solid];
m51_48 -> m51_54  [key=0, style=solid];
m51_48 -> m51_55  [key=0, style=solid];
m51_48 -> m51_58  [key=0, style=solid];
m51_49 -> m51_50  [key=0, style=solid];
m51_49 -> m51_59  [key=2, style=dotted];
m51_54 -> m51_58  [key=0, style=solid];
m51_55 -> m51_56  [key=0, style=solid];
m51_50 -> m51_51  [key=0, style=solid];
m51_50 -> m51_60  [key=2, style=dotted];
m51_51 -> m51_52  [color=red, key=0, style=solid];
m51_52 -> m51_53  [color=red, key=0, style=solid];
m51_52 -> m51_61  [color=red, key=2, style=dotted];
m51_53 -> m51_48  [key=0, style=solid];
m51_53 -> m51_62  [key=2, style=dotted];
m51_56 -> m51_57  [key=0, style=solid];
m51_57 -> m51_58  [key=0, style=solid];
m51_57 -> m51_63  [key=2, style=dotted];
m51_57 -> m51_64  [key=2, style=dotted];
m51_58 -> m51_47  [color=blue, key=0, style=bold];
m51_12 -> m51_13  [key=0, style=solid];
m51_13 -> m51_14  [key=0, style=solid];
m51_13 -> m51_19  [key=2, style=dotted];
m51_14 -> m51_15  [key=0, style=solid];
m51_14 -> m51_16  [key=0, style=solid];
m51_15 -> m51_18  [key=0, style=solid];
m51_15 -> m51_20  [key=2, style=dotted];
m51_16 -> m51_17  [key=0, style=solid];
m51_16 -> m51_21  [key=2, style=dotted];
m51_17 -> m51_18  [key=0, style=solid];
m51_18 -> m51_12  [color=blue, key=0, style=bold];
m51_61 -> m51_65  [color=red, key=0, style=solid];
m51_61 -> m51_67  [color=red, key=1, label=string, style=dashed];
m51_61 -> m51_69  [color=red, key=1, label=string, style=dashed];
m51_61 -> m51_73  [color=red, key=1, label=string, style=dashed];
m51_61 -> m51_77  [color=red, key=1, label=string, style=dashed];
m51_61 -> m51_81  [color=red, key=1, label=string, style=dashed];
m51_61 -> m51_84  [color=red, key=1, label=string, style=dashed];
m51_61 -> m51_85  [color=red, key=1, label=string, style=dashed];
m51_61 -> m51_86  [color=red, key=1, label=string, style=dashed];
m51_65 -> m51_66  [color=red, key=0, style=solid];
m51_67 -> m51_68  [color=red, key=0, style=solid];
m51_67 -> m51_88  [color=red, key=2, style=dotted];
m51_67 -> m51_77  [color=red, key=1, label=jobArgs, style=dashed];
m51_69 -> m51_70  [color=red, key=0, style=solid];
m51_69 -> m51_9  [color=red, key=2, style=dotted];
m51_69 -> m51_90  [color=red, key=2, style=dotted];
m51_73 -> m51_74  [color=red, key=0, style=solid];
m51_73 -> m51_75  [color=red, key=0, style=solid];
m51_73 -> m51_92  [color=red, key=2, style=dotted];
m51_73 -> m51_93  [color=red, key=2, style=dotted];
m51_77 -> m51_78  [color=red, key=0, style=solid];
m51_77 -> m51_94  [color=red, key=2, style=dotted];
m51_81 -> m51_82  [color=red, key=0, style=solid];
m51_81 -> m51_9  [color=red, key=2, style=dotted];
m51_81 -> m51_96  [color=red, key=2, style=dotted];
m51_84 -> m51_86  [color=red, key=0, style=solid];
m51_84 -> m51_97  [color=red, key=2, style=dotted];
m51_84 -> m51_93  [color=red, key=2, style=dotted];
m51_85 -> m51_86  [color=red, key=0, style=solid];
m51_85 -> m51_98  [color=red, key=2, style=dotted];
m51_85 -> m51_93  [color=red, key=2, style=dotted];
m51_86 -> m51_87  [color=red, key=0, style=solid];
m51_86 -> m51_99  [color=red, key=2, style=dotted];
m51_66 -> m51_67  [color=red, key=0, style=solid];
m51_68 -> m51_69  [color=red, key=0, style=solid];
m51_68 -> m51_71  [color=red, key=0, style=solid];
m51_68 -> m51_89  [color=red, key=2, style=dotted];
m51_71 -> m51_72  [color=red, key=0, style=solid];
m51_71 -> m51_91  [color=red, key=2, style=dotted];
m51_71 -> m51_73  [color=red, key=1, label=workerContext, style=dashed];
m51_71 -> m51_78  [color=red, key=1, label=workerContext, style=dashed];
m51_70 -> m51_87  [color=red, key=0, style=solid];
m51_72 -> m51_73  [color=red, key=0, style=solid];
m51_78 -> m51_79  [color=red, key=0, style=solid];
m51_78 -> m51_82  [color=red, key=0, style=solid];
m51_78 -> m51_95  [color=red, key=2, style=dotted];
m51_74 -> m51_87  [key=0, style=solid];
m51_75 -> m51_76  [key=0, style=solid];
m51_75 -> m51_75  [color=darkorchid, key=3, label="Local variable System.Exception exception", style=bold];
m51_75 -> m51_79  [color=darkorchid, key=3, label="Local variable System.Exception exception", style=bold];
m51_76 -> m51_77  [color=red, key=0, style=solid];
m51_76 -> m51_75  [color=darkorchid, key=3, label="Local variable HangFire.Server.ServerJobDescriptor jobDescriptor", style=bold];
m51_79 -> m51_80  [key=0, style=solid];
m51_82 -> m51_83  [key=0, style=solid];
m51_80 -> m51_81  [color=red, key=0, style=solid];
m51_80 -> m51_83  [color=darkseagreen4, key=1, label=exception, style=dashed];
m51_80 -> m51_85  [color=red, key=1, label=exception, style=dashed];
m51_83 -> m51_84  [color=red, key=0, style=solid];
m51_83 -> m51_85  [color=red, key=0, style=solid];
m51_87 -> m51_61  [color=blue, key=0, style=bold];
m51_88 -> m51_100  [color=red, key=0, style=solid];
m51_88 -> m51_101  [color=red, key=1, label=string, style=dashed];
m51_88 -> m51_61  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m51_88 -> m51_66  [color=red, key=3, label="Parameter variable string jobType", style=bold];
m51_88 -> m51_65  [color=red, key=3, label="Parameter variable System.Collections.Generic.Dictionary<string, string> jobArgs", style=bold];
m51_100 -> m51_101  [color=red, key=0, style=solid];
m51_101 -> m51_102  [color=red, key=0, style=solid];
m51_101 -> m51_9  [color=red, key=2, style=dotted];
m51_101 -> m51_105  [color=red, key=2, style=dotted];
m51_101 -> m51_103  [color=red, key=1, label=result, style=dashed];
m51_102 -> m51_103  [color=red, key=0, style=solid];
m51_102 -> m51_104  [color=red, key=1, label="out string", style=dashed];
m51_103 -> m51_104  [color=red, key=0, style=solid];
m51_103 -> m51_106  [color=red, key=2, style=dotted];
m51_104 -> m51_88  [color=blue, key=0, style=bold];
m51_28 -> m51_29  [key=0, style=solid];
m51_28 -> m51_31  [color=red, key=1, label=string, style=dashed];
m51_29 -> m51_30  [key=0, style=solid];
m51_29 -> m51_19  [key=2, style=dotted];
m51_31 -> m51_32  [color=red, key=0, style=solid];
m51_30 -> m51_31  [color=red, key=0, style=solid];
m51_32 -> m51_33  [key=0, style=solid];
m51_32 -> m51_34  [key=2, style=dotted];
m51_33 -> m51_28  [color=blue, key=0, style=bold];
m51_35 -> m51_36  [key=0, style=solid];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_38  [key=0, style=solid];
m51_37 -> m51_43  [key=0, style=solid];
m51_38 -> m51_39  [key=0, style=solid];
m51_39 -> m51_40  [key=0, style=solid];
m51_39 -> m51_41  [key=0, style=solid];
m51_40 -> m51_41  [key=0, style=solid];
m51_40 -> m51_44  [key=2, style=dotted];
m51_41 -> m51_42  [key=0, style=solid];
m51_41 -> m51_45  [key=2, style=dotted];
m51_42 -> m51_43  [key=0, style=solid];
m51_42 -> m51_46  [key=2, style=dotted];
m51_43 -> m51_35  [color=blue, key=0, style=bold];
m51_107 -> m51_1  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_2  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_3  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_4  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_5  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_6  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_7  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_14  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_16  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_30  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_31  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_32  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_38  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_39  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_40  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_41  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_42  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_50  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_51  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_52  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_53  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_56  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_57  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_69  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_71  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_77  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_78  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_81  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m51_107 -> m51_86  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m52_0 -> m52_1  [key=0, style=solid];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_130  [key=2, style=dotted];
m52_2 -> m52_3  [key=0, style=solid];
m52_2 -> m52_131  [key=2, style=dotted];
m52_3 -> m52_4  [key=0, style=solid];
m52_4 -> m52_5  [key=0, style=solid];
m52_5 -> m52_6  [key=0, style=solid];
m52_5 -> m52_132  [key=2, style=dotted];
m52_5 -> m52_133  [key=2, style=dotted];
m52_5 -> m52_11  [color=darkseagreen4, key=1, label=from, style=dashed];
m52_6 -> m52_7  [key=0, style=solid];
m52_6 -> m52_132  [key=2, style=dotted];
m52_6 -> m52_133  [key=2, style=dotted];
m52_6 -> m52_11  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m52_11 -> m52_12  [key=0, style=solid];
m52_11 -> m52_135  [key=2, style=dotted];
m52_11 -> m52_136  [key=2, style=dotted];
m52_11 -> m52_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_11 -> m52_39  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_11 -> m52_122  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_11 -> m52_125  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_7 -> m52_8  [key=0, style=solid];
m52_7 -> m52_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_7 -> m52_39  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_7 -> m52_122  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_7 -> m52_125  [color=darkseagreen4, key=1, label=pager, style=dashed];
m52_8 -> m52_9  [key=0, style=solid];
m52_8 -> m52_134  [key=2, style=dotted];
m52_8 -> m52_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m52_36 -> m52_37  [key=0, style=solid];
m52_36 -> m52_41  [key=0, style=solid];
m52_39 -> m52_40  [key=0, style=solid];
m52_39 -> m52_141  [key=2, style=dotted];
m52_39 -> m52_139  [key=2, style=dotted];
m52_122 -> m52_123  [key=0, style=solid];
m52_122 -> m52_127  [key=0, style=solid];
m52_125 -> m52_126  [key=0, style=solid];
m52_125 -> m52_149  [key=2, style=dotted];
m52_125 -> m52_139  [key=2, style=dotted];
m52_9 -> m52_10  [key=0, style=solid];
m52_9 -> m52_11  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m52_9 -> m52_12  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m52_13 -> m52_14  [key=0, style=solid];
m52_13 -> m52_138  [key=2, style=dotted];
m52_13 -> m52_17  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m52_13 -> m52_56  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m52_10 -> m52_11  [key=0, style=solid];
m52_10 -> m52_13  [key=0, style=solid];
m52_12 -> m52_14  [key=0, style=solid];
m52_12 -> m52_137  [key=2, style=dotted];
m52_12 -> m52_17  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m52_12 -> m52_56  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m52_14 -> m52_15  [key=0, style=solid];
m52_14 -> m52_130  [key=2, style=dotted];
m52_17 -> m52_18  [key=0, style=solid];
m52_17 -> m52_21  [key=0, style=solid];
m52_56 -> m52_57  [key=0, style=solid];
m52_56 -> m52_121  [key=0, style=solid];
m52_56 -> m52_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_87  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_90  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_93  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_94  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_99  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_106  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_111  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_117  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_56 -> m52_118  [color=darkseagreen4, key=1, label=job, style=dashed];
m52_15 -> m52_16  [key=0, style=solid];
m52_15 -> m52_139  [key=2, style=dotted];
m52_16 -> m52_17  [key=0, style=solid];
m52_16 -> m52_130  [key=2, style=dotted];
m52_18 -> m52_19  [key=0, style=solid];
m52_18 -> m52_130  [key=2, style=dotted];
m52_21 -> m52_22  [key=0, style=solid];
m52_21 -> m52_130  [key=2, style=dotted];
m52_19 -> m52_20  [key=0, style=solid];
m52_19 -> m52_139  [key=2, style=dotted];
m52_20 -> m52_128  [key=0, style=solid];
m52_20 -> m52_130  [key=2, style=dotted];
m52_22 -> m52_23  [key=0, style=solid];
m52_22 -> m52_140  [key=2, style=dotted];
m52_22 -> m52_139  [key=2, style=dotted];
m52_23 -> m52_24  [key=0, style=solid];
m52_23 -> m52_130  [key=2, style=dotted];
m52_24 -> m52_25  [key=0, style=solid];
m52_24 -> m52_139  [key=2, style=dotted];
m52_25 -> m52_26  [key=0, style=solid];
m52_25 -> m52_130  [key=2, style=dotted];
m52_26 -> m52_27  [key=0, style=solid];
m52_26 -> m52_139  [key=2, style=dotted];
m52_27 -> m52_28  [key=0, style=solid];
m52_27 -> m52_130  [key=2, style=dotted];
m52_28 -> m52_29  [key=0, style=solid];
m52_28 -> m52_140  [key=2, style=dotted];
m52_28 -> m52_139  [key=2, style=dotted];
m52_29 -> m52_30  [key=0, style=solid];
m52_29 -> m52_130  [key=2, style=dotted];
m52_30 -> m52_31  [key=0, style=solid];
m52_30 -> m52_139  [key=2, style=dotted];
m52_31 -> m52_32  [key=0, style=solid];
m52_31 -> m52_130  [key=2, style=dotted];
m52_32 -> m52_33  [key=0, style=solid];
m52_32 -> m52_139  [key=2, style=dotted];
m52_33 -> m52_34  [key=0, style=solid];
m52_33 -> m52_130  [key=2, style=dotted];
m52_34 -> m52_35  [key=0, style=solid];
m52_34 -> m52_139  [key=2, style=dotted];
m52_35 -> m52_36  [key=0, style=solid];
m52_35 -> m52_130  [key=2, style=dotted];
m52_37 -> m52_38  [key=0, style=solid];
m52_37 -> m52_130  [key=2, style=dotted];
m52_41 -> m52_42  [key=0, style=solid];
m52_41 -> m52_130  [key=2, style=dotted];
m52_38 -> m52_39  [key=0, style=solid];
m52_38 -> m52_130  [key=2, style=dotted];
m52_40 -> m52_41  [key=0, style=solid];
m52_40 -> m52_130  [key=2, style=dotted];
m52_42 -> m52_43  [key=0, style=solid];
m52_42 -> m52_139  [key=2, style=dotted];
m52_43 -> m52_44  [key=0, style=solid];
m52_43 -> m52_130  [key=2, style=dotted];
m52_44 -> m52_45  [key=0, style=solid];
m52_44 -> m52_139  [key=2, style=dotted];
m52_45 -> m52_46  [key=0, style=solid];
m52_45 -> m52_130  [key=2, style=dotted];
m52_46 -> m52_47  [key=0, style=solid];
m52_46 -> m52_139  [key=2, style=dotted];
m52_47 -> m52_48  [key=0, style=solid];
m52_47 -> m52_130  [key=2, style=dotted];
m52_48 -> m52_49  [key=0, style=solid];
m52_48 -> m52_139  [key=2, style=dotted];
m52_49 -> m52_50  [key=0, style=solid];
m52_49 -> m52_130  [key=2, style=dotted];
m52_50 -> m52_51  [key=0, style=solid];
m52_50 -> m52_139  [key=2, style=dotted];
m52_51 -> m52_52  [key=0, style=solid];
m52_51 -> m52_130  [key=2, style=dotted];
m52_52 -> m52_53  [key=0, style=solid];
m52_52 -> m52_139  [key=2, style=dotted];
m52_53 -> m52_54  [key=0, style=solid];
m52_53 -> m52_130  [key=2, style=dotted];
m52_54 -> m52_55  [key=0, style=solid];
m52_54 -> m52_139  [key=2, style=dotted];
m52_55 -> m52_56  [key=0, style=solid];
m52_55 -> m52_130  [key=2, style=dotted];
m52_57 -> m52_58  [key=0, style=solid];
m52_57 -> m52_130  [key=2, style=dotted];
m52_121 -> m52_122  [key=0, style=solid];
m52_121 -> m52_130  [key=2, style=dotted];
m52_58 -> m52_59  [key=0, style=solid];
m52_58 -> m52_139  [key=2, style=dotted];
m52_60 -> m52_61  [key=0, style=solid];
m52_60 -> m52_139  [key=2, style=dotted];
m52_69 -> m52_70  [key=0, style=solid];
m52_69 -> m52_139  [key=2, style=dotted];
m52_72 -> m52_73  [key=0, style=solid];
m52_72 -> m52_139  [key=2, style=dotted];
m52_75 -> m52_76  [key=0, style=solid];
m52_75 -> m52_81  [key=0, style=solid];
m52_75 -> m52_142  [key=2, style=dotted];
m52_77 -> m52_78  [key=0, style=solid];
m52_77 -> m52_143  [key=2, style=dotted];
m52_77 -> m52_139  [key=2, style=dotted];
m52_79 -> m52_80  [key=0, style=solid];
m52_79 -> m52_139  [key=2, style=dotted];
m52_84 -> m52_85  [key=0, style=solid];
m52_84 -> m52_89  [key=0, style=solid];
m52_87 -> m52_88  [key=0, style=solid];
m52_87 -> m52_144  [key=2, style=dotted];
m52_87 -> m52_139  [key=2, style=dotted];
m52_90 -> m52_91  [key=0, style=solid];
m52_90 -> m52_139  [key=2, style=dotted];
m52_93 -> m52_94  [key=0, style=solid];
m52_93 -> m52_95  [key=0, style=solid];
m52_94 -> m52_98  [key=0, style=solid];
m52_94 -> m52_145  [key=2, style=dotted];
m52_94 -> m52_139  [key=2, style=dotted];
m52_99 -> m52_100  [key=0, style=solid];
m52_99 -> m52_113  [key=0, style=solid];
m52_100 -> m52_101  [key=0, style=solid];
m52_100 -> m52_108  [key=0, style=solid];
m52_100 -> m52_146  [key=2, style=dotted];
m52_102 -> m52_103  [key=0, style=solid];
m52_102 -> m52_147  [key=2, style=dotted];
m52_102 -> m52_139  [key=2, style=dotted];
m52_104 -> m52_105  [key=0, style=solid];
m52_104 -> m52_148  [key=2, style=dotted];
m52_104 -> m52_139  [key=2, style=dotted];
m52_106 -> m52_107  [key=0, style=solid];
m52_106 -> m52_145  [key=2, style=dotted];
m52_106 -> m52_139  [key=2, style=dotted];
m52_111 -> m52_112  [key=0, style=solid];
m52_111 -> m52_145  [key=2, style=dotted];
m52_111 -> m52_139  [key=2, style=dotted];
m52_117 -> m52_118  [key=0, style=solid];
m52_117 -> m52_119  [key=0, style=solid];
m52_118 -> m52_120  [key=0, style=solid];
m52_118 -> m52_145  [key=2, style=dotted];
m52_118 -> m52_139  [key=2, style=dotted];
m52_59 -> m52_60  [key=0, style=solid];
m52_59 -> m52_130  [key=2, style=dotted];
m52_61 -> m52_62  [key=0, style=solid];
m52_61 -> m52_130  [key=2, style=dotted];
m52_62 -> m52_63  [key=0, style=solid];
m52_62 -> m52_130  [key=2, style=dotted];
m52_63 -> m52_64  [key=0, style=solid];
m52_63 -> m52_65  [color=darkseagreen4, key=1, label=cronDescription, style=dashed];
m52_63 -> m52_67  [color=darkseagreen4, key=1, label=cronDescription, style=dashed];
m52_64 -> m52_65  [key=0, style=solid];
m52_64 -> m52_130  [key=2, style=dotted];
m52_65 -> m52_66  [key=0, style=solid];
m52_65 -> m52_71  [key=0, style=solid];
m52_67 -> m52_68  [key=0, style=solid];
m52_67 -> m52_139  [key=2, style=dotted];
m52_66 -> m52_67  [key=0, style=solid];
m52_66 -> m52_130  [key=2, style=dotted];
m52_71 -> m52_72  [key=0, style=solid];
m52_71 -> m52_130  [key=2, style=dotted];
m52_68 -> m52_69  [key=0, style=solid];
m52_68 -> m52_130  [key=2, style=dotted];
m52_70 -> m52_74  [key=0, style=solid];
m52_70 -> m52_130  [key=2, style=dotted];
m52_73 -> m52_74  [key=0, style=solid];
m52_73 -> m52_130  [key=2, style=dotted];
m52_74 -> m52_75  [key=0, style=solid];
m52_74 -> m52_130  [key=2, style=dotted];
m52_76 -> m52_77  [key=0, style=solid];
m52_76 -> m52_130  [key=2, style=dotted];
m52_81 -> m52_82  [key=0, style=solid];
m52_81 -> m52_130  [key=2, style=dotted];
m52_78 -> m52_79  [key=0, style=solid];
m52_78 -> m52_130  [key=2, style=dotted];
m52_80 -> m52_83  [key=0, style=solid];
m52_80 -> m52_130  [key=2, style=dotted];
m52_82 -> m52_83  [key=0, style=solid];
m52_82 -> m52_130  [key=2, style=dotted];
m52_83 -> m52_84  [key=0, style=solid];
m52_83 -> m52_130  [key=2, style=dotted];
m52_85 -> m52_86  [key=0, style=solid];
m52_85 -> m52_130  [key=2, style=dotted];
m52_89 -> m52_90  [key=0, style=solid];
m52_89 -> m52_130  [key=2, style=dotted];
m52_86 -> m52_87  [key=0, style=solid];
m52_86 -> m52_130  [key=2, style=dotted];
m52_88 -> m52_92  [key=0, style=solid];
m52_88 -> m52_130  [key=2, style=dotted];
m52_91 -> m52_92  [key=0, style=solid];
m52_91 -> m52_130  [key=2, style=dotted];
m52_92 -> m52_93  [key=0, style=solid];
m52_92 -> m52_130  [key=2, style=dotted];
m52_95 -> m52_96  [key=0, style=solid];
m52_95 -> m52_130  [key=2, style=dotted];
m52_96 -> m52_97  [key=0, style=solid];
m52_96 -> m52_139  [key=2, style=dotted];
m52_97 -> m52_98  [key=0, style=solid];
m52_97 -> m52_130  [key=2, style=dotted];
m52_98 -> m52_99  [key=0, style=solid];
m52_98 -> m52_130  [key=2, style=dotted];
m52_113 -> m52_114  [key=0, style=solid];
m52_113 -> m52_130  [key=2, style=dotted];
m52_101 -> m52_102  [key=0, style=solid];
m52_101 -> m52_130  [key=2, style=dotted];
m52_108 -> m52_109  [key=0, style=solid];
m52_108 -> m52_130  [key=2, style=dotted];
m52_103 -> m52_104  [key=0, style=solid];
m52_103 -> m52_130  [key=2, style=dotted];
m52_105 -> m52_106  [key=0, style=solid];
m52_105 -> m52_130  [key=2, style=dotted];
m52_107 -> m52_116  [key=0, style=solid];
m52_107 -> m52_130  [key=2, style=dotted];
m52_109 -> m52_110  [key=0, style=solid];
m52_109 -> m52_139  [key=2, style=dotted];
m52_110 -> m52_111  [key=0, style=solid];
m52_110 -> m52_130  [key=2, style=dotted];
m52_112 -> m52_116  [key=0, style=solid];
m52_112 -> m52_130  [key=2, style=dotted];
m52_114 -> m52_115  [key=0, style=solid];
m52_114 -> m52_139  [key=2, style=dotted];
m52_115 -> m52_116  [key=0, style=solid];
m52_115 -> m52_130  [key=2, style=dotted];
m52_116 -> m52_117  [key=0, style=solid];
m52_116 -> m52_130  [key=2, style=dotted];
m52_119 -> m52_120  [key=0, style=solid];
m52_119 -> m52_130  [key=2, style=dotted];
m52_120 -> m52_56  [key=0, style=solid];
m52_120 -> m52_130  [key=2, style=dotted];
m52_123 -> m52_124  [key=0, style=solid];
m52_123 -> m52_130  [key=2, style=dotted];
m52_127 -> m52_128  [key=0, style=solid];
m52_127 -> m52_130  [key=2, style=dotted];
m52_124 -> m52_125  [key=0, style=solid];
m52_124 -> m52_130  [key=2, style=dotted];
m52_126 -> m52_127  [key=0, style=solid];
m52_126 -> m52_130  [key=2, style=dotted];
m52_128 -> m52_129  [key=0, style=solid];
m52_128 -> m52_130  [key=2, style=dotted];
m52_129 -> m52_0  [color=blue, key=0, style=bold];
m52_150 -> m52_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_14  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_51  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_79  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_83  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_85  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_86  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_87  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_90  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_91  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_92  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_94  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_95  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_96  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_97  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_98  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_101  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_102  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_103  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_104  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_105  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_106  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_107  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_108  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_109  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_110  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_111  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_112  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_113  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_114  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_115  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_116  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_118  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_119  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_120  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_121  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_123  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_124  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_125  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_126  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_127  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m52_150 -> m52_128  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m53_43 -> m53_44  [key=0, style=solid];
m53_44 -> m53_45  [key=0, style=solid];
m53_44 -> m53_46  [key=2, style=dotted];
m53_45 -> m53_43  [color=blue, key=0, style=bold];
m53_0 -> m53_1  [key=0, style=solid];
m53_0 -> m53_3  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m53_0 -> m53_5  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m53_0 -> m53_6  [color=red, key=1, label="HangFire.Server.ServerContext", style=dashed];
m53_1 -> m53_2  [key=0, style=solid];
m53_1 -> m53_12  [key=2, style=dotted];
m53_3 -> m53_4  [key=0, style=solid];
m53_3 -> m53_14  [key=2, style=dotted];
m53_3 -> m53_15  [key=2, style=dotted];
m53_5 -> m53_6  [color=red, key=0, style=solid];
m53_5 -> m53_10  [key=0, style=solid];
m53_5 -> m53_5  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m53_6 -> m53_7  [color=red, key=0, style=solid];
m53_6 -> m53_16  [color=red, key=2, style=dotted];
m53_6 -> m53_8  [color=red, key=1, label=worker, style=dashed];
m53_2 -> m53_3  [key=0, style=solid];
m53_2 -> m53_13  [key=2, style=dotted];
m53_4 -> m53_5  [key=0, style=solid];
m53_4 -> m53_6  [color=red, key=1, label=i, style=dashed];
m53_4 -> m53_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m53_9 -> m53_5  [key=0, style=solid];
m53_9 -> m53_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m53_10 -> m53_11  [key=0, style=solid];
m53_10 -> m53_15  [key=2, style=dotted];
m53_7 -> m53_8  [key=0, style=solid];
m53_7 -> m53_17  [key=2, style=dotted];
m53_8 -> m53_9  [key=0, style=solid];
m53_8 -> m53_18  [key=2, style=dotted];
m53_11 -> m53_0  [color=blue, key=0, style=bold];
m53_19 -> m53_20  [key=0, style=solid];
m53_19 -> m53_22  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m53_19 -> m53_21  [color=darkorchid, key=3, label="method methodReturn HangFire.Server.Worker TakeFree", style=bold];
m53_20 -> m53_21  [key=0, style=solid];
m53_20 -> m53_26  [key=2, style=dotted];
m53_22 -> m53_23  [key=0, style=solid];
m53_22 -> m53_27  [key=2, style=dotted];
m53_22 -> m53_24  [color=darkseagreen4, key=1, label=worker, style=dashed];
m53_21 -> m53_22  [key=0, style=solid];
m53_23 -> m53_21  [key=0, style=solid];
m53_23 -> m53_24  [key=0, style=solid];
m53_24 -> m53_25  [key=0, style=solid];
m53_25 -> m53_19  [color=blue, key=0, style=bold];
m53_28 -> m53_29  [key=0, style=solid];
m53_29 -> m53_30  [key=0, style=solid];
m53_29 -> m53_31  [key=0, style=solid];
m53_30 -> m53_39  [key=0, style=solid];
m53_31 -> m53_32  [key=0, style=solid];
m53_32 -> m53_33  [key=0, style=solid];
m53_32 -> m53_15  [key=2, style=dotted];
m53_33 -> m53_34  [key=0, style=solid];
m53_33 -> m53_35  [key=0, style=solid];
m53_34 -> m53_33  [key=0, style=solid];
m53_34 -> m53_40  [key=2, style=dotted];
m53_35 -> m53_36  [key=0, style=solid];
m53_35 -> m53_37  [key=0, style=solid];
m53_36 -> m53_35  [key=0, style=solid];
m53_36 -> m53_41  [key=2, style=dotted];
m53_37 -> m53_38  [key=0, style=solid];
m53_37 -> m53_15  [key=2, style=dotted];
m53_38 -> m53_39  [key=0, style=solid];
m53_38 -> m53_42  [key=2, style=dotted];
m53_39 -> m53_28  [color=blue, key=0, style=bold];
m53_47 -> m53_1  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_2  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_6  [color=red, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_8  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_10  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_20  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_22  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_29  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_31  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_32  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_33  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_35  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_37  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_38  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m53_47 -> m53_44  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
}
