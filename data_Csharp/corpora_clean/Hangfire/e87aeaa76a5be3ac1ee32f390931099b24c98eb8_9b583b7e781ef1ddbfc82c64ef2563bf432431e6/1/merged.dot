digraph  {
n199 [label=number, span=""];
n200 [label=number, span=""];
n201 [label=iterations, span=""];
n202 [label=string, span=""];
n203 [label=i, span=""];
n0 [label="Entry ConsoleSample.Program.Main()", span="10-10", cluster="ConsoleSample.Program.Main()"];
n1 [label="GlobalConfiguration.Configuration\r\n                .UseSqlServerStorage(@''Server=.\sqlexpress;Database=Hangfire.Sample;Trusted_Connection=True;'')\r\n                .UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')\r\n                .UseLogProvider(new ColouredConsoleLogProvider())", span="12-15", cluster="ConsoleSample.Program.Main()", color=red, community=0];
n2 [label="RecurringJob.AddOrUpdate(() => Console.WriteLine(''Hello, world!''), Cron.Minutely)", span="17-17", cluster="ConsoleSample.Program.Main()"];
n83 [label="Entry Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)", span="25-25", cluster="Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)"];
n84 [label="Entry Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", span="24-24", cluster="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])"];
n85 [label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", span="1356-1356", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()"];
n86 [label="Entry Hangfire.IGlobalConfiguration.UseLogProvider<TLogProvider>(TLogProvider)", span="52-52", cluster="Hangfire.IGlobalConfiguration.UseLogProvider<TLogProvider>(TLogProvider)"];
n3 [label="RecurringJob.AddOrUpdate(''hourly'', () => Console.WriteLine(''Hello''), ''25 15 * * *'')", span="18-18", cluster="ConsoleSample.Program.Main()"];
n87 [label="Entry Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="52-52", cluster="Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)"];
n106 [label="Entry lambda expression", span="17-17", cluster="lambda expression"];
n4 [label="RecurringJob.AddOrUpdate(''Hawaiian'', () => Console.WriteLine(''Hawaiian''),  ''15 08 * * *'', TimeZoneInfo.FindSystemTimeZoneById(''Hawaiian Standard Time''))", span="20-20", cluster="ConsoleSample.Program.Main()"];
n88 [label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", span="27-27", cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)"];
n109 [label="Entry lambda expression", span="18-18", cluster="lambda expression"];
n5 [label="RecurringJob.AddOrUpdate(''UTC'', () => Console.WriteLine(''UTC''), ''15 18 * * *'')", span="21-21", cluster="ConsoleSample.Program.Main()"];
n89 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)"];
n90 [label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", span="96-96", cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)"];
n112 [label="Entry lambda expression", span="20-20", cluster="lambda expression"];
n6 [label="RecurringJob.AddOrUpdate(''Russian'', () => Console.WriteLine(''Russian''), ''15 21 * * *'', TimeZoneInfo.Local)", span="22-22", cluster="ConsoleSample.Program.Main()"];
n115 [label="Entry lambda expression", span="21-21", cluster="lambda expression"];
n7 [label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = new[] { ''critical'', ''default'' }\r\n            }", span="24-27", cluster="ConsoleSample.Program.Main()"];
n118 [label="Entry lambda expression", span="22-22", cluster="lambda expression"];
n8 [label="new BackgroundJobServer(options)", span="29-29", cluster="ConsoleSample.Program.Main()"];
n91 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()"];
n9 [label="var count = 1", span="31-31", cluster="ConsoleSample.Program.Main()"];
n92 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)"];
n10 [label=true, span="33-33", cluster="ConsoleSample.Program.Main()"];
n58 [label="var number = count++", span="134-134", cluster="ConsoleSample.Program.Main()"];
n11 [label="var command = Console.ReadLine()", span="35-35", cluster="ConsoleSample.Program.Main()"];
n80 [label="Console.WriteLine(''Press Enter to exit...'')", span="190-190", cluster="ConsoleSample.Program.Main()"];
n12 [label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="37-37", cluster="ConsoleSample.Program.Main()"];
n93 [label="Entry System.Console.ReadLine()", span="0-0", cluster="System.Console.ReadLine()"];
n13 [label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="42-42", cluster="ConsoleSample.Program.Main()"];
n14 [label="var workCount = int.Parse(command.Substring(4))", span="46-46", cluster="ConsoleSample.Program.Main()"];
n23 [label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="60-60", cluster="ConsoleSample.Program.Main()"];
n24 [label="var workCount = int.Parse(command.Substring(7))", span="64-64", cluster="ConsoleSample.Program.Main()"];
n32 [label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="77-77", cluster="ConsoleSample.Program.Main()"];
n33 [label="var workCount = int.Parse(command.Substring(6))", span="79-79", cluster="ConsoleSample.Program.Main()"];
n38 [label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="86-86", cluster="ConsoleSample.Program.Main()"];
n39 [label="var workCount = int.Parse(command.Substring(5))", span="88-88", cluster="ConsoleSample.Program.Main()"];
n44 [label="command.StartsWith(''custom'', StringComparison.OrdinalIgnoreCase)", span="95-95", cluster="ConsoleSample.Program.Main()"];
n45 [label="var workCount = int.Parse(command.Substring(7))", span="97-97", cluster="ConsoleSample.Program.Main()"];
n50 [label="command.StartsWith(''fullargs'', StringComparison.OrdinalIgnoreCase)", span="109-109", cluster="ConsoleSample.Program.Main()"];
n51 [label="var workCount = int.Parse(command.Substring(9))", span="111-111", cluster="ConsoleSample.Program.Main()"];
n56 [label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="131-131", cluster="ConsoleSample.Program.Main()"];
n57 [label="var seconds = int.Parse(command.Substring(2))", span="133-133", cluster="ConsoleSample.Program.Main()"];
n60 [label="command.StartsWith(''cancelable'', StringComparison.OrdinalIgnoreCase)", span="138-138", cluster="ConsoleSample.Program.Main()"];
n61 [label="var iterations = int.Parse(command.Substring(11))", span="140-140", cluster="ConsoleSample.Program.Main()"];
n63 [label="command.StartsWith(''delete'', StringComparison.OrdinalIgnoreCase)", span="144-144", cluster="ConsoleSample.Program.Main()"];
n64 [label="var workCount = int.Parse(command.Substring(7))", span="146-146", cluster="ConsoleSample.Program.Main()"];
n70 [label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="154-154", cluster="ConsoleSample.Program.Main()"];
n71 [label="var workCount = int.Parse(command.Substring(5))", span="158-158", cluster="ConsoleSample.Program.Main()"];
n76 [label="command.StartsWith(''generic'', StringComparison.OrdinalIgnoreCase)", span="178-178", cluster="ConsoleSample.Program.Main()"];
n78 [label="command.StartsWith(''continuations'', StringComparison.OrdinalIgnoreCase)", span="183-183", cluster="ConsoleSample.Program.Main()"];
n94 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)"];
n95 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)"];
n15 [label="var i = 0", span="47-47", cluster="ConsoleSample.Program.Main()"];
n96 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n97 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)"];
n16 [label="i < workCount", span="47-47", cluster="ConsoleSample.Program.Main()"];
n17 [label="var number = i", span="49-49", cluster="ConsoleSample.Program.Main()"];
n19 [label="i++", span="47-47", cluster="ConsoleSample.Program.Main()"];
n20 [label="Console.WriteLine(''Jobs enqueued.'')", span="52-52", cluster="ConsoleSample.Program.Main()"];
n18 [label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="50-50", cluster="ConsoleSample.Program.Main()"];
n122 [label="x.Random(number)", span="50-50", cluster="lambda expression"];
n98 [label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)"];
n121 [label="Entry lambda expression", span="50-50", cluster="lambda expression"];
n21 [label=Exception, span="54-54", cluster="ConsoleSample.Program.Main()"];
n99 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
n22 [label="Console.WriteLine(ex.Message)", span="56-56", cluster="ConsoleSample.Program.Main()"];
n25 [label="var i = 0", span="65-65", cluster="ConsoleSample.Program.Main()"];
n26 [label="i < workCount", span="65-65", cluster="ConsoleSample.Program.Main()"];
n28 [label="i++", span="65-65", cluster="ConsoleSample.Program.Main()"];
n27 [label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="67-67", cluster="ConsoleSample.Program.Main()"];
n29 [label="Console.WriteLine(''Jobs enqueued.'')", span="69-69", cluster="ConsoleSample.Program.Main()"];
n100 [label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)"];
n125 [label="Entry lambda expression", span="67-67", cluster="lambda expression"];
n30 [label=Exception, span="71-71", cluster="ConsoleSample.Program.Main()"];
n31 [label="Console.WriteLine(ex.Message)", span="73-73", cluster="ConsoleSample.Program.Main()"];
n34 [label="var i = 0", span="80-80", cluster="ConsoleSample.Program.Main()"];
n35 [label="i < workCount", span="80-80", cluster="ConsoleSample.Program.Main()"];
n37 [label="i++", span="80-80", cluster="ConsoleSample.Program.Main()"];
n36 [label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="82-82", cluster="ConsoleSample.Program.Main()"];
n129 [label="Entry lambda expression", span="82-82", cluster="lambda expression"];
n40 [label="var i = 0", span="89-89", cluster="ConsoleSample.Program.Main()"];
n41 [label="i < workCount", span="89-89", cluster="ConsoleSample.Program.Main()"];
n43 [label="i++", span="89-89", cluster="ConsoleSample.Program.Main()"];
n42 [label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="91-91", cluster="ConsoleSample.Program.Main()"];
n133 [label="Entry lambda expression", span="91-91", cluster="lambda expression"];
n46 [label="var i = 0", span="98-98", cluster="ConsoleSample.Program.Main()"];
n47 [label="i < workCount", span="98-98", cluster="ConsoleSample.Program.Main()"];
n49 [label="i++", span="98-98", cluster="ConsoleSample.Program.Main()"];
n48 [label="BackgroundJob.Enqueue<Services>(x => x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                ))", span="100-105", cluster="ConsoleSample.Program.Main()"];
n139 [label="Entry lambda expression", span="100-105", cluster="lambda expression"];
n52 [label="var i = 0", span="112-112", cluster="ConsoleSample.Program.Main()"];
n53 [label="i < workCount", span="112-112", cluster="ConsoleSample.Program.Main()"];
n55 [label="i++", span="112-112", cluster="ConsoleSample.Program.Main()"];
n54 [label="BackgroundJob.Enqueue<Services>(x => x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' }))", span="114-127", cluster="ConsoleSample.Program.Main()"];
n146 [label="Entry lambda expression", span="114-127", cluster="lambda expression"];
n59 [label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="135-135", cluster="ConsoleSample.Program.Main()"];
n154 [label="x.Random(number)", span="135-135", cluster="lambda expression"];
n101 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n102 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
n153 [label="Entry lambda expression", span="135-135", cluster="lambda expression"];
n62 [label="BackgroundJob.Enqueue<Services>(x => x.Cancelable(iterations, JobCancellationToken.Null))", span="141-141", cluster="ConsoleSample.Program.Main()"];
n157 [label="x.Cancelable(iterations, JobCancellationToken.Null)", span="141-141", cluster="lambda expression"];
n156 [label="Entry lambda expression", span="141-141", cluster="lambda expression"];
n65 [label="var i = 0", span="147-147", cluster="ConsoleSample.Program.Main()"];
n66 [label="i < workCount", span="147-147", cluster="ConsoleSample.Program.Main()"];
n69 [label="i++", span="147-147", cluster="ConsoleSample.Program.Main()"];
n67 [label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="149-149", cluster="ConsoleSample.Program.Main()"];
n68 [label="BackgroundJob.Delete(jobId)", span="150-150", cluster="ConsoleSample.Program.Main()"];
n160 [label="Entry lambda expression", span="149-149", cluster="lambda expression"];
n103 [label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149", cluster="Hangfire.BackgroundJob.Delete(string)"];
n72 [label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="159-169", cluster="ConsoleSample.Program.Main()"];
n73 [label="Console.WriteLine(''Jobs enqueued.'')", span="170-170", cluster="ConsoleSample.Program.Main()"];
n104 [label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0", cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)"];
n164 [label="Entry lambda expression", span="159-169", cluster="lambda expression"];
n74 [label=Exception, span="172-172", cluster="ConsoleSample.Program.Main()"];
n75 [label="Console.WriteLine(ex.Message)", span="174-174", cluster="ConsoleSample.Program.Main()"];
n77 [label="BackgroundJob.Enqueue<GenericServices<string>>(x => x.Method(''hello'', 1))", span="180-180", cluster="ConsoleSample.Program.Main()"];
n176 [label="Entry lambda expression", span="180-180", cluster="lambda expression"];
n79 [label="WriteString(''Hello, Hangfire continuations!'')", span="185-185", cluster="ConsoleSample.Program.Main()"];
n105 [label="Entry ConsoleSample.Program.WriteString(string)", span="194-194", cluster="ConsoleSample.Program.WriteString(string)"];
n81 [label="Console.ReadLine()", span="191-191", cluster="ConsoleSample.Program.Main()"];
n82 [label="Exit ConsoleSample.Program.Main()", span="10-10", cluster="ConsoleSample.Program.Main()"];
n107 [label="Console.WriteLine(''Hello, world!'')", span="17-17", cluster="lambda expression"];
n108 [label="Exit lambda expression", span="17-17", cluster="lambda expression"];
n110 [label="Console.WriteLine(''Hello'')", span="18-18", cluster="lambda expression"];
n111 [label="Exit lambda expression", span="18-18", cluster="lambda expression"];
n113 [label="Console.WriteLine(''Hawaiian'')", span="20-20", cluster="lambda expression"];
n114 [label="Exit lambda expression", span="20-20", cluster="lambda expression"];
n116 [label="Console.WriteLine(''UTC'')", span="21-21", cluster="lambda expression"];
n117 [label="Exit lambda expression", span="21-21", cluster="lambda expression"];
n119 [label="Console.WriteLine(''Russian'')", span="22-22", cluster="lambda expression"];
n120 [label="Exit lambda expression", span="22-22", cluster="lambda expression"];
n123 [label="Exit lambda expression", span="50-50", cluster="lambda expression"];
n124 [label="Entry ConsoleSample.Services.Random(int)", span="30-30", cluster="ConsoleSample.Services.Random(int)"];
n126 [label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="67-67", cluster="lambda expression"];
n127 [label="Exit lambda expression", span="67-67", cluster="lambda expression"];
n128 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)"];
n130 [label="x.Error()", span="82-82", cluster="lambda expression"];
n131 [label="Exit lambda expression", span="82-82", cluster="lambda expression"];
n132 [label="Entry ConsoleSample.Services.Error()", span="23-23", cluster="ConsoleSample.Services.Error()"];
n134 [label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="91-91", cluster="lambda expression"];
n135 [label="Exit lambda expression", span="91-91", cluster="lambda expression"];
n136 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()"];
n137 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()"];
n138 [label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="67-67", cluster="ConsoleSample.Services.Args(string, int, System.DateTime)"];
n140 [label="x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                )", span="100-105", cluster="lambda expression"];
n141 [label="Exit lambda expression", span="100-105", cluster="lambda expression"];
n142 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()"];
n143 [label="Entry System.Random.Next()", span="0-0", cluster="System.Random.Next()"];
n144 [label="Entry ConsoleSample.Services.CustomObject.CustomObject()", span="93-93", cluster="ConsoleSample.Services.CustomObject.CustomObject()"];
n145 [label="Entry ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", span="72-72", cluster="ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)"];
n147 [label="x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' })", span="114-127", cluster="lambda expression"];
n148 [label="Exit lambda expression", span="114-127", cluster="lambda expression"];
n149 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)"];
n150 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)"];
n151 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n152 [label="Entry ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", span="76-76", cluster="ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)"];
n155 [label="Exit lambda expression", span="135-135", cluster="lambda expression"];
n158 [label="Exit lambda expression", span="141-141", cluster="lambda expression"];
n159 [label="Entry ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", span="47-47", cluster="ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)"];
n161 [label="x.EmptyDefault()", span="149-149", cluster="lambda expression"];
n162 [label="Exit lambda expression", span="149-149", cluster="lambda expression"];
n163 [label="Entry ConsoleSample.Services.EmptyDefault()", span="13-13", cluster="ConsoleSample.Services.EmptyDefault()"];
n165 [label="i % 2 == 0", span="161-161", cluster="lambda expression"];
n166 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="163-163", cluster="lambda expression"];
n167 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="167-167", cluster="lambda expression"];
n168 [label="Exit lambda expression", span="159-169", cluster="lambda expression"];
n169 [label="Entry lambda expression", span="163-163", cluster="lambda expression"];
n173 [label="Entry lambda expression", span="167-167", cluster="lambda expression"];
n170 [label="x.EmptyCritical()", span="163-163", cluster="lambda expression"];
n171 [label="Exit lambda expression", span="163-163", cluster="lambda expression"];
n172 [label="Entry ConsoleSample.Services.EmptyCritical()", span="18-18", cluster="ConsoleSample.Services.EmptyCritical()"];
n174 [label="x.EmptyDefault()", span="167-167", cluster="lambda expression"];
n175 [label="Exit lambda expression", span="167-167", cluster="lambda expression"];
n177 [label="x.Method(''hello'', 1)", span="180-180", cluster="lambda expression"];
n178 [label="Exit lambda expression", span="180-180", cluster="lambda expression"];
n179 [label="Entry ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", span="6-6", cluster="ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)"];
n180 [label="var lastId = BackgroundJob.Enqueue(() => Console.Write(value[0]))", span="196-196", cluster="ConsoleSample.Program.WriteString(string)"];
n189 [label="Console.Write(value[0])", span="196-196", cluster="lambda expression"];
n182 [label="i < value.Length", span="198-198", cluster="ConsoleSample.Program.WriteString(string)"];
n183 [label="lastId = BackgroundJob.ContinueWith(lastId, () => Console.Write(value[i]))", span="200-200", cluster="ConsoleSample.Program.WriteString(string)"];
n193 [label="Console.Write(value[i])", span="200-200", cluster="lambda expression"];
n181 [label="var i = 1", span="198-198", cluster="ConsoleSample.Program.WriteString(string)"];
n188 [label="Entry lambda expression", span="196-196", cluster="lambda expression"];
n185 [label="BackgroundJob.ContinueWith(lastId, () => Console.WriteLine())", span="203-203", cluster="ConsoleSample.Program.WriteString(string)"];
n184 [label="i++", span="198-198", cluster="ConsoleSample.Program.WriteString(string)"];
n187 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)"];
n192 [label="Entry lambda expression", span="200-200", cluster="lambda expression"];
n186 [label="Exit ConsoleSample.Program.WriteString(string)", span="194-194", cluster="ConsoleSample.Program.WriteString(string)"];
n195 [label="Entry lambda expression", span="203-203", cluster="lambda expression"];
n190 [label="Exit lambda expression", span="196-196", cluster="lambda expression"];
n191 [label="Entry System.Console.Write(char)", span="0-0", cluster="System.Console.Write(char)"];
n194 [label="Exit lambda expression", span="200-200", cluster="lambda expression"];
n196 [label="Console.WriteLine()", span="203-203", cluster="lambda expression"];
n197 [label="Exit lambda expression", span="203-203", cluster="lambda expression"];
n198 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()"];
n199 -> n122  [key=1, style=dashed, color=darkseagreen4, label=number];
n200 -> n154  [key=1, style=dashed, color=darkseagreen4, label=number];
n201 -> n157  [key=1, style=dashed, color=darkseagreen4, label=iterations];
n202 -> n189  [key=1, style=dashed, color=darkseagreen4, label=string];
n202 -> n193  [key=1, style=dashed, color=darkseagreen4, label=string];
n203 -> n193  [key=1, style=dashed, color=darkseagreen4, label=i];
n0 -> n1  [key=0, style=solid, color=red];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n83  [key=2, style=dotted, color=red];
n1 -> n84  [key=2, style=dotted, color=red];
n1 -> n85  [key=2, style=dotted, color=red];
n1 -> n86  [key=2, style=dotted, color=red];
n2 -> n3  [key=0, style=solid];
n2 -> n87  [key=2, style=dotted];
n2 -> n106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n3 -> n4  [key=0, style=solid];
n3 -> n88  [key=2, style=dotted];
n3 -> n109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n106 -> n107  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n89  [key=2, style=dotted];
n4 -> n90  [key=2, style=dotted];
n4 -> n112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n109 -> n110  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n88  [key=2, style=dotted];
n5 -> n115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n112 -> n113  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n90  [key=2, style=dotted];
n6 -> n118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n115 -> n116  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n91  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n92  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n58  [key=1, style=dashed, color=darkseagreen4, label=count];
n9 -> n9  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
n10 -> n11  [key=0, style=solid];
n10 -> n80  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n58  [key=1, style=dashed, color=darkseagreen4, label=count];
n58 -> n154  [key=1, style=dashed, color=darkseagreen4, label=number];
n11 -> n12  [key=0, style=solid];
n11 -> n93  [key=2, style=dotted];
n11 -> n13  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n14  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n23  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n24  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n32  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n33  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n38  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n39  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n44  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n45  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n50  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n51  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n56  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n57  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n60  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n61  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n63  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n64  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n70  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n71  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n76  [key=1, style=dashed, color=darkseagreen4, label=command];
n11 -> n78  [key=1, style=dashed, color=darkseagreen4, label=command];
n80 -> n81  [key=0, style=solid];
n80 -> n99  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n80  [key=0, style=solid];
n12 -> n94  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n23  [key=0, style=solid];
n13 -> n95  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n96  [key=2, style=dotted];
n14 -> n97  [key=2, style=dotted];
n14 -> n16  [key=1, style=dashed, color=darkseagreen4, label=workCount];
n23 -> n24  [key=0, style=solid];
n23 -> n32  [key=0, style=solid];
n23 -> n95  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n96  [key=2, style=dotted];
n24 -> n97  [key=2, style=dotted];
n24 -> n26  [key=1, style=dashed, color=darkseagreen4, label=workCount];
n32 -> n33  [key=0, style=solid];
n32 -> n38  [key=0, style=solid];
n32 -> n95  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n96  [key=2, style=dotted];
n33 -> n97  [key=2, style=dotted];
n33 -> n35  [key=1, style=dashed, color=darkseagreen4, label=workCount];
n38 -> n39  [key=0, style=solid];
n38 -> n44  [key=0, style=solid];
n38 -> n95  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n96  [key=2, style=dotted];
n39 -> n97  [key=2, style=dotted];
n39 -> n41  [key=1, style=dashed, color=darkseagreen4, label=workCount];
n44 -> n45  [key=0, style=solid];
n44 -> n50  [key=0, style=solid];
n44 -> n95  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n96  [key=2, style=dotted];
n45 -> n97  [key=2, style=dotted];
n45 -> n47  [key=1, style=dashed, color=darkseagreen4, label=workCount];
n50 -> n51  [key=0, style=solid];
n50 -> n56  [key=0, style=solid];
n50 -> n95  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n96  [key=2, style=dotted];
n51 -> n97  [key=2, style=dotted];
n51 -> n53  [key=1, style=dashed, color=darkseagreen4, label=workCount];
n56 -> n57  [key=0, style=solid];
n56 -> n60  [key=0, style=solid];
n56 -> n95  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n96  [key=2, style=dotted];
n57 -> n97  [key=2, style=dotted];
n57 -> n59  [key=1, style=dashed, color=darkseagreen4, label=seconds];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=0, style=solid];
n60 -> n95  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n96  [key=2, style=dotted];
n61 -> n97  [key=2, style=dotted];
n61 -> n157  [key=1, style=dashed, color=darkseagreen4, label=iterations];
n63 -> n64  [key=0, style=solid];
n63 -> n70  [key=0, style=solid];
n63 -> n95  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n96  [key=2, style=dotted];
n64 -> n97  [key=2, style=dotted];
n64 -> n66  [key=1, style=dashed, color=darkseagreen4, label=workCount];
n70 -> n71  [key=0, style=solid];
n70 -> n76  [key=0, style=solid];
n70 -> n95  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n96  [key=2, style=dotted];
n71 -> n97  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=0, style=solid];
n76 -> n95  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n10  [key=0, style=solid];
n78 -> n95  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=1, style=dashed, color=darkseagreen4, label=i];
n15 -> n19  [key=1, style=dashed, color=darkseagreen4, label=i];
n15 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n16 -> n17  [key=0, style=solid];
n16 -> n20  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n122  [key=1, style=dashed, color=darkseagreen4, label=number];
n17 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int number"];
n19 -> n16  [key=0, style=solid];
n19 -> n19  [key=1, style=dashed, color=darkseagreen4, label=i];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=0, style=solid];
n20 -> n99  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n98  [key=2, style=dotted];
n18 -> n121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n99  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [key=1, style=dashed, color=darkseagreen4, label=i];
n25 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n26 -> n27  [key=0, style=solid];
n26 -> n29  [key=0, style=solid];
n28 -> n26  [key=0, style=solid];
n28 -> n28  [key=1, style=dashed, color=darkseagreen4, label=i];
n27 -> n28  [key=0, style=solid];
n27 -> n100  [key=2, style=dotted];
n27 -> n125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n29 -> n30  [key=0, style=solid];
n29 -> n32  [key=0, style=solid];
n29 -> n99  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n99  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [key=1, style=dashed, color=darkseagreen4, label=i];
n34 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n35 -> n36  [key=0, style=solid];
n35 -> n38  [key=0, style=solid];
n37 -> n35  [key=0, style=solid];
n37 -> n37  [key=1, style=dashed, color=darkseagreen4, label=i];
n36 -> n37  [key=0, style=solid];
n36 -> n98  [key=2, style=dotted];
n36 -> n129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n129 -> n130  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label=i];
n40 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n41 -> n42  [key=0, style=solid];
n41 -> n44  [key=0, style=solid];
n43 -> n41  [key=0, style=solid];
n43 -> n43  [key=1, style=dashed, color=darkseagreen4, label=i];
n42 -> n43  [key=0, style=solid];
n42 -> n98  [key=2, style=dotted];
n42 -> n133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n133 -> n134  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n49  [key=1, style=dashed, color=darkseagreen4, label=i];
n46 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n47 -> n48  [key=0, style=solid];
n47 -> n50  [key=0, style=solid];
n49 -> n47  [key=0, style=solid];
n49 -> n49  [key=1, style=dashed, color=darkseagreen4, label=i];
n48 -> n49  [key=0, style=solid];
n48 -> n98  [key=2, style=dotted];
n48 -> n139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n139 -> n140  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n55  [key=1, style=dashed, color=darkseagreen4, label=i];
n52 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n53 -> n54  [key=0, style=solid];
n53 -> n56  [key=0, style=solid];
n55 -> n53  [key=0, style=solid];
n55 -> n55  [key=1, style=dashed, color=darkseagreen4, label=i];
n54 -> n55  [key=0, style=solid];
n54 -> n98  [key=2, style=dotted];
n54 -> n146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n146 -> n147  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n101  [key=2, style=dotted];
n59 -> n102  [key=2, style=dotted];
n59 -> n153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n154 -> n155  [key=0, style=solid];
n154 -> n124  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n98  [key=2, style=dotted];
n62 -> n156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n157 -> n158  [key=0, style=solid];
n157 -> n159  [key=2, style=dotted];
n156 -> n157  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n69  [key=1, style=dashed, color=darkseagreen4, label=i];
n65 -> n15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n66 -> n67  [key=0, style=solid];
n66 -> n70  [key=0, style=solid];
n69 -> n66  [key=0, style=solid];
n69 -> n69  [key=1, style=dashed, color=darkseagreen4, label=i];
n67 -> n68  [key=0, style=solid];
n67 -> n98  [key=2, style=dotted];
n67 -> n160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n68 -> n69  [key=0, style=solid];
n68 -> n103  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n104  [key=2, style=dotted];
n72 -> n164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n73 -> n74  [key=0, style=solid];
n73 -> n76  [key=0, style=solid];
n73 -> n99  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n99  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n98  [key=2, style=dotted];
n77 -> n176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n176 -> n177  [key=0, style=solid];
n79 -> n10  [key=0, style=solid];
n79 -> n105  [key=2, style=dotted];
n105 -> n180  [key=0, style=solid];
n105 -> n189  [key=1, style=dashed, color=darkseagreen4, label=string];
n105 -> n182  [key=1, style=dashed, color=darkseagreen4, label=string];
n105 -> n183  [key=1, style=dashed, color=darkseagreen4, label=string];
n105 -> n193  [key=1, style=dashed, color=darkseagreen4, label=string];
n105 -> n79  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n81 -> n82  [key=0, style=solid];
n81 -> n93  [key=2, style=dotted];
n82 -> n0  [key=0, style=bold, color=blue];
n107 -> n108  [key=0, style=solid];
n107 -> n99  [key=2, style=dotted];
n108 -> n106  [key=0, style=bold, color=blue];
n110 -> n111  [key=0, style=solid];
n110 -> n99  [key=2, style=dotted];
n111 -> n109  [key=0, style=bold, color=blue];
n113 -> n114  [key=0, style=solid];
n113 -> n99  [key=2, style=dotted];
n114 -> n112  [key=0, style=bold, color=blue];
n116 -> n117  [key=0, style=solid];
n116 -> n99  [key=2, style=dotted];
n117 -> n115  [key=0, style=bold, color=blue];
n119 -> n120  [key=0, style=solid];
n119 -> n99  [key=2, style=dotted];
n120 -> n118  [key=0, style=bold, color=blue];
n123 -> n121  [key=0, style=bold, color=blue];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=2, style=dotted];
n127 -> n125  [key=0, style=bold, color=blue];
n130 -> n131  [key=0, style=solid];
n130 -> n132  [key=2, style=dotted];
n131 -> n129  [key=0, style=bold, color=blue];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=2, style=dotted];
n134 -> n137  [key=2, style=dotted];
n134 -> n138  [key=2, style=dotted];
n135 -> n133  [key=0, style=bold, color=blue];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=2, style=dotted];
n140 -> n143  [key=2, style=dotted];
n140 -> n144  [key=2, style=dotted];
n140 -> n145  [key=2, style=dotted];
n141 -> n139  [key=0, style=bold, color=blue];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [key=2, style=dotted];
n147 -> n150  [key=2, style=dotted];
n147 -> n144  [key=2, style=dotted];
n147 -> n151  [key=2, style=dotted];
n147 -> n152  [key=2, style=dotted];
n148 -> n146  [key=0, style=bold, color=blue];
n155 -> n153  [key=0, style=bold, color=blue];
n158 -> n156  [key=0, style=bold, color=blue];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=2, style=dotted];
n162 -> n160  [key=0, style=bold, color=blue];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=0, style=solid];
n166 -> n168  [key=0, style=solid];
n166 -> n98  [key=2, style=dotted];
n166 -> n169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n167 -> n168  [key=0, style=solid];
n167 -> n98  [key=2, style=dotted];
n167 -> n173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n168 -> n164  [key=0, style=bold, color=blue];
n169 -> n170  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n170 -> n172  [key=2, style=dotted];
n171 -> n169  [key=0, style=bold, color=blue];
n174 -> n175  [key=0, style=solid];
n174 -> n163  [key=2, style=dotted];
n175 -> n173  [key=0, style=bold, color=blue];
n177 -> n178  [key=0, style=solid];
n177 -> n179  [key=2, style=dotted];
n178 -> n176  [key=0, style=bold, color=blue];
n180 -> n181  [key=0, style=solid];
n180 -> n100  [key=2, style=dotted];
n180 -> n188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n180 -> n183  [key=1, style=dashed, color=darkseagreen4, label=lastId];
n180 -> n185  [key=1, style=dashed, color=darkseagreen4, label=lastId];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n182 -> n185  [key=0, style=solid];
n182 -> n9  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n183 -> n184  [key=0, style=solid];
n183 -> n187  [key=2, style=dotted];
n183 -> n183  [key=1, style=dashed, color=darkseagreen4, label=lastId];
n183 -> n192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n183 -> n185  [key=1, style=dashed, color=darkseagreen4, label=lastId];
n193 -> n194  [key=0, style=solid];
n193 -> n191  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n183  [key=1, style=dashed, color=darkseagreen4, label=i];
n181 -> n193  [key=1, style=dashed, color=darkseagreen4, label=i];
n181 -> n184  [key=1, style=dashed, color=darkseagreen4, label=i];
n188 -> n189  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=2, style=dotted];
n185 -> n195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n184 -> n182  [key=0, style=solid];
n184 -> n184  [key=1, style=dashed, color=darkseagreen4, label=i];
n192 -> n193  [key=0, style=solid];
n186 -> n105  [key=0, style=bold, color=blue];
n195 -> n196  [key=0, style=solid];
n190 -> n188  [key=0, style=bold, color=blue];
n194 -> n192  [key=0, style=bold, color=blue];
n196 -> n197  [key=0, style=solid];
n196 -> n198  [key=2, style=dotted];
n197 -> n195  [key=0, style=bold, color=blue];
}
