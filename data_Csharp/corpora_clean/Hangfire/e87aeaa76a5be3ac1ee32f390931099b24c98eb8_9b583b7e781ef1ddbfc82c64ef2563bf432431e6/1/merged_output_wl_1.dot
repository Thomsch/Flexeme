digraph  {
n199 [label=number, span=""];
n200 [label=number, span=""];
n201 [label=iterations, span=""];
n202 [label=string, span=""];
n203 [label=i, span=""];
n0 [cluster="ConsoleSample.Program.Main()", label="Entry ConsoleSample.Program.Main()", span="10-10"];
n1 [cluster="ConsoleSample.Program.Main()", color=red, community=0, label="0: GlobalConfiguration.Configuration\r\n                .UseSqlServerStorage(@''Server=.\sqlexpress;Database=Hangfire.Sample;Trusted_Connection=True;'')\r\n                .UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')\r\n                .UseLogProvider(new ColouredConsoleLogProvider())", span="12-15"];
n2 [cluster="ConsoleSample.Program.Main()", label="RecurringJob.AddOrUpdate(() => Console.WriteLine(''Hello, world!''), Cron.Minutely)", span="17-17"];
n83 [cluster="Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)", label="Entry Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)", span="25-25"];
n84 [cluster="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", label="Entry Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", span="24-24"];
n85 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", span="1356-1356"];
n86 [cluster="Hangfire.IGlobalConfiguration.UseLogProvider<TLogProvider>(TLogProvider)", label="Entry Hangfire.IGlobalConfiguration.UseLogProvider<TLogProvider>(TLogProvider)", span="52-52"];
n3 [cluster="ConsoleSample.Program.Main()", label="RecurringJob.AddOrUpdate(''hourly'', () => Console.WriteLine(''Hello''), ''25 15 * * *'')", span="18-18"];
n87 [cluster="Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", label="Entry Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="52-52"];
n106 [cluster="lambda expression", label="Entry lambda expression", span="17-17"];
n4 [cluster="ConsoleSample.Program.Main()", label="RecurringJob.AddOrUpdate(''Hawaiian'', () => Console.WriteLine(''Hawaiian''),  ''15 08 * * *'', TimeZoneInfo.FindSystemTimeZoneById(''Hawaiian Standard Time''))", span="20-20"];
n88 [cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
n109 [cluster="lambda expression", label="Entry lambda expression", span="18-18"];
n5 [cluster="ConsoleSample.Program.Main()", label="RecurringJob.AddOrUpdate(''UTC'', () => Console.WriteLine(''UTC''), ''15 18 * * *'')", span="21-21"];
n89 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
n90 [cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", span="96-96"];
n112 [cluster="lambda expression", label="Entry lambda expression", span="20-20"];
n6 [cluster="ConsoleSample.Program.Main()", label="RecurringJob.AddOrUpdate(''Russian'', () => Console.WriteLine(''Russian''), ''15 21 * * *'', TimeZoneInfo.Local)", span="22-22"];
n115 [cluster="lambda expression", label="Entry lambda expression", span="21-21"];
n7 [cluster="ConsoleSample.Program.Main()", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = new[] { ''critical'', ''default'' }\r\n            }", span="24-27"];
n118 [cluster="lambda expression", label="Entry lambda expression", span="22-22"];
n8 [cluster="ConsoleSample.Program.Main()", label="new BackgroundJobServer(options)", span="29-29"];
n91 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
n9 [cluster="ConsoleSample.Program.Main()", label="var count = 1", span="31-31"];
n92 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60"];
n10 [cluster="ConsoleSample.Program.Main()", label=true, span="33-33"];
n58 [cluster="ConsoleSample.Program.Main()", label="var number = count++", span="134-134"];
n11 [cluster="ConsoleSample.Program.Main()", label="var command = Console.ReadLine()", span="35-35"];
n80 [cluster="ConsoleSample.Program.Main()", label="Console.WriteLine(''Press Enter to exit...'')", span="190-190"];
n12 [cluster="ConsoleSample.Program.Main()", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="37-37"];
n93 [cluster="System.Console.ReadLine()", label="Entry System.Console.ReadLine()", span="0-0"];
n13 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="42-42"];
n14 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(4))", span="46-46"];
n23 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="60-60"];
n24 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(7))", span="64-64"];
n32 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="77-77"];
n33 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(6))", span="79-79"];
n38 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="86-86"];
n39 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(5))", span="88-88"];
n44 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''custom'', StringComparison.OrdinalIgnoreCase)", span="95-95"];
n45 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(7))", span="97-97"];
n50 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''fullargs'', StringComparison.OrdinalIgnoreCase)", span="109-109"];
n51 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(9))", span="111-111"];
n56 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="131-131"];
n57 [cluster="ConsoleSample.Program.Main()", label="var seconds = int.Parse(command.Substring(2))", span="133-133"];
n60 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''cancelable'', StringComparison.OrdinalIgnoreCase)", span="138-138"];
n61 [cluster="ConsoleSample.Program.Main()", label="var iterations = int.Parse(command.Substring(11))", span="140-140"];
n63 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''delete'', StringComparison.OrdinalIgnoreCase)", span="144-144"];
n64 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(7))", span="146-146"];
n70 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="154-154"];
n71 [cluster="ConsoleSample.Program.Main()", label="var workCount = int.Parse(command.Substring(5))", span="158-158"];
n76 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''generic'', StringComparison.OrdinalIgnoreCase)", span="178-178"];
n78 [cluster="ConsoleSample.Program.Main()", label="command.StartsWith(''continuations'', StringComparison.OrdinalIgnoreCase)", span="183-183"];
n94 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n95 [cluster="string.StartsWith(string, System.StringComparison)", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
n15 [cluster="ConsoleSample.Program.Main()", label="var i = 0", span="47-47"];
n96 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n97 [cluster="int.Parse(string)", label="Entry int.Parse(string)", span="0-0"];
n16 [cluster="ConsoleSample.Program.Main()", label="i < workCount", span="47-47"];
n17 [cluster="ConsoleSample.Program.Main()", label="var number = i", span="49-49"];
n19 [cluster="ConsoleSample.Program.Main()", label="i++", span="47-47"];
n20 [cluster="ConsoleSample.Program.Main()", label="Console.WriteLine(''Jobs enqueued.'')", span="52-52"];
n18 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="50-50"];
n122 [cluster="lambda expression", label="x.Random(number)", span="50-50"];
n98 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
n121 [cluster="lambda expression", label="Entry lambda expression", span="50-50"];
n21 [cluster="ConsoleSample.Program.Main()", label=Exception, span="54-54"];
n99 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n22 [cluster="ConsoleSample.Program.Main()", label="Console.WriteLine(ex.Message)", span="56-56"];
n25 [cluster="ConsoleSample.Program.Main()", label="var i = 0", span="65-65"];
n26 [cluster="ConsoleSample.Program.Main()", label="i < workCount", span="65-65"];
n28 [cluster="ConsoleSample.Program.Main()", label="i++", span="65-65"];
n27 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="67-67"];
n29 [cluster="ConsoleSample.Program.Main()", label="Console.WriteLine(''Jobs enqueued.'')", span="69-69"];
n100 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
n125 [cluster="lambda expression", label="Entry lambda expression", span="67-67"];
n30 [cluster="ConsoleSample.Program.Main()", label=Exception, span="71-71"];
n31 [cluster="ConsoleSample.Program.Main()", label="Console.WriteLine(ex.Message)", span="73-73"];
n34 [cluster="ConsoleSample.Program.Main()", label="var i = 0", span="80-80"];
n35 [cluster="ConsoleSample.Program.Main()", label="i < workCount", span="80-80"];
n37 [cluster="ConsoleSample.Program.Main()", label="i++", span="80-80"];
n36 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="82-82"];
n129 [cluster="lambda expression", label="Entry lambda expression", span="82-82"];
n40 [cluster="ConsoleSample.Program.Main()", label="var i = 0", span="89-89"];
n41 [cluster="ConsoleSample.Program.Main()", label="i < workCount", span="89-89"];
n43 [cluster="ConsoleSample.Program.Main()", label="i++", span="89-89"];
n42 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="91-91"];
n133 [cluster="lambda expression", label="Entry lambda expression", span="91-91"];
n46 [cluster="ConsoleSample.Program.Main()", label="var i = 0", span="98-98"];
n47 [cluster="ConsoleSample.Program.Main()", label="i < workCount", span="98-98"];
n49 [cluster="ConsoleSample.Program.Main()", label="i++", span="98-98"];
n48 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue<Services>(x => x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                ))", span="100-105"];
n139 [cluster="lambda expression", label="Entry lambda expression", span="100-105"];
n52 [cluster="ConsoleSample.Program.Main()", label="var i = 0", span="112-112"];
n53 [cluster="ConsoleSample.Program.Main()", label="i < workCount", span="112-112"];
n55 [cluster="ConsoleSample.Program.Main()", label="i++", span="112-112"];
n54 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue<Services>(x => x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' }))", span="114-127"];
n146 [cluster="lambda expression", label="Entry lambda expression", span="114-127"];
n59 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="135-135"];
n154 [cluster="lambda expression", label="x.Random(number)", span="135-135"];
n101 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n102 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
n153 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
n62 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue<Services>(x => x.Cancelable(iterations, JobCancellationToken.Null))", span="141-141"];
n157 [cluster="lambda expression", label="x.Cancelable(iterations, JobCancellationToken.Null)", span="141-141"];
n156 [cluster="lambda expression", label="Entry lambda expression", span="141-141"];
n65 [cluster="ConsoleSample.Program.Main()", label="var i = 0", span="147-147"];
n66 [cluster="ConsoleSample.Program.Main()", label="i < workCount", span="147-147"];
n69 [cluster="ConsoleSample.Program.Main()", label="i++", span="147-147"];
n67 [cluster="ConsoleSample.Program.Main()", label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="149-149"];
n68 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Delete(jobId)", span="150-150"];
n160 [cluster="lambda expression", label="Entry lambda expression", span="149-149"];
n103 [cluster="Hangfire.BackgroundJob.Delete(string)", label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149"];
n72 [cluster="ConsoleSample.Program.Main()", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="159-169"];
n73 [cluster="ConsoleSample.Program.Main()", label="Console.WriteLine(''Jobs enqueued.'')", span="170-170"];
n104 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
n164 [cluster="lambda expression", label="Entry lambda expression", span="159-169"];
n74 [cluster="ConsoleSample.Program.Main()", label=Exception, span="172-172"];
n75 [cluster="ConsoleSample.Program.Main()", label="Console.WriteLine(ex.Message)", span="174-174"];
n77 [cluster="ConsoleSample.Program.Main()", label="BackgroundJob.Enqueue<GenericServices<string>>(x => x.Method(''hello'', 1))", span="180-180"];
n176 [cluster="lambda expression", label="Entry lambda expression", span="180-180"];
n79 [cluster="ConsoleSample.Program.Main()", label="WriteString(''Hello, Hangfire continuations!'')", span="185-185"];
n105 [cluster="ConsoleSample.Program.WriteString(string)", label="Entry ConsoleSample.Program.WriteString(string)", span="194-194"];
n81 [cluster="ConsoleSample.Program.Main()", label="Console.ReadLine()", span="191-191"];
n82 [cluster="ConsoleSample.Program.Main()", label="Exit ConsoleSample.Program.Main()", span="10-10"];
n107 [cluster="lambda expression", label="Console.WriteLine(''Hello, world!'')", span="17-17"];
n108 [cluster="lambda expression", label="Exit lambda expression", span="17-17"];
n110 [cluster="lambda expression", label="Console.WriteLine(''Hello'')", span="18-18"];
n111 [cluster="lambda expression", label="Exit lambda expression", span="18-18"];
n113 [cluster="lambda expression", label="Console.WriteLine(''Hawaiian'')", span="20-20"];
n114 [cluster="lambda expression", label="Exit lambda expression", span="20-20"];
n116 [cluster="lambda expression", label="Console.WriteLine(''UTC'')", span="21-21"];
n117 [cluster="lambda expression", label="Exit lambda expression", span="21-21"];
n119 [cluster="lambda expression", label="Console.WriteLine(''Russian'')", span="22-22"];
n120 [cluster="lambda expression", label="Exit lambda expression", span="22-22"];
n123 [cluster="lambda expression", label="Exit lambda expression", span="50-50"];
n124 [cluster="ConsoleSample.Services.Random(int)", label="Entry ConsoleSample.Services.Random(int)", span="30-30"];
n126 [cluster="lambda expression", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="67-67"];
n127 [cluster="lambda expression", label="Exit lambda expression", span="67-67"];
n128 [cluster="System.Console.WriteLine(string, object)", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
n130 [cluster="lambda expression", label="x.Error()", span="82-82"];
n131 [cluster="lambda expression", label="Exit lambda expression", span="82-82"];
n132 [cluster="ConsoleSample.Services.Error()", label="Entry ConsoleSample.Services.Error()", span="23-23"];
n134 [cluster="lambda expression", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="91-91"];
n135 [cluster="lambda expression", label="Exit lambda expression", span="91-91"];
n136 [cluster="System.Guid.NewGuid()", label="Entry System.Guid.NewGuid()", span="0-0"];
n137 [cluster="System.Guid.ToString()", label="Entry System.Guid.ToString()", span="0-0"];
n138 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="67-67"];
n140 [cluster="lambda expression", label="x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                )", span="100-105"];
n141 [cluster="lambda expression", label="Exit lambda expression", span="100-105"];
n142 [cluster="System.Random.Random()", label="Entry System.Random.Random()", span="0-0"];
n143 [cluster="System.Random.Next()", label="Entry System.Random.Next()", span="0-0"];
n144 [cluster="ConsoleSample.Services.CustomObject.CustomObject()", label="Entry ConsoleSample.Services.CustomObject.CustomObject()", span="93-93"];
n145 [cluster="ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", label="Entry ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", span="72-72"];
n147 [cluster="lambda expression", label="x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' })", span="114-127"];
n148 [cluster="lambda expression", label="Exit lambda expression", span="114-127"];
n149 [cluster="System.TimeSpan.TimeSpan(int, int, int)", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
n150 [cluster="System.DateTime.DateTime(int, int, int)", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
n151 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n152 [cluster="ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", label="Entry ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", span="76-76"];
n155 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
n158 [cluster="lambda expression", label="Exit lambda expression", span="141-141"];
n159 [cluster="ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", label="Entry ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", span="47-47"];
n161 [cluster="lambda expression", label="x.EmptyDefault()", span="149-149"];
n162 [cluster="lambda expression", label="Exit lambda expression", span="149-149"];
n163 [cluster="ConsoleSample.Services.EmptyDefault()", label="Entry ConsoleSample.Services.EmptyDefault()", span="13-13"];
n165 [cluster="lambda expression", label="i % 2 == 0", span="161-161"];
n166 [cluster="lambda expression", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="163-163"];
n167 [cluster="lambda expression", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="167-167"];
n168 [cluster="lambda expression", label="Exit lambda expression", span="159-169"];
n169 [cluster="lambda expression", label="Entry lambda expression", span="163-163"];
n173 [cluster="lambda expression", label="Entry lambda expression", span="167-167"];
n170 [cluster="lambda expression", label="x.EmptyCritical()", span="163-163"];
n171 [cluster="lambda expression", label="Exit lambda expression", span="163-163"];
n172 [cluster="ConsoleSample.Services.EmptyCritical()", label="Entry ConsoleSample.Services.EmptyCritical()", span="18-18"];
n174 [cluster="lambda expression", label="x.EmptyDefault()", span="167-167"];
n175 [cluster="lambda expression", label="Exit lambda expression", span="167-167"];
n177 [cluster="lambda expression", label="x.Method(''hello'', 1)", span="180-180"];
n178 [cluster="lambda expression", label="Exit lambda expression", span="180-180"];
n179 [cluster="ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", label="Entry ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", span="6-6"];
n180 [cluster="ConsoleSample.Program.WriteString(string)", label="var lastId = BackgroundJob.Enqueue(() => Console.Write(value[0]))", span="196-196"];
n189 [cluster="lambda expression", label="Console.Write(value[0])", span="196-196"];
n182 [cluster="ConsoleSample.Program.WriteString(string)", label="i < value.Length", span="198-198"];
n183 [cluster="ConsoleSample.Program.WriteString(string)", label="lastId = BackgroundJob.ContinueWith(lastId, () => Console.Write(value[i]))", span="200-200"];
n193 [cluster="lambda expression", label="Console.Write(value[i])", span="200-200"];
n181 [cluster="ConsoleSample.Program.WriteString(string)", label="var i = 1", span="198-198"];
n188 [cluster="lambda expression", label="Entry lambda expression", span="196-196"];
n185 [cluster="ConsoleSample.Program.WriteString(string)", label="BackgroundJob.ContinueWith(lastId, () => Console.WriteLine())", span="203-203"];
n184 [cluster="ConsoleSample.Program.WriteString(string)", label="i++", span="198-198"];
n187 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
n192 [cluster="lambda expression", label="Entry lambda expression", span="200-200"];
n186 [cluster="ConsoleSample.Program.WriteString(string)", label="Exit ConsoleSample.Program.WriteString(string)", span="194-194"];
n195 [cluster="lambda expression", label="Entry lambda expression", span="203-203"];
n190 [cluster="lambda expression", label="Exit lambda expression", span="196-196"];
n191 [cluster="System.Console.Write(char)", label="Entry System.Console.Write(char)", span="0-0"];
n194 [cluster="lambda expression", label="Exit lambda expression", span="200-200"];
n196 [cluster="lambda expression", label="Console.WriteLine()", span="203-203"];
n197 [cluster="lambda expression", label="Exit lambda expression", span="203-203"];
n198 [cluster="System.Console.WriteLine()", label="Entry System.Console.WriteLine()", span="0-0"];
n199 -> n122  [color=darkseagreen4, key=1, label=number, style=dashed];
n200 -> n154  [color=darkseagreen4, key=1, label=number, style=dashed];
n201 -> n157  [color=darkseagreen4, key=1, label=iterations, style=dashed];
n202 -> n189  [color=darkseagreen4, key=1, label=string, style=dashed];
n202 -> n193  [color=darkseagreen4, key=1, label=string, style=dashed];
n203 -> n193  [color=darkseagreen4, key=1, label=i, style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n83  [color=red, key=2, style=dotted];
n1 -> n84  [color=red, key=2, style=dotted];
n1 -> n85  [color=red, key=2, style=dotted];
n1 -> n86  [color=red, key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n87  [key=2, style=dotted];
n2 -> n106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n88  [key=2, style=dotted];
n3 -> n109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n106 -> n107  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n89  [key=2, style=dotted];
n4 -> n90  [key=2, style=dotted];
n4 -> n112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n109 -> n110  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n88  [key=2, style=dotted];
n5 -> n115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n112 -> n113  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n90  [key=2, style=dotted];
n6 -> n118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n115 -> n116  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n91  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n92  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n58  [color=darkseagreen4, key=1, label=count, style=dashed];
n9 -> n9  [color=darkorchid, key=3, label="Local variable int count", style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n80  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n58  [color=darkseagreen4, key=1, label=count, style=dashed];
n58 -> n154  [color=darkseagreen4, key=1, label=number, style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n93  [key=2, style=dotted];
n11 -> n13  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n14  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n23  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n24  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n32  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n33  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n38  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n39  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n44  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n45  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n50  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n51  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n56  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n57  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n60  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n61  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n63  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n64  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n70  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n71  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n76  [color=darkseagreen4, key=1, label=command, style=dashed];
n11 -> n78  [color=darkseagreen4, key=1, label=command, style=dashed];
n80 -> n81  [key=0, style=solid];
n80 -> n99  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n80  [key=0, style=solid];
n12 -> n94  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n23  [key=0, style=solid];
n13 -> n95  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n96  [key=2, style=dotted];
n14 -> n97  [key=2, style=dotted];
n14 -> n16  [color=darkseagreen4, key=1, label=workCount, style=dashed];
n23 -> n24  [key=0, style=solid];
n23 -> n32  [key=0, style=solid];
n23 -> n95  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n96  [key=2, style=dotted];
n24 -> n97  [key=2, style=dotted];
n24 -> n26  [color=darkseagreen4, key=1, label=workCount, style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n38  [key=0, style=solid];
n32 -> n95  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n96  [key=2, style=dotted];
n33 -> n97  [key=2, style=dotted];
n33 -> n35  [color=darkseagreen4, key=1, label=workCount, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n44  [key=0, style=solid];
n38 -> n95  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n96  [key=2, style=dotted];
n39 -> n97  [key=2, style=dotted];
n39 -> n41  [color=darkseagreen4, key=1, label=workCount, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n50  [key=0, style=solid];
n44 -> n95  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n96  [key=2, style=dotted];
n45 -> n97  [key=2, style=dotted];
n45 -> n47  [color=darkseagreen4, key=1, label=workCount, style=dashed];
n50 -> n51  [key=0, style=solid];
n50 -> n56  [key=0, style=solid];
n50 -> n95  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n96  [key=2, style=dotted];
n51 -> n97  [key=2, style=dotted];
n51 -> n53  [color=darkseagreen4, key=1, label=workCount, style=dashed];
n56 -> n57  [key=0, style=solid];
n56 -> n60  [key=0, style=solid];
n56 -> n95  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n96  [key=2, style=dotted];
n57 -> n97  [key=2, style=dotted];
n57 -> n59  [color=darkseagreen4, key=1, label=seconds, style=dashed];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=0, style=solid];
n60 -> n95  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n96  [key=2, style=dotted];
n61 -> n97  [key=2, style=dotted];
n61 -> n157  [color=darkseagreen4, key=1, label=iterations, style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n70  [key=0, style=solid];
n63 -> n95  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n96  [key=2, style=dotted];
n64 -> n97  [key=2, style=dotted];
n64 -> n66  [color=darkseagreen4, key=1, label=workCount, style=dashed];
n70 -> n71  [key=0, style=solid];
n70 -> n76  [key=0, style=solid];
n70 -> n95  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n96  [key=2, style=dotted];
n71 -> n97  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=0, style=solid];
n76 -> n95  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n10  [key=0, style=solid];
n78 -> n95  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [color=darkseagreen4, key=1, label=i, style=dashed];
n15 -> n19  [color=darkseagreen4, key=1, label=i, style=dashed];
n15 -> n15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n16 -> n17  [key=0, style=solid];
n16 -> n20  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n122  [color=darkseagreen4, key=1, label=number, style=dashed];
n17 -> n15  [color=darkorchid, key=3, label="Local variable int number", style=bold];
n19 -> n16  [key=0, style=solid];
n19 -> n19  [color=darkseagreen4, key=1, label=i, style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=0, style=solid];
n20 -> n99  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n98  [key=2, style=dotted];
n18 -> n121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n99  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [color=darkseagreen4, key=1, label=i, style=dashed];
n25 -> n15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n26 -> n27  [key=0, style=solid];
n26 -> n29  [key=0, style=solid];
n28 -> n26  [key=0, style=solid];
n28 -> n28  [color=darkseagreen4, key=1, label=i, style=dashed];
n27 -> n28  [key=0, style=solid];
n27 -> n100  [key=2, style=dotted];
n27 -> n125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n29 -> n30  [key=0, style=solid];
n29 -> n32  [key=0, style=solid];
n29 -> n99  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n99  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [color=darkseagreen4, key=1, label=i, style=dashed];
n34 -> n15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n35 -> n36  [key=0, style=solid];
n35 -> n38  [key=0, style=solid];
n37 -> n35  [key=0, style=solid];
n37 -> n37  [color=darkseagreen4, key=1, label=i, style=dashed];
n36 -> n37  [key=0, style=solid];
n36 -> n98  [key=2, style=dotted];
n36 -> n129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n129 -> n130  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n43  [color=darkseagreen4, key=1, label=i, style=dashed];
n40 -> n15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n41 -> n42  [key=0, style=solid];
n41 -> n44  [key=0, style=solid];
n43 -> n41  [key=0, style=solid];
n43 -> n43  [color=darkseagreen4, key=1, label=i, style=dashed];
n42 -> n43  [key=0, style=solid];
n42 -> n98  [key=2, style=dotted];
n42 -> n133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n133 -> n134  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n49  [color=darkseagreen4, key=1, label=i, style=dashed];
n46 -> n15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n47 -> n48  [key=0, style=solid];
n47 -> n50  [key=0, style=solid];
n49 -> n47  [key=0, style=solid];
n49 -> n49  [color=darkseagreen4, key=1, label=i, style=dashed];
n48 -> n49  [key=0, style=solid];
n48 -> n98  [key=2, style=dotted];
n48 -> n139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n139 -> n140  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n55  [color=darkseagreen4, key=1, label=i, style=dashed];
n52 -> n15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n53 -> n54  [key=0, style=solid];
n53 -> n56  [key=0, style=solid];
n55 -> n53  [key=0, style=solid];
n55 -> n55  [color=darkseagreen4, key=1, label=i, style=dashed];
n54 -> n55  [key=0, style=solid];
n54 -> n98  [key=2, style=dotted];
n54 -> n146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n146 -> n147  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n101  [key=2, style=dotted];
n59 -> n102  [key=2, style=dotted];
n59 -> n153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n154 -> n155  [key=0, style=solid];
n154 -> n124  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n98  [key=2, style=dotted];
n62 -> n156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n157 -> n158  [key=0, style=solid];
n157 -> n159  [key=2, style=dotted];
n156 -> n157  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n69  [color=darkseagreen4, key=1, label=i, style=dashed];
n65 -> n15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n66 -> n67  [key=0, style=solid];
n66 -> n70  [key=0, style=solid];
n69 -> n66  [key=0, style=solid];
n69 -> n69  [color=darkseagreen4, key=1, label=i, style=dashed];
n67 -> n68  [key=0, style=solid];
n67 -> n98  [key=2, style=dotted];
n67 -> n160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n68 -> n69  [key=0, style=solid];
n68 -> n103  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n72 -> n104  [key=2, style=dotted];
n72 -> n164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n73 -> n74  [key=0, style=solid];
n73 -> n76  [key=0, style=solid];
n73 -> n99  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n99  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n98  [key=2, style=dotted];
n77 -> n176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n176 -> n177  [key=0, style=solid];
n79 -> n10  [key=0, style=solid];
n79 -> n105  [key=2, style=dotted];
n105 -> n180  [key=0, style=solid];
n105 -> n189  [color=darkseagreen4, key=1, label=string, style=dashed];
n105 -> n182  [color=darkseagreen4, key=1, label=string, style=dashed];
n105 -> n183  [color=darkseagreen4, key=1, label=string, style=dashed];
n105 -> n193  [color=darkseagreen4, key=1, label=string, style=dashed];
n105 -> n79  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n81 -> n82  [key=0, style=solid];
n81 -> n93  [key=2, style=dotted];
n82 -> n0  [color=blue, key=0, style=bold];
n107 -> n108  [key=0, style=solid];
n107 -> n99  [key=2, style=dotted];
n108 -> n106  [color=blue, key=0, style=bold];
n110 -> n111  [key=0, style=solid];
n110 -> n99  [key=2, style=dotted];
n111 -> n109  [color=blue, key=0, style=bold];
n113 -> n114  [key=0, style=solid];
n113 -> n99  [key=2, style=dotted];
n114 -> n112  [color=blue, key=0, style=bold];
n116 -> n117  [key=0, style=solid];
n116 -> n99  [key=2, style=dotted];
n117 -> n115  [color=blue, key=0, style=bold];
n119 -> n120  [key=0, style=solid];
n119 -> n99  [key=2, style=dotted];
n120 -> n118  [color=blue, key=0, style=bold];
n123 -> n121  [color=blue, key=0, style=bold];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=2, style=dotted];
n127 -> n125  [color=blue, key=0, style=bold];
n130 -> n131  [key=0, style=solid];
n130 -> n132  [key=2, style=dotted];
n131 -> n129  [color=blue, key=0, style=bold];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=2, style=dotted];
n134 -> n137  [key=2, style=dotted];
n134 -> n138  [key=2, style=dotted];
n135 -> n133  [color=blue, key=0, style=bold];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=2, style=dotted];
n140 -> n143  [key=2, style=dotted];
n140 -> n144  [key=2, style=dotted];
n140 -> n145  [key=2, style=dotted];
n141 -> n139  [color=blue, key=0, style=bold];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [key=2, style=dotted];
n147 -> n150  [key=2, style=dotted];
n147 -> n144  [key=2, style=dotted];
n147 -> n151  [key=2, style=dotted];
n147 -> n152  [key=2, style=dotted];
n148 -> n146  [color=blue, key=0, style=bold];
n155 -> n153  [color=blue, key=0, style=bold];
n158 -> n156  [color=blue, key=0, style=bold];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=2, style=dotted];
n162 -> n160  [color=blue, key=0, style=bold];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=0, style=solid];
n166 -> n168  [key=0, style=solid];
n166 -> n98  [key=2, style=dotted];
n166 -> n169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n167 -> n168  [key=0, style=solid];
n167 -> n98  [key=2, style=dotted];
n167 -> n173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n168 -> n164  [color=blue, key=0, style=bold];
n169 -> n170  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n170 -> n172  [key=2, style=dotted];
n171 -> n169  [color=blue, key=0, style=bold];
n174 -> n175  [key=0, style=solid];
n174 -> n163  [key=2, style=dotted];
n175 -> n173  [color=blue, key=0, style=bold];
n177 -> n178  [key=0, style=solid];
n177 -> n179  [key=2, style=dotted];
n178 -> n176  [color=blue, key=0, style=bold];
n180 -> n181  [key=0, style=solid];
n180 -> n100  [key=2, style=dotted];
n180 -> n188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n180 -> n183  [color=darkseagreen4, key=1, label=lastId, style=dashed];
n180 -> n185  [color=darkseagreen4, key=1, label=lastId, style=dashed];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n182 -> n185  [key=0, style=solid];
n182 -> n9  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n183 -> n184  [key=0, style=solid];
n183 -> n187  [key=2, style=dotted];
n183 -> n183  [color=darkseagreen4, key=1, label=lastId, style=dashed];
n183 -> n192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n183 -> n185  [color=darkseagreen4, key=1, label=lastId, style=dashed];
n193 -> n194  [key=0, style=solid];
n193 -> n191  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n183  [color=darkseagreen4, key=1, label=i, style=dashed];
n181 -> n193  [color=darkseagreen4, key=1, label=i, style=dashed];
n181 -> n184  [color=darkseagreen4, key=1, label=i, style=dashed];
n188 -> n189  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=2, style=dotted];
n185 -> n195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n184 -> n182  [key=0, style=solid];
n184 -> n184  [color=darkseagreen4, key=1, label=i, style=dashed];
n192 -> n193  [key=0, style=solid];
n186 -> n105  [color=blue, key=0, style=bold];
n195 -> n196  [key=0, style=solid];
n190 -> n188  [color=blue, key=0, style=bold];
n194 -> n192  [color=blue, key=0, style=bold];
n196 -> n197  [key=0, style=solid];
n196 -> n198  [key=2, style=dotted];
n197 -> n195  [color=blue, key=0, style=bold];
}
