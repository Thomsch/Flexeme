digraph  {
n0 [label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)"];
n1 [label="connection == null", span="36-36", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0];
n4 [label="!IsSqlEditionSupported(connection)", span="40-40", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)"];
n8 [label="connection.Execute(script)", span="51-51", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)"];
n2 [label="throw new ArgumentNullException(''connection'');", span="36-36", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0];
n3 [label="Log.Debug(''Start installing HangFire SQL objects...'')", span="38-38", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0];
n12 [label="Entry Unk.Debug", span="", cluster="Unk.Debug"];
n5 [label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="42-42", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)"];
n6 [label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="45-47", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0];
n13 [label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)"];
n7 [label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="49-49", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)"];
n15 [label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)"];
n16 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)"];
n9 [label="Log.Debug(''HangFire SQL objects installed.'')", span="53-53", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)"];
n17 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
n10 [label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)"];
n14 [label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0", cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)"];
n11 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n18 [label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="58-58", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", color=red, community=0];
n19 [label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="59-59", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)"];
n21 [label="Entry Unk.>", span="", cluster="Unk.>"];
n22 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n20 [label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)"];
n23 [label="var stream = assembly.GetManifestResourceStream(resourceName)", span="64-64", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)"];
n25 [label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="68-71", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", color=red, community=0];
n24 [label="stream == null", span="66-66", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)"];
n29 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)"];
n26 [label="var reader = new StreamReader(stream)", span="74-74", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)"];
n27 [label="return reader.ReadToEnd();", span="76-76", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)"];
n32 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)"];
n28 [label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)"];
n30 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
n31 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n33 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()"];
m0_0 [label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="23-23", cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs"];
m0_1 [label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="23-23", cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs"];
m3_12 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="86-86", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_14 [label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="89-89", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_15 [label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="90-90", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_16 [label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="91-91", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_17 [label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="92-92", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_13 [label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", span="88-88", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_18 [label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="86-86", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_0 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_1 [label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="36-36", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_11 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="BackgroundJobServerOptions.cs"];
m3_19 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServerOptions.cs"];
m3_2 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="37-37", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_3 [label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", span="38-38", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_21 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="BackgroundJobServerOptions.cs"];
m3_4 [label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingInterval", span="39-39", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m3_5 [label="HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", span="40-40", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_6 [label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="41-41", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_7 [label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", span="42-42", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_8 [label="FilterProvider = JobFilterProviders.Providers", span="44-44", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_9 [label="Activator = JobActivator.Current", span="45-45", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_10 [label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m3_22 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m3_23 [label="''''' + x + '''''", span="90-90", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m3_24 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m3_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServerOptions.cs"];
m3_25 [label="Hangfire.BackgroundJobServerOptions", span="", file="BackgroundJobServerOptions.cs"];
m4_2 [label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="63-63", cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="IBackgroundJobClient.cs"];
m4_3 [label="Exit Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="63-63", cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="IBackgroundJobClient.cs"];
m4_0 [label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="50-50", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="IBackgroundJobClient.cs"];
m4_1 [label="Exit Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="50-50", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="IBackgroundJobClient.cs"];
m5_52 [label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="82-83", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="Job.cs"];
m5_84 [label="return expressions.Select(GetExpressionValue).ToArray();", span="364-364", cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="Job.cs"];
m5_85 [label="Exit Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="362-362", cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="Job.cs"];
m5_40 [label="callExpression.Object != null", span="239-239", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_82 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Job.cs"];
m5_41 [label="var objectValue = GetExpressionValue(callExpression.Object)", span="241-241", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_6 [label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="15-15", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_14 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="Job.cs"];
m5_15 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="Job.cs"];
m5_16 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="24-24", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="Job.cs"];
m5_13 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Job.cs"];
m5_7 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", span="17-20", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_9 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="Job.cs"];
m5_11 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="Job.cs"];
m5_8 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="10-10", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_10 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)", file="Job.cs"];
m5_12 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Job.cs"];
m5_17 [label="DateTime time", span="26-26", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="Job.cs"];
m5_39 [label="Type type", span="237-237", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_91 [label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25", cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Job.cs"];
m5_32 [label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="49-51", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="Job.cs"];
m5_81 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="Job.cs"];
m5_51 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="Job.cs"];
m5_23 [label="Entry Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33", cluster="Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="Job.cs"];
m5_18 [label="timeAgo.Equals(''millisecond'')", span="27-27", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="Job.cs"];
m5_20 [label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="178-178", cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Job.cs"];
m5_22 [label="Exit Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="178-178", cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Job.cs"];
m5_19 [label="Entry Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="297-297", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_21 [label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="180-182", cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Job.cs", color=green, community=0];
m5_24 [label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="192-192", cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Job.cs"];
m5_53 [label="Assert.IsNotNull(fetchedTimestamp)", span="85-85", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="Job.cs"];
m5_59 [label="return new Job(\r\n                typeof(TType),\r\n                callExpression.Method,\r\n                GetExpressionValues(callExpression.Arguments));", span="291-294", cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="Job.cs"];
m5_56 [label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="91-92", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="Job.cs"];
m5_57 [label="Assert.IsNull(fetchedTimestamp)", span="94-94", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="Job.cs"];
m5_54 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="Job.cs"];
m5_58 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="Job.cs"];
m5_55 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="Job.cs"];
m5_60 [label="Exit Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281", cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="Job.cs"];
m5_31 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="47-47", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="Job.cs"];
m5_30 [label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="192-192", cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Job.cs"];
m5_0 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="10-10", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_1 [label="DateTime time", span="12-12", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_2 [label="timeAgo.Equals(''millisecond'')", span="13-13", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_4 [label="timeAgo.Equals(''day'')", span="14-14", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_3 [label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="13-13", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_5 [label="time = DateTime.UtcNow.AddDays(-1)", span="14-14", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="Job.cs"];
m5_49 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="70-70", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="Job.cs"];
m5_88 [label="var constantExpression = expression as ConstantExpression", span="369-369", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs"];
m5_89 [label="return constantExpression != null\r\n                ? constantExpression.Value\r\n                : CachedExpressionCompiler.Evaluate(expression);", span="371-373", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs"];
m5_90 [label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="367-367", cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs"];
m5_50 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Job.cs"];
m5_87 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="Job.cs"];
m5_25 [label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="185-185", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Job.cs"];
m5_26 [label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="187-189", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Job.cs"];
m5_27 [label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="185-185", cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Job.cs"];
m5_28 [label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38", cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="Job.cs"];
m5_80 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="Job.cs"];
m5_29 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="Job.cs"];
m5_38 [label="throw new ArgumentException(''Expression body should be of type `MethodCallExpression`'', ''methodCall'');", span="234-234", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_86 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Job.cs"];
m5_46 [label="return new Job(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                type,\r\n                callExpression.Method,\r\n                GetExpressionValues(callExpression.Arguments));", span="254-258", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_47 [label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_48 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="Job.cs"];
m5_37 [label="callExpression == null", span="232-232", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_33 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_34 [label="methodCall == null", span="229-229", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_35 [label="throw new ArgumentNullException(''methodCall'');", span="229-229", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_36 [label="var callExpression = methodCall.Body as MethodCallExpression", span="231-231", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_42 [label="objectValue == null", span="242-242", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_43 [label="throw new InvalidOperationException(''Expression object should be not null.'');", span="244-244", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_44 [label="type = objectValue.GetType()", span="247-247", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_45 [label="type = callExpression.Method.DeclaringType", span="251-251", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs"];
m5_83 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="Job.cs"];
m5_61 [label="!method.IsPublic", span="306-306", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_63 [label="method.ContainsGenericParameters", span="311-311", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_65 [label="method.DeclaringType == null", span="316-316", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_67 [label="!method.DeclaringType.IsAssignableFrom(type)", span="321-321", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_68 [label="throw new ArgumentException(\r\n                    String.Format(''The type `{0}` must be derived from the `{1}` type.'', method.DeclaringType, type),\r\n                    typeParameterName);", span="323-325", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_69 [label="typeof(Task).IsAssignableFrom(method.ReturnType)", span="328-328", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_71 [label="var parameters = method.GetParameters()", span="333-333", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_72 [label="parameters.Length != argumentCount", span="335-335", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_73 [label="throw new ArgumentException(\r\n                    ''Argument count must be equal to method parameter count.'',\r\n                    argumentParameterName);", span="337-339", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_62 [label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="308-308", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_64 [label="throw new NotSupportedException(''Job method can not contain unassigned generic type parameters.'');", span="313-313", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_66 [label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="318-318", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_70 [label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="330-330", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_74 [label=parameters, span="342-342", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_76 [label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="350-351", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_78 [label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="356-357", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_77 [label="parameter.ParameterType.IsByRef", span="354-354", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_75 [label="parameter.IsOut", span="348-348", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_79 [label="Exit Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="297-297", cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.cs"];
m5_92 [label="Hangfire.Common.Job", span="", file="Job.cs"];
m6_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobFacts.cs"];
m6_1 [label="_manager = manager", span="34-34", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobFacts.cs"];
m6_2 [label="_context = context", span="35-35", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobFacts.cs"];
m6_3 [label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="37-37", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobFacts.cs"];
m6_4 [label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                    IsBackground = true\r\n                }", span="39-43", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobFacts.cs"];
m6_25 [label="_thread.Join()", span="88-88", cluster="HangFire.Server.Worker.Dispose()", file="JobFacts.cs"];
m6_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="JobFacts.cs"];
m6_47 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobFacts.cs"];
m6_74 [label="this.ScenarioSetup(scenarioInfo)", span="168-168", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="JobFacts.cs"];
m6_14 [label="Exit HangFire.Server.Worker.SendStop()", span="47-47", cluster="HangFire.Server.Worker.SendStop()", file="JobFacts.cs"];
m6_15 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobFacts.cs"];
m6_16 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_17 [label=_jobLock, span="73-73", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_21 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="JobFacts.cs"];
m6_18 [label="_jobPayload = payload", span="75-75", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_19 [label="_jobIsReady.Set()", span="78-78", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_20 [label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_48 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112", cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobFacts.cs"];
m6_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="JobFacts.cs"];
m6_30 [label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="JobFacts.cs"];
m6_26 [label="_cts.Dispose()", span="90-90", cluster="HangFire.Server.Worker.Dispose()", file="JobFacts.cs"];
m6_27 [label="_jobIsReady.Dispose()", span="91-91", cluster="HangFire.Server.Worker.Dispose()", file="JobFacts.cs"];
m6_28 [label="Exit HangFire.Server.Worker.Dispose()", span="81-81", cluster="HangFire.Server.Worker.Dispose()", file="JobFacts.cs"];
m6_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobFacts.cs"];
m6_89 [label="Entry Unk.And", span="", cluster="Unk.And", file="JobFacts.cs"];
m6_99 [label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="225-225", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_100 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the succeeded list'', ((string[])(null)))", span="227-227", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_101 [label="this.ScenarioSetup(scenarioInfo)", span="229-229", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_102 [label="this.FeatureBackground()", span="231-231", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_103 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="233-233", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_104 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="235-235", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_105 [label="testRunner.Then(''the job should be removed from the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="237-237", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_106 [label="this.ScenarioCleanup()", span="239-239", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_107 [label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="225-225", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="JobFacts.cs"];
m6_44 [label="Entry HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobFacts.cs"];
m6_5 [label="_thread.Start()", span="44-44", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobFacts.cs"];
m6_9 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobFacts.cs"];
m6_11 [label="Entry HangFire.Server.Worker.SendStop()", span="47-47", cluster="HangFire.Server.Worker.SendStop()", file="JobFacts.cs"];
m6_12 [label="_stopSent = true", span="49-49", cluster="HangFire.Server.Worker.SendStop()", file="JobFacts.cs"];
m6_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobFacts.cs"];
m6_31 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="JobFacts.cs"];
m6_32 [label="Entry HangFire.Server.Worker.DoWork()", span="95-95", cluster="HangFire.Server.Worker.DoWork()", file="JobFacts.cs"];
m6_33 [label=true, span="99-99", cluster="HangFire.Server.Worker.DoWork()", file="JobFacts.cs"];
m6_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="JobFacts.cs"];
m6_45 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="JobFacts.cs"];
m6_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobFacts.cs"];
m6_35 [label="Entry HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="JobFacts.cs"];
m6_36 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Succeeded\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="JobFacts.cs"];
m6_37 [label="this.ScenarioSetup(scenarioInfo)", span="89-89", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="JobFacts.cs"];
m6_38 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="JobFacts.cs"];
m6_41 [label="Exit HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="JobFacts.cs"];
m6_42 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobFacts.cs"];
m6_40 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="JobFacts.cs"];
m6_39 [label="testRunner.Then(''the state name should be equal to \'Succeeded\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="JobFacts.cs"];
m6_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobFacts.cs"];
m6_77 [label="testRunner.Then(''the job should be added to the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="174-174", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="JobFacts.cs"];
m6_72 [label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", span="164-164", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="JobFacts.cs"];
m6_78 [label="this.ScenarioCleanup()", span="176-176", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="JobFacts.cs"];
m6_13 [label="_cts.Cancel()", span="50-50", cluster="HangFire.Server.Worker.SendStop()", file="JobFacts.cs"];
m6_46 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_49 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="JobFacts.cs"];
m6_50 [label="String.IsNullOrEmpty(payload.Type)", span="127-127", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_51 [label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="129-131", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_52 [label="return;", span="133-133", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_73 [label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="JobFacts.cs"];
m6_75 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="JobFacts.cs"];
m6_76 [label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="JobFacts.cs"];
m6_79 [label="HangFire.Server.Worker", span="", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="JobFacts.cs"];
m6_70 [label="this.ScenarioCleanup()", span="157-157", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_63 [label="exception == null", span="178-178", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_80 [label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="183-183", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_81 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should persist the job data'', ((string[])(null)))", span="185-185", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_82 [label="this.ScenarioSetup(scenarioInfo)", span="187-187", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_83 [label="this.FeatureBackground()", span="189-189", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_84 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="191-191", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_85 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_86 [label="testRunner.Then(''it should persist the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="195-195", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_87 [label="this.ScenarioCleanup()", span="197-197", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_88 [label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="183-183", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="JobFacts.cs"];
m6_90 [label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_91 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should change the stats'', ((string[])(null)))", span="206-206", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_92 [label="this.ScenarioSetup(scenarioInfo)", span="208-208", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_93 [label="this.FeatureBackground()", span="210-210", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_94 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="212-212", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_95 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="214-214", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_96 [label="testRunner.Then(''it should decrease the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="216-216", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_97 [label="this.ScenarioCleanup()", span="218-218", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_98 [label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_69 [label="testRunner.Then(''it should increase the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="155-155", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_54 [label="return;", span="141-141", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_68 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="153-153", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="JobFacts.cs"];
m6_55 [label="Exception exception = null", span="149-149", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_56 [label="ServerJobDescriptor jobDescriptor = null", span="151-151", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_57 [label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="154-155", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_58 [label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="157-158", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_59 [label="_context.Performer.PerformJob(performContext)", span="160-160", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_60 [label=Exception, span="162-162", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_61 [label="exception = ex", span="164-164", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_62 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="166-168", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_64 [label="JobState.Apply(\r\n                    _redis,\r\n                    new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                    ProcessingState.Name)", span="180-183", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs", color=green, community=0];
m6_65 [label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                    ProcessingState.Name)", span="187-190", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_66 [label="JobFetcher.RemoveFromFetchedQueue(\r\n                _redis, payload.Id, payload.Queue)", span="198-199", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_67 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="JobFacts.cs"];
m6_71 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobFacts.cs"];
m6_22 [label="Entry HangFire.Server.Worker.Dispose()", span="81-81", cluster="HangFire.Server.Worker.Dispose()", file="JobFacts.cs"];
m6_23 [label="!_stopSent", span="83-83", cluster="HangFire.Server.Worker.Dispose()", file="JobFacts.cs"];
m6_24 [label="SendStop()", span="85-85", cluster="HangFire.Server.Worker.Dispose()", file="JobFacts.cs"];
m6_53 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="JobFacts.cs"];
m6_108 [label="HangFire.Tests.States.SucceededStateFeature", span="", file="JobFacts.cs"];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=0, style=solid, color=red];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=0, style=solid, color=red];
n4 -> n13  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n17  [key=2, style=dotted];
n2 -> n10  [key=0, style=solid, color=red];
n2 -> n11  [key=2, style=dotted, color=red];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n12  [key=2, style=dotted, color=red];
n5 -> n10  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid, color=red];
n6 -> n15  [key=2, style=dotted, color=red];
n13 -> n18  [key=0, style=solid, color=red];
n13 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [key=2, style=dotted];
n7 -> n7  [key=1, style=dashed, color=darkseagreen4, label=script];
n15 -> n23  [key=0, style=solid];
n15 -> n25  [key=1, style=dashed, color=red, label="System.Reflection.Assembly"];
n15 -> n6  [key=3, color=red, style=bold, label="Parameter variable string resourceName"];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=2, style=dotted];
n10 -> n0  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n21  [key=2, style=dotted, color=red];
n18 -> n22  [key=2, style=dotted, color=red];
n19 -> n20  [key=0, style=solid];
n20 -> n13  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n23 -> n29  [key=2, style=dotted];
n23 -> n26  [key=1, style=dashed, color=darkseagreen4, label=stream];
n25 -> n28  [key=0, style=solid, color=red];
n25 -> n30  [key=2, style=dotted, color=red];
n25 -> n31  [key=2, style=dotted, color=red];
n24 -> n25  [key=0, style=solid, color=red];
n24 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n32  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n33  [key=2, style=dotted];
n28 -> n15  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m3_12 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_13  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_19  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_20  [key=2, style=dotted];
m3_15 -> m3_21  [key=2, style=dotted];
m3_15 -> m3_19  [key=2, style=dotted];
m3_15 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_19  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_12  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_11  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_4 -> m3_5  [key=0, style=solid, color=green];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_0  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_22  [key=0, style=bold, color=blue];
m3_25 -> m3_4  [key=1, style=dashed, color=green, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m5_52 -> m5_84  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_13  [key=2, style=dotted];
m5_52 -> m5_37  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_86  [key=2, style=dotted];
m5_84 -> m5_87  [key=2, style=dotted];
m5_85 -> m5_52  [key=0, style=bold, color=blue];
m5_40 -> m5_45  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_41 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=objectValue];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_49  [key=2, style=dotted];
m5_6 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_6 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_6 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="params object[]"];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_6 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="params object[]"];
m5_6 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_6 -> m5_8  [key=0, style=solid];
m5_6 -> m5_12  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_16 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_16 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_19  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=0, style=solid];
m5_7 -> m5_13  [key=2, style=dotted];
m5_7 -> m5_14  [key=2, style=dotted];
m5_7 -> m5_15  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=0, style=solid];
m5_11 -> m5_13  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_8 -> m5_17  [key=0, style=solid];
m5_8 -> n11  [key=2, style=dotted];
m5_8 -> m5_0  [key=0, style=bold, color=blue];
m5_10 -> m5_17  [key=0, style=solid];
m5_10 -> n11  [key=2, style=dotted];
m5_12 -> m5_17  [key=0, style=solid];
m5_12 -> n11  [key=2, style=dotted];
m5_17 -> m5_6  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_39 -> m5_40  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_13  [key=2, style=dotted];
m5_32 -> m5_37  [key=2, style=dotted];
m5_32 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=checkedTimestamp];
m5_51 -> m5_52  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_13  [key=2, style=dotted];
m5_23 -> m5_14  [key=2, style=dotted];
m5_23 -> m5_15  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=0, style=solid];
m5_18 -> m5_9  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_22  [key=0, style=solid];
m5_20 -> m5_9  [key=2, style=dotted];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_12  [key=2, style=dotted];
m5_22 -> m5_13  [key=2, style=dotted];
m5_22 -> m5_20  [key=0, style=bold, color=blue];
m5_19 -> m5_23  [key=0, style=solid];
m5_19 -> m5_10  [key=2, style=dotted];
m5_19 -> m5_61  [key=0, style=solid];
m5_19 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_19 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_19 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_19 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_19 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_19 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m5_19 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_19 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_21 -> m5_23  [key=0, style=solid];
m5_21 -> m5_11  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid, color=green];
m5_21 -> m5_24  [key=2, style=dotted, color=green];
m5_24 -> m5_16  [key=0, style=bold, color=blue];
m5_24 -> m5_29  [key=0, style=solid];
m5_53 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<TType>>"];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_38  [key=2, style=dotted];
m5_59 -> m5_6  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_52  [key=2, style=dotted];
m5_56 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_13  [key=2, style=dotted];
m5_56 -> m5_37  [key=2, style=dotted];
m5_57 -> m5_59  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_50  [key=2, style=dotted];
m5_54 -> m5_56  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_51  [key=0, style=bold, color=blue];
m5_58 -> m5_60  [key=0, style=solid];
m5_58 -> m5_48  [key=2, style=dotted];
m5_58 -> m5_55  [key=0, style=bold, color=blue];
m5_55 -> m5_60  [key=0, style=solid];
m5_55 -> n11  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_60 -> m5_53  [key=0, style=bold, color=blue];
m5_31 -> m5_32  [key=0, style=solid];
m5_30 -> m5_24  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=0, style=solid];
m5_2 -> m5_9  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=0, style=solid];
m5_4 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_7  [key=0, style=solid];
m5_3 -> m5_10  [key=2, style=dotted];
m5_5 -> m5_7  [key=0, style=solid];
m5_5 -> m5_11  [key=2, style=dotted];
m5_49 -> m5_88  [key=0, style=solid];
m5_49 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m5_49 -> m5_46  [key=0, style=bold, color=blue];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_91  [key=2, style=dotted];
m5_90 -> m5_49  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_29  [key=2, style=dotted];
m5_26 -> m5_24  [key=2, style=dotted];
m5_26 -> m5_28  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_30  [key=2, style=dotted];
m5_27 -> m5_25  [key=0, style=bold, color=blue];
m5_28 -> m5_25  [key=0, style=bold, color=blue];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [key=2, style=dotted];
m5_29 -> m5_32  [key=2, style=dotted];
m5_38 -> m5_47  [key=0, style=solid];
m5_38 -> m5_48  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_6  [key=2, style=dotted];
m5_46 -> m5_52  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_13  [key=2, style=dotted];
m5_47 -> m5_37  [key=2, style=dotted];
m5_47 -> m5_33  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_50  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_39  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_38  [key=2, style=dotted];
m5_33 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_39  [key=2, style=dotted];
m5_34 -> m5_36  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_40  [key=2, style=dotted];
m5_35 -> m5_41  [key=2, style=dotted];
m5_35 -> m5_47  [key=0, style=solid];
m5_35 -> n11  [key=2, style=dotted];
m5_36 -> m5_31  [key=0, style=bold, color=blue];
m5_36 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_36 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_36 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_44  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_13  [key=2, style=dotted];
m5_43 -> m5_37  [key=2, style=dotted];
m5_43 -> m5_47  [key=0, style=solid];
m5_43 -> m5_50  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_38  [key=2, style=dotted];
m5_44 -> m5_46  [key=0, style=solid];
m5_44 -> m5_51  [key=2, style=dotted];
m5_45 -> m5_42  [key=0, style=bold, color=blue];
m5_45 -> m5_46  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_63  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_67  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_69  [key=0, style=solid];
m5_67 -> m5_81  [key=2, style=dotted];
m5_68 -> m5_79  [key=0, style=solid];
m5_68 -> m5_48  [key=2, style=dotted];
m5_68 -> m5_82  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=0, style=solid];
m5_69 -> m5_81  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_83  [key=2, style=dotted];
m5_71 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_74  [key=0, style=solid];
m5_73 -> m5_79  [key=0, style=solid];
m5_73 -> m5_48  [key=2, style=dotted];
m5_62 -> m5_79  [key=0, style=solid];
m5_62 -> m5_80  [key=2, style=dotted];
m5_64 -> m5_79  [key=0, style=solid];
m5_64 -> m5_80  [key=2, style=dotted];
m5_66 -> m5_79  [key=0, style=solid];
m5_66 -> m5_80  [key=2, style=dotted];
m5_70 -> m5_79  [key=0, style=solid];
m5_70 -> m5_80  [key=2, style=dotted];
m5_74 -> m5_79  [key=0, style=solid];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m5_76 -> m5_79  [key=0, style=solid];
m5_76 -> m5_80  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_80  [key=2, style=dotted];
m5_77 -> m5_74  [key=0, style=solid];
m5_77 -> m5_78  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_77  [key=0, style=solid];
m5_79 -> m5_19  [key=0, style=bold, color=blue];
m5_92 -> m5_21  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m5_92 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_92 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_92 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_92 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_2 -> m6_7  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_8  [key=2, style=dotted];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_7  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_29  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_30  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_22  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_11  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_0  [key=2, style=dotted];
m6_16 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_17 -> m6_14  [key=0, style=bold, color=blue];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_20 -> m6_16  [key=0, style=bold, color=blue];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_53  [key=2, style=dotted];
m6_48 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=table1];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_13  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_30  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=2, style=dotted];
m6_27 -> m6_31  [key=2, style=dotted];
m6_28 -> m6_26  [key=0, style=bold, color=blue];
m6_28 -> m6_22  [key=0, style=bold, color=blue];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_42  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_22  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_30  [key=2, style=dotted];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_63  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_89  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_43  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_26  [key=2, style=dotted];
m6_107 -> m6_99  [key=0, style=bold, color=blue];
m6_44 -> m6_45  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_10  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_9  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_34  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_34  [key=2, style=dotted];
m6_33 -> m6_30  [key=0, style=bold, color=blue];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_39  [key=0, style=solid];
m6_33 -> m6_40  [key=0, style=solid];
m6_33 -> m6_43  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_42  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_44  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_45  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_42  [key=2, style=dotted];
m6_37 -> m6_46  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_22  [key=2, style=dotted];
m6_38 -> m6_33  [key=0, style=solid];
m6_38 -> m6_47  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_30  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_35  [key=0, style=bold, color=blue];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_48  [key=2, style=dotted];
m6_42 -> m6_49  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_26  [key=2, style=dotted];
m6_39 -> m6_43  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_43 -> m6_32  [key=0, style=bold, color=blue];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_43  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_26  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_22  [key=2, style=dotted];
m6_46 -> m6_64  [key=1, style=dashed, color=green, label="HangFire.Server.JobPayload"];
m6_46 -> m6_50  [key=0, style=solid];
m6_46 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_46 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_46 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_46 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_46 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_46 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_54  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_43  [key=2, style=dotted];
m6_50 -> m6_53  [key=0, style=solid];
m6_50 -> m6_68  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_26  [key=2, style=dotted];
m6_51 -> m6_7  [key=2, style=dotted];
m6_51 -> m6_69  [key=2, style=dotted];
m6_52 -> m6_44  [key=0, style=bold, color=blue];
m6_52 -> m6_67  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_42  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_30  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_63  [key=2, style=dotted];
m6_79 -> m6_72  [key=0, style=bold, color=blue];
m6_79 -> m6_64  [key=1, style=dashed, color=green, label="HangFire.Server.Worker"];
m6_79 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_79 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_26  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid, color=green];
m6_63 -> m6_65  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_42  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_22  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_30  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_63  [key=2, style=dotted];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_89  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_43  [key=2, style=dotted];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_26  [key=2, style=dotted];
m6_88 -> m6_80  [key=0, style=bold, color=blue];
m6_90 -> m6_91  [key=0, style=solid];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_42  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_22  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_30  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_63  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_89  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_43  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_26  [key=2, style=dotted];
m6_98 -> m6_90  [key=0, style=bold, color=blue];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_43  [key=2, style=dotted];
m6_54 -> m6_67  [key=0, style=solid];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_63  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_42  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_22  [key=2, style=dotted];
m6_57 -> m6_72  [key=2, style=dotted];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_30  [key=2, style=dotted];
m6_58 -> m6_73  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_63  [key=2, style=dotted];
m6_59 -> m6_74  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_43  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_26  [key=2, style=dotted];
m6_61 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label=exception];
m6_61 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=exception];
m6_62 -> m6_55  [key=0, style=bold, color=blue];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_7  [key=2, style=dotted];
m6_62 -> m6_75  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_66  [key=0, style=solid, color=green];
m6_64 -> m6_76  [key=2, style=dotted, color=green];
m6_64 -> m6_71  [key=2, style=dotted, color=green];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_42  [key=2, style=dotted];
m6_65 -> m6_71  [key=2, style=dotted];
m6_65 -> m6_77  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_22  [key=2, style=dotted];
m6_66 -> m6_78  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_30  [key=2, style=dotted];
m6_67 -> m6_46  [key=0, style=bold, color=blue];
m6_71 -> m6_64  [key=0, style=bold, color=blue];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=2, style=dotted];
m6_24 -> m6_22  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_11  [key=2, style=dotted];
m6_53 -> m6_71  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_55  [key=0, style=solid];
m6_53 -> m6_70  [key=2, style=dotted];
m6_108 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m6_108 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
}
