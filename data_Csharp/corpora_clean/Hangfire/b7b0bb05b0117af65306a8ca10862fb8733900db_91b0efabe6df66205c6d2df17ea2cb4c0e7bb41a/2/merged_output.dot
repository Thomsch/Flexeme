digraph  {
n36 [label="HangFire.SqlServer.SqlServerFetcher", span=""];
n0 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
n1 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", label="_connection = connection", span="23-23"];
n2 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, label="0: _queues = queues", span="24-24"];
n3 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", label="Exit HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
n4 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="Entry HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27"];
n5 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, label="1: Job job = null", span="29-29"];
n18 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="75-75"];
n6 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="string queueName = null", span="30-30"];
n17 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="job == null && currentQueryIndex == fetchQueries.Length - 1", span="73-73"];
n21 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="job == null", span="82-82"];
n22 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="84-84"];
n23 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", span="86-89"];
n7 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="string fetchJobSql = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt is null\r\nand Queue in @queues''", span="32-37"];
n8 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="string fetchTimedOutJobSql = @''\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt < DATEADD(second, @timeout, GETUTCDATE())\r\nand Queue in @queues''", span="39-43"];
n9 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="var fetchQueries = new[] { fetchJobSql, fetchTimedOutJobSql }", span="45-45"];
n10 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="var currentQueryIndex = 0", span="46-46"];
n11 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="var idAndQueue = _connection.Query(\r\n                    fetchQueries[currentQueryIndex],\r\n                    new { queues = _queues, timeout = JobTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="50-53"];
n20 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="currentQueryIndex = (currentQueryIndex + 1) % fetchQueries.Length", span="81-81"];
n12 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="idAndQueue != null", span="55-55"];
n25 [cluster="System.TimeSpan.Negate()", label="Entry System.TimeSpan.Negate()", span="0-0"];
n26 [cluster="Unk.Query", label="Entry Unk.Query", span=""];
n27 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
n14 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", span="63-63"];
n16 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="queueName = idAndQueue.Queue", span="70-70"];
n13 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="var parameters = new DynamicParameters()", span="62-62"];
n28 [cluster="DynamicParameters.cstr", label="Entry DynamicParameters.cstr", span=""];
n15 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="job = _connection.Query<Job>(\r\n                        @''select Id, InvocationData, Arguments from HangFire.Job where Id = @id'',\r\n                        parameters)\r\n                        .SingleOrDefault()", span="65-68"];
n29 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n30 [cluster="Unk.>", label="Entry Unk.>", span=""];
n19 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="return null;", span="77-77"];
n31 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n32 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
n33 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
n24 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27"];
n34 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23"];
n35 [cluster="int.ToString()", label="Entry int.ToString()", span="0-0"];
m0_6 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="FetcherFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m0_7 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="FetcherFacts.cs", label="var state = new SucceededState()", span="18-18"];
m0_8 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="FetcherFacts.cs", label="1: DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', ''<UtcNow timestamp>'' },\r\n                },\r\n                state.Serialize())", span="20-25"];
m0_9 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="FetcherFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m0_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FetcherFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_12 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="FetcherFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m0_17 [cluster="Unk.True", file="FetcherFacts.cs", label="Entry Unk.True", span=""];
m0_5 [cluster="Unk.Equal", file="FetcherFacts.cs", label="Entry Unk.Equal", span=""];
m0_0 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="FetcherFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m0_1 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", color=red, community=0, file="FetcherFacts.cs", label="1: var state = new SucceededState()", span="11-11"];
m0_2 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="FetcherFacts.cs", label="Assert.Equal(SucceededState.StateName, state.Name)", span="12-12"];
m0_3 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="FetcherFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m0_13 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="FetcherFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="29-29"];
m0_14 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="FetcherFacts.cs", label="var state = new SucceededState()", span="31-31"];
m0_15 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="FetcherFacts.cs", label="Assert.True(state.ExpireJobOnApply)", span="32-32"];
m0_16 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="FetcherFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="29-29"];
m0_4 [cluster="HangFire.States.SucceededState.SucceededState()", file="FetcherFacts.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="28-28"];
m0_11 [cluster="HangFire.States.SucceededState.Serialize()", file="FetcherFacts.cs", label="Entry HangFire.States.SucceededState.Serialize()", span="45-45"];
m2_47 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="103-103"];
m2_48 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="SqlServerConnection.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="105-106"];
m2_49 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="SqlServerConnection.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="108-108"];
m2_50 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="103-103"];
m2_35 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m2_39 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="_server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                name,\r\n                workers,\r\n                queues,\r\n                null,\r\n                TimeSpan.FromSeconds(1),\r\n                TimeSpan.FromSeconds(1))", span="84-91"];
m2_40 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m2_20 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m2_21 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="SqlServerConnection.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="52-52"];
m2_22 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m2_77 [cluster="Unk.GetAllEntriesFromHash", file="SqlServerConnection.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m2_29 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m2_30 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="SqlServerConnection.cs", label="WhenTheServerStartsWithWorkers(name, 1)", span="67-67"];
m2_31 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m2_5 [cluster="HangFire.Server.JobServer.Dispose()", file="SqlServerConnection.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
m2_67 [cluster="Unk.IsTrue", file="SqlServerConnection.cs", label="Entry Unk.IsTrue", span=""];
m2_6 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="29-29"];
m2_7 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", color=green, community=0, file="SqlServerConnection.cs", label="0: Given(''a job'')", span="31-31"];
m2_8 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="SqlServerConnection.cs", label="Given(''the job was dequeued'')", span="32-32"];
m2_9 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="29-29"];
m2_27 [cluster="Unk.AddItemToSet", file="SqlServerConnection.cs", label="Entry Unk.AddItemToSet", span=""];
m2_15 [cluster="string.Format(string, object)", file="SqlServerConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_36 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m2_37 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="SqlServerConnection.cs", label="CreateServer(name, 1, new [] { queue1, queue2 })", span="79-79"];
m2_38 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m2_61 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="129-129"];
m2_62 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SqlServerConnection.cs", label="Thread.Sleep(_serverStartupTimeout)", span="131-131"];
m2_63 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SqlServerConnection.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="132-132"];
m2_64 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="129-129"];
m2_53 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="114-114"];
m2_54 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="SqlServerConnection.cs", label="ThenTheJobShouldBeRemovedFromTheDequeuedList(JobSteps.DefaultJobId)", span="116-116"];
m2_55 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="114-114"];
m2_79 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="150-150"];
m2_80 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SqlServerConnection.cs", label="var registeredQueues = Redis.Client.GetAllItemsFromList(String.Format(''hangfire:server:{0}:queues'', name))", span="152-152"];
m2_81 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SqlServerConnection.cs", label="Assert.AreEqual(2, registeredQueues.Count)", span="154-154"];
m2_82 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SqlServerConnection.cs", label="Assert.AreEqual(queue1, registeredQueues[0])", span="155-155"];
m2_83 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SqlServerConnection.cs", label="Assert.AreEqual(queue2, registeredQueues[1])", span="156-156"];
m2_84 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="150-150"];
m2_72 [cluster="Unk.IsFalse", file="SqlServerConnection.cs", label="Entry Unk.IsFalse", span=""];
m2_85 [cluster="Unk.AreEqual", file="SqlServerConnection.cs", label="Entry Unk.AreEqual", span=""];
m2_65 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m2_43 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="95-95"];
m2_44 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="SqlServerConnection.cs", label="WhenTheServerStarts(name)", span="97-97"];
m2_45 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="SqlServerConnection.cs", label="_server.Dispose()", span="98-98"];
m2_46 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="95-95"];
m2_41 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
m2_56 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="120-120"];
m2_57 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="SqlServerConnection.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="122-123"];
m2_58 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="SqlServerConnection.cs", label="CollectionAssert.DoesNotContain(jobIds, jobId)", span="125-125"];
m2_59 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="120-120"];
m2_0 [cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="SqlServerConnection.cs", label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6"];
m2_1 [cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="SqlServerConnection.cs", label="Exception = exception", span="8-8"];
m2_2 [cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="SqlServerConnection.cs", label="Exit HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6"];
m2_3 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="SqlServerConnection.cs", label="HangFire.Web.Pages.ErrorPage", span=""];
m2_4 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m2_28 [cluster="Unk.AddItemToList", file="SqlServerConnection.cs", label="Entry Unk.AddItemToList", span=""];
m2_16 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m2_17 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="SqlServerConnection.cs", label="Given(''a job'')", span="45-45"];
m2_18 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="SqlServerConnection.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="46-46"];
m2_19 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m2_73 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="143-143"];
m2_74 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SqlServerConnection.cs", label="var properties = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:server:{0}'', name))", span="145-145"];
m2_75 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SqlServerConnection.cs", label="DictionaryAssert.ContainsFollowingItems(table, properties)", span="146-146"];
m2_76 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="143-143"];
m2_51 [cluster="Unk.GetAllItemsFromList", file="SqlServerConnection.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m2_66 [cluster="Unk.SetContainsItem", file="SqlServerConnection.cs", label="Entry Unk.SetContainsItem", span=""];
m2_52 [cluster="Unk.Contains", file="SqlServerConnection.cs", label="Entry Unk.Contains", span=""];
m2_92 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="166-166"];
m2_91 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="SqlServerConnection.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}:queues'', name)))", span="168-168"];
m2_90 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="166-166"];
m2_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m2_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", color=green, community=0, file="SqlServerConnection.cs", label="1: Given(''the job was dequeued'')", span="39-39"];
m2_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="SqlServerConnection.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="38-38"];
m2_14 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m2_10 [cluster="Unk.Given", file="SqlServerConnection.cs", label="Entry Unk.Given", span=""];
m2_23 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m2_25 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="SqlServerConnection.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="59-61"];
m2_24 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="SqlServerConnection.cs", label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="58-58"];
m2_26 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m2_60 [cluster="Unk.DoesNotContain", file="SqlServerConnection.cs", label="Entry Unk.DoesNotContain", span=""];
m2_78 [cluster="Unk.ContainsFollowingItems", file="SqlServerConnection.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m2_88 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="160-160"];
m2_87 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="SqlServerConnection.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="162-162"];
m2_86 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="160-160"];
m2_32 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m2_33 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="SqlServerConnection.cs", label="CreateServer(name, workers, new [] { ''critical'' })", span="73-73"];
m2_34 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m2_68 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="136-136"];
m2_70 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SqlServerConnection.cs", label="Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="139-139"];
m2_69 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SqlServerConnection.cs", label="Thread.Sleep(_serverStartupTimeout)", span="138-138"];
m2_71 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SqlServerConnection.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="136-136"];
m2_89 [cluster="Unk.ContainsKey", file="SqlServerConnection.cs", label="Entry Unk.ContainsKey", span=""];
m2_93 [file="SqlServerConnection.cs", label="HangFire.Tests.ServerSteps", span=""];
m4_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_20 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="59-59"];
m4_21 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", color=green, community=0, file="SqlServerStorage.cs", label="0: var connection = CreateAndOpenConnection()", span="61-61"];
m4_22 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", color=green, community=0, file="SqlServerStorage.cs", label="1: var queue = new SqlServerJobQueue(_options, connection)", span="62-62"];
m4_23 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", color=green, community=0, file="SqlServerStorage.cs", label="0: return new SqlServerConnection(queue, connection);", span="64-64"];
m4_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="59-59"];
m4_38 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.ToString()", span="79-79"];
m4_40 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value)", span="85-88"];
m4_39 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="81-81"];
m4_41 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="var builder = new StringBuilder()", span="90-90"];
m4_43 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="parts.ContainsKey(alias)", span="94-94"];
m4_44 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="96-96"];
m4_48 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="parts.ContainsKey(alias)", span="105-105"];
m4_49 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="107-107"];
m4_50 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="return builder.Length != 0 \r\n                    ? String.Format(''SQL Server: {0}'', builder) \r\n                    : canNotParseMessage;", span="112-114"];
m4_52 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="return canNotParseMessage;", span="118-118"];
m4_42 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="92-92"];
m4_45 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Length != 0", span="101-101"];
m4_46 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Append(''@'')", span="101-101"];
m4_47 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="new[] { ''Database'', ''Initial Catalog'' }", span="103-103"];
m4_51 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label=Exception, span="116-116"];
m4_53 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.ToString()", span="79-79"];
m4_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="35-35"];
m4_60 [cluster="System.Text.StringBuilder.Append(string)", file="SqlServerStorage.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m4_56 [cluster="Unk.ToDictionary", file="SqlServerStorage.cs", label="Entry Unk.ToDictionary", span=""];
m4_61 [cluster="string.Format(string, object)", file="SqlServerStorage.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_36 [cluster="Unk.Info", file="SqlServerStorage.cs", label="Entry Unk.Info", span=""];
m4_31 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="72-72"];
m4_33 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="logger.InfoFormat(''    Queue poll interval: {0}.'', _options.QueuePollInterval)", span="75-75"];
m4_34 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="logger.InfoFormat(''    Invisibility timeout: {0}.'', _options.InvisibilityTimeout)", span="76-76"];
m4_32 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="logger.Info(''Using the following options for SQL Server job storage:'')", span="74-74"];
m4_35 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="72-72"];
m4_57 [cluster="System.Text.StringBuilder.StringBuilder()", file="SqlServerStorage.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m4_80 [cluster="Unk.Open", file="SqlServerStorage.cs", label="Entry Unk.Open", span=""];
m4_37 [cluster="Unk.InfoFormat", file="SqlServerStorage.cs", label="Entry Unk.InfoFormat", span=""];
m4_68 [cluster="Unk.Trim", file="SqlServerStorage.cs", label="Entry Unk.Trim", span=""];
m4_79 [cluster="SqlConnection.cstr", file="SqlServerStorage.cs", label="Entry SqlConnection.cstr", span=""];
m4_59 [cluster="Unk.AppendFormat", file="SqlServerStorage.cs", label="Entry Unk.AppendFormat", span=""];
m4_16 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="54-54"];
m4_17 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="56-56"];
m4_18 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="54-54"];
m4_30 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m4_25 [cluster="SqlServerJobQueue.cstr", file="SqlServerStorage.cs", label="Entry SqlServerJobQueue.cstr", span=""];
m4_2 [cluster="Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", file="SqlServerStorage.cs", label="Entry Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", span="27-27"];
m4_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Hangfire.Dashboard.DashboardMetric", span=""];
m4_8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_connectionString = connectionString", span="43-43"];
m4_10 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="var connection = CreateAndOpenConnection()", span="47-47"];
m4_5 [cluster="Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", file="SqlServerStorage.cs", label="Func = func", span="31-31"];
m4_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options.PrepareSchemaIfNecessary", span="45-45"];
m4_11 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="SqlServerObjectsInstaller.Install(connection)", span="49-49"];
m4_3 [cluster="Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", file="SqlServerStorage.cs", label="Name = name", span="29-29"];
m4_6 [cluster="Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", file="SqlServerStorage.cs", label="Exit Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", span="27-27"];
m4_4 [cluster="Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", file="SqlServerStorage.cs", label="Title = title", span="30-30"];
m4_12 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m4_54 [cluster="string.Split(char[], System.StringSplitOptions)", file="SqlServerStorage.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m4_72 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="88-88"];
m4_62 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="86-86"];
m4_65 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="87-87"];
m4_69 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="88-88"];
m4_63 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="86-86"];
m4_64 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="86-86"];
m4_67 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="87-87"];
m4_66 [cluster="lambda expression", file="SqlServerStorage.cs", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="87-87"];
m4_71 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="88-88"];
m4_70 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Key", span="88-88"];
m4_73 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Value", span="88-88"];
m4_74 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="88-88"];
m4_55 [cluster="Unk.Select", file="SqlServerStorage.cs", label="Entry Unk.Select", span=""];
m4_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="67-67"];
m4_28 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ExpirationManager(this);", span="69-69"];
m4_29 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="67-67"];
m4_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m4_0 [cluster="Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", file="SqlServerStorage.cs", label="Entry Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", span="22-22"];
m4_1 [cluster="Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", file="SqlServerStorage.cs", label="Exit Hangfire.Dashboard.DashboardMetric.DashboardMetric(string, System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>)", span="22-22"];
m4_14 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="122-122"];
m4_75 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="var connection = new SqlConnection(_connectionString)", span="124-124"];
m4_76 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="connection.Open()", span="125-125"];
m4_77 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="return connection;", span="127-127"];
m4_78 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="122-122"];
m4_26 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", span="34-34"];
m4_58 [cluster="Unk.ContainsKey", file="SqlServerStorage.cs", label="Entry Unk.ContainsKey", span=""];
m4_81 [file="SqlServerStorage.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m5_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_82 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m5_83 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="AddToSet(key, value, 0.0)", span="155-155"];
m5_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m5_98 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m5_99 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="181-183"];
m5_100 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m5_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m5_86 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165"];
m5_87 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="167-169"];
m5_88 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m5_64 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m5_65 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136"];
m5_66 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m5_119 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m5_44 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="96-96"];
m5_45 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="98-100"];
m5_46 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="102-111"];
m5_47 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="96-96"];
m5_110 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193"];
m5_111 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="195-198"];
m5_112 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="200-202"];
m5_113 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193"];
m5_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205"];
m5_117 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="_commandQueue.Enqueue(action)", span="207-207"];
m5_118 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205"];
m5_42 [cluster="HangFire.States.IState.SerializeData()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.IState.SerializeData()", span="26-26"];
m5_17 [cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.EnlistTransaction", span=""];
m5_18 [cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m5_15 [cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m5_35 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="76-76"];
m5_36 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="78-81"];
m5_37 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="83-93"];
m5_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="76-76"];
m5_70 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m5_71 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143"];
m5_72 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m5_76 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m5_77 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150"];
m5_78 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m5_19 [cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Complete", span=""];
m5_27 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m5_92 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m5_93 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="174-176"];
m5_94 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m5_20 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m5_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="64-66"];
m5_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m5_104 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186"];
m5_105 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="188-190"];
m5_106 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186"];
m5_8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m5_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="47-49"];
m5_10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="51-51"];
m5_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="transaction.Complete()", span="58-58"];
m5_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label=_commandQueue, span="53-53"];
m5_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="command(_connection)", span="55-55"];
m5_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m5_16 [cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionOptions.cstr", span=""];
m5_114 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="200-202"];
m5_25 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="64-66"];
m5_24 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="64-66"];
m5_26 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="64-66"];
m5_33 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="71-73"];
m5_32 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="71-73"];
m5_34 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="71-73"];
m5_40 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="83-93"];
m5_39 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="83-93"];
m5_41 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="83-93"];
m5_49 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="102-111"];
m5_48 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="102-111"];
m5_50 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="102-111"];
m5_56 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="120-122"];
m5_55 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="120-122"];
m5_57 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="120-122"];
m5_62 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129"];
m5_61 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="127-129"];
m5_63 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="127-129"];
m5_68 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136"];
m5_67 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="134-136"];
m5_69 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="134-136"];
m5_74 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143"];
m5_73 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="141-143"];
m5_75 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="141-143"];
m5_80 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150"];
m5_79 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="148-150"];
m5_81 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="148-150"];
m5_90 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="167-169"];
m5_89 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="167-169"];
m5_91 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="167-169"];
m5_96 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="174-176"];
m5_95 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="174-176"];
m5_97 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="174-176"];
m5_102 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="181-183"];
m5_101 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="181-183"];
m5_103 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="181-183"];
m5_108 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="188-190"];
m5_107 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="188-190"];
m5_109 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="188-190"];
m5_115 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="200-202"];
m5_116 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="200-202"];
m5_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m5_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="connection == null", span="36-36"];
m5_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="_connection = connection", span="38-38"];
m5_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m5_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m5_43 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m5_28 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m5_51 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m5_52 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs", label="1: string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="116-118"];
m5_53 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs", label="0: QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="120-122"];
m5_54 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m5_58 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m5_59 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129"];
m5_60 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m5_29 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69"];
m5_30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="71-73"];
m5_31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69"];
m5_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41"];
m5_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41"];
m5_120 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m5_121 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_122 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m5_123 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_124 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_125 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.States.IState", span=""];
m5_126 [file="SqlServerWriteOnlyTransaction.cs", label=addAndSetStateSql, span=""];
m5_127 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_128 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.States.IState", span=""];
m5_129 [file="SqlServerWriteOnlyTransaction.cs", label=addStateSql, span=""];
m5_130 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_131 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_132 [file="SqlServerWriteOnlyTransaction.cs", label=enqueueJobSql, span=""];
m5_133 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_134 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_135 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m5_136 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_137 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_138 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m5_139 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_140 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_141 [file="SqlServerWriteOnlyTransaction.cs", label=double, span=""];
m5_142 [file="SqlServerWriteOnlyTransaction.cs", label=addSql, span=""];
m5_143 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_144 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_145 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_146 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_147 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_148 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_149 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m5_150 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m5_151 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m5_152 [file="SqlServerWriteOnlyTransaction.cs", label=trimSql, span=""];
m6_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WriteTransactionFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="WriteTransactionFacts.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_0 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="WriteTransactionFacts.cs", label="Entry HangFire.QueueAttribute.QueueAttribute(string)", span="57-57"];
m6_1 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="WriteTransactionFacts.cs", label="String.IsNullOrWhiteSpace(queue)", span="59-59"];
m6_3 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="WriteTransactionFacts.cs", label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="64-64"];
m6_4 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="WriteTransactionFacts.cs", label="throw new ArgumentException(\r\n                    String.Format(\r\n                        ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue),\r\n                    ''queue'');", span="66-69"];
m6_5 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="WriteTransactionFacts.cs", label="Queue = queue", span="72-72"];
m6_2 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="WriteTransactionFacts.cs", label="throw new ArgumentNullException(''queue'');", span="61-61"];
m6_6 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="WriteTransactionFacts.cs", label="Exit HangFire.QueueAttribute.QueueAttribute(string)", span="57-57"];
m6_7 [cluster="string.IsNullOrWhiteSpace(string)", file="WriteTransactionFacts.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m6_9 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="WriteTransactionFacts.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m6_12 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="WriteTransactionFacts.cs", label="Entry HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="80-80"];
m6_13 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="WriteTransactionFacts.cs", label="var enqueuedState = context.CandidateState as EnqueuedState", span="82-82"];
m6_14 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="WriteTransactionFacts.cs", label="enqueuedState != null", span="83-83"];
m6_15 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="WriteTransactionFacts.cs", label="enqueuedState.Queue = Queue", span="85-85"];
m6_16 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="WriteTransactionFacts.cs", label="Exit HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="80-80"];
m6_11 [cluster="string.Format(string, object)", file="WriteTransactionFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_17 [file="WriteTransactionFacts.cs", label="HangFire.QueueAttribute", span=""];
n36 -> n1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
n36 -> n2  [color=red, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
n36 -> n11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
n36 -> n15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
n1 -> n2  [color=red, key=0, style=solid];
n2 -> n3  [color=red, key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [color=red, key=0, style=solid];
n4 -> n18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n17  [color=red, key=1, label=job, style=dashed];
n5 -> n21  [color=red, key=1, label=job, style=dashed];
n5 -> n22  [color=red, key=1, label=job, style=dashed];
n5 -> n23  [color=red, key=1, label=job, style=dashed];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n18 -> n31  [key=2, style=dotted];
n18 -> n32  [key=2, style=dotted];
n18 -> n18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n6 -> n7  [key=0, style=solid];
n6 -> n23  [color=darkseagreen4, key=1, label=queueName, style=dashed];
n17 -> n18  [key=0, style=solid];
n17 -> n20  [key=0, style=solid];
n21 -> n10  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n33  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n34  [key=2, style=dotted];
n23 -> n35  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [color=darkseagreen4, key=1, label=fetchJobSql, style=dashed];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [color=darkseagreen4, key=1, label=fetchQueries, style=dashed];
n9 -> n17  [color=darkseagreen4, key=1, label=fetchQueries, style=dashed];
n9 -> n20  [color=darkseagreen4, key=1, label=fetchQueries, style=dashed];
n10 -> n11  [key=0, style=solid];
n10 -> n17  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
n10 -> n20  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n25  [key=2, style=dotted];
n11 -> n26  [key=2, style=dotted];
n11 -> n27  [key=2, style=dotted];
n11 -> n14  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
n11 -> n16  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n20  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n17  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n29  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n23  [color=darkseagreen4, key=1, label=queueName, style=dashed];
n13 -> n14  [key=0, style=solid];
n13 -> n28  [key=2, style=dotted];
n13 -> n15  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n15 -> n16  [key=0, style=solid];
n15 -> n30  [key=2, style=dotted];
n15 -> n27  [key=2, style=dotted];
n15 -> n17  [color=darkseagreen4, key=1, label=job, style=dashed];
n15 -> n21  [color=darkseagreen4, key=1, label=job, style=dashed];
n15 -> n22  [color=darkseagreen4, key=1, label=job, style=dashed];
n15 -> n23  [color=darkseagreen4, key=1, label=job, style=dashed];
n19 -> n24  [key=0, style=solid];
n24 -> n4  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [color=red, key=0, style=solid];
m0_7 -> m0_4  [key=2, style=dotted];
m0_8 -> m0_9  [color=red, key=0, style=solid];
m0_8 -> m0_10  [color=red, key=2, style=dotted];
m0_8 -> m0_11  [color=red, key=2, style=dotted];
m0_8 -> m0_12  [color=red, key=2, style=dotted];
m0_9 -> m0_6  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=red, key=0, style=solid];
m0_1 -> m0_2  [color=red, key=0, style=solid];
m0_1 -> m0_4  [color=red, key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_4  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=2, style=dotted];
m0_16 -> m0_13  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_15  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_51  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_52  [key=2, style=dotted];
m2_50 -> m2_47  [color=blue, key=0, style=bold];
m2_35 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_39 -> n31  [key=2, style=dotted];
m2_40 -> m2_35  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_10  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_15  [key=2, style=dotted];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=2, style=dotted];
m2_31 -> m2_29  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_10  [color=green, key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_9 -> m2_6  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_35  [key=2, style=dotted];
m2_38 -> m2_36  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_65  [key=2, style=dotted];
m2_63 -> m2_66  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_67  [key=2, style=dotted];
m2_64 -> m2_61  [color=blue, key=0, style=bold];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_56  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_55 -> m2_53  [color=blue, key=0, style=bold];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_79 -> m2_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_80 -> m2_15  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_51  [key=2, style=dotted];
m2_80 -> m2_82  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m2_80 -> m2_83  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_85  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_85  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=2, style=dotted];
m2_84 -> m2_79  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_29  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_5  [key=2, style=dotted];
m2_46 -> m2_43  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_57 -> m2_15  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_51  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=2, style=dotted];
m2_59 -> m2_56  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ErrorPage", style=dashed];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_17 -> m2_10  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_10  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_15  [key=2, style=dotted];
m2_19 -> m2_16  [color=blue, key=0, style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_75  [color=darkseagreen4, key=1, label=Table, style=dashed];
m2_74 -> m2_15  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_77  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_78  [key=2, style=dotted];
m2_76 -> m2_73  [color=blue, key=0, style=bold];
m2_92 -> m2_90  [color=blue, key=0, style=bold];
m2_91 -> m2_15  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_89  [key=2, style=dotted];
m2_91 -> m2_72  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_13 -> m2_10  [color=green, key=2, style=dotted];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_10  [key=2, style=dotted];
m2_12 -> m2_15  [key=2, style=dotted];
m2_14 -> m2_11  [color=blue, key=0, style=bold];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_25 -> m2_15  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_28  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_23  [color=blue, key=0, style=bold];
m2_88 -> m2_86  [color=blue, key=0, style=bold];
m2_87 -> m2_15  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [key=2, style=dotted];
m2_87 -> m2_72  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_33  [color=darkorchid, key=3, label="Local variable string createJobSql", style=bold];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_34 -> m2_32  [color=blue, key=0, style=bold];
m2_68 -> m2_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_68 -> m2_69  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_66  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_65  [key=2, style=dotted];
m2_71 -> m2_68  [color=blue, key=0, style=bold];
m2_93 -> m2_54  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_30  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_33  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_44  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_45  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_62  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m2_93 -> m2_69  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_21 -> m4_14  [color=green, key=2, style=dotted];
m4_21 -> m4_23  [color=green, key=1, label=connection, style=dashed];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_25  [color=green, key=2, style=dotted];
m4_23 -> m4_24  [color=green, key=0, style=solid];
m4_23 -> m4_26  [color=green, key=2, style=dotted];
m4_24 -> m4_20  [color=blue, key=0, style=bold];
m4_38 -> m4_39  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_54  [key=2, style=dotted];
m4_40 -> m4_55  [key=2, style=dotted];
m4_40 -> m4_56  [key=2, style=dotted];
m4_40 -> m4_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_43  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_40 -> m4_44  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_40 -> m4_48  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_40 -> m4_49  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_39  [color=darkorchid, key=3, label="Local variable string canNotParseMessage", style=bold];
m4_39 -> m4_50  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m4_39 -> m4_52  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_57  [key=2, style=dotted];
m4_41 -> m4_44  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_41 -> m4_45  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_41 -> m4_46  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_41 -> m4_49  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_41 -> m4_50  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_42  [key=0, style=solid];
m4_43 -> m4_58  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_59  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_47  [key=0, style=solid];
m4_48 -> m4_58  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_59  [key=2, style=dotted];
m4_50 -> m4_53  [key=0, style=solid];
m4_50 -> m4_61  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label=alias, style=dashed];
m4_42 -> m4_45  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_60  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [color=darkseagreen4, key=1, label=alias, style=dashed];
m4_47 -> m4_50  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_53 -> m4_38  [color=blue, key=0, style=bold];
m4_31 -> m4_33  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m4_31 -> m4_34  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m4_31 -> m4_32  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_37  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_37  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_36  [key=2, style=dotted];
m4_35 -> m4_31  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_14  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_16  [color=blue, key=0, style=bold];
m4_2 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m4_2 -> m4_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.Metric>", style=dashed];
m4_2 -> m4_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m4_7 -> m4_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m4_7 -> m4_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_5 -> m4_7  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_12  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_3 -> m4_5  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_6 -> m4_12  [key=0, style=solid];
m4_6 -> m4_13  [key=2, style=dotted];
m4_6 -> m4_2  [color=blue, key=0, style=bold];
m4_4 -> m4_12  [key=0, style=solid];
m4_4 -> m4_13  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_12 -> m4_2  [color=blue, key=0, style=bold];
m4_72 -> m4_73  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_63 -> m4_54  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_64 -> m4_62  [color=blue, key=0, style=bold];
m4_67 -> m4_65  [color=blue, key=0, style=bold];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_68  [key=2, style=dotted];
m4_71 -> m4_69  [color=blue, key=0, style=bold];
m4_70 -> m4_71  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_72  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_29 -> m4_27  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_14 -> m4_75  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_79  [key=2, style=dotted];
m4_75 -> m4_77  [color=darkseagreen4, key=1, label=connection, style=dashed];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_80  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_78 -> m4_14  [color=blue, key=0, style=bold];
m4_81 -> m4_21  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_22  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_81 -> m4_75  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [key=2, style=dotted];
m5_84 -> m5_82  [color=blue, key=0, style=bold];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_23  [key=2, style=dotted];
m5_99 -> m5_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_100 -> m5_98  [color=blue, key=0, style=bold];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_85 -> m5_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_85 -> m5_82  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m5_85 -> m5_83  [color=darkorchid, key=3, label="Parameter variable double score", style=bold];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_90  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m5_86 -> m5_86  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_23  [key=2, style=dotted];
m5_87 -> m5_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_88 -> m5_85  [color=blue, key=0, style=bold];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_23  [key=2, style=dotted];
m5_65 -> m5_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_66 -> m5_64  [color=blue, key=0, style=bold];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_44 -> m5_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_49  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m5_45 -> m5_45  [color=darkorchid, key=3, label="Local variable string addStateSql", style=bold];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_23  [key=2, style=dotted];
m5_46 -> m5_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_47 -> m5_44  [color=blue, key=0, style=bold];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_110 -> m5_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_115  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m5_111 -> m5_111  [color=darkorchid, key=3, label="Local variable string trimSql", style=bold];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_23  [key=2, style=dotted];
m5_112 -> m5_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_113 -> m5_110  [color=blue, key=0, style=bold];
m5_23 -> m5_117  [key=0, style=solid];
m5_23 -> m5_21  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_30  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_37  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_46  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_53  [color=red, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_59  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_65  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_71  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_77  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_87  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_93  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_99  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_105  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_23 -> m5_112  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_119  [key=2, style=dotted];
m5_118 -> m5_23  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_35 -> m5_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_40  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m5_36 -> m5_36  [color=darkorchid, key=3, label="Local variable string addAndSetStateSql", style=bold];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_23  [key=2, style=dotted];
m5_37 -> m5_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_38 -> m5_35  [color=blue, key=0, style=bold];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_23  [key=2, style=dotted];
m5_71 -> m5_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_72 -> m5_70  [color=blue, key=0, style=bold];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_23  [key=2, style=dotted];
m5_77 -> m5_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_78 -> m5_76  [color=blue, key=0, style=bold];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_23  [key=2, style=dotted];
m5_93 -> m5_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_94 -> m5_92  [color=blue, key=0, style=bold];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [key=2, style=dotted];
m5_21 -> m5_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_22 -> m5_20  [color=blue, key=0, style=bold];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_23  [key=2, style=dotted];
m5_105 -> m5_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_106 -> m5_104  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_15  [key=2, style=dotted];
m5_9 -> m5_16  [key=2, style=dotted];
m5_9 -> m5_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_17  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_19  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=0, style=solid];
m5_12 -> m5_11  [key=0, style=solid];
m5_12 -> m5_18  [key=2, style=dotted];
m5_14 -> m5_8  [color=blue, key=0, style=bold];
m5_114 -> m5_115  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_27  [key=2, style=dotted];
m5_25 -> m5_28  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_26 -> m5_24  [color=blue, key=0, style=bold];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_28  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_34 -> m5_32  [color=blue, key=0, style=bold];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [key=2, style=dotted];
m5_40 -> m5_43  [key=2, style=dotted];
m5_40 -> m5_28  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_41 -> m5_39  [color=blue, key=0, style=bold];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_42  [key=2, style=dotted];
m5_49 -> m5_43  [key=2, style=dotted];
m5_49 -> m5_28  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_50 -> m5_48  [color=blue, key=0, style=bold];
m5_56 -> m5_57  [color=red, key=0, style=solid];
m5_56 -> m5_28  [color=red, key=2, style=dotted];
m5_55 -> m5_56  [color=red, key=0, style=solid];
m5_55 -> m5_62  [color=green, key=0, style=solid];
m5_57 -> m5_55  [color=blue, key=0, style=bold];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_28  [key=2, style=dotted];
m5_62 -> m5_57  [color=green, key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_63 -> m5_61  [color=blue, key=0, style=bold];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_27  [key=2, style=dotted];
m5_68 -> m5_28  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_69 -> m5_67  [color=blue, key=0, style=bold];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_28  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_75 -> m5_73  [color=blue, key=0, style=bold];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_27  [key=2, style=dotted];
m5_80 -> m5_28  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_81 -> m5_79  [color=blue, key=0, style=bold];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_28  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_91 -> m5_89  [color=blue, key=0, style=bold];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_28  [key=2, style=dotted];
m5_95 -> m5_96  [key=0, style=solid];
m5_97 -> m5_95  [color=blue, key=0, style=bold];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_28  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_103 -> m5_101  [color=blue, key=0, style=bold];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_28  [key=2, style=dotted];
m5_107 -> m5_108  [key=0, style=solid];
m5_109 -> m5_107  [color=blue, key=0, style=bold];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_28  [key=2, style=dotted];
m5_116 -> m5_114  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_2 -> m5_4  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_51 -> m5_52  [color=red, key=0, style=solid];
m5_51 -> m5_53  [color=red, key=1, label=string, style=dashed];
m5_51 -> m5_56  [color=red, key=1, label=string, style=dashed];
m5_52 -> m5_53  [color=red, key=0, style=solid];
m5_52 -> m5_56  [color=red, key=1, label=enqueueJobSql, style=dashed];
m5_52 -> m5_52  [color=red, key=3, label="Local variable string enqueueJobSql", style=bold];
m5_53 -> m5_54  [color=red, key=0, style=solid];
m5_53 -> m5_23  [color=red, key=2, style=dotted];
m5_53 -> m5_55  [color=red, key=1, label="lambda expression", style=dashed];
m5_54 -> m5_51  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_23  [key=2, style=dotted];
m5_59 -> m5_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_59 -> m5_55  [color=green, key=1, label="lambda expression", style=dashed];
m5_60 -> m5_58  [color=blue, key=0, style=bold];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_23  [key=2, style=dotted];
m5_30 -> m5_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_29  [color=blue, key=0, style=bold];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_6  [color=blue, key=0, style=bold];
m5_120 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_53  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_59  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_65  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_71  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_77  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_83  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_87  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_93  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_99  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_105  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_112  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_120 -> m5_117  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_121 -> m5_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_122 -> m5_25  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_123 -> m5_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_124 -> m5_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_125 -> m5_40  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m5_126 -> m5_40  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m5_127 -> m5_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_128 -> m5_49  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m5_129 -> m5_49  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m5_130 -> m5_56  [color=red, key=1, label=string, style=dashed];
m5_130 -> m5_62  [color=green, key=1, label=string, style=dashed];
m5_131 -> m5_56  [color=red, key=1, label=string, style=dashed];
m5_131 -> m5_68  [color=green, key=1, label=string, style=dashed];
m5_132 -> m5_56  [color=red, key=1, label=enqueueJobSql, style=dashed];
m5_133 -> m5_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_134 -> m5_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_134 -> m5_80  [color=green, key=1, label=string, style=dashed];
m5_135 -> m5_68  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_136 -> m5_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_137 -> m5_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_138 -> m5_80  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_139 -> m5_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_140 -> m5_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_141 -> m5_90  [color=darkseagreen4, key=1, label=double, style=dashed];
m5_142 -> m5_90  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m5_143 -> m5_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_144 -> m5_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_145 -> m5_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_146 -> m5_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_147 -> m5_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_148 -> m5_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_149 -> m5_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_150 -> m5_115  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_151 -> m5_115  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_152 -> m5_115  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_7  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_3 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_6  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_11  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_2 -> m6_6  [key=0, style=solid];
m6_2 -> m6_8  [key=2, style=dotted];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_12  [color=blue, key=0, style=bold];
m6_17 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.QueueAttribute", style=dashed];
m6_17 -> m6_15  [color=darkseagreen4, key=1, label="HangFire.QueueAttribute", style=dashed];
}
