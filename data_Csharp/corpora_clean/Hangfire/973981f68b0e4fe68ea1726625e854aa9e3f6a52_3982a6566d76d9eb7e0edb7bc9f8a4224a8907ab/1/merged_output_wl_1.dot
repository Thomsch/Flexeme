digraph  {
n11 [label="Hangfire.States.StateContext", span=""];
n0 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24"];
n1 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", label="String.IsNullOrEmpty(jobId)", span="26-26"];
n3 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", label="JobId = jobId", span="28-28"];
n4 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", label="Job = job", span="29-29"];
n5 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", label="CreatedAt = createdAt", span="30-30"];
n2 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", label="throw new ArgumentNullException(''jobId'');", span="26-26"];
n7 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n6 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", label="Exit Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24"];
n8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n9 [cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", label="Entry Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="33-33"];
n10 [cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", label="Exit Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="33-33"];
m0_25 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m0_30 [cluster="string.Format(string, object)", file="ExpirationManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_31 [cluster="Unk.Execute", file="ExpirationManager.cs", label="Entry Unk.Execute", span=""];
m0_23 [cluster="string.Format(string, object, object)", file="ExpirationManager.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_24 [cluster="Hangfire.Logging.ILog.Trace(string)", file="ExpirationManager.cs", label="Entry Hangfire.Logging.ILog.Trace(string)", span="232-232"];
m0_26 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ExpirationManager.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m0_21 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ExpirationManager.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m0_22 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ExpirationManager.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174"];
m0_2 [cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="ExpirationManager.cs", label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m0_5 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="_storage = storage", span="51-51"];
m0_6 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="_checkInterval = checkInterval", span="52-52"];
m0_3 [cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="ExpirationManager.cs", label="Exit Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m0_4 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="throw new ArgumentNullException(''storage'');", span="49-49"];
m0_7 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="47-47"];
m0_0 [cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ExpirationManager.cs", label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23"];
m0_1 [cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ExpirationManager.cs", label="Exit Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23"];
m0_27 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="65-72"];
m0_28 [cluster="lambda expression", color=green, community=0, file="ExpirationManager.cs", label="0: removedCount = connection.Execute(\r\n                            String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                            new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="67-71"];
m0_29 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="65-72"];
m0_9 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Entry Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="55-55"];
m0_13 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ExpirationManager.cs", label="0: _storage.UseConnection(connection =>\r\n                    {\r\n                        removedCount = connection.Execute(\r\n                            String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                            new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                    })", span="65-72"];
m0_10 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label=ProcessedTables, span="57-57"];
m0_12 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ExpirationManager.cs", label="2: int removedCount = 0", span="61-61"];
m0_14 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="removedCount > 0", span="74-74"];
m0_15 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Logger.Trace(String.Format(''Removed {0} outdated record(s) from '{1}' table.'', removedCount,\r\n                            table))", span="76-77"];
m0_18 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="removedCount != 0", span="82-82"];
m0_11 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="59-59"];
m0_19 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="85-85"];
m0_16 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="79-79"];
m0_17 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="80-80"];
m0_20 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Exit Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="55-55"];
m0_35 [file="ExpirationManager.cs", label="Hangfire.SqlServer.ExpirationManager", span=""];
m0_36 [file="ExpirationManager.cs", label=table, span=""];
m1_0 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m1_1 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m1_2 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23"];
m1_3 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs", label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23"];
m2_0 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m2_1 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs", label="Canceled = canceled", span="14-14"];
m2_2 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs", label="Exception = exception", span="15-15"];
m2_3 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs", label="Exit HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m2_4 [file="MsmqJobQueueProvider.cs", label="HangFire.Filters.CreatedContext", span=""];
m3_12 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m3_13 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="return _jobQueue;", span="24-24"];
m3_14 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22"];
m3_0 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m3_1 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="queues == null", span="15-15"];
m3_3 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="configureAction == null", span="16-16"];
m3_5 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18"];
m3_6 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19"];
m3_2 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="throw new ArgumentNullException(''queues'');", span="15-15"];
m3_4 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="throw new ArgumentNullException(''configureAction'');", span="16-16"];
m3_7 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m3_10 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", span="15-15"];
m3_9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21"];
m3_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RabbitMqJobQueueProvider.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_15 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="27-27"];
m3_16 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="return _monitoringApi;", span="29-29"];
m3_17 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="27-27"];
m3_18 [file="RabbitMqJobQueueProvider.cs", label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span=""];
m4_116 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="148-148"];
m4_117 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", color=red, community=0, file="SqlServerConnection.cs", label="0: var handler = CreateStateHandler(OldStateName)", span="151-151"];
m4_118 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="var process = CreateProcess()", span="152-152"];
m4_119 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="155-155"];
m4_120 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="handler.Verify(\r\n                x => x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="158-160"];
m4_121 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="148-148"];
m4_0 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="25-25"];
m4_1 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs", label="_connection = new Mock<IStorageConnection>()", span="27-27"];
m4_2 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28"];
m4_3 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="29-29"];
m4_4 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs", label="_context = new StateContextMock { JobIdValue = JobId }", span="31-31"];
m4_5 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", color=red, community=0, file="SqlServerConnection.cs", label="0: _stateMachine = new Mock<IStateMachine>()", span="32-32"];
m4_6 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", color=red, community=0, file="SqlServerConnection.cs", label="0: _state = new Mock<IState>()", span="34-34"];
m4_7 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: new ProcessingJob(null, Queue)", span="15-15"];
m4_8 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="25-25"];
m4_15 [cluster="lambda expression", file="SqlServerConnection.cs", label="new ProcessingJob(JobId, null)", span="24-24"];
m4_10 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="SqlServerConnection.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m4_40 [cluster="StateChangeProcess.cstr", file="SqlServerConnection.cs", label="Entry StateChangeProcess.cstr", span=""];
m4_112 [cluster="Unk.Apply", file="SqlServerConnection.cs", label="Entry Unk.Apply", span=""];
m4_41 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="57-57"];
m4_42 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(_connection.Object, _handlers, null))", span="59-60"];
m4_43 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs", label="0: Assert.Equal(''filters'', exception.ParamName)", span="62-62"];
m4_44 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="57-57"];
m4_28 [cluster="Unk.Equal", file="SqlServerConnection.cs", label="Entry Unk.Equal", span=""];
m4_97 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="124-124"];
m4_98 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var handler1 = CreateStateHandler(StateName)", span="127-127"];
m4_99 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var handler2 = CreateStateHandler(StateName)", span="128-128"];
m4_100 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: _transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="130-132"];
m4_101 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: handler1.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="134-135"];
m4_102 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: handler2.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="136-137"];
m4_103 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var process = CreateProcess()", span="139-139"];
m4_104 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="142-142"];
m4_105 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="124-124"];
m4_205 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="248-248"];
m4_206 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var newState = new Mock<IState>()", span="251-251"];
m4_207 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var filter = CreateFilter<IElectStateFilter>()", span="252-252"];
m4_208 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs", label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext x) => x.CandidateState = newState.Object)", span="254-255"];
m4_209 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs", label="var process = CreateProcess()", span="257-257"];
m4_210 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs", label="0: process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="260-260"];
m4_211 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs", label="0: _transaction.Verify(x => x.AddJobState(JobId, _state.Object))", span="263-263"];
m4_212 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs", label="_transaction.Verify(x => x.Commit())", span="264-264"];
m4_213 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="248-248"];
m4_33 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="48-48"];
m4_34 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(_connection.Object, null, _filters))", span="50-51"];
m4_35 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs", label="0: Assert.Equal(''handlers'', exception.ParamName)", span="53-53"];
m4_36 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="48-48"];
m4_76 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="295-295"];
m4_250 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs", label="var handler = new Mock<IStateHandler>()", span="297-297"];
m4_251 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", color=red, community=0, file="SqlServerConnection.cs", label="0: handler.Setup(x => x.StateName).Returns(stateName)", span="298-298"];
m4_252 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs", label="_handlers.AddHandler(handler.Object)", span="300-300"];
m4_253 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs", label="return handler;", span="301-301"];
m4_254 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="295-295"];
m4_62 [cluster="Unk.SetJobState", file="SqlServerConnection.cs", label="Entry Unk.SetJobState", span=""];
m4_160 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="304-304"];
m4_260 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs", label="var filter = new Mock<T>()", span="306-306"];
m4_261 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs", label="_filters.Add(filter.Object)", span="307-307"];
m4_262 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs", label="return filter;", span="309-309"];
m4_263 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="304-304"];
m4_137 [cluster="Unk.ExpireJob", file="SqlServerConnection.cs", label="Entry Unk.ExpireJob", span=""];
m4_164 [cluster="Unk.OnStateUnapplied", file="SqlServerConnection.cs", label="Entry Unk.OnStateUnapplied", span=""];
m4_9 [cluster="Mock<IStorageConnection>.cstr", file="SqlServerConnection.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m4_27 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m4_238 [cluster="Unk.False", file="SqlServerConnection.cs", label="Entry Unk.False", span=""];
m4_198 [cluster="Unk.OnStateElection", file="SqlServerConnection.cs", label="Entry Unk.OnStateElection", span=""];
m4_56 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="290-290"];
m4_248 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="SqlServerConnection.cs", label="return new StateChangeProcess(_connection.Object, _handlers, _filters);", span="292-292"];
m4_249 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="290-290"];
m4_182 [cluster="Unk.OnStateApplied", file="SqlServerConnection.cs", label="Entry Unk.OnStateApplied", span=""];
m4_23 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="39-39"];
m4_24 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerConnection.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(null, _handlers, _filters))", span="41-42"];
m4_25 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerConnection.cs", label="0: Assert.Equal(''connection'', exception.ParamName)", span="44-44"];
m4_26 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="39-39"];
m4_57 [cluster="Unk.ChangeState", file="SqlServerConnection.cs", label="Entry Unk.ChangeState", span=""];
m4_125 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="164-164"];
m4_126 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", color=red, community=0, file="SqlServerConnection.cs", label="0: _state.Setup(x => x.IsFinal).Returns(true)", span="166-166"];
m4_127 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", color=red, community=0, file="SqlServerConnection.cs", label="0: var process = CreateProcess()", span="167-167"];
m4_128 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="SqlServerConnection.cs", label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="169-169"];
m4_129 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", color=red, community=0, file="SqlServerConnection.cs", label="0: _transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="171-171"];
m4_130 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="164-164"];
m4_236 [cluster="System.NotSupportedException.NotSupportedException()", file="SqlServerConnection.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m4_223 [cluster="Unk.AddJobState", file="SqlServerConnection.cs", label="Entry Unk.AddJobState", span=""];
m4_55 [cluster="Unk.InSequence", file="SqlServerConnection.cs", label="Entry Unk.InSequence", span=""];
m4_11 [cluster="Unk.Setup", file="SqlServerConnection.cs", label="Entry Unk.Setup", span=""];
m4_186 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="229-229"];
m4_187 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs", label="var anotherState = new Mock<IState>()", span="232-232"];
m4_188 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs", label="var filter = CreateFilter<IElectStateFilter>()", span="233-233"];
m4_189 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs", label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext context) => context.CandidateState = anotherState.Object)", span="235-236"];
m4_190 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="SqlServerConnection.cs", label="0: var process = CreateProcess()", span="238-238"];
m4_191 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="SqlServerConnection.cs", label="0: process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="241-241"];
m4_192 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs", label="_transaction.Verify(x => x.SetJobState(JobId, anotherState.Object))", span="244-244"];
m4_193 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="229-229"];
m4_237 [cluster="Unk.Throws", file="SqlServerConnection.cs", label="Entry Unk.Throws", span=""];
m4_80 [cluster="Unk.Unapply", file="SqlServerConnection.cs", label="Entry Unk.Unapply", span=""];
m4_256 [cluster="Unk.AddHandler", file="SqlServerConnection.cs", label="Entry Unk.AddHandler", span=""];
m4_151 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="186-186"];
m4_152 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="var filter1 = CreateFilter<IApplyStateFilter>()", span="189-189"];
m4_153 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="var filter2 = CreateFilter<IApplyStateFilter>()", span="190-190"];
m4_154 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="filter1.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="192-193"];
m4_155 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="filter2.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="194-195"];
m4_156 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="196-198"];
m4_157 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="var process = CreateProcess()", span="200-200"];
m4_158 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="203-203"];
m4_159 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="186-186"];
m4_17 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.CreateWriteTransaction()", span="29-29"];
m4_20 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: Entry lambda expression", span="35-35"];
m4_18 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="29-29"];
m4_19 [cluster="Unk.CreateWriteTransaction", file="SqlServerConnection.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m4_21 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.Name", span="35-35"];
m4_245 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="285-285"];
m4_16 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="29-29"];
m4_22 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="35-35"];
m4_29 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="42-42"];
m4_30 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: new StateChangeProcess(null, _handlers, _filters)", span="42-42"];
m4_31 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="42-42"];
m4_37 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="51-51"];
m4_38 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: new StateChangeProcess(_connection.Object, null, _filters)", span="51-51"];
m4_39 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="51-51"];
m4_45 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="60-60"];
m4_46 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: new StateChangeProcess(_connection.Object, _handlers, null)", span="60-60"];
m4_47 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="60-60"];
m4_59 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="69-69"];
m4_60 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.SetJobState(JobId, _state.Object)", span="69-69"];
m4_61 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="69-69"];
m4_63 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="70-70"];
m4_64 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Commit()", span="70-70"];
m4_65 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="70-70"];
m4_77 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="89-89"];
m4_78 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="89-89"];
m4_79 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="89-89"];
m4_81 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="93-93"];
m4_82 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="93-93"];
m4_83 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="93-93"];
m4_84 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="96-96"];
m4_85 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="96-96"];
m4_86 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="96-96"];
m4_94 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="119-119"];
m4_95 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="119-119"];
m4_96 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="119-119"];
m4_106 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="131-131"];
m4_107 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="131-131"];
m4_108 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="131-131"];
m4_109 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="134-134"];
m4_110 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="134-134"];
m4_111 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="134-134"];
m4_113 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="136-136"];
m4_114 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="136-136"];
m4_115 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="136-136"];
m4_122 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="159-159"];
m4_123 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="159-159"];
m4_124 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="159-159"];
m4_131 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="166-166"];
m4_132 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.IsFinal", span="166-166"];
m4_133 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="166-166"];
m4_134 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="171-171"];
m4_135 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="171-171"];
m4_136 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="171-171"];
m4_144 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="177-177"];
m4_145 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.IsFinal", span="177-177"];
m4_146 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="177-177"];
m4_147 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="182-182"];
m4_148 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.PersistJob(JobId)", span="182-182"];
m4_149 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="182-182"];
m4_161 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="192-192"];
m4_162 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="192-192"];
m4_163 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="192-192"];
m4_165 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="194-194"];
m4_166 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="194-194"];
m4_167 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="194-194"];
m4_168 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="197-197"];
m4_169 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="197-197"];
m4_170 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="197-197"];
m4_179 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="215-215"];
m4_180 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="215-215"];
m4_181 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="215-215"];
m4_183 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="217-217"];
m4_184 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="217-217"];
m4_185 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="217-217"];
m4_195 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="235-235"];
m4_196 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="235-235"];
m4_197 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="235-235"];
m4_199 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="236-236"];
m4_200 [cluster="lambda expression", file="SqlServerConnection.cs", label="context.CandidateState = anotherState.Object", span="236-236"];
m4_201 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="236-236"];
m4_202 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="244-244"];
m4_203 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.SetJobState(JobId, anotherState.Object)", span="244-244"];
m4_204 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="244-244"];
m4_214 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="254-254"];
m4_215 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="254-254"];
m4_216 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="254-254"];
m4_217 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="255-255"];
m4_218 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.CandidateState = newState.Object", span="255-255"];
m4_219 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="255-255"];
m4_220 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="263-263"];
m4_221 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.AddJobState(JobId, _state.Object)", span="263-263"];
m4_222 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="263-263"];
m4_224 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="264-264"];
m4_225 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Commit()", span="264-264"];
m4_226 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="264-264"];
m4_239 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="274-274"];
m4_240 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.OnStateApplied(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="274-274"];
m4_241 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="274-274"];
m4_242 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="283-285"];
m4_243 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: x.SetJobState(\r\n                JobId, \r\n                It.Is<FailedState>(s => s.Exception == exception))", span="283-285"];
m4_244 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="283-285"];
m4_246 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: s.Exception == exception", span="285-285"];
m4_247 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="285-285"];
m4_227 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="268-268"];
m4_228 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="var exception = new NotSupportedException()", span="271-271"];
m4_229 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="var filter = CreateFilter<IApplyStateFilter>()", span="272-272"];
m4_230 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="filter.Setup(x => x.OnStateApplied(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()))\r\n                .Throws(exception)", span="274-275"];
m4_231 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="var process = CreateProcess()", span="277-277"];
m4_232 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="var result = process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="280-280"];
m4_233 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="SqlServerConnection.cs", label="0: _transaction.Verify(x => x.SetJobState(\r\n                JobId, \r\n                It.Is<FailedState>(s => s.Exception == exception)))", span="283-285"];
m4_234 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="Assert.False(result)", span="287-287"];
m4_235 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="268-268"];
m4_93 [cluster="Unk.Verify", file="SqlServerConnection.cs", label="Entry Unk.Verify", span=""];
m4_171 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="209-209"];
m4_172 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var filter1 = CreateFilter<IApplyStateFilter>()", span="212-212"];
m4_173 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var filter2 = CreateFilter<IApplyStateFilter>()", span="213-213"];
m4_174 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: filter1.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="215-216"];
m4_175 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs", label="filter2.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="217-218"];
m4_176 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs", label="var process = CreateProcess()", span="220-220"];
m4_177 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs", label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="223-223"];
m4_178 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="209-209"];
m4_66 [cluster="Unk.Commit", file="SqlServerConnection.cs", label="Entry Unk.Commit", span=""];
m4_58 [cluster="Unk.True", file="SqlServerConnection.cs", label="Entry Unk.True", span=""];
m4_14 [cluster="Mock<IStateMachine>.cstr", file="SqlServerConnection.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m4_13 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10"];
m4_194 [cluster="Unk.Callback", file="SqlServerConnection.cs", label="Entry Unk.Callback", span=""];
m4_48 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="66-66"];
m4_49 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs", label="_transaction.Setup(x => x.SetJobState(JobId, _state.Object)).InSequence()", span="69-69"];
m4_50 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs", label="_transaction.Setup(x => x.Commit()).InSequence()", span="70-70"];
m4_51 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs", label="var process = CreateProcess()", span="72-72"];
m4_52 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs", label="var result = process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="75-75"];
m4_53 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs", label="Assert.True(result)", span="78-78"];
m4_54 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="66-66"];
m4_12 [cluster="Unk.Returns", file="SqlServerConnection.cs", label="Entry Unk.Returns", span=""];
m4_150 [cluster="Unk.PersistJob", file="SqlServerConnection.cs", label="Entry Unk.PersistJob", span=""];
m4_255 [cluster="Mock<IStateHandler>.cstr", file="SqlServerConnection.cs", label="Entry Mock<IStateHandler>.cstr", span=""];
m4_67 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="82-82"];
m4_68 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs", label="var handler1 = CreateStateHandler(OldStateName)", span="85-85"];
m4_69 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs", label="var handler2 = CreateStateHandler(OldStateName)", span="86-86"];
m4_70 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: handler1\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="88-90"];
m4_71 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs", label="handler2\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="92-94"];
m4_72 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs", label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="96-97"];
m4_73 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", color=red, community=0, file="SqlServerConnection.cs", label="0: var process = CreateProcess()", span="99-99"];
m4_74 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs", label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="102-102"];
m4_75 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="82-82"];
m4_32 [cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="SqlServerConnection.cs", label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42"];
m4_138 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="175-175"];
m4_139 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs", label="0: _state.Setup(x => x.IsFinal).Returns(false)", span="177-177"];
m4_140 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs", label="0: var process = CreateProcess()", span="178-178"];
m4_141 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs", label="0: process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="180-180"];
m4_142 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs", label="0: _transaction.Verify(x => x.PersistJob(JobId))", span="182-182"];
m4_143 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="175-175"];
m4_87 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="108-108"];
m4_88 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="var handler = CreateStateHandler(StateName)", span="111-111"];
m4_89 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="var process = CreateProcess()", span="112-112"];
m4_90 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="115-115"];
m4_91 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", color=red, community=0, file="SqlServerConnection.cs", label="0: handler.Verify(\r\n                x => x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="118-120"];
m4_92 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="108-108"];
m6_18 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="54-59"];
m6_19 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: connection.Execute(\r\n                    ''delete from HangFire.JobQueue where Id = @id'',\r\n                    new { id = Id })", span="56-58"];
m6_20 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="54-59"];
m6_23 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: _disposed", span="72-72"];
m6_21 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61"];
m6_0 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31"];
m6_1 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: connection == null", span="37-37"];
m6_2 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: throw new ArgumentNullException(''connection'');", span="37-37"];
m6_3 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="jobId == null", span="38-38"];
m6_7 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: _connection = connection", span="41-41"];
m6_5 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="queue == null", span="39-39"];
m6_8 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Id = id", span="43-43"];
m6_9 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="JobId = jobId", span="44-44"];
m6_10 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Queue = queue", span="45-45"];
m6_4 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''jobId'');", span="38-38"];
m6_6 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''queue'');", span="39-39"];
m6_11 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31"];
m6_17 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174"];
m6_22 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70"];
m6_24 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="return;", span="72-72"];
m6_25 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="!_removedFromQueue && !_requeued", span="74-74"];
m6_26 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Entry lambda expression", span="66-71"];
m6_27 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: connection.Execute(\r\n                    ''update HangFire.JobQueue set FetchedAt = null where Id = @id'',\r\n                    new { id = Id })", span="68-70"];
m6_28 [cluster="lambda expression", file="SqlServerFetchedJob.cs", label="Exit lambda expression", span="66-71"];
m6_13 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m6_14 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: _storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    ''delete from HangFire.JobQueue where Id = @id'',\r\n                    new { id = Id });\r\n            })", span="54-59"];
m6_15 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="_removedFromQueue = true", span="58-58"];
m6_16 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m6_29 [file="SqlServerFetchedJob.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
m7_33 [cluster="int.ToString(System.IFormatProvider)", file="SqlServerJobQueue.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m7_14 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="1: FetchedJob fetchedJob = null", span="47-47"];
m7_13 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="45-45"];
m7_37 [cluster="string.Format(string, object)", file="SqlServerJobQueue.cs", label="Entry string.Format(string, object)", span="0-0"];
m7_38 [cluster="System.TimeSpan.Negate()", file="SqlServerJobQueue.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m7_39 [cluster="Unk.>", file="SqlServerJobQueue.cs", label="Entry Unk.>", span=""];
m7_0 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="SqlServerJobQueue.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m7_1 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _name = name", span="16-16"];
m7_2 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _results = results", span="17-17"];
m7_3 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="SqlServerJobQueue.cs", label="Exit HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m7_5 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: Assert.IsNotNull(transaction)", span="22-22"];
m7_6 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs", label="Assert.IsFalse(String.IsNullOrEmpty(jobId))", span="23-23"];
m7_4 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="20-20"];
m7_7 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs", label="Assert.IsNotNull(state)", span="24-24"];
m7_12 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="queues.Length == 0", span="45-45"];
m7_30 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174"];
m7_29 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m7_32 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, int, string, string)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, int, string, string)", span="31-31"];
m7_15 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue with (readpast) set FetchedAt = GETUTCDATE()\r\noutput INSERTED.Id, INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="49-54"];
m7_16 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="58-58"];
m7_17 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: var currentQueryIndex = 0", span="59-59"];
m7_18 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="63-63"];
m7_19 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _storage.UseConnection(connection =>\r\n                {\r\n                    fetchedJob = connection.Query<FetchedJob>(\r\n                        String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                        new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                        .SingleOrDefault();\r\n                })", span="65-71"];
m7_20 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob == null", span="73-73"];
m7_11 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="throw new ArgumentNullException(''queues'');", span="44-44"];
m7_45 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Entry lambda expression", span="97-100"];
m7_34 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Entry lambda expression", span="65-71"];
m7_35 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueue.cs", label="0: fetchedJob = connection.Query<FetchedJob>(\r\n                        String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                        new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                        .SingleOrDefault()", span="67-70"];
m7_36 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Exit lambda expression", span="65-71"];
m7_46 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueue.cs", label="0: connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue })", span="99-99"];
m7_47 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Exit lambda expression", span="97-100"];
m7_10 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="queues == null", span="44-44"];
m7_8 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="26-26"];
m7_9 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42"];
m7_28 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m7_31 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerJobQueue.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m7_48 [cluster="Unk.Execute", file="SqlServerJobQueue.cs", label="Entry Unk.Execute", span=""];
m7_41 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", span="92-92"];
m7_43 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue });\r\n            })", span="97-100"];
m7_42 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue) values (@jobId, @queue)''", span="94-95"];
m7_44 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", span="92-92"];
m7_40 [cluster="Unk.SingleOrDefault", file="SqlServerJobQueue.cs", label="Entry Unk.SingleOrDefault", span=""];
m7_25 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob == null", span="83-83"];
m7_26 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: return new SqlServerFetchedJob(\r\n                _storage,\r\n                fetchedJob.Id,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="85-89"];
m7_22 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="77-77"];
m7_21 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="HangFire.Tests.TestStateChangedFilter", span=""];
m7_24 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="82-82"];
m7_23 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="78-78"];
m7_27 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42"];
m7_49 [file="SqlServerJobQueue.cs", label="Hangfire.SqlServer.SqlServerJobQueue", span=""];
m7_50 [file="SqlServerJobQueue.cs", label="string[]", span=""];
m7_51 [file="SqlServerJobQueue.cs", label=fetchJobSqlTemplate, span=""];
m7_52 [file="SqlServerJobQueue.cs", label=fetchConditions, span=""];
m7_53 [file="SqlServerJobQueue.cs", label=currentQueryIndex, span=""];
m7_54 [file="SqlServerJobQueue.cs", label=string, span=""];
m7_55 [file="SqlServerJobQueue.cs", label=string, span=""];
m7_56 [file="SqlServerJobQueue.cs", label=enqueueJobSql, span=""];
m9_22 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerJobQueueProvider.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_30 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44"];
m9_24 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92"];
m9_25 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs", label="String.IsNullOrEmpty(name)", span="94-94"];
m9_27 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="96-98"];
m9_26 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs", label="throw new ArgumentNullException(''name'');", span="94-94"];
m9_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92"];
m9_12 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerJobQueueProvider.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19"];
m9_16 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70"];
m9_0 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27"];
m9_1 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: storage == null", span="29-29"];
m9_2 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: throw new ArgumentNullException(''storage'');", span="29-29"];
m9_3 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="options == null", span="30-30"];
m9_4 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="throw new ArgumentNullException(''options'');", span="30-30"];
m9_5 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: _storage = storage", span="32-32"];
m9_6 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", label="_options = options", span="33-33"];
m9_7 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=red, community=0, file="SqlServerJobQueueProvider.cs", label="2: Exit Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27"];
m9_8 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerJobQueueProvider.cs", label="Type = type", span="35-35"];
m9_9 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", color=red, community=0, file="SqlServerJobQueueProvider.cs", label="0: Entry Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", span="38-38"];
m9_10 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: return new SqlServerJobQueue(_storage, _options);", span="40-40"];
m9_11 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", color=red, community=0, file="SqlServerJobQueueProvider.cs", label="0: Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", span="38-38"];
m9_21 [cluster="string.IsNullOrEmpty(string)", file="SqlServerJobQueueProvider.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_13 [cluster="System.Diagnostics.Debug.Assert(bool)", file="SqlServerJobQueueProvider.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m9_14 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", color=green, community=0, file="SqlServerJobQueueProvider.cs", label="0: Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m9_15 [cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m9_17 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs", label="Hangfire.SqlServer.SqlServerJobQueueProvider", span=""];
m9_19 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs", label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="77-77"];
m9_18 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs", label="throw new ArgumentNullException(''name'');", span="72-72"];
m9_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70"];
m9_34 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58"];
m9_31 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="101-101"];
m9_32 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerJobQueueProvider.cs", label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="103-103"];
m9_33 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerJobQueueProvider.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101"];
m9_29 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerJobQueueProvider.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerJobQueueProvider.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m9_35 [file="SqlServerJobQueueProvider.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m10_12 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.ProcessingJob.Dispose()", span="39-39"];
m10_13 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="SqlServerMonitoringApi.cs", label="_connection.DeleteJobFromQueue(JobId, Queue)", span="41-41"];
m10_14 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Storage.ProcessingJob.Dispose()", span="39-39"];
m10_0 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24"];
m10_9 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: Queue = queue", span="33-33"];
m10_8 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="JobId = jobId", span="32-32"];
m10_7 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="_connection = connection", span="30-30"];
m10_1 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="connection == null", span="26-26"];
m10_3 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="jobId == null", span="27-27"];
m10_5 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="queue == null", span="28-28"];
m10_2 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(''connection'');", span="26-26"];
m10_4 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(''jobId'');", span="27-27"];
m10_6 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(''queue'');", span="28-28"];
m10_10 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24"];
m10_15 [cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31"];
m10_16 [file="SqlServerMonitoringApi.cs", label="HangFire.Storage.ProcessingJob", span=""];
m11_25 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44"];
m11_26 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerStorage.cs", label="return JsonSerializer.DeserializeFromString<T>(value);", span="46-46"];
m11_27 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.FromJson<T>(string)", span="44-44"];
m11_40 [cluster="long.ToString()", file="SqlServerStorage.cs", label="Entry long.ToString()", span="0-0"];
m11_44 [cluster="long.Parse(string)", file="SqlServerStorage.cs", label="Entry long.Parse(string)", span="0-0"];
m11_33 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57"];
m11_34 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerStorage.cs", label="return Epoch.AddSeconds(value);", span="59-59"];
m11_35 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.FromTimestamp(long)", span="57-57"];
m11_36 [cluster="System.DateTime.AddSeconds(double)", file="SqlServerStorage.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m11_21 [cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m11_22 [cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerStorage.cs", label="return JsonSerializer.SerializeToString(value);", span="41-41"];
m11_23 [cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.ToJson(object)", span="39-39"];
m11_55 [cluster="string.Format(string, object)", file="SqlServerStorage.cs", label="Entry string.Format(string, object)", span="0-0"];
m11_20 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.ValidateQueueName(string)", span="82-82"];
m11_50 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs", label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="84-84"];
m11_51 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="86-87"];
m11_52 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.ValidateQueueName(string)", span="82-82"];
m11_37 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62"];
m11_38 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs", label="return ToTimestamp(value).ToString();", span="64-64"];
m11_39 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62"];
m11_16 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="SqlServerStorage.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m11_29 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51"];
m11_30 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs", label="TimeSpan elapsedTime = value - Epoch", span="53-53"];
m11_31 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs", label="return (long)elapsedTime.TotalSeconds;", span="54-54"];
m11_32 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51"];
m11_28 [cluster="Unk.>", file="SqlServerStorage.cs", label="Entry Unk.>", span=""];
m11_7 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="22-22"];
m11_8 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="jobType == null", span="24-24"];
m11_10 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="var attribute = jobType\r\n                .GetCustomAttributes(true)\r\n                .OfType<QueueAttribute>()\r\n                .FirstOrDefault()", span="26-29"];
m11_9 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''jobType'');", span="24-24"];
m11_11 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="var queueName = attribute != null \r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="31-33"];
m11_12 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="ValidateQueueName(queueName)", span="34-34"];
m11_13 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="return queueName;", span="36-36"];
m11_14 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.GetQueue(System.Type)", span="22-22"];
m11_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="SqlServerStorage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m11_45 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72"];
m11_46 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs", label="String.IsNullOrEmpty(value)", span="74-74"];
m11_48 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs", label="return FromStringTimestamp(value);", span="79-79"];
m11_47 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs", label="return null;", span="76-76"];
m11_49 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72"];
m11_6 [cluster="System.Type.GetType(string)", file="SqlServerStorage.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m11_54 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerStorage.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m11_19 [cluster="string.IsNullOrEmpty(string)", file="SqlServerStorage.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_24 [cluster="Unk.SerializeToString", file="SqlServerStorage.cs", label="Entry Unk.SerializeToString", span=""];
m11_53 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="SqlServerStorage.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m11_17 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SqlServerStorage.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m11_41 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="67-67"];
m11_42 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerStorage.cs", label="return FromTimestamp(long.Parse(value));", span="69-69"];
m11_43 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.FromStringTimestamp(string)", span="67-67"];
m11_0 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="11-11"];
m11_1 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs", label="var type = Type.GetType(jobType)", span="13-13"];
m11_2 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs", label="type == null", span="14-14"];
m11_4 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs", label="return GetQueue(type);", span="19-19"];
m11_3 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs", label="return null;", span="16-16"];
m11_5 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs", label="Exit HangFire.JobHelper.TryToGetQueue(string)", span="11-11"];
m12_2 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m12_3 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m12_6 [cluster="MvcSample.HangFireConfig.Stop()", file="SqlServerWriteOnlyTransaction.cs", label="Entry MvcSample.HangFireConfig.Stop()", span="46-46"];
m12_7 [cluster="MvcSample.HangFireConfig.Stop()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _server.Stop()", span="48-48"];
m12_8 [cluster="MvcSample.HangFireConfig.Stop()", file="SqlServerWriteOnlyTransaction.cs", label="Exit MvcSample.HangFireConfig.Stop()", span="46-46"];
m12_0 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m12_1 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m12_9 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63"];
n11 -> n3  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
n11 -> n4  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
n11 -> n5  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n1 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n3  [color=darkorchid, key=3, label="Field variable int NumberOfRecordsInSinglePass", style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n2 -> n6  [key=0, style=solid];
n2 -> n8  [key=2, style=dotted];
n6 -> n0  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n10 -> n9  [color=blue, key=0, style=bold];
m0_2 -> m0_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m0_2 -> m0_6  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_4 -> m0_7  [key=0, style=solid];
m0_4 -> n8  [key=2, style=dotted];
m0_7 -> m0_2  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_27 -> m0_28  [color=green, key=0, style=solid];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_30  [color=green, key=2, style=dotted];
m0_28 -> m0_31  [color=green, key=2, style=dotted];
m0_29 -> m0_27  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_9 -> m0_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_22  [color=green, key=2, style=dotted];
m0_13 -> m0_27  [color=green, key=1, label="lambda expression", style=dashed];
m0_13 -> m0_15  [color=green, key=1, label=removedCount, style=dashed];
m0_13 -> m0_18  [color=green, key=1, label=removedCount, style=dashed];
m0_10 -> m0_13  [color=green, key=1, label=table, style=dashed];
m0_10 -> m0_28  [color=green, key=1, label=table, style=dashed];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_19  [key=0, style=solid];
m0_10 -> m0_15  [color=darkseagreen4, key=1, label=table, style=dashed];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_12 -> m0_12  [color=green, key=3, label="Local variable int removedCount", style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_23  [key=2, style=dotted];
m0_15 -> m0_24  [key=2, style=dotted];
m0_18 -> m0_12  [color=green, key=0, style=solid];
m0_18 -> m0_10  [key=0, style=solid];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_25  [key=2, style=dotted];
m0_16 -> m0_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_25  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_17 -> m0_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_17 -> m0_26  [key=2, style=dotted];
m0_20 -> m0_9  [color=blue, key=0, style=bold];
m0_35 -> m0_13  [color=green, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m0_35 -> m0_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m0_35 -> m0_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m0_35 -> m0_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m0_36 -> m0_28  [color=green, key=1, label=table, style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m2_4 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_11  [key=2, style=dotted];
m3_2 -> m3_7  [key=0, style=solid];
m3_2 -> n8  [key=2, style=dotted];
m3_4 -> m3_7  [key=0, style=solid];
m3_4 -> n8  [key=2, style=dotted];
m3_7 -> m3_0  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_15  [color=blue, key=0, style=bold];
m3_18 -> m3_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m3_18 -> m3_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m3_18 -> m3_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m3_18 -> m3_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m4_120 -> m4_120  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m4_7 -> m4_9  [key=2, style=dotted];
m4_7 -> m4_18  [key=0, style=solid];
m4_15 -> m4_9  [key=2, style=dotted];
m4_15 -> m4_22  [key=0, style=solid];
m4_42 -> m4_5  [color=red, key=3, label="Property variable SqlConnection Connection", style=bold];
m4_129 -> m4_125  [color=red, key=3, label="Local variable Hangfire.Common.JobLoadException loadException", style=bold];
m4_129 -> m4_139  [color=red, key=3, label="Local variable Hangfire.Common.JobLoadException loadException", style=bold];
m4_155 -> m4_155  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_20 -> m4_28  [color=green, key=2, style=dotted];
m4_20 -> m4_15  [key=0, style=solid];
m4_18 -> m4_20  [color=green, key=1, label=processingJob, style=dashed];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_9  [key=2, style=dotted];
m4_18 -> m4_16  [color=green, key=0, style=bold];
m4_19 -> m4_20  [color=green, key=0, style=solid];
m4_19 -> m4_28  [key=2, style=dotted];
m4_21 -> m4_17  [color=blue, key=0, style=bold];
m4_16 -> m4_7  [key=0, style=solid];
m4_22 -> m4_20  [color=green, key=0, style=bold];
m4_228 -> m4_228  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m6_18 -> m6_19  [color=green, key=0, style=solid];
m6_18 -> m6_23  [color=green, key=0, style=solid];
m6_19 -> m6_20  [color=green, key=0, style=solid];
m6_19 -> m6_17  [color=green, key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_23 -> m6_20  [color=green, key=0, style=solid];
m6_23 -> m6_17  [color=green, key=2, style=dotted];
m6_23 -> m6_26  [color=green, key=1, label="lambda expression", style=dashed];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=0, style=solid];
m6_21 -> m6_18  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_0 -> m6_7  [color=red, key=1, label=IDbConnection, style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_0 -> m6_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_1 -> m6_3  [color=red, key=0, style=solid];
m6_2 -> m6_11  [color=red, key=0, style=solid];
m6_2 -> n8  [color=red, key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_5 -> m6_7  [color=red, key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_4 -> m6_11  [key=0, style=solid];
m6_4 -> n8  [key=2, style=dotted];
m6_6 -> m6_11  [key=0, style=solid];
m6_6 -> n8  [key=2, style=dotted];
m6_11 -> m6_0  [color=blue, key=0, style=bold];
m6_22 -> m6_23  [key=0, style=solid];
m6_24 -> m6_28  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_26 -> m6_27  [color=green, key=0, style=solid];
m6_26 -> m6_18  [key=2, style=dotted];
m6_27 -> m6_28  [color=green, key=0, style=solid];
m6_27 -> m6_17  [color=green, key=2, style=dotted];
m6_28 -> m6_22  [color=blue, key=0, style=bold];
m6_28 -> m6_26  [color=blue, key=0, style=bold];
m6_13 -> m6_14  [color=green, key=0, style=solid];
m6_14 -> m6_15  [color=green, key=0, style=solid];
m6_14 -> m6_17  [color=green, key=2, style=dotted];
m6_14 -> m6_18  [color=green, key=1, label="lambda expression", style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_13  [color=blue, key=0, style=bold];
m6_29 -> m6_7  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_14  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_19  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_23  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m6_29 -> m6_27  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m7_14 -> m7_14  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue.FetchedJob fetchedJob", style=bold];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_13 -> m7_27  [key=0, style=solid];
m7_13 -> m7_28  [key=2, style=dotted];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_0 -> m7_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [color=green, key=0, style=solid];
m7_2 -> n8  [color=green, key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_5  [color=green, key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_10  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_11  [key=2, style=dotted];
m7_6 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_7  [key=0, style=solid];
m7_4 -> n8  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_7 -> m7_0  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_10  [key=2, style=dotted];
m7_12 -> m7_14  [color=green, key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [color=red, key=1, label=string, style=dashed];
m7_15 -> m7_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_15 -> m7_19  [color=green, key=1, label=fetchJobSqlTemplate, style=dashed];
m7_15 -> m7_35  [color=green, key=1, label=fetchJobSqlTemplate, style=dashed];
m7_15 -> m7_15  [color=darkorchid, key=3, label="Local variable string fetchJobSqlTemplate", style=bold];
m7_16 -> m7_17  [color=red, key=0, style=solid];
m7_16 -> m7_10  [key=2, style=dotted];
m7_16 -> m7_19  [color=green, key=1, label=fetchConditions, style=dashed];
m7_16 -> m7_35  [color=green, key=1, label=fetchConditions, style=dashed];
m7_16 -> m7_21  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m7_16 -> m7_24  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m7_17 -> m7_18  [color=red, key=0, style=solid];
m7_17 -> m7_11  [color=red, key=2, style=dotted];
m7_17 -> m7_12  [color=red, key=2, style=dotted];
m7_17 -> m7_19  [color=green, key=1, label=currentQueryIndex, style=dashed];
m7_17 -> m7_35  [color=green, key=1, label=currentQueryIndex, style=dashed];
m7_17 -> m7_17  [color=darkorchid, key=3, label="Local variable int currentQueryIndex", style=bold];
m7_17 -> m7_21  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m7_17 -> m7_24  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m7_18 -> m7_19  [color=green, key=0, style=solid];
m7_18 -> m7_11  [key=2, style=dotted];
m7_18 -> m7_12  [key=2, style=dotted];
m7_18 -> m7_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_18 -> m7_29  [key=2, style=dotted];
m7_18 -> m7_22  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_19 -> m7_13  [color=red, key=2, style=dotted];
m7_19 -> m7_14  [color=red, key=2, style=dotted];
m7_19 -> m7_30  [color=green, key=2, style=dotted];
m7_19 -> m7_34  [color=green, key=1, label="lambda expression", style=dashed];
m7_19 -> m7_25  [color=green, key=1, label=fetchedJob, style=dashed];
m7_19 -> m7_26  [color=green, key=1, label=fetchedJob, style=dashed];
m7_20 -> m7_15  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=0, style=solid];
m7_11 -> n8  [key=2, style=dotted];
m7_11 -> m7_27  [key=0, style=solid];
m7_45 -> m7_46  [color=green, key=0, style=solid];
m7_34 -> m7_35  [color=green, key=0, style=solid];
m7_35 -> m7_36  [color=green, key=0, style=solid];
m7_35 -> m7_37  [color=green, key=2, style=dotted];
m7_35 -> m7_38  [color=green, key=2, style=dotted];
m7_35 -> m7_39  [color=green, key=2, style=dotted];
m7_35 -> m7_40  [color=green, key=2, style=dotted];
m7_36 -> m7_34  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [color=green, key=0, style=solid];
m7_46 -> m7_48  [color=green, key=2, style=dotted];
m7_47 -> m7_45  [color=blue, key=0, style=bold];
m7_10 -> m7_12  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_13  [key=2, style=dotted];
m7_8 -> m7_14  [key=2, style=dotted];
m7_9 -> m7_4  [color=blue, key=0, style=bold];
m7_9 -> m7_19  [color=green, key=1, label="string[]", style=dashed];
m7_9 -> m7_35  [color=green, key=1, label="string[]", style=dashed];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_9 -> m7_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_41 -> m7_43  [color=green, key=1, label=string, style=dashed];
m7_41 -> m7_46  [color=green, key=1, label=string, style=dashed];
m7_41 -> m7_42  [key=0, style=solid];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_43 -> m7_30  [color=green, key=2, style=dotted];
m7_43 -> m7_45  [color=green, key=1, label="lambda expression", style=dashed];
m7_42 -> m7_43  [color=green, key=0, style=solid];
m7_42 -> m7_46  [color=green, key=1, label=enqueueJobSql, style=dashed];
m7_42 -> m7_42  [color=darkorchid, key=3, label="Local variable string enqueueJobSql", style=bold];
m7_44 -> m7_41  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_17  [key=0, style=solid];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_32  [color=green, key=2, style=dotted];
m7_26 -> m7_33  [color=green, key=2, style=dotted];
m7_22 -> m7_22  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_31  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_24  [key=0, style=solid];
m7_21 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m7_21 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m7_21 -> m7_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m7_21 -> m7_19  [color=red, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_24  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m7_23 -> m7_29  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_27 -> m7_9  [color=blue, key=0, style=bold];
m7_49 -> m7_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m7_49 -> m7_19  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m7_49 -> m7_35  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m7_49 -> m7_26  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m7_49 -> m7_43  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m7_49 -> m7_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m7_49 -> m7_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m7_50 -> m7_35  [color=green, key=1, label="string[]", style=dashed];
m7_51 -> m7_35  [color=green, key=1, label=fetchJobSqlTemplate, style=dashed];
m7_52 -> m7_35  [color=green, key=1, label=fetchConditions, style=dashed];
m7_53 -> m7_35  [color=green, key=1, label=currentQueryIndex, style=dashed];
m7_54 -> m7_46  [color=green, key=1, label=string, style=dashed];
m7_55 -> m7_46  [color=green, key=1, label=string, style=dashed];
m7_56 -> m7_46  [color=green, key=1, label=enqueueJobSql, style=dashed];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=0, style=solid];
m9_25 -> m9_21  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=2, style=dotted];
m9_27 -> m9_30  [key=2, style=dotted];
m9_26 -> m9_28  [key=0, style=solid];
m9_26 -> m9_22  [key=2, style=dotted];
m9_28 -> m9_24  [color=blue, key=0, style=bold];
m9_12 -> m9_0  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_0 -> m9_1  [color=green, key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m9_0 -> m9_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m9_0 -> m9_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m9_0 -> m9_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m9_0 -> m9_7  [color=red, key=1, label=string, style=dashed];
m9_0 -> m9_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_0 -> m9_9  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m9_0 -> m9_10  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_0 -> m9_11  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_13  [key=2, style=dotted];
m9_1 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_13  [key=2, style=dotted];
m9_2 -> m9_7  [color=green, key=0, style=solid];
m9_2 -> n8  [color=green, key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_13  [key=2, style=dotted];
m9_3 -> m9_5  [color=green, key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_13  [key=2, style=dotted];
m9_4 -> m9_7  [key=0, style=solid];
m9_4 -> n8  [key=2, style=dotted];
m9_5 -> m9_6  [color=green, key=0, style=solid];
m9_5 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_7  [color=red, key=0, style=solid];
m9_6 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_8  [color=red, key=0, style=solid];
m9_7 -> m9_0  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [color=red, key=0, style=solid];
m9_9 -> m9_10  [color=green, key=0, style=solid];
m9_10 -> m9_11  [color=green, key=0, style=solid];
m9_10 -> m9_12  [color=green, key=2, style=dotted];
m9_11 -> m9_12  [color=red, key=0, style=solid];
m9_11 -> m9_15  [color=red, key=2, style=dotted];
m9_11 -> m9_9  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [color=green, key=0, style=solid];
m9_14 -> m9_15  [color=green, key=0, style=solid];
m9_14 -> m9_16  [color=green, key=2, style=dotted];
m9_15 -> m9_13  [color=blue, key=0, style=bold];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_17 -> m9_21  [key=2, style=dotted];
m9_17 -> m9_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m9_17 -> m9_10  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m9_17 -> m9_14  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m9_17 -> m9_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueProvider", style=dashed];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_15  [key=2, style=dotted];
m9_19 -> m9_23  [key=2, style=dotted];
m9_18 -> m9_20  [key=0, style=solid];
m9_18 -> m9_22  [key=2, style=dotted];
m9_20 -> m9_16  [color=blue, key=0, style=bold];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [key=2, style=dotted];
m9_33 -> m9_31  [color=blue, key=0, style=bold];
m9_35 -> m9_6  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_7  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_9  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_11  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_19  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_27  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m9_35 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m10_12 -> m10_13  [key=0, style=solid];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_15  [key=2, style=dotted];
m10_14 -> m10_12  [color=blue, key=0, style=bold];
m10_0 -> m10_9  [color=green, key=1, label=string, style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_2 -> m10_10  [key=0, style=solid];
m10_2 -> n8  [key=2, style=dotted];
m10_4 -> m10_10  [key=0, style=solid];
m10_4 -> n8  [key=2, style=dotted];
m10_6 -> m10_10  [key=0, style=solid];
m10_6 -> n8  [key=2, style=dotted];
m10_10 -> m10_0  [color=blue, key=0, style=bold];
m10_16 -> m10_9  [color=green, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m10_16 -> m10_7  [color=darkseagreen4, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m10_16 -> m10_8  [color=darkseagreen4, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m10_16 -> m10_13  [color=darkseagreen4, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_28  [key=2, style=dotted];
m11_27 -> m11_25  [color=blue, key=0, style=bold];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_36  [key=2, style=dotted];
m11_35 -> m11_33  [color=blue, key=0, style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=2, style=dotted];
m11_23 -> m11_21  [color=blue, key=0, style=bold];
m11_20 -> m11_50  [key=0, style=solid];
m11_20 -> m11_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_20 -> m11_11  [color=darkorchid, key=3, label="Parameter variable string queue", style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_52  [key=0, style=solid];
m11_50 -> m11_53  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_54  [key=2, style=dotted];
m11_51 -> m11_55  [key=2, style=dotted];
m11_52 -> m11_20  [color=blue, key=0, style=bold];
m11_37 -> m11_38  [key=0, style=solid];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_29  [key=2, style=dotted];
m11_38 -> m11_40  [key=2, style=dotted];
m11_39 -> m11_37  [color=blue, key=0, style=bold];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_37  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_31  [color=darkseagreen4, key=1, label=elapsedTime, style=dashed];
m11_32 -> m11_29  [color=blue, key=0, style=bold];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_7 -> m11_1  [color=darkorchid, key=3, label="Parameter variable System.Type jobType", style=bold];
m11_7 -> m11_11  [color=darkorchid, key=3, label="method methodReturn string GetQueue", style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_16  [key=2, style=dotted];
m11_10 -> m11_17  [key=2, style=dotted];
m11_10 -> m11_18  [key=2, style=dotted];
m11_9 -> m11_14  [key=0, style=solid];
m11_9 -> n8  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_19  [key=2, style=dotted];
m11_11 -> m11_13  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_20  [key=2, style=dotted];
m11_12 -> m11_31  [color=darkorchid, key=3, label="Field variable Hangfire.SqlServer.SqlServerStorageOptions _options", style=bold];
m11_13 -> m11_14  [key=0, style=solid];
m11_14 -> m11_7  [color=blue, key=0, style=bold];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_45 -> m11_3  [color=darkorchid, key=3, label="method methodReturn System.DateTime? FromNullableStringTimestamp", style=bold];
m11_45 -> m11_41  [color=darkorchid, key=3, label="method methodReturn System.DateTime? FromNullableStringTimestamp", style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_48  [key=0, style=solid];
m11_46 -> m11_19  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_41  [key=2, style=dotted];
m11_47 -> m11_49  [key=0, style=solid];
m11_49 -> m11_45  [color=blue, key=0, style=bold];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_33  [color=darkorchid, key=3, label="method methodReturn System.DateTime FromStringTimestamp", style=bold];
m11_41 -> m11_45  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=2, style=dotted];
m11_42 -> m11_33  [key=2, style=dotted];
m11_43 -> m11_41  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [color=darkorchid, key=3, label="method methodReturn string TryToGetQueue", style=bold];
m11_0 -> m11_7  [color=darkorchid, key=3, label="method methodReturn string TryToGetQueue", style=bold];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_6  [key=2, style=dotted];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label=type, style=dashed];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_7  [key=2, style=dotted];
m11_3 -> m11_5  [key=0, style=solid];
m11_5 -> m11_0  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [color=blue, key=0, style=bold];
m12_6 -> m12_7  [color=green, key=0, style=solid];
m12_7 -> m12_8  [color=green, key=0, style=solid];
m12_7 -> m12_9  [color=green, key=2, style=dotted];
m12_8 -> m12_6  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
}
