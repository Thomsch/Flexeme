digraph  {
n11 [label="Hangfire.States.StateContext", span=""];
n0 [label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)"];
n1 [label="String.IsNullOrEmpty(jobId)", span="26-26", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)"];
n3 [label="JobId = jobId", span="28-28", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)"];
n4 [label="Job = job", span="29-29", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)"];
n5 [label="CreatedAt = createdAt", span="30-30", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)"];
n2 [label="throw new ArgumentNullException(''jobId'');", span="26-26", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)"];
n7 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n6 [label="Exit Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)"];
n8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n9 [label="Entry Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="33-33", cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)"];
n10 [label="Exit Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="33-33", cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)"];
m0_25 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs"];
m0_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ExpirationManager.cs"];
m0_31 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ExpirationManager.cs"];
m0_23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ExpirationManager.cs"];
m0_24 [label="Entry Hangfire.Logging.ILog.Trace(string)", span="232-232", cluster="Hangfire.Logging.ILog.Trace(string)", file="ExpirationManager.cs"];
m0_26 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ExpirationManager.cs"];
m0_21 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ExpirationManager.cs"];
m0_22 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ExpirationManager.cs"];
m0_2 [label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="ExpirationManager.cs"];
m0_5 [label="_storage = storage", span="51-51", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_6 [label="_checkInterval = checkInterval", span="52-52", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_3 [label="Exit Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="ExpirationManager.cs"];
m0_4 [label="throw new ArgumentNullException(''storage'');", span="49-49", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_7 [label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="47-47", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_0 [label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ExpirationManager.cs"];
m0_1 [label="Exit Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ExpirationManager.cs"];
m0_27 [label="Entry lambda expression", span="65-72", cluster="lambda expression", file="ExpirationManager.cs"];
m0_28 [label="removedCount = connection.Execute(\r\n                            String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                            new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="67-71", cluster="lambda expression", color=green, community=0, file="ExpirationManager.cs"];
m0_29 [label="Exit lambda expression", span="65-72", cluster="lambda expression", file="ExpirationManager.cs"];
m0_9 [label="Entry Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="55-55", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_13 [label="_storage.UseConnection(connection =>\r\n                    {\r\n                        removedCount = connection.Execute(\r\n                            String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                            new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                    })", span="65-72", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ExpirationManager.cs"];
m0_10 [label=ProcessedTables, span="57-57", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_12 [label="int removedCount = 0", span="61-61", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ExpirationManager.cs"];
m0_14 [label="removedCount > 0", span="74-74", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_15 [label="Logger.Trace(String.Format(''Removed {0} outdated record(s) from '{1}' table.'', removedCount,\r\n                            table))", span="76-77", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_18 [label="removedCount != 0", span="82-82", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_11 [label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="59-59", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_19 [label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="85-85", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_16 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="79-79", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_17 [label="cancellationToken.ThrowIfCancellationRequested()", span="80-80", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_20 [label="Exit Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="55-55", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_35 [label="Hangfire.SqlServer.ExpirationManager", span="", file="ExpirationManager.cs"];
m0_36 [label=table, span="", file="ExpirationManager.cs"];
m1_0 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m1_1 [label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m1_2 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m1_3 [label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m2_0 [label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs"];
m2_1 [label="Canceled = canceled", span="14-14", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs"];
m2_2 [label="Exception = exception", span="15-15", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs"];
m2_3 [label="Exit HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="MsmqJobQueueProvider.cs"];
m2_4 [label="HangFire.Filters.CreatedContext", span="", file="MsmqJobQueueProvider.cs"];
m3_12 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs"];
m3_13 [label="return _jobQueue;", span="24-24", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs"];
m3_14 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProvider.cs"];
m3_0 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_1 [label="queues == null", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_3 [label="configureAction == null", span="16-16", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_5 [label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_6 [label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_2 [label="throw new ArgumentNullException(''queues'');", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_4 [label="throw new ArgumentNullException(''configureAction'');", span="16-16", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_7 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_10 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", file="RabbitMqJobQueueProvider.cs"];
m3_9 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RabbitMqJobQueueProvider.cs"];
m3_15 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs"];
m3_16 [label="return _monitoringApi;", span="29-29", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs"];
m3_17 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProvider.cs"];
m3_18 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span="", file="RabbitMqJobQueueProvider.cs"];
m4_116 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="148-148", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_117 [label="var handler = CreateStateHandler(OldStateName)", span="151-151", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", color=red, community=0, file="SqlServerConnection.cs"];
m4_118 [label="var process = CreateProcess()", span="152-152", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_119 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="155-155", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_120 [label="handler.Verify(\r\n                x => x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="158-160", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_121 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="148-148", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_0 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="25-25", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs"];
m4_1 [label="_connection = new Mock<IStorageConnection>()", span="27-27", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs"];
m4_2 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs"];
m4_3 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="29-29", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs"];
m4_4 [label="_context = new StateContextMock { JobIdValue = JobId }", span="31-31", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs"];
m4_5 [label="_stateMachine = new Mock<IStateMachine>()", span="32-32", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", color=red, community=0, file="SqlServerConnection.cs"];
m4_6 [label="_state = new Mock<IState>()", span="34-34", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", color=red, community=0, file="SqlServerConnection.cs"];
m4_7 [label="new ProcessingJob(null, Queue)", span="15-15", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_8 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="25-25", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="SqlServerConnection.cs"];
m4_15 [label="new ProcessingJob(JobId, null)", span="24-24", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_10 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="SqlServerConnection.cs"];
m4_40 [label="Entry StateChangeProcess.cstr", span="", cluster="StateChangeProcess.cstr", file="SqlServerConnection.cs"];
m4_112 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="SqlServerConnection.cs"];
m4_41 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="57-57", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="SqlServerConnection.cs"];
m4_42 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(_connection.Object, _handlers, null))", span="59-60", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs"];
m4_43 [label="Assert.Equal(''filters'', exception.ParamName)", span="62-62", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs"];
m4_44 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="57-57", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="SqlServerConnection.cs"];
m4_28 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerConnection.cs"];
m4_97 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="124-124", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="SqlServerConnection.cs"];
m4_98 [label="var handler1 = CreateStateHandler(StateName)", span="127-127", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_99 [label="var handler2 = CreateStateHandler(StateName)", span="128-128", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_100 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="130-132", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_101 [label="handler1.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="134-135", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_102 [label="handler2.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="136-137", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_103 [label="var process = CreateProcess()", span="139-139", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_104 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="142-142", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_105 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="124-124", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="SqlServerConnection.cs"];
m4_205 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="248-248", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m4_206 [label="var newState = new Mock<IState>()", span="251-251", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_207 [label="var filter = CreateFilter<IElectStateFilter>()", span="252-252", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_208 [label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext x) => x.CandidateState = newState.Object)", span="254-255", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m4_209 [label="var process = CreateProcess()", span="257-257", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m4_210 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="260-260", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_211 [label="_transaction.Verify(x => x.AddJobState(JobId, _state.Object))", span="263-263", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_212 [label="_transaction.Verify(x => x.Commit())", span="264-264", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m4_213 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="248-248", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m4_33 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="48-48", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="SqlServerConnection.cs"];
m4_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(_connection.Object, null, _filters))", span="50-51", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs"];
m4_35 [label="Assert.Equal(''handlers'', exception.ParamName)", span="53-53", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", color=red, community=0, file="SqlServerConnection.cs"];
m4_36 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="48-48", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="SqlServerConnection.cs"];
m4_76 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="295-295", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs"];
m4_250 [label="var handler = new Mock<IStateHandler>()", span="297-297", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs"];
m4_251 [label="handler.Setup(x => x.StateName).Returns(stateName)", span="298-298", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", color=red, community=0, file="SqlServerConnection.cs"];
m4_252 [label="_handlers.AddHandler(handler.Object)", span="300-300", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs"];
m4_253 [label="return handler;", span="301-301", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs"];
m4_254 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="295-295", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="SqlServerConnection.cs"];
m4_62 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="SqlServerConnection.cs"];
m4_160 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="304-304", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs"];
m4_260 [label="var filter = new Mock<T>()", span="306-306", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs"];
m4_261 [label="_filters.Add(filter.Object)", span="307-307", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs"];
m4_262 [label="return filter;", span="309-309", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs"];
m4_263 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="304-304", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="SqlServerConnection.cs"];
m4_137 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="SqlServerConnection.cs"];
m4_164 [label="Entry Unk.OnStateUnapplied", span="", cluster="Unk.OnStateUnapplied", file="SqlServerConnection.cs"];
m4_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SqlServerConnection.cs"];
m4_27 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerConnection.cs"];
m4_238 [label="Entry Unk.False", span="", cluster="Unk.False", file="SqlServerConnection.cs"];
m4_198 [label="Entry Unk.OnStateElection", span="", cluster="Unk.OnStateElection", file="SqlServerConnection.cs"];
m4_56 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="290-290", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="SqlServerConnection.cs"];
m4_248 [label="return new StateChangeProcess(_connection.Object, _handlers, _filters);", span="292-292", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="SqlServerConnection.cs"];
m4_249 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="290-290", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="SqlServerConnection.cs"];
m4_182 [label="Entry Unk.OnStateApplied", span="", cluster="Unk.OnStateApplied", file="SqlServerConnection.cs"];
m4_23 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="39-39", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs"];
m4_24 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(null, _handlers, _filters))", span="41-42", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerConnection.cs"];
m4_25 [label="Assert.Equal(''connection'', exception.ParamName)", span="44-44", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerConnection.cs"];
m4_26 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="39-39", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs"];
m4_57 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="SqlServerConnection.cs"];
m4_125 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="164-164", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="SqlServerConnection.cs"];
m4_126 [label="_state.Setup(x => x.IsFinal).Returns(true)", span="166-166", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", color=red, community=0, file="SqlServerConnection.cs"];
m4_127 [label="var process = CreateProcess()", span="167-167", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", color=red, community=0, file="SqlServerConnection.cs"];
m4_128 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="169-169", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="SqlServerConnection.cs"];
m4_129 [label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="171-171", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", color=red, community=0, file="SqlServerConnection.cs"];
m4_130 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="164-164", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="SqlServerConnection.cs"];
m4_236 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="SqlServerConnection.cs"];
m4_223 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="SqlServerConnection.cs"];
m4_55 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="SqlServerConnection.cs"];
m4_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SqlServerConnection.cs"];
m4_186 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="229-229", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs"];
m4_187 [label="var anotherState = new Mock<IState>()", span="232-232", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs"];
m4_188 [label="var filter = CreateFilter<IElectStateFilter>()", span="233-233", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs"];
m4_189 [label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext context) => context.CandidateState = anotherState.Object)", span="235-236", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs"];
m4_190 [label="var process = CreateProcess()", span="238-238", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="SqlServerConnection.cs"];
m4_191 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="241-241", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="SqlServerConnection.cs"];
m4_192 [label="_transaction.Verify(x => x.SetJobState(JobId, anotherState.Object))", span="244-244", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs"];
m4_193 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="229-229", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SqlServerConnection.cs"];
m4_237 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="SqlServerConnection.cs"];
m4_80 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="SqlServerConnection.cs"];
m4_256 [label="Entry Unk.AddHandler", span="", cluster="Unk.AddHandler", file="SqlServerConnection.cs"];
m4_151 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="186-186", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_152 [label="var filter1 = CreateFilter<IApplyStateFilter>()", span="189-189", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_153 [label="var filter2 = CreateFilter<IApplyStateFilter>()", span="190-190", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_154 [label="filter1.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="192-193", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_155 [label="filter2.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="194-195", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_156 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="196-198", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_157 [label="var process = CreateProcess()", span="200-200", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_158 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="203-203", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_159 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="186-186", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_17 [label="x.CreateWriteTransaction()", span="29-29", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_20 [label="Entry lambda expression", span="35-35", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_18 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_19 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="SqlServerConnection.cs"];
m4_21 [label="x.Name", span="35-35", cluster="lambda expression", file="SqlServerConnection.cs", color=red, community=0];
m4_245 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_16 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_22 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_29 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_30 [label="new StateChangeProcess(null, _handlers, _filters)", span="42-42", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_31 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_37 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_38 [label="new StateChangeProcess(_connection.Object, null, _filters)", span="51-51", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_39 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_45 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_46 [label="new StateChangeProcess(_connection.Object, _handlers, null)", span="60-60", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_47 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_59 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_60 [label="x.SetJobState(JobId, _state.Object)", span="69-69", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_61 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_63 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_64 [label="x.Commit()", span="70-70", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_65 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_77 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_78 [label="x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="89-89", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_79 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_81 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_82 [label="x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="93-93", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_83 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_84 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_85 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="96-96", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_86 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_94 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_95 [label="x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="119-119", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_96 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_106 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_107 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="131-131", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_108 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_109 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_110 [label="x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="134-134", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_111 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_113 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_114 [label="x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="136-136", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_115 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_122 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_123 [label="x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="159-159", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_124 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_131 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_132 [label="x.IsFinal", span="166-166", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_133 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_134 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_135 [label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="171-171", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_136 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_144 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_145 [label="x.IsFinal", span="177-177", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_146 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_147 [label="Entry lambda expression", span="182-182", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_148 [label="x.PersistJob(JobId)", span="182-182", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_149 [label="Exit lambda expression", span="182-182", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_161 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_162 [label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="192-192", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_163 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_165 [label="Entry lambda expression", span="194-194", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_166 [label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="194-194", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_167 [label="Exit lambda expression", span="194-194", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_168 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_169 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="197-197", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_170 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_179 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_180 [label="x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="215-215", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_181 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_183 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_184 [label="x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="217-217", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_185 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_195 [label="Entry lambda expression", span="235-235", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_196 [label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="235-235", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_197 [label="Exit lambda expression", span="235-235", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_199 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_200 [label="context.CandidateState = anotherState.Object", span="236-236", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_201 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_202 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_203 [label="x.SetJobState(JobId, anotherState.Object)", span="244-244", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_204 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_214 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_215 [label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="254-254", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_216 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_217 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_218 [label="x.CandidateState = newState.Object", span="255-255", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_219 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_220 [label="Entry lambda expression", span="263-263", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_221 [label="x.AddJobState(JobId, _state.Object)", span="263-263", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_222 [label="Exit lambda expression", span="263-263", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_224 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_225 [label="x.Commit()", span="264-264", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_226 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_239 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_240 [label="x.OnStateApplied(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="274-274", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_241 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_242 [label="Entry lambda expression", span="283-285", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_243 [label="x.SetJobState(\r\n                JobId, \r\n                It.Is<FailedState>(s => s.Exception == exception))", span="283-285", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_244 [label="Exit lambda expression", span="283-285", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_246 [label="s.Exception == exception", span="285-285", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_247 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_227 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="268-268", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_228 [label="var exception = new NotSupportedException()", span="271-271", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_229 [label="var filter = CreateFilter<IApplyStateFilter>()", span="272-272", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_230 [label="filter.Setup(x => x.OnStateApplied(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()))\r\n                .Throws(exception)", span="274-275", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_231 [label="var process = CreateProcess()", span="277-277", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_232 [label="var result = process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="280-280", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_233 [label="_transaction.Verify(x => x.SetJobState(\r\n                JobId, \r\n                It.Is<FailedState>(s => s.Exception == exception)))", span="283-285", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="SqlServerConnection.cs"];
m4_234 [label="Assert.False(result)", span="287-287", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_235 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="268-268", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SqlServerConnection.cs"];
m4_93 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerConnection.cs"];
m4_171 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="209-209", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs"];
m4_172 [label="var filter1 = CreateFilter<IApplyStateFilter>()", span="212-212", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_173 [label="var filter2 = CreateFilter<IApplyStateFilter>()", span="213-213", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_174 [label="filter1.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="215-216", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_175 [label="filter2.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="217-218", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs"];
m4_176 [label="var process = CreateProcess()", span="220-220", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs"];
m4_177 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="223-223", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs"];
m4_178 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="209-209", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="SqlServerConnection.cs"];
m4_66 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="SqlServerConnection.cs"];
m4_58 [label="Entry Unk.True", span="", cluster="Unk.True", file="SqlServerConnection.cs"];
m4_14 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="SqlServerConnection.cs"];
m4_13 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SqlServerConnection.cs"];
m4_194 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="SqlServerConnection.cs"];
m4_48 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="66-66", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs"];
m4_49 [label="_transaction.Setup(x => x.SetJobState(JobId, _state.Object)).InSequence()", span="69-69", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs"];
m4_50 [label="_transaction.Setup(x => x.Commit()).InSequence()", span="70-70", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs"];
m4_51 [label="var process = CreateProcess()", span="72-72", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs"];
m4_52 [label="var result = process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="75-75", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs"];
m4_53 [label="Assert.True(result)", span="78-78", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs"];
m4_54 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="66-66", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SqlServerConnection.cs"];
m4_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerConnection.cs"];
m4_150 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="SqlServerConnection.cs"];
m4_255 [label="Entry Mock<IStateHandler>.cstr", span="", cluster="Mock<IStateHandler>.cstr", file="SqlServerConnection.cs"];
m4_67 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="82-82", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_68 [label="var handler1 = CreateStateHandler(OldStateName)", span="85-85", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_69 [label="var handler2 = CreateStateHandler(OldStateName)", span="86-86", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_70 [label="handler1\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="88-90", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_71 [label="handler2\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="92-94", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_72 [label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="96-97", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_73 [label="var process = CreateProcess()", span="99-99", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", color=red, community=0, file="SqlServerConnection.cs"];
m4_74 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="102-102", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_75 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="82-82", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="SqlServerConnection.cs"];
m4_32 [label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="SqlServerConnection.cs"];
m4_138 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="175-175", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="SqlServerConnection.cs"];
m4_139 [label="_state.Setup(x => x.IsFinal).Returns(false)", span="177-177", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs"];
m4_140 [label="var process = CreateProcess()", span="178-178", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs"];
m4_141 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="180-180", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs"];
m4_142 [label="_transaction.Verify(x => x.PersistJob(JobId))", span="182-182", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="SqlServerConnection.cs"];
m4_143 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="175-175", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="SqlServerConnection.cs"];
m4_87 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="108-108", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_88 [label="var handler = CreateStateHandler(StateName)", span="111-111", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_89 [label="var process = CreateProcess()", span="112-112", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_90 [label="process.ChangeState(_stateMachine.Object, _context.Object, _state.Object, OldStateName)", span="115-115", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m4_91 [label="handler.Verify(\r\n                x => x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="118-120", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", color=red, community=0, file="SqlServerConnection.cs"];
m4_92 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="108-108", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="SqlServerConnection.cs"];
m6_18 [label="Entry lambda expression", span="54-59", cluster="lambda expression", file="SqlServerFetchedJob.cs"];
m6_19 [label="connection.Execute(\r\n                    ''delete from HangFire.JobQueue where Id = @id'',\r\n                    new { id = Id })", span="56-58", cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJob.cs"];
m6_20 [label="Exit lambda expression", span="54-59", cluster="lambda expression", file="SqlServerFetchedJob.cs"];
m6_23 [label=_disposed, span="72-72", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=green, community=0, file="SqlServerFetchedJob.cs"];
m6_21 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs"];
m6_0 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_1 [label="connection == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs"];
m6_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs"];
m6_3 [label="jobId == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_7 [label="_connection = connection", span="41-41", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=red, community=0, file="SqlServerFetchedJob.cs"];
m6_5 [label="queue == null", span="39-39", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_8 [label="Id = id", span="43-43", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_9 [label="JobId = jobId", span="44-44", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_10 [label="Queue = queue", span="45-45", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_4 [label="throw new ArgumentNullException(''jobId'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_6 [label="throw new ArgumentNullException(''queue'');", span="39-39", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_11 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="SqlServerFetchedJob.cs"];
m6_17 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerFetchedJob.cs"];
m6_22 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs"];
m6_24 [label="return;", span="72-72", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs"];
m6_25 [label="!_removedFromQueue && !_requeued", span="74-74", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs"];
m6_26 [label="Entry lambda expression", span="66-71", cluster="lambda expression", file="SqlServerFetchedJob.cs"];
m6_27 [label="connection.Execute(\r\n                    ''update HangFire.JobQueue set FetchedAt = null where Id = @id'',\r\n                    new { id = Id })", span="68-70", cluster="lambda expression", file="SqlServerFetchedJob.cs", color=green, community=0];
m6_28 [label="Exit lambda expression", span="66-71", cluster="lambda expression", file="SqlServerFetchedJob.cs"];
m6_13 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs"];
m6_14 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    ''delete from HangFire.JobQueue where Id = @id'',\r\n                    new { id = Id });\r\n            })", span="54-59", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", color=green, community=0, file="SqlServerFetchedJob.cs"];
m6_15 [label="_removedFromQueue = true", span="58-58", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs"];
m6_16 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs"];
m6_29 [label="Hangfire.SqlServer.SqlServerFetchedJob", span="", file="SqlServerFetchedJob.cs"];
m7_33 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="SqlServerJobQueue.cs"];
m7_14 [label="FetchedJob fetchedJob = null", span="47-47", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", color=green, community=0];
m7_13 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="45-45", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_37 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerJobQueue.cs"];
m7_38 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerJobQueue.cs"];
m7_39 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerJobQueue.cs"];
m7_0 [label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="SqlServerJobQueue.cs"];
m7_1 [label="_name = name", span="16-16", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_2 [label="_results = results", span="17-17", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_3 [label="Exit HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="SqlServerJobQueue.cs"];
m7_5 [label="Assert.IsNotNull(transaction)", span="22-22", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_6 [label="Assert.IsFalse(String.IsNullOrEmpty(jobId))", span="23-23", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs"];
m7_4 [label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="20-20", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs"];
m7_7 [label="Assert.IsNotNull(state)", span="24-24", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs"];
m7_12 [label="queues.Length == 0", span="45-45", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_30 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerJobQueue.cs"];
m7_29 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueue.cs"];
m7_32 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, int, string, string)", span="31-31", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, int, string, string)", file="SqlServerJobQueue.cs"];
m7_15 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue with (readpast) set FetchedAt = GETUTCDATE()\r\noutput INSERTED.Id, INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="49-54", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_16 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="58-58", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_17 [label="var currentQueryIndex = 0", span="59-59", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs"];
m7_18 [label="cancellationToken.ThrowIfCancellationRequested()", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_19 [label="_storage.UseConnection(connection =>\r\n                {\r\n                    fetchedJob = connection.Query<FetchedJob>(\r\n                        String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                        new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                        .SingleOrDefault();\r\n                })", span="65-71", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_20 [label="fetchedJob == null", span="73-73", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_11 [label="throw new ArgumentNullException(''queues'');", span="44-44", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_45 [label="Entry lambda expression", span="97-100", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_34 [label="Entry lambda expression", span="65-71", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_35 [label="fetchedJob = connection.Query<FetchedJob>(\r\n                        String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                        new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                        .SingleOrDefault()", span="67-70", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_36 [label="Exit lambda expression", span="65-71", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_46 [label="connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue })", span="99-99", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_47 [label="Exit lambda expression", span="97-100", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_10 [label="queues == null", span="44-44", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_8 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="26-26", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="SqlServerJobQueue.cs"];
m7_9 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_28 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs"];
m7_31 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerJobQueue.cs"];
m7_48 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerJobQueue.cs"];
m7_41 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", span="92-92", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs"];
m7_43 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue });\r\n            })", span="97-100", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_42 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue) values (@jobId, @queue)''", span="94-95", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs"];
m7_44 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", span="92-92", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs"];
m7_40 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerJobQueue.cs"];
m7_25 [label="fetchedJob == null", span="83-83", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_26 [label="return new SqlServerFetchedJob(\r\n                _storage,\r\n                fetchedJob.Id,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="85-89", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_22 [label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="77-77", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_21 [label="HangFire.Tests.TestStateChangedFilter", span="", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_24 [label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="82-82", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_23 [label="cancellationToken.ThrowIfCancellationRequested()", span="78-78", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_27 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_49 [label="Hangfire.SqlServer.SqlServerJobQueue", span="", file="SqlServerJobQueue.cs"];
m7_50 [label="string[]", span="", file="SqlServerJobQueue.cs"];
m7_51 [label=fetchJobSqlTemplate, span="", file="SqlServerJobQueue.cs"];
m7_52 [label=fetchConditions, span="", file="SqlServerJobQueue.cs"];
m7_53 [label=currentQueryIndex, span="", file="SqlServerJobQueue.cs"];
m7_54 [label=string, span="", file="SqlServerJobQueue.cs"];
m7_55 [label=string, span="", file="SqlServerJobQueue.cs"];
m7_56 [label=enqueueJobSql, span="", file="SqlServerJobQueue.cs"];
m9_22 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerJobQueueProvider.cs"];
m9_30 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerJobQueueProvider.cs"];
m9_24 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs"];
m9_25 [label="String.IsNullOrEmpty(name)", span="94-94", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs"];
m9_27 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="96-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs"];
m9_26 [label="throw new ArgumentNullException(''name'');", span="94-94", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs"];
m9_28 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerJobQueueProvider.cs"];
m9_12 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerJobQueueProvider.cs"];
m9_16 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs"];
m9_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs"];
m9_1 [label="storage == null", span="29-29", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_2 [label="throw new ArgumentNullException(''storage'');", span="29-29", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_3 [label="options == null", span="30-30", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs"];
m9_4 [label="throw new ArgumentNullException(''options'');", span="30-30", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs"];
m9_5 [label="_storage = storage", span="32-32", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_6 [label="_options = options", span="33-33", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueueProvider.cs"];
m9_7 [label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m9_8 [label="Type = type", span="35-35", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerJobQueueProvider.cs"];
m9_9 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m9_10 [label="return new SqlServerJobQueue(_storage, _options);", span="40-40", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_11 [label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m9_21 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SqlServerJobQueueProvider.cs"];
m9_13 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="SqlServerJobQueueProvider.cs"];
m9_14 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", color=green, community=0, file="SqlServerJobQueueProvider.cs"];
m9_15 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerJobQueueProvider.cs"];
m9_17 [label="Hangfire.SqlServer.SqlServerJobQueueProvider", span="", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs"];
m9_19 [label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="77-77", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs"];
m9_18 [label="throw new ArgumentNullException(''name'');", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs"];
m9_20 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerJobQueueProvider.cs"];
m9_34 [label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerJobQueueProvider.cs"];
m9_31 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerJobQueueProvider.cs"];
m9_32 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="103-103", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerJobQueueProvider.cs"];
m9_33 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerJobQueueProvider.cs"];
m9_29 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerJobQueueProvider.cs"];
m9_23 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerJobQueueProvider.cs"];
m9_35 [label="HangFire.Client.ClientJobDescriptor", span="", file="SqlServerJobQueueProvider.cs"];
m10_12 [label="Entry HangFire.Storage.ProcessingJob.Dispose()", span="39-39", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="SqlServerMonitoringApi.cs"];
m10_13 [label="_connection.DeleteJobFromQueue(JobId, Queue)", span="41-41", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="SqlServerMonitoringApi.cs"];
m10_14 [label="Exit HangFire.Storage.ProcessingJob.Dispose()", span="39-39", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="SqlServerMonitoringApi.cs"];
m10_0 [label="Entry HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_9 [label="Queue = queue", span="33-33", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m10_8 [label="JobId = jobId", span="32-32", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_7 [label="_connection = connection", span="30-30", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_1 [label="connection == null", span="26-26", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_3 [label="jobId == null", span="27-27", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_5 [label="queue == null", span="28-28", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_2 [label="throw new ArgumentNullException(''connection'');", span="26-26", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_4 [label="throw new ArgumentNullException(''jobId'');", span="27-27", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_6 [label="throw new ArgumentNullException(''queue'');", span="28-28", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_10 [label="Exit HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerMonitoringApi.cs"];
m10_15 [label="Entry HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31", cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="SqlServerMonitoringApi.cs"];
m10_16 [label="HangFire.Storage.ProcessingJob", span="", file="SqlServerMonitoringApi.cs"];
m11_25 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerStorage.cs"];
m11_26 [label="return JsonSerializer.DeserializeFromString<T>(value);", span="46-46", cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerStorage.cs"];
m11_27 [label="Exit HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerStorage.cs"];
m11_40 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="SqlServerStorage.cs"];
m11_44 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="SqlServerStorage.cs"];
m11_33 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerStorage.cs"];
m11_34 [label="return Epoch.AddSeconds(value);", span="59-59", cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerStorage.cs"];
m11_35 [label="Exit HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerStorage.cs"];
m11_36 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="SqlServerStorage.cs"];
m11_21 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerStorage.cs"];
m11_22 [label="return JsonSerializer.SerializeToString(value);", span="41-41", cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerStorage.cs"];
m11_23 [label="Exit HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerStorage.cs"];
m11_55 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerStorage.cs"];
m11_20 [label="Entry HangFire.JobHelper.ValidateQueueName(string)", span="82-82", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs"];
m11_50 [label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="84-84", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs"];
m11_51 [label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="86-87", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs"];
m11_52 [label="Exit HangFire.JobHelper.ValidateQueueName(string)", span="82-82", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="SqlServerStorage.cs"];
m11_37 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m11_38 [label="return ToTimestamp(value).ToString();", span="64-64", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m11_39 [label="Exit HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m11_16 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="SqlServerStorage.cs"];
m11_29 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m11_30 [label="TimeSpan elapsedTime = value - Epoch", span="53-53", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m11_31 [label="return (long)elapsedTime.TotalSeconds;", span="54-54", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m11_32 [label="Exit HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m11_28 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerStorage.cs"];
m11_7 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="22-22", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_8 [label="jobType == null", span="24-24", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_10 [label="var attribute = jobType\r\n                .GetCustomAttributes(true)\r\n                .OfType<QueueAttribute>()\r\n                .FirstOrDefault()", span="26-29", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_9 [label="throw new ArgumentNullException(''jobType'');", span="24-24", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_11 [label="var queueName = attribute != null \r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="31-33", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_12 [label="ValidateQueueName(queueName)", span="34-34", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_13 [label="return queueName;", span="36-36", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_14 [label="Exit HangFire.JobHelper.GetQueue(System.Type)", span="22-22", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SqlServerStorage.cs"];
m11_18 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="SqlServerStorage.cs"];
m11_45 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_46 [label="String.IsNullOrEmpty(value)", span="74-74", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_48 [label="return FromStringTimestamp(value);", span="79-79", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_47 [label="return null;", span="76-76", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_49 [label="Exit HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_6 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="SqlServerStorage.cs"];
m11_54 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerStorage.cs"];
m11_19 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SqlServerStorage.cs"];
m11_24 [label="Entry Unk.SerializeToString", span="", cluster="Unk.SerializeToString", file="SqlServerStorage.cs"];
m11_53 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="SqlServerStorage.cs"];
m11_17 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SqlServerStorage.cs"];
m11_41 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="67-67", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_42 [label="return FromTimestamp(long.Parse(value));", span="69-69", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_43 [label="Exit HangFire.JobHelper.FromStringTimestamp(string)", span="67-67", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerStorage.cs"];
m11_0 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="11-11", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs"];
m11_1 [label="var type = Type.GetType(jobType)", span="13-13", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs"];
m11_2 [label="type == null", span="14-14", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs"];
m11_4 [label="return GetQueue(type);", span="19-19", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs"];
m11_3 [label="return null;", span="16-16", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs"];
m11_5 [label="Exit HangFire.JobHelper.TryToGetQueue(string)", span="11-11", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerStorage.cs"];
m12_2 [label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="SqlServerWriteOnlyTransaction.cs"];
m12_3 [label="Exit HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="SqlServerWriteOnlyTransaction.cs"];
m12_6 [label="Entry MvcSample.HangFireConfig.Stop()", span="46-46", cluster="MvcSample.HangFireConfig.Stop()", file="SqlServerWriteOnlyTransaction.cs"];
m12_7 [label="_server.Stop()", span="48-48", cluster="MvcSample.HangFireConfig.Stop()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_8 [label="Exit MvcSample.HangFireConfig.Stop()", span="46-46", cluster="MvcSample.HangFireConfig.Stop()", file="SqlServerWriteOnlyTransaction.cs"];
m12_0 [label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="SqlServerWriteOnlyTransaction.cs"];
m12_1 [label="Exit HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="SqlServerWriteOnlyTransaction.cs"];
m12_9 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SqlServerWriteOnlyTransaction.cs"];
n11 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
n11 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
n11 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n1 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n3  [key=3, color=darkorchid, style=bold, label="Field variable int NumberOfRecordsInSinglePass"];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n2 -> n6  [key=0, style=solid];
n2 -> n8  [key=2, style=dotted];
n6 -> n0  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n9  [key=0, style=bold, color=blue];
m0_2 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_2 -> m0_3  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_4 -> m0_7  [key=0, style=solid];
m0_4 -> n8  [key=2, style=dotted];
m0_7 -> m0_2  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_30  [key=2, style=dotted, color=green];
m0_28 -> m0_31  [key=2, style=dotted, color=green];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_9 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_22  [key=2, style=dotted, color=green];
m0_13 -> m0_27  [key=1, style=dashed, color=green, label="lambda expression"];
m0_13 -> m0_15  [key=1, style=dashed, color=green, label=removedCount];
m0_13 -> m0_18  [key=1, style=dashed, color=green, label=removedCount];
m0_10 -> m0_13  [key=1, style=dashed, color=green, label=table];
m0_10 -> m0_28  [key=1, style=dashed, color=green, label=table];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_19  [key=0, style=solid];
m0_10 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=table];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_12  [key=3, color=green, style=bold, label="Local variable int removedCount"];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_23  [key=2, style=dotted];
m0_15 -> m0_24  [key=2, style=dotted];
m0_18 -> m0_12  [key=0, style=solid, color=green];
m0_18 -> m0_10  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_11 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_25  [key=2, style=dotted];
m0_16 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_25  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_17 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_17 -> m0_26  [key=2, style=dotted];
m0_20 -> m0_9  [key=0, style=bold, color=blue];
m0_35 -> m0_13  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.ExpirationManager"];
m0_35 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m0_35 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m0_35 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m0_36 -> m0_28  [key=1, style=dashed, color=green, label=table];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m2_4 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_12  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_11  [key=2, style=dotted];
m3_2 -> m3_7  [key=0, style=solid];
m3_2 -> n8  [key=2, style=dotted];
m3_4 -> m3_7  [key=0, style=solid];
m3_4 -> n8  [key=2, style=dotted];
m3_7 -> m3_0  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_18 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m3_18 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m3_18 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m3_18 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m4_120 -> m4_120  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m4_7 -> m4_9  [key=2, style=dotted];
m4_7 -> m4_18  [key=0, style=solid];
m4_15 -> m4_9  [key=2, style=dotted];
m4_15 -> m4_22  [key=0, style=solid];
m4_42 -> m4_5  [key=3, color=red, style=bold, label="Property variable SqlConnection Connection"];
m4_129 -> m4_125  [key=3, color=red, style=bold, label="Local variable Hangfire.Common.JobLoadException loadException"];
m4_129 -> m4_139  [key=3, color=red, style=bold, label="Local variable Hangfire.Common.JobLoadException loadException"];
m4_155 -> m4_155  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m4_17 -> m4_18  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid, color=green];
m4_20 -> m4_28  [key=2, style=dotted, color=green];
m4_20 -> m4_15  [key=0, style=solid];
m4_18 -> m4_20  [key=1, style=dashed, color=green, label=processingJob];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_9  [key=2, style=dotted];
m4_18 -> m4_16  [key=0, style=bold, color=green];
m4_19 -> m4_20  [key=0, style=solid, color=green];
m4_19 -> m4_28  [key=2, style=dotted];
m4_21 -> m4_17  [key=0, style=bold, color=blue];
m4_16 -> m4_7  [key=0, style=solid];
m4_22 -> m4_20  [key=0, style=bold, color=green];
m4_228 -> m4_228  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m6_18 -> m6_19  [key=0, style=solid, color=green];
m6_18 -> m6_23  [key=0, style=solid, color=green];
m6_19 -> m6_20  [key=0, style=solid, color=green];
m6_19 -> m6_17  [key=2, style=dotted, color=green];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_23 -> m6_20  [key=0, style=solid, color=green];
m6_23 -> m6_17  [key=2, style=dotted, color=green];
m6_23 -> m6_26  [key=1, style=dashed, color=green, label="lambda expression"];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=0, style=solid];
m6_21 -> m6_18  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=red];
m6_0 -> m6_7  [key=1, style=dashed, color=red, label=IDbConnection];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_1 -> m6_2  [key=0, style=solid, color=red];
m6_1 -> m6_3  [key=0, style=solid, color=red];
m6_2 -> m6_11  [key=0, style=solid, color=red];
m6_2 -> n8  [key=2, style=dotted, color=red];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid, color=red];
m6_5 -> m6_7  [key=0, style=solid, color=red];
m6_5 -> m6_6  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_4 -> m6_11  [key=0, style=solid];
m6_4 -> n8  [key=2, style=dotted];
m6_6 -> m6_11  [key=0, style=solid];
m6_6 -> n8  [key=2, style=dotted];
m6_11 -> m6_0  [key=0, style=bold, color=blue];
m6_22 -> m6_23  [key=0, style=solid];
m6_24 -> m6_28  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid, color=green];
m6_26 -> m6_18  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid, color=green];
m6_27 -> m6_17  [key=2, style=dotted, color=green];
m6_28 -> m6_22  [key=0, style=bold, color=blue];
m6_28 -> m6_26  [key=0, style=bold, color=blue];
m6_13 -> m6_14  [key=0, style=solid, color=green];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_14 -> m6_17  [key=2, style=dotted, color=green];
m6_14 -> m6_18  [key=1, style=dashed, color=green, label="lambda expression"];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_13  [key=0, style=bold, color=blue];
m6_29 -> m6_7  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_14  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_19  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_23  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m6_29 -> m6_27  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m7_14 -> m7_14  [key=3, color=green, style=bold, label="Local variable Hangfire.SqlServer.SqlServerJobQueue.FetchedJob fetchedJob"];
m7_14 -> m7_15  [key=0, style=solid, color=green];
m7_13 -> m7_27  [key=0, style=solid];
m7_13 -> m7_28  [key=2, style=dotted];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_0 -> m7_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m7_0 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m7_0 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_3  [key=0, style=solid, color=green];
m7_2 -> m7_7  [key=0, style=solid, color=green];
m7_2 -> n8  [key=2, style=dotted, color=green];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid, color=green];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_5 -> m7_10  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_11  [key=2, style=dotted];
m7_6 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_7  [key=0, style=solid];
m7_4 -> n8  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_7 -> m7_0  [key=0, style=bold, color=blue];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_10  [key=2, style=dotted];
m7_12 -> m7_14  [key=0, style=solid, color=green];
m7_12 -> m7_13  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [key=1, style=dashed, color=red, label=string];
m7_15 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_15 -> m7_19  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m7_15 -> m7_35  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m7_15 -> m7_15  [key=3, color=darkorchid, style=bold, label="Local variable string fetchJobSqlTemplate"];
m7_16 -> m7_17  [key=0, style=solid, color=red];
m7_16 -> m7_10  [key=2, style=dotted];
m7_16 -> m7_19  [key=1, style=dashed, color=green, label=fetchConditions];
m7_16 -> m7_35  [key=1, style=dashed, color=green, label=fetchConditions];
m7_16 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m7_16 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m7_17 -> m7_18  [key=0, style=solid, color=red];
m7_17 -> m7_11  [key=2, style=dotted, color=red];
m7_17 -> m7_12  [key=2, style=dotted, color=red];
m7_17 -> m7_19  [key=1, style=dashed, color=green, label=currentQueryIndex];
m7_17 -> m7_35  [key=1, style=dashed, color=green, label=currentQueryIndex];
m7_17 -> m7_17  [key=3, color=darkorchid, style=bold, label="Local variable int currentQueryIndex"];
m7_17 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m7_17 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m7_18 -> m7_19  [key=0, style=solid, color=green];
m7_18 -> m7_11  [key=2, style=dotted];
m7_18 -> m7_12  [key=2, style=dotted];
m7_18 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_18 -> m7_29  [key=2, style=dotted];
m7_18 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_19 -> m7_20  [key=0, style=solid, color=green];
m7_19 -> m7_13  [key=2, style=dotted, color=red];
m7_19 -> m7_14  [key=2, style=dotted, color=red];
m7_19 -> m7_30  [key=2, style=dotted, color=green];
m7_19 -> m7_34  [key=1, style=dashed, color=green, label="lambda expression"];
m7_19 -> m7_25  [key=1, style=dashed, color=green, label=fetchedJob];
m7_19 -> m7_26  [key=1, style=dashed, color=green, label=fetchedJob];
m7_20 -> m7_15  [key=0, style=bold, color=blue];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=0, style=solid];
m7_11 -> n8  [key=2, style=dotted];
m7_11 -> m7_27  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid, color=green];
m7_34 -> m7_35  [key=0, style=solid, color=green];
m7_35 -> m7_36  [key=0, style=solid, color=green];
m7_35 -> m7_37  [key=2, style=dotted, color=green];
m7_35 -> m7_38  [key=2, style=dotted, color=green];
m7_35 -> m7_39  [key=2, style=dotted, color=green];
m7_35 -> m7_40  [key=2, style=dotted, color=green];
m7_36 -> m7_34  [key=0, style=bold, color=blue];
m7_46 -> m7_47  [key=0, style=solid, color=green];
m7_46 -> m7_48  [key=2, style=dotted, color=green];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
m7_10 -> m7_12  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_13  [key=2, style=dotted];
m7_8 -> m7_14  [key=2, style=dotted];
m7_9 -> m7_4  [key=0, style=bold, color=blue];
m7_9 -> m7_19  [key=1, style=dashed, color=green, label="string[]"];
m7_9 -> m7_35  [key=1, style=dashed, color=green, label="string[]"];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_9 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_41 -> m7_43  [key=1, style=dashed, color=green, label=string];
m7_41 -> m7_46  [key=1, style=dashed, color=green, label=string];
m7_41 -> m7_42  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid, color=green];
m7_43 -> m7_30  [key=2, style=dotted, color=green];
m7_43 -> m7_45  [key=1, style=dashed, color=green, label="lambda expression"];
m7_42 -> m7_43  [key=0, style=solid, color=green];
m7_42 -> m7_46  [key=1, style=dashed, color=green, label=enqueueJobSql];
m7_42 -> m7_42  [key=3, color=darkorchid, style=bold, label="Local variable string enqueueJobSql"];
m7_44 -> m7_41  [key=0, style=bold, color=blue];
m7_25 -> m7_26  [key=0, style=solid, color=green];
m7_25 -> m7_17  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid, color=green];
m7_26 -> m7_32  [key=2, style=dotted, color=green];
m7_26 -> m7_33  [key=2, style=dotted, color=green];
m7_22 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_31  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_24  [key=0, style=solid];
m7_21 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m7_21 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m7_21 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m7_21 -> m7_19  [key=1, style=dashed, color=red, label="HangFire.Tests.TestStateChangedFilter"];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m7_23 -> m7_29  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_27 -> m7_9  [key=0, style=bold, color=blue];
m7_49 -> m7_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_19  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_35  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_26  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_43  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_50 -> m7_35  [key=1, style=dashed, color=green, label="string[]"];
m7_51 -> m7_35  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m7_52 -> m7_35  [key=1, style=dashed, color=green, label=fetchConditions];
m7_53 -> m7_35  [key=1, style=dashed, color=green, label=currentQueryIndex];
m7_54 -> m7_46  [key=1, style=dashed, color=green, label=string];
m7_55 -> m7_46  [key=1, style=dashed, color=green, label=string];
m7_56 -> m7_46  [key=1, style=dashed, color=green, label=enqueueJobSql];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=0, style=solid];
m9_25 -> m9_21  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=2, style=dotted];
m9_27 -> m9_30  [key=2, style=dotted];
m9_26 -> m9_28  [key=0, style=solid];
m9_26 -> m9_22  [key=2, style=dotted];
m9_28 -> m9_24  [key=0, style=bold, color=blue];
m9_12 -> m9_0  [key=0, style=bold, color=blue];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_1  [key=0, style=solid, color=green];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m9_0 -> m9_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m9_0 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m9_0 -> m9_7  [key=1, style=dashed, color=red, label=string];
m9_0 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_0 -> m9_9  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m9_0 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_0 -> m9_11  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_13  [key=2, style=dotted];
m9_1 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_13  [key=2, style=dotted];
m9_2 -> m9_7  [key=0, style=solid, color=green];
m9_2 -> n8  [key=2, style=dotted, color=green];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_13  [key=2, style=dotted];
m9_3 -> m9_5  [key=0, style=solid, color=green];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_13  [key=2, style=dotted];
m9_4 -> m9_7  [key=0, style=solid];
m9_4 -> n8  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid, color=green];
m9_5 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid, color=red];
m9_6 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid, color=red];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid, color=red];
m9_9 -> m9_10  [key=0, style=solid, color=green];
m9_10 -> m9_11  [key=0, style=solid, color=green];
m9_10 -> m9_12  [key=2, style=dotted, color=green];
m9_11 -> m9_12  [key=0, style=solid, color=red];
m9_11 -> m9_15  [key=2, style=dotted, color=red];
m9_11 -> m9_9  [key=0, style=bold, color=blue];
m9_13 -> m9_14  [key=0, style=solid, color=green];
m9_14 -> m9_15  [key=0, style=solid, color=green];
m9_14 -> m9_16  [key=2, style=dotted, color=green];
m9_15 -> m9_13  [key=0, style=bold, color=blue];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_17 -> m9_21  [key=2, style=dotted];
m9_17 -> m9_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m9_17 -> m9_10  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m9_17 -> m9_14  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m9_17 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_15  [key=2, style=dotted];
m9_19 -> m9_23  [key=2, style=dotted];
m9_18 -> m9_20  [key=0, style=solid];
m9_18 -> m9_22  [key=2, style=dotted];
m9_20 -> m9_16  [key=0, style=bold, color=blue];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [key=2, style=dotted];
m9_33 -> m9_31  [key=0, style=bold, color=blue];
m9_35 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_7  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_9  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_11  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m9_35 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m10_12 -> m10_13  [key=0, style=solid];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_15  [key=2, style=dotted];
m10_14 -> m10_12  [key=0, style=bold, color=blue];
m10_0 -> m10_9  [key=1, style=dashed, color=green, label=string];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m10_0 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_7 -> m10_8  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_2 -> m10_10  [key=0, style=solid];
m10_2 -> n8  [key=2, style=dotted];
m10_4 -> m10_10  [key=0, style=solid];
m10_4 -> n8  [key=2, style=dotted];
m10_6 -> m10_10  [key=0, style=solid];
m10_6 -> n8  [key=2, style=dotted];
m10_10 -> m10_0  [key=0, style=bold, color=blue];
m10_16 -> m10_9  [key=1, style=dashed, color=green, label="HangFire.Storage.ProcessingJob"];
m10_16 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m10_16 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m10_16 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_28  [key=2, style=dotted];
m11_27 -> m11_25  [key=0, style=bold, color=blue];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_36  [key=2, style=dotted];
m11_35 -> m11_33  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=2, style=dotted];
m11_23 -> m11_21  [key=0, style=bold, color=blue];
m11_20 -> m11_50  [key=0, style=solid];
m11_20 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_20 -> m11_11  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_52  [key=0, style=solid];
m11_50 -> m11_53  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_54  [key=2, style=dotted];
m11_51 -> m11_55  [key=2, style=dotted];
m11_52 -> m11_20  [key=0, style=bold, color=blue];
m11_37 -> m11_38  [key=0, style=solid];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_29  [key=2, style=dotted];
m11_38 -> m11_40  [key=2, style=dotted];
m11_39 -> m11_37  [key=0, style=bold, color=blue];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime value"];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label=elapsedTime];
m11_32 -> m11_29  [key=0, style=bold, color=blue];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m11_7 -> m11_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type jobType"];
m11_7 -> m11_11  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetQueue"];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_16  [key=2, style=dotted];
m11_10 -> m11_17  [key=2, style=dotted];
m11_10 -> m11_18  [key=2, style=dotted];
m11_9 -> m11_14  [key=0, style=solid];
m11_9 -> n8  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_19  [key=2, style=dotted];
m11_11 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_20  [key=2, style=dotted];
m11_12 -> m11_31  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.SqlServer.SqlServerStorageOptions _options"];
m11_13 -> m11_14  [key=0, style=solid];
m11_14 -> m11_7  [key=0, style=bold, color=blue];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_45 -> m11_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? FromNullableStringTimestamp"];
m11_45 -> m11_41  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? FromNullableStringTimestamp"];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_48  [key=0, style=solid];
m11_46 -> m11_19  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_41  [key=2, style=dotted];
m11_47 -> m11_49  [key=0, style=solid];
m11_49 -> m11_45  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_33  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime FromStringTimestamp"];
m11_41 -> m11_45  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=2, style=dotted];
m11_42 -> m11_33  [key=2, style=dotted];
m11_43 -> m11_41  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string TryToGetQueue"];
m11_0 -> m11_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string TryToGetQueue"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_6  [key=2, style=dotted];
m11_1 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=type];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_7  [key=2, style=dotted];
m11_3 -> m11_5  [key=0, style=solid];
m11_5 -> m11_0  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [key=0, style=bold, color=blue];
m12_6 -> m12_7  [key=0, style=solid, color=green];
m12_7 -> m12_8  [key=0, style=solid, color=green];
m12_7 -> m12_9  [key=2, style=dotted, color=green];
m12_8 -> m12_6  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
}
