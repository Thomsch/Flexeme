digraph  {
n195 [label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", span=""];
n0 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()"];
n1 [label="_client = new Mock<IBackgroundJobClient>()", span="15-15", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()"];
n2 [label="_state = new Mock<State>()", span="16-16", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()"];
n4 [label="Entry Mock<IBackgroundJobClient>.cstr", span="", cluster="Mock<IBackgroundJobClient>.cstr"];
n3 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()"];
n5 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr"];
n6 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()"];
n7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object))", span="22-24", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()"];
n8 [label="Assert.Equal(''client'', exception.ParamName)", span="26-26", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()"];
n10 [label="Entry Unk.>", span="", cluster="Unk.>"];
n12 [label="Entry lambda expression", span="23-24", cluster="lambda expression"];
n9 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()"];
n11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n13 [label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="23-24", cluster="lambda expression"];
n14 [label="Exit lambda expression", span="23-24", cluster="lambda expression"];
n15 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
n16 [label="Entry lambda expression", span="24-24", cluster="lambda expression"];
n17 [label="StaticMethod()", span="24-24", cluster="lambda expression"];
n18 [label="Exit lambda expression", span="24-24", cluster="lambda expression"];
n19 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()"];
n20 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()"];
n21 [label="_client.Object.Create(() => StaticMethod(), _state.Object)", span="32-32", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()"];
n22 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="34-34", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()"];
n25 [label="Entry lambda expression", span="32-32", cluster="lambda expression"];
n23 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()"];
n24 [label="Entry Unk.Verify", span="", cluster="Unk.Verify"];
n28 [label="Entry lambda expression", span="34-34", cluster="lambda expression"];
n26 [label="StaticMethod()", span="32-32", cluster="lambda expression"];
n27 [label="Exit lambda expression", span="32-32", cluster="lambda expression"];
n29 [label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="34-34", cluster="lambda expression"];
n30 [label="Exit lambda expression", span="34-34", cluster="lambda expression"];
n31 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()"];
n32 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="40-42", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()"];
n33 [label="Assert.Equal(''client'', exception.ParamName)", span="44-44", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()"];
n35 [label="Entry lambda expression", span="41-42", cluster="lambda expression"];
n34 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()"];
n36 [label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="41-42", cluster="lambda expression"];
n37 [label="Exit lambda expression", span="41-42", cluster="lambda expression"];
n38 [label="Entry lambda expression", span="42-42", cluster="lambda expression"];
n39 [label="x.InstanceMethod()", span="42-42", cluster="lambda expression"];
n40 [label="Exit lambda expression", span="42-42", cluster="lambda expression"];
n41 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()"];
n42 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()"];
n43 [label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="50-50", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()"];
n44 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="52-52", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()"];
n46 [label="Entry lambda expression", span="50-50", cluster="lambda expression"];
n45 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()"];
n49 [label="Entry lambda expression", span="52-52", cluster="lambda expression"];
n47 [label="x.InstanceMethod()", span="50-50", cluster="lambda expression"];
n48 [label="Exit lambda expression", span="50-50", cluster="lambda expression"];
n50 [label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="52-52", cluster="lambda expression"];
n51 [label="Exit lambda expression", span="52-52", cluster="lambda expression"];
n52 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()"];
n53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="58-60", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()"];
n54 [label="Assert.Equal(''client'', exception.ParamName)", span="62-62", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()"];
n56 [label="Entry lambda expression", span="59-60", cluster="lambda expression"];
n55 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()"];
n57 [label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="59-60", cluster="lambda expression"];
n58 [label="Exit lambda expression", span="59-60", cluster="lambda expression"];
n59 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)"];
n60 [label="Entry lambda expression", span="60-60", cluster="lambda expression"];
n61 [label="StaticMethod()", span="60-60", cluster="lambda expression"];
n62 [label="Exit lambda expression", span="60-60", cluster="lambda expression"];
n63 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()"];
n64 [label="_client.Object.Enqueue(() => StaticMethod())", span="68-68", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()"];
n65 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="70-70", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()"];
n67 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue"];
n68 [label="Entry lambda expression", span="68-68", cluster="lambda expression"];
n66 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()"];
n71 [label="Entry lambda expression", span="70-70", cluster="lambda expression"];
n69 [label="StaticMethod()", span="68-68", cluster="lambda expression"];
n70 [label="Exit lambda expression", span="68-68", cluster="lambda expression"];
n72 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="70-70", cluster="lambda expression"];
n73 [label="Exit lambda expression", span="70-70", cluster="lambda expression"];
n74 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()"];
n75 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="76-78", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()"];
n76 [label="Assert.Equal(''client'', exception.ParamName)", span="80-80", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()"];
n78 [label="Entry lambda expression", span="77-78", cluster="lambda expression"];
n77 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()"];
n79 [label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="77-78", cluster="lambda expression"];
n80 [label="Exit lambda expression", span="77-78", cluster="lambda expression"];
n81 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)"];
n82 [label="Entry lambda expression", span="78-78", cluster="lambda expression"];
n83 [label="x.InstanceMethod()", span="78-78", cluster="lambda expression"];
n84 [label="Exit lambda expression", span="78-78", cluster="lambda expression"];
n85 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()"];
n86 [label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="86-86", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()"];
n87 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="88-88", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()"];
n89 [label="Entry lambda expression", span="86-86", cluster="lambda expression"];
n88 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()"];
n92 [label="Entry lambda expression", span="88-88", cluster="lambda expression"];
n90 [label="x.InstanceMethod()", span="86-86", cluster="lambda expression"];
n91 [label="Exit lambda expression", span="86-86", cluster="lambda expression"];
n93 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="88-88", cluster="lambda expression"];
n94 [label="Exit lambda expression", span="88-88", cluster="lambda expression"];
n95 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n96 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical''))", span="94-96", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n97 [label="Assert.Equal(''client'', exception.ParamName)", span="98-98", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n99 [label="Entry lambda expression", span="95-96", cluster="lambda expression"];
n98 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n100 [label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical'')", span="95-96", cluster="lambda expression"];
n101 [label="Exit lambda expression", span="95-96", cluster="lambda expression"];
n102 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)"];
n103 [label="Entry lambda expression", span="96-96", cluster="lambda expression"];
n104 [label="StaticMethod()", span="96-96", cluster="lambda expression"];
n105 [label="Exit lambda expression", span="96-96", cluster="lambda expression"];
n106 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n107 [label="_client.Object.Enqueue(() => StaticMethod(), ''critical'')", span="104-104", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n108 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="106-108", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n110 [label="Entry lambda expression", span="104-104", cluster="lambda expression"];
n109 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n113 [label="Entry lambda expression", span="106-108", cluster="lambda expression"];
n111 [label="StaticMethod()", span="104-104", cluster="lambda expression"];
n112 [label="Exit lambda expression", span="104-104", cluster="lambda expression"];
n114 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="106-108", cluster="lambda expression"];
n115 [label="Exit lambda expression", span="106-108", cluster="lambda expression"];
n116 [label="Entry lambda expression", span="108-108", cluster="lambda expression"];
n117 [label="state.Queue == ''critical''", span="108-108", cluster="lambda expression"];
n118 [label="Exit lambda expression", span="108-108", cluster="lambda expression"];
n119 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n120 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical''))", span="114-116", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n121 [label="Assert.Equal(''client'', exception.ParamName)", span="118-118", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n123 [label="Entry lambda expression", span="115-116", cluster="lambda expression"];
n122 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()"];
n124 [label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical'')", span="115-116", cluster="lambda expression"];
n125 [label="Exit lambda expression", span="115-116", cluster="lambda expression"];
n126 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)"];
n127 [label="Entry lambda expression", span="116-116", cluster="lambda expression"];
n128 [label="x.InstanceMethod()", span="116-116", cluster="lambda expression"];
n129 [label="Exit lambda expression", span="116-116", cluster="lambda expression"];
n130 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n131 [label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), ''critical'')", span="124-124", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n132 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="126-128", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n134 [label="Entry lambda expression", span="124-124", cluster="lambda expression"];
n133 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()"];
n137 [label="Entry lambda expression", span="126-128", cluster="lambda expression"];
n135 [label="x.InstanceMethod()", span="124-124", cluster="lambda expression"];
n136 [label="Exit lambda expression", span="124-124", cluster="lambda expression"];
n138 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="126-128", cluster="lambda expression"];
n139 [label="Exit lambda expression", span="126-128", cluster="lambda expression"];
n140 [label="Entry lambda expression", span="128-128", cluster="lambda expression"];
n141 [label="state.Queue == ''critical''", span="128-128", cluster="lambda expression"];
n142 [label="Exit lambda expression", span="128-128", cluster="lambda expression"];
n143 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()"];
n144 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="134-136", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()"];
n145 [label="Assert.Equal(''client'', exception.ParamName)", span="138-138", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()"];
n147 [label="Entry lambda expression", span="135-136", cluster="lambda expression"];
n146 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()"];
n148 [label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="135-136", cluster="lambda expression"];
n149 [label="Exit lambda expression", span="135-136", cluster="lambda expression"];
n150 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
n151 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
n152 [label="Entry lambda expression", span="136-136", cluster="lambda expression"];
n153 [label="StaticMethod()", span="136-136", cluster="lambda expression"];
n154 [label="Exit lambda expression", span="136-136", cluster="lambda expression"];
n155 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()"];
n156 [label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="144-144", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()"];
n157 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="146-148", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()"];
n159 [label="Entry Unk.Schedule", span="", cluster="Unk.Schedule"];
n160 [label="Entry lambda expression", span="144-144", cluster="lambda expression"];
n158 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()"];
n163 [label="Entry lambda expression", span="146-148", cluster="lambda expression"];
n161 [label="StaticMethod()", span="144-144", cluster="lambda expression"];
n162 [label="Exit lambda expression", span="144-144", cluster="lambda expression"];
n164 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="146-148", cluster="lambda expression"];
n165 [label="Exit lambda expression", span="146-148", cluster="lambda expression"];
n166 [label="Entry lambda expression", span="148-148", cluster="lambda expression"];
n167 [label="state.EnqueueAt > DateTime.UtcNow", span="148-148", cluster="lambda expression"];
n168 [label="Exit lambda expression", span="148-148", cluster="lambda expression"];
n169 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()"];
n170 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="154-156", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()"];
n171 [label="Assert.Equal(''client'', exception.ParamName)", span="158-158", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()"];
n173 [label="Entry lambda expression", span="155-156", cluster="lambda expression"];
n172 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()"];
n174 [label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="155-156", cluster="lambda expression"];
n175 [label="Exit lambda expression", span="155-156", cluster="lambda expression"];
n176 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
n177 [label="Entry lambda expression", span="156-156", cluster="lambda expression"];
n178 [label="x.InstanceMethod()", span="156-156", cluster="lambda expression"];
n179 [label="Exit lambda expression", span="156-156", cluster="lambda expression"];
n180 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()"];
n181 [label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="164-165", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()"];
n182 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="167-169", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()"];
n184 [label="Entry lambda expression", span="165-165", cluster="lambda expression"];
n183 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()"];
n187 [label="Entry lambda expression", span="167-169", cluster="lambda expression"];
n185 [label="x.InstanceMethod()", span="165-165", cluster="lambda expression"];
n186 [label="Exit lambda expression", span="165-165", cluster="lambda expression"];
n188 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="167-169", cluster="lambda expression"];
n189 [label="Exit lambda expression", span="167-169", cluster="lambda expression"];
n190 [label="Entry lambda expression", span="169-169", cluster="lambda expression"];
n191 [label="state.EnqueueAt > DateTime.UtcNow", span="169-169", cluster="lambda expression"];
n192 [label="Exit lambda expression", span="169-169", cluster="lambda expression"];
n193 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()"];
n194 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()"];
m1_26 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerDistributedLock.cs"];
m1_32 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="232-232", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerDistributedLock.cs"];
m1_35 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="245-245", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="SqlServerDistributedLock.cs"];
m1_34 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="250-250", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerDistributedLock.cs"];
m1_78 [label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22", cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLock.cs"];
m1_30 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="SqlServerDistributedLock.cs"];
m1_54 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="130-130", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs"];
m1_55 [label=_lockObject, span="132-132", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs"];
m1_56 [label="_connection?.Execute(''SELECT 1;'')", span="136-136", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs"];
m1_57 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="130-130", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="SqlServerDistributedLock.cs"];
m1_53 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_80 [label="var parameters = new DynamicParameters()", span="185-185", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_81 [label="parameters.Add(''@Resource'', resource)", span="186-186", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_84 [label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="190-193", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_87 [label="throw new SqlServerDistributedLockException(\r\n                    $''Could not release a lock on the resource '{resource}': Server returned the '{releaseResult}' error.'');", span="199-200", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_82 [label="parameters.Add(''@LockOwner'', LockOwner)", span="187-187", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_83 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="188-188", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_85 [label="var releaseResult = parameters.Get<int>(''@Result'')", span="195-195", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_86 [label="releaseResult < 0", span="197-197", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_88 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs"];
m1_79 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerDistributedLock.cs"];
m1_31 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerDistributedLock.cs"];
m1_27 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="SqlServerDistributedLock.cs"];
m1_74 [label="Entry DynamicParameters.cstr", span="", cluster="DynamicParameters.cstr", file="SqlServerDistributedLock.cs"];
m1_75 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerDistributedLock.cs"];
m1_4 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="58-58", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_5 [label="storage == null", span="60-60", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_6 [label="throw new ArgumentNullException(nameof(storage));", span="60-60", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_7 [label="String.IsNullOrEmpty(resource)", span="61-61", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_8 [label="throw new ArgumentNullException(nameof(resource));", span="61-61", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_9 [label="timeout.TotalSeconds + CommandTimeoutAdditionSeconds > Int32.MaxValue", span="62-62", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_13 [label="_storage = storage", span="67-67", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_14 [label="_resource = resource", span="68-68", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_16 [label="_connection = storage.CreateAndOpenConnection()", span="72-72", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_19 [label="storage.ReleaseConnection(_connection)", span="80-80", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_10 [label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {Int32.MaxValue - CommandTimeoutAdditionSeconds} seconds'', nameof(timeout));", span="62-63", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_11 [label="timeout.TotalMilliseconds > Int32.MaxValue", span="64-64", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_12 [label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {(int)TimeSpan.FromMilliseconds(Int32.MaxValue).TotalSeconds} seconds'', nameof(timeout));", span="64-65", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_17 [label="Acquire(_connection, _resource, timeout)", span="76-76", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_15 [label="!AcquiredLocks.Value.ContainsKey(_resource) || AcquiredLocks.Value[_resource] == 0", span="70-70", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_24 [label="AcquiredLocks.Value[_resource]++", span="93-93", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_18 [label=Exception, span="78-78", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_21 [label="!_storage.IsExistingConnection(_connection)", span="84-84", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_20 [label="throw;", span="81-81", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_22 [label="_timer = new Timer(ExecuteKeepAliveQuery, null, KeepAliveInterval, KeepAliveInterval)", span="86-86", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_23 [label="AcquiredLocks.Value[_resource] = 1", span="89-89", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_25 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="58-58", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_3 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerDistributedLock.cs"];
m1_36 [label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0", cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_28 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SqlServerDistributedLock.cs"];
m1_33 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="150-150", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_59 [label="var parameters = new DynamicParameters()", span="152-152", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_60 [label="parameters.Add(''@Resource'', resource)", span="153-153", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_64 [label="parameters.Add(''@LockTimeout'', (int)timeout.TotalMilliseconds)", span="157-157", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_67 [label="connection.Execute(\r\n                @''sp_getapplock'',\r\n                parameters,\r\n                commandTimeout: commandTimeout,\r\n                commandType: CommandType.StoredProcedure)", span="163-167", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=1, file="SqlServerDistributedLock.cs"];
m1_71 [label="throw new DistributedLockTimeoutException(resource);", span="175-175", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_72 [label="throw new SqlServerDistributedLockException(\r\n                    $''Could not place a lock on the resource '{resource}': {(LockErrorMessages.ContainsKey(lockResult) ? LockErrorMessages[lockResult] : $''Server returned the '{lockResult}' error.'')}.'');", span="178-179", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=1, file="SqlServerDistributedLock.cs"];
m1_61 [label="parameters.Add(''@DbPrincipal'', ''public'')", span="154-154", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_62 [label="parameters.Add(''@LockMode'', LockMode)", span="155-155", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_63 [label="parameters.Add(''@LockOwner'', LockOwner)", span="156-156", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_65 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="158-158", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_68 [label="var lockResult = parameters.Get<int>(''@Result'')", span="169-169", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_66 [label="var commandTimeout = (int)(timeout.TotalSeconds + CommandTimeoutAdditionSeconds)", span="161-161", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_69 [label="lockResult < 0", span="171-171", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_70 [label="lockResult == -1", span="173-173", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_73 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="150-150", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs"];
m1_0 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="SqlServerDistributedLock.cs"];
m1_1 [label="new Dictionary<string, int>()", span="48-48", cluster="lambda expression", file="SqlServerDistributedLock.cs"];
m1_2 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="SqlServerDistributedLock.cs"];
m1_77 [label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6", cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="SqlServerDistributedLock.cs"];
m1_52 [label="Entry System.Threading.Timer.Dispose()", span="0-0", cluster="System.Threading.Timer.Dispose()", file="SqlServerDistributedLock.cs"];
m1_29 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerDistributedLock.cs"];
m1_58 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerDistributedLock.cs"];
m1_51 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SqlServerDistributedLock.cs"];
m1_37 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="97-97", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_38 [label=_completed, span="99-99", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_39 [label="return;", span="99-99", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_40 [label="_completed = true", span="101-101", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_41 [label="!AcquiredLocks.Value.ContainsKey(_resource)", span="103-103", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_42 [label="return;", span="103-103", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_43 [label="AcquiredLocks.Value[_resource]--", span="105-105", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_44 [label="AcquiredLocks.Value[_resource] != 0", span="107-107", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_45 [label="return;", span="107-107", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_46 [label=_lockObject, span="109-109", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_47 [label="AcquiredLocks.Value.Remove(_resource)", span="116-116", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_48 [label="_timer?.Dispose()", span="118-118", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_49 [label="Release(_connection, _resource)", span="120-120", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="SqlServerDistributedLock.cs"];
m1_50 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="97-97", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs"];
m1_89 [label="Hangfire.SqlServer.SqlServerDistributedLock", span="", file="SqlServerDistributedLock.cs"];
n195 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n195 -> n182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n7 -> n12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n9 -> n6  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n13 -> n16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n14 -> n12  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=2, style=dotted];
n18 -> n16  [key=0, style=bold, color=blue];
n19 -> n193  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n15  [key=2, style=dotted];
n21 -> n25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n22 -> n28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n25 -> n26  [key=0, style=solid];
n23 -> n20  [key=0, style=bold, color=blue];
n28 -> n29  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n19  [key=2, style=dotted];
n27 -> n25  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n29 -> n10  [key=2, style=dotted];
n29 -> n15  [key=2, style=dotted];
n30 -> n28  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n10  [key=2, style=dotted];
n32 -> n35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n33 -> n34  [key=0, style=solid];
n33 -> n11  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n34 -> n31  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n36 -> n10  [key=2, style=dotted];
n36 -> n38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n37 -> n35  [key=0, style=bold, color=blue];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n40 -> n38  [key=0, style=bold, color=blue];
n41 -> n194  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n10  [key=2, style=dotted];
n43 -> n46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n44 -> n45  [key=0, style=solid];
n44 -> n24  [key=2, style=dotted];
n44 -> n49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n46 -> n47  [key=0, style=solid];
n45 -> n42  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n47 -> n41  [key=2, style=dotted];
n48 -> n46  [key=0, style=bold, color=blue];
n50 -> n51  [key=0, style=solid];
n50 -> n10  [key=2, style=dotted];
n50 -> n15  [key=2, style=dotted];
n51 -> n49  [key=0, style=bold, color=blue];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n10  [key=2, style=dotted];
n53 -> n56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n54 -> n55  [key=0, style=solid];
n54 -> n11  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n55 -> n52  [key=0, style=bold, color=blue];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=2, style=dotted];
n57 -> n60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n58 -> n56  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n61 -> n19  [key=2, style=dotted];
n62 -> n60  [key=0, style=bold, color=blue];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n67  [key=2, style=dotted];
n64 -> n68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n65 -> n66  [key=0, style=solid];
n65 -> n24  [key=2, style=dotted];
n65 -> n71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n68 -> n69  [key=0, style=solid];
n66 -> n63  [key=0, style=bold, color=blue];
n71 -> n72  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n19  [key=2, style=dotted];
n70 -> n68  [key=0, style=bold, color=blue];
n72 -> n73  [key=0, style=solid];
n72 -> n10  [key=2, style=dotted];
n72 -> n15  [key=2, style=dotted];
n73 -> n71  [key=0, style=bold, color=blue];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n10  [key=2, style=dotted];
n75 -> n78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n76 -> n77  [key=0, style=solid];
n76 -> n11  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n77 -> n74  [key=0, style=bold, color=blue];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=2, style=dotted];
n79 -> n82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n80 -> n78  [key=0, style=bold, color=blue];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n41  [key=2, style=dotted];
n84 -> n82  [key=0, style=bold, color=blue];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n10  [key=2, style=dotted];
n86 -> n89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n87 -> n88  [key=0, style=solid];
n87 -> n24  [key=2, style=dotted];
n87 -> n92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n89 -> n90  [key=0, style=solid];
n88 -> n85  [key=0, style=bold, color=blue];
n92 -> n93  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n90 -> n41  [key=2, style=dotted];
n91 -> n89  [key=0, style=bold, color=blue];
n93 -> n94  [key=0, style=solid];
n93 -> n10  [key=2, style=dotted];
n93 -> n15  [key=2, style=dotted];
n94 -> n92  [key=0, style=bold, color=blue];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n10  [key=2, style=dotted];
n96 -> n99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n97 -> n98  [key=0, style=solid];
n97 -> n11  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n98 -> n95  [key=0, style=bold, color=blue];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=2, style=dotted];
n100 -> n103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n101 -> n99  [key=0, style=bold, color=blue];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n19  [key=2, style=dotted];
n105 -> n103  [key=0, style=bold, color=blue];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n67  [key=2, style=dotted];
n107 -> n110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n108 -> n109  [key=0, style=solid];
n108 -> n24  [key=2, style=dotted];
n108 -> n113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n110 -> n111  [key=0, style=solid];
n109 -> n106  [key=0, style=bold, color=blue];
n113 -> n114  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n19  [key=2, style=dotted];
n112 -> n110  [key=0, style=bold, color=blue];
n114 -> n115  [key=0, style=solid];
n114 -> n10  [key=2, style=dotted];
n114 -> n15  [key=2, style=dotted];
n114 -> n116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n115 -> n113  [key=0, style=bold, color=blue];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n118 -> n116  [key=0, style=bold, color=blue];
n119 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n10  [key=2, style=dotted];
n120 -> n123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n121 -> n122  [key=0, style=solid];
n121 -> n11  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n122 -> n119  [key=0, style=bold, color=blue];
n124 -> n125  [key=0, style=solid];
n124 -> n126  [key=2, style=dotted];
n124 -> n127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n125 -> n123  [key=0, style=bold, color=blue];
n127 -> n128  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n128 -> n41  [key=2, style=dotted];
n129 -> n127  [key=0, style=bold, color=blue];
n130 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n10  [key=2, style=dotted];
n131 -> n134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n132 -> n133  [key=0, style=solid];
n132 -> n24  [key=2, style=dotted];
n132 -> n137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n134 -> n135  [key=0, style=solid];
n133 -> n130  [key=0, style=bold, color=blue];
n137 -> n138  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n135 -> n41  [key=2, style=dotted];
n136 -> n134  [key=0, style=bold, color=blue];
n138 -> n139  [key=0, style=solid];
n138 -> n10  [key=2, style=dotted];
n138 -> n15  [key=2, style=dotted];
n138 -> n140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n139 -> n137  [key=0, style=bold, color=blue];
n140 -> n141  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n142 -> n140  [key=0, style=bold, color=blue];
n143 -> n144  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n144 -> n10  [key=2, style=dotted];
n144 -> n147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n145 -> n146  [key=0, style=solid];
n145 -> n11  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n146 -> n143  [key=0, style=bold, color=blue];
n148 -> n149  [key=0, style=solid];
n148 -> n150  [key=2, style=dotted];
n148 -> n151  [key=2, style=dotted];
n148 -> n152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n149 -> n147  [key=0, style=bold, color=blue];
n152 -> n153  [key=0, style=solid];
n153 -> n154  [key=0, style=solid];
n153 -> n19  [key=2, style=dotted];
n154 -> n152  [key=0, style=bold, color=blue];
n155 -> n156  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n156 -> n150  [key=2, style=dotted];
n156 -> n159  [key=2, style=dotted];
n156 -> n160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n157 -> n158  [key=0, style=solid];
n157 -> n24  [key=2, style=dotted];
n157 -> n163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n160 -> n161  [key=0, style=solid];
n158 -> n155  [key=0, style=bold, color=blue];
n163 -> n164  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n19  [key=2, style=dotted];
n162 -> n160  [key=0, style=bold, color=blue];
n164 -> n165  [key=0, style=solid];
n164 -> n10  [key=2, style=dotted];
n164 -> n15  [key=2, style=dotted];
n164 -> n166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n165 -> n163  [key=0, style=bold, color=blue];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n168 -> n166  [key=0, style=bold, color=blue];
n169 -> n170  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n170 -> n10  [key=2, style=dotted];
n170 -> n173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n171 -> n172  [key=0, style=solid];
n171 -> n11  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n172 -> n169  [key=0, style=bold, color=blue];
n174 -> n175  [key=0, style=solid];
n174 -> n150  [key=2, style=dotted];
n174 -> n176  [key=2, style=dotted];
n174 -> n177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n175 -> n173  [key=0, style=bold, color=blue];
n177 -> n178  [key=0, style=solid];
n178 -> n179  [key=0, style=solid];
n178 -> n41  [key=2, style=dotted];
n179 -> n177  [key=0, style=bold, color=blue];
n180 -> n181  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n181 -> n150  [key=2, style=dotted];
n181 -> n10  [key=2, style=dotted];
n181 -> n184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n182 -> n183  [key=0, style=solid];
n182 -> n24  [key=2, style=dotted];
n182 -> n187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n184 -> n185  [key=0, style=solid];
n183 -> n180  [key=0, style=bold, color=blue];
n187 -> n188  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n41  [key=2, style=dotted];
n186 -> n184  [key=0, style=bold, color=blue];
n188 -> n189  [key=0, style=solid];
n188 -> n10  [key=2, style=dotted];
n188 -> n15  [key=2, style=dotted];
n188 -> n190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n189 -> n187  [key=0, style=bold, color=blue];
n190 -> n191  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n192 -> n190  [key=0, style=bold, color=blue];
n193 -> n19  [key=0, style=bold, color=blue];
n194 -> n41  [key=0, style=bold, color=blue];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=2, style=dotted];
m1_57 -> m1_54  [key=0, style=bold, color=blue];
m1_53 -> m1_80  [key=0, style=solid];
m1_53 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_53 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m1_53 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_74  [key=2, style=dotted];
m1_80 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_80 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_80 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_80 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_75  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_58  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_78  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_75  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_75  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> n10  [key=2, style=dotted];
m1_85 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=releaseResult];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [key=0, style=solid];
m1_88 -> m1_53  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m1_4 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_4 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_4 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_4 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m1_4 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_4 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m1_4 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_6 -> m1_25  [key=0, style=solid];
m1_6 -> m1_26  [key=2, style=dotted];
m1_6 -> m1_27  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_7 -> m1_28  [key=2, style=dotted];
m1_8 -> m1_25  [key=0, style=solid];
m1_8 -> m1_26  [key=2, style=dotted];
m1_8 -> m1_27  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_9 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_32  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_34  [key=2, style=dotted];
m1_10 -> m1_25  [key=0, style=solid];
m1_10 -> m1_29  [key=2, style=dotted];
m1_10 -> m1_27  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_11 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_11 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_12 -> m1_25  [key=0, style=solid];
m1_12 -> m1_29  [key=2, style=dotted];
m1_12 -> m1_30  [key=2, style=dotted];
m1_12 -> m1_27  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_21  [key=0, style=solid];
m1_17 -> m1_33  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_24  [key=0, style=solid];
m1_15 -> m1_31  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_35  [key=2, style=dotted];
m1_20 -> m1_25  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_36  [key=2, style=dotted];
m1_23 -> m1_25  [key=0, style=solid];
m1_25 -> m1_4  [key=0, style=bold, color=blue];
m1_33 -> m1_59  [key=0, style=solid, color=red];
m1_33 -> m1_60  [key=1, style=dashed, color=red, label=string];
m1_33 -> m1_64  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m1_33 -> m1_67  [key=1, style=dashed, color=red, label=IDbConnection];
m1_33 -> m1_71  [key=1, style=dashed, color=red, label=string];
m1_33 -> m1_72  [key=1, style=dashed, color=red, label=string];
m1_33 -> m1_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan timeout"];
m1_59 -> m1_60  [key=0, style=solid, color=red];
m1_59 -> m1_74  [key=2, style=dotted, color=red];
m1_59 -> m1_61  [key=1, style=dashed, color=red, label=parameters];
m1_59 -> m1_62  [key=1, style=dashed, color=red, label=parameters];
m1_59 -> m1_63  [key=1, style=dashed, color=red, label=parameters];
m1_59 -> m1_64  [key=1, style=dashed, color=red, label=parameters];
m1_59 -> m1_65  [key=1, style=dashed, color=red, label=parameters];
m1_59 -> m1_67  [key=1, style=dashed, color=red, label=parameters];
m1_59 -> m1_68  [key=1, style=dashed, color=red, label=parameters];
m1_60 -> m1_61  [key=0, style=solid, color=red];
m1_60 -> m1_75  [key=2, style=dotted, color=red];
m1_64 -> m1_65  [key=0, style=solid, color=red];
m1_64 -> m1_75  [key=2, style=dotted, color=red];
m1_64 -> m1_64  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m1_64 -> m1_66  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m1_67 -> m1_68  [key=0, style=solid, color=red];
m1_67 -> m1_58  [key=2, style=dotted, color=red];
m1_71 -> m1_73  [key=0, style=solid, color=red];
m1_71 -> m1_77  [key=2, style=dotted, color=red];
m1_72 -> m1_73  [key=0, style=solid, color=red];
m1_72 -> m1_78  [key=2, style=dotted, color=red];
m1_72 -> m1_79  [key=2, style=dotted, color=red];
m1_61 -> m1_62  [key=0, style=solid, color=red];
m1_61 -> m1_75  [key=2, style=dotted, color=red];
m1_62 -> m1_63  [key=0, style=solid, color=red];
m1_62 -> m1_75  [key=2, style=dotted, color=red];
m1_63 -> m1_64  [key=0, style=solid, color=red];
m1_63 -> m1_75  [key=2, style=dotted, color=red];
m1_65 -> m1_66  [key=0, style=solid, color=red];
m1_65 -> m1_75  [key=2, style=dotted, color=red];
m1_68 -> m1_69  [key=0, style=solid, color=red];
m1_68 -> n10  [key=2, style=dotted, color=red];
m1_68 -> m1_70  [key=1, style=dashed, color=red, label=lockResult];
m1_68 -> m1_72  [key=1, style=dashed, color=red, label=lockResult];
m1_66 -> m1_67  [key=0, style=solid, color=red];
m1_66 -> m1_66  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m1_69 -> m1_70  [key=0, style=solid, color=red];
m1_69 -> m1_73  [key=0, style=solid, color=red];
m1_70 -> m1_71  [key=0, style=solid, color=red];
m1_70 -> m1_72  [key=0, style=solid, color=red];
m1_73 -> m1_33  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=0, style=solid];
m1_39 -> m1_50  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=0, style=solid];
m1_41 -> m1_31  [key=2, style=dotted];
m1_42 -> m1_50  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=0, style=solid];
m1_45 -> m1_50  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_51  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid, color=red];
m1_48 -> m1_52  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid, color=red];
m1_49 -> m1_53  [key=2, style=dotted, color=red];
m1_50 -> m1_37  [key=0, style=bold, color=blue];
m1_89 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_49  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
m1_89 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
}
