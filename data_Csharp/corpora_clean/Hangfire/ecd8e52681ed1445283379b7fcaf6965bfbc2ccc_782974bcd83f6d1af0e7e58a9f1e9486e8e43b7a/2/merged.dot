digraph  {
n80 [label="HangFire.Tests.ServerFeature", span=""];
n0 [label="Entry HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner"];
n3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr"];
n7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)"];
n4 [label="Exit HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart"];
n9 [label="Entry HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()"];
n10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()"];
n11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()"];
n13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd"];
n12 [label="Exit HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()"];
n14 [label="Entry HangFire.Tests.ServerFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ServerFeature.TestInitialize()"];
n15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server''))", span="48-49", cluster="HangFire.Tests.ServerFeature.TestInitialize()"];
n16 [label="HangFire.Tests.ServerFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.ServerFeature.TestInitialize()"];
n17 [label="Exit HangFire.Tests.ServerFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ServerFeature.TestInitialize()"];
n18 [label="Entry HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()"];
n19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()"];
n20 [label="Exit HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()"];
n21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd"];
n22 [label="Entry HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n24 [label="Exit HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart"];
n26 [label="Entry HangFire.Tests.ServerFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()"];
n27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()"];
n28 [label="Exit HangFire.Tests.ServerFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()"];
n29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors"];
n30 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()"];
n31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should add itself to the servers set'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()"];
n32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()"];
n37 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr"];
n33 [label="testRunner.When(''the \'Test\' server starts'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="81-81", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()"];
n34 [label="testRunner.Then(''the servers set should contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="83-83", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()"];
n38 [label="Entry Unk.When", span="", cluster="Unk.When"];
n35 [label="this.ScenarioCleanup()", span="85-85", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()"];
n39 [label="Entry Unk.Then", span="", cluster="Unk.Then"];
n36 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()"];
n40 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n41 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its properties'', ((string[])(null)))", span="94-94", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n42 [label="this.ScenarioSetup(scenarioInfo)", span="96-96", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n43 [label="testRunner.When(''the \'Test\' server starts with 5 workers'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="98-98", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n44 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="100-102", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n45 [label="table1.AddRow(new string[] {\r\n                        ''WorkerCount'',\r\n                        ''5''})", span="103-105", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n50 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr"];
n46 [label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="106-108", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n47 [label="testRunner.Then(''the \'Test\' server\'s properties should contain the following items:'', ((string)(null)), table1, ''Then '')", span="110-110", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n51 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow"];
n48 [label="this.ScenarioCleanup()", span="112-112", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n49 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()"];
n52 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()"];
n53 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its queues'', ((string[])(null)))", span="121-121", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()"];
n54 [label="this.ScenarioSetup(scenarioInfo)", span="123-123", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()"];
n55 [label="testRunner.When(''the \'Test\' server starts with the queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="125-125", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()"];
n56 [label="testRunner.Then(''the \'Test\' server\'s queues list should contain queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="127-127", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()"];
n57 [label="this.ScenarioCleanup()", span="129-129", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()"];
n58 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()"];
n59 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()"];
n60 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should remove itself from the servers set'', ((string[])(null)))", span="138-138", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()"];
n61 [label="this.ScenarioSetup(scenarioInfo)", span="140-140", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()"];
n62 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="142-142", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()"];
n63 [label="testRunner.Then(''the servers set should not contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="144-144", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()"];
n64 [label="this.ScenarioCleanup()", span="146-146", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()"];
n65 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()"];
n66 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()"];
n67 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its properties list'', ((string[])(null)))", span="155-155", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()"];
n68 [label="this.ScenarioSetup(scenarioInfo)", span="157-157", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()"];
n69 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="159-159", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()"];
n70 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="161-161", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()"];
n71 [label="this.ScenarioCleanup()", span="163-163", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()"];
n72 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()"];
n73 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()"];
n74 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its queues'', ((string[])(null)))", span="172-172", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()"];
n75 [label="this.ScenarioSetup(scenarioInfo)", span="174-174", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()"];
n76 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()"];
n77 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server queues'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="178-178", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()"];
n78 [label="this.ScenarioCleanup()", span="180-180", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()"];
n79 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()"];
d34 [label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = String.Format(''Triggered by {0}'', ToString()) }, \r\n                    ScheduledState.StateName))", span="150-155", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0];
d53 [label="Hangfire.Server.DelayedJobScheduler", span=""];
d20 [label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="129-129", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d27 [label="var connection = context.Storage.GetConnection()", span="131-131", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d30 [label="var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="137-137", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d33 [label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Triggered scheduled job''\r\n                }", span="145-148", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d35 [label="appliedState == null", span="157-157", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d47 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])"];
d46 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()"];
d23 [label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="124-124", cluster="Hangfire.Server.DelayedJobScheduler.ToString()"];
d48 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d49 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)"];
d7 [label="_stateChanger = stateChanger", span="92-92", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)"];
d8 [label="_pollingDelay = pollingDelay", span="93-93", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)"];
d13 [label="EnqueueNextScheduledJob(context)", span="105-105", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d18 [label="context.Sleep(_pollingDelay)", span="120-120", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d24 [label="return GetType().Name;", span="126-126", cluster="Hangfire.Server.DelayedJobScheduler.ToString()"];
d40 [label="Exit Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="129-129", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d11 [label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="101-101", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d32 [label="return false;", span="142-142", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d39 [label="return true;", span="169-169", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d28 [label="connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="132-132", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d41 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()"];
d36 [label="var transaction = connection.CreateWriteTransaction()", span="162-162", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d29 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="134-134", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d31 [label="String.IsNullOrEmpty(jobId)", span="139-139", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d44 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d37 [label="transaction.RemoveFromSet(''schedule'', jobId)", span="164-164", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d25 [label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="124-124", cluster="Hangfire.Server.DelayedJobScheduler.ToString()"];
d4 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="88-88", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)"];
d5 [label="stateChanger == null", span="90-90", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)"];
d9 [label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="88-88", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)"];
d12 [label="var jobsEnqueued = 0", span="103-103", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d15 [label="context.CancellationToken.IsCancellationRequested", span="109-109", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d14 [label="jobsEnqueued++", span="107-107", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d16 [label="jobsEnqueued != 0", span="115-115", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d17 [label="Logger.InfoFormat(''{0} scheduled job(s) enqueued.'', jobsEnqueued)", span="117-117", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d19 [label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="101-101", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)"];
d22 [label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23", cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)"];
d26 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
d38 [label="transaction.Commit()", span="165-165", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)"];
d42 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)"];
d50 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()"];
d43 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)"];
d45 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d51 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)"];
d6 [label="throw new ArgumentNullException(''stateChanger'');", span="90-90", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)"];
d21 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])"];
d52 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()"];
d10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
m0_438 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="JobServer.cs"];
m0_232 [label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0", cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="JobServer.cs"];
m0_54 [label="Entry Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", span="153-153", cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_56 [label="logger.LogFormat(LogLevel.Error, message, args)", span="157-157", cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", color=green, community=0, file="JobServer.cs"];
m0_55 [label="logger.IsErrorEnabled()", span="155-155", cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_57 [label="Exit Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", span="153-153", cluster="Hangfire.Logging.LogExtensions.ErrorFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_331 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", span="709-709", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", file="JobServer.cs"];
m0_345 [label="_logger = logger", span="711-711", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", file="JobServer.cs"];
m0_346 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", span="709-709", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log4NetLogger(dynamic)", file="JobServer.cs"];
m0_305 [label="Entry Unk.WarnException", span="", cluster="Unk.WarnException", file="JobServer.cs"];
m0_6 [label="throw new ArgumentNullException(''stateChanger'');", span="90-90", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobServer.cs"];
m0_129 [label="logger == null", span="290-290", cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_130 [label="throw new ArgumentNullException(nameof(logger));", span="292-292", cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_131 [label="Exit Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", span="288-288", cluster="Hangfire.Logging.LogExtensions.GuardAgainstNullLogger(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_26 [label="Exit Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", span="104-104", cluster="Hangfire.Logging.LogExtensions.IsWarnEnabled(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_51 [label="logger.Log(LogLevel.Error, message.AsFunc())", span="149-149", cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, string)", file="JobServer.cs", color=green, community=0];
m0_272 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="JobServer.cs"];
m0_540 [label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", span="1435-1435", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", file="JobServer.cs"];
m0_563 [label="_name = name", span="1437-1437", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", file="JobServer.cs"];
m0_564 [label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", span="1435-1435", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.ColouredConsoleLogger(string)", file="JobServer.cs"];
m0_49 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="JobServer.cs"];
m0_50 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", color=green, community=0, file="JobServer.cs"];
m0_52 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="JobServer.cs"];
m0_423 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", span="1018-1018", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_424 [label="return Type.GetType(''Serilog.Log, Serilog'');", span="1020-1020", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_425 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", span="1018-1018", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_234 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="JobServer.cs"];
m0_53 [label="Hangfire.Server.DelayedJobScheduler", span="", cluster="Hangfire.Logging.ILog.IsErrorEnabled()", file="JobServer.cs"];
m0_37 [label="transaction.RemoveFromSet(''schedule'', jobId)", span="164-164", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_39 [label="return true;", span="169-169", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_38 [label="transaction.Commit()", span="165-165", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_40 [label="Exit Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="129-129", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_22 [label="Exit Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", span="98-98", cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_23 [label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="124-124", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobServer.cs"];
m0_24 [label="return GetType().Name;", span="126-126", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobServer.cs"];
m0_25 [label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="124-124", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobServer.cs"];
m0_78 [label="Entry Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", span="198-198", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_79 [label="GuardAgainstNullLogger(logger)", span="200-200", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_80 [label="logger.Log(LogLevel.Info, messageFunc)", span="201-201", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_81 [label="Exit Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", span="198-198", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_467 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="JobServer.cs"];
m0_303 [label="Entry Unk.DebugException", span="", cluster="Unk.DebugException", file="JobServer.cs"];
m0_42 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobServer.cs"];
m0_44 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobServer.cs"];
m0_43 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobServer.cs"];
m0_45 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobServer.cs"];
m0_420 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", span="1121-1121", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", file="JobServer.cs"];
m0_469 [label="_logger = logger", span="1123-1123", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", file="JobServer.cs"];
m0_470 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", span="1121-1121", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger(object)", file="JobServer.cs"];
m0_147 [label="Entry Hangfire.Logging.LogProvider.For<T>()", span="335-335", cluster="Hangfire.Logging.LogProvider.For<T>()", file="JobServer.cs"];
m0_148 [label="return GetLogger(typeof(T));", span="337-337", cluster="Hangfire.Logging.LogProvider.For<T>()", file="JobServer.cs"];
m0_149 [label="Exit Hangfire.Logging.LogProvider.For<T>()", span="335-335", cluster="Hangfire.Logging.LogProvider.For<T>()", file="JobServer.cs"];
m0_11 [label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="101-101", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_12 [label="var jobsEnqueued = 0", span="103-103", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_13 [label="EnqueueNextScheduledJob(context)", span="105-105", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_14 [label="jobsEnqueued++", span="107-107", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_275 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="JobServer.cs"];
m0_0 [label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="56-56", cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_1 [label="Exit Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="56-56", cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_571 [label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", span="1451-1451", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_572 [label="var formattedMessage = MessageFormatter(_name, logLevel, message, e)", span="1453-1453", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_574 [label="Colors.TryGetValue(logLevel, out color)", span="1456-1456", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_573 [label="ConsoleColor color", span="1454-1454", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_578 [label="Console.Out.WriteLine(formattedMessage)", span="1464-1464", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_579 [label="Console.Out.WriteLine(formattedMessage)", span="1474-1474", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_575 [label=Lock, span="1458-1458", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_577 [label="Console.ForegroundColor = color", span="1463-1463", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_576 [label="var originalColor = Console.ForegroundColor", span="1460-1460", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_580 [label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", span="1451-1451", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Write(Hangfire.Logging.LogLevel, string, System.Exception)", file="JobServer.cs"];
m0_91 [label="Entry Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", span="220-220", cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_93 [label="logger.Log(LogLevel.Info, message.AsFunc(), exception)", span="224-224", cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_92 [label="logger.IsInfoEnabled()", span="222-222", cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_94 [label="Exit Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", span="220-220", cluster="Hangfire.Logging.LogExtensions.InfoException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_531 [label="Entry System.Action<T1, T2, T3, T4>.Invoke(T1, T2, T3, T4)", span="0-0", cluster="System.Action<T1, T2, T3, T4>.Invoke(T1, T2, T3, T4)", file="JobServer.cs"];
m0_116 [label="Entry Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", span="264-264", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_118 [label="logger.Log(LogLevel.Warn, message.AsFunc())", span="268-268", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_117 [label="logger.IsWarnEnabled()", span="266-266", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_119 [label="Exit Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", span="264-264", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_334 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", span="691-691", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_335 [label="return Type.GetType(''log4net.LogManager, log4net'');", span="693-693", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_336 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", span="691-691", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_271 [label="Entry Unk.Debug", span="", cluster="Unk.Debug", file="JobServer.cs"];
m0_221 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", span="509-509", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_222 [label="return Type.GetType(''NLog.LogManager, NLog'');", span="511-511", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_223 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", span="509-509", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogManagerType()", file="JobServer.cs"];
m0_7 [label="_stateChanger = stateChanger", span="92-92", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobServer.cs", color=red, community=0];
m0_8 [label="_pollingDelay = pollingDelay", span="93-93", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobServer.cs"];
m0_9 [label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="88-88", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobServer.cs"];
m0_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobServer.cs"];
m0_87 [label="Entry Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", span="212-212", cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_89 [label="logger.LogFormat(LogLevel.Info, message, args)", span="216-216", cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_88 [label="logger.IsInfoEnabled()", span="214-214", cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_90 [label="Exit Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", span="212-212", cluster="Hangfire.Logging.LogExtensions.InfoFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_132 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobServer.cs"];
m0_103 [label="Entry Hangfire.Logging.ILog.IsTraceEnabled()", span="98-98", cluster="Hangfire.Logging.ILog.IsTraceEnabled()", file="JobServer.cs"];
m0_276 [label="Entry Unk.Trace", span="", cluster="Unk.Trace", file="JobServer.cs"];
m0_270 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="590-590", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_280 [label="_logger.DebugException(messageFunc(), exception)", span="597-597", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_284 [label="_logger.InfoException(messageFunc(), exception)", span="604-604", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_288 [label="_logger.WarnException(messageFunc(), exception)", span="611-611", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_292 [label="_logger.ErrorException(messageFunc(), exception)", span="618-618", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_296 [label="_logger.FatalException(messageFunc(), exception)", span="625-625", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_299 [label="_logger.TraceException(messageFunc(), exception)", span="632-632", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_279 [label="_logger.IsDebugEnabled", span="595-595", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_281 [label="return true;", span="598-598", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_283 [label="_logger.IsInfoEnabled", span="602-602", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_285 [label="return true;", span="605-605", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_287 [label="_logger.IsWarnEnabled", span="609-609", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_289 [label="return true;", span="612-612", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_291 [label="_logger.IsErrorEnabled", span="616-616", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_293 [label="return true;", span="619-619", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_295 [label="_logger.IsFatalEnabled", span="623-623", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_297 [label="return true;", span="626-626", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_298 [label="_logger.IsTraceEnabled", span="630-630", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_300 [label="return true;", span="633-633", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_277 [label=logLevel, span="592-592", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_278 [label="LogLevel.Debug", span="594-594", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_301 [label="return false;", span="637-637", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_282 [label="LogLevel.Info", span="601-601", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_286 [label="LogLevel.Warn", span="608-608", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_290 [label="LogLevel.Error", span="615-615", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_294 [label="LogLevel.Fatal", span="622-622", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_302 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="590-590", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_138 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="JobServer.cs"];
m0_439 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", span="1058-1058", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_454 [label="IsEnabled = Expression.Lambda<Func<object, object, bool>>(isEnabledMethodCall, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam\r\n                }).Compile()", span="1076-1080", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_459 [label="Write = Expression.Lambda<Action<object, object, string>>(writeMethodExp, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam,\r\n                    messageParam\r\n                }).Compile()", span="1088-1093", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_463 [label="WriteException = Expression.Lambda<Action<object, object, Exception, string>>(writeMethodExp, new[]\r\n                {\r\n                    instanceParam,\r\n                    levelParam,\r\n                    exceptionParam,\r\n                    messageParam,\r\n                }).Compile()", span="1112-1118", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_448 [label="MethodInfo isEnabledMethodInfo = loggerType.GetRuntimeMethod(''IsEnabled'', new Type[] { logEventTypeType })", span="1070-1070", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_455 [label="MethodInfo writeMethodInfo = loggerType.GetRuntimeMethod(''Write'', new[] { logEventTypeType, typeof(string), typeof(object[]) })", span="1084-1084", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_460 [label="MethodInfo writeExceptionMethodInfo = loggerType.GetRuntimeMethod(''Write'', new[]\r\n                {\r\n                    logEventTypeType,\r\n                    typeof(Exception), \r\n                    typeof(string),\r\n                    typeof(object[])\r\n                })", span="1097-1103", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_453 [label="MethodCallExpression isEnabledMethodCall = Expression.Call(instanceCast, isEnabledMethodInfo, levelCast)", span="1075-1075", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_462 [label="writeMethodExp = Expression.Call(\r\n                    instanceCast,\r\n                    writeExceptionMethodInfo,\r\n                    levelCast,\r\n                    exceptionParam,\r\n                    messageParam,\r\n                    propertyValuesParam)", span="1105-1111", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_449 [label="ParameterExpression instanceParam = Expression.Parameter(typeof(object))", span="1071-1071", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_451 [label="ParameterExpression levelParam = Expression.Parameter(typeof(object))", span="1073-1073", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_458 [label="MethodCallExpression writeMethodExp = Expression.Call(instanceCast, writeMethodInfo, levelCast, messageParam, propertyValuesParam)", span="1087-1087", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_456 [label="ParameterExpression messageParam = Expression.Parameter(typeof(string))", span="1085-1085", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_461 [label="ParameterExpression exceptionParam = Expression.Parameter(typeof(Exception))", span="1104-1104", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_440 [label="var logEventTypeType = Type.GetType(''Serilog.Events.LogEventLevel, Serilog'')", span="1060-1060", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_447 [label="var loggerType = Type.GetType(''Serilog.ILogger, Serilog'')", span="1069-1069", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_457 [label="ConstantExpression propertyValuesParam = Expression.Constant(new object[0])", span="1086-1086", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_452 [label="UnaryExpression levelCast = Expression.Convert(levelParam, logEventTypeType)", span="1074-1074", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_450 [label="UnaryExpression instanceCast = Expression.Convert(instanceParam, loggerType)", span="1072-1072", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_441 [label="DebugLevel = Enum.Parse(logEventTypeType, ''Debug'')", span="1061-1061", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_442 [label="ErrorLevel = Enum.Parse(logEventTypeType, ''Error'')", span="1062-1062", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_443 [label="FatalLevel = Enum.Parse(logEventTypeType, ''Fatal'')", span="1063-1063", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_444 [label="InformationLevel = Enum.Parse(logEventTypeType, ''Information'')", span="1064-1064", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_445 [label="VerboseLevel = Enum.Parse(logEventTypeType, ''Verbose'')", span="1065-1065", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_446 [label="WarningLevel = Enum.Parse(logEventTypeType, ''Warning'')", span="1066-1066", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_464 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", span="1058-1058", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.SerilogLogger()", file="JobServer.cs"];
m0_466 [label="Entry System.Linq.Expressions.Expression.Parameter(System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Parameter(System.Type)", file="JobServer.cs"];
m0_326 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", span="686-686", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_332 [label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="688-688", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_333 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", span="686-686", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_74 [label="Entry Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", span="190-190", cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_76 [label="logger.Log(LogLevel.Fatal, message.AsFunc(), exception)", span="194-194", cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_75 [label="logger.IsFatalEnabled()", span="192-192", cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_77 [label="Exit Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", span="190-190", cluster="Hangfire.Logging.LogExtensions.FatalException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_153 [label="Entry Hangfire.Logging.LogProvider.GetLogger(string)", span="367-367", cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="JobServer.cs"];
m0_155 [label="return logProvider == null ? new NoOpLogger() : (ILog)new LoggerExecutionWrapper(logProvider.GetLogger(name));", span="370-370", cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="JobServer.cs"];
m0_154 [label="ILogProvider logProvider = _currentLogProvider ?? ResolveLogProvider()", span="369-369", cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="JobServer.cs"];
m0_156 [label="Exit Hangfire.Logging.LogProvider.GetLogger(string)", span="367-367", cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="JobServer.cs"];
m0_99 [label="Entry Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", span="234-234", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_101 [label="logger.Log(LogLevel.Trace, message.AsFunc())", span="238-238", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_100 [label="logger.IsTraceEnabled()", span="236-236", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_102 [label="Exit Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", span="234-234", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_504 [label="Entry System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", file="JobServer.cs"];
m0_218 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JobServer.cs"];
m0_304 [label="Entry Unk.InfoException", span="", cluster="Unk.InfoException", file="JobServer.cs"];
m0_235 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="JobServer.cs"];
m0_31 [label="String.IsNullOrEmpty(jobId)", span="139-139", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_33 [label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Triggered scheduled job''\r\n                }", span="145-148", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_32 [label="return false;", span="142-142", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_34 [label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = String.Format(''Triggered by {0}'', ToString()) }, \r\n                    ScheduledState.StateName))", span="150-155", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_69 [label="Entry Hangfire.Logging.ILog.IsFatalEnabled()", span="86-86", cluster="Hangfire.Logging.ILog.IsFatalEnabled()", file="JobServer.cs"];
m0_415 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", span="1013-1013", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_421 [label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="1015-1015", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_422 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", span="1013-1013", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_134 [label="Entry Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", span="296-296", cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="JobServer.cs"];
m0_136 [label="logger.Log(logLevel, result.AsFunc())", span="299-299", cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="JobServer.cs"];
m0_135 [label="var result = string.Format(CultureInfo.InvariantCulture, message, args)", span="298-298", cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="JobServer.cs"];
m0_137 [label="Exit Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", span="296-296", cluster="Hangfire.Logging.LogExtensions.LogFormat(Hangfire.Logging.ILog, Hangfire.Logging.LogLevel, string, params object[])", file="JobServer.cs"];
m0_375 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="765-765", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_379 [label="_logger.Info(messageFunc(), exception)", span="772-772", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_383 [label="_logger.Warn(messageFunc(), exception)", span="779-779", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_387 [label="_logger.Error(messageFunc(), exception)", span="786-786", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_391 [label="_logger.Fatal(messageFunc(), exception)", span="793-793", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_394 [label="_logger.Debug(messageFunc(), exception)", span="800-800", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_378 [label="_logger.IsDebugEnabled", span="770-770", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_380 [label="return true;", span="773-773", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_382 [label="_logger.IsWarnEnabled", span="777-777", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_384 [label="return true;", span="780-780", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_386 [label="_logger.IsErrorEnabled", span="784-784", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_388 [label="return true;", span="787-787", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_390 [label="_logger.IsFatalEnabled", span="791-791", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_392 [label="return true;", span="794-794", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_393 [label="_logger.IsDebugEnabled", span="798-798", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_395 [label="return true;", span="801-801", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_376 [label=logLevel, span="767-767", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_377 [label="LogLevel.Info", span="769-769", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_396 [label="return false;", span="805-805", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_381 [label="LogLevel.Warn", span="776-776", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_385 [label="LogLevel.Error", span="783-783", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_389 [label="LogLevel.Fatal", span="790-790", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_397 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="765-765", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_15 [label="context.CancellationToken.IsCancellationRequested", span="109-109", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_16 [label="jobsEnqueued != 0", span="115-115", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="JobServer.cs"];
m0_17 [label="Logger.InfoFormat(''{0} scheduled job(s) enqueued.'', jobsEnqueued)", span="117-117", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="JobServer.cs"];
m0_18 [label="context.Sleep(_pollingDelay)", span="120-120", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobServer.cs"];
m0_21 [label="return logger.Log(LogLevel.Trace, null);", span="101-101", cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="JobServer.cs", color=green, community=0];
m0_435 [label="Entry lambda expression", span="1042-1042", cluster="lambda expression", file="JobServer.cs"];
m0_200 [label="Log(LogLevel.Error, () => FailedToGenerateLogMessage, ex)", span="460-460", cluster="lambda expression", file="JobServer.cs"];
m0_198 [label="return messageFunc();", span="456-456", cluster="lambda expression", file="JobServer.cs"];
m0_199 [label=Exception, span="458-458", cluster="lambda expression", file="JobServer.cs"];
m0_201 [label="return null;", span="462-462", cluster="lambda expression", file="JobServer.cs"];
m0_204 [label="Entry lambda expression", span="460-460", cluster="lambda expression", file="JobServer.cs"];
m0_197 [label="Entry lambda expression", span="452-463", cluster="lambda expression", file="JobServer.cs"];
m0_202 [label="Exit lambda expression", span="452-463", cluster="lambda expression", file="JobServer.cs"];
m0_206 [label="Exit lambda expression", span="460-460", cluster="lambda expression", file="JobServer.cs"];
m0_205 [label=FailedToGenerateLogMessage, span="460-460", cluster="lambda expression", file="JobServer.cs"];
m0_168 [label="new NLogLogProvider()", span="390-390", cluster="lambda expression", file="JobServer.cs"];
m0_172 [label="new Log4NetLogProvider()", span="391-391", cluster="lambda expression", file="JobServer.cs"];
m0_164 [label="new SerilogLogProvider()", span="389-389", cluster="lambda expression", file="JobServer.cs"];
m0_167 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="JobServer.cs"];
m0_169 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="JobServer.cs"];
m0_171 [label="Entry lambda expression", span="391-391", cluster="lambda expression", file="JobServer.cs"];
m0_173 [label="Exit lambda expression", span="391-391", cluster="lambda expression", file="JobServer.cs"];
m0_163 [label="Entry lambda expression", span="389-389", cluster="lambda expression", file="JobServer.cs"];
m0_165 [label="Exit lambda expression", span="389-389", cluster="lambda expression", file="JobServer.cs"];
m0_436 [label="func(''Name'', name, false)", span="1042-1042", cluster="lambda expression", file="JobServer.cs"];
m0_437 [label="Exit lambda expression", span="1042-1042", cluster="lambda expression", file="JobServer.cs"];
m0_308 [label="Entry Unk.TraceException", span="", cluster="Unk.TraceException", file="JobServer.cs"];
m0_19 [label="Entry Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", span="98-98", cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_502 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="JobServer.cs"];
m0_203 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JobServer.cs"];
m0_233 [label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="JobServer.cs"];
m0_238 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="532-532", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_246 [label="_logger.Debug(messageFunc())", span="547-547", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_250 [label="_logger.Info(messageFunc())", span="554-554", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_254 [label="_logger.Warn(messageFunc())", span="561-561", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_258 [label="_logger.Error(messageFunc())", span="568-568", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_262 [label="_logger.Fatal(messageFunc())", span="575-575", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_265 [label="_logger.Trace(messageFunc())", span="582-582", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_245 [label="_logger.IsDebugEnabled", span="545-545", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_247 [label="return true;", span="548-548", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_249 [label="_logger.IsInfoEnabled", span="552-552", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_251 [label="return true;", span="555-555", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_253 [label="_logger.IsWarnEnabled", span="559-559", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_255 [label="return true;", span="562-562", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_257 [label="_logger.IsErrorEnabled", span="566-566", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_259 [label="return true;", span="569-569", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_261 [label="_logger.IsFatalEnabled", span="573-573", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_263 [label="return true;", span="576-576", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_264 [label="_logger.IsTraceEnabled", span="580-580", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_266 [label="return true;", span="583-583", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_240 [label="return IsLogLevelEnable(logLevel);", span="536-536", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_242 [label="return LogException(logLevel, messageFunc, exception);", span="540-540", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_239 [label="messageFunc == null", span="534-534", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_241 [label="exception != null", span="538-538", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_243 [label=logLevel, span="542-542", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_244 [label="LogLevel.Debug", span="544-544", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_267 [label="return false;", span="587-587", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_248 [label="LogLevel.Info", span="551-551", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_252 [label="LogLevel.Warn", span="558-558", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_256 [label="LogLevel.Error", span="565-565", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_260 [label="LogLevel.Fatal", span="572-572", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_268 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="532-532", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_581 [label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.MessageFormatterDelegate.Invoke(string, Hangfire.Logging.LogLevel, object, System.Exception)", span="1393-1393", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.MessageFormatterDelegate.Invoke(string, Hangfire.Logging.LogLevel, object, System.Exception)", file="JobServer.cs"];
m0_2 [label="Entry Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", span="74-74", cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_3 [label="GuardAgainstNullLogger(logger)", span="76-76", cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_47 [label="logger.Log(LogLevel.Error, messageFunc)", span="142-142", cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs", color=green, community=0];
m0_465 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JobServer.cs"];
m0_343 [label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetEntryAssembly()", file="JobServer.cs"];
m0_46 [label="Entry Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", span="140-140", cluster="Hangfire.Logging.LogExtensions.Error(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_211 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", span="504-504", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_219 [label="return ProviderIsAvailableOverride && GetLogManagerType() != null;", span="506-506", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_220 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", span="504-504", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.IsLoggerAvailable()", file="JobServer.cs"];
m0_214 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", span="499-499", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_215 [label="return new NLogLogger(_getLoggerByNameDelegate(name));", span="501-501", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_216 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", span="499-499", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_20 [label="GuardAgainstNullLogger(logger)", span="100-100", cluster="Hangfire.Logging.LogExtensions.IsTraceEnabled(Hangfire.Logging.ILog)", file="JobServer.cs", color=green, community=0];
m0_27 [label="Entry Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", span="110-110", cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_28 [label="GuardAgainstNullLogger(logger)", span="112-112", cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_30 [label="Exit Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", span="110-110", cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", color=red, community=0, file="JobServer.cs"];
m0_36 [label="Entry T.AsFunc<T>()", span="303-303", cluster="T.AsFunc<T>()", file="JobServer.cs"];
m0_29 [label="logger.Log(LogLevel.Debug, messageFunc)", span="113-113", cluster="Hangfire.Logging.LogExtensions.Debug(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_35 [label="Entry Hangfire.Logging.ILog.IsDebugEnabled()", span="74-74", cluster="Hangfire.Logging.ILog.IsDebugEnabled()", file="JobServer.cs"];
m0_95 [label="Entry Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", span="228-228", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_96 [label="GuardAgainstNullLogger(logger)", span="230-230", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_97 [label="logger.Log(LogLevel.Trace, messageFunc)", span="231-231", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_98 [label="Exit Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", span="228-228", cluster="Hangfire.Logging.LogExtensions.Trace(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_48 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobServer.cs"];
m0_217 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", span="527-527", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", file="JobServer.cs"];
m0_236 [label="_logger = logger", span="529-529", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", file="JobServer.cs"];
m0_237 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", span="527-527", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.NLogLogger(dynamic)", file="JobServer.cs"];
m0_344 [label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0", cluster="System.Linq.Expressions.Expression.Constant(object)", file="JobServer.cs"];
m0_108 [label="Entry Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", span="250-250", cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_110 [label="logger.Log(LogLevel.Trace, message.AsFunc(), exception)", span="254-254", cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_109 [label="logger.IsTraceEnabled()", span="252-252", cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_111 [label="Exit Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", span="250-250", cluster="Hangfire.Logging.LogExtensions.TraceException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_133 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JobServer.cs"];
m0_212 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobServer.cs"];
m0_468 [label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="JobServer.cs"];
m0_121 [label="Entry Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", span="272-272", cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_123 [label="logger.LogFormat(LogLevel.Warn, message, args)", span="276-276", cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_122 [label="logger.IsWarnEnabled()", span="274-274", cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_124 [label="Exit Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", span="272-272", cluster="Hangfire.Logging.LogExtensions.WarnFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_503 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1185-1185", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_508 [label="WriteException(_logger, DebugLevel, exception, messageFunc())", span="1192-1192", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_512 [label="WriteException(_logger, InformationLevel, exception, messageFunc())", span="1199-1199", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_516 [label="WriteException(_logger, WarningLevel, exception, messageFunc())", span="1206-1206", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_520 [label="WriteException(_logger, ErrorLevel, exception, messageFunc())", span="1213-1213", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_524 [label="WriteException(_logger, FatalLevel, exception, messageFunc())", span="1220-1220", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_527 [label="WriteException(_logger, VerboseLevel, exception, messageFunc())", span="1227-1227", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_507 [label="IsEnabled(_logger, DebugLevel)", span="1190-1190", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_509 [label="return true;", span="1193-1193", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_511 [label="IsEnabled(_logger, InformationLevel)", span="1197-1197", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_513 [label="return true;", span="1200-1200", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_515 [label="IsEnabled(_logger, WarningLevel)", span="1204-1204", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_517 [label="return true;", span="1207-1207", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_519 [label="IsEnabled(_logger, ErrorLevel)", span="1211-1211", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_521 [label="return true;", span="1214-1214", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_523 [label="IsEnabled(_logger, FatalLevel)", span="1218-1218", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_525 [label="return true;", span="1221-1221", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_526 [label="IsEnabled(_logger, VerboseLevel)", span="1225-1225", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_528 [label="return true;", span="1228-1228", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_505 [label=logLevel, span="1187-1187", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_506 [label="LogLevel.Debug", span="1189-1189", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_529 [label="return false;", span="1232-1232", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_510 [label="LogLevel.Info", span="1196-1196", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_514 [label="LogLevel.Warn", span="1203-1203", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_518 [label="LogLevel.Error", span="1210-1210", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_522 [label="LogLevel.Fatal", span="1217-1217", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_530 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1185-1185", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.LogException(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_582 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JobServer.cs"];
m0_273 [label="Entry Unk.Warn", span="", cluster="Unk.Warn", file="JobServer.cs"];
m0_174 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", span="666-666", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="JobServer.cs"];
m0_324 [label="_getLoggerByNameDelegate = GetGetLoggerMethodCall()", span="672-672", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="JobServer.cs"];
m0_322 [label="!IsLoggerAvailable()", span="668-668", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="JobServer.cs"];
m0_323 [label="throw new InvalidOperationException(''log4net.LogManager not found'');", span="670-670", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="JobServer.cs"];
m0_325 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", span="666-666", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogProvider()", file="JobServer.cs"];
m0_104 [label="Entry Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", span="242-242", cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_106 [label="logger.LogFormat(LogLevel.Trace, message, args)", span="246-246", cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_105 [label="logger.IsTraceEnabled()", span="244-244", cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_107 [label="Exit Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", span="242-242", cluster="Hangfire.Logging.LogExtensions.TraceFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_166 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", span="993-993", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="JobServer.cs"];
m0_413 [label="_getLoggerByNameDelegate = GetForContextMethodCall()", span="999-999", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="JobServer.cs"];
m0_411 [label="!IsLoggerAvailable()", span="995-995", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="JobServer.cs"];
m0_412 [label="throw new InvalidOperationException(''Serilog.Log not found'');", span="997-997", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="JobServer.cs"];
m0_414 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", span="993-993", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogProvider()", file="JobServer.cs"];
m0_583 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="JobServer.cs"];
m0_184 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="JobServer.cs"];
m0_340 [label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[] { Expression.Constant(Assembly.GetEntryAssembly()), nameParam })", span="701-701", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_327 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", span="696-696", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_337 [label="Type logManagerType = GetLogManagerType()", span="698-698", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_341 [label="return Expression.Lambda<Func<string, object>>(methodCall, new[] { nameParam }).Compile();", span="702-702", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_338 [label="MethodInfo method = logManagerType.GetRuntimeMethod(''GetLogger'', new[] { typeof(string) })", span="699-699", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_339 [label="ParameterExpression nameParam = Expression.Parameter(typeof(string), ''name'')", span="700-700", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_342 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", span="696-696", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_62 [label="Entry Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", span="169-169", cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_63 [label="logger.Log(LogLevel.Fatal, messageFunc)", span="171-171", cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_64 [label="Exit Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", span="169-169", cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_145 [label="Entry Hangfire.Logging.ILogProvider.GetLogger(string)", span="319-319", cluster="Hangfire.Logging.ILogProvider.GetLogger(string)", file="JobServer.cs"];
m0_146 [label="Exit Hangfire.Logging.ILogProvider.GetLogger(string)", span="319-319", cluster="Hangfire.Logging.ILogProvider.GetLogger(string)", file="JobServer.cs"];
m0_416 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", span="1023-1023", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_426 [label="Type logManagerType = GetLogManagerType()", span="1025-1025", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_433 [label="return name => func(''Name'', name, false);", span="1042-1042", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_427 [label="MethodInfo method = logManagerType.GetRuntimeMethod(''ForContext'', new[] { typeof(string), typeof(object), typeof(bool) })", span="1026-1026", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_432 [label="var func = Expression.Lambda<Func<string, object, bool, object>>(methodCall, new[]\r\n            {\r\n                propertyNameParam,\r\n                valueParam,\r\n                destructureObjectsParam\r\n            }).Compile()", span="1036-1041", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_428 [label="ParameterExpression propertyNameParam = Expression.Parameter(typeof(string), ''propertyName'')", span="1027-1027", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_431 [label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[]\r\n            {\r\n                propertyNameParam, \r\n                valueParam,\r\n                destructureObjectsParam\r\n            })", span="1030-1035", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_429 [label="ParameterExpression valueParam = Expression.Parameter(typeof(object), ''value'')", span="1028-1028", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_430 [label="ParameterExpression destructureObjectsParam = Expression.Parameter(typeof(bool), ''destructureObjects'')", span="1029-1029", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_434 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", span="1023-1023", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetForContextMethodCall()", file="JobServer.cs"];
m0_269 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="640-640", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_311 [label="return _logger.IsDebugEnabled;", span="645-645", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_313 [label="return _logger.IsInfoEnabled;", span="647-647", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_315 [label="return _logger.IsWarnEnabled;", span="649-649", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_317 [label="return _logger.IsErrorEnabled;", span="651-651", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_319 [label="return _logger.IsFatalEnabled;", span="653-653", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_320 [label="return _logger.IsTraceEnabled;", span="655-655", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_310 [label="LogLevel.Debug", span="644-644", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_312 [label="LogLevel.Info", span="646-646", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_314 [label="LogLevel.Warn", span="648-648", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_316 [label="LogLevel.Error", span="650-650", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_318 [label="LogLevel.Fatal", span="652-652", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_309 [label=logLevel, span="642-642", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_321 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="640-640", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_471 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1126-1126", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_479 [label="Write(_logger, DebugLevel, messageFunc())", span="1142-1142", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_483 [label="Write(_logger, InformationLevel, messageFunc())", span="1149-1149", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_487 [label="Write(_logger, WarningLevel, messageFunc())", span="1156-1156", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_491 [label="Write(_logger, ErrorLevel, messageFunc())", span="1163-1163", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_495 [label="Write(_logger, FatalLevel, messageFunc())", span="1170-1170", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_498 [label="Write(_logger, VerboseLevel, messageFunc())", span="1177-1177", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_478 [label="IsEnabled(_logger, DebugLevel)", span="1140-1140", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_480 [label="return true;", span="1143-1143", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_482 [label="IsEnabled(_logger, InformationLevel)", span="1147-1147", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_484 [label="return true;", span="1150-1150", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_486 [label="IsEnabled(_logger, WarningLevel)", span="1154-1154", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_488 [label="return true;", span="1157-1157", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_490 [label="IsEnabled(_logger, ErrorLevel)", span="1161-1161", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_492 [label="return true;", span="1164-1164", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_494 [label="IsEnabled(_logger, FatalLevel)", span="1168-1168", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_496 [label="return true;", span="1171-1171", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_497 [label="IsEnabled(_logger, VerboseLevel)", span="1175-1175", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_499 [label="return true;", span="1178-1178", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_473 [label="return IsEnabled(_logger, logLevel);", span="1130-1130", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_475 [label="return LogException(logLevel, messageFunc, exception);", span="1134-1134", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_472 [label="messageFunc == null", span="1128-1128", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_474 [label="exception != null", span="1132-1132", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_476 [label=logLevel, span="1137-1137", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_477 [label="LogLevel.Debug", span="1139-1139", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_500 [label="return false;", span="1182-1182", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_481 [label="LogLevel.Info", span="1146-1146", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_485 [label="LogLevel.Warn", span="1153-1153", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_489 [label="LogLevel.Error", span="1160-1160", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_493 [label="LogLevel.Fatal", span="1167-1167", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_501 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1126-1126", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_4 [label="return logger.Log(LogLevel.Debug, null);", span="77-77", cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_5 [label="Exit Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", span="74-74", cluster="Hangfire.Logging.LogExtensions.IsDebugEnabled(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_274 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="JobServer.cs"];
m0_70 [label="Entry Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", span="182-182", cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_72 [label="logger.LogFormat(LogLevel.Fatal, message, args)", span="186-186", cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_71 [label="logger.IsFatalEnabled()", span="184-184", cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_73 [label="Exit Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", span="182-182", cluster="Hangfire.Logging.LogExtensions.FatalFormat(Hangfire.Logging.ILog, string, params object[])", file="JobServer.cs"];
m0_157 [label="Entry Hangfire.Logging.LogProvider.ResolveLogProvider()", span="399-399", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_175 [label=LogProviderResolvers, span="403-403", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_180 [label="return null;", span="418-418", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_177 [label="return providerResolver.Item2();", span="407-407", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_176 [label="providerResolver.Item1()", span="405-405", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_178 [label=Exception, span="411-411", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_179 [label="Console.WriteLine(\r\n                    ''Exception occured resolving a log provider. Logging for this assembly {0} is disabled. {1}'',\r\n                    typeof(LogProvider).GetTypeInfo().Assembly.FullName,\r\n                    ex)", span="413-416", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_181 [label="Exit Hangfire.Logging.LogProvider.ResolveLogProvider()", span="399-399", cluster="Hangfire.Logging.LogProvider.ResolveLogProvider()", file="JobServer.cs"];
m0_565 [label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1440-1440", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_568 [label="Write(logLevel, messageFunc(), exception)", span="1447-1447", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_566 [label="messageFunc == null", span="1442-1442", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_569 [label="return true;", span="1448-1448", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_567 [label="return true;", span="1444-1444", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_570 [label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="1440-1440", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_347 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="714-714", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_355 [label="_logger.Info(messageFunc())", span="729-729", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_359 [label="_logger.Warn(messageFunc())", span="736-736", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_363 [label="_logger.Error(messageFunc())", span="743-743", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_367 [label="_logger.Fatal(messageFunc())", span="750-750", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_370 [label="_logger.Debug(messageFunc())", span="757-757", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_354 [label="_logger.IsInfoEnabled", span="727-727", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_356 [label="return true;", span="730-730", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_358 [label="_logger.IsWarnEnabled", span="734-734", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_360 [label="return true;", span="737-737", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_362 [label="_logger.IsErrorEnabled", span="741-741", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_364 [label="return true;", span="744-744", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_366 [label="_logger.IsFatalEnabled", span="748-748", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_368 [label="return true;", span="751-751", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_369 [label="_logger.IsDebugEnabled", span="755-755", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_371 [label="return true;", span="758-758", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_349 [label="return IsLogLevelEnable(logLevel);", span="718-718", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_351 [label="return LogException(logLevel, messageFunc, exception);", span="722-722", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_348 [label="messageFunc == null", span="716-716", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_350 [label="exception != null", span="720-720", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_352 [label=logLevel, span="724-724", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_353 [label="LogLevel.Info", span="726-726", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_372 [label="return false;", span="762-762", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_357 [label="LogLevel.Warn", span="733-733", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_361 [label="LogLevel.Error", span="740-740", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_365 [label="LogLevel.Fatal", span="747-747", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_373 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="714-714", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_213 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", span="514-514", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_225 [label="Type logManagerType = GetLogManagerType()", span="516-516", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_229 [label="return Expression.Lambda<Func<string, object>>(methodCall, new[] { nameParam }).Compile();", span="520-520", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_226 [label="MethodInfo method = logManagerType.GetRuntimeMethod(''GetLogger'', new[] { typeof(string) })", span="517-517", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_227 [label="ParameterExpression nameParam = Expression.Parameter(typeof(string), ''name'')", span="518-518", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_228 [label="MethodCallExpression methodCall = Expression.Call(null, method, new Expression[] { nameParam })", span="519-519", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_230 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", span="514-514", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.GetGetLoggerMethodCall()", file="JobServer.cs"];
m0_182 [label="Entry Hangfire.Logging.LogProvider.IsLoggerAvailable.Invoke()", span="382-382", cluster="Hangfire.Logging.LogProvider.IsLoggerAvailable.Invoke()", file="JobServer.cs"];
m0_86 [label="Entry Hangfire.Logging.ILog.IsInfoEnabled()", span="92-92", cluster="Hangfire.Logging.ILog.IsInfoEnabled()", file="JobServer.cs"];
m0_159 [label="Entry Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", span="440-440", cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_189 [label="_logger = logger", span="442-442", cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_190 [label="Exit Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", span="440-440", cluster="Hangfire.Logging.LoggerExecutionWrapper.LoggerExecutionWrapper(Hangfire.Logging.ILog)", file="JobServer.cs"];
m0_170 [label="Entry Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", span="484-484", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="JobServer.cs"];
m0_209 [label="_getLoggerByNameDelegate = GetGetLoggerMethodCall()", span="490-490", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="JobServer.cs"];
m0_207 [label="!IsLoggerAvailable()", span="486-486", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="JobServer.cs"];
m0_208 [label="throw new InvalidOperationException(''NLog.LogManager not found'');", span="488-488", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="JobServer.cs"];
m0_210 [label="Exit Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", span="484-484", cluster="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogProvider()", file="JobServer.cs"];
m0_58 [label="Entry Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", span="161-161", cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_60 [label="logger.Log(LogLevel.Error, message.AsFunc(), exception)", span="165-165", cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_59 [label="logger.IsErrorEnabled()", span="163-163", cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_61 [label="Exit Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", span="161-161", cluster="Hangfire.Logging.LogExtensions.ErrorException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_307 [label="Entry Unk.FatalException", span="", cluster="Unk.FatalException", file="JobServer.cs"];
m0_191 [label="Entry Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="445-445", cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_193 [label="return _logger.Log(logLevel, null);", span="449-449", cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_195 [label="return _logger.Log(logLevel, wrappedMessageFunc, exception);", span="464-464", cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_192 [label="messageFunc == null", span="447-447", cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_194 [label="Func<string> wrappedMessageFunc = () =>\r\n            {\r\n                try\r\n                {\r\n                    return messageFunc();\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Log(LogLevel.Error, () => FailedToGenerateLogMessage, ex);\r\n                }\r\n                return null;\r\n            }", span="452-463", cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_196 [label="Exit Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="445-445", cluster="Hangfire.Logging.LoggerExecutionWrapper.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="JobServer.cs"];
m0_224 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="JobServer.cs"];
m0_65 [label="Entry Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", span="174-174", cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_67 [label="logger.Log(LogLevel.Fatal, message.AsFunc())", span="178-178", cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_66 [label="logger.IsFatalEnabled()", span="176-176", cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_68 [label="Exit Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", span="174-174", cluster="Hangfire.Logging.LogExtensions.Fatal(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_231 [label="Entry System.Type.GetRuntimeMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetRuntimeMethod(string, System.Type[])", file="JobServer.cs"];
m0_82 [label="Entry Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", span="204-204", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_84 [label="logger.Log(LogLevel.Info, message.AsFunc())", span="208-208", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_83 [label="logger.IsInfoEnabled()", span="206-206", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_85 [label="Exit Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", span="204-204", cluster="Hangfire.Logging.LogExtensions.Info(Hangfire.Logging.ILog, string)", file="JobServer.cs"];
m0_328 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", span="681-681", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_329 [label="return new Log4NetLogger(_getLoggerByNameDelegate(name));", span="683-683", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_330 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", span="681-681", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_158 [label="Entry Hangfire.Logging.LogProvider.NoOpLogger.NoOpLogger()", span="421-421", cluster="Hangfire.Logging.LogProvider.NoOpLogger.NoOpLogger()", file="JobServer.cs"];
m0_306 [label="Entry Unk.ErrorException", span="", cluster="Unk.ErrorException", file="JobServer.cs"];
m0_537 [label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", span="1380-1380", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_538 [label="return new ColouredConsoleLogger(name);", span="1382-1382", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_539 [label="Exit Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", span="1380-1380", cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_417 [label="Entry Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", span="1008-1008", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_418 [label="return new SerilogLogger(_getLoggerByNameDelegate(name));", span="1010-1010", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_419 [label="Exit Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", span="1008-1008", cluster="Hangfire.Logging.LogProviders.SerilogLogProvider.GetLogger(string)", file="JobServer.cs"];
m0_185 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="JobServer.cs"];
m0_183 [label="Entry Hangfire.Logging.LogProvider.CreateLogProvider.Invoke()", span="384-384", cluster="Hangfire.Logging.LogProvider.CreateLogProvider.Invoke()", file="JobServer.cs"];
m0_125 [label="Entry Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", span="280-280", cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_127 [label="logger.Log(LogLevel.Warn, message.AsFunc(), exception)", span="284-284", cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_126 [label="logger.IsWarnEnabled()", span="282-282", cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_128 [label="Exit Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", span="280-280", cluster="Hangfire.Logging.LogExtensions.WarnException(Hangfire.Logging.ILog, string, System.Exception)", file="JobServer.cs"];
m0_374 [label="Entry Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="808-808", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_400 [label="return _logger.IsDebugEnabled;", span="813-813", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_402 [label="return _logger.IsInfoEnabled;", span="815-815", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_404 [label="return _logger.IsWarnEnabled;", span="817-817", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_406 [label="return _logger.IsErrorEnabled;", span="819-819", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_408 [label="return _logger.IsFatalEnabled;", span="821-821", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_409 [label="return _logger.IsDebugEnabled;", span="823-823", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_399 [label="LogLevel.Debug", span="812-812", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_401 [label="LogLevel.Info", span="814-814", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_403 [label="LogLevel.Warn", span="816-816", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_405 [label="LogLevel.Error", span="818-818", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_407 [label="LogLevel.Fatal", span="820-820", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_398 [label=logLevel, span="810-810", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_410 [label="Exit Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", span="808-808", cluster="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger.IsLogLevelEnable(Hangfire.Logging.LogLevel)", file="JobServer.cs"];
m0_150 [label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="357-357", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="JobServer.cs"];
m0_151 [label="return GetLogger(type.FullName);", span="359-359", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="JobServer.cs"];
m0_152 [label="Exit Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="357-357", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="JobServer.cs"];
m0_112 [label="Entry Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", span="258-258", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_113 [label="GuardAgainstNullLogger(logger)", span="260-260", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_114 [label="logger.Log(LogLevel.Warn, messageFunc)", span="261-261", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_115 [label="Exit Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", span="258-258", cluster="Hangfire.Logging.LogExtensions.Warn(Hangfire.Logging.ILog, System.Func<string>)", file="JobServer.cs"];
m0_120 [label="Entry Hangfire.Logging.ILog.IsWarnEnabled()", span="104-104", cluster="Hangfire.Logging.ILog.IsWarnEnabled()", file="JobServer.cs"];
m0_41 [label="Entry Hangfire.Logging.ILog.LogFormat(Hangfire.Logging.LogLevel, string, params object[])", span="296-296", cluster="Hangfire.Logging.ILog.LogFormat(Hangfire.Logging.LogLevel, string, params object[])", file="JobServer.cs"];
m0_584 [label="Hangfire.Logging.LoggerExecutionWrapper", span="", file="JobServer.cs"];
m0_585 [label="System.Func<string>", span="", file="JobServer.cs"];
m0_587 [label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger", span="", file="JobServer.cs"];
m0_589 [label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger", span="", file="JobServer.cs"];
m0_592 [label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger", span="", file="JobServer.cs"];
m0_593 [label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger", span="", file="JobServer.cs"];
m0_586 [label="Hangfire.Logging.LogProviders.NLogLogProvider", span="", file="JobServer.cs"];
m0_588 [label="Hangfire.Logging.LogProviders.Log4NetLogProvider", span="", file="JobServer.cs"];
m0_590 [label="Hangfire.Logging.LogProviders.SerilogLogProvider", span="", file="JobServer.cs"];
m0_591 [label=func, span="", file="JobServer.cs"];
m1_113 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobStorage.cs"];
m1_36 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37", cluster="HangFire.JobHelper.FromJson<T>(string)", file="JobStorage.cs"];
m1_0 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobStorage.cs"];
m1_1 [label=Redis, span="14-14", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobStorage.cs"];
m1_3 [label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobStorage.cs"];
m1_5 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobStorage.cs"];
m1_7 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobStorage.cs"];
m1_8 [label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobStorage.cs"];
m1_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobStorage.cs"];
m1_10 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="JobStorage.cs"];
m1_2 [label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobStorage.cs"];
m1_4 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="JobStorage.cs"];
m1_6 [label=Redis, span="22-22", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobStorage.cs"];
m1_11 [label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="JobStorage.cs"];
m1_28 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="JobStorage.cs"];
m1_291 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="JobStorage.cs"];
m1_30 [label="Hangfire.Dashboard.DashboardMiddleware", span="", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JobStorage.cs"];
m1_133 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="JobStorage.cs"];
m1_43 [label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_53 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_54 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_47 [label="return new Dictionary<string, ScheduleDto>();", span="91-91", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_48 [label="var jobs = new Dictionary<string, List<string>>()", span="94-94", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_49 [label="var states = new Dictionary<string, string>()", span="95-95", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_55 [label="pipeline.Flush()", span="116-116", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_50 [label="var pipeline = Redis.CreatePipeline()", span="97-97", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_52 [label="var job = scheduledJob", span="101-101", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_51 [label=scheduledJobs, span="99-99", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_46 [label="scheduledJobs.Count == 0", span="89-89", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_56 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_45 [label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_44 [label=Redis, span="82-82", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_57 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobStorage.cs"];
m1_38 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="JobStorage.cs"];
m1_214 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="JobStorage.cs"];
m1_386 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="JobStorage.cs"];
m1_27 [label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="JobStorage.cs"];
m1_29 [label="Entry Hangfire.Dashboard.IRequestDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="22-22", cluster="Hangfire.Dashboard.IRequestDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="JobStorage.cs"];
m1_359 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="JobStorage.cs"];
m1_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobStorage.cs"];
m1_197 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="JobStorage.cs"];
m1_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="JobStorage.cs"];
m1_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="JobStorage.cs"];
m1_23 [label="Exit Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_26 [label="Entry Unk.Authorize", span="", cluster="Unk.Authorize", file="JobStorage.cs"];
m1_25 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="JobStorage.cs"];
m1_24 [label="Entry Unk.FindDispatcher", span="", cluster="Unk.FindDispatcher", file="JobStorage.cs"];
m1_134 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobStorage.cs"];
m1_257 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="JobStorage.cs"];
m1_234 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="JobStorage.cs"];
m1_173 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_335 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_331 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_333 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_334 [label="pipeline.Flush()", span="530-530", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_326 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_327 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_328 [label="var pipeline = redis.CreatePipeline()", span="512-512", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_330 [label="var id = jobId", span="516-516", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_332 [label="stateProperties != null", span="522-522", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_329 [label=jobIds, span="514-514", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_325 [label="return new List<KeyValuePair<string, T>>();", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_324 [label="jobIds.Count == 0", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_336 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobStorage.cs"];
m1_361 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="JobStorage.cs"];
m1_345 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobStorage.cs"];
m1_13 [label="Entry Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_12 [label=Redis, span="30-30", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="JobStorage.cs"];
m1_14 [label="var dispatcher = _routes.FindDispatcher(context.Request.Path.Value)", span="52-52", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_219 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_276 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_278 [label="var result = new Dictionary<DateTime, long>()", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_270 [label="var dates = new List<DateTime>()", span="443-443", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_272 [label="i < 24", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_277 [label="var valuesMap = redis.GetValuesMap(keys)", span="451-451", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_279 [label="var i = 0", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_284 [label="result.Add(dates[i], value)", span="462-462", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_286 [label="return result;", span="465-465", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_269 [label="var endDate = DateTime.UtcNow", span="442-442", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_271 [label="var i = 0", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_273 [label="dates.Add(endDate)", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_280 [label="i < dates.Count", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_275 [label="i++", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_282 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_285 [label="i++", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_283 [label="value = 0", span="459-459", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_274 [label="endDate = endDate.AddHours(-1)", span="447-447", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_281 [label="long value", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_287 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_232 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="JobStorage.cs"];
m1_58 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="JobStorage.cs"];
m1_132 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="JobStorage.cs"];
m1_258 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JobStorage.cs"];
m1_236 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_238 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_237 [label=Redis, span="395-395", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_239 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_242 [label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="405-408", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_240 [label="String.IsNullOrEmpty(queue)", span="400-400", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_241 [label="return false;", span="402-402", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_243 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobStorage.cs"];
m1_174 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="JobStorage.cs"];
m1_317 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="JobStorage.cs"];
m1_360 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="JobStorage.cs"];
m1_40 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="JobStorage.cs"];
m1_129 [label="Entry lambda expression", span="184-191", cluster="lambda expression", file="JobStorage.cs"];
m1_116 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="JobStorage.cs"];
m1_119 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="JobStorage.cs"];
m1_130 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191", cluster="lambda expression", color=green, community=0, file="JobStorage.cs"];
m1_131 [label="Exit lambda expression", span="184-191", cluster="lambda expression", file="JobStorage.cs"];
m1_117 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172", cluster="lambda expression", color=green, community=0, file="JobStorage.cs"];
m1_118 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="JobStorage.cs"];
m1_120 [label="servers.Add(name, x)", span="173-173", cluster="lambda expression", file="JobStorage.cs"];
m1_127 [label="queues.Add(name, x)", span="178-178", cluster="lambda expression", file="JobStorage.cs"];
m1_123 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177", cluster="lambda expression", file="JobStorage.cs"];
m1_122 [label="Entry lambda expression", span="176-177", cluster="lambda expression", file="JobStorage.cs"];
m1_126 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="JobStorage.cs"];
m1_121 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="JobStorage.cs"];
m1_33 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76", cluster="lambda expression", file="JobStorage.cs"];
m1_142 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219", cluster="lambda expression", file="JobStorage.cs"];
m1_152 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244", cluster="lambda expression", file="JobStorage.cs"];
m1_195 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290", cluster="lambda expression", file="JobStorage.cs"];
m1_204 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326", cluster="lambda expression", file="JobStorage.cs"];
m1_212 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352", cluster="lambda expression", file="JobStorage.cs"];
m1_65 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106", cluster="lambda expression", file="JobStorage.cs"];
m1_74 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112", cluster="lambda expression", file="JobStorage.cs"];
m1_177 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265", cluster="lambda expression", file="JobStorage.cs"];
m1_183 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269", cluster="lambda expression", file="JobStorage.cs"];
m1_189 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273", cluster="lambda expression", file="JobStorage.cs"];
m1_322 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482", cluster="lambda expression", file="JobStorage.cs"];
m1_427 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592", cluster="lambda expression", file="JobStorage.cs"];
m1_339 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519", cluster="lambda expression", file="JobStorage.cs"];
m1_347 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525", cluster="lambda expression", file="JobStorage.cs"];
m1_128 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="JobStorage.cs"];
m1_293 [label="Entry lambda expression", span="450-450", cluster="lambda expression", file="JobStorage.cs"];
m1_321 [label="Entry lambda expression", span="482-482", cluster="lambda expression", file="JobStorage.cs"];
m1_318 [label="Entry lambda expression", span="481-481", cluster="lambda expression", file="JobStorage.cs"];
m1_353 [label="Entry lambda expression", span="534-539", cluster="lambda expression", file="JobStorage.cs"];
m1_356 [label="Entry lambda expression", span="540-542", cluster="lambda expression", file="JobStorage.cs"];
m1_124 [label="Exit lambda expression", span="176-177", cluster="lambda expression", file="JobStorage.cs"];
m1_64 [label="Entry lambda expression", span="104-106", cluster="lambda expression", file="JobStorage.cs"];
m1_69 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="JobStorage.cs"];
m1_73 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="JobStorage.cs"];
m1_77 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="JobStorage.cs"];
m1_176 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="JobStorage.cs"];
m1_179 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="JobStorage.cs"];
m1_182 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="JobStorage.cs"];
m1_185 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="JobStorage.cs"];
m1_188 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JobStorage.cs"];
m1_191 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="JobStorage.cs"];
m1_338 [label="Entry lambda expression", span="519-519", cluster="lambda expression", file="JobStorage.cs"];
m1_341 [label="Entry lambda expression", span="520-520", cluster="lambda expression", file="JobStorage.cs"];
m1_346 [label="Entry lambda expression", span="525-525", cluster="lambda expression", file="JobStorage.cs"];
m1_349 [label="Entry lambda expression", span="526-526", cluster="lambda expression", file="JobStorage.cs"];
m1_387 [label="Entry lambda expression", span="565-565", cluster="lambda expression", file="JobStorage.cs"];
m1_391 [label="Entry lambda expression", span="566-566", cluster="lambda expression", file="JobStorage.cs"];
m1_394 [label="Entry lambda expression", span="569-569", cluster="lambda expression", file="JobStorage.cs"];
m1_397 [label="Entry lambda expression", span="570-570", cluster="lambda expression", file="JobStorage.cs"];
m1_400 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="JobStorage.cs"];
m1_403 [label="Entry lambda expression", span="574-574", cluster="lambda expression", file="JobStorage.cs"];
m1_406 [label="Entry lambda expression", span="577-577", cluster="lambda expression", file="JobStorage.cs"];
m1_409 [label="Entry lambda expression", span="578-578", cluster="lambda expression", file="JobStorage.cs"];
m1_412 [label="Entry lambda expression", span="581-581", cluster="lambda expression", file="JobStorage.cs"];
m1_416 [label="Entry lambda expression", span="582-582", cluster="lambda expression", file="JobStorage.cs"];
m1_420 [label="Entry lambda expression", span="585-585", cluster="lambda expression", file="JobStorage.cs"];
m1_423 [label="Entry lambda expression", span="586-586", cluster="lambda expression", file="JobStorage.cs"];
m1_426 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="JobStorage.cs"];
m1_429 [label="Entry lambda expression", span="593-593", cluster="lambda expression", file="JobStorage.cs"];
m1_32 [label="Entry lambda expression", span="66-76", cluster="lambda expression", file="JobStorage.cs"];
m1_34 [label="Exit lambda expression", span="66-76", cluster="lambda expression", file="JobStorage.cs"];
m1_141 [label="Entry lambda expression", span="209-219", cluster="lambda expression", file="JobStorage.cs"];
m1_143 [label="Exit lambda expression", span="209-219", cluster="lambda expression", file="JobStorage.cs"];
m1_151 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="JobStorage.cs"];
m1_153 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="JobStorage.cs"];
m1_194 [label="Entry lambda expression", span="284-290", cluster="lambda expression", file="JobStorage.cs"];
m1_196 [label="Exit lambda expression", span="284-290", cluster="lambda expression", file="JobStorage.cs"];
m1_203 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="JobStorage.cs"];
m1_205 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="JobStorage.cs"];
m1_211 [label="Entry lambda expression", span="344-352", cluster="lambda expression", file="JobStorage.cs"];
m1_213 [label="Exit lambda expression", span="344-352", cluster="lambda expression", file="JobStorage.cs"];
m1_66 [label="Exit lambda expression", span="104-106", cluster="lambda expression", file="JobStorage.cs"];
m1_75 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="JobStorage.cs"];
m1_178 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="JobStorage.cs"];
m1_184 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="JobStorage.cs"];
m1_190 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JobStorage.cs"];
m1_323 [label="Exit lambda expression", span="482-482", cluster="lambda expression", file="JobStorage.cs"];
m1_428 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="JobStorage.cs"];
m1_340 [label="Exit lambda expression", span="519-519", cluster="lambda expression", file="JobStorage.cs"];
m1_348 [label="Exit lambda expression", span="525-525", cluster="lambda expression", file="JobStorage.cs"];
m1_70 [label="jobs.Add(job.Key, x)", span="107-107", cluster="lambda expression", file="JobStorage.cs"];
m1_84 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129", cluster="lambda expression", file="JobStorage.cs"];
m1_78 [label="states.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="JobStorage.cs"];
m1_343 [label="jobs.Add(id, x)", span="520-520", cluster="lambda expression", file="JobStorage.cs"];
m1_351 [label="states.Add(id, x)", span="526-526", cluster="lambda expression", file="JobStorage.cs"];
m1_259 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_263 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_266 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_294 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450", cluster="lambda expression", file="JobStorage.cs"];
m1_295 [label="Exit lambda expression", span="450-450", cluster="lambda expression", file="JobStorage.cs"];
m1_320 [label="Exit lambda expression", span="481-481", cluster="lambda expression", file="JobStorage.cs"];
m1_319 [label="x.ToString(''yyyy-MM-dd'')", span="481-481", cluster="lambda expression", file="JobStorage.cs"];
m1_357 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542", cluster="lambda expression", file="JobStorage.cs"];
m1_342 [label="!jobs.ContainsKey(id)", span="520-520", cluster="lambda expression", file="JobStorage.cs"];
m1_354 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539", cluster="lambda expression", file="JobStorage.cs"];
m1_350 [label="!states.ContainsKey(id)", span="526-526", cluster="lambda expression", file="JobStorage.cs"];
m1_355 [label="Exit lambda expression", span="534-539", cluster="lambda expression", file="JobStorage.cs"];
m1_358 [label="Exit lambda expression", span="540-542", cluster="lambda expression", file="JobStorage.cs"];
m1_71 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="JobStorage.cs"];
m1_79 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="JobStorage.cs"];
m1_181 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="JobStorage.cs"];
m1_180 [label="firstJobIds = x", span="266-266", cluster="lambda expression", file="JobStorage.cs"];
m1_187 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="JobStorage.cs"];
m1_186 [label="length = x", span="270-270", cluster="lambda expression", file="JobStorage.cs"];
m1_193 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="JobStorage.cs"];
m1_192 [label="dequeued = x", span="274-274", cluster="lambda expression", file="JobStorage.cs"];
m1_344 [label="Exit lambda expression", span="520-520", cluster="lambda expression", file="JobStorage.cs"];
m1_352 [label="Exit lambda expression", span="526-526", cluster="lambda expression", file="JobStorage.cs"];
m1_392 [label="stats.Servers = x", span="566-566", cluster="lambda expression", file="JobStorage.cs"];
m1_398 [label="stats.Queues = x", span="570-570", cluster="lambda expression", file="JobStorage.cs"];
m1_404 [label="stats.Scheduled = x", span="574-574", cluster="lambda expression", file="JobStorage.cs"];
m1_410 [label="stats.Processing = x", span="578-578", cluster="lambda expression", file="JobStorage.cs"];
m1_417 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582", cluster="lambda expression", file="JobStorage.cs"];
m1_424 [label="stats.Failed = x", span="586-586", cluster="lambda expression", file="JobStorage.cs"];
m1_430 [label="stats.Enqueued += x", span="593-593", cluster="lambda expression", file="JobStorage.cs"];
m1_389 [label="Exit lambda expression", span="565-565", cluster="lambda expression", file="JobStorage.cs"];
m1_388 [label="x.GetSetCount(''hangfire:servers'')", span="565-565", cluster="lambda expression", file="JobStorage.cs"];
m1_393 [label="Exit lambda expression", span="566-566", cluster="lambda expression", file="JobStorage.cs"];
m1_396 [label="Exit lambda expression", span="569-569", cluster="lambda expression", file="JobStorage.cs"];
m1_395 [label="x.GetSetCount(''hangfire:queues'')", span="569-569", cluster="lambda expression", file="JobStorage.cs"];
m1_399 [label="Exit lambda expression", span="570-570", cluster="lambda expression", file="JobStorage.cs"];
m1_402 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="JobStorage.cs"];
m1_401 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573", cluster="lambda expression", file="JobStorage.cs"];
m1_405 [label="Exit lambda expression", span="574-574", cluster="lambda expression", file="JobStorage.cs"];
m1_408 [label="Exit lambda expression", span="577-577", cluster="lambda expression", file="JobStorage.cs"];
m1_407 [label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577", cluster="lambda expression", file="JobStorage.cs"];
m1_411 [label="Exit lambda expression", span="578-578", cluster="lambda expression", file="JobStorage.cs"];
m1_414 [label="Exit lambda expression", span="581-581", cluster="lambda expression", file="JobStorage.cs"];
m1_413 [label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581", cluster="lambda expression", file="JobStorage.cs"];
m1_418 [label="Exit lambda expression", span="582-582", cluster="lambda expression", file="JobStorage.cs"];
m1_422 [label="Exit lambda expression", span="585-585", cluster="lambda expression", file="JobStorage.cs"];
m1_421 [label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585", cluster="lambda expression", file="JobStorage.cs"];
m1_425 [label="Exit lambda expression", span="586-586", cluster="lambda expression", file="JobStorage.cs"];
m1_431 [label="Exit lambda expression", span="593-593", cluster="lambda expression", file="JobStorage.cs"];
m1_80 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="JobStorage.cs"];
m1_83 [label="Entry lambda expression", span="121-129", cluster="lambda expression", file="JobStorage.cs"];
m1_85 [label="Exit lambda expression", span="121-129", cluster="lambda expression", file="JobStorage.cs"];
m1_260 [label="!hiddenProperties.Contains(x.Key)", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_261 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_265 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_264 [label="x.Key", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_268 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_267 [label="x.Value", span="433-433", cluster="lambda expression", file="JobStorage.cs"];
m1_362 [label="Entry lambda expression", span="542-542", cluster="lambda expression", file="JobStorage.cs"];
m1_82 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="JobStorage.cs"];
m1_81 [label="job.Key", span="120-120", cluster="lambda expression", file="JobStorage.cs"];
m1_364 [label="Exit lambda expression", span="542-542", cluster="lambda expression", file="JobStorage.cs"];
m1_363 [label="y == null", span="542-542", cluster="lambda expression", file="JobStorage.cs"];
m1_41 [label="x.Value.StartedAt", span="76-76", cluster="lambda expression", file="JobStorage.cs"];
m1_42 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="JobStorage.cs"];
m1_175 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JobStorage.cs"];
m1_115 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JobStorage.cs"];
m1_67 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="JobStorage.cs"];
m1_220 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobStorage.cs"];
m1_222 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobStorage.cs"];
m1_221 [label=Redis, span="366-366", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobStorage.cs"];
m1_223 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobStorage.cs"];
m1_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobStorage.cs"];
m1_35 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="JobStorage.cs"];
m1_135 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobStorage.cs"];
m1_138 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobStorage.cs"];
m1_137 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobStorage.cs"];
m1_136 [label=Redis, span="197-197", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobStorage.cs"];
m1_139 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobStorage.cs"];
m1_37 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobStorage.cs"];
m1_144 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="JobStorage.cs"];
m1_87 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50", cluster="HangFire.JobHelper.FromTimestamp(long)", file="JobStorage.cs"];
m1_296 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="JobStorage.cs"];
m1_145 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobStorage.cs"];
m1_148 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobStorage.cs"];
m1_147 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobStorage.cs"];
m1_146 [label=Redis, span="225-225", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobStorage.cs"];
m1_149 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobStorage.cs"];
m1_172 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="JobStorage.cs"];
m1_290 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="JobStorage.cs"];
m1_150 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="JobStorage.cs"];
m1_155 [label="Entry HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_164 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_165 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_166 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_157 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_167 [label="pipeline.Flush()", span="276-276", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_163 [label="var pipeline = Redis.CreatePipeline()", span="261-261", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_159 [label=queues, span="255-255", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_160 [label="IList<string> firstJobIds = null", span="257-257", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_168 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_161 [label="long length = 0", span="258-258", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_169 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_162 [label="long dequeued = 0", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_156 [label=Redis, span="250-250", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_158 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_170 [label="return result;", span="301-301", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_171 [label="Exit HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="JobStorage.cs"];
m1_88 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobStorage.cs"];
m1_90 [label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobStorage.cs"];
m1_89 [label=Redis, span="135-135", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobStorage.cs"];
m1_91 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobStorage.cs"];
m1_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="JobStorage.cs"];
m1_154 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="JobStorage.cs"];
m1_419 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JobStorage.cs"];
m1_72 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobStorage.cs"];
m1_97 [label="Entry HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_110 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191", cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="JobStorage.cs"];
m1_99 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_102 [label="var servers = new Dictionary<string, List<string>>()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_103 [label="var queues = new Dictionary<string, List<string>>()", span="161-161", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_109 [label="pipeline.Flush()", span="181-181", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_107 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173", cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="JobStorage.cs"];
m1_104 [label="var pipeline = Redis.CreatePipeline()", span="163-163", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_106 [label="var name = serverName", span="167-167", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_108 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_98 [label=Redis, span="151-151", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_100 [label="serverNames.Count == 0", span="155-155", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_105 [label=serverNames, span="165-165", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_101 [label="return new List<ServerDto>();", span="157-157", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_111 [label="Exit HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="JobStorage.cs"];
m1_369 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_374 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_375 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_376 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_377 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_378 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_379 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_382 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_372 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_383 [label="pipeline.Flush()", span="596-596", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_373 [label="var pipeline = Redis.CreatePipeline()", span="562-562", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_371 [label="var stats = new StatisticsDto()", span="558-558", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_380 [label=queues, span="588-588", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_381 [label="var queueName = queue", span="590-590", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_384 [label="return stats;", span="599-599", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_370 [label=Redis, span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_385 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobStorage.cs"];
m1_365 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobStorage.cs"];
m1_367 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobStorage.cs"];
m1_366 [label=Redis, span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobStorage.cs"];
m1_368 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobStorage.cs"];
m1_215 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobStorage.cs"];
m1_217 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobStorage.cs"];
m1_216 [label=Redis, span="358-358", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobStorage.cs"];
m1_218 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobStorage.cs"];
m1_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="JobStorage.cs"];
m1_235 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobStorage.cs"];
m1_288 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="JobStorage.cs"];
m1_92 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_305 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_304 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_307 [label="var result = new Dictionary<DateTime, long>()", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_306 [label="var valuesMap = redis.GetValuesMap(keys)", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_301 [label="startDate <= endDate", span="475-475", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_300 [label="var dates = new List<DateTime>()", span="473-473", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_309 [label="i < stringDates.Count", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_308 [label="var i = 0", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_313 [label="result.Add(dates[i], value)", span="494-494", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_315 [label="return result;", span="497-497", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_298 [label="var endDate = DateTime.UtcNow.Date", span="471-471", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_311 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_299 [label="var startDate = endDate.AddDays(-7)", span="472-472", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_303 [label="endDate = endDate.AddDays(-1)", span="478-478", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_302 [label="dates.Add(endDate)", span="477-477", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_314 [label="i++", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_310 [label="long value", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_312 [label="value = 0", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_316 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobStorage.cs"];
m1_15 [label="dispatcher == null", span="54-54", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_17 [label=_authorizationFilters, span="59-59", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_16 [label="return Next.Invoke(context);", span="56-56", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_18 [label="!filter.Authorize(context.Environment)", span="61-61", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_255 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="JobStorage.cs"];
m1_244 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_251 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_250 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_252 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_249 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_246 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_245 [label=Redis, span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_247 [label="job.Count == 0", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_248 [label="return null;", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_253 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobStorage.cs"];
m1_292 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobStorage.cs"];
m1_297 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobStorage.cs"];
m1_254 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="JobStorage.cs"];
m1_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JobStorage.cs"];
m1_337 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="JobStorage.cs"];
m1_390 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="JobStorage.cs"];
m1_206 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobStorage.cs"];
m1_209 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobStorage.cs"];
m1_208 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobStorage.cs"];
m1_207 [label=Redis, span="333-333", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobStorage.cs"];
m1_210 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobStorage.cs"];
m1_93 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobStorage.cs"];
m1_95 [label="return GetTimelineStats(Redis, ''failed'');", span="145-145", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobStorage.cs"];
m1_94 [label=Redis, span="143-143", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobStorage.cs"];
m1_96 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobStorage.cs"];
m1_256 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobStorage.cs"];
m1_86 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="JobStorage.cs"];
m1_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobStorage.cs"];
m1_233 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobStorage.cs"];
m1_289 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="JobStorage.cs"];
m1_19 [label="context.Response.StatusCode = (int) HttpStatusCode.Unauthorized", span="63-63", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_21 [label="var dispatcherContext = new RequestDispatcherContext(\r\n                _appPath,\r\n                _storage,\r\n                context.Environment,\r\n                dispatcher.Item2)", span="68-72", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_20 [label="return Task.FromResult(false);", span="64-64", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_22 [label="return dispatcher.Item1.Dispatch(dispatcherContext);", span="74-74", cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="JobStorage.cs"];
m1_125 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="JobStorage.cs"];
m1_262 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="JobStorage.cs"];
m1_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobStorage.cs"];
m1_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="JobStorage.cs"];
m1_140 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="JobStorage.cs"];
m1_415 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="JobStorage.cs"];
m1_68 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="JobStorage.cs"];
m1_224 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_226 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_225 [label=Redis, span="374-374", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_227 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_230 [label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-389", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_229 [label="return false;", span="381-381", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_228 [label="String.IsNullOrEmpty(queue)", span="379-379", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_231 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobStorage.cs"];
m1_198 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobStorage.cs"];
m1_201 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobStorage.cs"];
m1_200 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobStorage.cs"];
m1_199 [label=Redis, span="308-308", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobStorage.cs"];
m1_202 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobStorage.cs"];
m1_436 [label=servers, span="", file="JobStorage.cs"];
m1_437 [label=queues, span="", file="JobStorage.cs"];
m1_435 [label=name, span="", file="JobStorage.cs"];
m1_432 [label=job, span="", file="JobStorage.cs"];
m1_438 [label=queue, span="", file="JobStorage.cs"];
m1_441 [label=string, span="", file="JobStorage.cs"];
m1_449 [label=queueName, span="", file="JobStorage.cs"];
m1_442 [label="string[]", span="", file="JobStorage.cs"];
m1_443 [label=id, span="", file="JobStorage.cs"];
m1_445 [label="string[]", span="", file="JobStorage.cs"];
m1_433 [label=jobs, span="", file="JobStorage.cs"];
m1_434 [label=states, span="", file="JobStorage.cs"];
m1_444 [label=jobs, span="", file="JobStorage.cs"];
m1_446 [label=states, span="", file="JobStorage.cs"];
m1_440 [label=string, span="", file="JobStorage.cs"];
m1_447 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="JobStorage.cs"];
m1_448 [label=stats, span="", file="JobStorage.cs"];
m1_439 [label=hiddenProperties, span="", file="JobStorage.cs"];
m2_363 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SchedulePoller.cs"];
m2_622 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_623 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="891-894", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_624 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_155 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SchedulePoller.cs"];
m2_621 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SchedulePoller.cs"];
m2_401 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SchedulePoller.cs"];
m2_57 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m2_810 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SchedulePoller.cs"];
m2_811 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1206-1208", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SchedulePoller.cs"];
m2_812 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1210-1225", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SchedulePoller.cs"];
m2_813 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SchedulePoller.cs"];
m2_478 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SchedulePoller.cs"];
m2_479 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="682-683", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SchedulePoller.cs"];
m2_480 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SchedulePoller.cs"];
m2_460 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SchedulePoller.cs"];
m2_25 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", span="42-42", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", file="SchedulePoller.cs"];
m2_364 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SchedulePoller.cs"];
m2_365 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="530-531", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SchedulePoller.cs"];
m2_366 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SchedulePoller.cs"];
m2_739 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_740 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1092-1096", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_741 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_667 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SchedulePoller.cs"];
m2_668 [label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="970-972", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SchedulePoller.cs"];
m2_669 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="974-987", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SchedulePoller.cs"];
m2_670 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SchedulePoller.cs"];
m2_864 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SchedulePoller.cs"];
m2_865 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1300-1302", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SchedulePoller.cs"];
m2_866 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1304-1319", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SchedulePoller.cs"];
m2_867 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SchedulePoller.cs"];
m2_575 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SchedulePoller.cs"];
m2_271 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_272 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="378-384", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_273 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_343 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SchedulePoller.cs"];
m2_344 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="494-501", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SchedulePoller.cs"];
m2_345 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="503-512", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SchedulePoller.cs"];
m2_346 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SchedulePoller.cs"];
m2_905 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="SchedulePoller.cs"];
m2_304 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SchedulePoller.cs"];
m2_305 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="437-440", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SchedulePoller.cs"];
m2_306 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="442-454", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SchedulePoller.cs"];
m2_307 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SchedulePoller.cs"];
m2_153 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SchedulePoller.cs"];
m2_26 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="43-43", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="SchedulePoller.cs"];
m2_27 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(_serverId, _storage.Object, null, _cts.Token))", span="45-46", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="SchedulePoller.cs"];
m2_28 [label="Assert.Equal(''properties'', exception.ParamName)", span="48-48", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="SchedulePoller.cs"];
m2_857 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_858 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1290-1294", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_859 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_24 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="SchedulePoller.cs"];
m2_209 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_210 [label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="251-253", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_211 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_883 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SchedulePoller.cs"];
m2_884 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1334-1338", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SchedulePoller.cs"];
m2_885 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SchedulePoller.cs"];
m2_450 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="SchedulePoller.cs"];
m2_829 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SchedulePoller.cs"];
m2_719 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SchedulePoller.cs"];
m2_720 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1057-1059", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SchedulePoller.cs"];
m2_721 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1061-1076", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SchedulePoller.cs"];
m2_722 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SchedulePoller.cs"];
m2_281 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SchedulePoller.cs"];
m2_282 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="390-393", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SchedulePoller.cs"];
m2_283 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="395-407", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SchedulePoller.cs"];
m2_284 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SchedulePoller.cs"];
m2_353 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_354 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="518-524", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_355 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_792 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SchedulePoller.cs"];
m2_430 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_431 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="625-626", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_432 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_772 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SchedulePoller.cs"];
m2_773 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1147-1149", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SchedulePoller.cs"];
m2_774 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1151-1166", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SchedulePoller.cs"];
m2_775 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SchedulePoller.cs"];
m2_389 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SchedulePoller.cs"];
m2_239 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SchedulePoller.cs"];
m2_240 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="306-318", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SchedulePoller.cs"];
m2_241 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="320-335", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SchedulePoller.cs"];
m2_242 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SchedulePoller.cs"];
m2_658 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SchedulePoller.cs"];
m2_659 [label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="945-947", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SchedulePoller.cs"];
m2_660 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="949-964", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SchedulePoller.cs"];
m2_661 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SchedulePoller.cs"];
m2_259 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="SchedulePoller.cs"];
m2_847 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_848 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1280-1284", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_849 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_5 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SchedulePoller.cs"];
m2_488 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SchedulePoller.cs"];
m2_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SchedulePoller.cs"];
m2_402 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs"];
m2_403 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="582-588", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs"];
m2_404 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.cs"];
m2_764 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SchedulePoller.cs"];
m2_39 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="52-52", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="SchedulePoller.cs"];
m2_685 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SchedulePoller.cs"];
m2_33 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="52-52", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="SchedulePoller.cs"];
m2_34 [label="var context = new BackgroundProcessContext(_serverId, _storage.Object, _properties, _cts.Token)", span="54-54", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="SchedulePoller.cs"];
m2_35 [label="Assert.Equal(_serverId, context.ServerId)", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="SchedulePoller.cs"];
m2_37 [label="Assert.Same(_storage.Object, context.Storage)", span="58-58", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="SchedulePoller.cs"];
m2_36 [label="Assert.True(_properties.SequenceEqual(context.Properties))", span="57-57", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="SchedulePoller.cs"];
m2_38 [label="Assert.Equal(_cts.Token, context.CancellationToken)", span="59-59", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="SchedulePoller.cs"];
m2_205 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SchedulePoller.cs"];
m2_326 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_327 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="472-478", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_328 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_203 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SchedulePoller.cs"];
m2_250 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SchedulePoller.cs"];
m2_251 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="341-344", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SchedulePoller.cs"];
m2_252 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="346-360", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SchedulePoller.cs"];
m2_253 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SchedulePoller.cs"];
m2_650 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SchedulePoller.cs"];
m2_890 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SchedulePoller.cs"];
m2_891 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1344-1346", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SchedulePoller.cs"];
m2_892 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1348-1363", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SchedulePoller.cs"];
m2_893 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SchedulePoller.cs"];
m2_156 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SchedulePoller.cs"];
m2_439 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SchedulePoller.cs"];
m2_7 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="SchedulePoller.cs"];
m2_154 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SchedulePoller.cs"];
m2_566 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_567 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="804-805", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_568 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_511 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_512 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="720-726", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_513 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_219 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SchedulePoller.cs"];
m2_220 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="259-263", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SchedulePoller.cs"];
m2_221 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SchedulePoller.cs"];
m2_576 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SchedulePoller.cs"];
m2_577 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="811-815", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SchedulePoller.cs"];
m2_578 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SchedulePoller.cs"];
m2_440 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SchedulePoller.cs"];
m2_441 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="632-636", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SchedulePoller.cs"];
m2_442 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="638-646", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SchedulePoller.cs"];
m2_443 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SchedulePoller.cs"];
m2_583 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SchedulePoller.cs"];
m2_584 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="821-823", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SchedulePoller.cs"];
m2_585 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="825-843", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SchedulePoller.cs"];
m2_586 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SchedulePoller.cs"];
m2_782 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_783 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1172-1178", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_784 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_712 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SchedulePoller.cs"];
m2_713 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1047-1051", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SchedulePoller.cs"];
m2_714 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SchedulePoller.cs"];
m2_793 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_794 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1184-1190", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_795 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SchedulePoller.cs"];
m2_62 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="SchedulePoller.cs"];
m2_30 [label="new SqlServerConnection(ConnectionUtils.CreateConnection(), IsolationLevel.Serializable, null)", span="45-45", cluster="lambda expression", file="SchedulePoller.cs"];
m2_11 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="25-25", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePoller.cs"];
m2_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SchedulePoller.cs"];
m2_21 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="34-34", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePoller.cs"];
m2_22 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="SchedulePoller.cs"];
m2_23 [label="new BackgroundProcessContext(_serverId, null, _properties, _cts.Token)", span="37-37", cluster="lambda expression", file="SchedulePoller.cs"];
m2_29 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="43-43", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="SchedulePoller.cs"];
m2_31 [label="new BackgroundProcessContext(_serverId, _storage.Object, null, _cts.Token)", span="46-46", cluster="lambda expression", file="SchedulePoller.cs"];
m2_50 [label="Entry lambda expression", span="79-87", cluster="lambda expression", file="SchedulePoller.cs"];
m2_51 [label="var token = new CancellationToken()", span="81-81", cluster="lambda expression", color=red, community=0, file="SchedulePoller.cs"];
m2_53 [label="connection.FetchNextJob(queues, token)", span="84-84", cluster="lambda expression", color=red, community=0, file="SchedulePoller.cs"];
m2_52 [label="var queues = new[] { ''default'' }", span="82-82", cluster="lambda expression", color=red, community=0, file="SchedulePoller.cs"];
m2_54 [label="_queue.Verify(x => x.Dequeue(queues, token))", span="86-86", cluster="lambda expression", file="SchedulePoller.cs"];
m2_60 [label="x.Dequeue(queues, token)", span="86-86", cluster="lambda expression", file="SchedulePoller.cs"];
m2_55 [label="Exit lambda expression", span="79-87", cluster="lambda expression", file="SchedulePoller.cs"];
m2_59 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="SchedulePoller.cs"];
m2_61 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="SchedulePoller.cs"];
m2_67 [label="Entry lambda expression", span="93-101", cluster="lambda expression", file="SchedulePoller.cs"];
m2_68 [label="var token = new CancellationToken()", span="95-95", cluster="lambda expression", file="SchedulePoller.cs"];
m2_71 [label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="99-100", cluster="lambda expression", file="SchedulePoller.cs"];
m2_75 [label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="100-100", cluster="lambda expression", file="SchedulePoller.cs"];
m2_69 [label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="96-96", cluster="lambda expression", color=red, community=0, file="SchedulePoller.cs"];
m2_70 [label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="97-97", cluster="lambda expression", file="SchedulePoller.cs"];
m2_72 [label="Exit lambda expression", span="93-101", cluster="lambda expression", file="SchedulePoller.cs"];
m2_74 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="SchedulePoller.cs"];
m2_76 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="SchedulePoller.cs"];
m2_80 [label="Entry lambda expression", span="107-111", cluster="lambda expression", file="SchedulePoller.cs"];
m2_81 [label="var transaction = connection.CreateWriteTransaction()", span="109-109", cluster="lambda expression", file="SchedulePoller.cs"];
m2_82 [label="Assert.NotNull(transaction)", span="110-110", cluster="lambda expression", file="SchedulePoller.cs"];
m2_83 [label="Exit lambda expression", span="107-111", cluster="lambda expression", file="SchedulePoller.cs"];
m2_89 [label="Entry lambda expression", span="117-121", cluster="lambda expression", file="SchedulePoller.cs"];
m2_90 [label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="119-119", cluster="lambda expression", file="SchedulePoller.cs"];
m2_91 [label="Assert.NotNull(@lock)", span="120-120", cluster="lambda expression", file="SchedulePoller.cs"];
m2_92 [label="Exit lambda expression", span="117-121", cluster="lambda expression", file="SchedulePoller.cs"];
m2_98 [label="Entry lambda expression", span="127-137", cluster="lambda expression", file="SchedulePoller.cs"];
m2_99 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="129-134", cluster="lambda expression", file="SchedulePoller.cs"];
m2_103 [label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="130-134", cluster="lambda expression", file="SchedulePoller.cs"];
m2_100 [label="Assert.Equal(''job'', exception.ParamName)", span="136-136", cluster="lambda expression", file="SchedulePoller.cs"];
m2_102 [label="Entry lambda expression", span="130-134", cluster="lambda expression", file="SchedulePoller.cs"];
m2_101 [label="Exit lambda expression", span="127-137", cluster="lambda expression", file="SchedulePoller.cs"];
m2_104 [label="Exit lambda expression", span="130-134", cluster="lambda expression", file="SchedulePoller.cs"];
m2_110 [label="Entry lambda expression", span="143-153", cluster="lambda expression", file="SchedulePoller.cs"];
m2_111 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="145-150", cluster="lambda expression", file="SchedulePoller.cs"];
m2_115 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="146-150", cluster="lambda expression", file="SchedulePoller.cs"];
m2_112 [label="Assert.Equal(''parameters'', exception.ParamName)", span="152-152", cluster="lambda expression", file="SchedulePoller.cs"];
m2_114 [label="Entry lambda expression", span="146-150", cluster="lambda expression", file="SchedulePoller.cs"];
m2_113 [label="Exit lambda expression", span="143-153", cluster="lambda expression", file="SchedulePoller.cs"];
m2_116 [label="Exit lambda expression", span="146-150", cluster="lambda expression", file="SchedulePoller.cs"];
m2_118 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="SchedulePoller.cs"];
m2_119 [label="SampleMethod(''hello'')", span="147-147", cluster="lambda expression", file="SchedulePoller.cs"];
m2_120 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="SchedulePoller.cs"];
m2_126 [label="Entry lambda expression", span="159-195", cluster="lambda expression", file="SchedulePoller.cs"];
m2_127 [label="var createdAt = new DateTime(2012, 12, 12)", span="161-161", cluster="lambda expression", file="SchedulePoller.cs"];
m2_128 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="162-166", cluster="lambda expression", file="SchedulePoller.cs"];
m2_131 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="171-171", cluster="lambda expression", file="SchedulePoller.cs"];
m2_144 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="188-191", cluster="lambda expression", file="SchedulePoller.cs"];
m2_133 [label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="173-173", cluster="lambda expression", file="SchedulePoller.cs"];
m2_142 [label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="185-185", cluster="lambda expression", file="SchedulePoller.cs"];
m2_143 [label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="186-186", cluster="lambda expression", file="SchedulePoller.cs"];
m2_129 [label="Assert.NotNull(jobId)", span="168-168", cluster="lambda expression", file="SchedulePoller.cs"];
m2_160 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="SchedulePoller.cs"];
m2_130 [label="Assert.NotEmpty(jobId)", span="169-169", cluster="lambda expression", file="SchedulePoller.cs"];
m2_132 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="172-172", cluster="lambda expression", file="SchedulePoller.cs"];
m2_134 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="174-174", cluster="lambda expression", file="SchedulePoller.cs"];
m2_135 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="175-175", cluster="lambda expression", file="SchedulePoller.cs"];
m2_136 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="177-177", cluster="lambda expression", file="SchedulePoller.cs"];
m2_137 [label="invocationData.Arguments = sqlJob.Arguments", span="178-178", cluster="lambda expression", file="SchedulePoller.cs"];
m2_138 [label="var job = invocationData.Deserialize()", span="180-180", cluster="lambda expression", file="SchedulePoller.cs"];
m2_139 [label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="181-181", cluster="lambda expression", file="SchedulePoller.cs"];
m2_140 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="182-182", cluster="lambda expression", file="SchedulePoller.cs"];
m2_141 [label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="183-183", cluster="lambda expression", file="SchedulePoller.cs"];
m2_145 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="193-193", cluster="lambda expression", file="SchedulePoller.cs"];
m2_163 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="SchedulePoller.cs"];
m2_166 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="SchedulePoller.cs"];
m2_146 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="194-194", cluster="lambda expression", file="SchedulePoller.cs"];
m2_147 [label="Exit lambda expression", span="159-195", cluster="lambda expression", file="SchedulePoller.cs"];
m2_161 [label="SampleMethod(''Hello'')", span="163-163", cluster="lambda expression", file="SchedulePoller.cs"];
m2_162 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="SchedulePoller.cs"];
m2_164 [label="(string) x.Name", span="191-191", cluster="lambda expression", file="SchedulePoller.cs"];
m2_165 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="SchedulePoller.cs"];
m2_167 [label="(string) x.Value", span="191-191", cluster="lambda expression", file="SchedulePoller.cs"];
m2_168 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="SchedulePoller.cs"];
m2_172 [label="Entry lambda expression", span="201-202", cluster="lambda expression", file="SchedulePoller.cs"];
m2_173 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="201-202", cluster="lambda expression", file="SchedulePoller.cs"];
m2_176 [label="connection.GetJobData(null)", span="202-202", cluster="lambda expression", file="SchedulePoller.cs"];
m2_174 [label="Exit lambda expression", span="201-202", cluster="lambda expression", file="SchedulePoller.cs"];
m2_175 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="SchedulePoller.cs"];
m2_177 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="SchedulePoller.cs"];
m2_182 [label="Entry lambda expression", span="208-212", cluster="lambda expression", file="SchedulePoller.cs"];
m2_183 [label="var result = connection.GetJobData(''1'')", span="210-210", cluster="lambda expression", file="SchedulePoller.cs"];
m2_184 [label="Assert.Null(result)", span="211-211", cluster="lambda expression", file="SchedulePoller.cs"];
m2_185 [label="Exit lambda expression", span="208-212", cluster="lambda expression", file="SchedulePoller.cs"];
m2_193 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="227-234", cluster="lambda expression", file="SchedulePoller.cs"];
m2_191 [label="Entry lambda expression", span="223-245", cluster="lambda expression", file="SchedulePoller.cs"];
m2_192 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="225-225", cluster="lambda expression", file="SchedulePoller.cs"];
m2_194 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="236-236", cluster="lambda expression", file="SchedulePoller.cs"];
m2_206 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="SchedulePoller.cs"];
m2_195 [label="Assert.NotNull(result)", span="238-238", cluster="lambda expression", file="SchedulePoller.cs"];
m2_196 [label="Assert.NotNull(result.Job)", span="239-239", cluster="lambda expression", file="SchedulePoller.cs"];
m2_197 [label="Assert.Equal(''Succeeded'', result.State)", span="240-240", cluster="lambda expression", file="SchedulePoller.cs"];
m2_198 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="241-241", cluster="lambda expression", file="SchedulePoller.cs"];
m2_199 [label="Assert.Null(result.LoadException)", span="242-242", cluster="lambda expression", file="SchedulePoller.cs"];
m2_200 [label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="243-243", cluster="lambda expression", file="SchedulePoller.cs"];
m2_201 [label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="244-244", cluster="lambda expression", file="SchedulePoller.cs"];
m2_202 [label="Exit lambda expression", span="223-245", cluster="lambda expression", file="SchedulePoller.cs"];
m2_207 [label="SampleMethod(''wrong'')", span="225-225", cluster="lambda expression", file="SchedulePoller.cs"];
m2_208 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="SchedulePoller.cs"];
m2_212 [label="Entry lambda expression", span="252-253", cluster="lambda expression", file="SchedulePoller.cs"];
m2_213 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="252-253", cluster="lambda expression", file="SchedulePoller.cs"];
m2_216 [label="connection.GetStateData(null)", span="253-253", cluster="lambda expression", file="SchedulePoller.cs"];
m2_214 [label="Exit lambda expression", span="252-253", cluster="lambda expression", file="SchedulePoller.cs"];
m2_215 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="SchedulePoller.cs"];
m2_217 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="SchedulePoller.cs"];
m2_222 [label="Entry lambda expression", span="259-263", cluster="lambda expression", file="SchedulePoller.cs"];
m2_223 [label="var result = connection.GetStateData(''1'')", span="261-261", cluster="lambda expression", file="SchedulePoller.cs"];
m2_224 [label="Assert.Null(result)", span="262-262", cluster="lambda expression", file="SchedulePoller.cs"];
m2_225 [label="Exit lambda expression", span="259-263", cluster="lambda expression", file="SchedulePoller.cs"];
m2_232 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="290-292", cluster="lambda expression", file="SchedulePoller.cs"];
m2_230 [label="Entry lambda expression", span="283-300", cluster="lambda expression", file="SchedulePoller.cs"];
m2_231 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="285-288", cluster="lambda expression", file="SchedulePoller.cs"];
m2_233 [label="var result = connection.GetStateData(jobId.ToString())", span="294-294", cluster="lambda expression", file="SchedulePoller.cs"];
m2_234 [label="Assert.NotNull(result)", span="295-295", cluster="lambda expression", file="SchedulePoller.cs"];
m2_235 [label="Assert.Equal(''Name'', result.Name)", span="297-297", cluster="lambda expression", file="SchedulePoller.cs"];
m2_236 [label="Assert.Equal(''Reason'', result.Reason)", span="298-298", cluster="lambda expression", file="SchedulePoller.cs"];
m2_237 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="299-299", cluster="lambda expression", file="SchedulePoller.cs"];
m2_238 [label="Exit lambda expression", span="283-300", cluster="lambda expression", file="SchedulePoller.cs"];
m2_245 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="327-329", cluster="lambda expression", file="SchedulePoller.cs"];
m2_243 [label="Entry lambda expression", span="320-335", cluster="lambda expression", file="SchedulePoller.cs"];
m2_244 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="322-325", cluster="lambda expression", file="SchedulePoller.cs"];
m2_246 [label="var result = connection.GetStateData(jobId.ToString())", span="331-331", cluster="lambda expression", file="SchedulePoller.cs"];
m2_247 [label="Assert.NotNull(result)", span="332-332", cluster="lambda expression", file="SchedulePoller.cs"];
m2_248 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="334-334", cluster="lambda expression", file="SchedulePoller.cs"];
m2_249 [label="Exit lambda expression", span="320-335", cluster="lambda expression", file="SchedulePoller.cs"];
m2_255 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="348-355", cluster="lambda expression", file="SchedulePoller.cs"];
m2_254 [label="Entry lambda expression", span="346-360", cluster="lambda expression", file="SchedulePoller.cs"];
m2_256 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="357-357", cluster="lambda expression", file="SchedulePoller.cs"];
m2_257 [label="Assert.NotNull(result.LoadException)", span="359-359", cluster="lambda expression", file="SchedulePoller.cs"];
m2_258 [label="Exit lambda expression", span="346-360", cluster="lambda expression", file="SchedulePoller.cs"];
m2_263 [label="Entry lambda expression", span="366-372", cluster="lambda expression", file="SchedulePoller.cs"];
m2_264 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="368-369", cluster="lambda expression", file="SchedulePoller.cs"];
m2_268 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="369-369", cluster="lambda expression", file="SchedulePoller.cs"];
m2_265 [label="Assert.Equal(''id'', exception.ParamName)", span="371-371", cluster="lambda expression", file="SchedulePoller.cs"];
m2_267 [label="Entry lambda expression", span="369-369", cluster="lambda expression", file="SchedulePoller.cs"];
m2_266 [label="Exit lambda expression", span="366-372", cluster="lambda expression", file="SchedulePoller.cs"];
m2_269 [label="Exit lambda expression", span="369-369", cluster="lambda expression", file="SchedulePoller.cs"];
m2_274 [label="Entry lambda expression", span="378-384", cluster="lambda expression", file="SchedulePoller.cs"];
m2_275 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="380-381", cluster="lambda expression", file="SchedulePoller.cs"];
m2_279 [label="connection.SetJobParameter(''1'', null, ''value'')", span="381-381", cluster="lambda expression", file="SchedulePoller.cs"];
m2_276 [label="Assert.Equal(''name'', exception.ParamName)", span="383-383", cluster="lambda expression", file="SchedulePoller.cs"];
m2_278 [label="Entry lambda expression", span="381-381", cluster="lambda expression", file="SchedulePoller.cs"];
m2_277 [label="Exit lambda expression", span="378-384", cluster="lambda expression", file="SchedulePoller.cs"];
m2_280 [label="Exit lambda expression", span="381-381", cluster="lambda expression", file="SchedulePoller.cs"];
m2_286 [label="var job = sql.Query(arrangeSql).Single()", span="397-397", cluster="lambda expression", file="SchedulePoller.cs"];
m2_285 [label="Entry lambda expression", span="395-407", cluster="lambda expression", file="SchedulePoller.cs"];
m2_288 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="400-400", cluster="lambda expression", file="SchedulePoller.cs"];
m2_289 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="402-404", cluster="lambda expression", file="SchedulePoller.cs"];
m2_287 [label="string jobId = job.Id.ToString()", span="398-398", cluster="lambda expression", file="SchedulePoller.cs"];
m2_290 [label="Assert.Equal(''Value'', parameter.Value)", span="406-406", cluster="lambda expression", file="SchedulePoller.cs"];
m2_291 [label="Exit lambda expression", span="395-407", cluster="lambda expression", file="SchedulePoller.cs"];
m2_297 [label="var job = sql.Query(arrangeSql).Single()", span="420-420", cluster="lambda expression", file="SchedulePoller.cs"];
m2_296 [label="Entry lambda expression", span="418-431", cluster="lambda expression", file="SchedulePoller.cs"];
m2_299 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="423-423", cluster="lambda expression", file="SchedulePoller.cs"];
m2_300 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="424-424", cluster="lambda expression", file="SchedulePoller.cs"];
m2_301 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="426-428", cluster="lambda expression", file="SchedulePoller.cs"];
m2_298 [label="string jobId = job.Id.ToString()", span="421-421", cluster="lambda expression", file="SchedulePoller.cs"];
m2_302 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="430-430", cluster="lambda expression", file="SchedulePoller.cs"];
m2_303 [label="Exit lambda expression", span="418-431", cluster="lambda expression", file="SchedulePoller.cs"];
m2_309 [label="var job = sql.Query(arrangeSql).Single()", span="444-444", cluster="lambda expression", file="SchedulePoller.cs"];
m2_308 [label="Entry lambda expression", span="442-454", cluster="lambda expression", file="SchedulePoller.cs"];
m2_311 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="447-447", cluster="lambda expression", file="SchedulePoller.cs"];
m2_312 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="449-451", cluster="lambda expression", file="SchedulePoller.cs"];
m2_310 [label="string jobId = job.Id.ToString()", span="445-445", cluster="lambda expression", file="SchedulePoller.cs"];
m2_313 [label="Assert.Equal((string) null, parameter.Value)", span="453-453", cluster="lambda expression", file="SchedulePoller.cs"];
m2_314 [label="Exit lambda expression", span="442-454", cluster="lambda expression", file="SchedulePoller.cs"];
m2_318 [label="Entry lambda expression", span="460-466", cluster="lambda expression", file="SchedulePoller.cs"];
m2_319 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="462-463", cluster="lambda expression", file="SchedulePoller.cs"];
m2_323 [label="connection.GetJobParameter(null, ''hello'')", span="463-463", cluster="lambda expression", file="SchedulePoller.cs"];
m2_320 [label="Assert.Equal(''id'', exception.ParamName)", span="465-465", cluster="lambda expression", file="SchedulePoller.cs"];
m2_322 [label="Entry lambda expression", span="463-463", cluster="lambda expression", file="SchedulePoller.cs"];
m2_321 [label="Exit lambda expression", span="460-466", cluster="lambda expression", file="SchedulePoller.cs"];
m2_324 [label="Exit lambda expression", span="463-463", cluster="lambda expression", file="SchedulePoller.cs"];
m2_329 [label="Entry lambda expression", span="472-478", cluster="lambda expression", file="SchedulePoller.cs"];
m2_330 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="474-475", cluster="lambda expression", file="SchedulePoller.cs"];
m2_334 [label="connection.GetJobParameter(''1'', null)", span="475-475", cluster="lambda expression", file="SchedulePoller.cs"];
m2_331 [label="Assert.Equal(''name'', exception.ParamName)", span="477-477", cluster="lambda expression", file="SchedulePoller.cs"];
m2_333 [label="Entry lambda expression", span="475-475", cluster="lambda expression", file="SchedulePoller.cs"];
m2_332 [label="Exit lambda expression", span="472-478", cluster="lambda expression", file="SchedulePoller.cs"];
m2_335 [label="Exit lambda expression", span="475-475", cluster="lambda expression", file="SchedulePoller.cs"];
m2_339 [label="Entry lambda expression", span="484-488", cluster="lambda expression", file="SchedulePoller.cs"];
m2_340 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="486-486", cluster="lambda expression", file="SchedulePoller.cs"];
m2_341 [label="Assert.Null(value)", span="487-487", cluster="lambda expression", file="SchedulePoller.cs"];
m2_342 [label="Exit lambda expression", span="484-488", cluster="lambda expression", file="SchedulePoller.cs"];
m2_348 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="505-507", cluster="lambda expression", file="SchedulePoller.cs"];
m2_347 [label="Entry lambda expression", span="503-512", cluster="lambda expression", file="SchedulePoller.cs"];
m2_349 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="509-509", cluster="lambda expression", file="SchedulePoller.cs"];
m2_350 [label="Assert.Equal(''value'', value)", span="511-511", cluster="lambda expression", file="SchedulePoller.cs"];
m2_351 [label="Exit lambda expression", span="503-512", cluster="lambda expression", file="SchedulePoller.cs"];
m2_356 [label="Entry lambda expression", span="518-524", cluster="lambda expression", file="SchedulePoller.cs"];
m2_357 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="520-521", cluster="lambda expression", file="SchedulePoller.cs"];
m2_361 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="521-521", cluster="lambda expression", file="SchedulePoller.cs"];
m2_358 [label="Assert.Equal(''key'', exception.ParamName)", span="523-523", cluster="lambda expression", file="SchedulePoller.cs"];
m2_360 [label="Entry lambda expression", span="521-521", cluster="lambda expression", file="SchedulePoller.cs"];
m2_359 [label="Exit lambda expression", span="518-524", cluster="lambda expression", file="SchedulePoller.cs"];
m2_362 [label="Exit lambda expression", span="521-521", cluster="lambda expression", file="SchedulePoller.cs"];
m2_367 [label="Entry lambda expression", span="530-531", cluster="lambda expression", file="SchedulePoller.cs"];
m2_368 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="530-531", cluster="lambda expression", file="SchedulePoller.cs"];
m2_371 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="531-531", cluster="lambda expression", file="SchedulePoller.cs"];
m2_369 [label="Exit lambda expression", span="530-531", cluster="lambda expression", file="SchedulePoller.cs"];
m2_370 [label="Entry lambda expression", span="531-531", cluster="lambda expression", file="SchedulePoller.cs"];
m2_372 [label="Exit lambda expression", span="531-531", cluster="lambda expression", file="SchedulePoller.cs"];
m2_376 [label="Entry lambda expression", span="537-543", cluster="lambda expression", file="SchedulePoller.cs"];
m2_377 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="539-540", cluster="lambda expression", file="SchedulePoller.cs"];
m2_378 [label="Assert.Null(result)", span="542-542", cluster="lambda expression", file="SchedulePoller.cs"];
m2_379 [label="Exit lambda expression", span="537-543", cluster="lambda expression", file="SchedulePoller.cs"];
m2_385 [label="sql.Execute(arrangeSql)", span="559-559", cluster="lambda expression", file="SchedulePoller.cs"];
m2_384 [label="Entry lambda expression", span="557-564", cluster="lambda expression", file="SchedulePoller.cs"];
m2_386 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="561-561", cluster="lambda expression", file="SchedulePoller.cs"];
m2_387 [label="Assert.Equal(''-1.0'', result)", span="563-563", cluster="lambda expression", file="SchedulePoller.cs"];
m2_388 [label="Exit lambda expression", span="557-564", cluster="lambda expression", file="SchedulePoller.cs"];
m2_393 [label="Entry lambda expression", span="570-576", cluster="lambda expression", file="SchedulePoller.cs"];
m2_394 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="572-573", cluster="lambda expression", file="SchedulePoller.cs"];
m2_398 [label="connection.AnnounceServer(null, new ServerContext())", span="573-573", cluster="lambda expression", file="SchedulePoller.cs"];
m2_395 [label="Assert.Equal(''serverId'', exception.ParamName)", span="575-575", cluster="lambda expression", file="SchedulePoller.cs"];
m2_397 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="SchedulePoller.cs"];
m2_396 [label="Exit lambda expression", span="570-576", cluster="lambda expression", file="SchedulePoller.cs"];
m2_399 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="SchedulePoller.cs"];
m2_405 [label="Entry lambda expression", span="582-588", cluster="lambda expression", file="SchedulePoller.cs"];
m2_406 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="584-585", cluster="lambda expression", file="SchedulePoller.cs"];
m2_410 [label="connection.AnnounceServer(''server'', null)", span="585-585", cluster="lambda expression", file="SchedulePoller.cs"];
m2_407 [label="Assert.Equal(''context'', exception.ParamName)", span="587-587", cluster="lambda expression", file="SchedulePoller.cs"];
m2_409 [label="Entry lambda expression", span="585-585", cluster="lambda expression", file="SchedulePoller.cs"];
m2_408 [label="Exit lambda expression", span="582-588", cluster="lambda expression", file="SchedulePoller.cs"];
m2_411 [label="Exit lambda expression", span="585-585", cluster="lambda expression", file="SchedulePoller.cs"];
m2_415 [label="Entry lambda expression", span="594-619", cluster="lambda expression", file="SchedulePoller.cs"];
m2_416 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="596-600", cluster="lambda expression", file="SchedulePoller.cs"];
m2_417 [label="connection.AnnounceServer(''server'', context1)", span="601-601", cluster="lambda expression", file="SchedulePoller.cs"];
m2_418 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="603-603", cluster="lambda expression", file="SchedulePoller.cs"];
m2_423 [label="connection.AnnounceServer(''server'', context2)", span="615-615", cluster="lambda expression", file="SchedulePoller.cs"];
m2_424 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="616-616", cluster="lambda expression", file="SchedulePoller.cs"];
m2_419 [label="Assert.Equal(''server'', server.Id)", span="604-604", cluster="lambda expression", file="SchedulePoller.cs"];
m2_420 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="605-607", cluster="lambda expression", file="SchedulePoller.cs"];
m2_421 [label="Assert.NotNull(server.LastHeartbeat)", span="608-608", cluster="lambda expression", file="SchedulePoller.cs"];
m2_422 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="610-614", cluster="lambda expression", file="SchedulePoller.cs"];
m2_425 [label="Assert.Equal(''server'', sameServer.Id)", span="617-617", cluster="lambda expression", file="SchedulePoller.cs"];
m2_426 [label="Assert.Contains(''1000'', sameServer.Data)", span="618-618", cluster="lambda expression", file="SchedulePoller.cs"];
m2_427 [label="Exit lambda expression", span="594-619", cluster="lambda expression", file="SchedulePoller.cs"];
m2_433 [label="Entry lambda expression", span="625-626", cluster="lambda expression", file="SchedulePoller.cs"];
m2_434 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="625-626", cluster="lambda expression", file="SchedulePoller.cs"];
m2_437 [label="connection.RemoveServer(null)", span="626-626", cluster="lambda expression", file="SchedulePoller.cs"];
m2_435 [label="Exit lambda expression", span="625-626", cluster="lambda expression", file="SchedulePoller.cs"];
m2_436 [label="Entry lambda expression", span="626-626", cluster="lambda expression", file="SchedulePoller.cs"];
m2_438 [label="Exit lambda expression", span="626-626", cluster="lambda expression", file="SchedulePoller.cs"];
m2_445 [label="sql.Execute(arrangeSql)", span="640-640", cluster="lambda expression", file="SchedulePoller.cs"];
m2_444 [label="Entry lambda expression", span="638-646", cluster="lambda expression", file="SchedulePoller.cs"];
m2_446 [label="connection.RemoveServer(''Server1'')", span="642-642", cluster="lambda expression", file="SchedulePoller.cs"];
m2_447 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="644-644", cluster="lambda expression", file="SchedulePoller.cs"];
m2_448 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="645-645", cluster="lambda expression", file="SchedulePoller.cs"];
m2_449 [label="Exit lambda expression", span="638-646", cluster="lambda expression", file="SchedulePoller.cs"];
m2_454 [label="Entry lambda expression", span="652-653", cluster="lambda expression", file="SchedulePoller.cs"];
m2_455 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="652-653", cluster="lambda expression", file="SchedulePoller.cs"];
m2_458 [label="connection.Heartbeat(null)", span="653-653", cluster="lambda expression", file="SchedulePoller.cs"];
m2_456 [label="Exit lambda expression", span="652-653", cluster="lambda expression", file="SchedulePoller.cs"];
m2_457 [label="Entry lambda expression", span="653-653", cluster="lambda expression", file="SchedulePoller.cs"];
m2_459 [label="Exit lambda expression", span="653-653", cluster="lambda expression", file="SchedulePoller.cs"];
m2_466 [label="sql.Execute(arrangeSql)", span="667-667", cluster="lambda expression", file="SchedulePoller.cs"];
m2_465 [label="Entry lambda expression", span="665-676", cluster="lambda expression", file="SchedulePoller.cs"];
m2_467 [label="connection.Heartbeat(''server1'')", span="669-669", cluster="lambda expression", file="SchedulePoller.cs"];
m2_468 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="671-672", cluster="lambda expression", file="SchedulePoller.cs"];
m2_469 [label="Assert.NotEqual(2012, servers[''server1''].Year)", span="674-674", cluster="lambda expression", file="SchedulePoller.cs"];
m2_472 [label="Entry lambda expression", span="672-672", cluster="lambda expression", file="SchedulePoller.cs"];
m2_475 [label="Entry lambda expression", span="672-672", cluster="lambda expression", file="SchedulePoller.cs"];
m2_470 [label="Assert.Equal(2012, servers[''server2''].Year)", span="675-675", cluster="lambda expression", file="SchedulePoller.cs"];
m2_471 [label="Exit lambda expression", span="665-676", cluster="lambda expression", file="SchedulePoller.cs"];
m2_473 [label="(string)x.Id", span="672-672", cluster="lambda expression", file="SchedulePoller.cs"];
m2_474 [label="Exit lambda expression", span="672-672", cluster="lambda expression", file="SchedulePoller.cs"];
m2_476 [label="(DateTime)x.LastHeartbeat", span="672-672", cluster="lambda expression", file="SchedulePoller.cs"];
m2_477 [label="Exit lambda expression", span="672-672", cluster="lambda expression", file="SchedulePoller.cs"];
m2_481 [label="Entry lambda expression", span="682-683", cluster="lambda expression", file="SchedulePoller.cs"];
m2_482 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="682-683", cluster="lambda expression", file="SchedulePoller.cs"];
m2_485 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="683-683", cluster="lambda expression", file="SchedulePoller.cs"];
m2_483 [label="Exit lambda expression", span="682-683", cluster="lambda expression", file="SchedulePoller.cs"];
m2_484 [label="Entry lambda expression", span="683-683", cluster="lambda expression", file="SchedulePoller.cs"];
m2_486 [label="Exit lambda expression", span="683-683", cluster="lambda expression", file="SchedulePoller.cs"];
m2_494 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="695-701", cluster="lambda expression", file="SchedulePoller.cs"];
m2_493 [label="Entry lambda expression", span="693-707", cluster="lambda expression", file="SchedulePoller.cs"];
m2_495 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="703-703", cluster="lambda expression", file="SchedulePoller.cs"];
m2_496 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="705-705", cluster="lambda expression", file="SchedulePoller.cs"];
m2_497 [label="Assert.Equal(''server2'', liveServer.Id)", span="706-706", cluster="lambda expression", file="SchedulePoller.cs"];
m2_498 [label="Exit lambda expression", span="693-707", cluster="lambda expression", file="SchedulePoller.cs"];
m2_504 [label="Entry lambda expression", span="713-714", cluster="lambda expression", file="SchedulePoller.cs"];
m2_505 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="714-714", cluster="lambda expression", file="SchedulePoller.cs"];
m2_508 [label="connection.GetAllItemsFromSet(null)", span="714-714", cluster="lambda expression", file="SchedulePoller.cs"];
m2_506 [label="Exit lambda expression", span="713-714", cluster="lambda expression", file="SchedulePoller.cs"];
m2_507 [label="Entry lambda expression", span="714-714", cluster="lambda expression", file="SchedulePoller.cs"];
m2_509 [label="Exit lambda expression", span="714-714", cluster="lambda expression", file="SchedulePoller.cs"];
m2_514 [label="Entry lambda expression", span="720-726", cluster="lambda expression", file="SchedulePoller.cs"];
m2_515 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="722-722", cluster="lambda expression", file="SchedulePoller.cs"];
m2_516 [label="Assert.NotNull(result)", span="724-724", cluster="lambda expression", file="SchedulePoller.cs"];
m2_517 [label="Assert.Equal(0, result.Count)", span="725-725", cluster="lambda expression", file="SchedulePoller.cs"];
m2_518 [label="Exit lambda expression", span="720-726", cluster="lambda expression", file="SchedulePoller.cs"];
m2_524 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="739-744", cluster="lambda expression", file="SchedulePoller.cs"];
m2_523 [label="Entry lambda expression", span="736-753", cluster="lambda expression", file="SchedulePoller.cs"];
m2_525 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="747-747", cluster="lambda expression", file="SchedulePoller.cs"];
m2_526 [label="Assert.Equal(2, result.Count)", span="750-750", cluster="lambda expression", file="SchedulePoller.cs"];
m2_527 [label="Assert.Contains(''1'', result)", span="751-751", cluster="lambda expression", file="SchedulePoller.cs"];
m2_528 [label="Assert.Contains(''2'', result)", span="752-752", cluster="lambda expression", file="SchedulePoller.cs"];
m2_529 [label="Exit lambda expression", span="736-753", cluster="lambda expression", file="SchedulePoller.cs"];
m2_533 [label="Entry lambda expression", span="759-765", cluster="lambda expression", file="SchedulePoller.cs"];
m2_534 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="761-762", cluster="lambda expression", file="SchedulePoller.cs"];
m2_538 [label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="762-762", cluster="lambda expression", file="SchedulePoller.cs"];
m2_535 [label="Assert.Equal(''key'', exception.ParamName)", span="764-764", cluster="lambda expression", file="SchedulePoller.cs"];
m2_537 [label="Entry lambda expression", span="762-762", cluster="lambda expression", file="SchedulePoller.cs"];
m2_536 [label="Exit lambda expression", span="759-765", cluster="lambda expression", file="SchedulePoller.cs"];
m2_539 [label="Exit lambda expression", span="762-762", cluster="lambda expression", file="SchedulePoller.cs"];
m2_544 [label="Entry lambda expression", span="771-777", cluster="lambda expression", file="SchedulePoller.cs"];
m2_545 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="773-774", cluster="lambda expression", file="SchedulePoller.cs"];
m2_549 [label="connection.SetRangeInHash(''some-hash'', null)", span="774-774", cluster="lambda expression", file="SchedulePoller.cs"];
m2_546 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="776-776", cluster="lambda expression", file="SchedulePoller.cs"];
m2_548 [label="Entry lambda expression", span="774-774", cluster="lambda expression", file="SchedulePoller.cs"];
m2_547 [label="Exit lambda expression", span="771-777", cluster="lambda expression", file="SchedulePoller.cs"];
m2_550 [label="Exit lambda expression", span="774-774", cluster="lambda expression", file="SchedulePoller.cs"];
m2_554 [label="Entry lambda expression", span="783-798", cluster="lambda expression", file="SchedulePoller.cs"];
m2_555 [label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="785-789", cluster="lambda expression", file="SchedulePoller.cs"];
m2_556 [label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="791-794", cluster="lambda expression", file="SchedulePoller.cs"];
m2_557 [label="Assert.Equal(''Value1'', result[''Key1''])", span="796-796", cluster="lambda expression", file="SchedulePoller.cs"];
m2_560 [label="Entry lambda expression", span="794-794", cluster="lambda expression", file="SchedulePoller.cs"];
m2_563 [label="Entry lambda expression", span="794-794", cluster="lambda expression", file="SchedulePoller.cs"];
m2_558 [label="Assert.Equal(''Value2'', result[''Key2''])", span="797-797", cluster="lambda expression", file="SchedulePoller.cs"];
m2_559 [label="Exit lambda expression", span="783-798", cluster="lambda expression", file="SchedulePoller.cs"];
m2_561 [label="(string)x.Field", span="794-794", cluster="lambda expression", file="SchedulePoller.cs"];
m2_562 [label="Exit lambda expression", span="794-794", cluster="lambda expression", file="SchedulePoller.cs"];
m2_564 [label="(string)x.Value", span="794-794", cluster="lambda expression", file="SchedulePoller.cs"];
m2_565 [label="Exit lambda expression", span="794-794", cluster="lambda expression", file="SchedulePoller.cs"];
m2_569 [label="Entry lambda expression", span="804-805", cluster="lambda expression", file="SchedulePoller.cs"];
m2_570 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="805-805", cluster="lambda expression", file="SchedulePoller.cs"];
m2_573 [label="connection.GetAllEntriesFromHash(null)", span="805-805", cluster="lambda expression", file="SchedulePoller.cs"];
m2_571 [label="Exit lambda expression", span="804-805", cluster="lambda expression", file="SchedulePoller.cs"];
m2_572 [label="Entry lambda expression", span="805-805", cluster="lambda expression", file="SchedulePoller.cs"];
m2_574 [label="Exit lambda expression", span="805-805", cluster="lambda expression", file="SchedulePoller.cs"];
m2_579 [label="Entry lambda expression", span="811-815", cluster="lambda expression", file="SchedulePoller.cs"];
m2_580 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="813-813", cluster="lambda expression", file="SchedulePoller.cs"];
m2_581 [label="Assert.Null(result)", span="814-814", cluster="lambda expression", file="SchedulePoller.cs"];
m2_582 [label="Exit lambda expression", span="811-815", cluster="lambda expression", file="SchedulePoller.cs"];
m2_588 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="828-833", cluster="lambda expression", file="SchedulePoller.cs"];
m2_587 [label="Entry lambda expression", span="825-843", cluster="lambda expression", file="SchedulePoller.cs"];
m2_589 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="836-836", cluster="lambda expression", file="SchedulePoller.cs"];
m2_590 [label="Assert.NotNull(result)", span="839-839", cluster="lambda expression", file="SchedulePoller.cs"];
m2_591 [label="Assert.Equal(2, result.Count)", span="840-840", cluster="lambda expression", file="SchedulePoller.cs"];
m2_592 [label="Assert.Equal(''Value1'', result[''Key1''])", span="841-841", cluster="lambda expression", file="SchedulePoller.cs"];
m2_593 [label="Assert.Equal(''Value2'', result[''Key2''])", span="842-842", cluster="lambda expression", file="SchedulePoller.cs"];
m2_594 [label="Exit lambda expression", span="825-843", cluster="lambda expression", file="SchedulePoller.cs"];
m2_598 [label="Entry lambda expression", span="849-853", cluster="lambda expression", file="SchedulePoller.cs"];
m2_599 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="851-852", cluster="lambda expression", file="SchedulePoller.cs"];
m2_602 [label="connection.GetSetCount(null)", span="852-852", cluster="lambda expression", file="SchedulePoller.cs"];
m2_600 [label="Exit lambda expression", span="849-853", cluster="lambda expression", file="SchedulePoller.cs"];
m2_601 [label="Entry lambda expression", span="852-852", cluster="lambda expression", file="SchedulePoller.cs"];
m2_603 [label="Exit lambda expression", span="852-852", cluster="lambda expression", file="SchedulePoller.cs"];
m2_608 [label="Entry lambda expression", span="859-863", cluster="lambda expression", file="SchedulePoller.cs"];
m2_609 [label="var result = connection.GetSetCount(''my-set'')", span="861-861", cluster="lambda expression", file="SchedulePoller.cs"];
m2_610 [label="Assert.Equal(0, result)", span="862-862", cluster="lambda expression", file="SchedulePoller.cs"];
m2_611 [label="Exit lambda expression", span="859-863", cluster="lambda expression", file="SchedulePoller.cs"];
m2_617 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                })", span="875-880", cluster="lambda expression", file="SchedulePoller.cs"];
m2_616 [label="Entry lambda expression", span="873-885", cluster="lambda expression", file="SchedulePoller.cs"];
m2_618 [label="var result = connection.GetSetCount(''set-1'')", span="882-882", cluster="lambda expression", file="SchedulePoller.cs"];
m2_619 [label="Assert.Equal(2, result)", span="884-884", cluster="lambda expression", file="SchedulePoller.cs"];
m2_620 [label="Exit lambda expression", span="873-885", cluster="lambda expression", file="SchedulePoller.cs"];
m2_625 [label="Entry lambda expression", span="891-894", cluster="lambda expression", file="SchedulePoller.cs"];
m2_626 [label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="893-893", cluster="lambda expression", file="SchedulePoller.cs"];
m2_629 [label="connection.GetRangeFromSet(null, 0, 1)", span="893-893", cluster="lambda expression", file="SchedulePoller.cs"];
m2_627 [label="Exit lambda expression", span="891-894", cluster="lambda expression", file="SchedulePoller.cs"];
m2_628 [label="Entry lambda expression", span="893-893", cluster="lambda expression", file="SchedulePoller.cs"];
m2_630 [label="Exit lambda expression", span="893-893", cluster="lambda expression", file="SchedulePoller.cs"];
m2_637 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="906-914", cluster="lambda expression", file="SchedulePoller.cs"];
m2_636 [label="Entry lambda expression", span="904-919", cluster="lambda expression", file="SchedulePoller.cs"];
m2_638 [label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="916-916", cluster="lambda expression", file="SchedulePoller.cs"];
m2_639 [label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="918-918", cluster="lambda expression", file="SchedulePoller.cs"];
m2_640 [label="Exit lambda expression", span="904-919", cluster="lambda expression", file="SchedulePoller.cs"];
m2_644 [label="Entry lambda expression", span="925-929", cluster="lambda expression", file="SchedulePoller.cs"];
m2_645 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="927-928", cluster="lambda expression", file="SchedulePoller.cs"];
m2_648 [label="connection.GetCounter(null)", span="928-928", cluster="lambda expression", file="SchedulePoller.cs"];
m2_646 [label="Exit lambda expression", span="925-929", cluster="lambda expression", file="SchedulePoller.cs"];
m2_647 [label="Entry lambda expression", span="928-928", cluster="lambda expression", file="SchedulePoller.cs"];
m2_649 [label="Exit lambda expression", span="928-928", cluster="lambda expression", file="SchedulePoller.cs"];
m2_654 [label="Entry lambda expression", span="935-939", cluster="lambda expression", file="SchedulePoller.cs"];
m2_655 [label="var result = connection.GetCounter(''my-counter'')", span="937-937", cluster="lambda expression", file="SchedulePoller.cs"];
m2_656 [label="Assert.Equal(0, result)", span="938-938", cluster="lambda expression", file="SchedulePoller.cs"];
m2_657 [label="Exit lambda expression", span="935-939", cluster="lambda expression", file="SchedulePoller.cs"];
m2_663 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="952-957", cluster="lambda expression", file="SchedulePoller.cs"];
m2_662 [label="Entry lambda expression", span="949-964", cluster="lambda expression", file="SchedulePoller.cs"];
m2_664 [label="var result = connection.GetCounter(''counter-1'')", span="960-960", cluster="lambda expression", file="SchedulePoller.cs"];
m2_665 [label="Assert.Equal(2, result)", span="963-963", cluster="lambda expression", file="SchedulePoller.cs"];
m2_666 [label="Exit lambda expression", span="949-964", cluster="lambda expression", file="SchedulePoller.cs"];
m2_672 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="977-981", cluster="lambda expression", file="SchedulePoller.cs"];
m2_671 [label="Entry lambda expression", span="974-987", cluster="lambda expression", file="SchedulePoller.cs"];
m2_673 [label="var result = connection.GetCounter(''counter-1'')", span="984-984", cluster="lambda expression", file="SchedulePoller.cs"];
m2_674 [label="Assert.Equal(12, result)", span="986-986", cluster="lambda expression", file="SchedulePoller.cs"];
m2_675 [label="Exit lambda expression", span="974-987", cluster="lambda expression", file="SchedulePoller.cs"];
m2_679 [label="Entry lambda expression", span="993-996", cluster="lambda expression", file="SchedulePoller.cs"];
m2_680 [label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="995-995", cluster="lambda expression", file="SchedulePoller.cs"];
m2_683 [label="connection.GetHashCount(null)", span="995-995", cluster="lambda expression", file="SchedulePoller.cs"];
m2_681 [label="Exit lambda expression", span="993-996", cluster="lambda expression", file="SchedulePoller.cs"];
m2_682 [label="Entry lambda expression", span="995-995", cluster="lambda expression", file="SchedulePoller.cs"];
m2_684 [label="Exit lambda expression", span="995-995", cluster="lambda expression", file="SchedulePoller.cs"];
m2_689 [label="Entry lambda expression", span="1002-1006", cluster="lambda expression", file="SchedulePoller.cs"];
m2_690 [label="var result = connection.GetHashCount(''my-hash'')", span="1004-1004", cluster="lambda expression", file="SchedulePoller.cs"];
m2_691 [label="Assert.Equal(0, result)", span="1005-1005", cluster="lambda expression", file="SchedulePoller.cs"];
m2_692 [label="Exit lambda expression", span="1002-1006", cluster="lambda expression", file="SchedulePoller.cs"];
m2_698 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1019-1024", cluster="lambda expression", file="SchedulePoller.cs"];
m2_697 [label="Entry lambda expression", span="1016-1031", cluster="lambda expression", file="SchedulePoller.cs"];
m2_699 [label="var result = connection.GetHashCount(''hash-1'')", span="1027-1027", cluster="lambda expression", file="SchedulePoller.cs"];
m2_700 [label="Assert.Equal(2, result)", span="1030-1030", cluster="lambda expression", file="SchedulePoller.cs"];
m2_701 [label="Exit lambda expression", span="1016-1031", cluster="lambda expression", file="SchedulePoller.cs"];
m2_705 [label="Entry lambda expression", span="1037-1041", cluster="lambda expression", file="SchedulePoller.cs"];
m2_706 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1039-1040", cluster="lambda expression", file="SchedulePoller.cs"];
m2_709 [label="connection.GetHashTtl(null)", span="1040-1040", cluster="lambda expression", file="SchedulePoller.cs"];
m2_707 [label="Exit lambda expression", span="1037-1041", cluster="lambda expression", file="SchedulePoller.cs"];
m2_708 [label="Entry lambda expression", span="1040-1040", cluster="lambda expression", file="SchedulePoller.cs"];
m2_710 [label="Exit lambda expression", span="1040-1040", cluster="lambda expression", file="SchedulePoller.cs"];
m2_715 [label="Entry lambda expression", span="1047-1051", cluster="lambda expression", file="SchedulePoller.cs"];
m2_716 [label="var result = connection.GetHashTtl(''my-hash'')", span="1049-1049", cluster="lambda expression", file="SchedulePoller.cs"];
m2_717 [label="Assert.True(result < TimeSpan.Zero)", span="1050-1050", cluster="lambda expression", file="SchedulePoller.cs"];
m2_718 [label="Exit lambda expression", span="1047-1051", cluster="lambda expression", file="SchedulePoller.cs"];
m2_724 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1064-1068", cluster="lambda expression", file="SchedulePoller.cs"];
m2_723 [label="Entry lambda expression", span="1061-1076", cluster="lambda expression", file="SchedulePoller.cs"];
m2_725 [label="var result = connection.GetHashTtl(''hash-1'')", span="1071-1071", cluster="lambda expression", file="SchedulePoller.cs"];
m2_726 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1074-1074", cluster="lambda expression", file="SchedulePoller.cs"];
m2_727 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1075-1075", cluster="lambda expression", file="SchedulePoller.cs"];
m2_728 [label="Exit lambda expression", span="1061-1076", cluster="lambda expression", file="SchedulePoller.cs"];
m2_732 [label="Entry lambda expression", span="1082-1086", cluster="lambda expression", file="SchedulePoller.cs"];
m2_733 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1084-1085", cluster="lambda expression", file="SchedulePoller.cs"];
m2_736 [label="connection.GetListCount(null)", span="1085-1085", cluster="lambda expression", file="SchedulePoller.cs"];
m2_734 [label="Exit lambda expression", span="1082-1086", cluster="lambda expression", file="SchedulePoller.cs"];
m2_735 [label="Entry lambda expression", span="1085-1085", cluster="lambda expression", file="SchedulePoller.cs"];
m2_737 [label="Exit lambda expression", span="1085-1085", cluster="lambda expression", file="SchedulePoller.cs"];
m2_742 [label="Entry lambda expression", span="1092-1096", cluster="lambda expression", file="SchedulePoller.cs"];
m2_743 [label="var result = connection.GetListCount(''my-list'')", span="1094-1094", cluster="lambda expression", file="SchedulePoller.cs"];
m2_744 [label="Assert.Equal(0, result)", span="1095-1095", cluster="lambda expression", file="SchedulePoller.cs"];
m2_745 [label="Exit lambda expression", span="1092-1096", cluster="lambda expression", file="SchedulePoller.cs"];
m2_751 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1109-1114", cluster="lambda expression", file="SchedulePoller.cs"];
m2_750 [label="Entry lambda expression", span="1106-1121", cluster="lambda expression", file="SchedulePoller.cs"];
m2_752 [label="var result = connection.GetListCount(''list-1'')", span="1117-1117", cluster="lambda expression", file="SchedulePoller.cs"];
m2_753 [label="Assert.Equal(2, result)", span="1120-1120", cluster="lambda expression", file="SchedulePoller.cs"];
m2_754 [label="Exit lambda expression", span="1106-1121", cluster="lambda expression", file="SchedulePoller.cs"];
m2_758 [label="Entry lambda expression", span="1127-1131", cluster="lambda expression", file="SchedulePoller.cs"];
m2_759 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1129-1130", cluster="lambda expression", file="SchedulePoller.cs"];
m2_762 [label="connection.GetListTtl(null)", span="1130-1130", cluster="lambda expression", file="SchedulePoller.cs"];
m2_760 [label="Exit lambda expression", span="1127-1131", cluster="lambda expression", file="SchedulePoller.cs"];
m2_761 [label="Entry lambda expression", span="1130-1130", cluster="lambda expression", file="SchedulePoller.cs"];
m2_763 [label="Exit lambda expression", span="1130-1130", cluster="lambda expression", file="SchedulePoller.cs"];
m2_768 [label="Entry lambda expression", span="1137-1141", cluster="lambda expression", file="SchedulePoller.cs"];
m2_769 [label="var result = connection.GetListTtl(''my-list'')", span="1139-1139", cluster="lambda expression", file="SchedulePoller.cs"];
m2_770 [label="Assert.True(result < TimeSpan.Zero)", span="1140-1140", cluster="lambda expression", file="SchedulePoller.cs"];
m2_771 [label="Exit lambda expression", span="1137-1141", cluster="lambda expression", file="SchedulePoller.cs"];
m2_777 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1154-1158", cluster="lambda expression", file="SchedulePoller.cs"];
m2_776 [label="Entry lambda expression", span="1151-1166", cluster="lambda expression", file="SchedulePoller.cs"];
m2_778 [label="var result = connection.GetListTtl(''list-1'')", span="1161-1161", cluster="lambda expression", file="SchedulePoller.cs"];
m2_779 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1164-1164", cluster="lambda expression", file="SchedulePoller.cs"];
m2_780 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1165-1165", cluster="lambda expression", file="SchedulePoller.cs"];
m2_781 [label="Exit lambda expression", span="1151-1166", cluster="lambda expression", file="SchedulePoller.cs"];
m2_785 [label="Entry lambda expression", span="1172-1178", cluster="lambda expression", file="SchedulePoller.cs"];
m2_786 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1174-1175", cluster="lambda expression", file="SchedulePoller.cs"];
m2_790 [label="connection.GetValueFromHash(null, ''name'')", span="1175-1175", cluster="lambda expression", file="SchedulePoller.cs"];
m2_787 [label="Assert.Equal(''key'', exception.ParamName)", span="1177-1177", cluster="lambda expression", file="SchedulePoller.cs"];
m2_789 [label="Entry lambda expression", span="1175-1175", cluster="lambda expression", file="SchedulePoller.cs"];
m2_788 [label="Exit lambda expression", span="1172-1178", cluster="lambda expression", file="SchedulePoller.cs"];
m2_791 [label="Exit lambda expression", span="1175-1175", cluster="lambda expression", file="SchedulePoller.cs"];
m2_796 [label="Entry lambda expression", span="1184-1190", cluster="lambda expression", file="SchedulePoller.cs"];
m2_797 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1186-1187", cluster="lambda expression", file="SchedulePoller.cs"];
m2_801 [label="connection.GetValueFromHash(''key'', null)", span="1187-1187", cluster="lambda expression", file="SchedulePoller.cs"];
m2_798 [label="Assert.Equal(''name'', exception.ParamName)", span="1189-1189", cluster="lambda expression", file="SchedulePoller.cs"];
m2_800 [label="Entry lambda expression", span="1187-1187", cluster="lambda expression", file="SchedulePoller.cs"];
m2_799 [label="Exit lambda expression", span="1184-1190", cluster="lambda expression", file="SchedulePoller.cs"];
m2_802 [label="Exit lambda expression", span="1187-1187", cluster="lambda expression", file="SchedulePoller.cs"];
m2_806 [label="Entry lambda expression", span="1196-1200", cluster="lambda expression", file="SchedulePoller.cs"];
m2_807 [label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1198-1198", cluster="lambda expression", file="SchedulePoller.cs"];
m2_808 [label="Assert.Null(result)", span="1199-1199", cluster="lambda expression", file="SchedulePoller.cs"];
m2_809 [label="Exit lambda expression", span="1196-1200", cluster="lambda expression", file="SchedulePoller.cs"];
m2_815 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1213-1218", cluster="lambda expression", file="SchedulePoller.cs"];
m2_814 [label="Entry lambda expression", span="1210-1225", cluster="lambda expression", file="SchedulePoller.cs"];
m2_816 [label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1221-1221", cluster="lambda expression", file="SchedulePoller.cs"];
m2_817 [label="Assert.Equal(''1'', result)", span="1224-1224", cluster="lambda expression", file="SchedulePoller.cs"];
m2_818 [label="Exit lambda expression", span="1210-1225", cluster="lambda expression", file="SchedulePoller.cs"];
m2_822 [label="Entry lambda expression", span="1231-1237", cluster="lambda expression", file="SchedulePoller.cs"];
m2_823 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1233-1234", cluster="lambda expression", file="SchedulePoller.cs"];
m2_827 [label="connection.GetRangeFromList(null, 0, 1)", span="1234-1234", cluster="lambda expression", file="SchedulePoller.cs"];
m2_824 [label="Assert.Equal(''key'', exception.ParamName)", span="1236-1236", cluster="lambda expression", file="SchedulePoller.cs"];
m2_826 [label="Entry lambda expression", span="1234-1234", cluster="lambda expression", file="SchedulePoller.cs"];
m2_825 [label="Exit lambda expression", span="1231-1237", cluster="lambda expression", file="SchedulePoller.cs"];
m2_828 [label="Exit lambda expression", span="1234-1234", cluster="lambda expression", file="SchedulePoller.cs"];
m2_833 [label="Entry lambda expression", span="1243-1247", cluster="lambda expression", file="SchedulePoller.cs"];
m2_834 [label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1245-1245", cluster="lambda expression", file="SchedulePoller.cs"];
m2_835 [label="Assert.Empty(result)", span="1246-1246", cluster="lambda expression", file="SchedulePoller.cs"];
m2_836 [label="Exit lambda expression", span="1243-1247", cluster="lambda expression", file="SchedulePoller.cs"];
m2_843 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1260-1267", cluster="lambda expression", file="SchedulePoller.cs"];
m2_842 [label="Entry lambda expression", span="1257-1274", cluster="lambda expression", file="SchedulePoller.cs"];
m2_844 [label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1270-1270", cluster="lambda expression", file="SchedulePoller.cs"];
m2_845 [label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1273-1273", cluster="lambda expression", file="SchedulePoller.cs"];
m2_846 [label="Exit lambda expression", span="1257-1274", cluster="lambda expression", file="SchedulePoller.cs"];
m2_850 [label="Entry lambda expression", span="1280-1284", cluster="lambda expression", file="SchedulePoller.cs"];
m2_851 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1282-1283", cluster="lambda expression", file="SchedulePoller.cs"];
m2_854 [label="connection.GetAllItemsFromList(null)", span="1283-1283", cluster="lambda expression", file="SchedulePoller.cs"];
m2_852 [label="Exit lambda expression", span="1280-1284", cluster="lambda expression", file="SchedulePoller.cs"];
m2_853 [label="Entry lambda expression", span="1283-1283", cluster="lambda expression", file="SchedulePoller.cs"];
m2_855 [label="Exit lambda expression", span="1283-1283", cluster="lambda expression", file="SchedulePoller.cs"];
m2_860 [label="Entry lambda expression", span="1290-1294", cluster="lambda expression", file="SchedulePoller.cs"];
m2_861 [label="var result = connection.GetAllItemsFromList(''my-list'')", span="1292-1292", cluster="lambda expression", file="SchedulePoller.cs"];
m2_862 [label="Assert.Empty(result)", span="1293-1293", cluster="lambda expression", file="SchedulePoller.cs"];
m2_863 [label="Exit lambda expression", span="1290-1294", cluster="lambda expression", file="SchedulePoller.cs"];
m2_869 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1307-1312", cluster="lambda expression", file="SchedulePoller.cs"];
m2_868 [label="Entry lambda expression", span="1304-1319", cluster="lambda expression", file="SchedulePoller.cs"];
m2_870 [label="var result = connection.GetAllItemsFromList(''list-1'')", span="1315-1315", cluster="lambda expression", file="SchedulePoller.cs"];
m2_871 [label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1318-1318", cluster="lambda expression", file="SchedulePoller.cs"];
m2_872 [label="Exit lambda expression", span="1304-1319", cluster="lambda expression", file="SchedulePoller.cs"];
m2_876 [label="Entry lambda expression", span="1325-1328", cluster="lambda expression", file="SchedulePoller.cs"];
m2_877 [label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1327-1327", cluster="lambda expression", file="SchedulePoller.cs"];
m2_880 [label="connection.GetSetTtl(null)", span="1327-1327", cluster="lambda expression", file="SchedulePoller.cs"];
m2_878 [label="Exit lambda expression", span="1325-1328", cluster="lambda expression", file="SchedulePoller.cs"];
m2_879 [label="Entry lambda expression", span="1327-1327", cluster="lambda expression", file="SchedulePoller.cs"];
m2_881 [label="Exit lambda expression", span="1327-1327", cluster="lambda expression", file="SchedulePoller.cs"];
m2_886 [label="Entry lambda expression", span="1334-1338", cluster="lambda expression", file="SchedulePoller.cs"];
m2_887 [label="var result = connection.GetSetTtl(''my-set'')", span="1336-1336", cluster="lambda expression", file="SchedulePoller.cs"];
m2_888 [label="Assert.True(result < TimeSpan.Zero)", span="1337-1337", cluster="lambda expression", file="SchedulePoller.cs"];
m2_889 [label="Exit lambda expression", span="1334-1338", cluster="lambda expression", file="SchedulePoller.cs"];
m2_895 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1351-1355", cluster="lambda expression", file="SchedulePoller.cs"];
m2_894 [label="Entry lambda expression", span="1348-1363", cluster="lambda expression", file="SchedulePoller.cs"];
m2_896 [label="var result = connection.GetSetTtl(''set-1'')", span="1358-1358", cluster="lambda expression", file="SchedulePoller.cs"];
m2_897 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1361-1361", cluster="lambda expression", file="SchedulePoller.cs"];
m2_898 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1362-1362", cluster="lambda expression", file="SchedulePoller.cs"];
m2_899 [label="Exit lambda expression", span="1348-1363", cluster="lambda expression", file="SchedulePoller.cs"];
m2_15 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="SchedulePoller.cs"];
m2_16 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SchedulePoller.cs"];
m2_32 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SchedulePoller.cs"];
m2_125 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="SchedulePoller.cs"];
m2_412 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SchedulePoller.cs"];
m2_413 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="594-619", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SchedulePoller.cs"];
m2_414 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SchedulePoller.cs"];
m2_540 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SchedulePoller.cs"];
m2_84 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SchedulePoller.cs"];
m2_693 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SchedulePoller.cs"];
m2_694 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1012-1014", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SchedulePoller.cs"];
m2_695 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1016-1031", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SchedulePoller.cs"];
m2_696 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SchedulePoller.cs"];
m2_9 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(null, _storage.Object, _properties, _cts.Token))", span="27-28", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_390 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_391 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="570-576", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_392 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_117 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SchedulePoller.cs"];
m2_501 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_502 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="713-714", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_503 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_711 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SchedulePoller.cs"];
m2_900 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_901 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1368-1368", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_903 [label="action(sqlConnection, connection)", span="1371-1371", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_902 [label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="1369-1369", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_904 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_260 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_261 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="366-372", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_262 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_179 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SchedulePoller.cs"];
m2_180 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="208-212", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SchedulePoller.cs"];
m2_181 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SchedulePoller.cs"];
m2_77 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SchedulePoller.cs"];
m2_78 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="107-111", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SchedulePoller.cs"];
m2_79 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SchedulePoller.cs"];
m2_157 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="SchedulePoller.cs"];
m2_336 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SchedulePoller.cs"];
m2_337 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="484-488", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SchedulePoller.cs"];
m2_338 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SchedulePoller.cs"];
m2_66 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="SchedulePoller.cs"];
m2_20 [label="Assert.Equal(''storage'', exception.ParamName)", span="39-39", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePoller.cs"];
m2_121 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SchedulePoller.cs"];
m2_910 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SchedulePoller.cs"];
m2_631 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SchedulePoller.cs"];
m2_729 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_730 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1082-1086", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_731 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_56 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="SchedulePoller.cs"];
m2_530 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_531 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="759-765", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_532 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_0 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="SchedulePoller.cs"];
m2_1 [label="_storage = new Mock<JobStorage>()", span="19-19", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="SchedulePoller.cs", color=green, community=0];
m2_2 [label="_properties = new Dictionary<string, object> {{''key'', ''value''}}", span="20-20", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="SchedulePoller.cs"];
m2_3 [label="_cts = new CancellationTokenSource()", span="21-21", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="SchedulePoller.cs"];
m2_4 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="SchedulePoller.cs"];
m2_178 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SchedulePoller.cs"];
m2_94 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SchedulePoller.cs"];
m2_18 [label="Assert.Equal(''connection'', exception.ParamName)", span="38-38", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SchedulePoller.cs"];
m2_19 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SchedulePoller.cs"];
m2_107 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SchedulePoller.cs"];
m2_108 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="143-153", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SchedulePoller.cs"];
m2_109 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SchedulePoller.cs"];
m2_612 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SchedulePoller.cs"];
m2_613 [label="string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="869-871", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SchedulePoller.cs"];
m2_614 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="873-885", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SchedulePoller.cs"];
m2_615 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SchedulePoller.cs"];
m2_765 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_766 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1137-1141", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_767 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_17 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, IsolationLevel.Serializable, _providers))", span="35-36", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SchedulePoller.cs"];
m2_151 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SchedulePoller.cs"];
m2_489 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SchedulePoller.cs"];
m2_490 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="689-691", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SchedulePoller.cs"];
m2_491 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="693-707", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SchedulePoller.cs"];
m2_492 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SchedulePoller.cs"];
m2_755 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_756 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1127-1131", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_757 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_909 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SchedulePoller.cs"];
m2_226 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SchedulePoller.cs"];
m2_227 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="269-281", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SchedulePoller.cs"];
m2_228 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="283-300", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SchedulePoller.cs"];
m2_229 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SchedulePoller.cs"];
m2_803 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SchedulePoller.cs"];
m2_804 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1196-1200", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SchedulePoller.cs"];
m2_805 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SchedulePoller.cs"];
m2_73 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SchedulePoller.cs"];
m2_85 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="SchedulePoller.cs"];
m2_63 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SchedulePoller.cs"];
m2_64 [label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="93-101", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", color=red, community=0, file="SchedulePoller.cs"];
m2_65 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SchedulePoller.cs"];
m2_8 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="25-25", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_676 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_677 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="993-996", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_678 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_186 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="SchedulePoller.cs"];
m2_46 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SchedulePoller.cs"];
m2_47 [label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="79-87", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", color=red, community=0, file="SchedulePoller.cs"];
m2_48 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SchedulePoller.cs"];
m2_519 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SchedulePoller.cs"];
m2_520 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="732-734", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SchedulePoller.cs"];
m2_521 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="736-753", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SchedulePoller.cs"];
m2_522 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SchedulePoller.cs"];
m2_10 [label="Assert.Equal(''serverId'', exception.ParamName)", span="30-30", cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_106 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SchedulePoller.cs"];
m2_204 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SchedulePoller.cs"];
m2_499 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SchedulePoller.cs"];
m2_150 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="SchedulePoller.cs"];
m2_837 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="SchedulePoller.cs"];
m2_541 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SchedulePoller.cs"];
m2_542 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="771-777", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SchedulePoller.cs"];
m2_543 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SchedulePoller.cs"];
m2_686 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_687 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1002-1006", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_688 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_702 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_703 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1037-1041", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_704 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_49 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_906 [label="var connection = new SqlServerConnection( \r\n                ConnectionUtils.CreateConnection(),\r\n                IsolationLevel.Serializable,\r\n                _providers)", span="1377-1380", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_907 [label="action(connection)", span="1382-1382", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_908 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SchedulePoller.cs"];
m2_510 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SchedulePoller.cs"];
m2_58 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SchedulePoller.cs"];
m2_641 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_642 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="925-929", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_643 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_819 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_820 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1231-1237", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_821 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_315 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_316 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="460-466", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_317 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_42 [label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers, ownsConnection: false)", span="68-68", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SchedulePoller.cs"];
m2_428 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="SchedulePoller.cs"];
m2_487 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="SchedulePoller.cs"];
m2_838 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SchedulePoller.cs"];
m2_839 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1253-1255", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SchedulePoller.cs"];
m2_840 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1257-1274", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SchedulePoller.cs"];
m2_841 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SchedulePoller.cs"];
m2_159 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SchedulePoller.cs"];
m2_500 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SchedulePoller.cs"];
m2_95 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SchedulePoller.cs"];
m2_96 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="127-137", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SchedulePoller.cs"];
m2_97 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SchedulePoller.cs"];
m2_651 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_652 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="935-939", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_653 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_856 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SchedulePoller.cs"];
m2_873 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_874 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1325-1328", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_875 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_86 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SchedulePoller.cs"];
m2_87 [label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="117-121", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SchedulePoller.cs"];
m2_88 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SchedulePoller.cs"];
m2_148 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="SchedulePoller.cs"];
m2_14 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePoller.cs"];
m2_270 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SchedulePoller.cs"];
m2_595 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_596 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="849-853", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_597 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SchedulePoller.cs"];
m2_93 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SchedulePoller.cs"];
m2_380 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SchedulePoller.cs"];
m2_381 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="549-555", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SchedulePoller.cs"];
m2_382 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="557-564", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SchedulePoller.cs"];
m2_383 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SchedulePoller.cs"];
m2_632 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SchedulePoller.cs"];
m2_633 [label="string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="900-902", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SchedulePoller.cs"];
m2_634 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="904-919", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SchedulePoller.cs"];
m2_635 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SchedulePoller.cs"];
m2_149 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SchedulePoller.cs"];
m2_292 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SchedulePoller.cs"];
m2_293 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="413-416", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SchedulePoller.cs"];
m2_294 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="418-431", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SchedulePoller.cs"];
m2_295 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SchedulePoller.cs"];
m2_882 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SchedulePoller.cs"];
m2_325 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SchedulePoller.cs"];
m2_400 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18", cluster="Hangfire.Server.ServerContext.ServerContext()", file="SchedulePoller.cs"];
m2_40 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SchedulePoller.cs"];
m2_105 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SchedulePoller.cs"];
m2_218 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SchedulePoller.cs"];
m2_352 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="SchedulePoller.cs"];
m2_461 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SchedulePoller.cs"];
m2_462 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="659-663", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SchedulePoller.cs"];
m2_463 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="665-676", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SchedulePoller.cs"];
m2_464 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SchedulePoller.cs"];
m2_830 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_831 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1243-1247", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_832 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SchedulePoller.cs"];
m2_551 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SchedulePoller.cs"];
m2_552 [label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="783-798", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SchedulePoller.cs"];
m2_553 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SchedulePoller.cs"];
m2_187 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SchedulePoller.cs"];
m2_188 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="218-221", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SchedulePoller.cs"];
m2_189 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="223-245", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SchedulePoller.cs"];
m2_190 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SchedulePoller.cs"];
m2_429 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SchedulePoller.cs"];
m2_451 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_452 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="652-653", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_453 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePoller.cs"];
m2_746 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SchedulePoller.cs"];
m2_747 [label="string arrangeSql = @''\r\ninsert into Hangfire.List ([Key])\r\nvalues (@key)''", span="1102-1104", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SchedulePoller.cs"];
m2_748 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1106-1121", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SchedulePoller.cs"];
m2_749 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SchedulePoller.cs"];
m2_604 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SchedulePoller.cs"];
m2_152 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SchedulePoller.cs"];
m2_169 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_170 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="201-202", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_171 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SchedulePoller.cs"];
m2_122 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SchedulePoller.cs"];
m2_123 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="159-195", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SchedulePoller.cs"];
m2_124 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SchedulePoller.cs"];
m2_41 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="66-66", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SchedulePoller.cs"];
m2_158 [label="Entry Unk.True", span="", cluster="Unk.True", file="SchedulePoller.cs"];
m2_373 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_374 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="537-543", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_375 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SchedulePoller.cs"];
m2_44 [label="Assert.Equal(ConnectionState.Open, sqlConnection.State)", span="72-72", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SchedulePoller.cs"];
m2_43 [label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", span="", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SchedulePoller.cs"];
m2_45 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SchedulePoller.cs"];
m2_738 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SchedulePoller.cs"];
m2_605 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SchedulePoller.cs"];
m2_606 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="859-863", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SchedulePoller.cs"];
m2_607 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SchedulePoller.cs"];
m2_911 [label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span="", file="SchedulePoller.cs"];
m2_912 [label=token, span="", file="SchedulePoller.cs"];
m2_913 [label=queues, span="", file="SchedulePoller.cs"];
m2_914 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_915 [label=token, span="", file="SchedulePoller.cs"];
m2_916 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_917 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_918 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_919 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_920 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_921 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_922 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_923 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_924 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_925 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_926 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_927 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_928 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_929 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_930 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_931 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_932 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_933 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_934 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_935 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_936 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_937 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_938 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_939 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_940 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_941 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_942 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_943 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_944 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_945 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_946 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_947 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_948 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_949 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_950 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_951 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_952 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_953 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_954 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_955 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_956 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_957 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_958 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_959 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_960 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_961 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_962 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_963 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_964 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_965 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_966 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_967 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_968 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_969 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_970 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m2_971 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SchedulePoller.cs"];
m2_972 [label=arrangeSql, span="", file="SchedulePoller.cs"];
m4_86 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ServerWatchdog.cs"];
m4_190 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="ServerWatchdog.cs"];
m4_247 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="ServerWatchdog.cs"];
m4_248 [label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="346-365", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="ServerWatchdog.cs"];
m4_249 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="ServerWatchdog.cs"];
m4_311 [label="Entry Dictionary<string, string>.cstr", span="", cluster="Dictionary<string, string>.cstr", file="ServerWatchdog.cs"];
m4_274 [label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_329 [label="var i = 0", span="462-462", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_338 [label="i < dates.Count", span="472-472", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_328 [label="var dates = new List<DateTime>()", span="461-461", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_330 [label="i < 24", span="462-462", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_333 [label="i++", span="462-462", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_337 [label="var i = 0", span="472-472", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_343 [label="i++", span="472-472", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_339 [label="long value", span="474-474", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_344 [label="return result;", span="483-483", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_327 [label="var endDate = DateTime.UtcNow", span="460-460", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_334 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="468-468", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_335 [label="var valuesMap = redis.GetValuesMap(keys)", span="469-469", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_336 [label="var result = new Dictionary<DateTime, long>()", span="471-471", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_331 [label="dates.Add(endDate)", span="464-464", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_342 [label="result.Add(dates[i], value)", span="480-480", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_332 [label="endDate = endDate.AddHours(-1)", span="465-465", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_340 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="475-475", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_341 [label="value = 0", span="477-477", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_345 [label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_122 [label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_367 [label="i < stringDates.Count", span="505-505", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_356 [label="var endDate = DateTime.UtcNow.Date", span="489-489", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_363 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="500-500", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_364 [label="var valuesMap = redis.GetValuesMap(keys)", span="502-502", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_365 [label="var result = new Dictionary<DateTime, long>()", span="504-504", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_362 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="499-499", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_366 [label="var i = 0", span="505-505", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_372 [label="i++", span="505-505", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_368 [label="long value", span="507-507", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_373 [label="return result;", span="515-515", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_358 [label="var dates = new List<DateTime>()", span="491-491", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_357 [label="var startDate = endDate.AddDays(-7)", span="490-490", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_359 [label="startDate <= endDate", span="493-493", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_360 [label="dates.Add(endDate)", span="495-495", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_361 [label="endDate = endDate.AddDays(-1)", span="496-496", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_369 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="508-508", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_371 [label="result.Add(dates[i], value)", span="512-512", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_370 [label="value = 0", span="510-510", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_374 [label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="ServerWatchdog.cs"];
m4_165 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="ServerWatchdog.cs"];
m4_257 [label="Entry HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368", cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="ServerWatchdog.cs"];
m4_258 [label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });\r\n            });", span="371-388", cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="ServerWatchdog.cs"];
m4_259 [label="Exit HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368", cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="ServerWatchdog.cs"];
m4_349 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ServerWatchdog.cs"];
m4_61 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ServerWatchdog.cs"];
m4_56 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ServerWatchdog.cs"];
m4_62 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="ServerWatchdog.cs"];
m4_164 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="ServerWatchdog.cs"];
m4_275 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="ServerWatchdog.cs"];
m4_276 [label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''failed''));", span="398-398", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="ServerWatchdog.cs"];
m4_277 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="ServerWatchdog.cs"];
m4_515 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="ServerWatchdog.cs"];
m4_433 [label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="ServerWatchdog.cs"];
m4_434 [label="return UseConnection(redis =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x);\r\n\r\n                    foreach (var queue in queues)\r\n                    {\r\n                        var queueName = queue;\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x);\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return stats;\r\n            });", span="582-634", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="ServerWatchdog.cs"];
m4_435 [label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="ServerWatchdog.cs"];
m4_22 [label="Entry HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="ServerWatchdog.cs"];
m4_23 [label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)));", span="53-54", cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", color=green, community=0, file="ServerWatchdog.cs"];
m4_24 [label="Exit HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="ServerWatchdog.cs"];
m4_55 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="ServerWatchdog.cs"];
m4_57 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ServerWatchdog.cs"];
m4_421 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="ServerWatchdog.cs"];
m4_91 [label="Entry JobList<ScheduledJobDto>.cstr", span="", cluster="JobList<ScheduledJobDto>.cstr", file="ServerWatchdog.cs"];
m4_88 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="ServerWatchdog.cs"];
m4_522 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="ServerWatchdog.cs"];
m4_516 [label="Entry Unk.action", span="", cluster="Unk.action", file="ServerWatchdog.cs"];
m4_402 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ServerWatchdog.cs"];
m4_281 [label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="ServerWatchdog.cs"];
m4_282 [label="return UseConnection(redis =>\r\n            {\r\n                var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId));\r\n                if (job.Count == 0) return null;\r\n\r\n                var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' };\r\n\r\n                var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId));\r\n\r\n                var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList();\r\n\r\n                var stateHistory = new List<StateHistoryDto>(history.Count);\r\n                foreach (var entry in history)\r\n                {\r\n                    var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    };\r\n\r\n                    // Each history item contains all of the information,\r\n                    // but other code should not know this. We'll remove\r\n                    // unwanted keys.\r\n                    var stateData = new Dictionary<string, string>(entry);\r\n                    stateData.Remove(''State'');\r\n                    stateData.Remove(''Reason'');\r\n                    stateData.Remove(''CreatedAt'');\r\n\r\n                    dto.Data = stateData;\r\n                    stateHistory.Add(dto);\r\n                }\r\n\r\n                // For compatibility\r\n                if (!job.ContainsKey(''Method'')) job.Add(''Method'', null);\r\n                if (!job.ContainsKey(''ParameterTypes'')) job.Add(''ParameterTypes'', null);\r\n\r\n                return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };\r\n            });", span="403-454", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="ServerWatchdog.cs"];
m4_283 [label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="ServerWatchdog.cs"];
m4_309 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ServerWatchdog.cs"];
m4_113 [label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="ServerWatchdog.cs"];
m4_423 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="ServerWatchdog.cs"];
m4_427 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="ServerWatchdog.cs"];
m4_428 [label="return UseConnection(redis => redis.GetListCount(''hangfire:succeeded''));", span="577-577", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="ServerWatchdog.cs"];
m4_429 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="ServerWatchdog.cs"];
m4_407 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerWatchdog.cs"];
m4_454 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="ServerWatchdog.cs"];
m4_85 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="ServerWatchdog.cs"];
m4_163 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="ServerWatchdog.cs"];
m4_307 [label="Entry List<StateHistoryDto>.cstr", span="", cluster="List<StateHistoryDto>.cstr", file="ServerWatchdog.cs"];
m4_315 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ServerWatchdog.cs"];
m4_191 [label="Entry HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263", cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="ServerWatchdog.cs"];
m4_192 [label="return UseConnection(redis =>\r\n            {\r\n                var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="265-283", cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="ServerWatchdog.cs"];
m4_193 [label="Exit HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263", cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="ServerWatchdog.cs"];
m4_375 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="ServerWatchdog.cs"];
m4_222 [label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_383 [label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="525-525", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_389 [label="var id = jobId", span="536-536", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_386 [label="properties = properties ?? new string[0]", span="530-530", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_382 [label="jobIds.Count == 0", span="525-525", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_384 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="527-527", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_385 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="528-528", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_387 [label="var pipeline = redis.CreatePipeline()", span="532-532", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_388 [label=jobIds, span="534-534", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_391 [label="stateProperties != null", span="544-544", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_392 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="546-548", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_394 [label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="555-572", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_390 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="538-542", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_393 [label="pipeline.Flush()", span="552-552", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_395 [label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="ServerWatchdog.cs"];
m4_422 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="ServerWatchdog.cs"];
m4_9 [label="Entry HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637", cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="ServerWatchdog.cs"];
m4_512 [label="var redis = _connectionPool.GetClient()", span="639-639", cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="ServerWatchdog.cs"];
m4_513 [label="return action(redis);", span="641-641", cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="ServerWatchdog.cs"];
m4_514 [label="Exit HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637", cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="ServerWatchdog.cs"];
m4_313 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="ServerWatchdog.cs"];
m4_112 [label="Entry KeyValuePair<string, ScheduledJobDto>.cstr", span="", cluster="KeyValuePair<string, ScheduledJobDto>.cstr", file="ServerWatchdog.cs"];
m4_0 [label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="ServerWatchdog.cs"];
m4_1 [label="connectionPool == null", span="34-34", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", color=green, community=0, file="ServerWatchdog.cs"];
m4_2 [label="throw new ArgumentNullException(''connectionPool'');", span="34-34", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", color=green, community=0, file="ServerWatchdog.cs"];
m4_3 [label="_connectionPool = connectionPool", span="36-36", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", color=green, community=0, file="ServerWatchdog.cs"];
m4_4 [label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="ServerWatchdog.cs"];
m4_201 [label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="ServerWatchdog.cs"];
m4_497 [label="Entry lambda expression", span="616-616", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_10 [label="Entry lambda expression", span="41-42", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_11 [label="redis.GetSortedSetCount(''hangfire:schedule'')", span="42-42", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_12 [label="Exit lambda expression", span="41-42", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_17 [label="Entry lambda expression", span="47-48", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_18 [label="redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="48-48", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_19 [label="Exit lambda expression", span="47-48", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_25 [label="Entry lambda expression", span="53-54", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_26 [label="redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="54-54", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_27 [label="Exit lambda expression", span="53-54", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_31 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_32 [label="redis.GetSortedSetCount(''hangfire:failed'')", span="59-59", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_33 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_37 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_38 [label="redis.GetSortedSetCount(''hangfire:processing'')", span="64-64", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_39 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_43 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_44 [label="redis.GetListCount(''hangfire:deleted'')", span="69-69", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_45 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_49 [label="Entry lambda expression", span="75-94", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_50 [label="var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="77-80", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_51 [label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());", span="82-93", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_52 [label="Exit lambda expression", span="75-94", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_58 [label="Entry lambda expression", span="86-93", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_64 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_59 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }", span="86-93", cluster="lambda expression", color=green, community=0, file="ServerWatchdog.cs"];
m4_60 [label="Exit lambda expression", span="86-93", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_120 [label="GetTimelineStats(redis, ''succeeded'')", span="156-156", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_127 [label="GetTimelineStats(redis, ''failed'')", span="161-161", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_171 [label="return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="219-233", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_183 [label="return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="246-259", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_196 [label="return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="272-282", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_217 [label="var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="317-328", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_252 [label="return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="353-364", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_262 [label="return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });", span="377-387", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_272 [label="GetHourlyTimelineStats(redis, ''succeeded'')", span="393-393", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_279 [label="GetHourlyTimelineStats(redis, ''failed'')", span="398-398", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_304 [label="return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };", span="443-453", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_469 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="599-599", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_475 [label="x.GetSortedSetCount(''hangfire:processing'')", span="603-603", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_489 [label="x.GetSortedSetCount(''hangfire:failed'')", span="611-611", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_501 [label="x.GetSortedSetCount(''hangfire:recurring-jobs'')", span="619-619", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_251 [label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="348-351", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_261 [label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="373-375", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_285 [label="var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="405-405", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_289 [label="var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="410-411", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_409 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="547-547", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_399 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray())", span="539-541", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_232 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="307-307", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_238 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="311-311", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_431 [label="redis.GetListCount(''hangfire:succeeded'')", span="577-577", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_507 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="626-626", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_74 [label="return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());", span="108-108", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_66 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_65 [label="x.Value.StartedAt", span="93-93", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_110 [label="new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="137-149", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_161 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="199-206", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_175 [label="new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="224-233", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_187 [label="new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="251-259", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_199 [label="new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="277-282", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_244 [label="new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="322-328", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_255 [label="new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="358-364", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_265 [label="new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    }", span="382-387", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_71 [label="Entry lambda expression", span="99-151", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_119 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_121 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_126 [label="Entry lambda expression", span="161-161", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_128 [label="Exit lambda expression", span="161-161", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_132 [label="Entry lambda expression", span="166-207", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_169 [label="Entry lambda expression", span="212-234", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_170 [label="var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="214-217", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_172 [label="Exit lambda expression", span="212-234", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_174 [label="Entry lambda expression", span="224-233", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_181 [label="Entry lambda expression", span="239-260", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_182 [label="var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="241-244", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_184 [label="Exit lambda expression", span="239-260", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_186 [label="Entry lambda expression", span="251-259", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_194 [label="Entry lambda expression", span="265-283", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_195 [label="var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1)", span="267-270", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_197 [label="Exit lambda expression", span="265-283", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_198 [label="Entry lambda expression", span="277-282", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_205 [label="Entry lambda expression", span="288-340", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_213 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="301-304", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_216 [label="pipeline.Flush()", span="314-314", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_218 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    })", span="330-336", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_243 [label="Entry lambda expression", span="322-328", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_250 [label="Entry lambda expression", span="346-365", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_253 [label="Exit lambda expression", span="346-365", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_254 [label="Entry lambda expression", span="358-364", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_260 [label="Entry lambda expression", span="371-388", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_263 [label="Exit lambda expression", span="371-388", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_264 [label="Entry lambda expression", span="382-387", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_271 [label="Entry lambda expression", span="393-393", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_273 [label="Exit lambda expression", span="393-393", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_278 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_280 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_284 [label="Entry lambda expression", span="403-454", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_302 [label="!job.ContainsKey(''ParameterTypes'')", span="441-441", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_303 [label="job.Add(''ParameterTypes'', null)", span="441-441", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_288 [label="var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' }", span="408-408", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_291 [label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="417-417", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_305 [label="Exit lambda expression", span="403-454", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_317 [label="Entry lambda expression", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_321 [label="Entry lambda expression", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_324 [label="Entry lambda expression", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_430 [label="Entry lambda expression", span="577-577", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_436 [label="Entry lambda expression", span="582-634", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_468 [label="Entry lambda expression", span="599-599", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_470 [label="Exit lambda expression", span="599-599", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_474 [label="Entry lambda expression", span="603-603", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_476 [label="Exit lambda expression", span="603-603", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_488 [label="Entry lambda expression", span="611-611", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_490 [label="Exit lambda expression", span="611-611", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_500 [label="Entry lambda expression", span="619-619", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_502 [label="Exit lambda expression", span="619-619", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_286 [label="job.Count == 0", span="406-406", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_300 [label="!job.ContainsKey(''Method'')", span="440-440", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_301 [label="job.Add(''Method'', null)", span="440-440", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_290 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="413-415", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_408 [label="Entry lambda expression", span="547-547", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_410 [label="Exit lambda expression", span="547-547", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_398 [label="Entry lambda expression", span="539-541", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_400 [label="Exit lambda expression", span="539-541", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_208 [label=queues, span="293-293", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_231 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_233 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_237 [label="Entry lambda expression", span="311-311", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_239 [label="Exit lambda expression", span="311-311", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_432 [label="Exit lambda expression", span="577-577", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_449 [label="var queueName = queue", span="624-624", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_506 [label="Entry lambda expression", span="626-626", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_508 [label="Exit lambda expression", span="626-626", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_73 [label="scheduledJobs.Count == 0", span="106-106", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_84 [label="Exit lambda expression", span="99-151", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_75 [label="var jobs = new Dictionary<string, List<string>>()", span="111-111", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_76 [label="var states = new Dictionary<string, List<String>>()", span="112-112", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_109 [label="Entry lambda expression", span="137-149", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_111 [label="Exit lambda expression", span="137-149", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_136 [label="var servers = new Dictionary<string, List<string>>()", span="175-175", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_137 [label="var queues = new Dictionary<string, List<string>>()", span="176-176", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_160 [label="Entry lambda expression", span="199-206", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_162 [label="Exit lambda expression", span="199-206", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_176 [label="Exit lambda expression", span="224-233", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_188 [label="Exit lambda expression", span="251-259", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_200 [label="Exit lambda expression", span="277-282", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_245 [label="Exit lambda expression", span="322-328", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_256 [label="Exit lambda expression", span="358-364", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_266 [label="Exit lambda expression", span="382-387", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_72 [label="var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="101-104", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_77 [label="var pipeline = redis.CreatePipeline()", span="114-114", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_380 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="500-500", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_145 [label="Exit lambda expression", span="166-207", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_133 [label="var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'')", span="168-168", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_138 [label="var pipeline = redis.CreatePipeline()", span="178-178", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_416 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="556-566", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_220 [label="Exit lambda expression", span="288-340", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_206 [label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="290-290", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_212 [label="var pipeline = redis.CreatePipeline()", span="299-299", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_419 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State))", span="567-571", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_214 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="306-308", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_225 [label="Entry lambda expression", span="302-303", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_228 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_215 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x)", span="310-312", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_207 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="291-291", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_352 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="468-468", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_318 [label="!hiddenProperties.Contains(x.Key)", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_292 [label=history, span="418-418", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_299 [label="stateHistory.Add(dto)", span="436-436", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_287 [label="return null;", span="406-406", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_293 [label="var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    }", span="420-425", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_319 [label="Exit lambda expression", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_323 [label="Exit lambda expression", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_322 [label="x.Key", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_326 [label="Exit lambda expression", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_325 [label="x.Value", span="451-451", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_453 [label="Exit lambda expression", span="582-634", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_437 [label="var stats = new StatisticsDto()", span="584-584", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_438 [label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="586-586", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_439 [label="var pipeline = redis.CreatePipeline()", span="588-588", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_442 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="598-600", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_443 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="602-604", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_445 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="610-612", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_447 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x)", span="618-620", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_226 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="302-303", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_154 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="191-192", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_404 [label="!jobs.ContainsKey(id)", span="542-542", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_405 [label="jobs.Add(id, x)", span="542-542", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_412 [label="!states.ContainsKey(id)", span="548-548", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_413 [label="states.Add(id, x)", span="548-548", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_95 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' })", span="121-123", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_104 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' })", span="127-129", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_148 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="185-187", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_209 [label="IList<string> firstJobIds = null", span="295-295", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_219 [label="return result;", span="339-339", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_448 [label=queues, span="622-622", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_450 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="625-627", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_83 [label="return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());", span="136-150", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_135 [label="return new List<ServerDto>();", span="172-172", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_100 [label="jobs.Add(job.Key, x)", span="124-124", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_107 [label="states.Add(job.Key, x)", span="130-130", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_80 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x))", span="120-124", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_81 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x))", span="126-130", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_151 [label="servers.Add(name, x)", span="188-188", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_158 [label="queues.Add(name, x)", span="193-193", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_134 [label="serverNames.Count == 0", span="170-170", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_141 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="184-188", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_144 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="199-206", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_142 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="190-193", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_78 [label=scheduledJobs, span="116-116", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_82 [label="pipeline.Flush()", span="133-133", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_379 [label="Entry lambda expression", span="500-500", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_381 [label="Exit lambda expression", span="500-500", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_139 [label=serverNames, span="180-180", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_143 [label="pipeline.Flush()", span="196-196", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_415 [label="Entry lambda expression", span="556-566", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_417 [label="Exit lambda expression", span="556-566", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_376 [label="Entry lambda expression", span="499-499", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_211 [label="long fetched = 0", span="297-297", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_411 [label="Entry lambda expression", span="548-548", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_418 [label="Entry lambda expression", span="567-571", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_420 [label="Exit lambda expression", span="567-571", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_424 [label="Entry lambda expression", span="569-569", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_234 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_440 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="590-592", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_441 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="594-596", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_444 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="606-608", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_446 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''))", span="614-616", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_227 [label="Exit lambda expression", span="302-303", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_230 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_229 [label="firstJobIds = x", span="304-304", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_240 [label="Entry lambda expression", span="312-312", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_451 [label="pipeline.Flush()", span="630-630", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_351 [label="Entry lambda expression", span="468-468", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_353 [label="Exit lambda expression", span="468-468", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_294 [label="var stateData = new Dictionary<string, string>(entry)", span="430-430", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_298 [label="dto.Data = stateData", span="435-435", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_452 [label="return stats;", span="633-633", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_460 [label="stats.Servers = x", span="592-592", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_466 [label="stats.Queues = x", span="596-596", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_472 [label="stats.Scheduled = x", span="600-600", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_478 [label="stats.Processing = x", span="604-604", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_485 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="608-608", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_492 [label="stats.Failed = x", span="612-612", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_498 [label="stats.Deleted = long.Parse(x ?? ''0'')", span="616-616", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_504 [label="stats.Recurring = x", span="620-620", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_510 [label="stats.Enqueued += x", span="627-627", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_471 [label="Entry lambda expression", span="600-600", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_477 [label="Entry lambda expression", span="604-604", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_491 [label="Entry lambda expression", span="612-612", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_503 [label="Entry lambda expression", span="620-620", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_140 [label="var name = serverName", span="182-182", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_153 [label="Entry lambda expression", span="191-192", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_155 [label="Exit lambda expression", span="191-192", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_403 [label="Entry lambda expression", span="542-542", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_406 [label="Exit lambda expression", span="542-542", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_414 [label="Exit lambda expression", span="548-548", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_79 [label="var job = scheduledJob", span="118-118", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_94 [label="Entry lambda expression", span="121-123", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_96 [label="Exit lambda expression", span="121-123", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_103 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_105 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_147 [label="Entry lambda expression", span="185-187", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_149 [label="Exit lambda expression", span="185-187", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_210 [label="long length = 0", span="296-296", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_509 [label="Entry lambda expression", span="627-627", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_99 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_101 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_106 [label="Entry lambda expression", span="130-130", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_108 [label="Exit lambda expression", span="130-130", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_150 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_152 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_157 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_159 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_378 [label="Exit lambda expression", span="499-499", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_377 [label="x.ToString(''yyyy-MM-dd'')", span="499-499", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_426 [label="Exit lambda expression", span="569-569", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_425 [label="y == null", span="569-569", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_236 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_235 [label="length = x", span="308-308", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_455 [label="Entry lambda expression", span="591-591", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_459 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_462 [label="Entry lambda expression", span="595-595", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_465 [label="Entry lambda expression", span="596-596", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_480 [label="Entry lambda expression", span="607-607", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_484 [label="Entry lambda expression", span="608-608", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_494 [label="Entry lambda expression", span="615-615", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_242 [label="Exit lambda expression", span="312-312", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_241 [label="fetched = x", span="312-312", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_295 [label="stateData.Remove(''State'')", span="431-431", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_296 [label="stateData.Remove(''Reason'')", span="432-432", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_297 [label="stateData.Remove(''CreatedAt'')", span="433-433", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_461 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_467 [label="Exit lambda expression", span="596-596", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_473 [label="Exit lambda expression", span="600-600", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_479 [label="Exit lambda expression", span="604-604", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_486 [label="Exit lambda expression", span="608-608", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_493 [label="Exit lambda expression", span="612-612", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_499 [label="Exit lambda expression", span="616-616", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_505 [label="Exit lambda expression", span="620-620", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_511 [label="Exit lambda expression", span="627-627", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_457 [label="Exit lambda expression", span="591-591", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_456 [label="x.GetSetCount(''hangfire:servers'')", span="591-591", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_464 [label="Exit lambda expression", span="595-595", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_463 [label="x.GetSetCount(''hangfire:queues'')", span="595-595", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_482 [label="Exit lambda expression", span="607-607", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_481 [label="x.GetValue(''hangfire:stats:succeeded'')", span="607-607", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_495 [label="x.GetValue(''hangfire:stats:deleted'')", span="615-615", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_496 [label="Exit lambda expression", span="615-615", cluster="lambda expression", file="ServerWatchdog.cs"];
m4_53 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="ServerWatchdog.cs"];
m4_223 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="ServerWatchdog.cs"];
m4_224 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ServerWatchdog.cs"];
m4_93 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ServerWatchdog.cs"];
m4_97 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="ServerWatchdog.cs"];
m4_89 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ServerWatchdog.cs"];
m4_115 [label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="ServerWatchdog.cs"];
m4_517 [label="return new InvocationData(\r\n                    type,\r\n                    method,\r\n                    parameterTypes,\r\n                    arguments).Deserialize();", span="650-654", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="ServerWatchdog.cs"];
m4_519 [label="return null;", span="658-658", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="ServerWatchdog.cs"];
m4_518 [label=Exception, span="656-656", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="ServerWatchdog.cs"];
m4_520 [label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="ServerWatchdog.cs"];
m4_166 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="ServerWatchdog.cs"];
m4_167 [label="return UseConnection(redis =>\r\n            {\r\n                var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="212-234", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="ServerWatchdog.cs"];
m4_168 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="ServerWatchdog.cs"];
m4_267 [label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="ServerWatchdog.cs"];
m4_354 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="ServerWatchdog.cs"];
m4_70 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="ServerWatchdog.cs"];
m4_221 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="ServerWatchdog.cs"];
m4_348 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="ServerWatchdog.cs"];
m4_129 [label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="ServerWatchdog.cs"];
m4_130 [label="return UseConnection(redis =>\r\n            {\r\n                var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'');\r\n\r\n                if (serverNames.Count == 0)\r\n                {\r\n                    return new List<ServerDto>();\r\n                }\r\n\r\n                var servers = new Dictionary<string, List<string>>();\r\n                var queues = new Dictionary<string, List<string>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var serverName in serverNames)\r\n                    {\r\n                        var name = serverName;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();\r\n            });", span="166-207", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="ServerWatchdog.cs"];
m4_131 [label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="ServerWatchdog.cs"];
m4_40 [label="Entry HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67", cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="ServerWatchdog.cs"];
m4_41 [label="return UseConnection(redis => redis.GetListCount(''hangfire:deleted''));", span="69-69", cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", color=green, community=0, file="ServerWatchdog.cs"];
m4_42 [label="Exit HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67", cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="ServerWatchdog.cs"];
m4_185 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="ServerWatchdog.cs"];
m4_178 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="ServerWatchdog.cs"];
m4_179 [label="return UseConnection(redis =>\r\n            {\r\n                var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="239-260", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="ServerWatchdog.cs"];
m4_180 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="ServerWatchdog.cs"];
m4_116 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="ServerWatchdog.cs"];
m4_117 [label="return UseConnection(redis => GetTimelineStats(redis, ''succeeded''));", span="156-156", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="ServerWatchdog.cs"];
m4_118 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="ServerWatchdog.cs"];
m4_90 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="ServerWatchdog.cs"];
m4_487 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="ServerWatchdog.cs"];
m4_102 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="ServerWatchdog.cs"];
m4_63 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="ServerWatchdog.cs"];
m4_28 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="ServerWatchdog.cs"];
m4_29 [label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:failed''));", span="59-59", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", color=green, community=0, file="ServerWatchdog.cs"];
m4_30 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="ServerWatchdog.cs"];
m4_346 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="ServerWatchdog.cs"];
m4_46 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="ServerWatchdog.cs"];
m4_47 [label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());\r\n            });", span="75-94", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", color=green, community=0, file="ServerWatchdog.cs"];
m4_48 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="ServerWatchdog.cs"];
m4_13 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="ServerWatchdog.cs"];
m4_189 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="ServerWatchdog.cs"];
m4_34 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="ServerWatchdog.cs"];
m4_35 [label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:processing''));", span="64-64", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", color=green, community=0, file="ServerWatchdog.cs"];
m4_36 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="ServerWatchdog.cs"];
m4_401 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ServerWatchdog.cs"];
m4_312 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ServerWatchdog.cs"];
m4_397 [label="Entry JobList<T>.cstr", span="", cluster="JobList<T>.cstr", file="ServerWatchdog.cs"];
m4_350 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ServerWatchdog.cs"];
m4_521 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ServerWatchdog.cs"];
m4_268 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="ServerWatchdog.cs"];
m4_269 [label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''succeeded''));", span="393-393", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="ServerWatchdog.cs"];
m4_270 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="ServerWatchdog.cs"];
m4_355 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ServerWatchdog.cs"];
m4_306 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ServerWatchdog.cs"];
m4_316 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ServerWatchdog.cs"];
m4_310 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="ServerWatchdog.cs"];
m4_396 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="ServerWatchdog.cs"];
m4_458 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="ServerWatchdog.cs"];
m4_114 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="ServerWatchdog.cs"];
m4_20 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ServerWatchdog.cs"];
m4_123 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="ServerWatchdog.cs"];
m4_124 [label="return UseConnection(redis => GetTimelineStats(redis, ''failed''));", span="161-161", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="ServerWatchdog.cs"];
m4_125 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="ServerWatchdog.cs"];
m4_246 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="ServerWatchdog.cs"];
m4_177 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="ServerWatchdog.cs"];
m4_202 [label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="ServerWatchdog.cs"];
m4_203 [label="return UseConnection(redis =>\r\n            {\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count);\r\n\r\n                foreach (var queue in queues)\r\n                {\r\n                    IList<string> firstJobIds = null;\r\n                    long length = 0;\r\n                    long fetched = 0;\r\n\r\n                    using (var pipeline = redis.CreatePipeline())\r\n                    {\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x);\r\n\r\n                        pipeline.Flush();\r\n                    }\r\n\r\n                    var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        });\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="288-340", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="ServerWatchdog.cs"];
m4_204 [label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="ServerWatchdog.cs"];
m4_314 [label="Entry Unk.TryToGetJob", span="", cluster="Unk.TryToGetJob", file="ServerWatchdog.cs"];
m4_21 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="ServerWatchdog.cs"];
m4_67 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="ServerWatchdog.cs"];
m4_68 [label="return UseConnection(redis =>\r\n            {\r\n                var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                if (scheduledJobs.Count == 0)\r\n                {\r\n                    return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());\r\n                }\r\n\r\n                var jobs = new Dictionary<string, List<string>>();\r\n                var states = new Dictionary<string, List<String>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var scheduledJob in scheduledJobs)\r\n                    {\r\n                        var job = scheduledJob;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());\r\n            });", span="99-151", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="ServerWatchdog.cs"];
m4_69 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="ServerWatchdog.cs"];
m4_87 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerWatchdog.cs"];
m4_54 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="ServerWatchdog.cs"];
m4_14 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="ServerWatchdog.cs"];
m4_15 [label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue)));", span="47-48", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", color=green, community=0, file="ServerWatchdog.cs"];
m4_16 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="ServerWatchdog.cs"];
m4_347 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="ServerWatchdog.cs"];
m4_6 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="ServerWatchdog.cs"];
m4_7 [label="return UseConnection(redis => \r\n                redis.GetSortedSetCount(''hangfire:schedule''));", span="41-42", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", color=green, community=0, file="ServerWatchdog.cs"];
m4_8 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="ServerWatchdog.cs"];
m4_156 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="ServerWatchdog.cs"];
m4_320 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ServerWatchdog.cs"];
m4_92 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServerWatchdog.cs"];
m4_308 [label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="ServerWatchdog.cs"];
m4_146 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="ServerWatchdog.cs"];
m4_173 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="ServerWatchdog.cs"];
m4_483 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="ServerWatchdog.cs"];
m4_98 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="ServerWatchdog.cs"];
m4_523 [label="HangFire.Redis.RedisMonitoringApi", span="", file="ServerWatchdog.cs"];
m4_524 [label=string, span="", file="ServerWatchdog.cs"];
m4_525 [label=string, span="", file="ServerWatchdog.cs"];
m4_526 [label=int, span="", file="ServerWatchdog.cs"];
m4_527 [label=int, span="", file="ServerWatchdog.cs"];
m4_543 [label=string, span="", file="ServerWatchdog.cs"];
m4_544 [label=int, span="", file="ServerWatchdog.cs"];
m4_545 [label=int, span="", file="ServerWatchdog.cs"];
m4_546 [label=string, span="", file="ServerWatchdog.cs"];
m4_547 [label=int, span="", file="ServerWatchdog.cs"];
m4_548 [label=int, span="", file="ServerWatchdog.cs"];
m4_549 [label=string, span="", file="ServerWatchdog.cs"];
m4_554 [label=id, span="", file="ServerWatchdog.cs"];
m4_556 [label="string[]", span="", file="ServerWatchdog.cs"];
m4_553 [label="string[]", span="", file="ServerWatchdog.cs"];
m4_542 [label=queue, span="", file="ServerWatchdog.cs"];
m4_560 [label=queueName, span="", file="ServerWatchdog.cs"];
m4_531 [label=jobs, span="", file="ServerWatchdog.cs"];
m4_532 [label=states, span="", file="ServerWatchdog.cs"];
m4_534 [label=servers, span="", file="ServerWatchdog.cs"];
m4_535 [label=queues, span="", file="ServerWatchdog.cs"];
m4_536 [label=int, span="", file="ServerWatchdog.cs"];
m4_537 [label=int, span="", file="ServerWatchdog.cs"];
m4_538 [label=int, span="", file="ServerWatchdog.cs"];
m4_539 [label=int, span="", file="ServerWatchdog.cs"];
m4_540 [label=int, span="", file="ServerWatchdog.cs"];
m4_541 [label=int, span="", file="ServerWatchdog.cs"];
m4_528 [label=int, span="", file="ServerWatchdog.cs"];
m4_529 [label=int, span="", file="ServerWatchdog.cs"];
m4_552 [label=string, span="", file="ServerWatchdog.cs"];
m4_555 [label=jobs, span="", file="ServerWatchdog.cs"];
m4_557 [label=states, span="", file="ServerWatchdog.cs"];
m4_558 [label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="ServerWatchdog.cs"];
m4_551 [label=string, span="", file="ServerWatchdog.cs"];
m4_550 [label=hiddenProperties, span="", file="ServerWatchdog.cs"];
m4_533 [label=name, span="", file="ServerWatchdog.cs"];
m4_530 [label=job, span="", file="ServerWatchdog.cs"];
m4_559 [label=stats, span="", file="ServerWatchdog.cs"];
m5_15 [label="transaction.QueueCommand(x => x.IncrementValue(''hangfire:stats:succeeded''))", span="46-46", cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs"];
m5_33 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SucceededState.cs"];
m5_31 [label="x.EnqueueItemOnList(''hangfire:succeeded'', JobId)", span="43-43", cluster="lambda expression", file="SucceededState.cs"];
m5_67 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SucceededState.cs"];
m5_82 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SucceededState.cs"];
m5_30 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="SucceededState.cs"];
m5_84 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SucceededState.cs"];
m5_38 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="SucceededState.cs"];
m5_39 [label="x.IncrementValue(''hangfire:stats:succeeded'')", span="46-46", cluster="lambda expression", file="SucceededState.cs"];
m5_40 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="SucceededState.cs"];
m5_76 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SucceededState.cs"];
m5_42 [label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="110-110", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_48 [label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="123-125", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=1, file="SucceededState.cs"];
m5_47 [label="var instant = _instantFactory(cronSchedule, timeZone)", span="121-121", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_45 [label="var cronSchedule = CrontabSchedule.Parse(cron)", span="113-113", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_46 [label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="117-119", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_43 [label="var job = serializedJob.Deserialize()", span="111-111", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_44 [label="var cron = recurringJob[''Cron'']", span="112-112", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_49 [label="var changedFields = new Dictionary<string, string>()", span="127-127", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_71 [label="Entry Unk._instantFactory", span="", cluster="Unk._instantFactory", file="SucceededState.cs"];
m5_74 [label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25", cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="SucceededState.cs"];
m5_83 [label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61", cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SucceededState.cs"];
m5_41 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="SucceededState.cs"];
m5_10 [label="throw new ArgumentNullException(''throttler'');", span="55-55", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_12 [label="_instantFactory = instantFactory", span="58-58", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=green, community=1, file="SucceededState.cs"];
m5_7 [label="instantFactory == null", span="54-54", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_11 [label="_factory = factory", span="57-57", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_13 [label="_throttler = throttler", span="59-59", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_8 [label="throw new ArgumentNullException(''instantFactory'');", span="54-54", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_14 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="48-48", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_9 [label="throttler == null", span="55-55", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_16 [label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="62-62", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs"];
m5_22 [label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="73-74", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs"];
m5_69 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SucceededState.cs"];
m5_0 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="SucceededState.cs"];
m5_1 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="SucceededState.cs"];
m5_36 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="SucceededState.cs"];
m5_70 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="SucceededState.cs"];
m5_75 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SucceededState.cs"];
m5_23 [label="recurringJob == null", span="76-76", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs"];
m5_78 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededState.cs"];
m5_68 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="SucceededState.cs"];
m5_29 [label="Exit lambda expression", span="39-41", cluster="lambda expression", file="SucceededState.cs"];
m5_2 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="43-43", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="SucceededState.cs"];
m5_3 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="43-43", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="SucceededState.cs"];
m5_73 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs"];
m5_81 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SucceededState.cs"];
m5_66 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SucceededState.cs"];
m5_77 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SucceededState.cs"];
m5_72 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="SucceededState.cs"];
m5_17 [label="_throttler.Throttle(context.CancellationToken)", span="64-64", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs"];
m5_18 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SucceededState.cs"];
m5_24 [label="Entry lambda expression", span="35-37", cluster="lambda expression", file="SucceededState.cs"];
m5_27 [label="Entry lambda expression", span="39-41", cluster="lambda expression", file="SucceededState.cs"];
m5_19 [label="Entry lambda expression", span="31-33", cluster="lambda expression", file="SucceededState.cs"];
m5_20 [label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobExpirationTimeout)", span="31-33", cluster="lambda expression", file="SucceededState.cs"];
m5_21 [label="Exit lambda expression", span="31-33", cluster="lambda expression", file="SucceededState.cs"];
m5_26 [label="Exit lambda expression", span="35-37", cluster="lambda expression", file="SucceededState.cs"];
m5_25 [label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:history'', JobId),\r\n                _jobExpirationTimeout)", span="35-37", cluster="lambda expression", file="SucceededState.cs"];
m5_28 [label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:state'', JobId),\r\n                _jobExpirationTimeout)", span="39-41", cluster="lambda expression", file="SucceededState.cs", color=green, community=1];
m5_37 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="SucceededState.cs"];
m5_54 [label="var context = new CreateContext(storage, connection, job, state)", span="137-137", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_61 [label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="153-153", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_62 [label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="155-157", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=1, file="SucceededState.cs"];
m5_63 [label=TimeZoneNotFoundException, span="159-159", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_55 [label="var backgroundJob = _factory.Create(context)", span="138-138", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_59 [label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="149-149", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_58 [label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="143-146", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_32 [label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="SucceededState.cs"];
m5_34 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="SucceededState.cs"];
m5_50 [label="instant.GetNextInstants(lastExecutionTime).Any()", span="129-129", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_56 [label="var jobId = backgroundJob != null ? backgroundJob.Id : null", span="139-139", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_60 [label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="150-150", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_35 [label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="104-104", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_51 [label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="131-131", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_52 [label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="132-132", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_57 [label="String.IsNullOrEmpty(jobId)", span="141-141", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_4 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="48-48", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_5 [label="factory == null", span="53-53", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_6 [label="throw new ArgumentNullException(''factory'');", span="53-53", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SucceededState.cs"];
m5_53 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="SucceededState.cs"];
m5_64 [label="HangFire.States.SucceededState", span="", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_65 [label=string, span="", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SucceededState.cs"];
m5_80 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="SucceededState.cs"];
m5_85 [label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159", cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="SucceededState.cs"];
m5_79 [label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31", cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="SucceededState.cs"];
m5_86 [label="Hangfire.Server.RecurringJobScheduler", span="", file="SucceededState.cs"];
n80 -> n32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n80 -> n78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
n0 -> n1  [key=0, style=solid];
n0 -> n16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n12 -> n9  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n0  [key=2, style=dotted];
n17 -> n14  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n18  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n31  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n41  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n53  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n60  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n67  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n74  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=2, style=dotted];
n24 -> n22  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n37  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n22  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n38  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n39  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n26  [key=2, style=dotted];
n36 -> n30  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n37  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n22  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n38  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n50  [key=2, style=dotted];
n44 -> n46  [key=1, style=dashed, color=darkseagreen4, label=table1];
n44 -> n47  [key=1, style=dashed, color=darkseagreen4, label=table1];
n45 -> n46  [key=0, style=solid];
n45 -> n51  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n51  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n39  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n26  [key=2, style=dotted];
n49 -> n40  [key=0, style=bold, color=blue];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n37  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n22  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n38  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n39  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n26  [key=2, style=dotted];
n58 -> n52  [key=0, style=bold, color=blue];
n59 -> n60  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n37  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n22  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n38  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n39  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n26  [key=2, style=dotted];
n65 -> n59  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n37  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n22  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n38  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n39  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n26  [key=2, style=dotted];
n72 -> n66  [key=0, style=bold, color=blue];
n73 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n37  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n22  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n38  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n39  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n26  [key=2, style=dotted];
n79 -> n73  [key=0, style=bold, color=blue];
d34 -> d35  [key=0, style=solid, color=green];
d34 -> d47  [key=2, style=dotted, color=green];
d34 -> d46  [key=2, style=dotted, color=green];
d34 -> d23  [key=2, style=dotted, color=green];
d34 -> d48  [key=2, style=dotted, color=green];
d34 -> d49  [key=2, style=dotted, color=green];
d53 -> d34  [key=1, style=dashed, color=green, label="Hangfire.Server.DelayedJobScheduler"];
d53 -> d7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
d53 -> d8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
d53 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
d53 -> d18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
d53 -> d24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
d20 -> d34  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
d20 -> d27  [key=0, style=solid];
d20 -> d11  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Server.BackgroundProcessContext context"];
d20 -> d32  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
d20 -> d39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
d27 -> d34  [key=1, style=dashed, color=green, label=connection];
d27 -> d28  [key=0, style=solid];
d27 -> d41  [key=2, style=dotted];
d27 -> d30  [key=1, style=dashed, color=darkseagreen4, label=connection];
d27 -> d36  [key=1, style=dashed, color=darkseagreen4, label=connection];
d30 -> d34  [key=1, style=dashed, color=green, label=jobId];
d30 -> d31  [key=0, style=solid];
d30 -> d44  [key=2, style=dotted];
d30 -> d37  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d33 -> d34  [key=0, style=solid, color=green];
d33 -> d46  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d39  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d13 -> d20  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d16  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d22  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d26  [key=2, style=dotted];
d40 -> d20  [key=0, style=bold, color=blue];
d11 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
d11 -> d18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
d11 -> d12  [key=0, style=solid];
d11 -> d15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
d32 -> d40  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d28 -> d42  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d50  [key=2, style=dotted];
d36 -> d38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d29 -> d30  [key=0, style=solid];
d29 -> d43  [key=2, style=dotted];
d31 -> d33  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d45  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d51  [key=2, style=dotted];
d25 -> d23  [key=0, style=bold, color=blue];
d4 -> d7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
d4 -> d8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d4 -> d5  [key=0, style=solid];
d5 -> d7  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d9 -> d4  [key=0, style=bold, color=blue];
d12 -> d13  [key=0, style=solid];
d12 -> d12  [key=3, color=darkorchid, style=bold, label="Local variable int jobsEnqueued"];
d12 -> d14  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
d12 -> d16  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
d12 -> d17  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
d15 -> d13  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d14 -> d14  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
d14 -> d16  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
d14 -> d17  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
d16 -> d18  [key=0, style=solid];
d16 -> d17  [key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d17 -> d21  [key=2, style=dotted];
d19 -> d11  [key=0, style=bold, color=blue];
d38 -> d39  [key=0, style=solid];
d38 -> d52  [key=2, style=dotted];
d6 -> d9  [key=0, style=solid];
d6 -> d10  [key=2, style=dotted];
m0_54 -> m0_56  [key=1, style=dashed, color=green, label="Hangfire.Logging.ILog"];
m0_54 -> m0_55  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_41  [key=2, style=dotted, color=green];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_55 -> m0_53  [key=2, style=dotted];
m0_55 -> m0_57  [key=0, style=solid];
m0_57 -> m0_54  [key=0, style=bold, color=blue];
m0_331 -> m0_345  [key=0, style=solid];
m0_345 -> m0_346  [key=0, style=solid];
m0_346 -> m0_331  [key=0, style=bold, color=blue];
m0_6 -> m0_129  [key=0, style=solid];
m0_6 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_6 -> m0_9  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_129 -> m0_131  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [key=2, style=dotted];
m0_130 -> m0_133  [key=2, style=dotted];
m0_131 -> m0_6  [key=0, style=bold, color=blue];
m0_26 -> m0_23  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid, color=green];
m0_51 -> m0_36  [key=2, style=dotted, color=green];
m0_51 -> m0_0  [key=2, style=dotted, color=green];
m0_540 -> m0_563  [key=0, style=solid];
m0_563 -> m0_564  [key=0, style=solid];
m0_564 -> m0_540  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_51  [key=1, style=dashed, color=green, label="Hangfire.Logging.ILog"];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_52  [key=0, style=solid, color=green];
m0_50 -> m0_53  [key=2, style=dotted, color=green];
m0_52 -> m0_49  [key=0, style=bold, color=blue];
m0_423 -> m0_424  [key=0, style=solid];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_224  [key=2, style=dotted];
m0_425 -> m0_423  [key=0, style=bold, color=blue];
m0_53 -> m0_7  [key=1, style=dashed, color=red, label="Hangfire.Server.DelayedJobScheduler"];
m0_53 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m0_53 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m0_53 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m0_53 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m0_53 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m0_37 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_51  [key=2, style=dotted];
m0_39 -> m0_41  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=0, style=solid];
m0_38 -> m0_35  [key=2, style=dotted];
m0_38 -> m0_52  [key=2, style=dotted];
m0_40 -> m0_37  [key=0, style=bold, color=blue];
m0_40 -> m0_20  [key=0, style=bold, color=blue];
m0_22 -> m0_19  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_24 -> m0_6  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_25 -> m0_0  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_79 -> m0_6  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_0  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_78  [key=0, style=bold, color=blue];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_42 -> m0_43  [key=0, style=solid];
m0_44 -> m0_0  [key=2, style=dotted];
m0_44 -> m0_36  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=0, style=solid];
m0_43 -> m0_35  [key=2, style=dotted];
m0_45 -> m0_42  [key=0, style=bold, color=blue];
m0_420 -> m0_469  [key=0, style=solid];
m0_469 -> m0_470  [key=0, style=solid];
m0_470 -> m0_420  [key=0, style=bold, color=blue];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_150  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_149 -> m0_147  [key=0, style=bold, color=blue];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_11 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_11 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_12 -> m0_6  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m0_12 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m0_12 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m0_13 -> m0_0  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_16  [key=0, style=solid];
m0_13 -> m0_20  [key=2, style=dotted];
m0_14 -> m0_11  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m0_14 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m0_14 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_574  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_572 -> m0_573  [key=0, style=solid];
m0_572 -> m0_581  [key=2, style=dotted];
m0_572 -> m0_578  [key=1, style=dashed, color=darkseagreen4, label=formattedMessage];
m0_572 -> m0_579  [key=1, style=dashed, color=darkseagreen4, label=formattedMessage];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_579  [key=0, style=solid];
m0_574 -> m0_582  [key=2, style=dotted];
m0_574 -> m0_577  [key=1, style=dashed, color=darkseagreen4, label=color];
m0_573 -> m0_574  [key=0, style=solid];
m0_578 -> m0_580  [key=0, style=solid];
m0_578 -> m0_583  [key=2, style=dotted];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_583  [key=2, style=dotted];
m0_575 -> m0_576  [key=0, style=solid];
m0_577 -> m0_578  [key=0, style=solid];
m0_576 -> m0_577  [key=0, style=solid];
m0_580 -> m0_571  [key=0, style=bold, color=blue];
m0_91 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_91 -> m0_92  [key=0, style=solid];
m0_93 -> m0_0  [key=2, style=dotted];
m0_93 -> m0_36  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_94  [key=0, style=solid];
m0_92 -> m0_86  [key=2, style=dotted];
m0_94 -> m0_91  [key=0, style=bold, color=blue];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_116 -> m0_117  [key=0, style=solid];
m0_118 -> m0_0  [key=2, style=dotted];
m0_118 -> m0_36  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=0, style=solid];
m0_117 -> m0_120  [key=2, style=dotted];
m0_119 -> m0_116  [key=0, style=bold, color=blue];
m0_334 -> m0_335  [key=0, style=solid];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_224  [key=2, style=dotted];
m0_336 -> m0_334  [key=0, style=bold, color=blue];
m0_221 -> m0_222  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_224  [key=2, style=dotted];
m0_223 -> m0_221  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid, color=red];
m0_7 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_8 -> m0_6  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_0  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_4  [key=0, style=bold, color=blue];
m0_10 -> m0_7  [key=0, style=bold, color=blue];
m0_87 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_87 -> m0_88  [key=0, style=solid];
m0_89 -> m0_41  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_90  [key=0, style=solid];
m0_88 -> m0_86  [key=2, style=dotted];
m0_90 -> m0_87  [key=0, style=bold, color=blue];
m0_270 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_270 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_270 -> m0_288  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_270 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_270 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_270 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_270 -> m0_277  [key=0, style=solid];
m0_280 -> m0_203  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_303  [key=2, style=dotted];
m0_284 -> m0_203  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_304  [key=2, style=dotted];
m0_288 -> m0_203  [key=2, style=dotted];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_305  [key=2, style=dotted];
m0_292 -> m0_203  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_306  [key=2, style=dotted];
m0_296 -> m0_203  [key=2, style=dotted];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_307  [key=2, style=dotted];
m0_299 -> m0_203  [key=2, style=dotted];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_308  [key=2, style=dotted];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_301  [key=0, style=solid];
m0_281 -> m0_302  [key=0, style=solid];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_301  [key=0, style=solid];
m0_285 -> m0_302  [key=0, style=solid];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_301  [key=0, style=solid];
m0_289 -> m0_302  [key=0, style=solid];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_301  [key=0, style=solid];
m0_293 -> m0_302  [key=0, style=solid];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_301  [key=0, style=solid];
m0_297 -> m0_302  [key=0, style=solid];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_301  [key=0, style=solid];
m0_300 -> m0_302  [key=0, style=solid];
m0_277 -> m0_298  [key=0, style=solid];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_282  [key=0, style=solid];
m0_277 -> m0_286  [key=0, style=solid];
m0_277 -> m0_290  [key=0, style=solid];
m0_277 -> m0_294  [key=0, style=solid];
m0_278 -> m0_279  [key=0, style=solid];
m0_301 -> m0_302  [key=0, style=solid];
m0_282 -> m0_283  [key=0, style=solid];
m0_286 -> m0_287  [key=0, style=solid];
m0_290 -> m0_291  [key=0, style=solid];
m0_294 -> m0_295  [key=0, style=solid];
m0_302 -> m0_270  [key=0, style=bold, color=blue];
m0_439 -> m0_440  [key=0, style=solid];
m0_454 -> m0_234  [key=2, style=dotted];
m0_454 -> m0_235  [key=2, style=dotted];
m0_454 -> m0_455  [key=0, style=solid];
m0_459 -> m0_234  [key=2, style=dotted];
m0_459 -> m0_235  [key=2, style=dotted];
m0_459 -> m0_460  [key=0, style=solid];
m0_463 -> m0_234  [key=2, style=dotted];
m0_463 -> m0_235  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_448 -> m0_231  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_448 -> m0_453  [key=1, style=dashed, color=darkseagreen4, label=isEnabledMethodInfo];
m0_455 -> m0_231  [key=2, style=dotted];
m0_455 -> m0_456  [key=0, style=solid];
m0_455 -> m0_458  [key=1, style=dashed, color=darkseagreen4, label=writeMethodInfo];
m0_460 -> m0_231  [key=2, style=dotted];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=writeExceptionMethodInfo];
m0_453 -> m0_233  [key=2, style=dotted];
m0_453 -> m0_454  [key=0, style=solid];
m0_462 -> m0_233  [key=2, style=dotted];
m0_462 -> m0_463  [key=0, style=solid];
m0_449 -> m0_454  [key=1, style=dashed, color=darkseagreen4, label=instanceParam];
m0_449 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label=instanceParam];
m0_449 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=instanceParam];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_466  [key=2, style=dotted];
m0_451 -> m0_454  [key=1, style=dashed, color=darkseagreen4, label=levelParam];
m0_451 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label=levelParam];
m0_451 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=levelParam];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_466  [key=2, style=dotted];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_468  [key=2, style=dotted];
m0_456 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label=messageParam];
m0_456 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=messageParam];
m0_456 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=messageParam];
m0_456 -> m0_458  [key=1, style=dashed, color=darkseagreen4, label=messageParam];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_466  [key=2, style=dotted];
m0_461 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=exceptionParam];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_466  [key=2, style=dotted];
m0_440 -> m0_448  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_460  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_224  [key=2, style=dotted];
m0_440 -> m0_441  [key=0, style=solid];
m0_440 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_443  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_444  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_445  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_446  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_440 -> m0_452  [key=1, style=dashed, color=darkseagreen4, label=logEventTypeType];
m0_447 -> m0_448  [key=0, style=solid];
m0_447 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label=loggerType];
m0_447 -> m0_460  [key=1, style=dashed, color=darkseagreen4, label=loggerType];
m0_447 -> m0_224  [key=2, style=dotted];
m0_447 -> m0_450  [key=1, style=dashed, color=darkseagreen4, label=loggerType];
m0_457 -> m0_344  [key=2, style=dotted];
m0_457 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=propertyValuesParam];
m0_457 -> m0_458  [key=0, style=solid];
m0_452 -> m0_453  [key=0, style=solid];
m0_452 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=levelCast];
m0_452 -> m0_458  [key=1, style=dashed, color=darkseagreen4, label=levelCast];
m0_452 -> m0_467  [key=2, style=dotted];
m0_450 -> m0_453  [key=1, style=dashed, color=darkseagreen4, label=instanceCast];
m0_450 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=instanceCast];
m0_450 -> m0_451  [key=0, style=solid];
m0_450 -> m0_458  [key=1, style=dashed, color=darkseagreen4, label=instanceCast];
m0_450 -> m0_467  [key=2, style=dotted];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_465  [key=2, style=dotted];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_465  [key=2, style=dotted];
m0_443 -> m0_444  [key=0, style=solid];
m0_443 -> m0_465  [key=2, style=dotted];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_465  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_465  [key=2, style=dotted];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_465  [key=2, style=dotted];
m0_464 -> m0_439  [key=0, style=bold, color=blue];
m0_326 -> m0_332  [key=0, style=solid];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_334  [key=2, style=dotted];
m0_333 -> m0_326  [key=0, style=bold, color=blue];
m0_74 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_74 -> m0_75  [key=0, style=solid];
m0_76 -> m0_0  [key=2, style=dotted];
m0_76 -> m0_36  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_75 -> m0_69  [key=2, style=dotted];
m0_77 -> m0_74  [key=0, style=bold, color=blue];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_153 -> m0_154  [key=0, style=solid];
m0_155 -> m0_159  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_158  [key=2, style=dotted];
m0_155 -> m0_145  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_157  [key=2, style=dotted];
m0_156 -> m0_153  [key=0, style=bold, color=blue];
m0_99 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_99 -> m0_100  [key=0, style=solid];
m0_101 -> m0_0  [key=2, style=dotted];
m0_101 -> m0_36  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=0, style=solid];
m0_100 -> m0_103  [key=2, style=dotted];
m0_102 -> m0_99  [key=0, style=bold, color=blue];
m0_31 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_45  [key=2, style=dotted];
m0_33 -> m0_0  [key=2, style=dotted];
m0_33 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_46  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=0, style=solid];
m0_32 -> m0_35  [key=2, style=dotted];
m0_32 -> m0_40  [key=0, style=solid];
m0_34 -> m0_31  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_47  [key=2, style=dotted];
m0_34 -> m0_46  [key=2, style=dotted];
m0_34 -> m0_23  [key=2, style=dotted];
m0_34 -> m0_48  [key=2, style=dotted];
m0_34 -> m0_49  [key=2, style=dotted];
m0_415 -> m0_421  [key=0, style=solid];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_423  [key=2, style=dotted];
m0_422 -> m0_415  [key=0, style=bold, color=blue];
m0_134 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_134 -> m0_135  [key=0, style=solid];
m0_136 -> m0_0  [key=2, style=dotted];
m0_136 -> m0_36  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_138  [key=2, style=dotted];
m0_137 -> m0_134  [key=0, style=bold, color=blue];
m0_375 -> m0_379  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_375 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_375 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_375 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_375 -> m0_394  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_375 -> m0_376  [key=0, style=solid];
m0_379 -> m0_203  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_272  [key=2, style=dotted];
m0_383 -> m0_203  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_273  [key=2, style=dotted];
m0_387 -> m0_203  [key=2, style=dotted];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_274  [key=2, style=dotted];
m0_391 -> m0_203  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_275  [key=2, style=dotted];
m0_394 -> m0_203  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_271  [key=2, style=dotted];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_396  [key=0, style=solid];
m0_380 -> m0_397  [key=0, style=solid];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_396  [key=0, style=solid];
m0_384 -> m0_397  [key=0, style=solid];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_396  [key=0, style=solid];
m0_388 -> m0_397  [key=0, style=solid];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_396  [key=0, style=solid];
m0_392 -> m0_397  [key=0, style=solid];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_396  [key=0, style=solid];
m0_395 -> m0_397  [key=0, style=solid];
m0_376 -> m0_393  [key=0, style=solid];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_381  [key=0, style=solid];
m0_376 -> m0_385  [key=0, style=solid];
m0_376 -> m0_389  [key=0, style=solid];
m0_377 -> m0_378  [key=0, style=solid];
m0_396 -> m0_397  [key=0, style=solid];
m0_381 -> m0_382  [key=0, style=solid];
m0_385 -> m0_386  [key=0, style=solid];
m0_389 -> m0_390  [key=0, style=solid];
m0_397 -> m0_375  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_17  [key=1, style=dashed, color=green, label="Hangfire.Logging.ILog"];
m0_15 -> m0_13  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_6  [key=2, style=dotted, color=green];
m0_16 -> m0_18  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_0  [key=2, style=dotted, color=green];
m0_17 -> m0_21  [key=2, style=dotted];
m0_18 -> m0_15  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid, color=green];
m0_21 -> m0_0  [key=2, style=dotted, color=green];
m0_435 -> m0_436  [key=0, style=solid];
m0_200 -> m0_191  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_198 -> m0_202  [key=0, style=solid];
m0_198 -> m0_203  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_204 -> m0_205  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_202 -> m0_197  [key=0, style=bold, color=blue];
m0_206 -> m0_204  [key=0, style=bold, color=blue];
m0_205 -> m0_206  [key=0, style=solid];
m0_168 -> m0_170  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_172 -> m0_174  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_164 -> m0_166  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_169 -> m0_167  [key=0, style=bold, color=blue];
m0_171 -> m0_172  [key=0, style=solid];
m0_173 -> m0_171  [key=0, style=bold, color=blue];
m0_163 -> m0_164  [key=0, style=solid];
m0_165 -> m0_163  [key=0, style=bold, color=blue];
m0_436 -> m0_437  [key=0, style=solid];
m0_436 -> m0_438  [key=2, style=dotted];
m0_437 -> m0_435  [key=0, style=bold, color=blue];
m0_19 -> m0_11  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_21  [key=1, style=dashed, color=green, label="Hangfire.Logging.ILog"];
m0_238 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_238 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_238 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_238 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_238 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_238 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_238 -> m0_241  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m0_238 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_238 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_246 -> m0_203  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_271  [key=2, style=dotted];
m0_250 -> m0_203  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_272  [key=2, style=dotted];
m0_254 -> m0_203  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_273  [key=2, style=dotted];
m0_258 -> m0_203  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_274  [key=2, style=dotted];
m0_262 -> m0_203  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_275  [key=2, style=dotted];
m0_265 -> m0_203  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_276  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_267  [key=0, style=solid];
m0_247 -> m0_268  [key=0, style=solid];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_267  [key=0, style=solid];
m0_251 -> m0_268  [key=0, style=solid];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_267  [key=0, style=solid];
m0_255 -> m0_268  [key=0, style=solid];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_267  [key=0, style=solid];
m0_259 -> m0_268  [key=0, style=solid];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_267  [key=0, style=solid];
m0_263 -> m0_268  [key=0, style=solid];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_267  [key=0, style=solid];
m0_266 -> m0_268  [key=0, style=solid];
m0_240 -> m0_268  [key=0, style=solid];
m0_240 -> m0_269  [key=2, style=dotted];
m0_242 -> m0_270  [key=2, style=dotted];
m0_242 -> m0_268  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_241  [key=0, style=solid];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_243  [key=0, style=solid];
m0_243 -> m0_264  [key=0, style=solid];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_248  [key=0, style=solid];
m0_243 -> m0_252  [key=0, style=solid];
m0_243 -> m0_256  [key=0, style=solid];
m0_243 -> m0_260  [key=0, style=solid];
m0_244 -> m0_245  [key=0, style=solid];
m0_267 -> m0_268  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_252 -> m0_253  [key=0, style=solid];
m0_256 -> m0_257  [key=0, style=solid];
m0_260 -> m0_261  [key=0, style=solid];
m0_268 -> m0_238  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_3 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_0  [key=2, style=dotted, color=green];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_211 -> m0_219  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_221  [key=2, style=dotted];
m0_220 -> m0_211  [key=0, style=bold, color=blue];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_217  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_218  [key=2, style=dotted];
m0_216 -> m0_214  [key=0, style=bold, color=blue];
m0_20 -> m0_27  [key=0, style=solid];
m0_20 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_20 -> m0_21  [key=0, style=solid, color=green];
m0_20 -> m0_6  [key=2, style=dotted, color=green];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> d41  [key=2, style=dotted];
m0_27 -> m0_30  [key=1, style=dashed, color=red, label=connection];
m0_27 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_27 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_27 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_42  [key=2, style=dotted];
m0_28 -> m0_6  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid, color=red];
m0_30 -> m0_44  [key=2, style=dotted, color=red];
m0_30 -> m0_34  [key=1, style=dashed, color=red, label=jobId];
m0_30 -> m0_37  [key=1, style=dashed, color=red, label=jobId];
m0_30 -> m0_27  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_50  [key=2, style=dotted];
m0_36 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m0_29 -> m0_30  [key=0, style=solid, color=red];
m0_29 -> m0_43  [key=2, style=dotted];
m0_29 -> m0_0  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_39  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_96 -> m0_6  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_0  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_95  [key=0, style=bold, color=blue];
m0_48 -> m0_46  [key=0, style=bold, color=blue];
m0_217 -> m0_236  [key=0, style=solid];
m0_236 -> m0_237  [key=0, style=solid];
m0_237 -> m0_217  [key=0, style=bold, color=blue];
m0_108 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_108 -> m0_109  [key=0, style=solid];
m0_110 -> m0_0  [key=2, style=dotted];
m0_110 -> m0_36  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [key=0, style=solid];
m0_109 -> m0_103  [key=2, style=dotted];
m0_111 -> m0_108  [key=0, style=bold, color=blue];
m0_121 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_121 -> m0_122  [key=0, style=solid];
m0_123 -> m0_41  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=0, style=solid];
m0_122 -> m0_120  [key=2, style=dotted];
m0_124 -> m0_121  [key=0, style=bold, color=blue];
m0_503 -> m0_508  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_503 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_503 -> m0_516  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_503 -> m0_520  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_503 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_503 -> m0_527  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_503 -> m0_505  [key=0, style=solid];
m0_508 -> m0_203  [key=2, style=dotted];
m0_508 -> m0_509  [key=0, style=solid];
m0_508 -> m0_531  [key=2, style=dotted];
m0_512 -> m0_203  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_512 -> m0_531  [key=2, style=dotted];
m0_516 -> m0_203  [key=2, style=dotted];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_531  [key=2, style=dotted];
m0_520 -> m0_203  [key=2, style=dotted];
m0_520 -> m0_521  [key=0, style=solid];
m0_520 -> m0_531  [key=2, style=dotted];
m0_524 -> m0_203  [key=2, style=dotted];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_531  [key=2, style=dotted];
m0_527 -> m0_203  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_527 -> m0_531  [key=2, style=dotted];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_529  [key=0, style=solid];
m0_507 -> m0_502  [key=2, style=dotted];
m0_509 -> m0_530  [key=0, style=solid];
m0_511 -> m0_512  [key=0, style=solid];
m0_511 -> m0_529  [key=0, style=solid];
m0_511 -> m0_502  [key=2, style=dotted];
m0_513 -> m0_530  [key=0, style=solid];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_529  [key=0, style=solid];
m0_515 -> m0_502  [key=2, style=dotted];
m0_517 -> m0_530  [key=0, style=solid];
m0_519 -> m0_520  [key=0, style=solid];
m0_519 -> m0_529  [key=0, style=solid];
m0_519 -> m0_502  [key=2, style=dotted];
m0_521 -> m0_530  [key=0, style=solid];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_529  [key=0, style=solid];
m0_523 -> m0_502  [key=2, style=dotted];
m0_525 -> m0_530  [key=0, style=solid];
m0_526 -> m0_527  [key=0, style=solid];
m0_526 -> m0_529  [key=0, style=solid];
m0_526 -> m0_502  [key=2, style=dotted];
m0_528 -> m0_530  [key=0, style=solid];
m0_505 -> m0_526  [key=0, style=solid];
m0_505 -> m0_506  [key=0, style=solid];
m0_505 -> m0_510  [key=0, style=solid];
m0_505 -> m0_514  [key=0, style=solid];
m0_505 -> m0_518  [key=0, style=solid];
m0_505 -> m0_522  [key=0, style=solid];
m0_506 -> m0_507  [key=0, style=solid];
m0_529 -> m0_530  [key=0, style=solid];
m0_510 -> m0_511  [key=0, style=solid];
m0_514 -> m0_515  [key=0, style=solid];
m0_518 -> m0_519  [key=0, style=solid];
m0_522 -> m0_523  [key=0, style=solid];
m0_530 -> m0_503  [key=0, style=bold, color=blue];
m0_174 -> m0_322  [key=0, style=solid];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_327  [key=2, style=dotted];
m0_322 -> m0_324  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_326  [key=2, style=dotted];
m0_323 -> m0_325  [key=0, style=solid];
m0_323 -> m0_212  [key=2, style=dotted];
m0_325 -> m0_174  [key=0, style=bold, color=blue];
m0_104 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_104 -> m0_105  [key=0, style=solid];
m0_106 -> m0_41  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_107  [key=0, style=solid];
m0_105 -> m0_103  [key=2, style=dotted];
m0_107 -> m0_104  [key=0, style=bold, color=blue];
m0_166 -> m0_411  [key=0, style=solid];
m0_413 -> m0_414  [key=0, style=solid];
m0_413 -> m0_416  [key=2, style=dotted];
m0_411 -> m0_413  [key=0, style=solid];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_415  [key=2, style=dotted];
m0_412 -> m0_414  [key=0, style=solid];
m0_412 -> m0_212  [key=2, style=dotted];
m0_414 -> m0_166  [key=0, style=bold, color=blue];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_343  [key=2, style=dotted];
m0_340 -> m0_344  [key=2, style=dotted];
m0_340 -> m0_233  [key=2, style=dotted];
m0_327 -> m0_337  [key=0, style=solid];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_334  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_234  [key=2, style=dotted];
m0_341 -> m0_235  [key=2, style=dotted];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_231  [key=2, style=dotted];
m0_338 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_339 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label=nameParam];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_232  [key=2, style=dotted];
m0_342 -> m0_327  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_0  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_62  [key=0, style=bold, color=blue];
m0_145 -> m0_146  [key=0, style=solid];
m0_146 -> m0_145  [key=0, style=bold, color=blue];
m0_416 -> m0_426  [key=0, style=solid];
m0_426 -> m0_427  [key=0, style=solid];
m0_426 -> m0_423  [key=2, style=dotted];
m0_433 -> m0_434  [key=0, style=solid];
m0_433 -> m0_436  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_231  [key=2, style=dotted];
m0_427 -> m0_431  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_234  [key=2, style=dotted];
m0_432 -> m0_235  [key=2, style=dotted];
m0_432 -> m0_436  [key=1, style=dashed, color=darkseagreen4, label=func];
m0_428 -> m0_432  [key=1, style=dashed, color=darkseagreen4, label=propertyNameParam];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_232  [key=2, style=dotted];
m0_428 -> m0_431  [key=1, style=dashed, color=darkseagreen4, label=propertyNameParam];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_233  [key=2, style=dotted];
m0_429 -> m0_432  [key=1, style=dashed, color=darkseagreen4, label=valueParam];
m0_429 -> m0_431  [key=1, style=dashed, color=darkseagreen4, label=valueParam];
m0_429 -> m0_232  [key=2, style=dotted];
m0_429 -> m0_430  [key=0, style=solid];
m0_430 -> m0_432  [key=1, style=dashed, color=darkseagreen4, label=destructureObjectsParam];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_232  [key=2, style=dotted];
m0_434 -> m0_416  [key=0, style=bold, color=blue];
m0_269 -> m0_309  [key=0, style=solid];
m0_311 -> m0_321  [key=0, style=solid];
m0_313 -> m0_321  [key=0, style=solid];
m0_315 -> m0_321  [key=0, style=solid];
m0_317 -> m0_321  [key=0, style=solid];
m0_319 -> m0_321  [key=0, style=solid];
m0_320 -> m0_321  [key=0, style=solid];
m0_310 -> m0_311  [key=0, style=solid];
m0_312 -> m0_313  [key=0, style=solid];
m0_314 -> m0_315  [key=0, style=solid];
m0_316 -> m0_317  [key=0, style=solid];
m0_318 -> m0_319  [key=0, style=solid];
m0_309 -> m0_320  [key=0, style=solid];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_312  [key=0, style=solid];
m0_309 -> m0_314  [key=0, style=solid];
m0_309 -> m0_316  [key=0, style=solid];
m0_309 -> m0_318  [key=0, style=solid];
m0_321 -> m0_269  [key=0, style=bold, color=blue];
m0_471 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_471 -> m0_483  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_471 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_471 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_471 -> m0_495  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_471 -> m0_498  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_471 -> m0_474  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m0_471 -> m0_475  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_471 -> m0_476  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_479 -> m0_203  [key=2, style=dotted];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_504  [key=2, style=dotted];
m0_483 -> m0_203  [key=2, style=dotted];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_504  [key=2, style=dotted];
m0_487 -> m0_203  [key=2, style=dotted];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_504  [key=2, style=dotted];
m0_491 -> m0_203  [key=2, style=dotted];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_504  [key=2, style=dotted];
m0_495 -> m0_203  [key=2, style=dotted];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_504  [key=2, style=dotted];
m0_498 -> m0_203  [key=2, style=dotted];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_504  [key=2, style=dotted];
m0_478 -> m0_479  [key=0, style=solid];
m0_478 -> m0_500  [key=0, style=solid];
m0_478 -> m0_502  [key=2, style=dotted];
m0_480 -> m0_501  [key=0, style=solid];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_500  [key=0, style=solid];
m0_482 -> m0_502  [key=2, style=dotted];
m0_484 -> m0_501  [key=0, style=solid];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_500  [key=0, style=solid];
m0_486 -> m0_502  [key=2, style=dotted];
m0_488 -> m0_501  [key=0, style=solid];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_500  [key=0, style=solid];
m0_490 -> m0_502  [key=2, style=dotted];
m0_492 -> m0_501  [key=0, style=solid];
m0_494 -> m0_495  [key=0, style=solid];
m0_494 -> m0_500  [key=0, style=solid];
m0_494 -> m0_502  [key=2, style=dotted];
m0_496 -> m0_501  [key=0, style=solid];
m0_497 -> m0_498  [key=0, style=solid];
m0_497 -> m0_500  [key=0, style=solid];
m0_497 -> m0_502  [key=2, style=dotted];
m0_499 -> m0_501  [key=0, style=solid];
m0_473 -> m0_501  [key=0, style=solid];
m0_473 -> m0_502  [key=2, style=dotted];
m0_475 -> m0_503  [key=2, style=dotted];
m0_475 -> m0_501  [key=0, style=solid];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_474  [key=0, style=solid];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_476  [key=0, style=solid];
m0_476 -> m0_497  [key=0, style=solid];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_481  [key=0, style=solid];
m0_476 -> m0_485  [key=0, style=solid];
m0_476 -> m0_489  [key=0, style=solid];
m0_476 -> m0_493  [key=0, style=solid];
m0_477 -> m0_478  [key=0, style=solid];
m0_500 -> m0_501  [key=0, style=solid];
m0_481 -> m0_482  [key=0, style=solid];
m0_485 -> m0_486  [key=0, style=solid];
m0_489 -> m0_490  [key=0, style=solid];
m0_493 -> m0_494  [key=0, style=solid];
m0_501 -> m0_471  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=red, label="Hangfire.States.IBackgroundJobStateChanger"];
m0_4 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_4 -> m0_0  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid, color=red];
m0_5 -> m0_2  [key=0, style=bold, color=blue];
m0_70 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_70 -> m0_71  [key=0, style=solid];
m0_72 -> m0_41  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [key=0, style=solid];
m0_71 -> m0_69  [key=2, style=dotted];
m0_73 -> m0_70  [key=0, style=bold, color=blue];
m0_157 -> m0_175  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_178  [key=0, style=solid];
m0_175 -> m0_180  [key=0, style=solid];
m0_175 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=providerResolver];
m0_180 -> m0_181  [key=0, style=solid];
m0_177 -> m0_181  [key=0, style=solid];
m0_177 -> m0_183  [key=2, style=dotted];
m0_176 -> m0_175  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_182  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_184  [key=2, style=dotted];
m0_179 -> m0_185  [key=2, style=dotted];
m0_181 -> m0_157  [key=0, style=bold, color=blue];
m0_565 -> m0_568  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_565 -> m0_566  [key=0, style=solid];
m0_568 -> m0_203  [key=2, style=dotted];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_571  [key=2, style=dotted];
m0_566 -> m0_568  [key=0, style=solid];
m0_566 -> m0_567  [key=0, style=solid];
m0_569 -> m0_570  [key=0, style=solid];
m0_567 -> m0_570  [key=0, style=solid];
m0_570 -> m0_565  [key=0, style=bold, color=blue];
m0_347 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_347 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_347 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_347 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_347 -> m0_370  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_347 -> m0_350  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m0_347 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_347 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_355 -> m0_203  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_272  [key=2, style=dotted];
m0_359 -> m0_203  [key=2, style=dotted];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_273  [key=2, style=dotted];
m0_363 -> m0_203  [key=2, style=dotted];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_274  [key=2, style=dotted];
m0_367 -> m0_203  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_275  [key=2, style=dotted];
m0_370 -> m0_203  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_271  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_372  [key=0, style=solid];
m0_356 -> m0_373  [key=0, style=solid];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_372  [key=0, style=solid];
m0_360 -> m0_373  [key=0, style=solid];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_372  [key=0, style=solid];
m0_364 -> m0_373  [key=0, style=solid];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_372  [key=0, style=solid];
m0_368 -> m0_373  [key=0, style=solid];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_372  [key=0, style=solid];
m0_371 -> m0_373  [key=0, style=solid];
m0_349 -> m0_373  [key=0, style=solid];
m0_349 -> m0_374  [key=2, style=dotted];
m0_351 -> m0_375  [key=2, style=dotted];
m0_351 -> m0_373  [key=0, style=solid];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_350  [key=0, style=solid];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_352  [key=0, style=solid];
m0_352 -> m0_369  [key=0, style=solid];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_357  [key=0, style=solid];
m0_352 -> m0_361  [key=0, style=solid];
m0_352 -> m0_365  [key=0, style=solid];
m0_353 -> m0_354  [key=0, style=solid];
m0_372 -> m0_373  [key=0, style=solid];
m0_357 -> m0_358  [key=0, style=solid];
m0_361 -> m0_362  [key=0, style=solid];
m0_365 -> m0_366  [key=0, style=solid];
m0_373 -> m0_347  [key=0, style=bold, color=blue];
m0_213 -> m0_225  [key=0, style=solid];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_221  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_234  [key=2, style=dotted];
m0_229 -> m0_235  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_231  [key=2, style=dotted];
m0_226 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_227 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label=nameParam];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_232  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_233  [key=2, style=dotted];
m0_230 -> m0_213  [key=0, style=bold, color=blue];
m0_159 -> m0_189  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_190 -> m0_159  [key=0, style=bold, color=blue];
m0_170 -> m0_207  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_213  [key=2, style=dotted];
m0_207 -> m0_209  [key=0, style=solid];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_211  [key=2, style=dotted];
m0_208 -> m0_210  [key=0, style=solid];
m0_208 -> m0_212  [key=2, style=dotted];
m0_210 -> m0_170  [key=0, style=bold, color=blue];
m0_58 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_58 -> m0_59  [key=0, style=solid];
m0_60 -> m0_0  [key=2, style=dotted];
m0_60 -> m0_36  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_59 -> m0_53  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=0, style=solid];
m0_61 -> m0_58  [key=0, style=bold, color=blue];
m0_191 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_191 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogLevel"];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_191 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_193 -> m0_0  [key=2, style=dotted];
m0_193 -> m0_196  [key=0, style=solid];
m0_195 -> m0_0  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_194  [key=0, style=solid];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=ex];
m0_196 -> m0_191  [key=0, style=bold, color=blue];
m0_65 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_65 -> m0_66  [key=0, style=solid];
m0_67 -> m0_0  [key=2, style=dotted];
m0_67 -> m0_36  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [key=0, style=solid];
m0_66 -> m0_69  [key=2, style=dotted];
m0_68 -> m0_65  [key=0, style=bold, color=blue];
m0_82 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_82 -> m0_83  [key=0, style=solid];
m0_84 -> m0_0  [key=2, style=dotted];
m0_84 -> m0_36  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [key=0, style=solid];
m0_83 -> m0_86  [key=2, style=dotted];
m0_85 -> m0_82  [key=0, style=bold, color=blue];
m0_328 -> m0_329  [key=0, style=solid];
m0_329 -> m0_331  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_218  [key=2, style=dotted];
m0_330 -> m0_328  [key=0, style=bold, color=blue];
m0_537 -> m0_538  [key=0, style=solid];
m0_538 -> m0_540  [key=2, style=dotted];
m0_538 -> m0_539  [key=0, style=solid];
m0_539 -> m0_537  [key=0, style=bold, color=blue];
m0_417 -> m0_418  [key=0, style=solid];
m0_418 -> m0_420  [key=2, style=dotted];
m0_418 -> m0_419  [key=0, style=solid];
m0_418 -> m0_218  [key=2, style=dotted];
m0_419 -> m0_417  [key=0, style=bold, color=blue];
m0_125 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_125 -> m0_126  [key=0, style=solid];
m0_127 -> m0_0  [key=2, style=dotted];
m0_127 -> m0_36  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_128  [key=0, style=solid];
m0_126 -> m0_120  [key=2, style=dotted];
m0_128 -> m0_125  [key=0, style=bold, color=blue];
m0_374 -> m0_398  [key=0, style=solid];
m0_400 -> m0_410  [key=0, style=solid];
m0_402 -> m0_410  [key=0, style=solid];
m0_404 -> m0_410  [key=0, style=solid];
m0_406 -> m0_410  [key=0, style=solid];
m0_408 -> m0_410  [key=0, style=solid];
m0_409 -> m0_410  [key=0, style=solid];
m0_399 -> m0_400  [key=0, style=solid];
m0_401 -> m0_402  [key=0, style=solid];
m0_403 -> m0_404  [key=0, style=solid];
m0_405 -> m0_406  [key=0, style=solid];
m0_407 -> m0_408  [key=0, style=solid];
m0_398 -> m0_409  [key=0, style=solid];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_401  [key=0, style=solid];
m0_398 -> m0_403  [key=0, style=solid];
m0_398 -> m0_405  [key=0, style=solid];
m0_398 -> m0_407  [key=0, style=solid];
m0_410 -> m0_374  [key=0, style=bold, color=blue];
m0_150 -> m0_151  [key=0, style=solid];
m0_151 -> m0_153  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_152 -> m0_150  [key=0, style=bold, color=blue];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_113 -> m0_6  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_0  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_112  [key=0, style=bold, color=blue];
m0_584 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LoggerExecutionWrapper"];
m0_584 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LoggerExecutionWrapper"];
m0_584 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LoggerExecutionWrapper"];
m0_584 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LoggerExecutionWrapper"];
m0_584 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LoggerExecutionWrapper"];
m0_585 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string>"];
m0_587 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_245  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_253  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_298  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_587 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider.NLogLogger"];
m0_589 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_370  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_379  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_394  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_382  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_400  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_404  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_408  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_589 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider.Log4NetLogger"];
m0_592 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_483  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_495  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_498  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_508  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_516  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_520  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_527  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_469  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_475  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_478  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_482  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_486  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_490  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_494  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_497  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_507  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_511  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_515  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_519  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_523  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_592 -> m0_526  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider.SerilogLogger"];
m0_593 -> m0_568  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger"];
m0_593 -> m0_563  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger"];
m0_593 -> m0_572  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogger"];
m0_586 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider"];
m0_586 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.NLogLogProvider"];
m0_588 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider"];
m0_588 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.Log4NetLogProvider"];
m0_590 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider"];
m0_590 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.LogProviders.SerilogLogProvider"];
m0_591 -> m0_436  [key=1, style=dashed, color=darkseagreen4, label=func];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RouteCollection"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>"];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_0 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m1_0 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RouteCollection"];
m1_0 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_10  [key=2, style=dotted];
m1_7 -> m1_9  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_5  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_2 -> m1_11  [key=0, style=solid];
m1_2 -> d10  [key=2, style=dotted];
m1_2 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_4 -> m1_11  [key=0, style=solid];
m1_4 -> d10  [key=2, style=dotted];
m1_6 -> m1_11  [key=0, style=solid];
m1_6 -> d10  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_11 -> m1_0  [key=0, style=bold, color=blue];
m1_11 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_11 -> m1_12  [key=0, style=solid];
m1_30 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMiddleware"];
m1_30 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMiddleware"];
m1_30 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMiddleware"];
m1_30 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMiddleware"];
m1_30 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMiddleware"];
m1_30 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMiddleware"];
m1_30 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMiddleware"];
m1_43 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_43 -> m1_44  [key=0, style=solid];
m1_53 -> m1_61  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_53 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_54 -> m1_61  [key=2, style=dotted];
m1_54 -> m1_51  [key=0, style=solid];
m1_54 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_54 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_47 -> m1_59  [key=2, style=dotted];
m1_47 -> m1_57  [key=0, style=solid];
m1_48 -> m1_59  [key=2, style=dotted];
m1_48 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_48 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_48 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_49 -> m1_59  [key=2, style=dotted];
m1_49 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_49 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_49 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_55 -> m1_62  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_50 -> m1_60  [key=2, style=dotted];
m1_50 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_50 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_50 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_50 -> m1_51  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_52 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_52 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_52 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_52 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_52 -> m1_51  [key=3, color=darkorchid, style=bold, label="Local variable var job"];
m1_51 -> m1_55  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_63  [key=2, style=dotted];
m1_56 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_56 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_45 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m1_45 -> m1_58  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_57 -> m1_43  [key=0, style=bold, color=blue];
m1_27 -> m1_23  [key=0, style=bold, color=blue];
m1_23 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_13  [key=0, style=bold, color=blue];
m1_26 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_29  [key=2, style=dotted];
m1_26 -> m1_30  [key=2, style=dotted];
m1_26 -> m1_31  [key=2, style=dotted];
m1_26 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_173 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_324  [key=0, style=solid];
m1_173 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_173 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m1_335 -> m1_114  [key=2, style=dotted];
m1_335 -> m1_115  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_335 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_331 -> m1_61  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_331 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_333 -> m1_61  [key=2, style=dotted];
m1_333 -> m1_329  [key=0, style=solid];
m1_333 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_333 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_334 -> m1_62  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_326 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_337  [key=2, style=dotted];
m1_326 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_327 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_337  [key=2, style=dotted];
m1_327 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_328 -> m1_60  [key=2, style=dotted];
m1_328 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_328 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_328 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_328 -> m1_329  [key=0, style=solid];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_329  [key=3, color=darkorchid, style=bold, label="Local variable string id"];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_329  [key=0, style=solid];
m1_329 -> m1_334  [key=0, style=solid];
m1_329 -> m1_330  [key=0, style=solid];
m1_325 -> m1_113  [key=2, style=dotted];
m1_325 -> m1_336  [key=0, style=solid];
m1_324 -> m1_326  [key=0, style=solid];
m1_324 -> m1_325  [key=0, style=solid];
m1_336 -> m1_173  [key=0, style=bold, color=blue];
m1_13 -> m1_10  [key=2, style=dotted];
m1_13 -> m1_9  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=IOwinContext];
m1_13 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=IOwinContext];
m1_13 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=IOwinContext];
m1_13 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=IOwinContext];
m1_12 -> m1_13  [key=0, style=solid];
m1_14 -> m1_11  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_24  [key=2, style=dotted];
m1_14 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=dispatcher];
m1_14 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=dispatcher];
m1_219 -> m1_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_219 -> m1_278  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats"];
m1_219 -> m1_269  [key=0, style=solid];
m1_219 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_219 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_276 -> m1_114  [key=2, style=dotted];
m1_276 -> m1_115  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_278 -> m1_59  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_278 -> m1_286  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_270 -> m1_276  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_270 -> m1_113  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_270 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_270 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_272 -> m1_276  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_289  [key=2, style=dotted];
m1_277 -> m1_282  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_279 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_279 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_292  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_269 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_161  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_271 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_175  [key=2, style=dotted];
m1_280 -> m1_161  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_280 -> m1_286  [key=0, style=solid];
m1_280 -> m1_281  [key=0, style=solid];
m1_275 -> m1_272  [key=0, style=solid];
m1_275 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_282 -> m1_284  [key=0, style=solid];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_290  [key=2, style=dotted];
m1_282 -> m1_291  [key=2, style=dotted];
m1_285 -> m1_280  [key=0, style=solid];
m1_285 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_283 -> m1_284  [key=0, style=solid];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_274 -> m1_288  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_287 -> m1_219  [key=0, style=bold, color=blue];
m1_236 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_236 -> m1_229  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueScheduled"];
m1_238 -> m1_76  [key=2, style=dotted];
m1_238 -> m1_9  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_237 -> m1_238  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_232  [key=2, style=dotted];
m1_239 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_234  [key=2, style=dotted];
m1_242 -> m1_235  [key=2, style=dotted];
m1_240 -> m1_242  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_233  [key=2, style=dotted];
m1_241 -> m1_243  [key=0, style=solid];
m1_243 -> m1_236  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid, color=green];
m1_116 -> m1_117  [key=0, style=solid, color=green];
m1_119 -> m1_120  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid, color=green];
m1_130 -> m1_132  [key=2, style=dotted, color=green];
m1_130 -> m1_133  [key=2, style=dotted, color=green];
m1_130 -> m1_134  [key=2, style=dotted, color=green];
m1_130 -> m1_38  [key=2, style=dotted, color=green];
m1_131 -> m1_129  [key=0, style=bold, color=blue];
m1_117 -> m1_118  [key=0, style=solid, color=green];
m1_117 -> m1_67  [key=2, style=dotted, color=green];
m1_117 -> m1_68  [key=2, style=dotted, color=green];
m1_118 -> m1_116  [key=0, style=bold, color=blue];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_72  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_72  [key=2, style=dotted];
m1_123 -> m1_67  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_125  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_121 -> m1_119  [key=0, style=bold, color=blue];
m1_33 -> m1_38  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=2, style=dotted];
m1_33 -> m1_36  [key=2, style=dotted];
m1_33 -> m1_37  [key=2, style=dotted];
m1_33 -> m1_39  [key=2, style=dotted];
m1_142 -> m1_38  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_144  [key=2, style=dotted];
m1_142 -> m1_37  [key=2, style=dotted];
m1_142 -> m1_36  [key=2, style=dotted];
m1_142 -> m1_39  [key=2, style=dotted];
m1_152 -> m1_38  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=2, style=dotted];
m1_152 -> m1_37  [key=2, style=dotted];
m1_152 -> m1_36  [key=2, style=dotted];
m1_152 -> m1_39  [key=2, style=dotted];
m1_195 -> m1_38  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_197  [key=2, style=dotted];
m1_195 -> m1_36  [key=2, style=dotted];
m1_195 -> m1_39  [key=2, style=dotted];
m1_204 -> m1_38  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_197  [key=2, style=dotted];
m1_204 -> m1_36  [key=2, style=dotted];
m1_204 -> m1_39  [key=2, style=dotted];
m1_212 -> m1_38  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_214  [key=2, style=dotted];
m1_212 -> m1_36  [key=2, style=dotted];
m1_65 -> m1_67  [key=2, style=dotted];
m1_65 -> m1_68  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_74 -> m1_67  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=2, style=dotted];
m1_177 -> m1_67  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_150  [key=2, style=dotted];
m1_183 -> m1_67  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_10  [key=2, style=dotted];
m1_189 -> m1_67  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_10  [key=2, style=dotted];
m1_322 -> m1_67  [key=2, style=dotted];
m1_322 -> m1_323  [key=0, style=solid];
m1_427 -> m1_67  [key=2, style=dotted];
m1_427 -> m1_428  [key=0, style=solid];
m1_427 -> m1_10  [key=2, style=dotted];
m1_339 -> m1_68  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_9  [key=2, style=dotted];
m1_347 -> m1_68  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_9  [key=2, style=dotted];
m1_128 -> m1_126  [key=0, style=bold, color=blue];
m1_293 -> m1_294  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_318 -> m1_319  [key=0, style=solid];
m1_353 -> m1_354  [key=0, style=solid];
m1_356 -> m1_357  [key=0, style=solid];
m1_124 -> m1_122  [key=0, style=bold, color=blue];
m1_64 -> m1_65  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_185 -> m1_186  [key=0, style=solid];
m1_188 -> m1_189  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label="?"];
m1_346 -> m1_347  [key=0, style=solid];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label="?"];
m1_387 -> m1_388  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_394 -> m1_395  [key=0, style=solid];
m1_397 -> m1_398  [key=0, style=solid];
m1_400 -> m1_401  [key=0, style=solid];
m1_403 -> m1_404  [key=0, style=solid];
m1_406 -> m1_407  [key=0, style=solid];
m1_409 -> m1_410  [key=0, style=solid];
m1_412 -> m1_413  [key=0, style=solid];
m1_416 -> m1_417  [key=0, style=solid];
m1_420 -> m1_421  [key=0, style=solid];
m1_423 -> m1_424  [key=0, style=solid];
m1_426 -> m1_427  [key=0, style=solid];
m1_429 -> m1_430  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_34 -> m1_32  [key=0, style=bold, color=blue];
m1_141 -> m1_142  [key=0, style=solid];
m1_143 -> m1_141  [key=0, style=bold, color=blue];
m1_151 -> m1_152  [key=0, style=solid];
m1_153 -> m1_151  [key=0, style=bold, color=blue];
m1_194 -> m1_195  [key=0, style=solid];
m1_196 -> m1_194  [key=0, style=bold, color=blue];
m1_203 -> m1_204  [key=0, style=solid];
m1_205 -> m1_203  [key=0, style=bold, color=blue];
m1_211 -> m1_212  [key=0, style=solid];
m1_213 -> m1_211  [key=0, style=bold, color=blue];
m1_66 -> m1_64  [key=0, style=bold, color=blue];
m1_75 -> m1_73  [key=0, style=bold, color=blue];
m1_178 -> m1_176  [key=0, style=bold, color=blue];
m1_184 -> m1_182  [key=0, style=bold, color=blue];
m1_190 -> m1_188  [key=0, style=bold, color=blue];
m1_323 -> m1_321  [key=0, style=bold, color=blue];
m1_428 -> m1_426  [key=0, style=bold, color=blue];
m1_340 -> m1_338  [key=0, style=bold, color=blue];
m1_348 -> m1_346  [key=0, style=bold, color=blue];
m1_70 -> m1_72  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_84 -> m1_36  [key=2, style=dotted];
m1_84 -> m1_37  [key=2, style=dotted];
m1_84 -> m1_39  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_87  [key=2, style=dotted];
m1_78 -> m1_72  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_343 -> m1_72  [key=2, style=dotted];
m1_343 -> m1_344  [key=0, style=solid];
m1_351 -> m1_72  [key=2, style=dotted];
m1_351 -> m1_352  [key=0, style=solid];
m1_259 -> m1_260  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_266 -> m1_267  [key=0, style=solid];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_296  [key=2, style=dotted];
m1_294 -> m1_297  [key=2, style=dotted];
m1_295 -> m1_293  [key=0, style=bold, color=blue];
m1_320 -> m1_318  [key=0, style=bold, color=blue];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_296  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_359  [key=2, style=dotted];
m1_357 -> m1_360  [key=2, style=dotted];
m1_357 -> m1_361  [key=2, style=dotted];
m1_357 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_344  [key=0, style=solid];
m1_342 -> m1_345  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_345  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_352  [key=0, style=solid];
m1_350 -> m1_345  [key=2, style=dotted];
m1_355 -> m1_353  [key=0, style=bold, color=blue];
m1_358 -> m1_356  [key=0, style=bold, color=blue];
m1_71 -> m1_69  [key=0, style=bold, color=blue];
m1_79 -> m1_77  [key=0, style=bold, color=blue];
m1_181 -> m1_179  [key=0, style=bold, color=blue];
m1_180 -> m1_181  [key=0, style=solid];
m1_187 -> m1_185  [key=0, style=bold, color=blue];
m1_186 -> m1_187  [key=0, style=solid];
m1_193 -> m1_191  [key=0, style=bold, color=blue];
m1_192 -> m1_193  [key=0, style=solid];
m1_344 -> m1_341  [key=0, style=bold, color=blue];
m1_352 -> m1_349  [key=0, style=bold, color=blue];
m1_392 -> m1_393  [key=0, style=solid];
m1_398 -> m1_399  [key=0, style=solid];
m1_404 -> m1_405  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_417 -> m1_418  [key=0, style=solid];
m1_417 -> m1_419  [key=2, style=dotted];
m1_424 -> m1_425  [key=0, style=solid];
m1_430 -> m1_431  [key=0, style=solid];
m1_389 -> m1_387  [key=0, style=bold, color=blue];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_390  [key=2, style=dotted];
m1_393 -> m1_391  [key=0, style=bold, color=blue];
m1_396 -> m1_394  [key=0, style=bold, color=blue];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_390  [key=2, style=dotted];
m1_399 -> m1_397  [key=0, style=bold, color=blue];
m1_402 -> m1_400  [key=0, style=bold, color=blue];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_4  [key=2, style=dotted];
m1_405 -> m1_403  [key=0, style=bold, color=blue];
m1_408 -> m1_406  [key=0, style=bold, color=blue];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_4  [key=2, style=dotted];
m1_411 -> m1_409  [key=0, style=bold, color=blue];
m1_414 -> m1_412  [key=0, style=bold, color=blue];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_415  [key=2, style=dotted];
m1_418 -> m1_416  [key=0, style=bold, color=blue];
m1_422 -> m1_420  [key=0, style=bold, color=blue];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_4  [key=2, style=dotted];
m1_425 -> m1_423  [key=0, style=bold, color=blue];
m1_431 -> m1_429  [key=0, style=bold, color=blue];
m1_80 -> m1_81  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_85 -> m1_83  [key=0, style=bold, color=blue];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_262  [key=2, style=dotted];
m1_261 -> m1_259  [key=0, style=bold, color=blue];
m1_265 -> m1_263  [key=0, style=bold, color=blue];
m1_264 -> m1_265  [key=0, style=solid];
m1_268 -> m1_266  [key=0, style=bold, color=blue];
m1_267 -> m1_268  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_82 -> m1_80  [key=0, style=bold, color=blue];
m1_81 -> m1_82  [key=0, style=solid];
m1_364 -> m1_362  [key=0, style=bold, color=blue];
m1_363 -> m1_364  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m1_42 -> m1_40  [key=0, style=bold, color=blue];
m1_220 -> m1_219  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m1_220 -> m1_221  [key=0, style=solid];
m1_222 -> m1_219  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_221 -> m1_222  [key=0, style=solid];
m1_223 -> m1_220  [key=0, style=bold, color=blue];
m1_135 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_135 -> m1_136  [key=0, style=solid];
m1_138 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_29  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_140  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_139 -> m1_135  [key=0, style=bold, color=blue];
m1_145 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_145 -> m1_146  [key=0, style=solid];
m1_148 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_29  [key=2, style=dotted];
m1_147 -> m1_150  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_149 -> m1_145  [key=0, style=bold, color=blue];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_158  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Web.QueueWithTopEnqueuedJobsDto> Queues"];
m1_164 -> m1_61  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_164 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_164 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m1_165 -> m1_61  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_165 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_165 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=length];
m1_166 -> m1_61  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_166 -> m1_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_166 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m1_157 -> m1_112  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_167 -> m1_62  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_163 -> m1_60  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_163 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_163 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_159 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_170  [key=0, style=solid];
m1_159 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_160 -> m1_164  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IList<string> firstJobIds"];
m1_160 -> m1_160  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IList<string> firstJobIds"];
m1_160 -> m1_161  [key=0, style=solid];
m1_168 -> m1_173  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_161 -> m1_165  [key=3, color=darkorchid, style=bold, label="Local variable long length"];
m1_161 -> m1_161  [key=3, color=darkorchid, style=bold, label="Local variable long length"];
m1_161 -> m1_162  [key=0, style=solid];
m1_169 -> m1_159  [key=0, style=solid];
m1_169 -> m1_174  [key=2, style=dotted];
m1_169 -> m1_175  [key=2, style=dotted];
m1_162 -> m1_166  [key=3, color=darkorchid, style=bold, label="Local variable long dequeued"];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_161  [key=3, color=darkorchid, style=bold, label="Local variable long dequeued"];
m1_156 -> m1_157  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_158 -> m1_172  [key=2, style=dotted];
m1_158 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_170 -> m1_171  [key=0, style=solid];
m1_171 -> m1_155  [key=0, style=bold, color=blue];
m1_88 -> m1_92  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m1_88 -> m1_89  [key=0, style=solid];
m1_90 -> m1_92  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_91 -> m1_88  [key=0, style=bold, color=blue];
m1_97 -> m1_98  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid, color=green];
m1_110 -> m1_114  [key=2, style=dotted, color=green];
m1_110 -> m1_115  [key=2, style=dotted, color=green];
m1_110 -> m1_129  [key=1, style=dashed, color=green, label="lambda expression"];
m1_99 -> m1_110  [key=1, style=dashed, color=green, label=serverNames];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_112  [key=2, style=dotted];
m1_99 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m1_102 -> m1_110  [key=1, style=dashed, color=green, label=servers];
m1_102 -> m1_107  [key=1, style=dashed, color=green, label=servers];
m1_102 -> m1_130  [key=1, style=dashed, color=green, label=servers];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_59  [key=2, style=dotted];
m1_102 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_103 -> m1_110  [key=1, style=dashed, color=green, label=queues];
m1_103 -> m1_130  [key=1, style=dashed, color=green, label=queues];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_59  [key=2, style=dotted];
m1_103 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_103 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_109 -> m1_110  [key=0, style=solid, color=green];
m1_109 -> m1_62  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid, color=green];
m1_107 -> m1_61  [key=2, style=dotted, color=green];
m1_107 -> m1_116  [key=1, style=dashed, color=green, label="lambda expression"];
m1_107 -> m1_119  [key=1, style=dashed, color=green, label="lambda expression"];
m1_104 -> m1_107  [key=1, style=dashed, color=green, label=pipeline];
m1_104 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_60  [key=2, style=dotted];
m1_104 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_106 -> m1_107  [key=0, style=solid, color=green];
m1_106 -> m1_117  [key=1, style=dashed, color=green, label=name];
m1_106 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_105  [key=3, color=darkorchid, style=bold, label="Local variable var name"];
m1_108 -> m1_105  [key=0, style=solid];
m1_108 -> m1_61  [key=2, style=dotted];
m1_108 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_108 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_98 -> m1_99  [key=0, style=solid];
m1_100 -> m1_102  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_105 -> m1_109  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_101 -> m1_111  [key=0, style=solid];
m1_101 -> m1_113  [key=2, style=dotted];
m1_111 -> m1_97  [key=0, style=bold, color=blue];
m1_369 -> m1_371  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Web.StatisticsDto GetStatistics"];
m1_369 -> m1_370  [key=0, style=solid];
m1_374 -> m1_61  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_374 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_375 -> m1_61  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_375 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_376 -> m1_61  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_376 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_377 -> m1_61  [key=2, style=dotted];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_377 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_378 -> m1_61  [key=2, style=dotted];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_378 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_379 -> m1_61  [key=2, style=dotted];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_379 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_382 -> m1_61  [key=2, style=dotted];
m1_382 -> m1_380  [key=0, style=solid];
m1_382 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_382 -> m1_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_372 -> m1_112  [key=2, style=dotted];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_383 -> m1_62  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_373 -> m1_60  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_376  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_378  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_371 -> m1_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_376  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_378  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_386  [key=2, style=dotted];
m1_371 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_380 -> m1_383  [key=0, style=solid];
m1_380 -> m1_381  [key=0, style=solid];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m1_381 -> m1_380  [key=3, color=darkorchid, style=bold, label="Local variable var queueName"];
m1_384 -> m1_385  [key=0, style=solid];
m1_370 -> m1_371  [key=0, style=solid];
m1_385 -> m1_369  [key=0, style=bold, color=blue];
m1_365 -> m1_366  [key=0, style=solid];
m1_367 -> m1_10  [key=2, style=dotted];
m1_367 -> m1_368  [key=0, style=solid];
m1_366 -> m1_367  [key=0, style=solid];
m1_368 -> m1_365  [key=0, style=bold, color=blue];
m1_215 -> m1_219  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m1_215 -> m1_216  [key=0, style=solid];
m1_217 -> m1_219  [key=2, style=dotted];
m1_217 -> m1_218  [key=0, style=solid];
m1_216 -> m1_217  [key=0, style=solid];
m1_218 -> m1_215  [key=0, style=bold, color=blue];
m1_92 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_92 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_92 -> m1_307  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m1_92 -> m1_298  [key=0, style=solid];
m1_92 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_305 -> m1_114  [key=2, style=dotted];
m1_305 -> m1_115  [key=2, style=dotted];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_304 -> m1_114  [key=2, style=dotted];
m1_304 -> m1_115  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_304 -> m1_309  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m1_307 -> m1_59  [key=2, style=dotted];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_307 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_289  [key=2, style=dotted];
m1_306 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m1_301 -> m1_304  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_300 -> m1_304  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_300 -> m1_113  [key=2, style=dotted];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_300 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_309 -> m1_310  [key=0, style=solid];
m1_309 -> m1_315  [key=0, style=solid];
m1_309 -> m1_161  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_308 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_308 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_292  [key=2, style=dotted];
m1_315 -> m1_316  [key=0, style=solid];
m1_298 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_298 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_311 -> m1_313  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_290  [key=2, style=dotted];
m1_311 -> m1_291  [key=2, style=dotted];
m1_299 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_317  [key=2, style=dotted];
m1_303 -> m1_301  [key=0, style=solid];
m1_303 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_303 -> m1_317  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_175  [key=2, style=dotted];
m1_314 -> m1_309  [key=0, style=solid];
m1_314 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_310 -> m1_311  [key=0, style=solid];
m1_312 -> m1_313  [key=0, style=solid];
m1_316 -> m1_92  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_17 -> m1_4  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_21  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_23  [key=0, style=solid];
m1_16 -> m1_25  [key=2, style=dotted];
m1_18 -> m1_15  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_17  [key=0, style=solid];
m1_18 -> m1_26  [key=2, style=dotted];
m1_244 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_244 -> m1_160  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Web.JobDetailsDto JobDetails"];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_251 -> m1_114  [key=2, style=dotted];
m1_251 -> m1_115  [key=2, style=dotted];
m1_251 -> m1_252  [key=0, style=solid];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_9  [key=2, style=dotted];
m1_250 -> m1_125  [key=2, style=dotted];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_255  [key=2, style=dotted];
m1_252 -> m1_256  [key=2, style=dotted];
m1_252 -> m1_257  [key=2, style=dotted];
m1_252 -> m1_258  [key=2, style=dotted];
m1_252 -> m1_63  [key=2, style=dotted];
m1_252 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_252 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_252 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m1_249 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m1_246 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_246 -> m1_9  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_254  [key=2, style=dotted];
m1_245 -> m1_246  [key=0, style=solid];
m1_247 -> m1_249  [key=0, style=solid];
m1_247 -> m1_248  [key=0, style=solid];
m1_248 -> m1_253  [key=0, style=solid];
m1_253 -> m1_244  [key=0, style=bold, color=blue];
m1_206 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_206 -> m1_207  [key=0, style=solid];
m1_209 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_29  [key=2, style=dotted];
m1_208 -> m1_150  [key=2, style=dotted];
m1_208 -> m1_9  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_207 -> m1_208  [key=0, style=solid];
m1_210 -> m1_206  [key=0, style=bold, color=blue];
m1_93 -> m1_92  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m1_93 -> m1_94  [key=0, style=solid];
m1_95 -> m1_92  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_96 -> m1_93  [key=0, style=bold, color=blue];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=IOwinContext];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=IOwinContext];
m1_21 -> m1_4  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_28  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [key=0, style=solid];
m1_20 -> m1_27  [key=2, style=dotted];
m1_22 -> m1_19  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_29  [key=2, style=dotted];
m1_224 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_224 -> m1_229  [key=3, color=darkorchid, style=bold, label="method methodReturn bool RetryJob"];
m1_226 -> m1_76  [key=2, style=dotted];
m1_226 -> m1_9  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_232  [key=2, style=dotted];
m1_227 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_234  [key=2, style=dotted];
m1_230 -> m1_235  [key=2, style=dotted];
m1_229 -> m1_231  [key=0, style=solid];
m1_228 -> m1_230  [key=0, style=solid];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_233  [key=2, style=dotted];
m1_231 -> m1_224  [key=0, style=bold, color=blue];
m1_198 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_198 -> m1_199  [key=0, style=solid];
m1_201 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_29  [key=2, style=dotted];
m1_200 -> m1_150  [key=2, style=dotted];
m1_200 -> m1_9  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_202 -> m1_198  [key=0, style=bold, color=blue];
m1_436 -> m1_130  [key=1, style=dashed, color=green, label=servers];
m1_436 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_437 -> m1_130  [key=1, style=dashed, color=green, label=queues];
m1_437 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_435 -> m1_117  [key=1, style=dashed, color=green, label=name];
m1_435 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_435 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_435 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_432 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_432 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_432 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_432 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_438 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_438 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_438 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_441 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_449 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m1_442 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_443 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_445 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_433 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_433 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_434 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_434 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_444 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_444 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_444 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_446 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_446 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_446 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_440 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_447 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m1_448 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_439 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m2_622 -> m2_623  [key=0, style=solid];
m2_623 -> m2_624  [key=0, style=solid];
m2_623 -> m2_66  [key=2, style=dotted];
m2_623 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_624 -> m2_622  [key=0, style=bold, color=blue];
m2_810 -> m2_811  [key=0, style=solid];
m2_811 -> m2_812  [key=0, style=solid];
m2_811 -> m2_815  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_812 -> m2_813  [key=0, style=solid];
m2_812 -> m2_125  [key=2, style=dotted];
m2_812 -> m2_814  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_813 -> m2_810  [key=0, style=bold, color=blue];
m2_478 -> m2_479  [key=0, style=solid];
m2_479 -> m2_480  [key=0, style=solid];
m2_479 -> m2_66  [key=2, style=dotted];
m2_479 -> m2_481  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_480 -> m2_478  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_364 -> m2_365  [key=0, style=solid];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_66  [key=2, style=dotted];
m2_365 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_366 -> m2_364  [key=0, style=bold, color=blue];
m2_739 -> m2_740  [key=0, style=solid];
m2_740 -> m2_741  [key=0, style=solid];
m2_740 -> m2_66  [key=2, style=dotted];
m2_740 -> m2_742  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_741 -> m2_739  [key=0, style=bold, color=blue];
m2_667 -> m2_668  [key=0, style=solid];
m2_668 -> m2_669  [key=0, style=solid];
m2_668 -> m2_672  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_669 -> m2_670  [key=0, style=solid];
m2_669 -> m2_125  [key=2, style=dotted];
m2_669 -> m2_671  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_670 -> m2_667  [key=0, style=bold, color=blue];
m2_864 -> m2_865  [key=0, style=solid];
m2_865 -> m2_866  [key=0, style=solid];
m2_865 -> m2_869  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_866 -> m2_867  [key=0, style=solid];
m2_866 -> m2_125  [key=2, style=dotted];
m2_866 -> m2_868  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_867 -> m2_864  [key=0, style=bold, color=blue];
m2_271 -> m2_272  [key=0, style=solid];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_66  [key=2, style=dotted];
m2_272 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_273 -> m2_271  [key=0, style=bold, color=blue];
m2_343 -> m2_344  [key=0, style=solid];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_125  [key=2, style=dotted];
m2_345 -> m2_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_346 -> m2_343  [key=0, style=bold, color=blue];
m2_304 -> m2_305  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_125  [key=2, style=dotted];
m2_306 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_307 -> m2_304  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_14  [key=2, style=dotted];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_20  [key=2, style=dotted];
m2_27 -> m2_12  [key=2, style=dotted];
m2_27 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_28 -> m2_25  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_13  [key=2, style=dotted];
m2_857 -> m2_858  [key=0, style=solid];
m2_858 -> m2_859  [key=0, style=solid];
m2_858 -> m2_66  [key=2, style=dotted];
m2_858 -> m2_860  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_859 -> m2_857  [key=0, style=bold, color=blue];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_209 -> m2_210  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_66  [key=2, style=dotted];
m2_210 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_211 -> m2_209  [key=0, style=bold, color=blue];
m2_883 -> m2_884  [key=0, style=solid];
m2_884 -> m2_885  [key=0, style=solid];
m2_884 -> m2_66  [key=2, style=dotted];
m2_884 -> m2_886  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_885 -> m2_883  [key=0, style=bold, color=blue];
m2_719 -> m2_720  [key=0, style=solid];
m2_720 -> m2_721  [key=0, style=solid];
m2_720 -> m2_724  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_721 -> m2_722  [key=0, style=solid];
m2_721 -> m2_125  [key=2, style=dotted];
m2_721 -> m2_723  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_722 -> m2_719  [key=0, style=bold, color=blue];
m2_281 -> m2_282  [key=0, style=solid];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_125  [key=2, style=dotted];
m2_283 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_284 -> m2_281  [key=0, style=bold, color=blue];
m2_353 -> m2_354  [key=0, style=solid];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_66  [key=2, style=dotted];
m2_354 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_355 -> m2_353  [key=0, style=bold, color=blue];
m2_430 -> m2_431  [key=0, style=solid];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_66  [key=2, style=dotted];
m2_431 -> m2_433  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_432 -> m2_430  [key=0, style=bold, color=blue];
m2_772 -> m2_773  [key=0, style=solid];
m2_773 -> m2_774  [key=0, style=solid];
m2_773 -> m2_777  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_774 -> m2_775  [key=0, style=solid];
m2_774 -> m2_125  [key=2, style=dotted];
m2_774 -> m2_776  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_775 -> m2_772  [key=0, style=bold, color=blue];
m2_239 -> m2_240  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_125  [key=2, style=dotted];
m2_241 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_242 -> m2_239  [key=0, style=bold, color=blue];
m2_658 -> m2_659  [key=0, style=solid];
m2_659 -> m2_660  [key=0, style=solid];
m2_659 -> m2_663  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_660 -> m2_661  [key=0, style=solid];
m2_660 -> m2_125  [key=2, style=dotted];
m2_660 -> m2_662  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_661 -> m2_658  [key=0, style=bold, color=blue];
m2_847 -> m2_848  [key=0, style=solid];
m2_848 -> m2_849  [key=0, style=solid];
m2_848 -> m2_66  [key=2, style=dotted];
m2_848 -> m2_850  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_849 -> m2_847  [key=0, style=bold, color=blue];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_402 -> m2_403  [key=0, style=solid];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_66  [key=2, style=dotted];
m2_403 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_404 -> m2_402  [key=0, style=bold, color=blue];
m2_39 -> m2_33  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_32  [key=2, style=dotted];
m2_34 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_34 -> m2_17  [key=2, style=dotted];
m2_34 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_34 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_24  [key=2, style=dotted];
m2_35 -> m2_13  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_20  [key=2, style=dotted];
m2_37 -> m2_42  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_39  [key=2, style=dotted];
m2_36 -> m2_40  [key=2, style=dotted];
m2_36 -> m2_41  [key=2, style=dotted];
m2_38 -> m2_33  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_13  [key=2, style=dotted];
m2_326 -> m2_327  [key=0, style=solid];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_66  [key=2, style=dotted];
m2_327 -> m2_329  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_328 -> m2_326  [key=0, style=bold, color=blue];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_125  [key=2, style=dotted];
m2_252 -> m2_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_253 -> m2_250  [key=0, style=bold, color=blue];
m2_890 -> m2_891  [key=0, style=solid];
m2_891 -> m2_892  [key=0, style=solid];
m2_891 -> m2_895  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_892 -> m2_893  [key=0, style=solid];
m2_892 -> m2_125  [key=2, style=dotted];
m2_892 -> m2_894  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_893 -> m2_890  [key=0, style=bold, color=blue];
m2_566 -> m2_567  [key=0, style=solid];
m2_567 -> m2_568  [key=0, style=solid];
m2_567 -> m2_66  [key=2, style=dotted];
m2_567 -> m2_569  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_568 -> m2_566  [key=0, style=bold, color=blue];
m2_511 -> m2_512  [key=0, style=solid];
m2_512 -> m2_513  [key=0, style=solid];
m2_512 -> m2_66  [key=2, style=dotted];
m2_512 -> m2_514  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_513 -> m2_511  [key=0, style=bold, color=blue];
m2_219 -> m2_220  [key=0, style=solid];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_66  [key=2, style=dotted];
m2_220 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_221 -> m2_219  [key=0, style=bold, color=blue];
m2_576 -> m2_577  [key=0, style=solid];
m2_577 -> m2_578  [key=0, style=solid];
m2_577 -> m2_66  [key=2, style=dotted];
m2_577 -> m2_579  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_578 -> m2_576  [key=0, style=bold, color=blue];
m2_440 -> m2_441  [key=0, style=solid];
m2_441 -> m2_442  [key=0, style=solid];
m2_441 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_125  [key=2, style=dotted];
m2_442 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_443 -> m2_440  [key=0, style=bold, color=blue];
m2_583 -> m2_584  [key=0, style=solid];
m2_584 -> m2_585  [key=0, style=solid];
m2_584 -> m2_588  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_585 -> m2_586  [key=0, style=solid];
m2_585 -> m2_125  [key=2, style=dotted];
m2_585 -> m2_587  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_586 -> m2_583  [key=0, style=bold, color=blue];
m2_782 -> m2_783  [key=0, style=solid];
m2_783 -> m2_784  [key=0, style=solid];
m2_783 -> m2_66  [key=2, style=dotted];
m2_783 -> m2_785  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_784 -> m2_782  [key=0, style=bold, color=blue];
m2_712 -> m2_713  [key=0, style=solid];
m2_713 -> m2_714  [key=0, style=solid];
m2_713 -> m2_66  [key=2, style=dotted];
m2_713 -> m2_715  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_714 -> m2_712  [key=0, style=bold, color=blue];
m2_793 -> m2_794  [key=0, style=solid];
m2_794 -> m2_795  [key=0, style=solid];
m2_794 -> m2_66  [key=2, style=dotted];
m2_794 -> m2_796  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_795 -> m2_793  [key=0, style=bold, color=blue];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_24  [key=2, style=dotted];
m2_30 -> m2_32  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_8  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_12 -> m2_15  [key=2, style=dotted];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_18  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=2, style=dotted];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_26  [key=0, style=bold, color=blue];
m2_31 -> m2_29  [key=0, style=bold, color=blue];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_17  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid, color=red];
m2_50 -> m2_53  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m2_50 -> m2_15  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid, color=red];
m2_51 -> m2_56  [key=2, style=dotted, color=red];
m2_51 -> m2_53  [key=1, style=dashed, color=red, label=token];
m2_51 -> m2_54  [key=1, style=dashed, color=red, label=token];
m2_51 -> m2_60  [key=1, style=dashed, color=red, label=token];
m2_53 -> m2_54  [key=0, style=solid, color=red];
m2_53 -> m2_57  [key=2, style=dotted, color=red];
m2_52 -> m2_53  [key=0, style=solid, color=red];
m2_52 -> m2_54  [key=1, style=dashed, color=red, label=queues];
m2_52 -> m2_60  [key=1, style=dashed, color=red, label=queues];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_58  [key=2, style=dotted];
m2_54 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [key=2, style=dotted];
m2_55 -> m2_50  [key=0, style=bold, color=blue];
m2_59 -> m2_60  [key=0, style=solid];
m2_61 -> m2_59  [key=0, style=bold, color=blue];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_67 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_68 -> m2_69  [key=0, style=solid, color=red];
m2_68 -> m2_56  [key=2, style=dotted];
m2_68 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_68 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_14  [key=2, style=dotted];
m2_71 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_57  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid, color=red];
m2_69 -> m2_7  [key=2, style=dotted, color=red];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_73  [key=2, style=dotted];
m2_72 -> m2_67  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_76 -> m2_74  [key=0, style=bold, color=blue];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_84  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_85  [key=2, style=dotted];
m2_83 -> m2_80  [key=0, style=bold, color=blue];
m2_89 -> m2_90  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_93  [key=2, style=dotted];
m2_90 -> m2_94  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_85  [key=2, style=dotted];
m2_92 -> m2_89  [key=0, style=bold, color=blue];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_14  [key=2, style=dotted];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=2, style=dotted];
m2_103 -> m2_106  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_20  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_101 -> m2_98  [key=0, style=bold, color=blue];
m2_104 -> m2_102  [key=0, style=bold, color=blue];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_14  [key=2, style=dotted];
m2_111 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=2, style=dotted];
m2_115 -> m2_106  [key=2, style=dotted];
m2_115 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_20  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_113 -> m2_110  [key=0, style=bold, color=blue];
m2_116 -> m2_114  [key=0, style=bold, color=blue];
m2_118 -> m2_119  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [key=2, style=dotted];
m2_120 -> m2_118  [key=0, style=bold, color=blue];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_126 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_126 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_148  [key=2, style=dotted];
m2_127 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m2_127 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m2_127 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_117  [key=2, style=dotted];
m2_128 -> m2_105  [key=2, style=dotted];
m2_128 -> m2_149  [key=2, style=dotted];
m2_128 -> m2_106  [key=2, style=dotted];
m2_128 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_128 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_128 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_128 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_151  [key=2, style=dotted];
m2_131 -> m2_152  [key=2, style=dotted];
m2_131 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_131 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_131 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_131 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_131 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_131 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_131 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_151  [key=2, style=dotted];
m2_144 -> m2_159  [key=2, style=dotted];
m2_144 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_144 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_144 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_20  [key=2, style=dotted];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_156  [key=2, style=dotted];
m2_142 -> m2_157  [key=2, style=dotted];
m2_142 -> m2_158  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_156  [key=2, style=dotted];
m2_143 -> m2_157  [key=2, style=dotted];
m2_143 -> m2_158  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_85  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_150  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_153  [key=2, style=dotted];
m2_132 -> m2_20  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_20  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_20  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_154  [key=2, style=dotted];
m2_136 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m2_137 -> m2_138  [key=0, style=solid];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_155  [key=2, style=dotted];
m2_138 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_138 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_20  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_20  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_20  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_20  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_166 -> m2_167  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_20  [key=2, style=dotted];
m2_147 -> m2_126  [key=0, style=bold, color=blue];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_121  [key=2, style=dotted];
m2_162 -> m2_160  [key=0, style=bold, color=blue];
m2_164 -> m2_165  [key=0, style=solid];
m2_165 -> m2_163  [key=0, style=bold, color=blue];
m2_167 -> m2_168  [key=0, style=solid];
m2_168 -> m2_166  [key=0, style=bold, color=blue];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_14  [key=2, style=dotted];
m2_173 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_178  [key=2, style=dotted];
m2_174 -> m2_172  [key=0, style=bold, color=blue];
m2_175 -> m2_176  [key=0, style=solid];
m2_177 -> m2_175  [key=0, style=bold, color=blue];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_178  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_186  [key=2, style=dotted];
m2_185 -> m2_182  [key=0, style=bold, color=blue];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_203  [key=2, style=dotted];
m2_193 -> m2_204  [key=2, style=dotted];
m2_193 -> m2_151  [key=2, style=dotted];
m2_193 -> m2_152  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_191 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_117  [key=2, style=dotted];
m2_192 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_205  [key=2, style=dotted];
m2_194 -> m2_178  [key=2, style=dotted];
m2_194 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_194 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_194 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_194 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_194 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_194 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_206 -> m2_207  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_85  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_85  [key=2, style=dotted];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_20  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_20  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_186  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_157  [key=2, style=dotted];
m2_200 -> m2_158  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_157  [key=2, style=dotted];
m2_201 -> m2_158  [key=2, style=dotted];
m2_202 -> m2_191  [key=0, style=bold, color=blue];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_121  [key=2, style=dotted];
m2_208 -> m2_206  [key=0, style=bold, color=blue];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_14  [key=2, style=dotted];
m2_213 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_218  [key=2, style=dotted];
m2_214 -> m2_212  [key=0, style=bold, color=blue];
m2_215 -> m2_216  [key=0, style=solid];
m2_217 -> m2_215  [key=0, style=bold, color=blue];
m2_222 -> m2_223  [key=0, style=solid];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_218  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_186  [key=2, style=dotted];
m2_225 -> m2_222  [key=0, style=bold, color=blue];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_204  [key=2, style=dotted];
m2_232 -> m2_151  [key=2, style=dotted];
m2_232 -> m2_152  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_230 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_105  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_205  [key=2, style=dotted];
m2_233 -> m2_218  [key=2, style=dotted];
m2_233 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_233 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_233 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_85  [key=2, style=dotted];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_20  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_20  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_20  [key=2, style=dotted];
m2_238 -> m2_230  [key=0, style=bold, color=blue];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_204  [key=2, style=dotted];
m2_245 -> m2_151  [key=2, style=dotted];
m2_245 -> m2_152  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_243 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_105  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_205  [key=2, style=dotted];
m2_246 -> m2_218  [key=2, style=dotted];
m2_246 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_85  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_20  [key=2, style=dotted];
m2_249 -> m2_243  [key=0, style=bold, color=blue];
m2_255 -> m2_256  [key=0, style=solid];
m2_255 -> m2_259  [key=2, style=dotted];
m2_255 -> m2_204  [key=2, style=dotted];
m2_255 -> m2_151  [key=2, style=dotted];
m2_255 -> m2_152  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_205  [key=2, style=dotted];
m2_256 -> m2_178  [key=2, style=dotted];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_85  [key=2, style=dotted];
m2_258 -> m2_254  [key=0, style=bold, color=blue];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_14  [key=2, style=dotted];
m2_264 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_270  [key=2, style=dotted];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_20  [key=2, style=dotted];
m2_267 -> m2_268  [key=0, style=solid];
m2_266 -> m2_263  [key=0, style=bold, color=blue];
m2_269 -> m2_267  [key=0, style=bold, color=blue];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_14  [key=2, style=dotted];
m2_275 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_270  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_20  [key=2, style=dotted];
m2_278 -> m2_279  [key=0, style=solid];
m2_277 -> m2_274  [key=0, style=bold, color=blue];
m2_280 -> m2_278  [key=0, style=bold, color=blue];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_151  [key=2, style=dotted];
m2_286 -> m2_152  [key=2, style=dotted];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_285 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_270  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_151  [key=2, style=dotted];
m2_289 -> m2_152  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_153  [key=2, style=dotted];
m2_287 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_20  [key=2, style=dotted];
m2_291 -> m2_285  [key=0, style=bold, color=blue];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_151  [key=2, style=dotted];
m2_297 -> m2_152  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_299  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_296 -> m2_300  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_296 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_270  [key=2, style=dotted];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_270  [key=2, style=dotted];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_151  [key=2, style=dotted];
m2_301 -> m2_152  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_153  [key=2, style=dotted];
m2_298 -> m2_300  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_298 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_20  [key=2, style=dotted];
m2_303 -> m2_296  [key=0, style=bold, color=blue];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_151  [key=2, style=dotted];
m2_309 -> m2_152  [key=2, style=dotted];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_308 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_270  [key=2, style=dotted];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_151  [key=2, style=dotted];
m2_312 -> m2_152  [key=2, style=dotted];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_153  [key=2, style=dotted];
m2_310 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_20  [key=2, style=dotted];
m2_314 -> m2_308  [key=0, style=bold, color=blue];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_14  [key=2, style=dotted];
m2_319 -> m2_322  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_325  [key=2, style=dotted];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_20  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_321 -> m2_318  [key=0, style=bold, color=blue];
m2_324 -> m2_322  [key=0, style=bold, color=blue];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_14  [key=2, style=dotted];
m2_330 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_325  [key=2, style=dotted];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_20  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_332 -> m2_329  [key=0, style=bold, color=blue];
m2_335 -> m2_333  [key=0, style=bold, color=blue];
m2_339 -> m2_340  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_325  [key=2, style=dotted];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_186  [key=2, style=dotted];
m2_342 -> m2_339  [key=0, style=bold, color=blue];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_14  [key=2, style=dotted];
m2_348 -> m2_152  [key=2, style=dotted];
m2_347 -> m2_348  [key=0, style=solid];
m2_347 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_153  [key=2, style=dotted];
m2_349 -> m2_352  [key=2, style=dotted];
m2_350 -> m2_351  [key=0, style=solid];
m2_350 -> m2_20  [key=2, style=dotted];
m2_351 -> m2_347  [key=0, style=bold, color=blue];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_361  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_14  [key=2, style=dotted];
m2_357 -> m2_360  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_363  [key=2, style=dotted];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_20  [key=2, style=dotted];
m2_360 -> m2_361  [key=0, style=solid];
m2_359 -> m2_356  [key=0, style=bold, color=blue];
m2_362 -> m2_360  [key=0, style=bold, color=blue];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> m2_371  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_368 -> m2_369  [key=0, style=solid];
m2_368 -> m2_14  [key=2, style=dotted];
m2_368 -> m2_370  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_371 -> m2_372  [key=0, style=solid];
m2_371 -> m2_363  [key=2, style=dotted];
m2_369 -> m2_367  [key=0, style=bold, color=blue];
m2_370 -> m2_371  [key=0, style=solid];
m2_372 -> m2_370  [key=0, style=bold, color=blue];
m2_376 -> m2_377  [key=0, style=solid];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_363  [key=2, style=dotted];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_186  [key=2, style=dotted];
m2_379 -> m2_376  [key=0, style=bold, color=blue];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_389  [key=2, style=dotted];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_363  [key=2, style=dotted];
m2_387 -> m2_388  [key=0, style=solid];
m2_387 -> m2_20  [key=2, style=dotted];
m2_388 -> m2_384  [key=0, style=bold, color=blue];
m2_393 -> m2_394  [key=0, style=solid];
m2_393 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_14  [key=2, style=dotted];
m2_394 -> m2_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_400  [key=2, style=dotted];
m2_398 -> m2_401  [key=2, style=dotted];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_20  [key=2, style=dotted];
m2_397 -> m2_398  [key=0, style=solid];
m2_396 -> m2_393  [key=0, style=bold, color=blue];
m2_399 -> m2_397  [key=0, style=bold, color=blue];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_406 -> m2_407  [key=0, style=solid];
m2_406 -> m2_14  [key=2, style=dotted];
m2_406 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_401  [key=2, style=dotted];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_20  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_408 -> m2_405  [key=0, style=bold, color=blue];
m2_411 -> m2_409  [key=0, style=bold, color=blue];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_415 -> m2_418  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_415 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_415 -> m2_424  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_400  [key=2, style=dotted];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_401  [key=2, style=dotted];
m2_418 -> m2_419  [key=0, style=solid];
m2_418 -> m2_151  [key=2, style=dotted];
m2_418 -> m2_152  [key=2, style=dotted];
m2_418 -> m2_420  [key=1, style=dashed, color=darkseagreen4, label=server];
m2_418 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label=server];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_401  [key=2, style=dotted];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_151  [key=2, style=dotted];
m2_424 -> m2_152  [key=2, style=dotted];
m2_424 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_20  [key=2, style=dotted];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_428  [key=2, style=dotted];
m2_420 -> m2_158  [key=2, style=dotted];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_85  [key=2, style=dotted];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_400  [key=2, style=dotted];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_20  [key=2, style=dotted];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_429  [key=2, style=dotted];
m2_427 -> m2_415  [key=0, style=bold, color=blue];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_437  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_14  [key=2, style=dotted];
m2_434 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_439  [key=2, style=dotted];
m2_435 -> m2_433  [key=0, style=bold, color=blue];
m2_436 -> m2_437  [key=0, style=solid];
m2_438 -> m2_436  [key=0, style=bold, color=blue];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_389  [key=2, style=dotted];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_446  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_444 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_439  [key=2, style=dotted];
m2_447 -> m2_448  [key=0, style=solid];
m2_447 -> m2_151  [key=2, style=dotted];
m2_447 -> m2_152  [key=2, style=dotted];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_450  [key=2, style=dotted];
m2_449 -> m2_444  [key=0, style=bold, color=blue];
m2_454 -> m2_455  [key=0, style=solid];
m2_454 -> m2_458  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_455 -> m2_456  [key=0, style=solid];
m2_455 -> m2_14  [key=2, style=dotted];
m2_455 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_460  [key=2, style=dotted];
m2_456 -> m2_454  [key=0, style=bold, color=blue];
m2_457 -> m2_458  [key=0, style=solid];
m2_459 -> m2_457  [key=0, style=bold, color=blue];
m2_466 -> m2_467  [key=0, style=solid];
m2_466 -> m2_389  [key=2, style=dotted];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_465 -> m2_468  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_467 -> m2_468  [key=0, style=solid];
m2_467 -> m2_460  [key=2, style=dotted];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_151  [key=2, style=dotted];
m2_468 -> m2_159  [key=2, style=dotted];
m2_468 -> m2_472  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_468 -> m2_475  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_468 -> m2_470  [key=1, style=dashed, color=darkseagreen4, label=servers];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_450  [key=2, style=dotted];
m2_472 -> m2_473  [key=0, style=solid];
m2_475 -> m2_476  [key=0, style=solid];
m2_470 -> m2_471  [key=0, style=solid];
m2_470 -> m2_20  [key=2, style=dotted];
m2_471 -> m2_465  [key=0, style=bold, color=blue];
m2_473 -> m2_474  [key=0, style=solid];
m2_474 -> m2_472  [key=0, style=bold, color=blue];
m2_476 -> m2_477  [key=0, style=solid];
m2_477 -> m2_475  [key=0, style=bold, color=blue];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_485  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_482 -> m2_483  [key=0, style=solid];
m2_482 -> m2_14  [key=2, style=dotted];
m2_482 -> m2_484  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_485 -> m2_486  [key=0, style=solid];
m2_485 -> m2_487  [key=2, style=dotted];
m2_485 -> m2_488  [key=2, style=dotted];
m2_483 -> m2_481  [key=0, style=bold, color=blue];
m2_484 -> m2_485  [key=0, style=solid];
m2_486 -> m2_484  [key=0, style=bold, color=blue];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_156  [key=2, style=dotted];
m2_494 -> m2_499  [key=2, style=dotted];
m2_494 -> m2_389  [key=2, style=dotted];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_495  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_493 -> m2_496  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_495 -> m2_496  [key=0, style=solid];
m2_495 -> m2_500  [key=2, style=dotted];
m2_495 -> m2_488  [key=2, style=dotted];
m2_496 -> m2_497  [key=0, style=solid];
m2_496 -> m2_151  [key=2, style=dotted];
m2_496 -> m2_152  [key=2, style=dotted];
m2_497 -> m2_498  [key=0, style=solid];
m2_497 -> m2_20  [key=2, style=dotted];
m2_498 -> m2_493  [key=0, style=bold, color=blue];
m2_504 -> m2_505  [key=0, style=solid];
m2_504 -> m2_508  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_505 -> m2_506  [key=0, style=solid];
m2_505 -> m2_14  [key=2, style=dotted];
m2_505 -> m2_507  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_508 -> m2_509  [key=0, style=solid];
m2_508 -> m2_510  [key=2, style=dotted];
m2_506 -> m2_504  [key=0, style=bold, color=blue];
m2_507 -> m2_508  [key=0, style=solid];
m2_509 -> m2_507  [key=0, style=bold, color=blue];
m2_514 -> m2_515  [key=0, style=solid];
m2_515 -> m2_516  [key=0, style=solid];
m2_515 -> m2_510  [key=2, style=dotted];
m2_515 -> m2_517  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_516 -> m2_517  [key=0, style=solid];
m2_516 -> m2_85  [key=2, style=dotted];
m2_517 -> m2_518  [key=0, style=solid];
m2_517 -> m2_20  [key=2, style=dotted];
m2_518 -> m2_514  [key=0, style=bold, color=blue];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_389  [key=2, style=dotted];
m2_523 -> m2_524  [key=0, style=solid];
m2_523 -> m2_525  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_525 -> m2_526  [key=0, style=solid];
m2_525 -> m2_510  [key=2, style=dotted];
m2_525 -> m2_527  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_525 -> m2_528  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_526 -> m2_527  [key=0, style=solid];
m2_526 -> m2_20  [key=2, style=dotted];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_429  [key=2, style=dotted];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_429  [key=2, style=dotted];
m2_529 -> m2_523  [key=0, style=bold, color=blue];
m2_533 -> m2_534  [key=0, style=solid];
m2_533 -> m2_538  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_534 -> m2_535  [key=0, style=solid];
m2_534 -> m2_14  [key=2, style=dotted];
m2_534 -> m2_537  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_538 -> m2_539  [key=0, style=solid];
m2_538 -> m2_105  [key=2, style=dotted];
m2_538 -> m2_540  [key=2, style=dotted];
m2_535 -> m2_536  [key=0, style=solid];
m2_535 -> m2_20  [key=2, style=dotted];
m2_537 -> m2_538  [key=0, style=solid];
m2_536 -> m2_533  [key=0, style=bold, color=blue];
m2_539 -> m2_537  [key=0, style=bold, color=blue];
m2_544 -> m2_545  [key=0, style=solid];
m2_544 -> m2_549  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_545 -> m2_546  [key=0, style=solid];
m2_545 -> m2_14  [key=2, style=dotted];
m2_545 -> m2_548  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_549 -> m2_550  [key=0, style=solid];
m2_549 -> m2_540  [key=2, style=dotted];
m2_546 -> m2_547  [key=0, style=solid];
m2_546 -> m2_20  [key=2, style=dotted];
m2_548 -> m2_549  [key=0, style=solid];
m2_547 -> m2_544  [key=0, style=bold, color=blue];
m2_550 -> m2_548  [key=0, style=bold, color=blue];
m2_554 -> m2_555  [key=0, style=solid];
m2_554 -> m2_556  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_555 -> m2_556  [key=0, style=solid];
m2_555 -> m2_105  [key=2, style=dotted];
m2_555 -> m2_540  [key=2, style=dotted];
m2_556 -> m2_557  [key=0, style=solid];
m2_556 -> m2_151  [key=2, style=dotted];
m2_556 -> m2_159  [key=2, style=dotted];
m2_556 -> m2_560  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_556 -> m2_563  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_556 -> m2_558  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_557 -> m2_558  [key=0, style=solid];
m2_557 -> m2_20  [key=2, style=dotted];
m2_560 -> m2_561  [key=0, style=solid];
m2_563 -> m2_564  [key=0, style=solid];
m2_558 -> m2_559  [key=0, style=solid];
m2_558 -> m2_20  [key=2, style=dotted];
m2_559 -> m2_554  [key=0, style=bold, color=blue];
m2_561 -> m2_562  [key=0, style=solid];
m2_562 -> m2_560  [key=0, style=bold, color=blue];
m2_564 -> m2_565  [key=0, style=solid];
m2_565 -> m2_563  [key=0, style=bold, color=blue];
m2_569 -> m2_570  [key=0, style=solid];
m2_569 -> m2_573  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_570 -> m2_571  [key=0, style=solid];
m2_570 -> m2_14  [key=2, style=dotted];
m2_570 -> m2_572  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_573 -> m2_574  [key=0, style=solid];
m2_573 -> m2_575  [key=2, style=dotted];
m2_571 -> m2_569  [key=0, style=bold, color=blue];
m2_572 -> m2_573  [key=0, style=solid];
m2_574 -> m2_572  [key=0, style=bold, color=blue];
m2_579 -> m2_580  [key=0, style=solid];
m2_580 -> m2_581  [key=0, style=solid];
m2_580 -> m2_575  [key=2, style=dotted];
m2_581 -> m2_582  [key=0, style=solid];
m2_581 -> m2_186  [key=2, style=dotted];
m2_582 -> m2_579  [key=0, style=bold, color=blue];
m2_588 -> m2_589  [key=0, style=solid];
m2_588 -> m2_389  [key=2, style=dotted];
m2_587 -> m2_588  [key=0, style=solid];
m2_587 -> m2_589  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_589 -> m2_590  [key=0, style=solid];
m2_589 -> m2_575  [key=2, style=dotted];
m2_589 -> m2_591  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_589 -> m2_592  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_589 -> m2_593  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_590 -> m2_591  [key=0, style=solid];
m2_590 -> m2_85  [key=2, style=dotted];
m2_591 -> m2_592  [key=0, style=solid];
m2_591 -> m2_20  [key=2, style=dotted];
m2_592 -> m2_593  [key=0, style=solid];
m2_592 -> m2_20  [key=2, style=dotted];
m2_593 -> m2_594  [key=0, style=solid];
m2_593 -> m2_20  [key=2, style=dotted];
m2_594 -> m2_587  [key=0, style=bold, color=blue];
m2_598 -> m2_599  [key=0, style=solid];
m2_598 -> m2_602  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_599 -> m2_600  [key=0, style=solid];
m2_599 -> m2_14  [key=2, style=dotted];
m2_599 -> m2_601  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_602 -> m2_603  [key=0, style=solid];
m2_602 -> m2_604  [key=2, style=dotted];
m2_600 -> m2_598  [key=0, style=bold, color=blue];
m2_601 -> m2_602  [key=0, style=solid];
m2_603 -> m2_601  [key=0, style=bold, color=blue];
m2_608 -> m2_609  [key=0, style=solid];
m2_609 -> m2_610  [key=0, style=solid];
m2_609 -> m2_604  [key=2, style=dotted];
m2_610 -> m2_611  [key=0, style=solid];
m2_610 -> m2_20  [key=2, style=dotted];
m2_611 -> m2_608  [key=0, style=bold, color=blue];
m2_617 -> m2_618  [key=0, style=solid];
m2_617 -> m2_621  [key=2, style=dotted];
m2_617 -> m2_389  [key=2, style=dotted];
m2_616 -> m2_617  [key=0, style=solid];
m2_616 -> m2_618  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_618 -> m2_619  [key=0, style=solid];
m2_618 -> m2_604  [key=2, style=dotted];
m2_619 -> m2_620  [key=0, style=solid];
m2_619 -> m2_20  [key=2, style=dotted];
m2_620 -> m2_616  [key=0, style=bold, color=blue];
m2_625 -> m2_626  [key=0, style=solid];
m2_625 -> m2_629  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_626 -> m2_627  [key=0, style=solid];
m2_626 -> m2_14  [key=2, style=dotted];
m2_626 -> m2_628  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_629 -> m2_630  [key=0, style=solid];
m2_629 -> m2_631  [key=2, style=dotted];
m2_627 -> m2_625  [key=0, style=bold, color=blue];
m2_628 -> m2_629  [key=0, style=solid];
m2_630 -> m2_628  [key=0, style=bold, color=blue];
m2_637 -> m2_638  [key=0, style=solid];
m2_637 -> m2_621  [key=2, style=dotted];
m2_637 -> m2_389  [key=2, style=dotted];
m2_636 -> m2_637  [key=0, style=solid];
m2_636 -> m2_638  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_638 -> m2_639  [key=0, style=solid];
m2_638 -> m2_631  [key=2, style=dotted];
m2_639 -> m2_640  [key=0, style=solid];
m2_639 -> m2_20  [key=2, style=dotted];
m2_640 -> m2_636  [key=0, style=bold, color=blue];
m2_644 -> m2_645  [key=0, style=solid];
m2_644 -> m2_648  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_645 -> m2_646  [key=0, style=solid];
m2_645 -> m2_14  [key=2, style=dotted];
m2_645 -> m2_647  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_648 -> m2_649  [key=0, style=solid];
m2_648 -> m2_650  [key=2, style=dotted];
m2_646 -> m2_644  [key=0, style=bold, color=blue];
m2_647 -> m2_648  [key=0, style=solid];
m2_649 -> m2_647  [key=0, style=bold, color=blue];
m2_654 -> m2_655  [key=0, style=solid];
m2_655 -> m2_656  [key=0, style=solid];
m2_655 -> m2_650  [key=2, style=dotted];
m2_656 -> m2_657  [key=0, style=solid];
m2_656 -> m2_20  [key=2, style=dotted];
m2_657 -> m2_654  [key=0, style=bold, color=blue];
m2_663 -> m2_664  [key=0, style=solid];
m2_663 -> m2_389  [key=2, style=dotted];
m2_662 -> m2_663  [key=0, style=solid];
m2_662 -> m2_664  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_664 -> m2_665  [key=0, style=solid];
m2_664 -> m2_650  [key=2, style=dotted];
m2_665 -> m2_666  [key=0, style=solid];
m2_665 -> m2_20  [key=2, style=dotted];
m2_666 -> m2_662  [key=0, style=bold, color=blue];
m2_672 -> m2_673  [key=0, style=solid];
m2_672 -> m2_389  [key=2, style=dotted];
m2_671 -> m2_672  [key=0, style=solid];
m2_671 -> m2_673  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_673 -> m2_674  [key=0, style=solid];
m2_673 -> m2_650  [key=2, style=dotted];
m2_674 -> m2_675  [key=0, style=solid];
m2_674 -> m2_20  [key=2, style=dotted];
m2_675 -> m2_671  [key=0, style=bold, color=blue];
m2_679 -> m2_680  [key=0, style=solid];
m2_679 -> m2_683  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_680 -> m2_681  [key=0, style=solid];
m2_680 -> m2_14  [key=2, style=dotted];
m2_680 -> m2_682  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_683 -> m2_684  [key=0, style=solid];
m2_683 -> m2_685  [key=2, style=dotted];
m2_681 -> m2_679  [key=0, style=bold, color=blue];
m2_682 -> m2_683  [key=0, style=solid];
m2_684 -> m2_682  [key=0, style=bold, color=blue];
m2_689 -> m2_690  [key=0, style=solid];
m2_690 -> m2_691  [key=0, style=solid];
m2_690 -> m2_685  [key=2, style=dotted];
m2_691 -> m2_692  [key=0, style=solid];
m2_691 -> m2_20  [key=2, style=dotted];
m2_692 -> m2_689  [key=0, style=bold, color=blue];
m2_698 -> m2_699  [key=0, style=solid];
m2_698 -> m2_389  [key=2, style=dotted];
m2_697 -> m2_698  [key=0, style=solid];
m2_697 -> m2_699  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_699 -> m2_700  [key=0, style=solid];
m2_699 -> m2_685  [key=2, style=dotted];
m2_700 -> m2_701  [key=0, style=solid];
m2_700 -> m2_20  [key=2, style=dotted];
m2_701 -> m2_697  [key=0, style=bold, color=blue];
m2_705 -> m2_706  [key=0, style=solid];
m2_705 -> m2_709  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_706 -> m2_707  [key=0, style=solid];
m2_706 -> m2_14  [key=2, style=dotted];
m2_706 -> m2_708  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_709 -> m2_710  [key=0, style=solid];
m2_709 -> m2_711  [key=2, style=dotted];
m2_707 -> m2_705  [key=0, style=bold, color=blue];
m2_708 -> m2_709  [key=0, style=solid];
m2_710 -> m2_708  [key=0, style=bold, color=blue];
m2_715 -> m2_716  [key=0, style=solid];
m2_716 -> m2_717  [key=0, style=solid];
m2_716 -> m2_711  [key=2, style=dotted];
m2_717 -> m2_718  [key=0, style=solid];
m2_717 -> m2_158  [key=2, style=dotted];
m2_718 -> m2_715  [key=0, style=bold, color=blue];
m2_724 -> m2_725  [key=0, style=solid];
m2_724 -> m2_499  [key=2, style=dotted];
m2_724 -> m2_389  [key=2, style=dotted];
m2_723 -> m2_724  [key=0, style=solid];
m2_723 -> m2_725  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_725 -> m2_726  [key=0, style=solid];
m2_725 -> m2_711  [key=2, style=dotted];
m2_725 -> m2_727  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_726 -> m2_727  [key=0, style=solid];
m2_726 -> m2_487  [key=2, style=dotted];
m2_726 -> m2_158  [key=2, style=dotted];
m2_727 -> m2_728  [key=0, style=solid];
m2_727 -> m2_487  [key=2, style=dotted];
m2_727 -> m2_158  [key=2, style=dotted];
m2_728 -> m2_723  [key=0, style=bold, color=blue];
m2_732 -> m2_733  [key=0, style=solid];
m2_732 -> m2_736  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_733 -> m2_734  [key=0, style=solid];
m2_733 -> m2_14  [key=2, style=dotted];
m2_733 -> m2_735  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_736 -> m2_737  [key=0, style=solid];
m2_736 -> m2_738  [key=2, style=dotted];
m2_734 -> m2_732  [key=0, style=bold, color=blue];
m2_735 -> m2_736  [key=0, style=solid];
m2_737 -> m2_735  [key=0, style=bold, color=blue];
m2_742 -> m2_743  [key=0, style=solid];
m2_743 -> m2_744  [key=0, style=solid];
m2_743 -> m2_738  [key=2, style=dotted];
m2_744 -> m2_745  [key=0, style=solid];
m2_744 -> m2_20  [key=2, style=dotted];
m2_745 -> m2_742  [key=0, style=bold, color=blue];
m2_751 -> m2_752  [key=0, style=solid];
m2_751 -> m2_389  [key=2, style=dotted];
m2_750 -> m2_751  [key=0, style=solid];
m2_750 -> m2_752  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_752 -> m2_753  [key=0, style=solid];
m2_752 -> m2_738  [key=2, style=dotted];
m2_753 -> m2_754  [key=0, style=solid];
m2_753 -> m2_20  [key=2, style=dotted];
m2_754 -> m2_750  [key=0, style=bold, color=blue];
m2_758 -> m2_759  [key=0, style=solid];
m2_758 -> m2_762  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_759 -> m2_760  [key=0, style=solid];
m2_759 -> m2_14  [key=2, style=dotted];
m2_759 -> m2_761  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_762 -> m2_763  [key=0, style=solid];
m2_762 -> m2_764  [key=2, style=dotted];
m2_760 -> m2_758  [key=0, style=bold, color=blue];
m2_761 -> m2_762  [key=0, style=solid];
m2_763 -> m2_761  [key=0, style=bold, color=blue];
m2_768 -> m2_769  [key=0, style=solid];
m2_769 -> m2_770  [key=0, style=solid];
m2_769 -> m2_764  [key=2, style=dotted];
m2_770 -> m2_771  [key=0, style=solid];
m2_770 -> m2_158  [key=2, style=dotted];
m2_771 -> m2_768  [key=0, style=bold, color=blue];
m2_777 -> m2_778  [key=0, style=solid];
m2_777 -> m2_499  [key=2, style=dotted];
m2_777 -> m2_389  [key=2, style=dotted];
m2_776 -> m2_777  [key=0, style=solid];
m2_776 -> m2_778  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_778 -> m2_779  [key=0, style=solid];
m2_778 -> m2_764  [key=2, style=dotted];
m2_778 -> m2_780  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_779 -> m2_780  [key=0, style=solid];
m2_779 -> m2_487  [key=2, style=dotted];
m2_779 -> m2_158  [key=2, style=dotted];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_487  [key=2, style=dotted];
m2_780 -> m2_158  [key=2, style=dotted];
m2_781 -> m2_776  [key=0, style=bold, color=blue];
m2_785 -> m2_786  [key=0, style=solid];
m2_785 -> m2_790  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_14  [key=2, style=dotted];
m2_786 -> m2_789  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_790 -> m2_791  [key=0, style=solid];
m2_790 -> m2_792  [key=2, style=dotted];
m2_787 -> m2_788  [key=0, style=solid];
m2_787 -> m2_20  [key=2, style=dotted];
m2_789 -> m2_790  [key=0, style=solid];
m2_788 -> m2_785  [key=0, style=bold, color=blue];
m2_791 -> m2_789  [key=0, style=bold, color=blue];
m2_796 -> m2_797  [key=0, style=solid];
m2_796 -> m2_801  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_797 -> m2_798  [key=0, style=solid];
m2_797 -> m2_14  [key=2, style=dotted];
m2_797 -> m2_800  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_801 -> m2_802  [key=0, style=solid];
m2_801 -> m2_792  [key=2, style=dotted];
m2_798 -> m2_799  [key=0, style=solid];
m2_798 -> m2_20  [key=2, style=dotted];
m2_800 -> m2_801  [key=0, style=solid];
m2_799 -> m2_796  [key=0, style=bold, color=blue];
m2_802 -> m2_800  [key=0, style=bold, color=blue];
m2_806 -> m2_807  [key=0, style=solid];
m2_807 -> m2_808  [key=0, style=solid];
m2_807 -> m2_792  [key=2, style=dotted];
m2_808 -> m2_809  [key=0, style=solid];
m2_808 -> m2_186  [key=2, style=dotted];
m2_809 -> m2_806  [key=0, style=bold, color=blue];
m2_815 -> m2_816  [key=0, style=solid];
m2_815 -> m2_389  [key=2, style=dotted];
m2_814 -> m2_815  [key=0, style=solid];
m2_814 -> m2_816  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_816 -> m2_817  [key=0, style=solid];
m2_816 -> m2_792  [key=2, style=dotted];
m2_817 -> m2_818  [key=0, style=solid];
m2_817 -> m2_20  [key=2, style=dotted];
m2_818 -> m2_814  [key=0, style=bold, color=blue];
m2_822 -> m2_823  [key=0, style=solid];
m2_822 -> m2_827  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_823 -> m2_824  [key=0, style=solid];
m2_823 -> m2_14  [key=2, style=dotted];
m2_823 -> m2_826  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_827 -> m2_828  [key=0, style=solid];
m2_827 -> m2_829  [key=2, style=dotted];
m2_824 -> m2_825  [key=0, style=solid];
m2_824 -> m2_20  [key=2, style=dotted];
m2_826 -> m2_827  [key=0, style=solid];
m2_825 -> m2_822  [key=0, style=bold, color=blue];
m2_828 -> m2_826  [key=0, style=bold, color=blue];
m2_833 -> m2_834  [key=0, style=solid];
m2_834 -> m2_835  [key=0, style=solid];
m2_834 -> m2_829  [key=2, style=dotted];
m2_835 -> m2_836  [key=0, style=solid];
m2_835 -> m2_837  [key=2, style=dotted];
m2_836 -> m2_833  [key=0, style=bold, color=blue];
m2_843 -> m2_844  [key=0, style=solid];
m2_843 -> m2_389  [key=2, style=dotted];
m2_842 -> m2_843  [key=0, style=solid];
m2_842 -> m2_844  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_844 -> m2_845  [key=0, style=solid];
m2_844 -> m2_829  [key=2, style=dotted];
m2_845 -> m2_846  [key=0, style=solid];
m2_845 -> m2_20  [key=2, style=dotted];
m2_846 -> m2_842  [key=0, style=bold, color=blue];
m2_850 -> m2_851  [key=0, style=solid];
m2_850 -> m2_854  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_851 -> m2_852  [key=0, style=solid];
m2_851 -> m2_14  [key=2, style=dotted];
m2_851 -> m2_853  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_854 -> m2_855  [key=0, style=solid];
m2_854 -> m2_856  [key=2, style=dotted];
m2_852 -> m2_850  [key=0, style=bold, color=blue];
m2_853 -> m2_854  [key=0, style=solid];
m2_855 -> m2_853  [key=0, style=bold, color=blue];
m2_860 -> m2_861  [key=0, style=solid];
m2_861 -> m2_862  [key=0, style=solid];
m2_861 -> m2_856  [key=2, style=dotted];
m2_862 -> m2_863  [key=0, style=solid];
m2_862 -> m2_837  [key=2, style=dotted];
m2_863 -> m2_860  [key=0, style=bold, color=blue];
m2_869 -> m2_870  [key=0, style=solid];
m2_869 -> m2_389  [key=2, style=dotted];
m2_868 -> m2_869  [key=0, style=solid];
m2_868 -> m2_870  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_870 -> m2_871  [key=0, style=solid];
m2_870 -> m2_856  [key=2, style=dotted];
m2_871 -> m2_872  [key=0, style=solid];
m2_871 -> m2_20  [key=2, style=dotted];
m2_872 -> m2_868  [key=0, style=bold, color=blue];
m2_876 -> m2_877  [key=0, style=solid];
m2_876 -> m2_880  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_877 -> m2_878  [key=0, style=solid];
m2_877 -> m2_14  [key=2, style=dotted];
m2_877 -> m2_879  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_880 -> m2_881  [key=0, style=solid];
m2_880 -> m2_882  [key=2, style=dotted];
m2_878 -> m2_876  [key=0, style=bold, color=blue];
m2_879 -> m2_880  [key=0, style=solid];
m2_881 -> m2_879  [key=0, style=bold, color=blue];
m2_886 -> m2_887  [key=0, style=solid];
m2_887 -> m2_888  [key=0, style=solid];
m2_887 -> m2_882  [key=2, style=dotted];
m2_888 -> m2_889  [key=0, style=solid];
m2_888 -> m2_158  [key=2, style=dotted];
m2_889 -> m2_886  [key=0, style=bold, color=blue];
m2_895 -> m2_896  [key=0, style=solid];
m2_895 -> m2_157  [key=2, style=dotted];
m2_895 -> m2_389  [key=2, style=dotted];
m2_894 -> m2_895  [key=0, style=solid];
m2_894 -> m2_896  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_896 -> m2_897  [key=0, style=solid];
m2_896 -> m2_882  [key=2, style=dotted];
m2_896 -> m2_898  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_897 -> m2_898  [key=0, style=solid];
m2_897 -> m2_487  [key=2, style=dotted];
m2_897 -> m2_158  [key=2, style=dotted];
m2_898 -> m2_899  [key=0, style=solid];
m2_898 -> m2_487  [key=2, style=dotted];
m2_898 -> m2_158  [key=2, style=dotted];
m2_899 -> m2_894  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=2, style=dotted];
m2_16 -> m2_50  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_32 -> m2_30  [key=0, style=bold, color=blue];
m2_412 -> m2_413  [key=0, style=solid];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_125  [key=2, style=dotted];
m2_413 -> m2_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_414 -> m2_412  [key=0, style=bold, color=blue];
m2_693 -> m2_694  [key=0, style=solid];
m2_694 -> m2_695  [key=0, style=solid];
m2_694 -> m2_698  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_695 -> m2_696  [key=0, style=solid];
m2_695 -> m2_125  [key=2, style=dotted];
m2_695 -> m2_697  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_696 -> m2_693  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_12  [key=2, style=dotted];
m2_9 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_390 -> m2_391  [key=0, style=solid];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_66  [key=2, style=dotted];
m2_391 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_392 -> m2_390  [key=0, style=bold, color=blue];
m2_501 -> m2_502  [key=0, style=solid];
m2_502 -> m2_503  [key=0, style=solid];
m2_502 -> m2_66  [key=2, style=dotted];
m2_502 -> m2_504  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_503 -> m2_501  [key=0, style=bold, color=blue];
m2_900 -> m2_901  [key=0, style=solid];
m2_900 -> m2_903  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>"];
m2_901 -> m2_902  [key=0, style=solid];
m2_901 -> m2_32  [key=2, style=dotted];
m2_901 -> m2_903  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m2_903 -> m2_904  [key=0, style=solid];
m2_903 -> m2_905  [key=2, style=dotted];
m2_902 -> m2_903  [key=0, style=solid];
m2_902 -> m2_24  [key=2, style=dotted];
m2_904 -> m2_900  [key=0, style=bold, color=blue];
m2_260 -> m2_261  [key=0, style=solid];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_66  [key=2, style=dotted];
m2_261 -> m2_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_262 -> m2_260  [key=0, style=bold, color=blue];
m2_179 -> m2_180  [key=0, style=solid];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_66  [key=2, style=dotted];
m2_180 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_181 -> m2_179  [key=0, style=bold, color=blue];
m2_77 -> m2_78  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_66  [key=2, style=dotted];
m2_78 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_79 -> m2_77  [key=0, style=bold, color=blue];
m2_336 -> m2_337  [key=0, style=solid];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_66  [key=2, style=dotted];
m2_337 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_338 -> m2_336  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_13  [key=2, style=dotted];
m2_121 -> m2_910  [key=0, style=solid];
m2_910 -> m2_121  [key=0, style=bold, color=blue];
m2_729 -> m2_730  [key=0, style=solid];
m2_730 -> m2_731  [key=0, style=solid];
m2_730 -> m2_66  [key=2, style=dotted];
m2_730 -> m2_732  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_731 -> m2_729  [key=0, style=bold, color=blue];
m2_530 -> m2_531  [key=0, style=solid];
m2_531 -> m2_532  [key=0, style=solid];
m2_531 -> m2_66  [key=2, style=dotted];
m2_531 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_532 -> m2_530  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted, color=green];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=provider];
m2_2 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_12  [key=2, style=dotted];
m2_19 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_19 -> m2_16  [key=0, style=bold, color=blue];
m2_107 -> m2_108  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_66  [key=2, style=dotted];
m2_108 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_109 -> m2_107  [key=0, style=bold, color=blue];
m2_612 -> m2_613  [key=0, style=solid];
m2_613 -> m2_614  [key=0, style=solid];
m2_613 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_614 -> m2_615  [key=0, style=solid];
m2_614 -> m2_125  [key=2, style=dotted];
m2_614 -> m2_616  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_615 -> m2_612  [key=0, style=bold, color=blue];
m2_765 -> m2_766  [key=0, style=solid];
m2_766 -> m2_767  [key=0, style=solid];
m2_766 -> m2_66  [key=2, style=dotted];
m2_766 -> m2_768  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_767 -> m2_765  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_14  [key=2, style=dotted];
m2_17 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_489 -> m2_490  [key=0, style=solid];
m2_490 -> m2_491  [key=0, style=solid];
m2_490 -> m2_494  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_491 -> m2_492  [key=0, style=solid];
m2_491 -> m2_125  [key=2, style=dotted];
m2_491 -> m2_493  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_492 -> m2_489  [key=0, style=bold, color=blue];
m2_755 -> m2_756  [key=0, style=solid];
m2_756 -> m2_757  [key=0, style=solid];
m2_756 -> m2_66  [key=2, style=dotted];
m2_756 -> m2_758  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_757 -> m2_755  [key=0, style=bold, color=blue];
m2_226 -> m2_227  [key=0, style=solid];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_125  [key=2, style=dotted];
m2_228 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_229 -> m2_226  [key=0, style=bold, color=blue];
m2_803 -> m2_804  [key=0, style=solid];
m2_804 -> m2_805  [key=0, style=solid];
m2_804 -> m2_66  [key=2, style=dotted];
m2_804 -> m2_806  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_805 -> m2_803  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid, color=red];
m2_64 -> m2_65  [key=0, style=solid, color=red];
m2_64 -> m2_66  [key=2, style=dotted, color=red];
m2_64 -> m2_67  [key=1, style=dashed, color=red, label="lambda expression"];
m2_65 -> m2_63  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_676 -> m2_677  [key=0, style=solid];
m2_677 -> m2_678  [key=0, style=solid];
m2_677 -> m2_66  [key=2, style=dotted];
m2_677 -> m2_679  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_678 -> m2_676  [key=0, style=bold, color=blue];
m2_46 -> m2_47  [key=0, style=solid, color=red];
m2_47 -> m2_48  [key=0, style=solid, color=red];
m2_47 -> m2_49  [key=2, style=dotted, color=red];
m2_47 -> m2_50  [key=1, style=dashed, color=red, label="lambda expression"];
m2_48 -> m2_46  [key=0, style=bold, color=blue];
m2_519 -> m2_520  [key=0, style=solid];
m2_520 -> m2_521  [key=0, style=solid];
m2_520 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_125  [key=2, style=dotted];
m2_521 -> m2_523  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_522 -> m2_519  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [key=2, style=dotted];
m2_541 -> m2_542  [key=0, style=solid];
m2_542 -> m2_543  [key=0, style=solid];
m2_542 -> m2_66  [key=2, style=dotted];
m2_542 -> m2_544  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_543 -> m2_541  [key=0, style=bold, color=blue];
m2_686 -> m2_687  [key=0, style=solid];
m2_687 -> m2_688  [key=0, style=solid];
m2_687 -> m2_66  [key=2, style=dotted];
m2_687 -> m2_689  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_688 -> m2_686  [key=0, style=bold, color=blue];
m2_702 -> m2_703  [key=0, style=solid];
m2_703 -> m2_704  [key=0, style=solid];
m2_703 -> m2_66  [key=2, style=dotted];
m2_703 -> m2_705  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_704 -> m2_702  [key=0, style=bold, color=blue];
m2_49 -> m2_906  [key=0, style=solid];
m2_49 -> m2_907  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.SqlServer.SqlServerConnection>"];
m2_906 -> m2_907  [key=0, style=solid];
m2_906 -> m2_24  [key=2, style=dotted];
m2_906 -> m2_32  [key=2, style=dotted];
m2_907 -> m2_908  [key=0, style=solid];
m2_907 -> m2_909  [key=2, style=dotted];
m2_908 -> m2_49  [key=0, style=bold, color=blue];
m2_641 -> m2_642  [key=0, style=solid];
m2_642 -> m2_643  [key=0, style=solid];
m2_642 -> m2_66  [key=2, style=dotted];
m2_642 -> m2_644  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_643 -> m2_641  [key=0, style=bold, color=blue];
m2_819 -> m2_820  [key=0, style=solid];
m2_820 -> m2_821  [key=0, style=solid];
m2_820 -> m2_66  [key=2, style=dotted];
m2_820 -> m2_822  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_821 -> m2_819  [key=0, style=bold, color=blue];
m2_315 -> m2_316  [key=0, style=solid];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_66  [key=2, style=dotted];
m2_316 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_317 -> m2_315  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_24  [key=2, style=dotted];
m2_838 -> m2_839  [key=0, style=solid];
m2_839 -> m2_840  [key=0, style=solid];
m2_839 -> m2_843  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_840 -> m2_841  [key=0, style=solid];
m2_840 -> m2_125  [key=2, style=dotted];
m2_840 -> m2_842  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_841 -> m2_838  [key=0, style=bold, color=blue];
m2_95 -> m2_96  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_66  [key=2, style=dotted];
m2_96 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_97 -> m2_95  [key=0, style=bold, color=blue];
m2_651 -> m2_652  [key=0, style=solid];
m2_652 -> m2_653  [key=0, style=solid];
m2_652 -> m2_66  [key=2, style=dotted];
m2_652 -> m2_654  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_653 -> m2_651  [key=0, style=bold, color=blue];
m2_873 -> m2_874  [key=0, style=solid];
m2_874 -> m2_875  [key=0, style=solid];
m2_874 -> m2_66  [key=2, style=dotted];
m2_874 -> m2_876  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_875 -> m2_873  [key=0, style=bold, color=blue];
m2_86 -> m2_87  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_66  [key=2, style=dotted];
m2_87 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_88 -> m2_86  [key=0, style=bold, color=blue];
m2_595 -> m2_596  [key=0, style=solid];
m2_596 -> m2_597  [key=0, style=solid];
m2_596 -> m2_66  [key=2, style=dotted];
m2_596 -> m2_598  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_597 -> m2_595  [key=0, style=bold, color=blue];
m2_380 -> m2_381  [key=0, style=solid];
m2_381 -> m2_382  [key=0, style=solid];
m2_381 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_125  [key=2, style=dotted];
m2_382 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_383 -> m2_380  [key=0, style=bold, color=blue];
m2_632 -> m2_633  [key=0, style=solid];
m2_633 -> m2_634  [key=0, style=solid];
m2_633 -> m2_637  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_634 -> m2_635  [key=0, style=solid];
m2_634 -> m2_125  [key=2, style=dotted];
m2_634 -> m2_636  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_635 -> m2_632  [key=0, style=bold, color=blue];
m2_292 -> m2_293  [key=0, style=solid];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_125  [key=2, style=dotted];
m2_294 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_295 -> m2_292  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid];
m2_461 -> m2_462  [key=0, style=solid];
m2_462 -> m2_463  [key=0, style=solid];
m2_462 -> m2_466  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_463 -> m2_464  [key=0, style=solid];
m2_463 -> m2_125  [key=2, style=dotted];
m2_463 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_464 -> m2_461  [key=0, style=bold, color=blue];
m2_830 -> m2_831  [key=0, style=solid];
m2_831 -> m2_832  [key=0, style=solid];
m2_831 -> m2_66  [key=2, style=dotted];
m2_831 -> m2_833  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_832 -> m2_830  [key=0, style=bold, color=blue];
m2_551 -> m2_552  [key=0, style=solid];
m2_552 -> m2_553  [key=0, style=solid];
m2_552 -> m2_125  [key=2, style=dotted];
m2_552 -> m2_554  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_553 -> m2_551  [key=0, style=bold, color=blue];
m2_187 -> m2_188  [key=0, style=solid];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_125  [key=2, style=dotted];
m2_189 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_190 -> m2_187  [key=0, style=bold, color=blue];
m2_451 -> m2_452  [key=0, style=solid];
m2_452 -> m2_453  [key=0, style=solid];
m2_452 -> m2_66  [key=2, style=dotted];
m2_452 -> m2_454  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_453 -> m2_451  [key=0, style=bold, color=blue];
m2_746 -> m2_747  [key=0, style=solid];
m2_747 -> m2_748  [key=0, style=solid];
m2_747 -> m2_751  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_748 -> m2_749  [key=0, style=solid];
m2_748 -> m2_125  [key=2, style=dotted];
m2_748 -> m2_750  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_749 -> m2_746  [key=0, style=bold, color=blue];
m2_169 -> m2_170  [key=0, style=solid];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_66  [key=2, style=dotted];
m2_170 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_171 -> m2_169  [key=0, style=bold, color=blue];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=2, style=dotted];
m2_123 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_124 -> m2_122  [key=0, style=bold, color=blue];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_32  [key=2, style=dotted];
m2_41 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m2_373 -> m2_374  [key=0, style=solid];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_66  [key=2, style=dotted];
m2_374 -> m2_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_375 -> m2_373  [key=0, style=bold, color=blue];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_20  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_39  [key=2, style=dotted];
m2_43 -> m2_1  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_43 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts"];
m2_45 -> m2_40  [key=0, style=bold, color=blue];
m2_605 -> m2_606  [key=0, style=solid];
m2_606 -> m2_607  [key=0, style=solid];
m2_606 -> m2_66  [key=2, style=dotted];
m2_606 -> m2_608  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_607 -> m2_605  [key=0, style=bold, color=blue];
m2_911 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_47  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_64  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_327  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_374  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_382  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_391  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_413  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_452  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_479  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_491  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_502  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_512  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_521  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_531  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_542  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_567  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_577  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_585  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_596  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_606  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_614  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_623  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_634  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_652  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_660  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_669  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_677  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_687  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_695  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_703  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_713  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_721  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_730  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_740  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_748  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_756  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_766  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_774  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_783  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_794  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_804  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_812  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_820  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_831  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_840  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_848  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_858  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_866  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_874  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_884  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_892  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_902  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_911 -> m2_906  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_912 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_913 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=queues];
m2_914 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_915 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_916 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_917 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_918 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_919 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_920 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_921 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_922 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_923 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_924 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_925 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_926 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_927 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_928 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_929 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_930 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_931 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_932 -> m2_361  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_933 -> m2_371  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_934 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_935 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_936 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_937 -> m2_437  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_938 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_939 -> m2_458  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_940 -> m2_466  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_941 -> m2_485  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_942 -> m2_494  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_943 -> m2_508  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_944 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_945 -> m2_538  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_946 -> m2_549  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_947 -> m2_573  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_948 -> m2_588  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_949 -> m2_602  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_950 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_951 -> m2_629  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_952 -> m2_637  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_953 -> m2_648  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_954 -> m2_663  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_955 -> m2_672  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_956 -> m2_683  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_957 -> m2_698  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_958 -> m2_709  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_959 -> m2_724  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_960 -> m2_736  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_961 -> m2_751  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_962 -> m2_762  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_963 -> m2_777  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_964 -> m2_790  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_965 -> m2_801  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_966 -> m2_815  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_967 -> m2_827  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_968 -> m2_843  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_969 -> m2_854  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_970 -> m2_869  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_971 -> m2_880  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_972 -> m2_895  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m4_247 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> EnqueuedJobs"];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_248 -> m4_9  [key=2, style=dotted];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_249 -> m4_247  [key=0, style=bold, color=blue];
m4_274 -> m4_327  [key=0, style=solid];
m4_274 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_274 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_274 -> m4_335  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_274 -> m4_336  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats"];
m4_329 -> m4_203  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_338 -> m4_203  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_344  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_328 -> m4_86  [key=2, style=dotted];
m4_328 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_328 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_328 -> m4_342  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_334  [key=0, style=solid];
m4_333 -> m4_330  [key=0, style=solid];
m4_333 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_337 -> m4_342  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_337 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_343 -> m4_338  [key=0, style=solid];
m4_343 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_339 -> m4_340  [key=0, style=solid];
m4_344 -> m4_345  [key=0, style=solid];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_327 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_92  [key=2, style=dotted];
m4_334 -> m4_93  [key=2, style=dotted];
m4_334 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_335 -> m4_336  [key=0, style=solid];
m4_335 -> m4_347  [key=2, style=dotted];
m4_335 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_336 -> m4_87  [key=2, style=dotted];
m4_336 -> m4_342  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_331 -> m4_224  [key=2, style=dotted];
m4_331 -> m4_332  [key=0, style=solid];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_350  [key=2, style=dotted];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_332 -> m4_346  [key=2, style=dotted];
m4_340 -> m4_342  [key=0, style=solid];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_348  [key=2, style=dotted];
m4_340 -> m4_349  [key=2, style=dotted];
m4_341 -> m4_342  [key=0, style=solid];
m4_345 -> m4_274  [key=0, style=bold, color=blue];
m4_122 -> m4_356  [key=0, style=solid];
m4_122 -> m4_363  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_122 -> m4_380  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_122 -> m4_364  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_122 -> m4_365  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m4_367 -> m4_203  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_373  [key=0, style=solid];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_359  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_356 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_356 -> m4_361  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_92  [key=2, style=dotted];
m4_363 -> m4_93  [key=2, style=dotted];
m4_363 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_347  [key=2, style=dotted];
m4_364 -> m4_369  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_87  [key=2, style=dotted];
m4_365 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_365 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_362 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_92  [key=2, style=dotted];
m4_362 -> m4_93  [key=2, style=dotted];
m4_362 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_369  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_366 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_366 -> m4_372  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_372 -> m4_367  [key=0, style=solid];
m4_372 -> m4_372  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_368 -> m4_369  [key=0, style=solid];
m4_373 -> m4_374  [key=0, style=solid];
m4_358 -> m4_86  [key=2, style=dotted];
m4_358 -> m4_362  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_358 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_375  [key=2, style=dotted];
m4_357 -> m4_359  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m4_359 -> m4_362  [key=0, style=solid];
m4_359 -> m4_360  [key=0, style=solid];
m4_360 -> m4_224  [key=2, style=dotted];
m4_360 -> m4_361  [key=0, style=solid];
m4_361 -> m4_359  [key=0, style=solid];
m4_361 -> m4_361  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_361 -> m4_375  [key=2, style=dotted];
m4_369 -> m4_370  [key=0, style=solid];
m4_369 -> m4_371  [key=0, style=solid];
m4_369 -> m4_348  [key=2, style=dotted];
m4_369 -> m4_349  [key=2, style=dotted];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_350  [key=2, style=dotted];
m4_370 -> m4_371  [key=0, style=solid];
m4_374 -> m4_122  [key=0, style=bold, color=blue];
m4_257 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FetchedJobDto> FetchedJobs"];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_261  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_258 -> m4_9  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_259 -> m4_257  [key=0, style=bold, color=blue];
m4_275 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m4_275 -> m4_276  [key=0, style=solid];
m4_276 -> m4_9  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_277 -> m4_275  [key=0, style=bold, color=blue];
m4_433 -> m4_434  [key=0, style=solid];
m4_434 -> m4_434  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.StatisticsDto "];
m4_434 -> m4_435  [key=0, style=solid];
m4_434 -> m4_70  [key=2, style=dotted];
m4_434 -> m4_436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_435 -> m4_433  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid, color=green];
m4_22 -> m4_26  [key=1, style=dashed, color=green, label=string];
m4_22 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long FetchedCount"];
m4_23 -> m4_24  [key=0, style=solid, color=green];
m4_23 -> m4_9  [key=2, style=dotted, color=green];
m4_23 -> m4_25  [key=1, style=dashed, color=green, label="lambda expression"];
m4_24 -> m4_22  [key=0, style=bold, color=blue];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_285  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_281 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_282 -> m4_203  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto "];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_70  [key=2, style=dotted];
m4_282 -> m4_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_283 -> m4_281  [key=0, style=bold, color=blue];
m4_427 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long SucceededListCount"];
m4_427 -> m4_428  [key=0, style=solid];
m4_428 -> m4_9  [key=2, style=dotted];
m4_428 -> m4_429  [key=0, style=solid];
m4_428 -> m4_430  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_429 -> m4_427  [key=0, style=bold, color=blue];
m4_191 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.DeletedJobDto> DeletedJobs"];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_192 -> m4_9  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_193 -> m4_191  [key=0, style=bold, color=blue];
m4_222 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_222 -> m4_382  [key=0, style=solid];
m4_222 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_222 -> m4_385  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_222 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_222 -> m4_387  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_222 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_222 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_222 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_222 -> m4_394  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_222 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m4_383 -> m4_54  [key=2, style=dotted];
m4_383 -> m4_395  [key=0, style=solid];
m4_383 -> m4_86  [key=2, style=dotted];
m4_389 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_389 -> m4_399  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_389 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_389 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_389 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_389 -> m4_413  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_389 -> m4_388  [key=3, color=darkorchid, style=bold, label="Local variable string id"];
m4_386 -> m4_399  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_386 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_386 -> m4_394  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_386 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_384  [key=0, style=solid];
m4_384 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_384 -> m4_385  [key=0, style=solid];
m4_384 -> m4_396  [key=2, style=dotted];
m4_384 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_384 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_384 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_384 -> m4_394  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_385 -> m4_386  [key=0, style=solid];
m4_385 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_385 -> m4_396  [key=2, style=dotted];
m4_385 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_385 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_385 -> m4_413  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_385 -> m4_394  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_88  [key=2, style=dotted];
m4_387 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_387 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_387 -> m4_393  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_388 -> m4_389  [key=0, style=solid];
m4_388 -> m4_393  [key=0, style=solid];
m4_391 -> m4_388  [key=0, style=solid];
m4_391 -> m4_392  [key=0, style=solid];
m4_392 -> m4_408  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_392 -> m4_388  [key=0, style=solid];
m4_392 -> m4_89  [key=2, style=dotted];
m4_392 -> m4_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_394 -> m4_395  [key=0, style=solid];
m4_394 -> m4_397  [key=2, style=dotted];
m4_394 -> m4_92  [key=2, style=dotted];
m4_394 -> m4_93  [key=2, style=dotted];
m4_394 -> m4_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_394 -> m4_418  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_390 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_390 -> m4_391  [key=0, style=solid];
m4_390 -> m4_89  [key=2, style=dotted];
m4_390 -> m4_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_90  [key=2, style=dotted];
m4_395 -> m4_222  [key=0, style=bold, color=blue];
m4_9 -> m4_7  [key=3, color=green, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_15  [key=3, color=green, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_23  [key=3, color=green, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_29  [key=3, color=green, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_35  [key=3, color=green, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_41  [key=3, color=green, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_47  [key=3, color=green, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_512  [key=0, style=solid];
m4_9 -> m4_513  [key=1, style=dashed, color=darkseagreen4, label="System.Func<IRedisClient, T>"];
m4_9 -> m4_117  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_124  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_167  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_179  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_192  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_248  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_258  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_269  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_276  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_9 -> m4_428  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<IRedisClient, T> action"];
m4_512 -> m4_513  [key=0, style=solid];
m4_512 -> m4_515  [key=2, style=dotted];
m4_513 -> m4_514  [key=0, style=solid];
m4_513 -> m4_516  [key=2, style=dotted];
m4_514 -> m4_9  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_0 -> m4_3  [key=1, style=dashed, color=green, label=PooledRedisClientManager];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=0, style=solid, color=green];
m4_2 -> m4_4  [key=0, style=solid, color=green];
m4_2 -> d10  [key=2, style=dotted, color=green];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_497 -> m4_498  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid, color=green];
m4_11 -> m4_12  [key=0, style=solid, color=green];
m4_11 -> m4_13  [key=2, style=dotted, color=green];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid, color=green];
m4_18 -> m4_19  [key=0, style=solid, color=green];
m4_18 -> m4_20  [key=2, style=dotted, color=green];
m4_18 -> m4_21  [key=2, style=dotted, color=green];
m4_19 -> m4_17  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid, color=green];
m4_26 -> m4_27  [key=0, style=solid, color=green];
m4_26 -> m4_20  [key=2, style=dotted, color=green];
m4_26 -> m4_21  [key=2, style=dotted, color=green];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_31 -> m4_32  [key=0, style=solid, color=green];
m4_32 -> m4_33  [key=0, style=solid, color=green];
m4_32 -> m4_13  [key=2, style=dotted, color=green];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid, color=green];
m4_38 -> m4_39  [key=0, style=solid, color=green];
m4_38 -> m4_13  [key=2, style=dotted, color=green];
m4_39 -> m4_37  [key=0, style=bold, color=blue];
m4_43 -> m4_44  [key=0, style=solid, color=green];
m4_44 -> m4_45  [key=0, style=solid, color=green];
m4_44 -> m4_21  [key=2, style=dotted, color=green];
m4_45 -> m4_43  [key=0, style=bold, color=blue];
m4_49 -> m4_50  [key=0, style=solid, color=green];
m4_49 -> m4_51  [key=1, style=dashed, color=green, label=IRedisClient];
m4_50 -> m4_51  [key=0, style=solid, color=green];
m4_50 -> m4_53  [key=2, style=dotted, color=green];
m4_51 -> m4_52  [key=0, style=solid, color=green];
m4_51 -> m4_54  [key=2, style=dotted, color=green];
m4_51 -> m4_55  [key=2, style=dotted, color=green];
m4_51 -> m4_56  [key=2, style=dotted, color=green];
m4_51 -> m4_57  [key=2, style=dotted, color=green];
m4_51 -> m4_58  [key=1, style=dashed, color=green, label="lambda expression"];
m4_51 -> m4_64  [key=1, style=dashed, color=green, label="lambda expression"];
m4_52 -> m4_49  [key=0, style=bold, color=blue];
m4_58 -> m4_59  [key=0, style=solid, color=green];
m4_64 -> m4_65  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid, color=green];
m4_59 -> m4_61  [key=2, style=dotted, color=green];
m4_59 -> m4_62  [key=2, style=dotted, color=green];
m4_59 -> m4_63  [key=2, style=dotted, color=green];
m4_60 -> m4_58  [key=0, style=bold, color=blue];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_122  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_122  [key=2, style=dotted];
m4_171 -> m4_55  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_183 -> m4_55  [key=2, style=dotted];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_196 -> m4_55  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_222  [key=2, style=dotted];
m4_217 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_252 -> m4_55  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_262 -> m4_55  [key=2, style=dotted];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_274  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_274  [key=2, style=dotted];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_313  [key=2, style=dotted];
m4_304 -> m4_314  [key=2, style=dotted];
m4_304 -> m4_309  [key=2, style=dotted];
m4_304 -> m4_310  [key=2, style=dotted];
m4_304 -> m4_315  [key=2, style=dotted];
m4_304 -> m4_316  [key=2, style=dotted];
m4_304 -> m4_317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_304 -> m4_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_304 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_469 -> m4_13  [key=2, style=dotted];
m4_469 -> m4_470  [key=0, style=solid];
m4_475 -> m4_13  [key=2, style=dotted];
m4_475 -> m4_476  [key=0, style=solid];
m4_489 -> m4_13  [key=2, style=dotted];
m4_489 -> m4_490  [key=0, style=solid];
m4_501 -> m4_13  [key=2, style=dotted];
m4_501 -> m4_502  [key=0, style=solid];
m4_251 -> m4_20  [key=2, style=dotted];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_185  [key=2, style=dotted];
m4_261 -> m4_20  [key=2, style=dotted];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_185  [key=2, style=dotted];
m4_285 -> m4_20  [key=2, style=dotted];
m4_285 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_306  [key=2, style=dotted];
m4_285 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_285 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_285 -> m4_302  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_285 -> m4_303  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_289 -> m4_20  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_156  [key=2, style=dotted];
m4_409 -> m4_20  [key=2, style=dotted];
m4_409 -> m4_410  [key=0, style=solid];
m4_409 -> m4_98  [key=2, style=dotted];
m4_399 -> m4_20  [key=2, style=dotted];
m4_399 -> m4_400  [key=0, style=solid];
m4_399 -> m4_401  [key=2, style=dotted];
m4_399 -> m4_402  [key=2, style=dotted];
m4_399 -> m4_98  [key=2, style=dotted];
m4_232 -> m4_21  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_97  [key=2, style=dotted];
m4_238 -> m4_21  [key=2, style=dotted];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_97  [key=2, style=dotted];
m4_431 -> m4_21  [key=2, style=dotted];
m4_431 -> m4_432  [key=0, style=solid];
m4_507 -> m4_21  [key=2, style=dotted];
m4_507 -> m4_508  [key=0, style=solid];
m4_507 -> m4_97  [key=2, style=dotted];
m4_74 -> m4_54  [key=2, style=dotted];
m4_74 -> m4_84  [key=0, style=solid];
m4_74 -> m4_86  [key=2, style=dotted];
m4_66 -> m4_64  [key=0, style=bold, color=blue];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>"];
m4_110 -> m4_62  [key=2, style=dotted];
m4_110 -> m4_63  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=2, style=dotted];
m4_110 -> m4_113  [key=2, style=dotted];
m4_110 -> m4_114  [key=2, style=dotted];
m4_110 -> m4_115  [key=2, style=dotted];
m4_161 -> m4_62  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_163  [key=2, style=dotted];
m4_161 -> m4_164  [key=2, style=dotted];
m4_161 -> m4_165  [key=2, style=dotted];
m4_175 -> m4_62  [key=2, style=dotted];
m4_175 -> m4_63  [key=2, style=dotted];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_177  [key=2, style=dotted];
m4_187 -> m4_62  [key=2, style=dotted];
m4_187 -> m4_63  [key=2, style=dotted];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_189  [key=2, style=dotted];
m4_187 -> m4_190  [key=2, style=dotted];
m4_199 -> m4_62  [key=2, style=dotted];
m4_199 -> m4_63  [key=2, style=dotted];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_201  [key=2, style=dotted];
m4_244 -> m4_62  [key=2, style=dotted];
m4_244 -> m4_63  [key=2, style=dotted];
m4_244 -> m4_245  [key=0, style=solid];
m4_244 -> m4_246  [key=2, style=dotted];
m4_255 -> m4_62  [key=2, style=dotted];
m4_255 -> m4_63  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_246  [key=2, style=dotted];
m4_265 -> m4_62  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_267  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_119 -> m4_120  [key=0, style=solid];
m4_121 -> m4_119  [key=0, style=bold, color=blue];
m4_126 -> m4_127  [key=0, style=solid];
m4_128 -> m4_126  [key=0, style=bold, color=blue];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_169 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_169 -> m4_170  [key=0, style=solid];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_173  [key=2, style=dotted];
m4_172 -> m4_169  [key=0, style=bold, color=blue];
m4_174 -> m4_175  [key=0, style=solid];
m4_181 -> m4_183  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_181 -> m4_182  [key=0, style=solid];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_185  [key=2, style=dotted];
m4_184 -> m4_181  [key=0, style=bold, color=blue];
m4_186 -> m4_187  [key=0, style=solid];
m4_194 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_194 -> m4_195  [key=0, style=solid];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_185  [key=2, style=dotted];
m4_197 -> m4_194  [key=0, style=bold, color=blue];
m4_198 -> m4_199  [key=0, style=solid];
m4_205 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_212  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_213 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_89  [key=2, style=dotted];
m4_213 -> m4_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_213 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_90  [key=2, style=dotted];
m4_218 -> m4_208  [key=0, style=solid];
m4_218 -> m4_223  [key=2, style=dotted];
m4_218 -> m4_224  [key=2, style=dotted];
m4_243 -> m4_244  [key=0, style=solid];
m4_250 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_250 -> m4_251  [key=0, style=solid];
m4_253 -> m4_250  [key=0, style=bold, color=blue];
m4_254 -> m4_255  [key=0, style=solid];
m4_260 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_260 -> m4_261  [key=0, style=solid];
m4_263 -> m4_260  [key=0, style=bold, color=blue];
m4_264 -> m4_265  [key=0, style=solid];
m4_271 -> m4_272  [key=0, style=solid];
m4_273 -> m4_271  [key=0, style=bold, color=blue];
m4_278 -> m4_279  [key=0, style=solid];
m4_280 -> m4_278  [key=0, style=bold, color=blue];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_302 -> m4_304  [key=0, style=solid];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_309  [key=2, style=dotted];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_102  [key=2, style=dotted];
m4_288 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m4_291 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label=stateHistory];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_307  [key=2, style=dotted];
m4_291 -> m4_299  [key=1, style=dashed, color=darkseagreen4, label=stateHistory];
m4_305 -> m4_284  [key=0, style=bold, color=blue];
m4_317 -> m4_318  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_324 -> m4_325  [key=0, style=solid];
m4_430 -> m4_431  [key=0, style=solid];
m4_436 -> m4_437  [key=0, style=solid];
m4_436 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_436 -> m4_439  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_468 -> m4_469  [key=0, style=solid];
m4_470 -> m4_468  [key=0, style=bold, color=blue];
m4_474 -> m4_475  [key=0, style=solid];
m4_476 -> m4_474  [key=0, style=bold, color=blue];
m4_488 -> m4_489  [key=0, style=solid];
m4_490 -> m4_488  [key=0, style=bold, color=blue];
m4_500 -> m4_501  [key=0, style=solid];
m4_502 -> m4_500  [key=0, style=bold, color=blue];
m4_286 -> m4_288  [key=0, style=solid];
m4_286 -> m4_287  [key=0, style=solid];
m4_300 -> m4_302  [key=0, style=solid];
m4_300 -> m4_309  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_102  [key=2, style=dotted];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_92  [key=2, style=dotted];
m4_290 -> m4_93  [key=2, style=dotted];
m4_290 -> m4_292  [key=1, style=dashed, color=darkseagreen4, label=history];
m4_408 -> m4_409  [key=0, style=solid];
m4_410 -> m4_408  [key=0, style=bold, color=blue];
m4_398 -> m4_399  [key=0, style=solid];
m4_400 -> m4_398  [key=0, style=bold, color=blue];
m4_208 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_208 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_208 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_208 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_219  [key=0, style=solid];
m4_208 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_208 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_208 -> m4_215  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_231 -> m4_232  [key=0, style=solid];
m4_233 -> m4_231  [key=0, style=bold, color=blue];
m4_237 -> m4_238  [key=0, style=solid];
m4_239 -> m4_237  [key=0, style=bold, color=blue];
m4_432 -> m4_430  [key=0, style=bold, color=blue];
m4_449 -> m4_507  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m4_449 -> m4_450  [key=0, style=solid];
m4_506 -> m4_507  [key=0, style=solid];
m4_508 -> m4_506  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_75  [key=0, style=solid];
m4_84 -> m4_71  [key=0, style=bold, color=blue];
m4_75 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_87  [key=2, style=dotted];
m4_75 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_75 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_75 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_76 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_87  [key=2, style=dotted];
m4_76 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_76 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_76 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_109 -> m4_110  [key=0, style=solid];
m4_111 -> m4_109  [key=0, style=bold, color=blue];
m4_136 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_87  [key=2, style=dotted];
m4_136 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_136 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_136 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_137 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_87  [key=2, style=dotted];
m4_137 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_137 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_137 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_160 -> m4_161  [key=0, style=solid];
m4_162 -> m4_160  [key=0, style=bold, color=blue];
m4_176 -> m4_174  [key=0, style=bold, color=blue];
m4_188 -> m4_186  [key=0, style=bold, color=blue];
m4_200 -> m4_198  [key=0, style=bold, color=blue];
m4_245 -> m4_243  [key=0, style=bold, color=blue];
m4_256 -> m4_254  [key=0, style=bold, color=blue];
m4_266 -> m4_264  [key=0, style=bold, color=blue];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_85  [key=2, style=dotted];
m4_72 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m4_72 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_88  [key=2, style=dotted];
m4_77 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_77 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_77 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_380 -> m4_97  [key=2, style=dotted];
m4_380 -> m4_381  [key=0, style=solid];
m4_145 -> m4_132  [key=0, style=bold, color=blue];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_146  [key=2, style=dotted];
m4_133 -> m4_139  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m4_133 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_88  [key=2, style=dotted];
m4_138 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_138 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_138 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_416 -> m4_115  [key=2, style=dotted];
m4_416 -> m4_417  [key=0, style=solid];
m4_416 -> m4_407  [key=2, style=dotted];
m4_220 -> m4_205  [key=0, style=bold, color=blue];
m4_206 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_146  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_212 -> m4_88  [key=2, style=dotted];
m4_212 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_212 -> m4_215  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_421  [key=2, style=dotted];
m4_419 -> m4_422  [key=2, style=dotted];
m4_419 -> m4_423  [key=2, style=dotted];
m4_419 -> m4_424  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_214 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=length];
m4_214 -> m4_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_89  [key=2, style=dotted];
m4_214 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_225 -> m4_226  [key=0, style=solid];
m4_228 -> m4_229  [key=0, style=solid];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=fetched];
m4_215 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_215 -> m4_89  [key=2, style=dotted];
m4_215 -> m4_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_207 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_221  [key=2, style=dotted];
m4_207 -> m4_219  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_352 -> m4_353  [key=0, style=solid];
m4_352 -> m4_354  [key=2, style=dotted];
m4_352 -> m4_355  [key=2, style=dotted];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_320  [key=2, style=dotted];
m4_292 -> m4_300  [key=0, style=solid];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_294  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_299 -> m4_224  [key=2, style=dotted];
m4_299 -> m4_292  [key=0, style=solid];
m4_287 -> m4_305  [key=0, style=solid];
m4_293 -> m4_309  [key=2, style=dotted];
m4_293 -> m4_310  [key=2, style=dotted];
m4_293 -> m4_299  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_308  [key=2, style=dotted];
m4_293 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_319 -> m4_317  [key=0, style=bold, color=blue];
m4_323 -> m4_321  [key=0, style=bold, color=blue];
m4_322 -> m4_323  [key=0, style=solid];
m4_326 -> m4_324  [key=0, style=bold, color=blue];
m4_325 -> m4_326  [key=0, style=solid];
m4_453 -> m4_436  [key=0, style=bold, color=blue];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_454  [key=2, style=dotted];
m4_437 -> m4_440  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_460  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_441  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_466  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_442  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_472  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_443  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_478  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_444  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_485  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_445  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_492  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_446  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_498  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_447  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_504  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_450  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_510  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_437 -> m4_452  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_438 -> m4_439  [key=0, style=solid];
m4_438 -> m4_146  [key=2, style=dotted];
m4_438 -> m4_448  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_439 -> m4_440  [key=0, style=solid];
m4_439 -> m4_88  [key=2, style=dotted];
m4_439 -> m4_441  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_442  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_443  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_444  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_445  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_446  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_447  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_450  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_439 -> m4_451  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_442 -> m4_468  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_442 -> m4_89  [key=2, style=dotted];
m4_442 -> m4_443  [key=0, style=solid];
m4_442 -> m4_471  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_443 -> m4_474  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_443 -> m4_89  [key=2, style=dotted];
m4_443 -> m4_444  [key=0, style=solid];
m4_443 -> m4_477  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_445 -> m4_488  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_445 -> m4_89  [key=2, style=dotted];
m4_445 -> m4_446  [key=0, style=solid];
m4_445 -> m4_491  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_447 -> m4_500  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_447 -> m4_89  [key=2, style=dotted];
m4_447 -> m4_448  [key=0, style=solid];
m4_447 -> m4_503  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_226 -> m4_185  [key=2, style=dotted];
m4_226 -> m4_97  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_154 -> m4_156  [key=2, style=dotted];
m4_154 -> m4_97  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_404 -> m4_405  [key=0, style=solid];
m4_404 -> m4_406  [key=0, style=solid];
m4_404 -> m4_407  [key=2, style=dotted];
m4_405 -> m4_102  [key=2, style=dotted];
m4_405 -> m4_406  [key=0, style=solid];
m4_412 -> m4_413  [key=0, style=solid];
m4_412 -> m4_414  [key=0, style=solid];
m4_412 -> m4_407  [key=2, style=dotted];
m4_413 -> m4_102  [key=2, style=dotted];
m4_413 -> m4_414  [key=0, style=solid];
m4_95 -> m4_98  [key=2, style=dotted];
m4_95 -> m4_97  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_104 -> m4_98  [key=2, style=dotted];
m4_104 -> m4_97  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_148 -> m4_98  [key=2, style=dotted];
m4_148 -> m4_97  [key=2, style=dotted];
m4_148 -> m4_149  [key=0, style=solid];
m4_209 -> m4_210  [key=0, style=solid];
m4_219 -> m4_220  [key=0, style=solid];
m4_448 -> m4_449  [key=0, style=solid];
m4_448 -> m4_451  [key=0, style=solid];
m4_450 -> m4_506  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_450 -> m4_89  [key=2, style=dotted];
m4_450 -> m4_448  [key=0, style=solid];
m4_450 -> m4_509  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_83 -> m4_92  [key=2, style=dotted];
m4_83 -> m4_93  [key=2, style=dotted];
m4_83 -> m4_91  [key=2, style=dotted];
m4_135 -> m4_86  [key=2, style=dotted];
m4_135 -> m4_145  [key=0, style=solid];
m4_100 -> m4_102  [key=2, style=dotted];
m4_100 -> m4_101  [key=0, style=solid];
m4_107 -> m4_102  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_80 -> m4_89  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_80 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_81 -> m4_89  [key=2, style=dotted];
m4_81 -> m4_78  [key=0, style=solid];
m4_81 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_81 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_151 -> m4_102  [key=2, style=dotted];
m4_151 -> m4_152  [key=0, style=solid];
m4_158 -> m4_102  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_134 -> m4_136  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_141 -> m4_89  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_141 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_144 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_92  [key=2, style=dotted];
m4_144 -> m4_93  [key=2, style=dotted];
m4_142 -> m4_89  [key=2, style=dotted];
m4_142 -> m4_139  [key=0, style=solid];
m4_142 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_142 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_82  [key=0, style=solid];
m4_82 -> m4_90  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_379 -> m4_380  [key=0, style=solid];
m4_381 -> m4_379  [key=0, style=bold, color=blue];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_143  [key=0, style=solid];
m4_143 -> m4_90  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_415 -> m4_416  [key=0, style=solid];
m4_417 -> m4_415  [key=0, style=bold, color=blue];
m4_376 -> m4_377  [key=0, style=solid];
m4_211 -> m4_212  [key=0, style=solid];
m4_411 -> m4_412  [key=0, style=solid];
m4_411 -> m4_413  [key=1, style=dashed, color=darkseagreen4, label="?"];
m4_418 -> m4_419  [key=0, style=solid];
m4_420 -> m4_418  [key=0, style=bold, color=blue];
m4_424 -> m4_425  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_440 -> m4_89  [key=2, style=dotted];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_440 -> m4_459  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_441 -> m4_89  [key=2, style=dotted];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_462  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_441 -> m4_465  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_444 -> m4_89  [key=2, style=dotted];
m4_444 -> m4_445  [key=0, style=solid];
m4_444 -> m4_480  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_444 -> m4_484  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_446 -> m4_89  [key=2, style=dotted];
m4_446 -> m4_447  [key=0, style=solid];
m4_446 -> m4_494  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_446 -> m4_497  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_227 -> m4_225  [key=0, style=bold, color=blue];
m4_230 -> m4_228  [key=0, style=bold, color=blue];
m4_229 -> m4_230  [key=0, style=solid];
m4_240 -> m4_241  [key=0, style=solid];
m4_451 -> m4_90  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_351 -> m4_352  [key=0, style=solid];
m4_353 -> m4_351  [key=0, style=bold, color=blue];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_311  [key=2, style=dotted];
m4_294 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m4_294 -> m4_297  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m4_294 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m4_298 -> m4_299  [key=0, style=solid];
m4_452 -> m4_453  [key=0, style=solid];
m4_460 -> m4_461  [key=0, style=solid];
m4_466 -> m4_467  [key=0, style=solid];
m4_472 -> m4_473  [key=0, style=solid];
m4_478 -> m4_479  [key=0, style=solid];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_487  [key=2, style=dotted];
m4_492 -> m4_493  [key=0, style=solid];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_487  [key=2, style=dotted];
m4_504 -> m4_505  [key=0, style=solid];
m4_510 -> m4_511  [key=0, style=solid];
m4_471 -> m4_472  [key=0, style=solid];
m4_477 -> m4_478  [key=0, style=solid];
m4_491 -> m4_492  [key=0, style=solid];
m4_503 -> m4_504  [key=0, style=solid];
m4_140 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_140 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_140 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_140 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_153 -> m4_154  [key=0, style=solid];
m4_155 -> m4_153  [key=0, style=bold, color=blue];
m4_403 -> m4_404  [key=0, style=solid];
m4_403 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label="?"];
m4_406 -> m4_403  [key=0, style=bold, color=blue];
m4_414 -> m4_411  [key=0, style=bold, color=blue];
m4_79 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_79 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_79 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_79 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_94 -> m4_95  [key=0, style=solid];
m4_96 -> m4_94  [key=0, style=bold, color=blue];
m4_103 -> m4_104  [key=0, style=solid];
m4_105 -> m4_103  [key=0, style=bold, color=blue];
m4_147 -> m4_148  [key=0, style=solid];
m4_149 -> m4_147  [key=0, style=bold, color=blue];
m4_210 -> m4_211  [key=0, style=solid];
m4_509 -> m4_510  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_101 -> m4_99  [key=0, style=bold, color=blue];
m4_106 -> m4_107  [key=0, style=solid];
m4_108 -> m4_106  [key=0, style=bold, color=blue];
m4_150 -> m4_151  [key=0, style=solid];
m4_152 -> m4_150  [key=0, style=bold, color=blue];
m4_157 -> m4_158  [key=0, style=solid];
m4_159 -> m4_157  [key=0, style=bold, color=blue];
m4_378 -> m4_376  [key=0, style=bold, color=blue];
m4_377 -> m4_354  [key=2, style=dotted];
m4_377 -> m4_378  [key=0, style=solid];
m4_426 -> m4_424  [key=0, style=bold, color=blue];
m4_425 -> m4_426  [key=0, style=solid];
m4_236 -> m4_234  [key=0, style=bold, color=blue];
m4_235 -> m4_236  [key=0, style=solid];
m4_455 -> m4_456  [key=0, style=solid];
m4_459 -> m4_460  [key=0, style=solid];
m4_462 -> m4_463  [key=0, style=solid];
m4_465 -> m4_466  [key=0, style=solid];
m4_480 -> m4_481  [key=0, style=solid];
m4_484 -> m4_485  [key=0, style=solid];
m4_494 -> m4_495  [key=0, style=solid];
m4_242 -> m4_240  [key=0, style=bold, color=blue];
m4_241 -> m4_242  [key=0, style=solid];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_312  [key=2, style=dotted];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_312  [key=2, style=dotted];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_312  [key=2, style=dotted];
m4_461 -> m4_459  [key=0, style=bold, color=blue];
m4_467 -> m4_465  [key=0, style=bold, color=blue];
m4_473 -> m4_471  [key=0, style=bold, color=blue];
m4_479 -> m4_477  [key=0, style=bold, color=blue];
m4_486 -> m4_484  [key=0, style=bold, color=blue];
m4_493 -> m4_491  [key=0, style=bold, color=blue];
m4_499 -> m4_497  [key=0, style=bold, color=blue];
m4_505 -> m4_503  [key=0, style=bold, color=blue];
m4_511 -> m4_509  [key=0, style=bold, color=blue];
m4_457 -> m4_455  [key=0, style=bold, color=blue];
m4_456 -> m4_457  [key=0, style=solid];
m4_456 -> m4_458  [key=2, style=dotted];
m4_464 -> m4_462  [key=0, style=bold, color=blue];
m4_463 -> m4_464  [key=0, style=solid];
m4_463 -> m4_458  [key=2, style=dotted];
m4_482 -> m4_480  [key=0, style=bold, color=blue];
m4_481 -> m4_482  [key=0, style=solid];
m4_481 -> m4_483  [key=2, style=dotted];
m4_495 -> m4_496  [key=0, style=solid];
m4_495 -> m4_483  [key=2, style=dotted];
m4_496 -> m4_494  [key=0, style=bold, color=blue];
m4_115 -> m4_203  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Common.Job TryToGetJob"];
m4_115 -> m4_517  [key=0, style=solid];
m4_517 -> m4_520  [key=0, style=solid];
m4_517 -> m4_521  [key=2, style=dotted];
m4_517 -> m4_522  [key=2, style=dotted];
m4_519 -> m4_520  [key=0, style=solid];
m4_518 -> m4_519  [key=0, style=solid];
m4_520 -> m4_115  [key=0, style=bold, color=blue];
m4_166 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_167 -> m4_9  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_168 -> m4_166  [key=0, style=bold, color=blue];
m4_129 -> m4_130  [key=0, style=solid];
m4_130 -> m4_130  [key=3, color=darkorchid, style=bold, label="Local variable var name"];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_70  [key=2, style=dotted];
m4_130 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_131 -> m4_129  [key=0, style=bold, color=blue];
m4_40 -> m4_41  [key=0, style=solid, color=green];
m4_40 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long DeletedListCount"];
m4_41 -> m4_42  [key=0, style=solid, color=green];
m4_41 -> m4_9  [key=2, style=dotted, color=green];
m4_41 -> m4_43  [key=1, style=dashed, color=green, label="lambda expression"];
m4_42 -> m4_40  [key=0, style=bold, color=blue];
m4_178 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_179 -> m4_9  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_180 -> m4_178  [key=0, style=bold, color=blue];
m4_116 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m4_116 -> m4_117  [key=0, style=solid];
m4_117 -> m4_9  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_118 -> m4_116  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid, color=green];
m4_28 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m4_29 -> m4_30  [key=0, style=solid, color=green];
m4_29 -> m4_9  [key=2, style=dotted, color=green];
m4_29 -> m4_31  [key=1, style=dashed, color=green, label="lambda expression"];
m4_30 -> m4_28  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid, color=green];
m4_46 -> m4_50  [key=1, style=dashed, color=green, label=int];
m4_46 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs"];
m4_47 -> m4_48  [key=0, style=solid, color=green];
m4_47 -> m4_9  [key=2, style=dotted, color=green];
m4_47 -> m4_49  [key=1, style=dashed, color=green, label="lambda expression"];
m4_48 -> m4_46  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid, color=green];
m4_34 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m4_35 -> m4_36  [key=0, style=solid, color=green];
m4_35 -> m4_9  [key=2, style=dotted, color=green];
m4_35 -> m4_37  [key=1, style=dashed, color=green, label="lambda expression"];
m4_36 -> m4_34  [key=0, style=bold, color=blue];
m4_268 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m4_268 -> m4_269  [key=0, style=solid];
m4_269 -> m4_9  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_270 -> m4_268  [key=0, style=bold, color=blue];
m4_123 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_9  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_125 -> m4_123  [key=0, style=bold, color=blue];
m4_202 -> m4_203  [key=0, style=solid];
m4_203 -> m4_203  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> "];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_70  [key=2, style=dotted];
m4_203 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_203 -> m4_222  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> jobs"];
m4_204 -> m4_202  [key=0, style=bold, color=blue];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_68 -> m4_68  [key=3, color=darkorchid, style=bold, label="Local variable var job"];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_70  [key=2, style=dotted];
m4_68 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_69 -> m4_67  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid, color=green];
m4_14 -> m4_18  [key=1, style=dashed, color=green, label=string];
m4_14 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long EnqueuedCount"];
m4_15 -> m4_16  [key=0, style=solid, color=green];
m4_15 -> m4_9  [key=2, style=dotted, color=green];
m4_15 -> m4_17  [key=1, style=dashed, color=green, label="lambda expression"];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid, color=green];
m4_6 -> m4_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long ScheduledCount"];
m4_7 -> m4_8  [key=0, style=solid, color=green];
m4_7 -> m4_9  [key=2, style=dotted, color=green];
m4_7 -> m4_10  [key=1, style=dashed, color=green, label="lambda expression"];
m4_8 -> m4_6  [key=0, style=bold, color=blue];
m4_523 -> m4_3  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_7  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_15  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_23  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_29  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_35  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_41  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_47  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_51  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_183  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_248  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_276  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_428  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_434  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_523 -> m4_512  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_524 -> m4_18  [key=1, style=dashed, color=green, label=string];
m4_525 -> m4_26  [key=1, style=dashed, color=green, label=string];
m4_526 -> m4_50  [key=1, style=dashed, color=green, label=int];
m4_527 -> m4_50  [key=1, style=dashed, color=green, label=int];
m4_543 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_544 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_545 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_546 -> m4_261  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_547 -> m4_261  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_548 -> m4_261  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_549 -> m4_285  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_549 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_554 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_554 -> m4_399  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_554 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_554 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_554 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_554 -> m4_413  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_556 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_553 -> m4_399  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_553 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_542 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_542 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_542 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_560 -> m4_507  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m4_531 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_531 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_532 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_532 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_534 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_534 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_535 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_535 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_536 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_537 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_538 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_539 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_540 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_541 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_528 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_529 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_552 -> m4_380  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_555 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_555 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_555 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_557 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_557 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_557 -> m4_413  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_558 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m4_551 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_550 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m4_533 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_533 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_533 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_533 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_530 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_530 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_530 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_530 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_559 -> m4_460  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_466  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_472  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_478  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_485  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_492  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_498  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_504  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_559 -> m4_510  [key=1, style=dashed, color=darkseagreen4, label=stats];
m5_15 -> m5_18  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [key=2, style=dotted];
m5_40 -> m5_38  [key=0, style=bold, color=blue];
m5_42 -> m5_48  [key=1, style=dashed, color=green, label=IRedisTransaction];
m5_42 -> m5_62  [key=1, style=dashed, color=green, label=string];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_42 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_42 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_42 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_42 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_42 -> m5_66  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid, color=green];
m5_48 -> m5_18  [key=2, style=dotted, color=green];
m5_48 -> m5_61  [key=1, style=dashed, color=green, label="lambda expression"];
m5_48 -> m5_69  [key=2, style=dotted];
m5_48 -> m5_72  [key=2, style=dotted];
m5_48 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=lastExecutionTime];
m5_47 -> m5_48  [key=0, style=solid, color=green];
m5_47 -> m5_18  [key=2, style=dotted];
m5_47 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=instant];
m5_47 -> m5_71  [key=2, style=dotted];
m5_47 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=instant];
m5_47 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=instant];
m5_47 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=instant];
m5_45 -> m5_18  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_45 -> m5_68  [key=2, style=dotted];
m5_45 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
m5_46 -> m5_18  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_46 -> m5_69  [key=2, style=dotted];
m5_46 -> m5_70  [key=2, style=dotted];
m5_43 -> m5_45  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_67  [key=2, style=dotted];
m5_43 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_44 -> m5_49  [key=0, style=solid];
m5_44 -> d10  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_49 -> m5_42  [key=0, style=bold, color=blue];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_73  [key=2, style=dotted];
m5_49 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m5_49 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m5_49 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m5_49 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_18  [key=2, style=dotted];
m5_10 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_10 -> m5_14  [key=0, style=solid];
m5_10 -> m5_15  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_12 -> m5_18  [key=2, style=dotted, color=green];
m5_12 -> m5_27  [key=1, style=dashed, color=green, label="lambda expression"];
m5_7 -> m5_12  [key=1, style=dashed, color=green, label=IRedisTransaction];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_7 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_7 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_7 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_7 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_7 -> m5_9  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_18  [key=2, style=dotted];
m5_11 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_18  [key=2, style=dotted];
m5_13 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_8 -> m5_10  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_14  [key=0, style=solid];
m5_8 -> m5_15  [key=2, style=dotted];
m5_14 -> m5_18  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_14 -> m5_4  [key=0, style=bold, color=blue];
m5_9 -> m5_16  [key=0, style=solid];
m5_9 -> d10  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=0, style=solid];
m5_16 -> m5_7  [key=0, style=bold, color=blue];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_16 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_16 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_33  [key=2, style=dotted];
m5_22 -> m5_34  [key=2, style=dotted];
m5_22 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_36 -> m5_34  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_21  [key=0, style=solid];
m5_29 -> m5_27  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_29  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_30  [key=2, style=dotted];
m5_18 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_18 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_18 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_21  [key=0, style=solid];
m5_24 -> m5_35  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid, color=green];
m5_27 -> m5_37  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_31  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_32  [key=2, style=dotted];
m5_20 -> m5_22  [key=2, style=dotted];
m5_20 -> m5_23  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_27  [key=0, style=solid];
m5_21 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m5_21 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m5_21 -> m5_19  [key=0, style=bold, color=blue];
m5_26 -> m5_21  [key=0, style=solid];
m5_26 -> m5_33  [key=2, style=dotted];
m5_26 -> m5_36  [key=2, style=dotted];
m5_26 -> m5_24  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_22  [key=2, style=dotted];
m5_25 -> m5_23  [key=2, style=dotted];
m5_28 -> m5_16  [key=0, style=bold, color=blue];
m5_28 -> m5_29  [key=0, style=solid, color=green];
m5_28 -> m5_22  [key=2, style=dotted, color=green];
m5_28 -> m5_23  [key=2, style=dotted, color=green];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_78  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid, color=green];
m5_61 -> m5_81  [key=2, style=dotted];
m5_61 -> m5_82  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid, color=green];
m5_62 -> m5_22  [key=2, style=dotted, color=green];
m5_62 -> m5_57  [key=2, style=dotted, color=green];
m5_62 -> m5_65  [key=0, style=solid];
m5_62 -> m5_33  [key=2, style=dotted];
m5_62 -> m5_83  [key=2, style=dotted];
m5_63 -> m5_61  [key=0, style=bold, color=blue];
m5_63 -> m5_64  [key=0, style=solid];
m5_55 -> m5_22  [key=2, style=dotted];
m5_55 -> m5_57  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_79  [key=2, style=dotted];
m5_59 -> m5_22  [key=2, style=dotted];
m5_59 -> m5_57  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_81  [key=2, style=dotted];
m5_59 -> m5_82  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_80  [key=2, style=dotted];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_61  [key=0, style=solid];
m5_50 -> m5_74  [key=2, style=dotted];
m5_50 -> m5_75  [key=2, style=dotted];
m5_56 -> m5_54  [key=0, style=bold, color=blue];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_60 -> m5_58  [key=0, style=bold, color=blue];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_82  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=2, style=dotted];
m5_35 -> m5_42  [key=0, style=solid];
m5_35 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m5_35 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m5_35 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m5_35 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m5_35 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m5_35 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m5_35 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_35 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m5_35 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_53  [key=2, style=dotted];
m5_51 -> m5_76  [key=2, style=dotted];
m5_51 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=state];
m5_52 -> m5_50  [key=0, style=bold, color=blue];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_54  [key=0, style=solid];
m5_52 -> m5_69  [key=2, style=dotted];
m5_52 -> m5_77  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_59  [key=0, style=solid];
m5_57 -> m5_77  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>"];
m5_4 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m5_4 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IBackgroundJobFactory"];
m5_4 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>"];
m5_4 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_6 -> m5_14  [key=0, style=solid];
m5_6 -> m5_15  [key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_84  [key=2, style=dotted];
m5_64 -> m5_85  [key=2, style=dotted];
m5_64 -> m5_12  [key=1, style=dashed, color=green, label="HangFire.States.SucceededState"];
m5_64 -> m5_28  [key=1, style=dashed, color=green, label="HangFire.States.SucceededState"];
m5_64 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_64 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_64 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_64 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_64 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_64 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_65 -> m5_35  [key=0, style=bold, color=blue];
m5_65 -> m5_62  [key=1, style=dashed, color=green, label=string];
m5_65 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_65 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_86 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m5_86 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
}
