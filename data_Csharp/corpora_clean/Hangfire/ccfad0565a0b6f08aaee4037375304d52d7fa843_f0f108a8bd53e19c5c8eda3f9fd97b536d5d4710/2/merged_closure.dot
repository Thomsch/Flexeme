digraph  {
n45 [label="Hangfire.BackgroundJobClient", span=""];
n0 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
n1 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
n2 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
n3 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
n4 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
n5 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
n6 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
n7 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="storage == null", span="70-70"];
n9 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="stateMachineFactory == null", span="71-71"];
n11 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="process == null", span="72-72"];
n13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="_storage = storage", span="74-74"];
n14 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="_stateMachineFactory = stateMachineFactory", span="75-75"];
n15 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="_process = process", span="76-76"];
n8 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="throw new ArgumentNullException(''storage'');", span="70-70"];
n10 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71"];
n12 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="throw new ArgumentNullException(''process'');", span="72-72"];
n16 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
n17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n18 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
n19 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="job == null", span="82-82"];
n21 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="state == null", span="83-83"];
n24 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89"];
n20 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new ArgumentNullException(''job'');", span="82-82"];
n22 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new ArgumentNullException(''state'');", span="83-83"];
n23 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="var connection = _storage.GetConnection()", span="87-87"];
n30 [cluster="Hangfire.JobStorage.GetConnection()", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
n31 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46"];
n32 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
n27 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label=Exception, span="95-95"];
n28 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="97-97"];
n29 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
n33 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
n34 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
n35 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="jobId == null", span="104-104"];
n37 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="state == null", span="105-105"];
n36 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="throw new ArgumentNullException(''jobId'');", span="104-104"];
n38 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="throw new ArgumentNullException(''state'');", span="105-105"];
n39 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="var connection = _storage.GetConnection()", span="107-107"];
n40 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="var stateMachine = _stateMachineFactory.Create(connection)", span="109-109"];
n43 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
n42 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
n44 [cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m0_2 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m0_3 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m0_0 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m0_1 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m1_37 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="101-101"];
m1_38 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Dispose()", span="103-103"];
m1_39 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Logger.Info(''Hangfire Server stopped.'')", span="104-104"];
m1_40 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="101-101"];
m1_57 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60"];
m1_5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60"];
m1_19 [cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40"];
m1_1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40"];
m1_58 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139"];
m1_63 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="var stateMachineFactory = new StateMachineFactory(_storage)", span="141-141"];
m1_65 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new WorkerManager(sharedWorkerContext, _options.WorkerCount);", span="150-150"];
m1_66 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new ServerHeartbeat(_storage, _serverId);", span="151-151"];
m1_67 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval);", span="152-152"];
m1_68 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new ServerWatchdog(_storage, _options.ServerWatchdogOptions);", span="153-153"];
m1_69 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new RecurringJobScheduler(\r\n                _storage, \r\n                new BackgroundJobClient(_storage, stateMachineFactory),\r\n                new ScheduleInstantFactory(),\r\n                new EveryMinuteThrottler());", span="155-159"];
m1_70 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139"];
m1_21 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="85-85"];
m1_22 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Logger.Info(''Starting Hangfire Server...'')", span="87-87"];
m1_23 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="88-88"];
m1_24 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_storage.WriteOptionsToLog(Logger)", span="90-90"];
m1_25 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_options.WriteToLog(Logger)", span="91-91"];
m1_26 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Start()", span="93-93"];
m1_27 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Start()", span="85-85"];
m1_75 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", span="28-28"];
m1_71 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25"];
m1_81 [cluster="Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", span="21-21"];
m1_49 [cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", span="41-41"];
m1_48 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobServer.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m1_18 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m1_47 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34"];
m1_60 [cluster="Unk.AddRange", file="BackgroundJobServer.cs", label="Entry Unk.AddRange", span=""];
m1_85 [cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", span="36-36"];
m1_86 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32"];
m1_50 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23"];
m1_30 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68"];
m1_62 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26"];
m1_46 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m1_79 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
m1_20 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107"];
m1_42 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="109-113"];
m1_43 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="var bootstrapper = new ServerBootstrapper(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerSupervisor>(GetSupervisors))", span="115-119"];
m1_44 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="return new ServerSupervisor(\r\n                bootstrapper, \r\n                new ServerSupervisorOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="121-126"];
m1_45 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107"];
m1_31 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82"];
m1_78 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39"];
m1_74 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", span="27-27"];
m1_77 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34"];
m1_80 [cluster="Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", span="21-21"];
m1_29 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209"];
m1_82 [cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162"];
m1_83 [cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="return new ServerSupervisor(new AutomaticRetryServerComponentWrapper(component));", span="164-164"];
m1_84 [cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162"];
m1_33 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Stop()", span="96-96"];
m1_34 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Stop()", span="98-98"];
m1_35 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Stop()", span="96-96"];
m1_17 [cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m1_72 [cluster="Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", span="23-23"];
m1_32 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m1_59 [cluster="Unk.Select", file="BackgroundJobServer.cs", label="Entry Unk.Select", span=""];
m1_28 [cluster="Hangfire.Logging.ILog.Info(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="201-201"];
m1_51 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129"];
m1_52 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="var supervisors = new List<IServerSupervisor>()", span="131-131"];
m1_53 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="supervisors.AddRange(GetCommonComponents().Select(CreateSupervisor))", span="133-133"];
m1_54 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="supervisors.AddRange(_storage.GetComponents().Select(CreateSupervisor))", span="134-134"];
m1_55 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="return new ServerSupervisorCollection(supervisors);", span="136-136"];
m1_56 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129"];
m1_76 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m1_36 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m1_61 [cluster="Hangfire.JobStorage.GetComponents()", file="BackgroundJobServer.cs", label="Entry Hangfire.JobStorage.GetComponents()", span="58-58"];
m1_73 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28"];
m1_6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71"];
m1_7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="options == null", span="73-73"];
m1_9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="storage == null", span="74-74"];
m1_11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_options = options", span="76-76"];
m1_12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_storage = storage", span="77-77"];
m1_8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''options'');", span="73-73"];
m1_10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''storage'');", span="74-74"];
m1_13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="79-79"];
m1_14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_bootstrapSupervisor = GetBootstrapSupervisor()", span="82-82"];
m1_15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71"];
m1_41 [cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m1_2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50"];
m1_3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50"];
m1_87 [file="BackgroundJobServer.cs", label="Hangfire.BackgroundJobServer", span=""];
m2_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_46 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="CreateContext.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m2_45 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="CreateContext.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m2_38 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m2_39 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="String.IsNullOrWhiteSpace(name)", span="131-131"];
m2_41 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137"];
m2_43 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143"];
m2_40 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="throw new ArgumentNullException(''name'');", span="131-131"];
m2_42 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label=Exception, span="139-139"];
m2_44 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="Exit Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m2_0 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37"];
m2_1 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs", label="Items = context.Items", span="40-40"];
m2_2 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs", label="JobId = context.JobId", span="41-41"];
m2_3 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs", label="_jobWasCreated = context._jobWasCreated", span="42-42"];
m2_4 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs", label="_parameters = context._parameters", span="43-43"];
m2_5 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs", label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37"];
m2_53 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="CreateContext.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m2_33 [cluster="string.IsNullOrWhiteSpace(string)", file="CreateContext.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m2_36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="CreateContext.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_35 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="CreateContext.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m2_37 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CreateContext.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_54 [cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="CreateContext.cs", label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23"];
m2_47 [cluster="string.Format(string, object)", file="CreateContext.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_48 [cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147"];
m2_49 [cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149"];
m2_50 [cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151"];
m2_51 [cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="_jobWasCreated = true", span="152-152"];
m2_52 [cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="Exit Hangfire.Client.CreateContext.CreateJob()", span="147-147"];
m2_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CreateContext.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m2_23 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m2_24 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="String.IsNullOrWhiteSpace(name)", span="98-98"];
m2_28 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="var serializedValue = JobHelper.ToJson(value)", span="105-105"];
m2_29 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="!_parameters.ContainsKey(name)", span="107-107"];
m2_30 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="_parameters.Add(name, serializedValue)", span="109-109"];
m2_31 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="_parameters[name] = serializedValue", span="113-113"];
m2_25 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="throw new ArgumentNullException(''name'');", span="98-98"];
m2_26 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label=_jobWasCreated, span="100-100"];
m2_27 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102"];
m2_32 [cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="Exit Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m2_6 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46"];
m2_7 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="connection == null", span="52-52"];
m2_9 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="stateMachineFactory == null", span="53-53"];
m2_11 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="job == null", span="54-54"];
m2_13 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="initialState == null", span="55-55"];
m2_15 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="_stateMachineFactory = stateMachineFactory", span="57-57"];
m2_16 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="Connection = connection", span="59-59"];
m2_17 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="Job = job", span="60-60"];
m2_18 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="InitialState = initialState", span="61-61"];
m2_8 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="throw new ArgumentNullException(''connection'');", span="52-52"];
m2_10 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53"];
m2_12 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="throw new ArgumentNullException(''job'');", span="54-54"];
m2_14 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="throw new ArgumentNullException(''initialState'');", span="55-55"];
m2_19 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="Items = new Dictionary<string, object>()", span="63-63"];
m2_20 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs", label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46"];
m2_55 [file="CreateContext.cs", label="Hangfire.Client.CreateContext", span=""];
m4_0 [cluster="NCrontab.CrontabException.CrontabException()", file="ElectStateContext.cs", label="Entry NCrontab.CrontabException.CrontabException()", span="27-27"];
m4_1 [cluster="NCrontab.CrontabException.CrontabException()", file="ElectStateContext.cs", label="Exit NCrontab.CrontabException.CrontabException()", span="27-27"];
m4_4 [cluster="NCrontab.CrontabException.CrontabException(string, System.Exception)", file="ElectStateContext.cs", label="Entry NCrontab.CrontabException.CrontabException(string, System.Exception)", span="35-35"];
m4_5 [cluster="NCrontab.CrontabException.CrontabException(string, System.Exception)", file="ElectStateContext.cs", label="Exit NCrontab.CrontabException.CrontabException(string, System.Exception)", span="35-35"];
m4_2 [cluster="NCrontab.CrontabException.CrontabException(string)", file="ElectStateContext.cs", label="Entry NCrontab.CrontabException.CrontabException(string)", span="31-31"];
m4_3 [cluster="NCrontab.CrontabException.CrontabException(string)", file="ElectStateContext.cs", label="Exit NCrontab.CrontabException.CrontabException(string)", span="31-31"];
m5_51 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="86-86"];
m5_52 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="88-88"];
m5_53 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="var state = new Mock<IState>()", span="89-89"];
m5_54 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="context.CandidateState = state.Object", span="91-91"];
m5_55 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="Assert.Contains(_candidateState.Object, context.TraversedStates)", span="93-93"];
m5_56 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="86-86"];
m5_8 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="15-15"];
m5_36 [cluster="Unk.Same", file="ElectStateContextFacts.cs", label="Entry Unk.Same", span=""];
m5_0 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="16-16"];
m5_1 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", color=green, community=0, file="ElectStateContextFacts.cs", label="_connection = new Mock<IStorageConnection>()", prediction=0, span="18-18"];
m5_2 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="_stateContext = new StateContextMock()", span="20-20"];
m5_3 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="_stateContext.JobIdValue = JobId", span="21-21"];
m5_5 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="16-16"];
m5_14 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="24-24"];
m5_70 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="108-108"];
m5_71 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="110-110"];
m5_72 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="context.SetJobParameter(''Name'', (string)null)", span="112-112"];
m5_73 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="114-115"];
m5_74 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="108-108"];
m5_63 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContextFacts.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="74-74"];
m5_58 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="97-97"];
m5_59 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="99-99"];
m5_60 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="context.SetJobParameter(''Name'', ''Value'')", span="101-101"];
m5_61 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="103-104"];
m5_62 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="97-97"];
m5_9 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27"];
m5_4 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="_candidateState = new Mock<IState>()", span="23-23"];
m5_13 [cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs", label="Exit HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="21-21"];
m5_91 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="131-131"];
m5_92 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="133-133"];
m5_93 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="_connection.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="134-135"];
m5_94 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="var value = context.GetJobParameter<int>(''Name'')", span="137-137"];
m5_95 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="Assert.Equal(default(int), value)", span="139-139"];
m5_96 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="131-131"];
m5_86 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContextFacts.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="79-79"];
m5_38 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="67-67"];
m5_39 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="69-69"];
m5_40 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="71-71"];
m5_41 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="67-67"];
m5_78 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="119-119"];
m5_79 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="121-121"];
m5_80 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="122-123"];
m5_81 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="var value = context.GetJobParameter<string>(''Name'')", span="125-125"];
m5_82 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Assert.Equal(''Value'', value)", span="127-127"];
m5_83 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="119-119"];
m5_10 [cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs", label="Entry HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="21-21"];
m5_11 [cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingJob(JobId, null))", span="23-24"];
m5_12 [cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="26-26"];
m5_90 [cluster="Unk.GetJobParameter", file="ElectStateContextFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m5_84 [cluster="Unk.Setup", file="ElectStateContextFacts.cs", label="Entry Unk.Setup", span=""];
m5_68 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m5_17 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="30-34"];
m5_20 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    null))", prediction=1, span="42-47"];
m5_18 [cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs", label="Entry ElectStateContext.cstr", span=""];
m5_19 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="40-40"];
m5_21 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''candidateState'', exception.ParamName)", span="49-49"];
m5_15 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="new ProcessingJob(JobId, null)", span="24-24"];
m5_16 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="24-24"];
m5_23 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="43-47"];
m5_24 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    null)", span="43-47"];
m5_25 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="43-47"];
m5_43 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="context.CandidateState = null", span="71-71"];
m5_42 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="71-71"];
m5_44 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="71-71"];
m5_65 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="103-104"];
m5_66 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="103-104"];
m5_67 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="103-104"];
m5_75 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="114-115"];
m5_76 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="114-115"];
m5_77 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="114-115"];
m5_87 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="122-122"];
m5_88 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.GetJobParameter(''1'', ''Name'')", span="122-122"];
m5_89 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="122-122"];
m5_97 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="134-134"];
m5_98 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.GetJobParameter(''1'', ''Value'')", span="134-134"];
m5_99 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="134-134"];
m5_6 [cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m5_7 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=green, community=0, file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", prediction=2, span="12-12"];
m5_57 [cluster="Unk.Contains", file="ElectStateContextFacts.cs", label="Entry Unk.Contains", span=""];
m5_64 [cluster="Unk.Verify", file="ElectStateContextFacts.cs", label="Entry Unk.Verify", span=""];
m5_45 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="75-75"];
m5_46 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="77-77"];
m5_47 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="var newState = new Mock<IState>()", span="78-78"];
m5_48 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="context.CandidateState = newState.Object", span="80-80"];
m5_49 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Assert.Same(newState.Object, context.CandidateState)", span="82-82"];
m5_50 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="75-75"];
m5_22 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="40-40"];
m5_26 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="53-53"];
m5_27 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="55-55"];
m5_28 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(_stateContext.Object.JobId, context.JobId)", span="57-57"];
m5_29 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(_stateContext.Object.Job, context.Job)", span="58-58"];
m5_30 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Same(_candidateState.Object, context.CandidateState)", span="60-60"];
m5_31 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(''State'', context.CurrentState)", span="61-61"];
m5_33 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Empty(context.TraversedStates)", span="63-63"];
m5_34 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="53-53"];
m5_37 [cluster="Unk.Empty", file="ElectStateContextFacts.cs", label="Entry Unk.Empty", span=""];
m5_85 [cluster="Unk.Returns", file="ElectStateContextFacts.cs", label="Entry Unk.Returns", span=""];
m5_35 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="142-142"];
m5_100 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="return new ElectStateContext(\r\n                _stateContext.Object,\r\n                _connection.Object,\r\n                _candidateState.Object,\r\n                ''State'');", span="144-148"];
m5_101 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="142-142"];
m5_69 [cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs", label="Entry Unk.SetJobParameter", span=""];
m5_102 [file="ElectStateContextFacts.cs", label="Hangfire.Core.Tests.States.ElectStateContextFacts", span=""];
m5_103 [file="ElectStateContextFacts.cs", label=context, span=""];
m6_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19"];
m6_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Debug.Assert(redis != null)", span="26-26"];
m6_3 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Debug.Assert(type != null)", span="28-28"];
m6_5 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Debug.Assert(state != null)", span="30-30"];
m6_7 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="JobId = jobId", span="34-34"];
m6_9 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="State = state", span="36-36"];
m6_10 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="38-38"];
m6_11 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="39-39"];
m6_12 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19"];
m6_2 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Debug.Assert(jobId != null)", span="27-27"];
m6_4 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Debug.Assert(arguments != null)", span="29-29"];
m6_6 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=green, community=0, file="ElectStateContextMock.cs", label="_stateMachine = new StateMachine(redis)", prediction=3, span="32-32"];
m6_8 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Type = type", span="35-35"];
m6_13 [cluster="System.Diagnostics.Debug.Assert(bool)", file="ElectStateContextMock.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m6_30 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="ElectStateContextMock.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44"];
m6_24 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="44-44"];
m6_25 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs", label="String.IsNullOrEmpty(name)", span="46-46"];
m6_27 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="48-50"];
m6_26 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs", label="throw new ArgumentNullException(''name'');", span="46-46"];
m6_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="44-44"];
m6_21 [cluster="string.IsNullOrEmpty(string)", file="ElectStateContextMock.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_34 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58"];
m6_31 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ElectStateContextMock.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="53-53"];
m6_32 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ElectStateContextMock.cs", label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="103-103"];
m6_33 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ElectStateContextMock.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101"];
m6_22 [cluster="HangFire.JobHelper.ToJson(object)", file="ElectStateContextMock.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m6_29 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ElectStateContextMock.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ElectStateContextMock.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_16 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="34-34"];
m6_17 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs", label="String.IsNullOrEmpty(name)", span="36-36"];
m6_19 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs", label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="41-41"];
m6_18 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs", label="throw new ArgumentNullException(''name'');", span="36-36"];
m6_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="34-34"];
m6_15 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="ElectStateContextMock.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m6_35 [file="ElectStateContextMock.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m7_1 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="IJobCreationProcess.cs", label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m8_0 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="IStateChangeProcess.cs", label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20"];
m8_1 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="IStateChangeProcess.cs", label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20"];
m9_3 [cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs", label="Exit Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m9_0 [cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs", label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23"];
m9_1 [cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs", label="Exit Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23"];
m10_1 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs", label="Exit Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m11_28 [cluster="Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", span="67-67"];
m11_32 [cluster="Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", file="JobCreationProcess.cs", label="return new JobFilterInfo(_getFiltersThunk(job));", span="69-69"];
m11_33 [cluster="Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", span="67-67"];
m11_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreationProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m11_3 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="35-35"];
m11_0 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="27-27"];
m11_2 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="27-27"];
m11_4 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="35-35"];
m11_35 [cluster="System.Func<T, TResult>.Invoke(T)", file="JobCreationProcess.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m11_75 [cluster="Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", span="33-33"];
m11_44 [cluster="Unk.thunk", file="JobCreationProcess.cs", label="Entry Unk.thunk", span=""];
m11_31 [cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="129-129"];
m11_76 [cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs", label="filters.Reverse()", span="132-132"];
m11_77 [cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs", label="filter.OnClientException(context)", span="134-134"];
m11_78 [cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="129-129"];
m11_41 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m11_43 [cluster="Unk.Aggregate", file="JobCreationProcess.cs", label="Entry Unk.Aggregate", span=""];
m11_73 [cluster="Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", span="27-27"];
m11_16 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45"];
m11_17 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="context == null", span="47-47"];
m11_19 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="var filterInfo = GetFilters(context.Job)", span="49-49"];
m11_20 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="CreateWithFilters(context, filterInfo.ClientFilters)", span="53-53"];
m11_22 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="57-57"];
m11_18 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(''context'');", span="47-47"];
m11_23 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="InvokeExceptionFilters(exceptionContext, filterInfo.ClientExceptionFilters)", span="59-59"];
m11_21 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label=Exception, span="55-55"];
m11_24 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="!exceptionContext.ExceptionHandled", span="60-60"];
m11_25 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="throw;", span="62-62"];
m11_26 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45"];
m11_50 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", span="26-26"];
m11_79 [cluster="Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", span="27-27"];
m11_5 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m11_6 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcess.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42"];
m11_7 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m11_53 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="84-84"];
m11_9 [cluster="lambda expression", file="JobCreationProcess.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42"];
m11_8 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="42-42"];
m11_10 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="42-42"];
m11_12 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="42-42"];
m11_13 [cluster="lambda expression", file="JobCreationProcess.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="42-42"];
m11_14 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="42-42"];
m11_46 [cluster="lambda expression", file="JobCreationProcess.cs", label="context.CreateJob()", span="79-79"];
m11_47 [cluster="lambda expression", file="JobCreationProcess.cs", label="return new CreatedContext(context, false, null);", span="80-80"];
m11_54 [cluster="lambda expression", file="JobCreationProcess.cs", label="InvokeClientFilter(filter, preContext, next)", span="84-84"];
m11_51 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="84-84"];
m11_45 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="77-81"];
m11_48 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="77-81"];
m11_52 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="84-84"];
m11_55 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="84-84"];
m11_49 [cluster="Hangfire.Client.CreateContext.CreateJob()", file="JobCreationProcess.cs", label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147"];
m11_29 [cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="72-72"];
m11_36 [cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs", label="var preContext = new CreatingContext(context)", span="76-76"];
m11_37 [cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                context.CreateJob();\r\n                return new CreatedContext(context, false, null);\r\n            }", span="77-81"];
m11_38 [cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="83-84"];
m11_39 [cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs", label="thunk()", span="86-86"];
m11_40 [cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="72-72"];
m11_56 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="89-89"];
m11_57 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="filter.OnCreating(preContext)", span="94-94"];
m11_58 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="preContext.Canceled", span="95-95"];
m11_59 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="97-98"];
m11_62 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="postContext = continuation()", span="105-105"];
m11_65 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="110-111"];
m11_66 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="filter.OnCreated(postContext)", span="113-113"];
m11_70 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="filter.OnCreated(postContext)", span="123-123"];
m11_60 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="var wasError = false", span="101-101"];
m11_61 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="CreatedContext postContext", span="102-102"];
m11_63 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label=Exception, span="107-107"];
m11_69 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="!wasError", span="121-121"];
m11_64 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="wasError = true", span="109-109"];
m11_67 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="!postContext.ExceptionHandled", span="115-115"];
m11_71 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="return postContext;", span="126-126"];
m11_68 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="throw;", span="117-117"];
m11_72 [cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs", label="Exit Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="89-89"];
m11_11 [cluster="Unk.Select", file="JobCreationProcess.cs", label="Entry Unk.Select", span=""];
m11_30 [cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="JobCreationProcess.cs", label="Entry Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", span="26-26"];
m11_34 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobCreationProcess.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m11_15 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="JobCreationProcess.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m11_74 [cluster="System.Func<TResult>.Invoke()", file="JobCreationProcess.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m11_80 [file="JobCreationProcess.cs", label="Hangfire.Client.JobCreationProcess", span=""];
m11_81 [file="JobCreationProcess.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m11_82 [file="JobCreationProcess.cs", label="Hangfire.Client.CreateContext", span=""];
m11_83 [file="JobCreationProcess.cs", label=preContext, span=""];
m11_84 [file="JobCreationProcess.cs", label="System.Func<Hangfire.Client.CreatedContext>", span=""];
m11_85 [file="JobCreationProcess.cs", label="Hangfire.Client.IClientFilter", span=""];
m12_72 [cluster="Unk.OnClientException", file="JobCreationProcessFacts.cs", label="Entry Unk.OnClientException", span=""];
m12_12 [cluster="string.IsNullOrEmpty(string)", file="JobCreationProcessFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m12_33 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47"];
m12_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="JobCreationProcessFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m12_10 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobCreationProcessFacts.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m12_37 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="47-47"];
m12_26 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="35-35"];
m12_27 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(null)", span="35-35"];
m12_28 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="35-35"];
m12_17 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m12_327 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m12_29 [cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45"];
m12_25 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="JobCreationProcessFacts.cs", label="Exit HangFire.JobHelper.ToTimestamp(System.DateTime)", span="40-40"];
m12_185 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m12_186 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="183-183"];
m12_187 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="184-184"];
m12_188 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="_filters.Add(outerFilter.Object)", span="186-186"];
m12_193 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198"];
m12_189 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="_filters.Add(innerFilter.Object)", span="187-187"];
m12_190 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190"];
m12_191 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="192-192"];
m12_192 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="195-195"];
m12_194 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m12_13 [cluster="HangFire.JobHelper.ValidateQueueName(string)", file="JobCreationProcessFacts.cs", label="Entry HangFire.JobHelper.ValidateQueueName(string)", span="71-71"];
m12_164 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m12_165 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="var filter = new Mock<IClientFilter>()", span="163-163"];
m12_166 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter.Object)", span="164-164"];
m12_167 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167"];
m12_171 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176"];
m12_168 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="169-169"];
m12_169 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="172-172"];
m12_170 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175"];
m12_172 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m12_298 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m12_299 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="288-288"];
m12_300 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="289-289"];
m12_301 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="_filters.Add(outerFilter.Object)", span="291-291"];
m12_307 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305"];
m12_302 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="_filters.Add(innerFilter.Object)", span="292-292"];
m12_304 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297"];
m12_303 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294"];
m12_305 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="299-299"];
m12_306 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302"];
m12_308 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m12_48 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="53-53"];
m12_106 [cluster="Unk.DoesNotThrow", file="JobCreationProcessFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m12_30 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m12_31 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", color=green, community=0, file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", prediction=4, span="43-43"];
m12_32 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="45-45"];
m12_35 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", color=green, community=0, file="JobCreationProcessFacts.cs", label="return FromTimestamp(long.Parse(value));", prediction=5, span="58-58"];
m12_43 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="54-54"];
m12_44 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57"];
m12_45 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m12_97 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m12_98 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104"];
m12_99 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="105-105"];
m12_100 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107"];
m12_101 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter.Object)", span="109-109"];
m12_102 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="111-111"];
m12_103 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114"];
m12_104 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m12_237 [cluster="System.InvalidOperationException.InvalidOperationException()", file="JobCreationProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m12_9 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m12_22 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m12_23 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m12_24 [cluster="Unk.>", file="JobCreationProcessFacts.cs", label="Entry Unk.>", span=""];
m12_61 [cluster="Mock<IClientExceptionFilter>.cstr", file="JobCreationProcessFacts.cs", label="Entry Mock<IClientExceptionFilter>.cstr", span=""];
m12_0 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17"];
m12_3 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="JobCreationProcessFacts.cs", label="var state = new Mock<IState>()", prediction=6, span="21-21"];
m12_1 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs", label="var connection = new Mock<IStorageConnection>()", span="19-19"];
m12_4 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22"];
m12_2 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs", label="var job = Job.FromExpression(() => TestMethod())", span="20-20"];
m12_5 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs", label="_filters = new List<object>()", span="24-24"];
m12_6 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs", label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26"];
m12_7 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17"];
m12_329 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m12_140 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m12_141 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="140-140"];
m12_142 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="141-141"];
m12_143 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="_filters.Add(outerFilter.Object)", span="143-143"];
m12_145 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146"];
m12_148 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149"];
m12_144 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="_filters.Add(innerFilter.Object)", span="144-144"];
m12_146 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147"];
m12_147 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148"];
m12_149 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="151-151"];
m12_150 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="154-154"];
m12_151 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m12_139 [cluster="Unk.OnCreated", file="JobCreationProcessFacts.cs", label="Entry Unk.OnCreated", span=""];
m12_274 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m12_275 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="var filter = new Mock<IClientFilter>()", span="269-269"];
m12_276 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter.Object)", span="270-270"];
m12_279 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276"];
m12_277 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="var exception = new InvalidOperationException()", span="272-272"];
m12_278 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273"];
m12_280 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="278-278"];
m12_281 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281"];
m12_282 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m12_53 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m12_54 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="63-63"];
m12_55 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter.Object)", span="64-64"];
m12_59 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73"];
m12_56 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66"];
m12_57 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="67-67"];
m12_58 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70"];
m12_60 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m12_228 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m12_229 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="var filter = new Mock<IClientFilter>()", span="226-226"];
m12_230 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter.Object)", span="227-227"];
m12_235 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240"];
m12_231 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="var exception = new InvalidOperationException()", span="229-229"];
m12_232 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230"];
m12_233 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="232-232"];
m12_234 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236"];
m12_236 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m12_251 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m12_252 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="var outerFilter = new Mock<IClientFilter>()", span="247-247"];
m12_253 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="var innerFilter = new Mock<IClientFilter>()", span="248-248"];
m12_254 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="_filters.Add(outerFilter.Object)", span="250-250"];
m12_260 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262"];
m12_255 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="_filters.Add(innerFilter.Object)", span="251-251"];
m12_256 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m12_257 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254"];
m12_258 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="256-256"];
m12_259 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260"];
m12_261 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m12_38 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="47-47"];
m12_41 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m12_39 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="47-47"];
m12_40 [cluster="Unk.CreateJob", file="JobCreationProcessFacts.cs", label="Entry Unk.CreateJob", span=""];
m12_42 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53"];
m12_47 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="53-53"];
m12_62 [cluster="Unk.Add", file="JobCreationProcessFacts.cs", label="Entry Unk.Add", span=""];
m12_84 [cluster="Unk.InSequence", file="JobCreationProcessFacts.cs", label="Entry Unk.InSequence", span=""];
m12_207 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m12_208 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="var filter = new Mock<IClientFilter>()", span="205-205"];
m12_209 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter.Object)", span="206-206"];
m12_210 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209"];
m12_214 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219"];
m12_211 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="211-211"];
m12_212 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215"];
m12_213 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218"];
m12_215 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m12_46 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="JobCreationProcessFacts.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m12_238 [cluster="Unk.Throws", file="JobCreationProcessFacts.cs", label="Entry Unk.Throws", span=""];
m12_73 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m12_74 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80"];
m12_75 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81"];
m12_77 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84"];
m12_78 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter1.Object)", span="86-86"];
m12_76 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83"];
m12_79 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter2.Object)", span="87-87"];
m12_80 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89"];
m12_81 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="91-91"];
m12_82 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95"];
m12_83 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m12_330 [cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m12_324 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="305-305"];
m12_14 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="20-20"];
m12_15 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="TestMethod()", span="20-20"];
m12_16 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="20-20"];
m12_51 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="57-57"];
m12_50 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="57-57"];
m12_49 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="53-53"];
m12_52 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="57-57"];
m12_63 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="66-66"];
m12_67 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="70-70"];
m12_66 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="70-70"];
m12_69 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="72-73"];
m12_64 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="66-66"];
m12_65 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="66-66"];
m12_68 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="70-70"];
m12_70 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73"];
m12_71 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="72-73"];
m12_85 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="83-83"];
m12_88 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="84-84"];
m12_91 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="89-89"];
m12_95 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="95-95"];
m12_94 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="95-95"];
m12_86 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83"];
m12_87 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="83-83"];
m12_89 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84"];
m12_90 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="84-84"];
m12_92 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="89-89"];
m12_93 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="89-89"];
m12_96 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="95-95"];
m12_107 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="104-104"];
m12_110 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="106-106"];
m12_113 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="107-107"];
m12_117 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="114-114"];
m12_116 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="114-114"];
m12_108 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="104-104"];
m12_109 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="104-104"];
m12_111 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106"];
m12_112 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="106-106"];
m12_114 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.ExceptionHandled = true", span="107-107"];
m12_115 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="107-107"];
m12_118 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="114-114"];
m12_129 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="124-124"];
m12_133 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="125-125"];
m12_136 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="126-126"];
m12_130 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124"];
m12_131 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="124-124"];
m12_134 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="125-125"];
m12_135 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="125-125"];
m12_137 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126"];
m12_138 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="126-126"];
m12_152 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="146-146"];
m12_155 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="147-147"];
m12_158 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="148-148"];
m12_161 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="149-149"];
m12_153 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146"];
m12_154 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="146-146"];
m12_156 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147"];
m12_157 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="147-147"];
m12_159 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148"];
m12_160 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="148-148"];
m12_162 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149"];
m12_163 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="149-149"];
m12_173 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="166-166"];
m12_176 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="167-167"];
m12_179 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="175-175"];
m12_182 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="176-176"];
m12_174 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166"];
m12_175 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="166-166"];
m12_177 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.Canceled = true", span="167-167"];
m12_178 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="167-167"];
m12_180 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="175-175"];
m12_181 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="175-175"];
m12_183 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176"];
m12_184 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="176-176"];
m12_195 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="189-189"];
m12_198 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="190-190"];
m12_201 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="198-198"];
m12_196 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189"];
m12_197 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="189-189"];
m12_199 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="context.Canceled = true", span="190-190"];
m12_200 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="190-190"];
m12_202 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198"];
m12_203 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="198-198"];
m12_204 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="198-198"];
m12_205 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="context.Canceled", span="198-198"];
m12_206 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="198-198"];
m12_216 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="208-208"];
m12_220 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="215-215"];
m12_219 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="215-215"];
m12_222 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="218-218"];
m12_225 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="219-219"];
m12_217 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208"];
m12_218 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="208-208"];
m12_221 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="215-215"];
m12_223 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="218-218"];
m12_224 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="218-218"];
m12_226 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219"];
m12_227 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="219-219"];
m12_246 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240"];
m12_249 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="context.Exception == exception", span="240-240"];
m12_239 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="230-230"];
m12_243 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="236-236"];
m12_242 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="236-236"];
m12_245 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="239-240"];
m12_240 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="230-230"];
m12_241 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="230-230"];
m12_244 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="236-236"];
m12_247 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="239-240"];
m12_248 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="240-240"];
m12_250 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="240-240"];
m12_269 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262"];
m12_272 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="context.Exception == exception", span="262-262"];
m12_262 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="254-254"];
m12_266 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="260-260"];
m12_265 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="260-260"];
m12_268 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="262-262"];
m12_263 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="254-254"];
m12_264 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="254-254"];
m12_267 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="260-260"];
m12_270 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="262-262"];
m12_271 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="262-262"];
m12_273 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="262-262"];
m12_287 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275"];
m12_290 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="context.Exception == exception", span="275-275"];
m12_283 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="273-273"];
m12_286 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="275-275"];
m12_292 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="276-276"];
m12_296 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="281-281"];
m12_295 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="281-281"];
m12_284 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="273-273"];
m12_285 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="273-273"];
m12_288 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="275-275"];
m12_289 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="275-275"];
m12_291 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="275-275"];
m12_293 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.ExceptionHandled = true", span="276-276"];
m12_294 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="276-276"];
m12_297 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="281-281"];
m12_309 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="294-294"];
m12_312 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="296-296"];
m12_315 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="297-297"];
m12_319 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="302-302"];
m12_318 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="302-302"];
m12_321 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="305-305"];
m12_310 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.CreateJob()", span="294-294"];
m12_311 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="294-294"];
m12_313 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296"];
m12_314 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="296-296"];
m12_316 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.ExceptionHandled = true", span="297-297"];
m12_317 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="297-297"];
m12_320 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="302-302"];
m12_322 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305"];
m12_323 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="305-305"];
m12_325 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="context.Exception != null", span="305-305"];
m12_326 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="305-305"];
m12_36 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobCreationProcessFacts.cs", label="Exit HangFire.JobHelper.FromStringTimestamp(string)", span="56-56"];
m12_34 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobCreationProcessFacts.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="56-56"];
m12_132 [cluster="Unk.OnCreating", file="JobCreationProcessFacts.cs", label="Entry Unk.OnCreating", span=""];
m12_18 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m12_19 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="32-32"];
m12_20 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35"];
m12_21 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="37-37"];
m12_105 [cluster="Unk.Callback", file="JobCreationProcessFacts.cs", label="Entry Unk.Callback", span=""];
m12_119 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m12_120 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="var filter = new Mock<IClientFilter>()", span="121-121"];
m12_121 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="_filters.Add(filter.Object)", span="122-122"];
m12_122 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124"];
m12_124 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126"];
m12_123 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125"];
m12_125 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="var process = CreateProcess()", span="128-128"];
m12_126 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="process.Run(_context.Object)", span="131-131"];
m12_127 [cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m12_128 [cluster="Mock<IClientFilter>.cstr", file="JobCreationProcessFacts.cs", label="Entry Mock<IClientFilter>.cstr", span=""];
m12_8 [cluster="Mock<IStorageConnection>.cstr", file="JobCreationProcessFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m12_331 [file="JobCreationProcessFacts.cs", label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span=""];
m12_332 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_333 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_334 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_335 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_336 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_337 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_338 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_339 [file="JobCreationProcessFacts.cs", label=exception, span=""];
m12_340 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_341 [file="JobCreationProcessFacts.cs", label=exception, span=""];
m12_342 [file="JobCreationProcessFacts.cs", label=exception, span=""];
m12_343 [file="JobCreationProcessFacts.cs", label=process, span=""];
m12_344 [file="JobCreationProcessFacts.cs", label=process, span=""];
m13_12 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="JobPerformanceProcess.cs", label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m13_5 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="return;", span="51-51"];
m13_15 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="49-50"];
m13_7 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="retryCount < Attempts", span="56-56"];
m13_0 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobPerformanceProcess.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m13_1 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobPerformanceProcess.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", prediction=7, span="32-32"];
m13_2 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobPerformanceProcess.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', ''\r\n  As a user, I expect that all defined client filters are executing\r\n  using th'' +\r\n                    ''e following rules, when I create a job.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
m13_16 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs", label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="52-52"];
m13_3 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="Entry HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="46-46"];
m13_4 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="context.CandidateState.StateName != FailedState.Name", span="48-48"];
m13_6 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="var retryCount = context.GetJobParameter<int>(''RetryCount'')", span="54-54"];
m13_17 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs", label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47"];
m13_14 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs", label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47"];
m13_23 [cluster="System.Random.Next(int)", file="JobPerformanceProcess.cs", label="Entry System.Random.Next(int)", span="0-0"];
m13_21 [cluster="System.Random.Random()", file="JobPerformanceProcess.cs", label="Entry System.Random.Random()", span="0-0"];
m13_24 [cluster="System.Math.Round(double)", file="JobPerformanceProcess.cs", label="Entry System.Math.Round(double)", span="0-0"];
m13_13 [cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs", label="Entry HangFire.Filters.RetryAttribute.SecondsToDelay(long)", span="72-72"];
m13_18 [cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs", label="var random = new Random()", span="74-74"];
m13_19 [cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="75-76"];
m13_20 [cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs", label="Exit HangFire.Filters.RetryAttribute.SecondsToDelay(long)", span="72-72"];
m13_8 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="58-58"];
m13_22 [cluster="System.Math.Pow(double, double)", file="JobPerformanceProcess.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m13_9 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="context.SetJobParameter(''RetryCount'', retryCount + 1)", span="60-60"];
m13_10 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryCount + 1, Attempts)\r\n                }", span="64-67"];
m13_11 [cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs", label="Exit HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="46-46"];
m13_25 [file="JobPerformanceProcess.cs", label="HangFire.Filters.RetryAttribute", span=""];
m14_376 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="413-413"];
m14_377 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<OperationCanceledException>()", span="416-418"];
m14_378 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="420-420"];
m14_379 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="421-421"];
m14_381 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs", label="filter.Verify(\r\n                x => x.OnServerException(It.IsAny<ServerExceptionContext>()),\r\n                Times.Never)", span="428-430"];
m14_380 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="424-425"];
m14_382 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="413-413"];
m14_152 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="180-180"];
m14_153 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="183-183"];
m14_154 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>()))\r\n                .InSequence()", span="185-186"];
m14_156 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>()))\r\n                .InSequence()", span="191-192"];
m14_155 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="_performer.Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .InSequence()", span="188-189"];
m14_157 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="194-194"];
m14_158 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="197-197"];
m14_159 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="180-180"];
m14_15 [cluster="System.Collections.Generic.List<T>.List()", file="JobPerformanceProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_170 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="203-203"];
m14_171 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="206-206"];
m14_172 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="207-207"];
m14_173 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="209-209"];
m14_176 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="212-212"];
m14_174 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="210-210"];
m14_175 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="211-211"];
m14_177 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="214-214"];
m14_178 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="217-217"];
m14_179 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="203-203"];
m14_424 [cluster="Mock<T>.cstr", file="JobPerformanceProcessFacts.cs", label="Entry Mock<T>.cstr", span=""];
m14_359 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="392-392"];
m14_360 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="395-395"];
m14_361 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="396-397"];
m14_362 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<ArgumentNullException>()", span="399-401"];
m14_363 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="403-403"];
m14_364 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="406-407"];
m14_365 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="409-409"];
m14_366 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="392-392"];
m14_9 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m14_319 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="352-352"];
m14_320 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="355-355"];
m14_321 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="356-356"];
m14_326 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="371-371"];
m14_322 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="358-360"];
m14_323 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="362-363"];
m14_324 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="365-365"];
m14_325 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="368-368"];
m14_327 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="352-352"];
m14_27 [cluster="Unk.Equal", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Equal", span=""];
m14_404 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="449-449"];
m14_405 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="452-452"];
m14_406 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<OperationCanceledException>()", span="453-454"];
m14_407 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="456-456"];
m14_408 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="459-460"];
m14_409 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="449-449"];
m14_131 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="162-162"];
m14_132 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="165-167"];
m14_133 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="169-169"];
m14_134 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="170-171"];
m14_135 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="173-173"];
m14_136 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="176-176"];
m14_137 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="162-162"];
m14_40 [cluster="Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="41-41"];
m14_296 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="332-332"];
m14_297 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="335-335"];
m14_298 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="var exception = new InvalidOperationException()", span="337-337"];
m14_300 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="342-343"];
m14_299 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="338-340"];
m14_301 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="345-345"];
m14_302 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="348-348"];
m14_303 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="332-332"];
m14_139 [cluster="Unk.DoesNotThrow", file="JobPerformanceProcessFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m14_31 [cluster="Unk.Run", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Run", span=""];
m14_67 [cluster="Unk.OnPerformed", file="JobPerformanceProcessFacts.cs", label="Entry Unk.OnPerformed", span=""];
m14_261 [cluster="System.InvalidOperationException.InvalidOperationException()", file="JobPerformanceProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m14_41 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m14_42 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="57-57"];
m14_43 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="59-59"];
m14_44 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()), \r\n                Times.Once)", span="61-63"];
m14_45 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m14_71 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="86-86"];
m14_72 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="89-89"];
m14_73 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="90-90"];
m14_74 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="92-94"];
m14_75 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs", label="var result = process.Run(_context, _performer.Object)", span="97-97"];
m14_76 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs", label="Assert.Equal(''Returned value'', result)", span="100-100"];
m14_77 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="86-86"];
m14_26 [cluster="Unk.>", file="JobPerformanceProcessFacts.cs", label="Entry Unk.>", span=""];
m14_51 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="67-67"];
m14_52 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="70-70"];
m14_53 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="71-71"];
m14_56 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs", label="filter.Verify(\r\n                x => x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value'')))", span="81-82"];
m14_54 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="73-75"];
m14_55 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="78-78"];
m14_57 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="67-67"];
m14_19 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="463-463"];
m14_416 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="463-463"];
m14_108 [cluster="Unk.OnServerException", file="JobPerformanceProcessFacts.cs", label="Entry Unk.OnServerException", span=""];
m14_275 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311"];
m14_276 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="314-314"];
m14_277 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="315-315"];
m14_282 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="328-328"];
m14_278 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="var exception = new InvalidOperationException()", span="317-317"];
m14_279 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="318-320"];
m14_280 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="322-322"];
m14_281 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="325-326"];
m14_283 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311"];
m14_163 [cluster="Unk.OnPerforming", file="JobPerformanceProcessFacts.cs", label="Entry Unk.OnPerforming", span=""];
m14_232 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="264-264"];
m14_233 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="267-267"];
m14_234 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="269-270"];
m14_239 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="285-285"];
m14_235 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="272-272"];
m14_236 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="275-276"];
m14_237 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="279-279"];
m14_238 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="281-283"];
m14_240 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="264-264"];
m14_118 [cluster="Unk.InSequence", file="JobPerformanceProcessFacts.cs", label="Entry Unk.InSequence", span=""];
m14_425 [cluster="Unk.Add", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Add", span=""];
m14_14 [cluster="Mock<IJobPerformer>.cstr", file="JobPerformanceProcessFacts.cs", label="Entry Mock<IJobPerformer>.cstr", span=""];
m14_25 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="467-467"];
m14_418 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="467-467"];
m14_392 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="434-434"];
m14_393 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="437-437"];
m14_394 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<OperationCanceledException>()", span="438-439"];
m14_395 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="441-441"];
m14_396 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="444-445"];
m14_397 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="434-434"];
m14_253 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="289-289"];
m14_254 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="292-292"];
m14_255 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="var exception = new InvalidOperationException()", span="294-294"];
m14_259 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="306-307"];
m14_256 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="295-297"];
m14_257 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="299-299"];
m14_258 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="302-303"];
m14_260 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="289-289"];
m14_0 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="17-17"];
m14_1 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="var workerContext = new WorkerContextMock()", span="19-19"];
m14_2 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="var connection = new Mock<IStorageConnection>()", span="21-21"];
m14_5 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="_context = new PerformContext(\r\n                workerContext.Object, connection.Object, jobId, job, DateTime.UtcNow, new Mock<IJobCancellationToken>().Object)", span="25-26"];
m14_3 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="string jobId = ''someId''", span="22-22"];
m14_4 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="var job = Job.FromExpression(() => Method())", span="23-23"];
m14_6 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="_performer = new Mock<IJobPerformer>()", span="27-27"];
m14_7 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="_filters = new List<object>()", span="29-29"];
m14_8 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="17-17"];
m14_59 [cluster="Unk.Setup", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Setup", span=""];
m14_262 [cluster="Unk.Throws", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Throws", span=""];
m14_192 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="223-223"];
m14_193 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="226-226"];
m14_194 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="228-229"];
m14_198 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="241-241"];
m14_195 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="231-231"];
m14_196 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="234-234"];
m14_197 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="237-239"];
m14_199 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="223-223"];
m14_50 [cluster="Unk.Perform", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Perform", span=""];
m14_419 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", span="32-32"];
m14_413 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="460-460"];
m14_16 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="23-23"];
m14_17 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Method()", span="23-23"];
m14_18 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="23-23"];
m14_29 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(null, _performer.Object)", span="38-38"];
m14_28 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="38-38"];
m14_30 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="38-38"];
m14_38 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, null)", span="49-49"];
m14_37 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="49-49"];
m14_39 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="49-49"];
m14_47 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="62-62"];
m14_48 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="62-62"];
m14_49 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="62-62"];
m14_61 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="74-74"];
m14_64 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="82-82"];
m14_62 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="74-74"];
m14_63 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="74-74"];
m14_65 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value''))", span="82-82"];
m14_66 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="82-82"];
m14_68 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="82-82"];
m14_69 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="(string)context.Result == ''Returned value''", span="82-82"];
m14_70 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="82-82"];
m14_78 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="93-93"];
m14_79 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="93-93"];
m14_80 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="93-93"];
m14_86 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="108-108"];
m14_90 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="115-115"];
m14_89 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="115-115"];
m14_87 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="108-108"];
m14_88 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="108-108"];
m14_91 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="115-115"];
m14_99 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="125-125"];
m14_103 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="132-132"];
m14_102 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="132-132"];
m14_105 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="134-135"];
m14_100 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="125-125"];
m14_101 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="125-125"];
m14_104 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="132-132"];
m14_106 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="134-135"];
m14_107 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="134-135"];
m14_119 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="145-145"];
m14_122 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="146-146"];
m14_125 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="149-149"];
m14_129 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="156-156"];
m14_128 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="156-156"];
m14_120 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="145-145"];
m14_121 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="145-145"];
m14_123 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="146-146"];
m14_124 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="146-146"];
m14_126 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="149-149"];
m14_127 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="149-149"];
m14_130 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="156-156"];
m14_140 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="166-166"];
m14_143 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="170-170"];
m14_146 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="171-171"];
m14_150 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="176-176"];
m14_149 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="176-176"];
m14_141 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="166-166"];
m14_142 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="166-166"];
m14_144 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="170-170"];
m14_145 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="170-170"];
m14_147 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.ExceptionHandled = true", span="171-171"];
m14_148 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="171-171"];
m14_151 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="176-176"];
m14_160 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="185-185"];
m14_164 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="188-188"];
m14_167 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="191-191"];
m14_161 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="185-185"];
m14_162 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="185-185"];
m14_165 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="188-188"];
m14_166 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="188-188"];
m14_168 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="191-191"];
m14_169 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="191-191"];
m14_180 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="209-209"];
m14_183 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="210-210"];
m14_186 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="211-211"];
m14_189 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="212-212"];
m14_181 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="209-209"];
m14_182 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="209-209"];
m14_184 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="210-210"];
m14_185 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="210-210"];
m14_187 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="211-211"];
m14_188 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="211-211"];
m14_190 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="212-212"];
m14_191 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="212-212"];
m14_200 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="228-228"];
m14_203 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="229-229"];
m14_206 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="238-238"];
m14_209 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="241-241"];
m14_201 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="228-228"];
m14_202 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="228-228"];
m14_204 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Canceled = true", span="229-229"];
m14_205 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="229-229"];
m14_207 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="238-238"];
m14_208 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="238-238"];
m14_210 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="241-241"];
m14_211 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="241-241"];
m14_220 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="251-251"];
m14_223 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="252-252"];
m14_226 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="260-260"];
m14_221 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="251-251"];
m14_222 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="251-251"];
m14_224 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="context.Canceled = true", span="252-252"];
m14_225 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="252-252"];
m14_227 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="260-260"];
m14_228 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="260-260"];
m14_229 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="260-260"];
m14_230 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="context.Canceled", span="260-260"];
m14_231 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="260-260"];
m14_241 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="269-269"];
m14_245 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="276-276"];
m14_244 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="276-276"];
m14_247 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="282-282"];
m14_250 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="285-285"];
m14_242 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="269-269"];
m14_243 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="269-269"];
m14_246 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="276-276"];
m14_248 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="282-282"];
m14_249 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="282-282"];
m14_251 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="285-285"];
m14_252 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="285-285"];
m14_270 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="306-307"];
m14_273 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="context.Exception == exception", span="307-307"];
m14_263 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="296-296"];
m14_267 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="303-303"];
m14_266 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="303-303"];
m14_269 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="306-307"];
m14_264 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="296-296"];
m14_265 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="296-296"];
m14_268 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="303-303"];
m14_271 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="306-307"];
m14_272 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="307-307"];
m14_274 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="307-307"];
m14_291 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="328-328"];
m14_294 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="context.Exception == exception", span="328-328"];
m14_284 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="319-319"];
m14_288 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="326-326"];
m14_287 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="326-326"];
m14_290 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="328-328"];
m14_285 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="319-319"];
m14_286 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="319-319"];
m14_289 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="326-326"];
m14_292 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="328-328"];
m14_293 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="328-328"];
m14_295 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="328-328"];
m14_308 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="342-342"];
m14_311 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="context.Exception == exception", span="342-342"];
m14_304 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="339-339"];
m14_307 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="342-342"];
m14_313 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="343-343"];
m14_317 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="348-348"];
m14_316 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="348-348"];
m14_305 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="339-339"];
m14_306 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="339-339"];
m14_309 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="342-342"];
m14_310 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="342-342"];
m14_312 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="342-342"];
m14_314 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.ExceptionHandled = true", span="343-343"];
m14_315 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="343-343"];
m14_318 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="348-348"];
m14_328 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="359-359"];
m14_331 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="362-362"];
m14_334 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="363-363"];
m14_338 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="368-368"];
m14_337 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="368-368"];
m14_340 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="371-371"];
m14_329 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="359-359"];
m14_330 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="359-359"];
m14_332 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="362-362"];
m14_333 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="362-362"];
m14_335 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.ExceptionHandled = true", span="363-363"];
m14_336 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="363-363"];
m14_339 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="368-368"];
m14_341 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="371-371"];
m14_342 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="371-371"];
m14_343 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="371-371"];
m14_344 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="context.Exception != null", span="371-371"];
m14_345 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="371-371"];
m14_353 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="379-379"];
m14_357 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="386-386"];
m14_356 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="385-386"];
m14_354 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="379-379"];
m14_355 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="379-379"];
m14_358 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="385-386"];
m14_367 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="396-396"];
m14_370 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="400-400"];
m14_374 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="407-407"];
m14_373 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="406-407"];
m14_368 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="396-396"];
m14_369 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="396-396"];
m14_371 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="400-400"];
m14_372 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="400-400"];
m14_375 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="406-407"];
m14_383 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="417-417"];
m14_387 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="425-425"];
m14_386 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="425-425"];
m14_389 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="429-429"];
m14_384 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="417-417"];
m14_385 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="417-417"];
m14_388 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="425-425"];
m14_390 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="429-429"];
m14_391 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="429-429"];
m14_398 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="438-438"];
m14_402 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="445-445"];
m14_401 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="445-445"];
m14_399 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="438-438"];
m14_400 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="438-438"];
m14_403 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="445-445"];
m14_410 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="453-453"];
m14_414 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="460-460"];
m14_411 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="453-453"];
m14_412 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="453-453"];
m14_415 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="460-460"];
m14_109 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="139-139"];
m14_110 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="var filter1 = CreateFilter<IServerExceptionFilter>()", span="142-142"];
m14_111 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="var filter2 = CreateFilter<IServerExceptionFilter>()", span="143-143"];
m14_113 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="146-146"];
m14_112 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="145-145"];
m14_114 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="148-150"];
m14_115 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="152-152"];
m14_116 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="155-156"];
m14_117 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="139-139"];
m14_46 [cluster="Unk.Verify", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Verify", span=""];
m14_212 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="245-245"];
m14_213 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="248-248"];
m14_214 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="249-249"];
m14_218 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="260-260"];
m14_215 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="251-252"];
m14_216 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="254-254"];
m14_217 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="process.Run(_context, _performer.Object)", span="257-257"];
m14_219 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="245-245"];
m14_13 [cluster="Mock<IJobCancellationToken>.cstr", file="JobPerformanceProcessFacts.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m14_138 [cluster="Unk.Callback", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Callback", span=""];
m14_32 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m14_33 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="46-46"];
m14_34 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="48-49"];
m14_35 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="51-51"];
m14_36 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m14_60 [cluster="Unk.Returns", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Returns", span=""];
m14_20 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33"];
m14_21 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="35-35"];
m14_22 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="37-38"];
m14_23 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="40-40"];
m14_24 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33"];
m14_58 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", span="472-472"];
m14_420 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs", label="var filter = new Mock<T>()", span="475-475"];
m14_421 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs", label="_filters.Add(filter.Object)", span="476-476"];
m14_422 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs", label="return filter;", span="478-478"];
m14_423 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", span="472-472"];
m14_81 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="104-104"];
m14_82 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="107-109"];
m14_83 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="111-111"];
m14_84 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="114-115"];
m14_85 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="104-104"];
m14_10 [cluster="Mock<IStorageConnection>.cstr", file="JobPerformanceProcessFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m14_346 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="375-375"];
m14_347 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerFilter>()", span="378-378"];
m14_348 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="379-380"];
m14_349 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="382-382"];
m14_350 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="385-386"];
m14_351 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="388-388"];
m14_352 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="375-375"];
m14_92 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="119-119"];
m14_93 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="122-122"];
m14_94 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="124-126"];
m14_97 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="134-135"];
m14_95 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs", label="var process = CreateProcess()", span="128-128"];
m14_96 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="131-132"];
m14_98 [cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="119-119"];
m14_11 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobPerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m14_12 [cluster="PerformContext.cstr", file="JobPerformanceProcessFacts.cs", label="Entry PerformContext.cstr", span=""];
m14_426 [file="JobPerformanceProcessFacts.cs", label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", span=""];
m14_427 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_428 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_429 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_430 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_431 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_432 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_433 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_434 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_435 [file="JobPerformanceProcessFacts.cs", label=exception, span=""];
m14_436 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_437 [file="JobPerformanceProcessFacts.cs", label=exception, span=""];
m14_438 [file="JobPerformanceProcessFacts.cs", label=exception, span=""];
m14_439 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_440 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_441 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_442 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_443 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_444 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m14_445 [file="JobPerformanceProcessFacts.cs", label=process, span=""];
m15_8 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m15_35 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m15_15 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="cancellationToken.WaitHandle.WaitOne(_pollInterval)", span="57-57"];
m15_16 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_enqueuedCount++", span="62-62"];
m15_17 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m15_0 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m15_5 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18"];
m15_6 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19"];
m15_7 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m15_3 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="configureAction == null", span="16-16"];
m15_1 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="queues == null", span="15-15"];
m15_4 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''configureAction'');", span="16-16"];
m15_2 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''queues'');", span="15-15"];
m15_10 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m15_12 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_enqueuedCount != 0", span="51-51"];
m15_13 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="53-53"];
m15_14 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_enqueuedCount = 0", span="54-54"];
m15_34 [cluster="Hangfire.JobStorage.GetConnection()", file="SchedulePoller.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m15_20 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m15_37 [cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m15_9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21"];
m15_36 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SchedulePoller.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m15_18 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span=""];
m15_31 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", color=green, community=0, file="SchedulePoller.cs", label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", prediction=8, span="92-92"];
m15_26 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="78-79"];
m15_29 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var stateMachine = _stateMachineFactory.Create(connection)", span="86-86"];
m15_30 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="87-90"];
m15_32 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return true;", span="94-94"];
m15_24 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var connection = _storage.GetConnection()", span="73-73"];
m15_25 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="75-75"];
m15_27 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="String.IsNullOrEmpty(jobId)", span="81-81"];
m15_28 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return false;", span="83-83"];
m15_33 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="71-71"];
m15_39 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SchedulePoller.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m15_19 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SchedulePoller.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209"];
m15_11 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="!EnqueueNextScheduledJob()", span="49-49"];
m15_40 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m15_38 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m15_41 [file="SchedulePoller.cs", label="Hangfire.Server.SchedulePoller", span=""];
m16_15 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="SchedulePollerFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27"];
m16_16 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="SchedulePollerFacts.cs", label="return _monitoringApi;", span="29-29"];
m16_17 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="SchedulePollerFacts.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27"];
m16_0 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m16_1 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="queues == null", span="15-15"];
m16_3 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="configureAction == null", span="16-16"];
m16_5 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18"];
m16_6 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19"];
m16_2 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="throw new ArgumentNullException(''queues'');", span="15-15"];
m16_4 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="throw new ArgumentNullException(''configureAction'');", span="16-16"];
m16_7 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m16_10 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", file="SchedulePollerFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", span="15-15"];
m16_12 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="SchedulePollerFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22"];
m16_13 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="SchedulePollerFacts.cs", label="return _jobQueue;", span="24-24"];
m16_14 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="SchedulePollerFacts.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22"];
m16_9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21"];
m16_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SchedulePollerFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m16_18 [file="SchedulePollerFacts.cs", label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span=""];
m17_41 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="StateChangeProcess.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m17_63 [cluster="Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs", label="Entry Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="25-25"];
m17_37 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="StateChangeProcess.cs", label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", span="30-30"];
m17_38 [cluster="Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcess.cs", label="Entry Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", span="30-30"];
m17_66 [cluster="Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs", label="Entry Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="24-24"];
m17_22 [cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateChangeProcess.cs", label="Entry Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="53-53"];
m17_35 [cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateChangeProcess.cs", label="Exit Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="53-53"];
m17_0 [cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", file="StateChangeProcess.cs", label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", span="33-33"];
m17_7 [cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", file="StateChangeProcess.cs", label="Exit Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", span="33-33"];
m17_39 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="StateChangeProcess.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24"];
m17_74 [cluster="System.Func<T, TResult>.Invoke(T)", file="StateChangeProcess.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m17_40 [cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", file="StateChangeProcess.cs", label="Entry Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", span="94-94"];
m17_59 [cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", file="StateChangeProcess.cs", label="Exit Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", span="94-94"];
m17_60 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateChangeProcess.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m17_62 [cluster="Hangfire.States.StateHandlerCollection.GetHandlers(string)", file="StateChangeProcess.cs", label="Entry Hangfire.States.StateHandlerCollection.GetHandlers(string)", span="50-50"];
m17_68 [cluster="Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="StateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="26-26"];
m17_36 [cluster="Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", file="StateChangeProcess.cs", label="Entry Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", span="138-138"];
m17_72 [cluster="Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", file="StateChangeProcess.cs", label="Exit Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", span="138-138"];
m17_61 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="29-29"];
m17_70 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="StateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m17_18 [cluster="lambda expression", file="StateChangeProcess.cs", label="Entry lambda expression", span="50-50"];
m17_14 [cluster="lambda expression", file="StateChangeProcess.cs", label="Entry lambda expression", span="50-50"];
m17_16 [cluster="lambda expression", file="StateChangeProcess.cs", label="Exit lambda expression", span="50-50"];
m17_20 [cluster="lambda expression", file="StateChangeProcess.cs", label="Exit lambda expression", span="50-50"];
m17_17 [cluster="Unk.Select", file="StateChangeProcess.cs", label="Entry Unk.Select", span=""];
m17_64 [cluster="Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="36-36"];
m17_69 [cluster="Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="StateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="27-27"];
m17_73 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="StateChangeProcess.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m17_21 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="StateChangeProcess.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m17_65 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="28-28"];
m17_9 [cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="StateChangeProcess.cs", label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42"];
m17_13 [cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="StateChangeProcess.cs", label="Exit Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42"];
m17_42 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateChangeProcess.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m17_67 [cluster="Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs", label="Entry Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="29-29"];
m17_75 [file="StateChangeProcess.cs", label="Hangfire.States.StateChangeProcess", span=""];
m17_76 [file="StateChangeProcess.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m18_25 [cluster="Unk.OnScenarioStart", file="StateChangeProcessFacts.cs", label="Entry Unk.OnScenarioStart", span=""];
m18_114 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273"];
m18_117 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="279-279"];
m18_120 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreated met'' +\r\n                    ''hod:'', ((string)(null)), table7, ''Given '')", span="288-289"];
m18_116 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="277-277"];
m18_123 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="295-295"];
m18_119 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="table7.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="284-286"];
m18_122 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="293-293"];
m18_118 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="281-283"];
m18_121 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="291-291"];
m18_115 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should not be able to set parameters after the job was created'', ((string[])(null)))", span="275-275"];
m18_124 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273"];
m18_29 [cluster="Unk.CollectScenarioErrors", file="StateChangeProcessFacts.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m18_26 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67"];
m18_27 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="StateChangeProcessFacts.cs", label="testRunner.CollectScenarioErrors()", span="69-69"];
m18_28 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67"];
m18_184 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437"];
m18_187 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="443-443"];
m18_188 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="445-445"];
m18_186 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="441-441"];
m18_197 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="464-464"];
m18_193 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="table11.AddRow(new string[] {\r\n                        ''first''})", span="455-456"];
m18_194 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="table11.AddRow(new string[] {\r\n                        ''second''})", span="457-458"];
m18_189 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="447-447"];
m18_191 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="451-451"];
m18_196 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462"];
m18_195 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the client exception filters should be executed in the following order:'', ((string)(null)), table11, ''Then '')", span="460-460"];
m18_185 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters should be executed depending on their order'', ((string[])(null)))", span="439-439"];
m18_192 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="453-454"];
m18_190 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="449-449"];
m18_198 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437"];
m18_80 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180"];
m18_83 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", prediction=9, span="186-186"];
m18_82 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="184-184"];
m18_84 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="188-190"];
m18_85 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, file="StateChangeProcessFacts.cs", label="table4.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-US''})", prediction=10, span="191-193"];
m18_86 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table4, ''Given '')", span="195-196"];
m18_89 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="202-202"];
m18_81 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name, an exception should be thrown'', ((string[])(null)))", span="182-182"];
m18_87 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m18_88 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m18_90 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180"];
m18_52 [cluster="Unk.And", file="StateChangeProcessFacts.cs", label="Entry Unk.And", span=""];
m18_5 [cluster="Unk.GetTestRunner", file="StateChangeProcessFacts.cs", label="Entry Unk.GetTestRunner", span=""];
m18_68 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148"];
m18_71 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", prediction=9, span="154-154"];
m18_70 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="152-152"];
m18_72 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="156-158"];
m18_73 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, file="StateChangeProcessFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", prediction=12, span="159-161"];
m18_74 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''UICulture'',\r\n                        ''ru-RU''})", span="162-164"];
m18_75 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table3, ''Given '')", span="166-167"];
m18_78 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="173-173"];
m18_69 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should be able to set a job parameter in the client filter'', ((string[])(null)))", span="150-150"];
m18_77 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''it should have all of the above parameters encoded as JSON string'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171"];
m18_76 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="169-169"];
m18_79 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148"];
m18_91 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210"];
m18_93 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=9, span="215-215"];
m18_92 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter should be able to read the parameters that were set by one of the p'' +\r\n                    ''revious filters'', ((string[])(null)))", span="212-213"];
m18_94 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="217-217"];
m18_98 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs", label="testRunner.And(''the client filter \'second\' that reads all of the above parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", prediction=14, span="229-229"];
m18_97 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table5, ''Given '')", span="226-227"];
m18_99 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231"];
m18_100 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs", label="testRunner.Then(''the \'second\' client filter got the actual values of the parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=15, span="233-233"];
m18_101 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", prediction=9, span="235-235"];
m18_96 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="table5.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-GB''})", span="222-224"];
m18_95 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="219-221"];
m18_102 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210"];
m18_141 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338"];
m18_144 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="344-344"];
m18_145 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="346-346"];
m18_143 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="342-342"];
m18_153 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="363-363"];
m18_149 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="table9.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="354-355"];
m18_150 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="table9.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="356-357"];
m18_151 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="table9.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="358-359"];
m18_146 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="348-348"];
m18_152 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''only the following client filter methods should be executed:'', ((string)(null)), table9, ''Then '')", span="361-361"];
m18_142 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="340-340"];
m18_148 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="352-353"];
m18_147 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="350-350"];
m18_154 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338"];
m18_22 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m18_23 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StateChangeProcessFacts.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
m18_24 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m18_173 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411"];
m18_176 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="418-418"];
m18_177 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="420-420"];
m18_175 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="416-416"];
m18_182 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="430-430"];
m18_179 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="424-424"];
m18_181 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="428-428"];
m18_180 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the client exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="426-426"];
m18_178 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="422-422"];
m18_174 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters should be executed when there was an exception while cre'' +\r\n                    ''ating a job'', ((string[])(null)))", span="413-414"];
m18_183 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411"];
m18_13 [cluster="Unk.OnFeatureEnd", file="StateChangeProcessFacts.cs", label="Entry Unk.OnFeatureEnd", span=""];
m18_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="StateChangeProcessFacts.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m18_48 [cluster="Unk.When", file="StateChangeProcessFacts.cs", label="Entry Unk.When", span=""];
m18_9 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40"];
m18_10 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", color=green, community=0, file="StateChangeProcessFacts.cs", label="testRunner.OnFeatureEnd()", prediction=17, span="42-42"];
m18_11 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", color=green, community=0, file="StateChangeProcessFacts.cs", label="testRunner = null", prediction=18, span="43-43"];
m18_12 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40"];
m18_50 [cluster="Unk.AddRow", file="StateChangeProcessFacts.cs", label="Entry Unk.AddRow", span=""];
m18_34 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84"];
m18_36 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", color=green, community=0, file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=9, span="88-88"];
m18_35 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters should be executed when I create a job'', ((string[])(null)))", span="86-86"];
m18_37 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="90-90"];
m18_38 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92"];
m18_45 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="107-107"];
m18_41 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="98-99"];
m18_42 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="100-101"];
m18_44 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="105-105"];
m18_43 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="103-103"];
m18_39 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94"];
m18_40 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="96-97"];
m18_46 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84"];
m18_47 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="StateChangeProcessFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m18_155 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370"];
m18_158 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="376-376"];
m18_159 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="378-378"];
m18_157 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="374-374"];
m18_171 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="403-403"];
m18_164 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table10.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="388-389"];
m18_165 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table10.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="390-391"];
m18_166 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table10.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="392-393"];
m18_167 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table10.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="394-395"];
m18_168 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table10.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="396-397"];
m18_160 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="380-380"];
m18_161 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="382-382"];
m18_170 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="401-401"];
m18_169 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table10, ''Then '')", span="399-399"];
m18_156 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client filter handles an exception, it should not be thrown outside'', ((string[])(null)))", span="372-372"];
m18_163 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="386-387"];
m18_162 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="384-384"];
m18_172 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370"];
m18_51 [cluster="Unk.Then", file="StateChangeProcessFacts.cs", label="Entry Unk.Then", span=""];
m18_33 [cluster="Unk.Given", file="StateChangeProcessFacts.cs", label="Entry Unk.Given", span=""];
m18_53 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114"];
m18_61 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, file="StateChangeProcessFacts.cs", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", prediction=20, span="130-131"];
m18_60 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="128-129"];
m18_62 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="132-133"];
m18_56 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="120-120"];
m18_57 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="122-122"];
m18_55 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="118-118"];
m18_66 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="141-141"];
m18_59 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="126-126"];
m18_63 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="134-135"];
m18_64 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="136-137"];
m18_65 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", span="139-139"];
m18_58 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="124-124"];
m18_54 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters should be executed depending on their order'', ((string[])(null)))", span="116-116"];
m18_67 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114"];
m18_0 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m18_2 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', ''\r\n  As a user, I expect that all defined client filters are executing\r\n  using th'' +\r\n                    ''e following rules, when I create a job.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", prediction=21, span="33-35"];
m18_1 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StateChangeProcessFacts.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m18_3 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="StateChangeProcessFacts.cs", label="testRunner.OnFeatureStart(featureInfo)", prediction=22, span="36-36"];
m18_4 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m18_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="StateChangeProcessFacts.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m18_49 [cluster="TechTalk.SpecFlow.Table.cstr", file="StateChangeProcessFacts.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m18_30 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72"];
m18_31 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", color=green, community=0, file="StateChangeProcessFacts.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", prediction=23, span="76-76"];
m18_32 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72"];
m18_125 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302"];
m18_128 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="308-308"];
m18_129 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="310-310"];
m18_127 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="306-306"];
m18_139 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="331-331"];
m18_135 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="table8.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="322-323"];
m18_136 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="table8.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="324-325"];
m18_137 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="table8.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="326-327"];
m18_130 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="312-312"];
m18_131 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314"];
m18_138 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="testRunner.And(''only the following client filter methods should be executed:'', ((string)(null)), table8, ''And '')", span="329-329"];
m18_133 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the storage should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="318-318"];
m18_126 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter cancels the creation of the job, it should not be created'', ((string[])(null)))", span="304-304"];
m18_134 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="320-321"];
m18_132 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="316-316"];
m18_140 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302"];
m18_103 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243"];
m18_106 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="250-250"];
m18_109 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the client filter \'first\' that gets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table6, ''Given '')", span="259-260"];
m18_105 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="248-248"];
m18_112 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="266-266"];
m18_108 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="table6.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-GB''})", span="255-257"];
m18_111 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="264-264"];
m18_107 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="252-254"];
m18_110 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="262-262"];
m18_104 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name in the GetParameter method call, a'' +\r\n                    ''n exception should be thrown'', ((string[])(null)))", span="245-246"];
m18_113 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243"];
m18_199 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472"];
m18_202 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="this.FeatureBackground()", span="479-479"];
m18_203 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="481-481"];
m18_201 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="477-477"];
m18_214 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="this.ScenarioCleanup()", span="504-504"];
m18_209 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table12.AddRow(new string[] {\r\n                        ''first''})", span="493-494"];
m18_210 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table12.AddRow(new string[] {\r\n                        ''second''})", span="495-496"];
m18_211 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="table12.AddRow(new string[] {\r\n                        ''third''})", span="497-498"];
m18_204 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="483-483"];
m18_205 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="485-485"];
m18_207 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="489-489"];
m18_213 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="502-502"];
m18_212 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.Then(''the following client exception filters should be executed:'', ((string)(null)), table12, ''Then '')", span="500-500"];
m18_200 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client exception filter handles an exception, it should not be thrown outs'' +\r\n                    ''ide'', ((string[])(null)))", span="474-475"];
m18_208 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="491-492"];
m18_206 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="487-487"];
m18_215 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472"];
m18_8 [cluster="Unk.OnFeatureStart", file="StateChangeProcessFacts.cs", label="Entry Unk.OnFeatureStart", span=""];
m18_14 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47"];
m18_16 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs", label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="52-52"];
m18_15 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="49-50"];
m18_17 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47"];
m18_216 [file="StateChangeProcessFacts.cs", label="HangFire.Tests.ClientFiltersFeature", span=""];
m19_0 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="StateContext.cs", label="Entry HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6"];
m19_1 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="StateContext.cs", label="Exception = exception", span="11-11"];
m19_2 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="StateContext.cs", label="Exit HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6"];
m19_3 [file="StateContext.cs", label="HangFire.Filters.ServerExceptionContext", span=""];
m20_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m20_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs", label="ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="28-28"];
m20_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs", label="LowerLogVerbosity = false", span="29-29"];
m20_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m20_5 [cluster="System.TimeSpan.FromMilliseconds(double)", file="StateContextFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m20_6 [file="StateContextFacts.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m21_14 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29"];
m21_15 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, null, Queue))", span="31-32"];
m21_16 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="34-34"];
m21_17 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29"];
m21_8 [cluster="Unk.>", file="StateContextMock.cs", label="Entry Unk.>", span=""];
m21_29 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47"];
m21_30 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs", label="var processingJob = CreateProcessingJob()", span="49-49"];
m21_31 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs", label="Assert.Equal(JobId, processingJob.JobId)", span="51-51"];
m21_32 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs", label="Assert.Equal(Queue, processingJob.Queue)", span="52-52"];
m21_33 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47"];
m21_13 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="StateContextMock.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="25-25"];
m21_0 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14"];
m21_1 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="StateContextMock.cs", label="_connection = new Mock<IStorageConnection>()", span="16-16"];
m21_2 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="StateContextMock.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14"];
m21_45 [cluster="Unk.DeleteJobFromQueue", file="StateContextMock.cs", label="Entry Unk.DeleteJobFromQueue", span=""];
m21_9 [cluster="Unk.Equal", file="StateContextMock.cs", label="Entry Unk.Equal", span=""];
m21_3 [cluster="Mock<IStorageConnection>.cstr", file="StateContextMock.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m21_35 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56"];
m21_36 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs", label="var processingJob = CreateProcessingJob()", span="58-58"];
m21_37 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs", label="processingJob.Dispose()", span="60-60"];
m21_38 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs", label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", span="62-62"];
m21_39 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56"];
m21_4 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20"];
m21_5 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(null, JobId, Queue))", span="22-23"];
m21_6 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="25-25"];
m21_7 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20"];
m21_42 [cluster="lambda expression", file="StateContextMock.cs", label="Entry lambda expression", span="62-62"];
m21_10 [cluster="lambda expression", file="StateContextMock.cs", label="Entry lambda expression", span="23-23"];
m21_11 [cluster="lambda expression", file="StateContextMock.cs", label="new SqlServerProcessingJob(null, JobId, Queue)", span="23-23"];
m21_12 [cluster="lambda expression", file="StateContextMock.cs", label="Exit lambda expression", span="23-23"];
m21_18 [cluster="lambda expression", file="StateContextMock.cs", label="Entry lambda expression", span="32-32"];
m21_19 [cluster="lambda expression", file="StateContextMock.cs", label="new SqlServerProcessingJob(_connection.Object, null, Queue)", span="32-32"];
m21_20 [cluster="lambda expression", file="StateContextMock.cs", label="Exit lambda expression", span="32-32"];
m21_26 [cluster="lambda expression", file="StateContextMock.cs", label="Entry lambda expression", span="41-41"];
m21_27 [cluster="lambda expression", file="StateContextMock.cs", label="new SqlServerProcessingJob(_connection.Object, JobId, null)", span="41-41"];
m21_28 [cluster="lambda expression", file="StateContextMock.cs", label="Exit lambda expression", span="41-41"];
m21_43 [cluster="lambda expression", file="StateContextMock.cs", label="x.DeleteJobFromQueue(JobId, Queue)", span="62-62"];
m21_44 [cluster="lambda expression", file="StateContextMock.cs", label="Exit lambda expression", span="62-62"];
m21_34 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65"];
m21_46 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="StateContextMock.cs", label="return new SqlServerProcessingJob(_connection.Object, JobId, Queue);", span="67-67"];
m21_47 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="StateContextMock.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65"];
m21_21 [cluster="SqlServerProcessingJob.cstr", file="StateContextMock.cs", label="Entry SqlServerProcessingJob.cstr", span=""];
m21_40 [cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="40-40"];
m21_22 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38"];
m21_23 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, JobId, null))", span="40-41"];
m21_24 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="43-43"];
m21_25 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38"];
m21_41 [cluster="Unk.Verify", file="StateContextMock.cs", label="Entry Unk.Verify", span=""];
m21_48 [file="StateContextMock.cs", label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", span=""];
m22_8 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachine.cs", label="Id = id", span="43-43"];
m22_24 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachine.cs", label="return;", span="72-72"];
m22_53 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="StateMachine.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m22_54 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="StateMachine.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m22_49 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachine.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m22_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m22_20 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", label="return jobId;", span="59-59"];
m22_21 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", label="Exit Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40"];
m22_0 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31"];
m22_7 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="Exit Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31"];
m22_9 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", label="Entry Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40"];
m22_10 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", label="job == null", span="45-45"];
m22_5 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="_connection = connection", span="36-36"];
m22_1 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="connection == null", span="33-33"];
m22_3 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="stateChangeProcess == null", span="34-34"];
m22_6 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="_stateChangeProcess = stateChangeProcess", span="37-37"];
m22_2 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m22_4 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateChangeProcess'');", span="34-34"];
m22_11 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", label="throw new ArgumentNullException(''job'');", span="45-45"];
m22_55 [cluster="string.Format(string, object)", file="StateMachine.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_17 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                createdAt,\r\n                TimeSpan.FromHours(1))", span="50-54"];
m22_12 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", label="parameters == null", span="46-46"];
m22_14 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", color=green, community=0, file="StateMachine.cs", label="_connection.Execute(\r\n                ''delete from HangFire.JobQueue where Id = @id'',\r\n                new { id = Id })", prediction=24, span="54-56"];
m22_13 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachine.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m22_15 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachine.cs", label="_removedFromQueue = true", span="58-58"];
m22_16 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachine.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m22_22 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachine.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70"];
m22_23 [cluster="Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="StateMachine.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30"];
m22_25 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs", label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20"];
m22_26 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="Entry Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62"];
m22_27 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="jobId == null", span="65-65"];
m22_28 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''jobId'');", span="65-65"];
m22_51 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="StateMachine.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m22_50 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="StateMachine.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="25-25"];
m22_29 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
m22_31 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="fromStates != null && fromStates.Length == 0", span="67-67"];
m22_33 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="_connection.AcquireDistributedJobLock(jobId, JobLockTimeout)", span="78-78"];
m22_34 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="var jobData = _connection.GetJobData(jobId)", span="80-80"];
m22_37 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="fromStates != null && !fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="89-89"];
m22_42 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="!toState.IgnoreJobLoadException", span="107-107"];
m22_43 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="toState = new FailedState(ex.InnerException)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Can not change the state of a job to '{0}': target method was not found.'',\r\n                                toState.Name)\r\n                        }", span="109-114"];
m22_30 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''toState'');", span="66-66"];
m22_32 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="throw new ArgumentException(''From states array should be null or non-empty.'', ''fromStates'');", span="69-69"];
m22_35 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="jobData == null", span="82-82"];
m22_40 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="jobData.EnsureLoaded()", span="98-98"];
m22_36 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="return false;", span="86-86"];
m22_38 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="return false;", span="91-91"];
m22_39 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="bool loadSucceeded = true", span="94-94"];
m22_47 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="return loadSucceeded && stateChanged;", span="123-123"];
m22_41 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label=JobLoadException, span="100-100"];
m22_44 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="loadSucceeded = false", span="116-116"];
m22_48 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", label="Exit Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62"];
m22_56 [file="StateMachine.cs", label="Hangfire.States.StateMachine", span=""];
m23_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m23_119 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
m23_125 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="248-254"];
m23_121 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''serverId'');", span="238-238"];
m23_123 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''context'');", span="239-239"];
m23_124 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246"];
m23_120 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="serverId == null", span="238-238"];
m23_122 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="context == null", span="239-239"];
m23_126 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
m23_97 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
m23_102 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213"];
m23_99 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''id'');", span="207-207"];
m23_101 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''name'');", span="208-208"];
m23_100 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs", label="name == null", span="208-208"];
m23_98 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs", label="id == null", span="207-207"];
m23_103 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
m23_127 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m23_49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
m23_56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129"];
m23_63 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149"];
m23_51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''job'');", span="111-111"];
m23_53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''parameters'');", span="112-112"];
m23_55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="var invocationData = InvocationData.Serialize(job)", span="119-119"];
m23_54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117"];
m23_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="parameters.Count > 0", span="131-131"];
m23_61 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142"];
m23_64 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="return jobId;", span="152-152"];
m23_58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="var parameterArray = new object[parameters.Count]", span="133-133"];
m23_62 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147"];
m23_50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="job == null", span="111-111"];
m23_52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="parameters == null", span="112-112"];
m23_60 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label=parameters, span="135-135"];
m23_59 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="int parameterIndex = 0", span="134-134"];
m23_65 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
m23_8 [cluster="Hangfire.States.StateHandlerCollection.StateHandlerCollection()", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
m23_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateMachineFactory.cs", label="_connection.Dispose()", span="46-46"];
m23_21 [cluster="string.Format(string, object)", file="StateMachineFactory.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m23_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", label="connection == null", span="37-37"];
m23_5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", label="_connection = connection", span="40-40"];
m23_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''connection'');", span="37-37"];
m23_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateMachineFactory.cs", label="options == null", prediction=25, span="38-38"];
m23_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateMachineFactory.cs", label="throw new ArgumentNullException(''options'');", prediction=25, span="38-38"];
m23_6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateMachineFactory.cs", label="_options = options", prediction=27, span="41-41"];
m23_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
m23_43 [cluster="System.TimeSpan.Negate()", file="StateMachineFactory.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m23_69 [cluster="Unk.>", file="StateMachineFactory.cs", label="Entry Unk.>", span=""];
m23_47 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="StateMachineFactory.cs", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m23_72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
m23_76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163"];
m23_74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''id'');", span="157-157"];
m23_75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160"];
m23_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="jobData == null", span="165-165"];
m23_79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168"];
m23_80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="invocationData.Arguments = jobData.Arguments", span="169-169"];
m23_86 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188"];
m23_73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="id == null", span="157-157"];
m23_78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="return null;", span="165-165"];
m23_83 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="job = invocationData.Deserialize()", span="176-176"];
m23_81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="Job job = null", span="171-171"];
m23_85 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="loadException = ex", span="180-180"];
m23_82 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="JobLoadException loadException = null", span="172-172"];
m23_84 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label=JobLoadException, span="178-178"];
m23_87 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
m23_13 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m23_15 [cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="return new StateMachine(connection, process);", span="39-39"];
m23_118 [cluster="System.ArgumentException.ArgumentException(string)", file="StateMachineFactory.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m23_44 [cluster="Unk.Query", file="StateMachineFactory.cs", label="Entry Unk.Query", span=""];
m23_48 [cluster="Unk.ToString", file="StateMachineFactory.cs", label="Entry Unk.ToString", span=""];
m23_11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
m23_12 [cluster="Unk.Dispose", file="StateMachineFactory.cs", label="Entry Unk.Dispose", span=""];
m23_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m23_20 [cluster="SqlServerDistributedLock.cstr", file="StateMachineFactory.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m23_42 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StateMachineFactory.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m23_68 [cluster="System.DateTime.Add(System.TimeSpan)", file="StateMachineFactory.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m23_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
m23_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m23_32 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87"];
m23_35 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93"];
m23_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''queues'');", span="63-63"];
m23_31 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="82-82"];
m23_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73"];
m23_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77"];
m23_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="var currentQueryIndex = 0", span="78-78"];
m23_33 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="idAndQueue == null", span="89-89"];
m23_38 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="idAndQueue == null", span="99-99"];
m23_39 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103"];
m23_34 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="currentQueryIndex == fetchConditions.Length - 1", span="91-91"];
m23_36 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="94-94"];
m23_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="queues == null", span="63-63"];
m23_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="queues.Length == 0", span="64-64"];
m23_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="dynamic idAndQueue", span="66-66"];
m23_37 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98"];
m23_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64"];
m23_40 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m23_138 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m23_141 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="282-284"];
m23_139 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs", label="timeOut.Duration() != timeOut", span="277-277"];
m23_140 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="279-279"];
m23_142 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m23_143 [cluster="System.TimeSpan.Duration()", file="StateMachineFactory.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m23_104 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
m23_109 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222"];
m23_106 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''id'');", span="218-218"];
m23_108 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''queue'');", span="219-219"];
m23_107 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs", label="queue == null", span="219-219"];
m23_105 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs", label="id == null", span="218-218"];
m23_110 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
m23_90 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
m23_95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202"];
m23_92 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''id'');", span="193-193"];
m23_94 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''name'');", span="194-194"];
m23_93 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs", label="name == null", span="194-194"];
m23_91 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs", label="id == null", span="193-193"];
m23_96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
m23_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
m23_116 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233"];
m23_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''key'');", span="227-227"];
m23_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs", label="toScore < fromScore", span="228-228"];
m23_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs", label="key == null", span="227-227"];
m23_115 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228"];
m23_117 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
m23_67 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateMachineFactory.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m23_18 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachineFactory.cs", label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31"];
m23_19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateMachineFactory.cs", label="Hangfire.States.StateMachineFactory", span=""];
m23_70 [cluster="Unk.Single", file="StateMachineFactory.cs", label="Entry Unk.Single", span=""];
m23_41 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachineFactory.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m23_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateMachineFactory.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m23_128 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m23_131 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="261-263"];
m23_130 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''serverId'');", span="259-259"];
m23_129 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs", label="serverId == null", span="259-259"];
m23_132 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m23_71 [cluster="Unk.Execute", file="StateMachineFactory.cs", label="Entry Unk.Execute", span=""];
m23_89 [cluster="HangFire.Storage.JobData.JobData()", file="StateMachineFactory.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m23_88 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="StateMachineFactory.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m23_133 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m23_136 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="270-272"];
m23_135 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''serverId'');", span="268-268"];
m23_134 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs", label="serverId == null", span="268-268"];
m23_137 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m23_45 [cluster="Unk.SingleOrDefault", file="StateMachineFactory.cs", label="Entry Unk.SingleOrDefault", span=""];
m23_66 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="StateMachineFactory.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m23_144 [file="StateMachineFactory.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m24_18 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61"];
m24_19 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs", label="_connection.Execute(\r\n                ''update HangFire.JobQueue set FetchedAt = null where Id = @id'',\r\n                new { id = Id })", span="63-65"];
m24_20 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs", label="_requeued = true", span="67-67"];
m24_21 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61"];
m24_0 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31"];
m24_1 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=green, community=0, file="StateMachineFacts.cs", label="connection == null", prediction=28, span="37-37"];
m24_2 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=green, community=0, file="StateMachineFacts.cs", label="throw new ArgumentNullException(''connection'');", prediction=29, span="37-37"];
m24_3 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="jobId == null", span="38-38"];
m24_5 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="queue == null", span="39-39"];
m24_7 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="_connection = connection", span="41-41"];
m24_8 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="Id = id", span="43-43"];
m24_9 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="JobId = jobId", span="44-44"];
m24_10 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="Queue = queue", span="45-45"];
m24_4 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="throw new ArgumentNullException(''jobId'');", span="38-38"];
m24_6 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="throw new ArgumentNullException(''queue'');", span="39-39"];
m24_11 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31"];
m24_17 [cluster="Unk.Execute", file="StateMachineFacts.cs", label="Entry Unk.Execute", span=""];
m24_22 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70"];
m24_23 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs", label=_disposed, span="72-72"];
m24_25 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs", label="!_removedFromQueue && !_requeued", span="74-74"];
m24_26 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs", label="Requeue()", span="76-76"];
m24_27 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs", label="_disposed = true", span="79-79"];
m24_24 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs", label="return;", span="72-72"];
m24_28 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70"];
m24_13 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m24_14 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs", label="_connection.Execute(\r\n                ''delete from HangFire.JobQueue where Id = @id'',\r\n                new { id = Id })", span="54-56"];
m24_15 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs", label="_removedFromQueue = true", span="58-58"];
m24_16 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52"];
m24_29 [file="StateMachineFacts.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
m25_22 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Entry Hangfire.Server.Worker.ToString()", span="66-66"];
m25_23 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="return ''Worker #'' + _context.WorkerNumber;", span="68-68"];
m25_24 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Exit Hangfire.Server.Worker.ToString()", span="66-66"];
m25_6 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35"];
m25_7 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="var connection = _context.Storage.GetConnection()", span="37-37"];
m25_8 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="var fetchedJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="38-38"];
m25_9 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="ProcessJob(fetchedJob.JobId, connection, _context.PerformanceProcess, cancellationToken)", span="42-42"];
m25_10 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="49-49"];
m25_12 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="56-56"];
m25_14 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="fetchedJob.Requeue()", span="60-60"];
m25_11 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label=JobAbortedException, span="54-54"];
m25_13 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label=Exception, span="58-58"];
m25_15 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="throw;", span="61-61"];
m25_16 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35"];
m25_54 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m25_58 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m25_17 [cluster="Hangfire.JobStorage.GetConnection()", file="Worker.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m25_47 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="Worker.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m25_56 [cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m25_57 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28"];
m25_48 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="Worker.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m25_50 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m25_52 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32"];
m25_20 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m25_21 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m25_19 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", span="71-71"];
m25_25 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var stateMachine = _context.StateMachineFactory.Create(connection)", span="77-77"];
m25_30 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="97-97"];
m25_32 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var cancellationToken = new ServerJobCancellationToken(\r\n                    jobId, connection, _context, shutdownToken)", span="100-101"];
m25_33 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, cancellationToken)", span="103-104"];
m25_36 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var result = process.Run(performContext, jobData.Job)", span="109-109"];
m25_26 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var processingState = new ProcessingState(_context.ServerId, _context.WorkerNumber)", span="78-78"];
m25_28 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="return;", span="85-85"];
m25_29 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="IState state", span="93-93"];
m25_31 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="jobData.EnsureLoaded()", span="98-98"];
m25_34 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="106-106"];
m25_35 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="var duration = Stopwatch.StartNew()", span="107-107"];
m25_38 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="state = new SucceededState(result, (long) latency, duration.ElapsedMilliseconds)", span="112-112"];
m25_37 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="duration.Stop()", span="110-110"];
m25_39 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label=OperationCanceledException, span="114-114"];
m25_41 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label=JobPerformanceException, span="118-118"];
m25_43 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label=Exception, span="125-125"];
m25_40 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="throw;", span="116-116"];
m25_42 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="120-123"];
m25_44 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                }", span="127-130"];
m25_46 [cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs", label="Exit Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", span="71-71"];
m25_53 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35"];
m25_55 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="Worker.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20"];
m25_18 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m25_0 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28"];
m25_1 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs", label="context == null", span="30-30"];
m25_3 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs", label="_context = context", span="32-32"];
m25_2 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs", label="throw new ArgumentNullException(''context'');", span="30-30"];
m25_4 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28"];
m25_51 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m25_49 [cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="Worker.cs", label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m25_59 [file="Worker.cs", label="Hangfire.Server.Worker", span=""];
m26_12 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="WorkerFacts.cs", label="Entry HangFire.Storage.ProcessingJob.Dispose()", span="39-39"];
m26_13 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="WorkerFacts.cs", label="_connection.DeleteJobFromQueue(JobId, Queue)", span="41-41"];
m26_14 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="WorkerFacts.cs", label="Exit HangFire.Storage.ProcessingJob.Dispose()", span="39-39"];
m26_0 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="Entry HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24"];
m26_1 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="connection == null", span="26-26"];
m26_3 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="jobId == null", span="27-27"];
m26_5 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="queue == null", span="28-28"];
m26_7 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="_connection = connection", span="30-30"];
m26_8 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="JobId = jobId", span="32-32"];
m26_9 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="Queue = queue", span="33-33"];
m26_2 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''connection'');", span="26-26"];
m26_4 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''jobId'');", span="27-27"];
m26_6 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''queue'');", span="28-28"];
m26_10 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs", label="Exit HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24"];
m26_15 [cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31"];
m26_16 [file="WorkerFacts.cs", label="HangFire.Storage.ProcessingJob", span=""];
n6 -> n9  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
n6 -> n11  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
n18 -> n21  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
n34 -> n37  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m1_63 -> m1_67  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m1_63 -> m1_69  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=supervisors, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=supervisors, style=dashed];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m1_87 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_24  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_26  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_34  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_38  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_53  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_54  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_65  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_66  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_67  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_68  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_69  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m2_38 -> m2_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_38 -> m2_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_23 -> m2_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_23 -> m2_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_28 -> m2_30  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m2_6 -> m2_9  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m2_6 -> m2_11  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m2_6 -> m2_13  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m2_55 -> m2_26  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m2_55 -> m2_29  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m2_55 -> m2_30  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m2_55 -> m2_41  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m5_52 -> m5_55  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_1 -> m5_6  [color=green, key=1, label="lambda expression", style=dashed];
m5_73 -> m5_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_61 -> m5_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_93 -> m5_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_40 -> m5_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_80 -> m5_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_10 -> m5_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_20 -> m5_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_46 -> m5_49  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_47 -> m5_49  [color=darkseagreen4, key=1, label=newState, style=dashed];
m5_27 -> m5_29  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_27 -> m5_30  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_27 -> m5_31  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_27 -> m5_33  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_102 -> m5_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_16  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_30  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_61  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_102 -> m5_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_0 -> m6_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_24 -> m6_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_16 -> m6_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_35 -> m6_12  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m6_35 -> m6_19  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m6_35 -> m6_27  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m6_35 -> m6_32  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m11_31 -> m11_77  [color=darkseagreen4, key=1, label="Hangfire.Client.ClientExceptionContext", style=dashed];
m11_16 -> m11_20  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m11_19 -> m11_23  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m11_22 -> m11_24  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m11_5 -> m11_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m11_9 -> m11_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_51 -> m11_54  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Client.CreatedContext>", style=dashed];
m11_29 -> m11_46  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m11_29 -> m11_47  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m11_36 -> m11_54  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m11_38 -> m11_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_56 -> m11_58  [color=darkseagreen4, key=1, label="Hangfire.Client.CreatingContext", style=dashed];
m11_56 -> m11_59  [color=darkseagreen4, key=1, label="Hangfire.Client.CreatingContext", style=dashed];
m11_56 -> m11_66  [color=darkseagreen4, key=1, label="Hangfire.Client.IClientFilter", style=dashed];
m11_56 -> m11_70  [color=darkseagreen4, key=1, label="Hangfire.Client.IClientFilter", style=dashed];
m11_65 -> m11_67  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m11_65 -> m11_70  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m11_65 -> m11_71  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m11_64 -> m11_69  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m11_80 -> m11_32  [color=darkseagreen4, key=1, label="Hangfire.Client.JobCreationProcess", style=dashed];
m11_81 -> m11_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m11_82 -> m11_46  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m11_82 -> m11_47  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m11_83 -> m11_54  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m11_84 -> m11_54  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Client.CreatedContext>", style=dashed];
m11_85 -> m11_54  [color=darkseagreen4, key=1, label="Hangfire.Client.IClientFilter", style=dashed];
m12_33 -> m12_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_186 -> m12_188  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_186 -> m12_193  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_187 -> m12_189  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_193 -> m12_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_190 -> m12_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_190 -> m12_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_13 -> m12_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_165 -> m12_171  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_167 -> m12_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_167 -> m12_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_171 -> m12_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_170 -> m12_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_299 -> m12_301  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_299 -> m12_307  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_300 -> m12_302  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_307 -> m12_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_304 -> m12_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_304 -> m12_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_303 -> m12_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_305 -> m12_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_306 -> m12_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_43 -> m12_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_44 -> m12_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_98 -> m12_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_99 -> m12_101  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_100 -> m12_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_100 -> m12_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_102 -> m12_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_103 -> m12_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_24 -> m12_24  [color=darkseagreen4, key=1, label=elapsedTime, style=dashed];
m12_2 -> m12_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_141 -> m12_143  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_141 -> m12_145  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_141 -> m12_148  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_142 -> m12_144  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_142 -> m12_146  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_142 -> m12_147  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_145 -> m12_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_148 -> m12_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_146 -> m12_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_147 -> m12_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_279 -> m12_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_279 -> m12_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_277 -> m12_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_277 -> m12_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_278 -> m12_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_280 -> m12_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_281 -> m12_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_54 -> m12_59  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_59 -> m12_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_56 -> m12_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_57 -> m12_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_58 -> m12_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_229 -> m12_235  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_235 -> m12_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_231 -> m12_235  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_231 -> m12_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_231 -> m12_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_232 -> m12_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_233 -> m12_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_234 -> m12_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_252 -> m12_254  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_252 -> m12_260  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_253 -> m12_255  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_260 -> m12_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_256 -> m12_260  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_256 -> m12_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_256 -> m12_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_257 -> m12_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_258 -> m12_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_259 -> m12_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_38 -> m12_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_42 -> m12_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_208 -> m12_210  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_208 -> m12_214  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_210 -> m12_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_214 -> m12_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_211 -> m12_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_212 -> m12_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_213 -> m12_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_74 -> m12_77  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m12_74 -> m12_78  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m12_75 -> m12_79  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m12_77 -> m12_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_76 -> m12_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_80 -> m12_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_81 -> m12_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_82 -> m12_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_202 -> m12_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_246 -> m12_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_269 -> m12_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_287 -> m12_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_322 -> m12_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_19 -> m12_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_20 -> m12_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_120 -> m12_122  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_120 -> m12_124  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_122 -> m12_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_124 -> m12_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_123 -> m12_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_331 -> m12_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_42  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_121  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_123  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_143  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_150  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_169  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_170  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_189  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_212  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_220  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_213  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_230  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_232  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_234  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_243  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_254  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_255  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_257  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_266  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_276  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_278  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_296  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_301  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_302  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_303  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_306  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_331 -> m12_319  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m12_332 -> m12_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_333 -> m12_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_334 -> m12_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_335 -> m12_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_336 -> m12_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_337 -> m12_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_338 -> m12_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_339 -> m12_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_339 -> m12_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_340 -> m12_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_341 -> m12_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_341 -> m12_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_342 -> m12_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_342 -> m12_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_343 -> m12_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_344 -> m12_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m13_3 -> m13_9  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m13_6 -> m13_9  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m13_13 -> m13_19  [color=darkseagreen4, key=1, label=long, style=dashed];
m13_25 -> m13_7  [color=darkseagreen4, key=1, label="HangFire.Filters.RetryAttribute", style=dashed];
m14_377 -> m14_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_378 -> m14_381  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_379 -> m14_387  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_381 -> m14_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_380 -> m14_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_153 -> m14_156  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_154 -> m14_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_156 -> m14_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_155 -> m14_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_171 -> m14_173  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m14_171 -> m14_176  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m14_172 -> m14_174  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m14_172 -> m14_175  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m14_173 -> m14_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_176 -> m14_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_174 -> m14_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_175 -> m14_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_361 -> m14_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_362 -> m14_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_363 -> m14_374  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_364 -> m14_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_320 -> m14_326  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m14_326 -> m14_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_322 -> m14_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_323 -> m14_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_323 -> m14_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_324 -> m14_338  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_325 -> m14_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_406 -> m14_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_407 -> m14_414  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_408 -> m14_413  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_132 -> m14_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_134 -> m14_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_134 -> m14_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_135 -> m14_150  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_136 -> m14_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_298 -> m14_308  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_298 -> m14_311  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_300 -> m14_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_300 -> m14_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_299 -> m14_304  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_301 -> m14_317  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_302 -> m14_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_44 -> m14_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_74 -> m14_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_52 -> m14_56  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_53 -> m14_55  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_56 -> m14_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_54 -> m14_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_276 -> m14_282  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m14_282 -> m14_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_278 -> m14_282  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_278 -> m14_291  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_278 -> m14_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_279 -> m14_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_280 -> m14_288  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_281 -> m14_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_233 -> m14_239  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_234 -> m14_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_239 -> m14_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_235 -> m14_245  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_236 -> m14_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_238 -> m14_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_394 -> m14_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_395 -> m14_402  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_396 -> m14_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_254 -> m14_259  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_255 -> m14_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_255 -> m14_270  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_255 -> m14_273  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_259 -> m14_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_256 -> m14_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_257 -> m14_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_258 -> m14_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4 -> m14_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_193 -> m14_198  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_194 -> m14_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_194 -> m14_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_198 -> m14_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_197 -> m14_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_65 -> m14_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_227 -> m14_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_270 -> m14_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_291 -> m14_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_308 -> m14_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_341 -> m14_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_110 -> m14_113  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m14_113 -> m14_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_112 -> m14_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_114 -> m14_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_115 -> m14_129  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_116 -> m14_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_213 -> m14_218  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m14_218 -> m14_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_215 -> m14_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_215 -> m14_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_33 -> m14_38  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_34 -> m14_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_21 -> m14_29  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_22 -> m14_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_420 -> m14_422  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_82 -> m14_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_83 -> m14_90  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_84 -> m14_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_348 -> m14_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_349 -> m14_357  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_350 -> m14_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_93 -> m14_97  [color=darkseagreen4, key=1, label=filter, style=dashed];
m14_94 -> m14_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_97 -> m14_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_95 -> m14_103  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_96 -> m14_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_426 -> m14_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_129  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_150  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_196  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_197  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_245  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_238  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_256  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_258  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_279  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_288  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_299  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_302  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_317  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_322  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_325  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_338  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_357  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_362  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_374  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_377  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_380  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_387  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_396  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_402  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_408  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_414  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_426 -> m14_421  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", style=dashed];
m14_427 -> m14_29  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_428 -> m14_38  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_429 -> m14_90  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_430 -> m14_103  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_431 -> m14_129  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_432 -> m14_150  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_433 -> m14_245  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_434 -> m14_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_435 -> m14_270  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_435 -> m14_273  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_436 -> m14_288  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_437 -> m14_291  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_437 -> m14_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_438 -> m14_308  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_438 -> m14_311  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_439 -> m14_317  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_440 -> m14_338  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_441 -> m14_357  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_442 -> m14_374  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_443 -> m14_387  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_444 -> m14_402  [color=darkseagreen4, key=1, label=process, style=dashed];
m14_445 -> m14_414  [color=darkseagreen4, key=1, label=process, style=dashed];
m15_15 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_0 -> m15_7  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m15_10 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_18 -> m15_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m15_18 -> m15_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m15_26 -> m15_31  [color=green, key=1, label=jobId, style=dashed];
m15_29 -> m15_31  [color=green, key=1, label=stateMachine, style=dashed];
m15_41 -> m15_7  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m15_41 -> m15_11  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m15_41 -> m15_12  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m15_41 -> m15_13  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m15_41 -> m15_15  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m15_41 -> m15_16  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m16_0 -> m16_3  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m16_18 -> m16_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m16_18 -> m16_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m18_118 -> m18_120  [color=darkseagreen4, key=1, label=table7, style=dashed];
m18_192 -> m18_194  [color=darkseagreen4, key=1, label=table11, style=dashed];
m18_192 -> m18_195  [color=darkseagreen4, key=1, label=table11, style=dashed];
m18_84 -> m18_86  [color=darkseagreen4, key=1, label=table4, style=dashed];
m18_72 -> m18_74  [color=darkseagreen4, key=1, label=table3, style=dashed];
m18_72 -> m18_75  [color=darkseagreen4, key=1, label=table3, style=dashed];
m18_95 -> m18_97  [color=darkseagreen4, key=1, label=table5, style=dashed];
m18_148 -> m18_150  [color=darkseagreen4, key=1, label=table9, style=dashed];
m18_148 -> m18_151  [color=darkseagreen4, key=1, label=table9, style=dashed];
m18_148 -> m18_152  [color=darkseagreen4, key=1, label=table9, style=dashed];
m18_40 -> m18_42  [color=darkseagreen4, key=1, label=table1, style=dashed];
m18_40 -> m18_43  [color=darkseagreen4, key=1, label=table1, style=dashed];
m18_163 -> m18_165  [color=darkseagreen4, key=1, label=table10, style=dashed];
m18_163 -> m18_166  [color=darkseagreen4, key=1, label=table10, style=dashed];
m18_163 -> m18_167  [color=darkseagreen4, key=1, label=table10, style=dashed];
m18_163 -> m18_168  [color=darkseagreen4, key=1, label=table10, style=dashed];
m18_163 -> m18_169  [color=darkseagreen4, key=1, label=table10, style=dashed];
m18_60 -> m18_62  [color=darkseagreen4, key=1, label=table2, style=dashed];
m18_60 -> m18_63  [color=darkseagreen4, key=1, label=table2, style=dashed];
m18_60 -> m18_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m18_60 -> m18_65  [color=darkseagreen4, key=1, label=table2, style=dashed];
m18_134 -> m18_136  [color=darkseagreen4, key=1, label=table8, style=dashed];
m18_134 -> m18_137  [color=darkseagreen4, key=1, label=table8, style=dashed];
m18_134 -> m18_138  [color=darkseagreen4, key=1, label=table8, style=dashed];
m18_107 -> m18_109  [color=darkseagreen4, key=1, label=table6, style=dashed];
m18_208 -> m18_210  [color=darkseagreen4, key=1, label=table12, style=dashed];
m18_208 -> m18_211  [color=darkseagreen4, key=1, label=table12, style=dashed];
m18_208 -> m18_212  [color=darkseagreen4, key=1, label=table12, style=dashed];
m18_216 -> m18_36  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_71  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_83  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_93  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_101  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_45  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_55  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_56  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_78  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_89  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_94  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_105  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_106  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_116  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_117  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_123  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_127  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_128  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_139  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_143  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_153  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_158  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_171  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_175  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_176  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_182  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_186  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_187  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_197  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_201  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_202  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m18_216 -> m18_214  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m21_15 -> m21_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_30 -> m21_32  [color=darkseagreen4, key=1, label=processingJob, style=dashed];
m21_38 -> m21_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_5 -> m21_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_23 -> m21_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_48 -> m21_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m21_48 -> m21_27  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m21_48 -> m21_38  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m21_48 -> m21_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m22_0 -> m22_7  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m22_0 -> m22_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_0 -> m22_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_0 -> m22_3  [color=darkseagreen4, key=1, label="Hangfire.States.IStateChangeProcess", style=dashed];
m22_9 -> m22_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m22_17 -> m22_20  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m22_26 -> m22_29  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m22_26 -> m22_31  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m22_26 -> m22_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_26 -> m22_37  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m22_26 -> m22_42  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m22_29 -> m22_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_29 -> m22_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_29 -> m22_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_29 -> m22_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_29 -> m22_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_29 -> m22_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_29 -> m22_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_29 -> m22_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m22_34 -> m22_37  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m22_34 -> m22_40  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m22_39 -> m22_47  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m22_44 -> m22_47  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m22_56 -> m22_33  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m23_119 -> m23_122  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m23_97 -> m23_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_49 -> m23_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m23_49 -> m23_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m23_49 -> m23_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m23_56 -> m23_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m23_58 -> m23_63  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m23_0 -> m23_3  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m23_11 -> m23_15  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m23_22 -> m23_25  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m23_22 -> m23_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m23_32 -> m23_38  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m23_32 -> m23_39  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m23_35 -> m23_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m23_31 -> m23_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m23_31 -> m23_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m23_29 -> m23_34  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m23_30 -> m23_34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m23_36 -> m23_36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m23_139 -> m23_139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m23_104 -> m23_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_90 -> m23_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_111 -> m23_114  [color=darkseagreen4, key=1, label=double, style=dashed];
m23_19 -> m23_3  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m23_19 -> m23_4  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachineFactory", style=dashed];
m23_144 -> m23_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m23_144 -> m23_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m23_144 -> m23_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m23_144 -> m23_63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_0 -> m24_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_29 -> m24_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m24_29 -> m24_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m24_29 -> m24_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m25_6 -> m25_9  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m25_7 -> m25_9  [color=darkseagreen4, key=1, label=connection, style=dashed];
m25_8 -> m25_10  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m25_8 -> m25_12  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m25_8 -> m25_14  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m25_35 -> m25_37  [color=darkseagreen4, key=1, label=duration, style=dashed];
m25_59 -> m25_9  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m25_59 -> m25_23  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_0 -> m26_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_16 -> m26_13  [color=darkseagreen4, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
}
