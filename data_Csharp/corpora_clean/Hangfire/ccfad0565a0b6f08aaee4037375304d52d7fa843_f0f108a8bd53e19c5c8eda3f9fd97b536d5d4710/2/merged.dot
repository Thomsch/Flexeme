digraph  {
n45 [label="Hangfire.BackgroundJobClient", span=""];
n0 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()"];
n1 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()"];
n2 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)"];
n3 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)"];
n4 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)"];
n5 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)"];
n6 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n7 [label="storage == null", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n9 [label="stateMachineFactory == null", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n11 [label="process == null", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n13 [label="_storage = storage", span="74-74", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n14 [label="_stateMachineFactory = stateMachineFactory", span="75-75", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n15 [label="_process = process", span="76-76", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n8 [label="throw new ArgumentNullException(''storage'');", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n12 [label="throw new ArgumentNullException(''process'');", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n16 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
n17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n18 [label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n19 [label="job == null", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n21 [label="state == null", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n24 [label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n20 [label="throw new ArgumentNullException(''job'');", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n22 [label="throw new ArgumentNullException(''state'');", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n23 [label="var connection = _storage.GetConnection()", span="87-87", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n30 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()"];
n25 [label="_process.Run(context)", span="90-90", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", color=red, community=0];
n31 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)"];
n26 [label="return context.JobId;", span="92-92", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", color=red, community=0];
n32 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)"];
n27 [label=Exception, span="95-95", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="97-97", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n29 [label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
n33 [label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)"];
n34 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n35 [label="jobId == null", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n37 [label="state == null", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n41 [label="return stateMachine.TryToChangeState(jobId, state, fromState != null ? new[] { fromState } : null);", span="110-110", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", color=red, community=0];
n36 [label="throw new ArgumentNullException(''jobId'');", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n38 [label="throw new ArgumentNullException(''state'');", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n39 [label="var connection = _storage.GetConnection()", span="107-107", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n40 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="109-109", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n43 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)"];
n42 [label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
n44 [label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])"];
m0_2 [label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="BackgroundJobClientFacts.cs"];
m0_3 [label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="BackgroundJobClientFacts.cs"];
m0_0 [label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="BackgroundJobClientFacts.cs"];
m0_1 [label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="BackgroundJobClientFacts.cs"];
m1_37 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="101-101", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_38 [label="_bootstrapSupervisor.Dispose()", span="103-103", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_39 [label="Logger.Info(''Hangfire Server stopped.'')", span="104-104", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_40 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="101-101", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_57 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs"];
m1_4 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs"];
m1_5 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs"];
m1_19 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs"];
m1_0 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs"];
m1_1 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs"];
m1_58 [label="Entry Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_63 [label="var stateMachineFactory = new StateMachineFactory(_storage)", span="141-141", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_65 [label="yield return new WorkerManager(sharedWorkerContext, _options.WorkerCount);", span="150-150", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_66 [label="yield return new ServerHeartbeat(_storage, _serverId);", span="151-151", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_67 [label="yield return new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval);", span="152-152", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_68 [label="yield return new ServerWatchdog(_storage, _options.ServerWatchdogOptions);", span="153-153", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_69 [label="yield return new RecurringJobScheduler(\r\n                _storage, \r\n                new BackgroundJobClient(_storage, stateMachineFactory),\r\n                new ScheduleInstantFactory(),\r\n                new EveryMinuteThrottler());", span="155-159", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_64 [label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="142-148", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", color=red, community=0, file="BackgroundJobServer.cs"];
m1_70 [label="Exit Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_21 [label="Entry Hangfire.BackgroundJobServer.Start()", span="85-85", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_22 [label="Logger.Info(''Starting Hangfire Server...'')", span="87-87", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_23 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="88-88", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_24 [label="_storage.WriteOptionsToLog(Logger)", span="90-90", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_25 [label="_options.WriteToLog(Logger)", span="91-91", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_26 [label="_bootstrapSupervisor.Start()", span="93-93", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_27 [label="Exit Hangfire.BackgroundJobServer.Start()", span="85-85", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_75 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", span="28-28", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", file="BackgroundJobServer.cs"];
m1_71 [label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_81 [label="Entry Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", span="21-21", cluster="Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", file="BackgroundJobServer.cs"];
m1_49 [label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", span="41-41", cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", file="BackgroundJobServer.cs"];
m1_48 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobServer.cs"];
m1_18 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs"];
m1_47 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs"];
m1_60 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="BackgroundJobServer.cs"];
m1_85 [label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", span="36-36", cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_86 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_50 [label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="BackgroundJobServer.cs"];
m1_30 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs"];
m1_62 [label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs"];
m1_46 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18", cluster="Hangfire.Server.ServerContext.ServerContext()", file="BackgroundJobServer.cs"];
m1_79 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs"];
m1_20 [label="Entry Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_42 [label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="109-113", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_43 [label="var bootstrapper = new ServerBootstrapper(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerSupervisor>(GetSupervisors))", span="115-119", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_44 [label="return new ServerSupervisor(\r\n                bootstrapper, \r\n                new ServerSupervisorOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="121-126", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_45 [label="Exit Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_31 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs"];
m1_78 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs"];
m1_74 [label="Entry Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", span="27-27", cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="BackgroundJobServer.cs"];
m1_77 [label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34", cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="BackgroundJobServer.cs"];
m1_80 [label="Entry Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", span="21-21", cluster="Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", file="BackgroundJobServer.cs"];
m1_29 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServer.cs"];
m1_82 [label="Entry Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_83 [label="return new ServerSupervisor(new AutomaticRetryServerComponentWrapper(component));", span="164-164", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_84 [label="Exit Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_33 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="96-96", cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_34 [label="_bootstrapSupervisor.Stop()", span="98-98", cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_35 [label="Exit Hangfire.BackgroundJobServer.Stop()", span="96-96", cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_17 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs"];
m1_72 [label="Entry Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", span="23-23", cluster="Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs"];
m1_32 [label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22", cluster="Hangfire.Server.IServerSupervisor.Start()", file="BackgroundJobServer.cs"];
m1_59 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServer.cs"];
m1_28 [label="Entry Hangfire.Logging.ILog.Info(string)", span="201-201", cluster="Hangfire.Logging.ILog.Info(string)", file="BackgroundJobServer.cs"];
m1_51 [label="Entry Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_52 [label="var supervisors = new List<IServerSupervisor>()", span="131-131", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_53 [label="supervisors.AddRange(GetCommonComponents().Select(CreateSupervisor))", span="133-133", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_54 [label="supervisors.AddRange(_storage.GetComponents().Select(CreateSupervisor))", span="134-134", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_55 [label="return new ServerSupervisorCollection(supervisors);", span="136-136", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_56 [label="Exit Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_76 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="BackgroundJobServer.cs"];
m1_36 [label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23", cluster="Hangfire.Server.IServerSupervisor.Stop()", file="BackgroundJobServer.cs"];
m1_61 [label="Entry Hangfire.JobStorage.GetComponents()", span="58-58", cluster="Hangfire.JobStorage.GetComponents()", file="BackgroundJobServer.cs"];
m1_73 [label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28", cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="BackgroundJobServer.cs"];
m1_6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_7 [label="options == null", span="73-73", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_9 [label="storage == null", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_11 [label="_options = options", span="76-76", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_12 [label="_storage = storage", span="77-77", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_8 [label="throw new ArgumentNullException(''options'');", span="73-73", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_10 [label="throw new ArgumentNullException(''storage'');", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_13 [label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_14 [label="_bootstrapSupervisor = GetBootstrapSupervisor()", span="82-82", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_15 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_41 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m1_2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_87 [label="Hangfire.BackgroundJobServer", span="", file="BackgroundJobServer.cs"];
m2_22 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs"];
m2_46 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="CreateContext.cs"];
m2_45 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="CreateContext.cs"];
m2_38 [label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m2_39 [label="String.IsNullOrWhiteSpace(name)", span="131-131", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m2_41 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m2_43 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m2_40 [label="throw new ArgumentNullException(''name'');", span="131-131", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m2_42 [label=Exception, span="139-139", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m2_44 [label="Exit Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m2_0 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs"];
m2_1 [label="Items = context.Items", span="40-40", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs"];
m2_2 [label="JobId = context.JobId", span="41-41", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs"];
m2_3 [label="_jobWasCreated = context._jobWasCreated", span="42-42", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs"];
m2_4 [label="_parameters = context._parameters", span="43-43", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs"];
m2_5 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs"];
m2_53 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="CreateContext.cs"];
m2_33 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="CreateContext.cs"];
m2_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="CreateContext.cs"];
m2_35 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="CreateContext.cs"];
m2_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CreateContext.cs"];
m2_54 [label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="CreateContext.cs"];
m2_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CreateContext.cs"];
m2_48 [label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m2_49 [label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149", cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m2_50 [label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151", cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m2_51 [label="_jobWasCreated = true", span="152-152", cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m2_52 [label="Exit Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m2_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CreateContext.cs"];
m2_23 [label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_24 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_28 [label="var serializedValue = JobHelper.ToJson(value)", span="105-105", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_29 [label="!_parameters.ContainsKey(name)", span="107-107", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_30 [label="_parameters.Add(name, serializedValue)", span="109-109", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_31 [label="_parameters[name] = serializedValue", span="113-113", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_25 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_26 [label=_jobWasCreated, span="100-100", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_32 [label="Exit Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m2_6 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_7 [label="connection == null", span="52-52", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_9 [label="stateMachineFactory == null", span="53-53", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_11 [label="job == null", span="54-54", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_13 [label="initialState == null", span="55-55", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_15 [label="_stateMachineFactory = stateMachineFactory", span="57-57", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_16 [label="Connection = connection", span="59-59", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_17 [label="Job = job", span="60-60", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_18 [label="InitialState = initialState", span="61-61", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_8 [label="throw new ArgumentNullException(''connection'');", span="52-52", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_12 [label="throw new ArgumentNullException(''job'');", span="54-54", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_14 [label="throw new ArgumentNullException(''initialState'');", span="55-55", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_19 [label="Items = new Dictionary<string, object>()", span="63-63", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_20 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m2_55 [label="Hangfire.Client.CreateContext", span="", file="CreateContext.cs"];
m4_0 [label="Entry NCrontab.CrontabException.CrontabException()", span="27-27", cluster="NCrontab.CrontabException.CrontabException()", file="ElectStateContext.cs"];
m4_1 [label="Exit NCrontab.CrontabException.CrontabException()", span="27-27", cluster="NCrontab.CrontabException.CrontabException()", file="ElectStateContext.cs"];
m4_4 [label="Entry NCrontab.CrontabException.CrontabException(string, System.Exception)", span="35-35", cluster="NCrontab.CrontabException.CrontabException(string, System.Exception)", file="ElectStateContext.cs"];
m4_5 [label="Exit NCrontab.CrontabException.CrontabException(string, System.Exception)", span="35-35", cluster="NCrontab.CrontabException.CrontabException(string, System.Exception)", file="ElectStateContext.cs"];
m4_2 [label="Entry NCrontab.CrontabException.CrontabException(string)", span="31-31", cluster="NCrontab.CrontabException.CrontabException(string)", file="ElectStateContext.cs"];
m4_3 [label="Exit NCrontab.CrontabException.CrontabException(string)", span="31-31", cluster="NCrontab.CrontabException.CrontabException(string)", file="ElectStateContext.cs"];
m5_51 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="86-86", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_52 [label="var context = CreateContext()", span="88-88", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_53 [label="var state = new Mock<IState>()", span="89-89", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_54 [label="context.CandidateState = state.Object", span="91-91", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_55 [label="Assert.Contains(_candidateState.Object, context.TraversedStates)", span="93-93", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_56 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="86-86", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_8 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_36 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ElectStateContextFacts.cs"];
m5_0 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="16-16", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_1 [label="_connection = new Mock<IStorageConnection>()", span="18-18", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_2 [label="_stateContext = new StateContextMock()", span="20-20", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_3 [label="_stateContext.JobIdValue = JobId", span="21-21", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_5 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="16-16", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_14 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_70 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="108-108", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_71 [label="var context = CreateContext()", span="110-110", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_72 [label="context.SetJobParameter(''Name'', (string)null)", span="112-112", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_73 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="114-115", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_74 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="108-108", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_63 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="74-74", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContextFacts.cs"];
m5_58 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="97-97", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_59 [label="var context = CreateContext()", span="99-99", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_60 [label="context.SetJobParameter(''Name'', ''Value'')", span="101-101", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_61 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="103-104", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_62 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="97-97", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_9 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m5_4 [label="_candidateState = new Mock<IState>()", span="23-23", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_13 [label="Exit HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="21-21", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs"];
m5_91 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="131-131", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_92 [label="var context = CreateContext()", span="133-133", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_93 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="134-135", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_94 [label="var value = context.GetJobParameter<int>(''Name'')", span="137-137", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_95 [label="Assert.Equal(default(int), value)", span="139-139", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_96 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="131-131", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_86 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="79-79", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContextFacts.cs"];
m5_38 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="67-67", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_39 [label="var context = CreateContext()", span="69-69", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_40 [label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="71-71", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_41 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="67-67", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_78 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="119-119", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_79 [label="var context = CreateContext()", span="121-121", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_80 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="122-123", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_81 [label="var value = context.GetJobParameter<string>(''Name'')", span="125-125", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_82 [label="Assert.Equal(''Value'', value)", span="127-127", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_83 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="119-119", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_10 [label="Entry HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="21-21", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs"];
m5_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingJob(JobId, null))", span="23-24", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs"];
m5_12 [label="Assert.Equal(''queue'', exception.ParamName)", span="26-26", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ElectStateContextFacts.cs"];
m5_90 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ElectStateContextFacts.cs"];
m5_84 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ElectStateContextFacts.cs"];
m5_68 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs"];
m5_17 [label="Exit lambda expression", span="30-34", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    null))", span="42-47", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_18 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs"];
m5_19 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="40-40", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_21 [label="Assert.Equal(''candidateState'', exception.ParamName)", span="49-49", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_15 [label="new ProcessingJob(JobId, null)", span="24-24", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_16 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_23 [label="Entry lambda expression", span="43-47", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_24 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    null)", span="43-47", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_25 [label="Exit lambda expression", span="43-47", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_43 [label="context.CandidateState = null", span="71-71", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_42 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_44 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_65 [label="Entry lambda expression", span="103-104", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_66 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="103-104", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_67 [label="Exit lambda expression", span="103-104", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_75 [label="Entry lambda expression", span="114-115", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_76 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="114-115", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_77 [label="Exit lambda expression", span="114-115", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_87 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_88 [label="x.GetJobParameter(''1'', ''Name'')", span="122-122", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_89 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_97 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_98 [label="x.GetJobParameter(''1'', ''Value'')", span="134-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_99 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_6 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextFacts.cs"];
m5_7 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_57 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ElectStateContextFacts.cs"];
m5_64 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ElectStateContextFacts.cs"];
m5_45 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="75-75", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_46 [label="var context = CreateContext()", span="77-77", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_47 [label="var newState = new Mock<IState>()", span="78-78", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_48 [label="context.CandidateState = newState.Object", span="80-80", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_49 [label="Assert.Same(newState.Object, context.CandidateState)", span="82-82", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_50 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="75-75", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_22 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="40-40", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_26 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="53-53", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_27 [label="var context = CreateContext()", span="55-55", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_28 [label="Assert.Equal(_stateContext.Object.JobId, context.JobId)", span="57-57", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_29 [label="Assert.Equal(_stateContext.Object.Job, context.Job)", span="58-58", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_30 [label="Assert.Same(_candidateState.Object, context.CandidateState)", span="60-60", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_31 [label="Assert.Equal(''State'', context.CurrentState)", span="61-61", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_32 [label="Assert.Same(_connection.Object, context.Connection)", span="62-62", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=red, community=0, file="ElectStateContextFacts.cs"];
m5_33 [label="Assert.Empty(context.TraversedStates)", span="63-63", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_34 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="53-53", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_37 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="ElectStateContextFacts.cs"];
m5_85 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ElectStateContextFacts.cs"];
m5_35 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="142-142", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_100 [label="return new ElectStateContext(\r\n                _stateContext.Object,\r\n                _connection.Object,\r\n                _candidateState.Object,\r\n                ''State'');", span="144-148", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_101 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="142-142", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_69 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs"];
m5_102 [label="Hangfire.Core.Tests.States.ElectStateContextFacts", span="", file="ElectStateContextFacts.cs"];
m5_103 [label=context, span="", file="ElectStateContextFacts.cs"];
m6_0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_1 [label="Debug.Assert(redis != null)", span="26-26", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_3 [label="Debug.Assert(type != null)", span="28-28", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_5 [label="Debug.Assert(state != null)", span="30-30", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_7 [label="JobId = jobId", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_9 [label="State = state", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_10 [label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_11 [label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="39-39", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_12 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_2 [label="Debug.Assert(jobId != null)", span="27-27", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_4 [label="Debug.Assert(arguments != null)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_6 [label="_stateMachine = new StateMachine(redis)", span="32-32", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs", color=green, community=0];
m6_8 [label="Type = type", span="35-35", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_13 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="ElectStateContextMock.cs"];
m6_30 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="ElectStateContextMock.cs"];
m6_24 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="44-44", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs"];
m6_25 [label="String.IsNullOrEmpty(name)", span="46-46", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs"];
m6_27 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="48-50", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs"];
m6_26 [label="throw new ArgumentNullException(''name'');", span="46-46", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs"];
m6_28 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="44-44", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ElectStateContextMock.cs"];
m6_21 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ElectStateContextMock.cs"];
m6_34 [label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ElectStateContextMock.cs"];
m6_31 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="53-53", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ElectStateContextMock.cs"];
m6_32 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="103-103", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ElectStateContextMock.cs"];
m6_33 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ElectStateContextMock.cs"];
m6_22 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="ElectStateContextMock.cs"];
m6_29 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ElectStateContextMock.cs"];
m6_23 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ElectStateContextMock.cs"];
m6_16 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs"];
m6_17 [label="String.IsNullOrEmpty(name)", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs"];
m6_19 [label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="41-41", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs"];
m6_18 [label="throw new ArgumentNullException(''name'');", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs"];
m6_20 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ElectStateContextMock.cs"];
m6_15 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="ElectStateContextMock.cs"];
m6_35 [label="HangFire.Client.ClientJobDescriptor", span="", file="ElectStateContextMock.cs"];
m7_1 [label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="IJobCreationProcess.cs"];
m8_0 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="IStateChangeProcess.cs"];
m8_1 [label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="IStateChangeProcess.cs"];
m9_3 [label="Exit Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m9_0 [label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs"];
m9_1 [label="Exit Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs"];
m10_1 [label="Exit Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs"];
m11_28 [label="Entry Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", file="JobCreationProcess.cs"];
m11_32 [label="return new JobFilterInfo(_getFiltersThunk(job));", span="69-69", cluster="Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", file="JobCreationProcess.cs"];
m11_33 [label="Exit Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Client.JobCreationProcess.GetFilters(Hangfire.Common.Job)", file="JobCreationProcess.cs"];
m11_42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreationProcess.cs"];
m11_3 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="35-35", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs"];
m11_0 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="27-27", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs"];
m11_1 [label="Instance = new JobCreationProcess()", span="29-29", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", color=red, community=0, file="JobCreationProcess.cs"];
m11_2 [label="Exit Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="27-27", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs"];
m11_4 [label="Exit Hangfire.Client.JobCreationProcess.JobCreationProcess()", span="35-35", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess()", file="JobCreationProcess.cs"];
m11_35 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JobCreationProcess.cs"];
m11_75 [label="Entry Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", span="33-33", cluster="Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", file="JobCreationProcess.cs"];
m11_44 [label="Entry Unk.thunk", span="", cluster="Unk.thunk", file="JobCreationProcess.cs"];
m11_31 [label="Entry Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="129-129", cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs"];
m11_76 [label="filters.Reverse()", span="132-132", cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs"];
m11_77 [label="filter.OnClientException(context)", span="134-134", cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs"];
m11_78 [label="Exit Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="129-129", cluster="Hangfire.Client.JobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="JobCreationProcess.cs"];
m11_41 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_43 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="JobCreationProcess.cs"];
m11_73 [label="Entry Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", span="27-27", cluster="Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", file="JobCreationProcess.cs"];
m11_16 [label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_17 [label="context == null", span="47-47", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_19 [label="var filterInfo = GetFilters(context.Job)", span="49-49", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_20 [label="CreateWithFilters(context, filterInfo.ClientFilters)", span="53-53", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_22 [label="var exceptionContext = new ClientExceptionContext(context, ex)", span="57-57", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_18 [label="throw new ArgumentNullException(''context'');", span="47-47", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_23 [label="InvokeExceptionFilters(exceptionContext, filterInfo.ClientExceptionFilters)", span="59-59", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_21 [label=Exception, span="55-55", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_24 [label="!exceptionContext.ExceptionHandled", span="60-60", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_25 [label="throw;", span="62-62", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_26 [label="Exit Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcess.cs"];
m11_50 [label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", file="JobCreationProcess.cs"];
m11_79 [label="Entry Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", span="27-27", cluster="Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", file="JobCreationProcess.cs"];
m11_5 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcess.cs"];
m11_6 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcess.cs"];
m11_7 [label="Exit Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcess.cs"];
m11_53 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_9 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_8 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_10 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_12 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_13 [label="new JobFilter(f, JobFilterScope.Type, null)", span="42-42", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_14 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_46 [label="context.CreateJob()", span="79-79", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_47 [label="return new CreatedContext(context, false, null);", span="80-80", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_54 [label="InvokeClientFilter(filter, preContext, next)", span="84-84", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_51 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_45 [label="Entry lambda expression", span="77-81", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_48 [label="Exit lambda expression", span="77-81", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_52 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_55 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcess.cs"];
m11_49 [label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="JobCreationProcess.cs"];
m11_29 [label="Entry Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="72-72", cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs"];
m11_36 [label="var preContext = new CreatingContext(context)", span="76-76", cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs"];
m11_37 [label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                context.CreateJob();\r\n                return new CreatedContext(context, false, null);\r\n            }", span="77-81", cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs"];
m11_38 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="83-84", cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs"];
m11_39 [label="thunk()", span="86-86", cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs"];
m11_40 [label="Exit Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="72-72", cluster="Hangfire.Client.JobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="JobCreationProcess.cs"];
m11_56 [label="Entry Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="89-89", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_57 [label="filter.OnCreating(preContext)", span="94-94", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_58 [label="preContext.Canceled", span="95-95", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_59 [label="return new CreatedContext(\r\n                    preContext, true, null);", span="97-98", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_62 [label="postContext = continuation()", span="105-105", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_65 [label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="110-111", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_66 [label="filter.OnCreated(postContext)", span="113-113", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_70 [label="filter.OnCreated(postContext)", span="123-123", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_60 [label="var wasError = false", span="101-101", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_61 [label="CreatedContext postContext", span="102-102", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_63 [label=Exception, span="107-107", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_69 [label="!wasError", span="121-121", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_64 [label="wasError = true", span="109-109", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_67 [label="!postContext.ExceptionHandled", span="115-115", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_71 [label="return postContext;", span="126-126", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_68 [label="throw;", span="117-117", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_72 [label="Exit Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="89-89", cluster="Hangfire.Client.JobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="JobCreationProcess.cs"];
m11_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobCreationProcess.cs"];
m11_30 [label="Entry Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", span="26-26", cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="JobCreationProcess.cs"];
m11_34 [label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40", cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobCreationProcess.cs"];
m11_15 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="JobCreationProcess.cs"];
m11_74 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JobCreationProcess.cs"];
m11_80 [label="Hangfire.Client.JobCreationProcess", span="", file="JobCreationProcess.cs"];
m11_81 [label="System.Collections.Generic.IEnumerable<object>", span="", file="JobCreationProcess.cs"];
m11_82 [label="Hangfire.Client.CreateContext", span="", file="JobCreationProcess.cs"];
m11_83 [label=preContext, span="", file="JobCreationProcess.cs"];
m11_84 [label="System.Func<Hangfire.Client.CreatedContext>", span="", file="JobCreationProcess.cs"];
m11_85 [label="Hangfire.Client.IClientFilter", span="", file="JobCreationProcess.cs"];
m12_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="JobCreationProcessFacts.cs"];
m12_12 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobCreationProcessFacts.cs"];
m12_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m12_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="JobCreationProcessFacts.cs"];
m12_10 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobCreationProcessFacts.cs"];
m12_37 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_27 [label="process.Run(null)", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_17 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m12_327 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m12_29 [label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobCreationProcessFacts.cs"];
m12_25 [label="Exit HangFire.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="JobCreationProcessFacts.cs"];
m12_185 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_191 [label="var process = CreateProcess()", span="192-192", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_192 [label="process.Run(_context.Object)", span="195-195", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_194 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m12_13 [label="Entry HangFire.JobHelper.ValidateQueueName(string)", span="71-71", cluster="HangFire.JobHelper.ValidateQueueName(string)", file="JobCreationProcessFacts.cs"];
m12_164 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_168 [label="var process = CreateProcess()", span="169-169", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_169 [label="process.Run(_context.Object)", span="172-172", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_172 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m12_298 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_305 [label="var process = CreateProcess()", span="299-299", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_308 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m12_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobCreationProcessFacts.cs"];
m12_30 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m12_31 [label="var process = CreateProcess()", span="43-43", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", color=green, community=0, file="JobCreationProcessFacts.cs"];
m12_32 [label="process.Run(_context.Object)", span="45-45", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m12_35 [label="return FromTimestamp(long.Parse(value));", span="58-58", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobCreationProcessFacts.cs", color=green, community=0];
m12_43 [label="var process = CreateProcess()", span="54-54", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m12_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m12_45 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m12_97 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_102 [label="var process = CreateProcess()", span="111-111", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_104 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m12_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobCreationProcessFacts.cs"];
m12_9 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobCreationProcessFacts.cs"];
m12_22 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m12_23 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m12_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobCreationProcessFacts.cs"];
m12_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="JobCreationProcessFacts.cs"];
m12_0 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m12_3 [label="var state = new Mock<IState>()", span="21-21", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="JobCreationProcessFacts.cs"];
m12_1 [label="var connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m12_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m12_2 [label="var job = Job.FromExpression(() => TestMethod())", span="20-20", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m12_5 [label="_filters = new List<object>()", span="24-24", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m12_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m12_7 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m12_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", color=red, community=0, file="JobCreationProcessFacts.cs"];
m12_329 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m12_140 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_149 [label="var process = CreateProcess()", span="151-151", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_150 [label="process.Run(_context.Object)", span="154-154", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_151 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m12_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="JobCreationProcessFacts.cs"];
m12_274 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_280 [label="var process = CreateProcess()", span="278-278", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_282 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m12_53 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_57 [label="var process = CreateProcess()", span="67-67", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_60 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m12_228 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_233 [label="var process = CreateProcess()", span="232-232", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_236 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_251 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_258 [label="var process = CreateProcess()", span="256-256", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_261 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m12_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_41 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m12_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobCreationProcessFacts.cs"];
m12_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m12_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobCreationProcessFacts.cs"];
m12_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobCreationProcessFacts.cs"];
m12_207 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_211 [label="var process = CreateProcess()", span="211-211", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_215 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m12_46 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="JobCreationProcessFacts.cs"];
m12_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobCreationProcessFacts.cs"];
m12_73 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_81 [label="var process = CreateProcess()", span="91-91", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_83 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m12_330 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcessFacts.cs"];
m12_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m12_36 [label="Exit HangFire.JobHelper.FromStringTimestamp(string)", span="56-56", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobCreationProcessFacts.cs"];
m12_34 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="56-56", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobCreationProcessFacts.cs"];
m12_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="JobCreationProcessFacts.cs"];
m12_18 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m12_19 [label="var process = CreateProcess()", span="32-32", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m12_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m12_21 [label="Assert.Equal(''context'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m12_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobCreationProcessFacts.cs"];
m12_119 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_125 [label="var process = CreateProcess()", span="128-128", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_126 [label="process.Run(_context.Object)", span="131-131", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_127 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m12_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="JobCreationProcessFacts.cs"];
m12_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobCreationProcessFacts.cs"];
m12_331 [label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span="", file="JobCreationProcessFacts.cs"];
m12_332 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_333 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_334 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_335 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_336 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_337 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_338 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_339 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m12_340 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_341 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m12_342 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m12_343 [label=process, span="", file="JobCreationProcessFacts.cs"];
m12_344 [label=process, span="", file="JobCreationProcessFacts.cs"];
m13_12 [label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="JobPerformanceProcess.cs"];
m13_5 [label="return;", span="51-51", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="49-50", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs"];
m13_7 [label="retryCount < Attempts", span="56-56", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_0 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobPerformanceProcess.cs"];
m13_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobPerformanceProcess.cs", color=green, community=0];
m13_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', ''\r\n  As a user, I expect that all defined client filters are executing\r\n  using th'' +\r\n                    ''e following rules, when I create a job.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobPerformanceProcess.cs"];
m13_16 [label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="52-52", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs"];
m13_3 [label="Entry HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="46-46", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_4 [label="context.CandidateState.StateName != FailedState.Name", span="48-48", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_6 [label="var retryCount = context.GetJobParameter<int>(''RetryCount'')", span="54-54", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_17 [label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs"];
m13_14 [label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="JobPerformanceProcess.cs"];
m13_23 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="JobPerformanceProcess.cs"];
m13_21 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="JobPerformanceProcess.cs"];
m13_24 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="JobPerformanceProcess.cs"];
m13_13 [label="Entry HangFire.Filters.RetryAttribute.SecondsToDelay(long)", span="72-72", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs"];
m13_18 [label="var random = new Random()", span="74-74", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs"];
m13_19 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="75-76", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs"];
m13_20 [label="Exit HangFire.Filters.RetryAttribute.SecondsToDelay(long)", span="72-72", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="JobPerformanceProcess.cs"];
m13_8 [label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="58-58", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_22 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="JobPerformanceProcess.cs"];
m13_9 [label="context.SetJobParameter(''RetryCount'', retryCount + 1)", span="60-60", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_10 [label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryCount + 1, Attempts)\r\n                }", span="64-67", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_11 [label="Exit HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="46-46", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobPerformanceProcess.cs"];
m13_25 [label="HangFire.Filters.RetryAttribute", span="", file="JobPerformanceProcess.cs"];
m14_376 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="413-413", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs"];
m14_377 [label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<OperationCanceledException>()", span="416-418", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs"];
m14_378 [label="var filter = CreateFilter<IServerExceptionFilter>()", span="420-420", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs"];
m14_379 [label="var process = CreateProcess()", span="421-421", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs"];
m14_381 [label="filter.Verify(\r\n                x => x.OnServerException(It.IsAny<ServerExceptionContext>()),\r\n                Times.Never)", span="428-430", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs"];
m14_380 [label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="424-425", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs"];
m14_382 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="413-413", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="JobPerformanceProcessFacts.cs"];
m14_152 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="180-180", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_153 [label="var filter = CreateFilter<IServerFilter>()", span="183-183", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_154 [label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>()))\r\n                .InSequence()", span="185-186", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_156 [label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>()))\r\n                .InSequence()", span="191-192", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_155 [label="_performer.Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .InSequence()", span="188-189", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_157 [label="var process = CreateProcess()", span="194-194", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_158 [label="process.Run(_context, _performer.Object)", span="197-197", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_159 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="180-180", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_15 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobPerformanceProcessFacts.cs"];
m14_170 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="203-203", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_171 [label="var outerFilter = CreateFilter<IServerFilter>()", span="206-206", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_172 [label="var innerFilter = CreateFilter<IServerFilter>()", span="207-207", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_173 [label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="209-209", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_176 [label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="212-212", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_174 [label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="210-210", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_175 [label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="211-211", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_177 [label="var process = CreateProcess()", span="214-214", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_178 [label="process.Run(_context, _performer.Object)", span="217-217", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_179 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="203-203", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobPerformanceProcessFacts.cs"];
m14_424 [label="Entry Mock<T>.cstr", span="", cluster="Mock<T>.cstr", file="JobPerformanceProcessFacts.cs"];
m14_359 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="392-392", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_360 [label="var filter = CreateFilter<IServerFilter>()", span="395-395", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_361 [label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="396-397", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_362 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<ArgumentNullException>()", span="399-401", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_363 [label="var process = CreateProcess()", span="403-403", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_364 [label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="406-407", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_365 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="409-409", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_366 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="392-392", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_9 [label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="JobPerformanceProcessFacts.cs"];
m14_319 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="352-352", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_320 [label="var outerFilter = CreateFilter<IServerFilter>()", span="355-355", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_321 [label="var innerFilter = CreateFilter<IServerFilter>()", span="356-356", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_326 [label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="371-371", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_322 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="358-360", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_323 [label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="362-363", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_324 [label="var process = CreateProcess()", span="365-365", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_325 [label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="368-368", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_327 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="352-352", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobPerformanceProcessFacts.cs"];
m14_27 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobPerformanceProcessFacts.cs"];
m14_404 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="449-449", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_405 [label="var filter = CreateFilter<IServerFilter>()", span="452-452", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_406 [label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<OperationCanceledException>()", span="453-454", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_407 [label="var process = CreateProcess()", span="456-456", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_408 [label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="459-460", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_409 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="449-449", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_131 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="162-162", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs"];
m14_132 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="165-167", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs"];
m14_133 [label="var filter = CreateFilter<IServerExceptionFilter>()", span="169-169", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs"];
m14_134 [label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="170-171", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs"];
m14_135 [label="var process = CreateProcess()", span="173-173", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs"];
m14_136 [label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="176-176", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs"];
m14_137 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="162-162", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobPerformanceProcessFacts.cs"];
m14_40 [label="Entry Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="41-41", cluster="Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="JobPerformanceProcessFacts.cs"];
m14_296 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="332-332", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_297 [label="var filter = CreateFilter<IServerFilter>()", span="335-335", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_298 [label="var exception = new InvalidOperationException()", span="337-337", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_300 [label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="342-343", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_299 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="338-340", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_301 [label="var process = CreateProcess()", span="345-345", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_302 [label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="348-348", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_303 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="332-332", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_139 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobPerformanceProcessFacts.cs"];
m14_31 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="JobPerformanceProcessFacts.cs"];
m14_67 [label="Entry Unk.OnPerformed", span="", cluster="Unk.OnPerformed", file="JobPerformanceProcessFacts.cs"];
m14_261 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobPerformanceProcessFacts.cs"];
m14_41 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs"];
m14_42 [label="var process = CreateProcess()", span="57-57", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs"];
m14_43 [label="process.Run(_context, _performer.Object)", span="59-59", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs"];
m14_44 [label="_performer.Verify(\r\n                x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()), \r\n                Times.Once)", span="61-63", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs"];
m14_45 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="JobPerformanceProcessFacts.cs"];
m14_71 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="86-86", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs"];
m14_72 [label="var filter = CreateFilter<IServerFilter>()", span="89-89", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs"];
m14_73 [label="var process = CreateProcess()", span="90-90", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs"];
m14_74 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="92-94", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs"];
m14_75 [label="var result = process.Run(_context, _performer.Object)", span="97-97", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs"];
m14_76 [label="Assert.Equal(''Returned value'', result)", span="100-100", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs"];
m14_77 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="86-86", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="JobPerformanceProcessFacts.cs"];
m14_26 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobPerformanceProcessFacts.cs"];
m14_51 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="67-67", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs"];
m14_52 [label="var filter = CreateFilter<IServerFilter>()", span="70-70", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs"];
m14_53 [label="var process = CreateProcess()", span="71-71", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs"];
m14_56 [label="filter.Verify(\r\n                x => x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value'')))", span="81-82", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs"];
m14_54 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="73-75", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs"];
m14_55 [label="process.Run(_context, _performer.Object)", span="78-78", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs"];
m14_57 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="67-67", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="JobPerformanceProcessFacts.cs"];
m14_19 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="463-463", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="JobPerformanceProcessFacts.cs"];
m14_416 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="463-463", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="JobPerformanceProcessFacts.cs"];
m14_108 [label="Entry Unk.OnServerException", span="", cluster="Unk.OnServerException", file="JobPerformanceProcessFacts.cs"];
m14_275 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_276 [label="var outerFilter = CreateFilter<IServerFilter>()", span="314-314", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_277 [label="var innerFilter = CreateFilter<IServerFilter>()", span="315-315", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_282 [label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="328-328", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_278 [label="var exception = new InvalidOperationException()", span="317-317", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_279 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="318-320", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_280 [label="var process = CreateProcess()", span="322-322", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_281 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="325-326", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_283 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_163 [label="Entry Unk.OnPerforming", span="", cluster="Unk.OnPerforming", file="JobPerformanceProcessFacts.cs"];
m14_232 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="264-264", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_233 [label="var filter = CreateFilter<IServerFilter>()", span="267-267", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_234 [label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="269-270", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_239 [label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="285-285", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_235 [label="var process = CreateProcess()", span="272-272", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_236 [label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="275-276", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_237 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="279-279", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_238 [label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="281-283", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_240 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="264-264", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="JobPerformanceProcessFacts.cs"];
m14_118 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobPerformanceProcessFacts.cs"];
m14_425 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobPerformanceProcessFacts.cs"];
m14_14 [label="Entry Mock<IJobPerformer>.cstr", span="", cluster="Mock<IJobPerformer>.cstr", file="JobPerformanceProcessFacts.cs"];
m14_25 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="467-467", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="JobPerformanceProcessFacts.cs"];
m14_417 [label="return new JobPerformanceProcess(_filters);", span="469-469", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", color=red, community=0, file="JobPerformanceProcessFacts.cs"];
m14_418 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="467-467", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="JobPerformanceProcessFacts.cs"];
m14_392 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="434-434", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_393 [label="var filter = CreateFilter<IServerFilter>()", span="437-437", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_394 [label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<OperationCanceledException>()", span="438-439", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_395 [label="var process = CreateProcess()", span="441-441", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_396 [label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="444-445", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_397 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="434-434", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="JobPerformanceProcessFacts.cs"];
m14_253 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="289-289", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_254 [label="var filter = CreateFilter<IServerFilter>()", span="292-292", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_255 [label="var exception = new InvalidOperationException()", span="294-294", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_259 [label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="306-307", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_256 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="295-297", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_257 [label="var process = CreateProcess()", span="299-299", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_258 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="302-303", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_260 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="289-289", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="JobPerformanceProcessFacts.cs"];
m14_0 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_1 [label="var workerContext = new WorkerContextMock()", span="19-19", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_2 [label="var connection = new Mock<IStorageConnection>()", span="21-21", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_5 [label="_context = new PerformContext(\r\n                workerContext.Object, connection.Object, jobId, job, DateTime.UtcNow, new Mock<IJobCancellationToken>().Object)", span="25-26", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_3 [label="string jobId = ''someId''", span="22-22", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_4 [label="var job = Job.FromExpression(() => Method())", span="23-23", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_6 [label="_performer = new Mock<IJobPerformer>()", span="27-27", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_7 [label="_filters = new List<object>()", span="29-29", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_8 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="JobPerformanceProcessFacts.cs"];
m14_59 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobPerformanceProcessFacts.cs"];
m14_262 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobPerformanceProcessFacts.cs"];
m14_192 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="223-223", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_193 [label="var filter = CreateFilter<IServerFilter>()", span="226-226", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_194 [label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="228-229", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_198 [label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="241-241", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_195 [label="var process = CreateProcess()", span="231-231", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_196 [label="process.Run(_context, _performer.Object)", span="234-234", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_197 [label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="237-239", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_199 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="223-223", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="JobPerformanceProcessFacts.cs"];
m14_50 [label="Entry Unk.Perform", span="", cluster="Unk.Perform", file="JobPerformanceProcessFacts.cs"];
m14_419 [label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", span="32-32", cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(System.Collections.Generic.IEnumerable<object>)", file="JobPerformanceProcessFacts.cs"];
m14_413 [label="Entry lambda expression", span="460-460", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_16 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_17 [label="Method()", span="23-23", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_18 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_29 [label="process.Run(null, _performer.Object)", span="38-38", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_28 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_30 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_38 [label="process.Run(_context, null)", span="49-49", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_37 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_39 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_47 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_48 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="62-62", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_49 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_61 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_64 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_62 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="74-74", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_63 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_65 [label="x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value''))", span="82-82", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_66 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_68 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_69 [label="(string)context.Result == ''Returned value''", span="82-82", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_70 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_78 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_79 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="93-93", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_80 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_86 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_90 [label="process.Run(_context, _performer.Object)", span="115-115", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_89 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_87 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="108-108", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_88 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_91 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_99 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_103 [label="process.Run(_context, _performer.Object)", span="132-132", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_102 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_105 [label="Entry lambda expression", span="134-135", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_100 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="125-125", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_101 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_104 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_106 [label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="134-135", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_107 [label="Exit lambda expression", span="134-135", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_119 [label="Entry lambda expression", span="145-145", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_122 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_125 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_129 [label="process.Run(_context, _performer.Object)", span="156-156", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_128 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_120 [label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="145-145", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_121 [label="Exit lambda expression", span="145-145", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_123 [label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="146-146", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_124 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_126 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="149-149", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_127 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_130 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_140 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_143 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_146 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_150 [label="process.Run(_context, _performer.Object)", span="176-176", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_149 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_141 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="166-166", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_142 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_144 [label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="170-170", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_145 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_147 [label="x.ExceptionHandled = true", span="171-171", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_148 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_151 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_160 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_164 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_167 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_161 [label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="185-185", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_162 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_165 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="188-188", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_166 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_168 [label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="191-191", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_169 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_180 [label="Entry lambda expression", span="209-209", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_183 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_186 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_189 [label="Entry lambda expression", span="212-212", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_181 [label="x.OnPerforming(It.IsAny<PerformingContext>())", span="209-209", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_182 [label="Exit lambda expression", span="209-209", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_184 [label="x.OnPerforming(It.IsAny<PerformingContext>())", span="210-210", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_185 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_187 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="211-211", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_188 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_190 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="212-212", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_191 [label="Exit lambda expression", span="212-212", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_200 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_203 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_206 [label="Entry lambda expression", span="238-238", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_209 [label="Entry lambda expression", span="241-241", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_201 [label="x.OnPerforming(It.IsAny<PerformingContext>())", span="228-228", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_202 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_204 [label="x.Canceled = true", span="229-229", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_205 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_207 [label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="238-238", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_208 [label="Exit lambda expression", span="238-238", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_210 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="241-241", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_211 [label="Exit lambda expression", span="241-241", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_220 [label="Entry lambda expression", span="251-251", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_223 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_226 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_221 [label="x.OnPerforming(It.IsAny<PerformingContext>())", span="251-251", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_222 [label="Exit lambda expression", span="251-251", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_224 [label="context.Canceled = true", span="252-252", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_225 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_227 [label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="260-260", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_228 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_229 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_230 [label="context.Canceled", span="260-260", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_231 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_241 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_245 [label="process.Run(_context, _performer.Object)", span="276-276", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_244 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_247 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_250 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_242 [label="x.OnPerforming(It.IsAny<PerformingContext>())", span="269-269", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_243 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_246 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_248 [label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="282-282", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_249 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_251 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="285-285", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_252 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_270 [label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="306-307", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_273 [label="context.Exception == exception", span="307-307", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_263 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_267 [label="process.Run(_context, _performer.Object)", span="303-303", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_266 [label="Entry lambda expression", span="303-303", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_269 [label="Entry lambda expression", span="306-307", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_264 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="296-296", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_265 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_268 [label="Exit lambda expression", span="303-303", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_271 [label="Exit lambda expression", span="306-307", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_272 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_274 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_291 [label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="328-328", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_294 [label="context.Exception == exception", span="328-328", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_284 [label="Entry lambda expression", span="319-319", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_288 [label="process.Run(_context, _performer.Object)", span="326-326", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_287 [label="Entry lambda expression", span="326-326", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_290 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_285 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="319-319", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_286 [label="Exit lambda expression", span="319-319", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_289 [label="Exit lambda expression", span="326-326", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_292 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_293 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_295 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_308 [label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="342-342", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_311 [label="context.Exception == exception", span="342-342", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_304 [label="Entry lambda expression", span="339-339", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_307 [label="Entry lambda expression", span="342-342", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_313 [label="Entry lambda expression", span="343-343", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_317 [label="process.Run(_context, _performer.Object)", span="348-348", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_316 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_305 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="339-339", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_306 [label="Exit lambda expression", span="339-339", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_309 [label="Exit lambda expression", span="342-342", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_310 [label="Entry lambda expression", span="342-342", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_312 [label="Exit lambda expression", span="342-342", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_314 [label="x.ExceptionHandled = true", span="343-343", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_315 [label="Exit lambda expression", span="343-343", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_318 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_328 [label="Entry lambda expression", span="359-359", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_331 [label="Entry lambda expression", span="362-362", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_334 [label="Entry lambda expression", span="363-363", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_338 [label="process.Run(_context, _performer.Object)", span="368-368", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_337 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_340 [label="Entry lambda expression", span="371-371", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_329 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="359-359", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_330 [label="Exit lambda expression", span="359-359", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_332 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="362-362", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_333 [label="Exit lambda expression", span="362-362", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_335 [label="x.ExceptionHandled = true", span="363-363", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_336 [label="Exit lambda expression", span="363-363", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_339 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_341 [label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="371-371", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_342 [label="Exit lambda expression", span="371-371", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_343 [label="Entry lambda expression", span="371-371", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_344 [label="context.Exception != null", span="371-371", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_345 [label="Exit lambda expression", span="371-371", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_353 [label="Entry lambda expression", span="379-379", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_357 [label="process.Run(_context, _performer.Object)", span="386-386", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_356 [label="Entry lambda expression", span="385-386", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_354 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="379-379", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_355 [label="Exit lambda expression", span="379-379", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_358 [label="Exit lambda expression", span="385-386", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_367 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_370 [label="Entry lambda expression", span="400-400", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_374 [label="process.Run(_context, _performer.Object)", span="407-407", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_373 [label="Entry lambda expression", span="406-407", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_368 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="396-396", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_369 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_371 [label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="400-400", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_372 [label="Exit lambda expression", span="400-400", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_375 [label="Exit lambda expression", span="406-407", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_383 [label="Entry lambda expression", span="417-417", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_387 [label="process.Run(_context, _performer.Object)", span="425-425", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_386 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_389 [label="Entry lambda expression", span="429-429", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_384 [label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="417-417", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_385 [label="Exit lambda expression", span="417-417", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_388 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_390 [label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="429-429", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_391 [label="Exit lambda expression", span="429-429", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_398 [label="Entry lambda expression", span="438-438", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_402 [label="process.Run(_context, _performer.Object)", span="445-445", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_401 [label="Entry lambda expression", span="445-445", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_399 [label="x.OnPerforming(It.IsAny<PerformingContext>())", span="438-438", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_400 [label="Exit lambda expression", span="438-438", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_403 [label="Exit lambda expression", span="445-445", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_410 [label="Entry lambda expression", span="453-453", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_414 [label="process.Run(_context, _performer.Object)", span="460-460", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_411 [label="x.OnPerformed(It.IsAny<PerformedContext>())", span="453-453", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_412 [label="Exit lambda expression", span="453-453", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_415 [label="Exit lambda expression", span="460-460", cluster="lambda expression", file="JobPerformanceProcessFacts.cs"];
m14_109 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="139-139", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_110 [label="var filter1 = CreateFilter<IServerExceptionFilter>()", span="142-142", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_111 [label="var filter2 = CreateFilter<IServerExceptionFilter>()", span="143-143", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_113 [label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="146-146", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_112 [label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="145-145", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_114 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="148-150", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_115 [label="var process = CreateProcess()", span="152-152", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_116 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="155-156", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_117 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="139-139", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobPerformanceProcessFacts.cs"];
m14_46 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobPerformanceProcessFacts.cs"];
m14_212 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="245-245", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_213 [label="var outerFilter = CreateFilter<IServerFilter>()", span="248-248", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_214 [label="var innerFilter = CreateFilter<IServerFilter>()", span="249-249", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_218 [label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="260-260", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_215 [label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="251-252", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_216 [label="var process = CreateProcess()", span="254-254", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_217 [label="process.Run(_context, _performer.Object)", span="257-257", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_219 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="245-245", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobPerformanceProcessFacts.cs"];
m14_13 [label="Entry Mock<IJobCancellationToken>.cstr", span="", cluster="Mock<IJobCancellationToken>.cstr", file="JobPerformanceProcessFacts.cs"];
m14_138 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobPerformanceProcessFacts.cs"];
m14_32 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_33 [label="var process = CreateProcess()", span="46-46", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="48-49", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_35 [label="Assert.Equal(''performer'', exception.ParamName)", span="51-51", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_36 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_60 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobPerformanceProcessFacts.cs"];
m14_20 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_21 [label="var process = CreateProcess()", span="35-35", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_22 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="37-38", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_23 [label="Assert.Equal(''context'', exception.ParamName)", span="40-40", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_24 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobPerformanceProcessFacts.cs"];
m14_58 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", span="472-472", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs"];
m14_420 [label="var filter = new Mock<T>()", span="475-475", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs"];
m14_421 [label="_filters.Add(filter.Object)", span="476-476", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs"];
m14_422 [label="return filter;", span="478-478", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs"];
m14_423 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", span="472-472", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.CreateFilter<T>()", file="JobPerformanceProcessFacts.cs"];
m14_81 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="104-104", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_82 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="107-109", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_83 [label="var process = CreateProcess()", span="111-111", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_84 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="114-115", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_85 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="104-104", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="JobPerformanceProcessFacts.cs"];
m14_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobPerformanceProcessFacts.cs"];
m14_346 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="375-375", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_347 [label="var filter = CreateFilter<IServerFilter>()", span="378-378", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_348 [label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="379-380", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_349 [label="var process = CreateProcess()", span="382-382", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_350 [label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="385-386", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_351 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="388-388", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_352 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="375-375", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="JobPerformanceProcessFacts.cs"];
m14_92 [label="Entry Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="119-119", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs"];
m14_93 [label="var filter = CreateFilter<IServerExceptionFilter>()", span="122-122", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs"];
m14_94 [label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="124-126", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs"];
m14_97 [label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="134-135", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs"];
m14_95 [label="var process = CreateProcess()", span="128-128", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs"];
m14_96 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="131-132", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs"];
m14_98 [label="Exit Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="119-119", cluster="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobPerformanceProcessFacts.cs"];
m14_11 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobPerformanceProcessFacts.cs"];
m14_12 [label="Entry PerformContext.cstr", span="", cluster="PerformContext.cstr", file="JobPerformanceProcessFacts.cs"];
m14_426 [label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts", span="", file="JobPerformanceProcessFacts.cs"];
m14_427 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_428 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_429 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_430 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_431 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_432 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_433 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_434 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_435 [label=exception, span="", file="JobPerformanceProcessFacts.cs"];
m14_436 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_437 [label=exception, span="", file="JobPerformanceProcessFacts.cs"];
m14_438 [label=exception, span="", file="JobPerformanceProcessFacts.cs"];
m14_439 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_440 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_441 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_442 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_443 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_444 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m14_445 [label=process, span="", file="JobPerformanceProcessFacts.cs"];
m15_8 [label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m15_35 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs"];
m15_15 [label="cancellationToken.WaitHandle.WaitOne(_pollInterval)", span="57-57", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_16 [label="_enqueuedCount++", span="62-62", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_17 [label="Exit Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_0 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_5 [label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_6 [label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_7 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_3 [label="configureAction == null", span="16-16", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_1 [label="queues == null", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_4 [label="throw new ArgumentNullException(''configureAction'');", span="16-16", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_2 [label="throw new ArgumentNullException(''queues'');", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_10 [label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_12 [label="_enqueuedCount != 0", span="51-51", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_13 [label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="53-53", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_14 [label="_enqueuedCount = 0", span="54-54", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_34 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="SchedulePoller.cs"];
m15_20 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs"];
m15_37 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs"];
m15_9 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePoller.cs"];
m15_36 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SchedulePoller.cs"];
m15_18 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span="", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_31 [label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", span="92-92", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", color=green, community=0, file="SchedulePoller.cs"];
m15_26 [label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="78-79", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_29 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="86-86", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_30 [label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="87-90", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_32 [label="return true;", span="94-94", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_24 [label="var connection = _storage.GetConnection()", span="73-73", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_25 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="75-75", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_27 [label="String.IsNullOrEmpty(jobId)", span="81-81", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_28 [label="return false;", span="83-83", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_33 [label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="71-71", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m15_39 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SchedulePoller.cs"];
m15_19 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SchedulePoller.cs"];
m15_11 [label="!EnqueueNextScheduledJob()", span="49-49", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m15_40 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs"];
m15_38 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SchedulePoller.cs"];
m15_41 [label="Hangfire.Server.SchedulePoller", span="", file="SchedulePoller.cs"];
m16_15 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="SchedulePollerFacts.cs"];
m16_16 [label="return _monitoringApi;", span="29-29", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="SchedulePollerFacts.cs"];
m16_17 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="SchedulePollerFacts.cs"];
m16_0 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_1 [label="queues == null", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_3 [label="configureAction == null", span="16-16", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_5 [label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_6 [label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_2 [label="throw new ArgumentNullException(''queues'');", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_4 [label="throw new ArgumentNullException(''configureAction'');", span="16-16", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_7 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_10 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", file="SchedulePollerFacts.cs"];
m16_12 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="SchedulePollerFacts.cs"];
m16_13 [label="return _jobQueue;", span="24-24", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="SchedulePollerFacts.cs"];
m16_14 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="SchedulePollerFacts.cs"];
m16_9 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="SchedulePollerFacts.cs"];
m16_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SchedulePollerFacts.cs"];
m16_18 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span="", file="SchedulePollerFacts.cs"];
m17_41 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="StateChangeProcess.cs"];
m17_63 [label="Entry Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="25-25", cluster="Hangfire.States.IStateHandler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs"];
m17_37 [label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="StateChangeProcess.cs"];
m17_38 [label="Entry Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", span="30-30", cluster="Hangfire.States.IElectStateFilter.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcess.cs"];
m17_66 [label="Entry Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="24-24", cluster="Hangfire.States.IStateHandler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs"];
m17_22 [label="Entry Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="53-53", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateChangeProcess.cs"];
m17_23 [label="var filterInfo = GetFilters(context.Job)", span="57-57", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_24 [label="var electStateContext = new ElectStateContext(context, _connection, toState, oldStateName)", span="58-58", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_27 [label="var applyStateContext = new ApplyStateContext(\r\n                    context, \r\n                    electStateContext.CandidateState, \r\n                    oldStateName,\r\n                    electStateContext.TraversedStates)", span="65-69", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=1, file="StateChangeProcess.cs"];
m17_32 [label="var applyStateContext = new ApplyStateContext(context, failedState, oldStateName, Enumerable.Empty<IState>())", span="83-83", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_25 [label="filterInfo.ElectStateFilters", span="60-60", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_28 [label="ApplyState(applyStateContext, filterInfo.ApplyStateFilters)", span="71-71", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_26 [label="filter.OnStateElection(electStateContext)", span="62-62", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_29 [label="return true;", span="74-74", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_30 [label=Exception, span="76-76", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_31 [label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="78-81", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=1, file="StateChangeProcess.cs"];
m17_33 [label="ApplyState(applyStateContext, Enumerable.Empty<IApplyStateFilter>())", span="87-87", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_34 [label="return false;", span="90-90", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", color=red, community=0, file="StateChangeProcess.cs"];
m17_35 [label="Exit Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="53-53", cluster="Hangfire.States.StateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateChangeProcess.cs"];
m17_0 [label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", span="33-33", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", file="StateChangeProcess.cs"];
m17_1 [label="connection == null", span="35-35", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", color=red, community=0, file="StateChangeProcess.cs"];
m17_3 [label="handlers == null", span="36-36", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", color=red, community=0, file="StateChangeProcess.cs"];
m17_5 [label="_connection = connection", span="38-38", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", color=red, community=0, file="StateChangeProcess.cs"];
m17_6 [label="_handlers = handlers", span="39-39", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", color=red, community=0, file="StateChangeProcess.cs"];
m17_2 [label="throw new ArgumentNullException(''connection'');", span="35-35", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", color=red, community=0, file="StateChangeProcess.cs"];
m17_4 [label="throw new ArgumentNullException(''handlers'');", span="36-36", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", color=red, community=0, file="StateChangeProcess.cs"];
m17_7 [label="Exit Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", span="33-33", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection)", file="StateChangeProcess.cs"];
m17_39 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="StateChangeProcess.cs"];
m17_74 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StateChangeProcess.cs"];
m17_40 [label="Entry Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", span="94-94", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", file="StateChangeProcess.cs"];
m17_43 [label="var transaction = _connection.CreateWriteTransaction()", span="96-96", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_44 [label="context.TraversedStates", span="98-98", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_45 [label="transaction.AddJobState(context.JobId, state)", span="100-100", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_46 [label="_handlers.GetHandlers(context.OldStateName)", span="103-103", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_47 [label="handler.Unapply(context, transaction)", span="105-105", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_48 [label=filters, span="108-108", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_49 [label="filter.OnStateUnapplied(context, transaction)", span="110-110", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_50 [label="transaction.SetJobState(context.JobId, context.NewState)", span="113-113", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_51 [label="_handlers.GetHandlers(context.NewState.Name)", span="115-115", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_52 [label="handler.Apply(context, transaction)", span="117-117", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_53 [label=filters, span="120-120", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_54 [label="filter.OnStateApplied(context, transaction)", span="122-122", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_55 [label="context.NewState.IsFinal", span="125-125", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_56 [label="transaction.ExpireJob(context.JobId, context.JobExpirationTimeout)", span="127-127", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_57 [label="transaction.PersistJob(context.JobId)", span="131-131", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_58 [label="transaction.Commit()", span="134-134", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_59 [label="Exit Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", span="94-94", cluster="Hangfire.States.StateChangeProcess.ApplyState(Hangfire.States.ApplyStateContext, System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>)", file="StateChangeProcess.cs"];
m17_60 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateChangeProcess.cs"];
m17_62 [label="Entry Hangfire.States.StateHandlerCollection.GetHandlers(string)", span="50-50", cluster="Hangfire.States.StateHandlerCollection.GetHandlers(string)", file="StateChangeProcess.cs"];
m17_68 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="26-26", cluster="Hangfire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="StateChangeProcess.cs"];
m17_36 [label="Entry Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", span="138-138", cluster="Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", file="StateChangeProcess.cs"];
m17_71 [label="return new JobFilterInfo(_getFiltersThunk(job));", span="140-140", cluster="Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", color=red, community=0, file="StateChangeProcess.cs"];
m17_72 [label="Exit Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", span="138-138", cluster="Hangfire.States.StateChangeProcess.GetFilters(Hangfire.Common.Job)", file="StateChangeProcess.cs"];
m17_61 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="29-29", cluster="Hangfire.Storage.IWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="StateChangeProcess.cs"];
m17_70 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="StateChangeProcess.cs"];
m17_18 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="StateChangeProcess.cs"];
m17_15 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="50-50", cluster="lambda expression", color=red, community=0, file="StateChangeProcess.cs"];
m17_14 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="StateChangeProcess.cs"];
m17_16 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="StateChangeProcess.cs"];
m17_19 [label="new JobFilter(f, JobFilterScope.Type, null)", span="50-50", cluster="lambda expression", color=red, community=0, file="StateChangeProcess.cs"];
m17_20 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="StateChangeProcess.cs"];
m17_17 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StateChangeProcess.cs"];
m17_64 [label="Entry Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="36-36", cluster="Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs"];
m17_69 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="27-27", cluster="Hangfire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="StateChangeProcess.cs"];
m17_73 [label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40", cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="StateChangeProcess.cs"];
m17_21 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="StateChangeProcess.cs"];
m17_65 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="28-28", cluster="Hangfire.Storage.IWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="StateChangeProcess.cs"];
m17_9 [label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="StateChangeProcess.cs"];
m17_10 [label="filters == null", span="48-48", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_12 [label="_getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="50-50", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_11 [label="throw new ArgumentNullException(''filters'');", span="48-48", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="StateChangeProcess.cs"];
m17_13 [label="Exit Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="StateChangeProcess.cs"];
m17_42 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateChangeProcess.cs"];
m17_67 [label="Entry Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="29-29", cluster="Hangfire.States.IApplyStateFilter.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcess.cs"];
m17_75 [label="Hangfire.States.StateChangeProcess", span="", file="StateChangeProcess.cs"];
m17_76 [label="System.Collections.Generic.IEnumerable<object>", span="", file="StateChangeProcess.cs"];
m18_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="StateChangeProcessFacts.cs"];
m18_114 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_117 [label="this.FeatureBackground()", span="279-279", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_120 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreated met'' +\r\n                    ''hod:'', ((string)(null)), table7, ''Given '')", span="288-289", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_116 [label="this.ScenarioSetup(scenarioInfo)", span="277-277", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_123 [label="this.ScenarioCleanup()", span="295-295", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_119 [label="table7.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="284-286", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_122 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="293-293", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_118 [label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="281-283", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_121 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="291-291", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_115 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should not be able to set parameters after the job was created'', ((string[])(null)))", span="275-275", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_124 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="StateChangeProcessFacts.cs"];
m18_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="StateChangeProcessFacts.cs"];
m18_26 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="StateChangeProcessFacts.cs"];
m18_27 [label="testRunner.CollectScenarioErrors()", span="69-69", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="StateChangeProcessFacts.cs"];
m18_28 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="StateChangeProcessFacts.cs"];
m18_184 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_187 [label="this.FeatureBackground()", span="443-443", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_188 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="445-445", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_186 [label="this.ScenarioSetup(scenarioInfo)", span="441-441", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_197 [label="this.ScenarioCleanup()", span="464-464", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_193 [label="table11.AddRow(new string[] {\r\n                        ''first''})", span="455-456", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_194 [label="table11.AddRow(new string[] {\r\n                        ''second''})", span="457-458", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_189 [label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="447-447", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_191 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="451-451", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_196 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_195 [label="testRunner.Then(''the client exception filters should be executed in the following order:'', ((string)(null)), table11, ''Then '')", span="460-460", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_185 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters should be executed depending on their order'', ((string[])(null)))", span="439-439", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_192 [label="TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="453-454", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_190 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="449-449", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_198 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_80 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_83 [label="this.FeatureBackground()", span="186-186", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_82 [label="this.ScenarioSetup(scenarioInfo)", span="184-184", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_84 [label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="188-190", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_85 [label="table4.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-US''})", span="191-193", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_86 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table4, ''Given '')", span="195-196", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_89 [label="this.ScenarioCleanup()", span="202-202", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_81 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name, an exception should be thrown'', ((string[])(null)))", span="182-182", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_87 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_88 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_90 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_52 [label="Entry Unk.And", span="", cluster="Unk.And", file="StateChangeProcessFacts.cs"];
m18_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="StateChangeProcessFacts.cs"];
m18_68 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_71 [label="this.FeatureBackground()", span="154-154", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_70 [label="this.ScenarioSetup(scenarioInfo)", span="152-152", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_72 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="156-158", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_73 [label="table3.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="159-161", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_74 [label="table3.AddRow(new string[] {\r\n                        ''UICulture'',\r\n                        ''ru-RU''})", span="162-164", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_75 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table3, ''Given '')", span="166-167", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_78 [label="this.ScenarioCleanup()", span="173-173", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_69 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should be able to set a job parameter in the client filter'', ((string[])(null)))", span="150-150", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_77 [label="testRunner.Then(''it should have all of the above parameters encoded as JSON string'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_76 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="169-169", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_79 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="StateChangeProcessFacts.cs"];
m18_91 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_93 [label="this.ScenarioSetup(scenarioInfo)", span="215-215", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_92 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter should be able to read the parameters that were set by one of the p'' +\r\n                    ''revious filters'', ((string[])(null)))", span="212-213", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_94 [label="this.FeatureBackground()", span="217-217", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_98 [label="testRunner.And(''the client filter \'second\' that reads all of the above parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="229-229", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_97 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table5, ''Given '')", span="226-227", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_99 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_100 [label="testRunner.Then(''the \'second\' client filter got the actual values of the parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_101 [label="this.ScenarioCleanup()", span="235-235", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_96 [label="table5.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-GB''})", span="222-224", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_95 [label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="219-221", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_102 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="StateChangeProcessFacts.cs"];
m18_141 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_144 [label="this.FeatureBackground()", span="344-344", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_145 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="346-346", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_143 [label="this.ScenarioSetup(scenarioInfo)", span="342-342", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_153 [label="this.ScenarioCleanup()", span="363-363", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_149 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="354-355", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_150 [label="table9.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="356-357", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_151 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="358-359", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_146 [label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="348-348", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_152 [label="testRunner.Then(''only the following client filter methods should be executed:'', ((string)(null)), table9, ''Then '')", span="361-361", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_142 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="340-340", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_148 [label="TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="352-353", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_147 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="350-350", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_154 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="StateChangeProcessFacts.cs"];
m18_22 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StateChangeProcessFacts.cs"];
m18_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StateChangeProcessFacts.cs"];
m18_24 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="StateChangeProcessFacts.cs"];
m18_173 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_176 [label="this.FeatureBackground()", span="418-418", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_177 [label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="420-420", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_175 [label="this.ScenarioSetup(scenarioInfo)", span="416-416", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_182 [label="this.ScenarioCleanup()", span="430-430", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_179 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="424-424", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_181 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="428-428", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_180 [label="testRunner.Then(''the client exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="426-426", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_178 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="422-422", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_174 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters should be executed when there was an exception while cre'' +\r\n                    ''ating a job'', ((string[])(null)))", span="413-414", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_183 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="StateChangeProcessFacts.cs"];
m18_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="StateChangeProcessFacts.cs"];
m18_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="StateChangeProcessFacts.cs"];
m18_48 [label="Entry Unk.When", span="", cluster="Unk.When", file="StateChangeProcessFacts.cs"];
m18_9 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", file="StateChangeProcessFacts.cs"];
m18_10 [label="testRunner.OnFeatureEnd()", span="42-42", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_11 [label="testRunner = null", span="43-43", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_12 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", file="StateChangeProcessFacts.cs"];
m18_50 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="StateChangeProcessFacts.cs"];
m18_34 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_36 [label="this.ScenarioSetup(scenarioInfo)", span="88-88", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_35 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters should be executed when I create a job'', ((string[])(null)))", span="86-86", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_37 [label="this.FeatureBackground()", span="90-90", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_38 [label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_45 [label="this.ScenarioCleanup()", span="107-107", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_41 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="98-99", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_42 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="100-101", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_44 [label="testRunner.And(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="105-105", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_43 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="103-103", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_39 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_40 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="96-97", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_46 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="StateChangeProcessFacts.cs"];
m18_47 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="StateChangeProcessFacts.cs"];
m18_155 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_158 [label="this.FeatureBackground()", span="376-376", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_159 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="378-378", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_157 [label="this.ScenarioSetup(scenarioInfo)", span="374-374", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_171 [label="this.ScenarioCleanup()", span="403-403", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_164 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="388-389", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_165 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="390-391", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_166 [label="table10.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="392-393", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_167 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="394-395", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_168 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="396-397", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_160 [label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="380-380", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_161 [label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="382-382", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_170 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="401-401", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_169 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table10, ''Then '')", span="399-399", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_156 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client filter handles an exception, it should not be thrown outside'', ((string[])(null)))", span="372-372", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_163 [label="TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="386-387", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_162 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="384-384", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_172 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_51 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="StateChangeProcessFacts.cs"];
m18_33 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="StateChangeProcessFacts.cs"];
m18_53 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_61 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="130-131", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_60 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="128-129", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_62 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="132-133", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_56 [label="this.FeatureBackground()", span="120-120", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_57 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="122-122", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_55 [label="this.ScenarioSetup(scenarioInfo)", span="118-118", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_66 [label="this.ScenarioCleanup()", span="141-141", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_59 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="126-126", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_63 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="134-135", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_64 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="136-137", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_65 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", span="139-139", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_58 [label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="124-124", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_54 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters should be executed depending on their order'', ((string[])(null)))", span="116-116", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_67 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="StateChangeProcessFacts.cs"];
m18_0 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StateChangeProcessFacts.cs"];
m18_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', ''\r\n  As a user, I expect that all defined client filters are executing\r\n  using th'' +\r\n                    ''e following rules, when I create a job.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StateChangeProcessFacts.cs"];
m18_3 [label="testRunner.OnFeatureStart(featureInfo)", span="36-36", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_4 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="StateChangeProcessFacts.cs"];
m18_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="StateChangeProcessFacts.cs"];
m18_49 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="StateChangeProcessFacts.cs"];
m18_30 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="StateChangeProcessFacts.cs"];
m18_31 [label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", color=green, community=0, file="StateChangeProcessFacts.cs"];
m18_32 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="StateChangeProcessFacts.cs"];
m18_125 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_128 [label="this.FeatureBackground()", span="308-308", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_129 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="310-310", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_127 [label="this.ScenarioSetup(scenarioInfo)", span="306-306", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_139 [label="this.ScenarioCleanup()", span="331-331", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_135 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="322-323", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_136 [label="table8.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="324-325", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_137 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="326-327", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_130 [label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="312-312", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_131 [label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_138 [label="testRunner.And(''only the following client filter methods should be executed:'', ((string)(null)), table8, ''And '')", span="329-329", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_133 [label="testRunner.Then(''the storage should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="318-318", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_126 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter cancels the creation of the job, it should not be created'', ((string[])(null)))", span="304-304", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_134 [label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="320-321", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_132 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="316-316", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_140 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="StateChangeProcessFacts.cs"];
m18_103 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_106 [label="this.FeatureBackground()", span="250-250", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_109 [label="testRunner.Given(''the client filter \'first\' that gets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table6, ''Given '')", span="259-260", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_105 [label="this.ScenarioSetup(scenarioInfo)", span="248-248", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_112 [label="this.ScenarioCleanup()", span="266-266", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_108 [label="table6.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-GB''})", span="255-257", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_111 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="264-264", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_107 [label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="252-254", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_110 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="262-262", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_104 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name in the GetParameter method call, a'' +\r\n                    ''n exception should be thrown'', ((string[])(null)))", span="245-246", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_113 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="StateChangeProcessFacts.cs"];
m18_199 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_202 [label="this.FeatureBackground()", span="479-479", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_203 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="481-481", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_201 [label="this.ScenarioSetup(scenarioInfo)", span="477-477", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_214 [label="this.ScenarioCleanup()", span="504-504", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_209 [label="table12.AddRow(new string[] {\r\n                        ''first''})", span="493-494", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_210 [label="table12.AddRow(new string[] {\r\n                        ''second''})", span="495-496", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_211 [label="table12.AddRow(new string[] {\r\n                        ''third''})", span="497-498", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_204 [label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="483-483", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_205 [label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="485-485", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_207 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="489-489", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_213 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="502-502", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_212 [label="testRunner.Then(''the following client exception filters should be executed:'', ((string)(null)), table12, ''Then '')", span="500-500", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_200 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client exception filter handles an exception, it should not be thrown outs'' +\r\n                    ''ide'', ((string[])(null)))", span="474-475", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_208 [label="TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="491-492", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_206 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="487-487", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_215 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="StateChangeProcessFacts.cs"];
m18_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="StateChangeProcessFacts.cs"];
m18_14 [label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs"];
m18_16 [label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="52-52", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs"];
m18_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="49-50", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs"];
m18_17 [label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="StateChangeProcessFacts.cs"];
m18_216 [label="HangFire.Tests.ClientFiltersFeature", span="", file="StateChangeProcessFacts.cs"];
m19_0 [label="Entry HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6", cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="StateContext.cs"];
m19_1 [label="Exception = exception", span="11-11", cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="StateContext.cs"];
m19_2 [label="Exit HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6", cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="StateContext.cs"];
m19_3 [label="HangFire.Filters.ServerExceptionContext", span="", file="StateContext.cs"];
m20_0 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs"];
m20_1 [label="MaxRetryAttempts = 10", span="27-27", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=red, community=0, file="StateContextFacts.cs"];
m20_2 [label="ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="28-28", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs"];
m20_3 [label="LowerLogVerbosity = false", span="29-29", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs"];
m20_4 [label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="StateContextFacts.cs"];
m20_5 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="StateContextFacts.cs"];
m20_6 [label="HangFire.Server.ServerComponentRunnerOptions", span="", file="StateContextFacts.cs"];
m21_14 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs"];
m21_15 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, null, Queue))", span="31-32", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs"];
m21_16 [label="Assert.Equal(''jobId'', exception.ParamName)", span="34-34", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs"];
m21_17 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="StateContextMock.cs"];
m21_8 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateContextMock.cs"];
m21_29 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs"];
m21_30 [label="var processingJob = CreateProcessingJob()", span="49-49", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs"];
m21_31 [label="Assert.Equal(JobId, processingJob.JobId)", span="51-51", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs"];
m21_32 [label="Assert.Equal(Queue, processingJob.Queue)", span="52-52", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs"];
m21_33 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateContextMock.cs"];
m21_13 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="25-25", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="StateContextMock.cs"];
m21_0 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="StateContextMock.cs"];
m21_1 [label="_connection = new Mock<IStorageConnection>()", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="StateContextMock.cs"];
m21_2 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="StateContextMock.cs"];
m21_45 [label="Entry Unk.DeleteJobFromQueue", span="", cluster="Unk.DeleteJobFromQueue", file="StateContextMock.cs"];
m21_9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateContextMock.cs"];
m21_3 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StateContextMock.cs"];
m21_35 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs"];
m21_36 [label="var processingJob = CreateProcessingJob()", span="58-58", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs"];
m21_37 [label="processingJob.Dispose()", span="60-60", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs"];
m21_38 [label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", span="62-62", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs"];
m21_39 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="StateContextMock.cs"];
m21_4 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs"];
m21_5 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(null, JobId, Queue))", span="22-23", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs"];
m21_6 [label="Assert.Equal(''connection'', exception.ParamName)", span="25-25", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs"];
m21_7 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateContextMock.cs"];
m21_42 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="StateContextMock.cs"];
m21_10 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="StateContextMock.cs"];
m21_11 [label="new SqlServerProcessingJob(null, JobId, Queue)", span="23-23", cluster="lambda expression", file="StateContextMock.cs"];
m21_12 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="StateContextMock.cs"];
m21_18 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="StateContextMock.cs"];
m21_19 [label="new SqlServerProcessingJob(_connection.Object, null, Queue)", span="32-32", cluster="lambda expression", file="StateContextMock.cs"];
m21_20 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="StateContextMock.cs"];
m21_26 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="StateContextMock.cs"];
m21_27 [label="new SqlServerProcessingJob(_connection.Object, JobId, null)", span="41-41", cluster="lambda expression", file="StateContextMock.cs"];
m21_28 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="StateContextMock.cs"];
m21_43 [label="x.DeleteJobFromQueue(JobId, Queue)", span="62-62", cluster="lambda expression", file="StateContextMock.cs"];
m21_44 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="StateContextMock.cs"];
m21_34 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="StateContextMock.cs"];
m21_46 [label="return new SqlServerProcessingJob(_connection.Object, JobId, Queue);", span="67-67", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="StateContextMock.cs"];
m21_47 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="StateContextMock.cs"];
m21_21 [label="Entry SqlServerProcessingJob.cstr", span="", cluster="SqlServerProcessingJob.cstr", file="StateContextMock.cs"];
m21_40 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="40-40", cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="StateContextMock.cs"];
m21_22 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs"];
m21_23 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, JobId, null))", span="40-41", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs"];
m21_24 [label="Assert.Equal(''queue'', exception.ParamName)", span="43-43", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs"];
m21_25 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="StateContextMock.cs"];
m21_41 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateContextMock.cs"];
m21_48 [label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", span="", file="StateContextMock.cs"];
m22_8 [label="Id = id", span="43-43", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachine.cs"];
m22_24 [label="return;", span="72-72", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachine.cs"];
m22_53 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="StateMachine.cs"];
m22_54 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="StateMachine.cs"];
m22_49 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachine.cs"];
m22_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="StateMachine.cs"];
m22_18 [label="var context = new StateContext(jobId, job, createdAt, this)", span="56-56", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", color=red, community=0];
m22_19 [label="_stateChangeProcess.ChangeState(context, state, null)", span="57-57", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs", color=red, community=0];
m22_20 [label="return jobId;", span="59-59", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs"];
m22_21 [label="Exit Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs"];
m22_0 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_7 [label="Exit Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_9 [label="Entry Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs"];
m22_10 [label="job == null", span="45-45", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs"];
m22_5 [label="_connection = connection", span="36-36", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_1 [label="connection == null", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_3 [label="stateChangeProcess == null", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_6 [label="_stateChangeProcess = stateChangeProcess", span="37-37", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_2 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_4 [label="throw new ArgumentNullException(''stateChangeProcess'');", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m22_11 [label="throw new ArgumentNullException(''job'');", span="45-45", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs"];
m22_55 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachine.cs"];
m22_17 [label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                createdAt,\r\n                TimeSpan.FromHours(1))", span="50-54", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs"];
m22_12 [label="parameters == null", span="46-46", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachine.cs"];
m22_14 [label="_connection.Execute(\r\n                ''delete from HangFire.JobQueue where Id = @id'',\r\n                new { id = Id })", span="54-56", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachine.cs", color=green, community=0];
m22_13 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachine.cs"];
m22_15 [label="_removedFromQueue = true", span="58-58", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachine.cs"];
m22_16 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachine.cs"];
m22_22 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachine.cs"];
m22_23 [label="Entry Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30", cluster="Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="StateMachine.cs"];
m22_25 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m22_26 [label="Entry Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_27 [label="jobId == null", span="65-65", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_28 [label="throw new ArgumentNullException(''jobId'');", span="65-65", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_51 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="StateMachine.cs"];
m22_50 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="25-25", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="StateMachine.cs"];
m22_29 [label="Hangfire.SqlServer.SqlServerFetchedJob", span="", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_31 [label="fromStates != null && fromStates.Length == 0", span="67-67", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_33 [label="_connection.AcquireDistributedJobLock(jobId, JobLockTimeout)", span="78-78", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_34 [label="var jobData = _connection.GetJobData(jobId)", span="80-80", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_37 [label="fromStates != null && !fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="89-89", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_42 [label="!toState.IgnoreJobLoadException", span="107-107", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_43 [label="toState = new FailedState(ex.InnerException)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Can not change the state of a job to '{0}': target method was not found.'',\r\n                                toState.Name)\r\n                        }", span="109-114", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_45 [label="var context = new StateContext(jobId, jobData.Job, jobData.CreatedAt, this)", span="120-120", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", color=red, community=0, file="StateMachine.cs"];
m22_46 [label="var stateChanged = _stateChangeProcess.ChangeState(context, toState, jobData.State)", span="121-121", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", color=red, community=0, file="StateMachine.cs"];
m22_30 [label="throw new ArgumentNullException(''toState'');", span="66-66", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_32 [label="throw new ArgumentException(''From states array should be null or non-empty.'', ''fromStates'');", span="69-69", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_35 [label="jobData == null", span="82-82", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_40 [label="jobData.EnsureLoaded()", span="98-98", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_36 [label="return false;", span="86-86", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_38 [label="return false;", span="91-91", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_39 [label="bool loadSucceeded = true", span="94-94", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_47 [label="return loadSucceeded && stateChanged;", span="123-123", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_41 [label=JobLoadException, span="100-100", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_44 [label="loadSucceeded = false", span="116-116", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_48 [label="Exit Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m22_56 [label="Hangfire.States.StateMachine", span="", file="StateMachine.cs"];
m23_7 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs"];
m23_119 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_125 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="248-254", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_121 [label="throw new ArgumentNullException(''serverId'');", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_123 [label="throw new ArgumentNullException(''context'');", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_124 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_120 [label="serverId == null", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_122 [label="context == null", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_126 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateMachineFactory.cs"];
m23_97 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs"];
m23_102 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs"];
m23_99 [label="throw new ArgumentNullException(''id'');", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs"];
m23_101 [label="throw new ArgumentNullException(''name'');", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs"];
m23_100 [label="name == null", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs"];
m23_98 [label="id == null", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs"];
m23_103 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateMachineFactory.cs"];
m23_127 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="StateMachineFactory.cs"];
m23_49 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_56 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_63 [label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_51 [label="throw new ArgumentNullException(''job'');", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_53 [label="throw new ArgumentNullException(''parameters'');", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_55 [label="var invocationData = InvocationData.Serialize(job)", span="119-119", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_54 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_57 [label="parameters.Count > 0", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_61 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_64 [label="return jobId;", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_58 [label="var parameterArray = new object[parameters.Count]", span="133-133", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_62 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_50 [label="job == null", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_52 [label="parameters == null", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_60 [label=parameters, span="135-135", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_59 [label="int parameterIndex = 0", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_65 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachineFactory.cs"];
m23_8 [label="Entry Hangfire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22", cluster="Hangfire.States.StateHandlerCollection.StateHandlerCollection()", file="StateMachineFactory.cs"];
m23_10 [label="_connection.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateMachineFactory.cs"];
m23_21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachineFactory.cs"];
m23_0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs"];
m23_1 [label="connection == null", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs"];
m23_5 [label="_connection = connection", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs"];
m23_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs"];
m23_3 [label="options == null", span="38-38", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", color=green, community=0];
m23_4 [label="throw new ArgumentNullException(''options'');", span="38-38", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", color=green, community=0];
m23_6 [label="_options = options", span="41-41", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateMachineFactory.cs", color=green, community=0];
m23_17 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateMachineFactory.cs"];
m23_43 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="StateMachineFactory.cs"];
m23_69 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateMachineFactory.cs"];
m23_47 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="StateMachineFactory.cs"];
m23_72 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_76 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_74 [label="throw new ArgumentNullException(''id'');", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_75 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_77 [label="jobData == null", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_79 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_80 [label="invocationData.Arguments = jobData.Arguments", span="169-169", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_86 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_73 [label="id == null", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_78 [label="return null;", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_83 [label="job = invocationData.Deserialize()", span="176-176", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_81 [label="Job job = null", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_85 [label="loadException = ex", span="180-180", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_82 [label="JobLoadException loadException = null", span="172-172", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_84 [label=JobLoadException, span="178-178", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_87 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateMachineFactory.cs"];
m23_13 [label="throw new ArgumentNullException(''connection'');", span="36-36", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m23_14 [label="var process = new StateChangeProcess(connection, _handlers)", span="38-38", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", color=red, community=0];
m23_15 [label="return new StateMachine(connection, process);", span="39-39", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m23_118 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="StateMachineFactory.cs"];
m23_44 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="StateMachineFactory.cs"];
m23_48 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="StateMachineFactory.cs"];
m23_11 [label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateMachineFactory.cs"];
m23_12 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StateMachineFactory.cs"];
m23_16 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="StateMachineFactory.cs"];
m23_20 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr", file="StateMachineFactory.cs"];
m23_42 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StateMachineFactory.cs"];
m23_68 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="StateMachineFactory.cs"];
m23_9 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateMachineFactory.cs"];
m23_22 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_32 [label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_35 [label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_24 [label="throw new ArgumentNullException(''queues'');", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_31 [label="cancellationToken.ThrowIfCancellationRequested()", span="82-82", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_28 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_29 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_30 [label="var currentQueryIndex = 0", span="78-78", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_33 [label="idAndQueue == null", span="89-89", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_38 [label="idAndQueue == null", span="99-99", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_39 [label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_34 [label="currentQueryIndex == fetchConditions.Length - 1", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_36 [label="cancellationToken.ThrowIfCancellationRequested()", span="94-94", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_23 [label="queues == null", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_25 [label="queues.Length == 0", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_27 [label="dynamic idAndQueue", span="66-66", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_37 [label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_26 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_40 [label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m23_138 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs"];
m23_141 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="282-284", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs"];
m23_139 [label="timeOut.Duration() != timeOut", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs"];
m23_140 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs"];
m23_142 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateMachineFactory.cs"];
m23_143 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="StateMachineFactory.cs"];
m23_104 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs"];
m23_109 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs"];
m23_106 [label="throw new ArgumentNullException(''id'');", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs"];
m23_108 [label="throw new ArgumentNullException(''queue'');", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs"];
m23_107 [label="queue == null", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs"];
m23_105 [label="id == null", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs"];
m23_110 [label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateMachineFactory.cs"];
m23_90 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs"];
m23_95 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs"];
m23_92 [label="throw new ArgumentNullException(''id'');", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs"];
m23_94 [label="throw new ArgumentNullException(''name'');", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs"];
m23_93 [label="name == null", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs"];
m23_91 [label="id == null", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs"];
m23_96 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateMachineFactory.cs"];
m23_111 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs"];
m23_116 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs"];
m23_113 [label="throw new ArgumentNullException(''key'');", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs"];
m23_114 [label="toScore < fromScore", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs"];
m23_112 [label="key == null", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs"];
m23_115 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs"];
m23_117 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateMachineFactory.cs"];
m23_67 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateMachineFactory.cs"];
m23_18 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachineFactory.cs"];
m23_19 [label="Hangfire.States.StateMachineFactory", span="", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateMachineFactory.cs"];
m23_70 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StateMachineFactory.cs"];
m23_41 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachineFactory.cs"];
m23_46 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateMachineFactory.cs"];
m23_128 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs"];
m23_131 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="261-263", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs"];
m23_130 [label="throw new ArgumentNullException(''serverId'');", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs"];
m23_129 [label="serverId == null", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs"];
m23_132 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateMachineFactory.cs"];
m23_71 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="StateMachineFactory.cs"];
m23_89 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="StateMachineFactory.cs"];
m23_88 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="StateMachineFactory.cs"];
m23_133 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs"];
m23_136 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="270-272", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs"];
m23_135 [label="throw new ArgumentNullException(''serverId'');", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs"];
m23_134 [label="serverId == null", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs"];
m23_137 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateMachineFactory.cs"];
m23_45 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="StateMachineFactory.cs"];
m23_66 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="StateMachineFactory.cs"];
m23_144 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StateMachineFactory.cs"];
m24_18 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs"];
m24_19 [label="_connection.Execute(\r\n                ''update HangFire.JobQueue set FetchedAt = null where Id = @id'',\r\n                new { id = Id })", span="63-65", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs"];
m24_20 [label="_requeued = true", span="67-67", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs"];
m24_21 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="61-61", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="StateMachineFacts.cs"];
m24_0 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_1 [label="connection == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=green, community=0, file="StateMachineFacts.cs"];
m24_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", color=green, community=0, file="StateMachineFacts.cs"];
m24_3 [label="jobId == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_5 [label="queue == null", span="39-39", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_7 [label="_connection = connection", span="41-41", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_8 [label="Id = id", span="43-43", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_9 [label="JobId = jobId", span="44-44", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_10 [label="Queue = queue", span="45-45", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_4 [label="throw new ArgumentNullException(''jobId'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_6 [label="throw new ArgumentNullException(''queue'');", span="39-39", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_11 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", span="31-31", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(IDbConnection, int, string, string)", file="StateMachineFacts.cs"];
m24_17 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="StateMachineFacts.cs"];
m24_22 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs"];
m24_23 [label=_disposed, span="72-72", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs"];
m24_25 [label="!_removedFromQueue && !_requeued", span="74-74", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs"];
m24_26 [label="Requeue()", span="76-76", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs"];
m24_27 [label="_disposed = true", span="79-79", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs"];
m24_24 [label="return;", span="72-72", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs"];
m24_28 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="70-70", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="StateMachineFacts.cs"];
m24_13 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs"];
m24_14 [label="_connection.Execute(\r\n                ''delete from HangFire.JobQueue where Id = @id'',\r\n                new { id = Id })", span="54-56", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs"];
m24_15 [label="_removedFromQueue = true", span="58-58", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs"];
m24_16 [label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="52-52", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="StateMachineFacts.cs"];
m24_29 [label="Hangfire.SqlServer.SqlServerFetchedJob", span="", file="StateMachineFacts.cs"];
m25_22 [label="Entry Hangfire.Server.Worker.ToString()", span="66-66", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m25_23 [label="return ''Worker #'' + _context.WorkerNumber;", span="68-68", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m25_24 [label="Exit Hangfire.Server.Worker.ToString()", span="66-66", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m25_6 [label="Entry Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_7 [label="var connection = _context.Storage.GetConnection()", span="37-37", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_8 [label="var fetchedJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="38-38", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_9 [label="ProcessJob(fetchedJob.JobId, connection, _context.PerformanceProcess, cancellationToken)", span="42-42", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_10 [label="fetchedJob.RemoveFromQueue()", span="49-49", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_12 [label="fetchedJob.RemoveFromQueue()", span="56-56", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_14 [label="fetchedJob.Requeue()", span="60-60", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_11 [label=JobAbortedException, span="54-54", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_13 [label=Exception, span="58-58", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_15 [label="throw;", span="61-61", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_16 [label="Exit Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m25_54 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs"];
m25_58 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs"];
m25_17 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="Worker.cs"];
m25_47 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="Worker.cs"];
m25_56 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs"];
m25_57 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs"];
m25_48 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27", cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="Worker.cs"];
m25_50 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs"];
m25_52 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="Worker.cs"];
m25_20 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="Worker.cs"];
m25_21 [label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25", cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs"];
m25_19 [label="Entry Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", span="71-71", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_25 [label="var stateMachine = _context.StateMachineFactory.Create(connection)", span="77-77", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_27 [label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="80-83", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", color=red, community=1, file="Worker.cs"];
m25_30 [label="var jobData = connection.GetJobData(jobId)", span="97-97", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_32 [label="var cancellationToken = new ServerJobCancellationToken(\r\n                    jobId, connection, _context, shutdownToken)", span="100-101", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_33 [label="var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, cancellationToken)", span="103-104", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_36 [label="var result = process.Run(performContext, jobData.Job)", span="109-109", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_45 [label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="135-135", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs"];
m25_26 [label="var processingState = new ProcessingState(_context.ServerId, _context.WorkerNumber)", span="78-78", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_28 [label="return;", span="85-85", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_29 [label="IState state", span="93-93", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_31 [label="jobData.EnsureLoaded()", span="98-98", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_34 [label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="106-106", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_35 [label="var duration = Stopwatch.StartNew()", span="107-107", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_38 [label="state = new SucceededState(result, (long) latency, duration.ElapsedMilliseconds)", span="112-112", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_37 [label="duration.Stop()", span="110-110", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_39 [label=OperationCanceledException, span="114-114", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_41 [label=JobPerformanceException, span="118-118", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_43 [label=Exception, span="125-125", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_40 [label="throw;", span="116-116", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_42 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="120-123", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_44 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                }", span="127-130", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_46 [label="Exit Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", span="71-71", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m25_53 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="Worker.cs"];
m25_55 [label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20", cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="Worker.cs"];
m25_18 [label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36", cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs"];
m25_0 [label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m25_1 [label="context == null", span="30-30", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m25_3 [label="_context = context", span="32-32", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m25_2 [label="throw new ArgumentNullException(''context'');", span="30-30", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m25_4 [label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m25_51 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs"];
m25_49 [label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="Worker.cs"];
m25_59 [label="Hangfire.Server.Worker", span="", file="Worker.cs"];
m26_12 [label="Entry HangFire.Storage.ProcessingJob.Dispose()", span="39-39", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="WorkerFacts.cs"];
m26_13 [label="_connection.DeleteJobFromQueue(JobId, Queue)", span="41-41", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="WorkerFacts.cs"];
m26_14 [label="Exit HangFire.Storage.ProcessingJob.Dispose()", span="39-39", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="WorkerFacts.cs"];
m26_0 [label="Entry HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_1 [label="connection == null", span="26-26", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_3 [label="jobId == null", span="27-27", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_5 [label="queue == null", span="28-28", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_7 [label="_connection = connection", span="30-30", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_8 [label="JobId = jobId", span="32-32", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_9 [label="Queue = queue", span="33-33", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_2 [label="throw new ArgumentNullException(''connection'');", span="26-26", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_4 [label="throw new ArgumentNullException(''jobId'');", span="27-27", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_6 [label="throw new ArgumentNullException(''queue'');", span="28-28", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_10 [label="Exit HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="WorkerFacts.cs"];
m26_15 [label="Entry HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31", cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="WorkerFacts.cs"];
m26_16 [label="HangFire.Storage.ProcessingJob", span="", file="WorkerFacts.cs"];
n45 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
n45 -> n14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
n45 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
n45 -> n23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
n45 -> n24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
n45 -> n25  [key=1, style=dashed, color=red, label="Hangfire.BackgroundJobClient"];
n45 -> n39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
n45 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
n6 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
n6 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n6 -> n14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
n6 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n8 -> n16  [key=0, style=solid];
n8 -> n17  [key=2, style=dotted];
n10 -> n16  [key=0, style=solid];
n10 -> n17  [key=2, style=dotted];
n12 -> n16  [key=0, style=solid];
n12 -> n17  [key=2, style=dotted];
n16 -> n6  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n18 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
n18 -> n24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=0, style=solid];
n24 -> n25  [key=0, style=solid, color=red];
n24 -> n31  [key=2, style=dotted];
n24 -> n26  [key=1, style=dashed, color=red, label=context];
n20 -> n29  [key=0, style=solid];
n20 -> n17  [key=2, style=dotted];
n22 -> n29  [key=0, style=solid];
n22 -> n17  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n30  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid, color=red];
n25 -> n32  [key=2, style=dotted, color=red];
n26 -> n29  [key=0, style=solid, color=red];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n33  [key=2, style=dotted];
n29 -> n18  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
n34 -> n41  [key=1, style=dashed, color=red, label=string];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=0, style=solid];
n41 -> n42  [key=0, style=solid, color=red];
n41 -> n44  [key=2, style=dotted, color=red];
n36 -> n42  [key=0, style=solid];
n36 -> n17  [key=2, style=dotted];
n38 -> n42  [key=0, style=solid];
n38 -> n17  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n30  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid, color=red];
n40 -> n43  [key=2, style=dotted];
n42 -> n34  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_28  [key=2, style=dotted];
m1_40 -> m1_37  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_58 -> m1_63  [key=0, style=solid];
m1_58 -> m1_65  [key=0, style=bold, color=crimson];
m1_58 -> m1_66  [key=0, style=bold, color=crimson];
m1_58 -> m1_67  [key=0, style=bold, color=crimson];
m1_58 -> m1_68  [key=0, style=bold, color=crimson];
m1_58 -> m1_69  [key=0, style=bold, color=crimson];
m1_63 -> m1_64  [key=0, style=solid, color=red];
m1_63 -> m1_71  [key=2, style=dotted];
m1_63 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m1_63 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_74  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_75  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_76  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_77  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_78  [key=2, style=dotted];
m1_69 -> m1_79  [key=2, style=dotted];
m1_69 -> m1_80  [key=2, style=dotted];
m1_69 -> m1_81  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid, color=red];
m1_64 -> m1_72  [key=2, style=dotted, color=red];
m1_64 -> m1_73  [key=2, style=dotted, color=red];
m1_70 -> m1_58  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_28  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_29  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_31  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_32  [key=2, style=dotted];
m1_27 -> m1_21  [key=0, style=bold, color=blue];
m1_47 -> m1_20  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.Server.IServerSupervisor _bootstrapSupervisor"];
m1_20 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_46  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_48  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_49  [key=2, style=dotted];
m1_44 -> m1_50  [key=2, style=dotted];
m1_45 -> m1_20  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [key=2, style=dotted];
m1_83 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=2, style=dotted];
m1_35 -> m1_33  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_57  [key=2, style=dotted];
m1_52 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=supervisors];
m1_52 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=supervisors];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_58  [key=2, style=dotted];
m1_53 -> m1_59  [key=2, style=dotted];
m1_53 -> m1_60  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_61  [key=2, style=dotted];
m1_54 -> m1_59  [key=2, style=dotted];
m1_54 -> m1_60  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_62  [key=2, style=dotted];
m1_56 -> m1_51  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m1_6 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m1_6 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_8 -> m1_15  [key=0, style=solid];
m1_8 -> n17  [key=2, style=dotted];
m1_10 -> m1_15  [key=0, style=solid];
m1_10 -> n17  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [key=2, style=dotted];
m1_13 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_19  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_6  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_87 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_64  [key=1, style=dashed, color=red, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=0, style=solid];
m2_39 -> m2_33  [key=2, style=dotted];
m2_41 -> m2_44  [key=0, style=solid];
m2_41 -> m2_36  [key=2, style=dotted];
m2_41 -> m2_45  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_46  [key=2, style=dotted];
m2_43 -> m2_47  [key=2, style=dotted];
m2_40 -> m2_44  [key=0, style=solid];
m2_40 -> n17  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_44 -> m2_38  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_35 -> m2_35  [key=3, color=darkorchid, style=bold, label="Field variable System.Collections.Generic.IDictionary<string, string> _parameters"];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_53  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_54  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_48  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_23 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_23 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_23 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_24 -> m2_33  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_35  [key=2, style=dotted];
m2_28 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m2_28 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_29 -> m2_36  [key=2, style=dotted];
m2_30 -> m2_32  [key=0, style=solid];
m2_30 -> m2_37  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_25 -> m2_32  [key=0, style=solid];
m2_25 -> n17  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=0, style=solid];
m2_27 -> m2_32  [key=0, style=solid];
m2_27 -> m2_34  [key=2, style=dotted];
m2_32 -> m2_23  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m2_6 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m2_6 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m2_6 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m2_6 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m2_6 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m2_6 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_8 -> m2_20  [key=0, style=solid];
m2_8 -> n17  [key=2, style=dotted];
m2_10 -> m2_20  [key=0, style=solid];
m2_10 -> n17  [key=2, style=dotted];
m2_12 -> m2_20  [key=0, style=solid];
m2_12 -> n17  [key=2, style=dotted];
m2_14 -> m2_20  [key=0, style=solid];
m2_14 -> n17  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_6  [key=0, style=bold, color=blue];
m2_55 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m2_55 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [key=0, style=bold, color=blue];
m5_51 -> m5_52  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_35  [key=2, style=dotted];
m5_52 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_52 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_8  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_57  [key=2, style=dotted];
m5_56 -> m5_51  [key=0, style=bold, color=blue];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_4  [key=2, style=dotted, color=green];
m5_1 -> m5_6  [key=1, style=dashed, color=green, label="lambda expression"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_2 -> m5_7  [key=2, style=dotted];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_3 -> m5_4  [key=0, style=solid];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_14 -> m5_15  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_35  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_63  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_64  [key=2, style=dotted];
m5_73 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_74 -> m5_70  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_35  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_63  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_64  [key=2, style=dotted];
m5_61 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_62 -> m5_58  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_13 -> m5_10  [key=0, style=bold, color=blue];
m5_91 -> m5_92  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_35  [key=2, style=dotted];
m5_92 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_84  [key=2, style=dotted];
m5_93 -> m5_68  [key=2, style=dotted];
m5_93 -> m5_85  [key=2, style=dotted];
m5_93 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_86  [key=2, style=dotted];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_14  [key=2, style=dotted];
m5_96 -> m5_91  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_35  [key=2, style=dotted];
m5_39 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_13  [key=2, style=dotted];
m5_40 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_41 -> m5_38  [key=0, style=bold, color=blue];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_35  [key=2, style=dotted];
m5_79 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_84  [key=2, style=dotted];
m5_80 -> m5_68  [key=2, style=dotted];
m5_80 -> m5_85  [key=2, style=dotted];
m5_80 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_86  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_14  [key=2, style=dotted];
m5_83 -> m5_78  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_13  [key=2, style=dotted];
m5_10 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_14  [key=2, style=dotted];
m5_11 -> m5_4  [key=2, style=dotted];
m5_12 -> m5_9  [key=0, style=bold, color=blue];
m5_12 -> m5_5  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_5  [key=2, style=dotted, color=green];
m5_20 -> m5_13  [key=2, style=dotted];
m5_20 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_18 -> m5_20  [key=1, style=dashed, color=green, label=processingJob];
m5_18 -> m5_9  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_19 -> m5_5  [key=2, style=dotted];
m5_21 -> m5_17  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_14  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_9  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_16 -> m5_14  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_18  [key=2, style=dotted];
m5_25 -> m5_23  [key=0, style=bold, color=blue];
m5_43 -> m5_44  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_44 -> m5_42  [key=0, style=bold, color=blue];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [key=2, style=dotted];
m5_66 -> m5_69  [key=2, style=dotted];
m5_67 -> m5_65  [key=0, style=bold, color=blue];
m5_75 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_68  [key=2, style=dotted];
m5_76 -> m5_69  [key=2, style=dotted];
m5_77 -> m5_75  [key=0, style=bold, color=blue];
m5_87 -> m5_88  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [key=2, style=dotted];
m5_89 -> m5_87  [key=0, style=bold, color=blue];
m5_97 -> m5_98  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_90  [key=2, style=dotted];
m5_99 -> m5_97  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid, color=green];
m5_7 -> m5_8  [key=0, style=solid, color=green];
m5_7 -> m5_9  [key=2, style=dotted, color=green];
m5_45 -> m5_46  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_35  [key=2, style=dotted];
m5_46 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_46 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_8  [key=2, style=dotted];
m5_47 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label=newState];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_36  [key=2, style=dotted];
m5_50 -> m5_45  [key=0, style=bold, color=blue];
m5_22 -> m5_19  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_35  [key=2, style=dotted];
m5_27 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_27 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_27 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_27 -> m5_32  [key=1, style=dashed, color=red, label=context];
m5_27 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_14  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_14  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_36  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid, color=red];
m5_31 -> m5_14  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid, color=red];
m5_32 -> m5_36  [key=2, style=dotted, color=red];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_37  [key=2, style=dotted];
m5_34 -> m5_26  [key=0, style=bold, color=blue];
m5_35 -> m5_100  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_18  [key=2, style=dotted];
m5_101 -> m5_35  [key=0, style=bold, color=blue];
m5_102 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_32  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_102 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_103 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m6_0 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m6_0 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_0 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_0 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_6  [key=1, style=dashed, color=green, label=IRedisClient];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_0 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_13  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_3 -> m6_13  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_7  [key=0, style=solid];
m6_5 -> m6_13  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_15  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_22  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_0  [key=0, style=bold, color=blue];
m6_2 -> m6_13  [key=0, style=solid];
m6_2 -> n17  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_4 -> m6_13  [key=0, style=solid];
m6_4 -> n17  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_6 -> m6_13  [key=0, style=solid];
m6_6 -> n17  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_6 -> m6_15  [key=2, style=dotted, color=green];
m6_8 -> m6_13  [key=0, style=solid];
m6_8 -> n17  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_13 -> m6_0  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_25 -> m6_21  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=2, style=dotted];
m6_27 -> m6_30  [key=2, style=dotted];
m6_26 -> m6_28  [key=0, style=solid];
m6_26 -> n17  [key=2, style=dotted];
m6_28 -> m6_24  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_34  [key=2, style=dotted];
m6_33 -> m6_31  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_17 -> m6_21  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [key=2, style=dotted];
m6_19 -> m6_23  [key=2, style=dotted];
m6_18 -> m6_20  [key=0, style=solid];
m6_18 -> n17  [key=2, style=dotted];
m6_20 -> m6_16  [key=0, style=bold, color=blue];
m6_35 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_6  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_35 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m7_1 -> n32  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m9_3 -> n44  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m10_1 -> n43  [key=0, style=bold, color=blue];
m11_28 -> m11_32  [key=0, style=solid];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=2, style=dotted];
m11_32 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_28  [key=0, style=bold, color=blue];
m11_3 -> m11_4  [key=0, style=solid];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_1 -> m11_3  [key=2, style=dotted, color=red];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_4 -> m11_3  [key=0, style=bold, color=blue];
m11_31 -> m11_76  [key=0, style=solid];
m11_31 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.ClientExceptionContext"];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_78  [key=0, style=solid];
m11_76 -> m11_42  [key=2, style=dotted];
m11_77 -> m11_76  [key=0, style=solid];
m11_77 -> m11_79  [key=2, style=dotted];
m11_78 -> m11_31  [key=0, style=bold, color=blue];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_16 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_16 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_19  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_28  [key=2, style=dotted];
m11_19 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_26  [key=0, style=solid];
m11_20 -> m11_29  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_30  [key=2, style=dotted];
m11_22 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=exceptionContext];
m11_18 -> m11_26  [key=0, style=solid];
m11_18 -> n17  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_31  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_26  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_16  [key=0, style=bold, color=blue];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_5  [key=0, style=bold, color=blue];
m11_53 -> m11_54  [key=0, style=solid];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_11  [key=2, style=dotted];
m11_9 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_8 -> m11_9  [key=0, style=solid];
m11_10 -> m11_8  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_15  [key=2, style=dotted];
m11_14 -> m11_12  [key=0, style=bold, color=blue];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_49  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_50  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_56  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m11_51 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m11_45 -> m11_46  [key=0, style=solid];
m11_48 -> m11_45  [key=0, style=bold, color=blue];
m11_52 -> m11_51  [key=0, style=bold, color=blue];
m11_55 -> m11_53  [key=0, style=bold, color=blue];
m11_29 -> m11_36  [key=0, style=solid];
m11_29 -> m11_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_29 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_29 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_29 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>"];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_41  [key=2, style=dotted];
m11_36 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m11_36 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_37  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<Hangfire.Client.CreatedContext> continuation"];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_42  [key=2, style=dotted];
m11_38 -> m11_43  [key=2, style=dotted];
m11_38 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_44  [key=2, style=dotted];
m11_40 -> m11_29  [key=0, style=bold, color=blue];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m11_56 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m11_56 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m11_56 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m11_56 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m11_56 -> m11_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m11_56 -> m11_61  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Client.CreatedContext InvokeClientFilter"];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_73  [key=2, style=dotted];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_60  [key=0, style=solid];
m11_59 -> m11_72  [key=0, style=solid];
m11_59 -> m11_50  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_69  [key=0, style=solid];
m11_62 -> m11_74  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_50  [key=2, style=dotted];
m11_65 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m11_65 -> m11_70  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m11_65 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_75  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_75  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_60  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m11_61 -> m11_62  [key=0, style=solid];
m11_63 -> m11_64  [key=0, style=solid];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_71  [key=0, style=solid];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_69  [key=0, style=solid];
m11_71 -> m11_72  [key=0, style=solid];
m11_68 -> m11_72  [key=0, style=solid];
m11_72 -> m11_56  [key=0, style=bold, color=blue];
m11_80 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.JobCreationProcess"];
m11_80 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.JobCreationProcess"];
m11_80 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.JobCreationProcess"];
m11_81 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m11_82 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_82 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_83 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m11_84 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m11_85 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_36  [key=2, style=dotted];
m12_33 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_37 -> m12_38  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_29  [key=2, style=dotted];
m12_28 -> m12_26  [key=0, style=bold, color=blue];
m12_17 -> m12_327  [key=0, style=solid];
m12_327 -> m12_17  [key=0, style=bold, color=blue];
m12_25 -> m12_22  [key=0, style=bold, color=blue];
m12_185 -> m12_186  [key=0, style=solid];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_128  [key=2, style=dotted];
m12_186 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_186 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_128  [key=2, style=dotted];
m12_187 -> m12_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_187 -> m12_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_62  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_36  [key=2, style=dotted];
m12_193 -> m12_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_62  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_46  [key=2, style=dotted];
m12_190 -> m12_105  [key=2, style=dotted];
m12_190 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_190 -> m12_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_23  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_35  [key=2, style=dotted];
m12_194 -> m12_185  [key=0, style=bold, color=blue];
m12_13 -> m12_4  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m12_13 -> m12_43  [key=0, style=solid];
m12_13 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_164 -> m12_165  [key=0, style=solid];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_128  [key=2, style=dotted];
m12_165 -> m12_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_165 -> m12_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_62  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_46  [key=2, style=dotted];
m12_167 -> m12_105  [key=2, style=dotted];
m12_167 -> m12_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_167 -> m12_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_36  [key=2, style=dotted];
m12_171 -> m12_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_23  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_35  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_36  [key=2, style=dotted];
m12_170 -> m12_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_172 -> m12_164  [key=0, style=bold, color=blue];
m12_298 -> m12_299  [key=0, style=solid];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_128  [key=2, style=dotted];
m12_299 -> m12_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_299 -> m12_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_128  [key=2, style=dotted];
m12_300 -> m12_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_300 -> m12_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_301 -> m12_302  [key=0, style=solid];
m12_301 -> m12_62  [key=2, style=dotted];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_36  [key=2, style=dotted];
m12_307 -> m12_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_302 -> m12_303  [key=0, style=solid];
m12_302 -> m12_62  [key=2, style=dotted];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_46  [key=2, style=dotted];
m12_304 -> m12_105  [key=2, style=dotted];
m12_304 -> m12_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_304 -> m12_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_303 -> m12_304  [key=0, style=solid];
m12_303 -> m12_46  [key=2, style=dotted];
m12_303 -> m12_24  [key=2, style=dotted];
m12_303 -> m12_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_23  [key=2, style=dotted];
m12_305 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_306 -> m12_307  [key=0, style=solid];
m12_306 -> m12_106  [key=2, style=dotted];
m12_306 -> m12_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_308 -> m12_298  [key=0, style=bold, color=blue];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_40  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid, color=green];
m12_31 -> m12_32  [key=0, style=solid, color=green];
m12_31 -> m12_22  [key=2, style=dotted, color=green];
m12_31 -> m12_33  [key=2, style=dotted, color=green];
m12_31 -> m12_23  [key=2, style=dotted];
m12_32 -> m12_30  [key=0, style=bold, color=blue];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_35  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid, color=green];
m12_35 -> m12_37  [key=2, style=dotted, color=green];
m12_35 -> m12_26  [key=2, style=dotted, color=green];
m12_43 -> m12_45  [key=0, style=solid];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_46  [key=2, style=dotted];
m12_43 -> m12_23  [key=2, style=dotted];
m12_43 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_47  [key=2, style=dotted];
m12_44 -> m12_48  [key=2, style=dotted];
m12_44 -> m12_24  [key=2, style=dotted];
m12_44 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_45 -> m12_13  [key=0, style=bold, color=blue];
m12_45 -> m12_41  [key=0, style=bold, color=blue];
m12_97 -> m12_98  [key=0, style=solid];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_46  [key=2, style=dotted];
m12_98 -> m12_24  [key=2, style=dotted];
m12_98 -> m12_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_61  [key=2, style=dotted];
m12_99 -> m12_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_46  [key=2, style=dotted];
m12_100 -> m12_105  [key=2, style=dotted];
m12_100 -> m12_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_100 -> m12_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_62  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_23  [key=2, style=dotted];
m12_102 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_106  [key=2, style=dotted];
m12_103 -> m12_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_104 -> m12_97  [key=0, style=bold, color=blue];
m12_22 -> m12_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime value"];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_18  [key=0, style=bold, color=blue];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_328  [key=0, style=solid, color=red];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label=elapsedTime];
m12_0 -> m12_3  [key=1, style=dashed, color=green, label="System.Type"];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_4  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetQueue"];
m12_3 -> m12_4  [key=0, style=solid, color=green];
m12_3 -> m12_9  [key=2, style=dotted, color=green];
m12_3 -> m12_10  [key=2, style=dotted, color=green];
m12_3 -> m12_11  [key=2, style=dotted, color=green];
m12_3 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=state];
m12_1 -> m12_3  [key=0, style=solid, color=green];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_8  [key=2, style=dotted];
m12_1 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_12  [key=2, style=dotted];
m12_4 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m12_4 -> m12_11  [key=2, style=dotted];
m12_2 -> m12_7  [key=0, style=solid];
m12_2 -> n17  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_9  [key=2, style=dotted];
m12_2 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_2 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_5 -> m12_13  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_12  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_13  [key=2, style=dotted];
m12_7 -> m12_0  [key=0, style=bold, color=blue];
m12_328 -> m12_329  [key=0, style=solid, color=red];
m12_328 -> m12_330  [key=2, style=dotted, color=red];
m12_329 -> m12_23  [key=0, style=bold, color=blue];
m12_140 -> m12_141  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_128  [key=2, style=dotted];
m12_141 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_141 -> m12_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_141 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_128  [key=2, style=dotted];
m12_142 -> m12_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_142 -> m12_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_142 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_62  [key=2, style=dotted];
m12_145 -> m12_146  [key=0, style=solid];
m12_145 -> m12_46  [key=2, style=dotted];
m12_145 -> m12_84  [key=2, style=dotted];
m12_145 -> m12_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_46  [key=2, style=dotted];
m12_148 -> m12_84  [key=2, style=dotted];
m12_148 -> m12_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_62  [key=2, style=dotted];
m12_146 -> m12_147  [key=0, style=solid];
m12_146 -> m12_46  [key=2, style=dotted];
m12_146 -> m12_84  [key=2, style=dotted];
m12_146 -> m12_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_46  [key=2, style=dotted];
m12_147 -> m12_84  [key=2, style=dotted];
m12_147 -> m12_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_23  [key=2, style=dotted];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_35  [key=2, style=dotted];
m12_151 -> m12_140  [key=0, style=bold, color=blue];
m12_274 -> m12_275  [key=0, style=solid];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_128  [key=2, style=dotted];
m12_275 -> m12_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_62  [key=2, style=dotted];
m12_279 -> m12_280  [key=0, style=solid];
m12_279 -> m12_46  [key=2, style=dotted];
m12_279 -> m12_105  [key=2, style=dotted];
m12_279 -> m12_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_279 -> m12_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_237  [key=2, style=dotted];
m12_277 -> m12_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_277 -> m12_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_277 -> m12_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_46  [key=2, style=dotted];
m12_278 -> m12_238  [key=2, style=dotted];
m12_278 -> m12_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_280 -> m12_281  [key=0, style=solid];
m12_280 -> m12_23  [key=2, style=dotted];
m12_280 -> m12_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_281 -> m12_282  [key=0, style=solid];
m12_281 -> m12_106  [key=2, style=dotted];
m12_281 -> m12_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_282 -> m12_274  [key=0, style=bold, color=blue];
m12_53 -> m12_54  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_61  [key=2, style=dotted];
m12_54 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_62  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_36  [key=2, style=dotted];
m12_59 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_46  [key=2, style=dotted];
m12_56 -> m12_24  [key=2, style=dotted];
m12_56 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_23  [key=2, style=dotted];
m12_57 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_24  [key=2, style=dotted];
m12_58 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_60 -> m12_53  [key=0, style=bold, color=blue];
m12_228 -> m12_229  [key=0, style=solid];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_128  [key=2, style=dotted];
m12_229 -> m12_235  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_62  [key=2, style=dotted];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_36  [key=2, style=dotted];
m12_235 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_237  [key=2, style=dotted];
m12_231 -> m12_235  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_231 -> m12_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_231 -> m12_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_46  [key=2, style=dotted];
m12_232 -> m12_238  [key=2, style=dotted];
m12_232 -> m12_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_23  [key=2, style=dotted];
m12_233 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_24  [key=2, style=dotted];
m12_234 -> m12_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_236 -> m12_228  [key=0, style=bold, color=blue];
m12_251 -> m12_252  [key=0, style=solid];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_128  [key=2, style=dotted];
m12_252 -> m12_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_252 -> m12_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_128  [key=2, style=dotted];
m12_253 -> m12_255  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m12_254 -> m12_255  [key=0, style=solid];
m12_254 -> m12_62  [key=2, style=dotted];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_36  [key=2, style=dotted];
m12_260 -> m12_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_255 -> m12_256  [key=0, style=solid];
m12_255 -> m12_62  [key=2, style=dotted];
m12_256 -> m12_257  [key=0, style=solid];
m12_256 -> m12_237  [key=2, style=dotted];
m12_256 -> m12_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_256 -> m12_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_256 -> m12_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_46  [key=2, style=dotted];
m12_257 -> m12_238  [key=2, style=dotted];
m12_257 -> m12_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_23  [key=2, style=dotted];
m12_258 -> m12_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_24  [key=2, style=dotted];
m12_259 -> m12_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_261 -> m12_251  [key=0, style=bold, color=blue];
m12_38 -> m12_34  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? FromNullableStringTimestamp"];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_38 -> m12_40  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? FromNullableStringTimestamp"];
m12_41 -> m12_34  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_39 -> m12_12  [key=2, style=dotted];
m12_39 -> m12_41  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_37  [key=0, style=bold, color=blue];
m12_40 -> m12_42  [key=0, style=solid];
m12_42 -> m12_38  [key=0, style=bold, color=blue];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_46  [key=2, style=dotted];
m12_42 -> m12_24  [key=2, style=dotted];
m12_42 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_47 -> m12_48  [key=0, style=solid];
m12_207 -> m12_208  [key=0, style=solid];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_128  [key=2, style=dotted];
m12_208 -> m12_210  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_208 -> m12_214  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_62  [key=2, style=dotted];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_46  [key=2, style=dotted];
m12_210 -> m12_24  [key=2, style=dotted];
m12_210 -> m12_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_36  [key=2, style=dotted];
m12_214 -> m12_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_23  [key=2, style=dotted];
m12_211 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_24  [key=2, style=dotted];
m12_212 -> m12_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_36  [key=2, style=dotted];
m12_213 -> m12_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_215 -> m12_207  [key=0, style=bold, color=blue];
m12_73 -> m12_74  [key=0, style=solid];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_61  [key=2, style=dotted];
m12_74 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m12_74 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_61  [key=2, style=dotted];
m12_75 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_46  [key=2, style=dotted];
m12_77 -> m12_84  [key=2, style=dotted];
m12_77 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_62  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_46  [key=2, style=dotted];
m12_76 -> m12_84  [key=2, style=dotted];
m12_76 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_62  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_46  [key=2, style=dotted];
m12_80 -> m12_24  [key=2, style=dotted];
m12_80 -> m12_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_23  [key=2, style=dotted];
m12_81 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_24  [key=2, style=dotted];
m12_82 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_83 -> m12_73  [key=0, style=bold, color=blue];
m12_324 -> m12_325  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_17  [key=2, style=dotted];
m12_16 -> m12_14  [key=0, style=bold, color=blue];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_35  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_49 -> m12_47  [key=0, style=bold, color=blue];
m12_52 -> m12_50  [key=0, style=bold, color=blue];
m12_63 -> m12_64  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_35  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_40  [key=2, style=dotted];
m12_65 -> m12_63  [key=0, style=bold, color=blue];
m12_68 -> m12_66  [key=0, style=bold, color=blue];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_24  [key=2, style=dotted];
m12_70 -> m12_72  [key=2, style=dotted];
m12_71 -> m12_69  [key=0, style=bold, color=blue];
m12_85 -> m12_86  [key=0, style=solid];
m12_88 -> m12_89  [key=0, style=solid];
m12_91 -> m12_92  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_35  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_24  [key=2, style=dotted];
m12_86 -> m12_72  [key=2, style=dotted];
m12_87 -> m12_85  [key=0, style=bold, color=blue];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_24  [key=2, style=dotted];
m12_89 -> m12_72  [key=2, style=dotted];
m12_90 -> m12_88  [key=0, style=bold, color=blue];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_40  [key=2, style=dotted];
m12_93 -> m12_91  [key=0, style=bold, color=blue];
m12_96 -> m12_94  [key=0, style=bold, color=blue];
m12_107 -> m12_108  [key=0, style=solid];
m12_110 -> m12_111  [key=0, style=solid];
m12_113 -> m12_114  [key=0, style=solid];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_35  [key=2, style=dotted];
m12_116 -> m12_117  [key=0, style=solid];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_40  [key=2, style=dotted];
m12_109 -> m12_107  [key=0, style=bold, color=blue];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_24  [key=2, style=dotted];
m12_111 -> m12_72  [key=2, style=dotted];
m12_112 -> m12_110  [key=0, style=bold, color=blue];
m12_114 -> m12_115  [key=0, style=solid];
m12_115 -> m12_113  [key=0, style=bold, color=blue];
m12_118 -> m12_116  [key=0, style=bold, color=blue];
m12_129 -> m12_130  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_136 -> m12_137  [key=0, style=solid];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_24  [key=2, style=dotted];
m12_130 -> m12_132  [key=2, style=dotted];
m12_131 -> m12_129  [key=0, style=bold, color=blue];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_40  [key=2, style=dotted];
m12_135 -> m12_133  [key=0, style=bold, color=blue];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_24  [key=2, style=dotted];
m12_137 -> m12_139  [key=2, style=dotted];
m12_138 -> m12_136  [key=0, style=bold, color=blue];
m12_152 -> m12_153  [key=0, style=solid];
m12_155 -> m12_156  [key=0, style=solid];
m12_158 -> m12_159  [key=0, style=solid];
m12_161 -> m12_162  [key=0, style=solid];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_24  [key=2, style=dotted];
m12_153 -> m12_132  [key=2, style=dotted];
m12_154 -> m12_152  [key=0, style=bold, color=blue];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_24  [key=2, style=dotted];
m12_156 -> m12_132  [key=2, style=dotted];
m12_157 -> m12_155  [key=0, style=bold, color=blue];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_24  [key=2, style=dotted];
m12_159 -> m12_139  [key=2, style=dotted];
m12_160 -> m12_158  [key=0, style=bold, color=blue];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_24  [key=2, style=dotted];
m12_162 -> m12_139  [key=2, style=dotted];
m12_163 -> m12_161  [key=0, style=bold, color=blue];
m12_173 -> m12_174  [key=0, style=solid];
m12_176 -> m12_177  [key=0, style=solid];
m12_179 -> m12_180  [key=0, style=solid];
m12_182 -> m12_183  [key=0, style=solid];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_24  [key=2, style=dotted];
m12_174 -> m12_132  [key=2, style=dotted];
m12_175 -> m12_173  [key=0, style=bold, color=blue];
m12_177 -> m12_178  [key=0, style=solid];
m12_178 -> m12_176  [key=0, style=bold, color=blue];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_40  [key=2, style=dotted];
m12_181 -> m12_179  [key=0, style=bold, color=blue];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_24  [key=2, style=dotted];
m12_183 -> m12_139  [key=2, style=dotted];
m12_184 -> m12_182  [key=0, style=bold, color=blue];
m12_195 -> m12_196  [key=0, style=solid];
m12_198 -> m12_199  [key=0, style=solid];
m12_201 -> m12_202  [key=0, style=solid];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_24  [key=2, style=dotted];
m12_196 -> m12_132  [key=2, style=dotted];
m12_197 -> m12_195  [key=0, style=bold, color=blue];
m12_199 -> m12_200  [key=0, style=solid];
m12_200 -> m12_198  [key=0, style=bold, color=blue];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_24  [key=2, style=dotted];
m12_202 -> m12_139  [key=2, style=dotted];
m12_202 -> m12_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_203 -> m12_201  [key=0, style=bold, color=blue];
m12_204 -> m12_205  [key=0, style=solid];
m12_205 -> m12_206  [key=0, style=solid];
m12_206 -> m12_204  [key=0, style=bold, color=blue];
m12_216 -> m12_217  [key=0, style=solid];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_35  [key=2, style=dotted];
m12_219 -> m12_220  [key=0, style=solid];
m12_222 -> m12_223  [key=0, style=solid];
m12_225 -> m12_226  [key=0, style=solid];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_24  [key=2, style=dotted];
m12_217 -> m12_132  [key=2, style=dotted];
m12_218 -> m12_216  [key=0, style=bold, color=blue];
m12_221 -> m12_219  [key=0, style=bold, color=blue];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_40  [key=2, style=dotted];
m12_224 -> m12_222  [key=0, style=bold, color=blue];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_24  [key=2, style=dotted];
m12_226 -> m12_139  [key=2, style=dotted];
m12_227 -> m12_225  [key=0, style=bold, color=blue];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_24  [key=2, style=dotted];
m12_246 -> m12_139  [key=2, style=dotted];
m12_246 -> m12_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_249 -> m12_250  [key=0, style=solid];
m12_239 -> m12_240  [key=0, style=solid];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_35  [key=2, style=dotted];
m12_242 -> m12_243  [key=0, style=solid];
m12_245 -> m12_246  [key=0, style=solid];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_40  [key=2, style=dotted];
m12_241 -> m12_239  [key=0, style=bold, color=blue];
m12_244 -> m12_242  [key=0, style=bold, color=blue];
m12_247 -> m12_245  [key=0, style=bold, color=blue];
m12_248 -> m12_249  [key=0, style=solid];
m12_250 -> m12_248  [key=0, style=bold, color=blue];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_24  [key=2, style=dotted];
m12_269 -> m12_139  [key=2, style=dotted];
m12_269 -> m12_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_272 -> m12_273  [key=0, style=solid];
m12_262 -> m12_263  [key=0, style=solid];
m12_266 -> m12_267  [key=0, style=solid];
m12_266 -> m12_35  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_268 -> m12_269  [key=0, style=solid];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_40  [key=2, style=dotted];
m12_264 -> m12_262  [key=0, style=bold, color=blue];
m12_267 -> m12_265  [key=0, style=bold, color=blue];
m12_270 -> m12_268  [key=0, style=bold, color=blue];
m12_271 -> m12_272  [key=0, style=solid];
m12_273 -> m12_271  [key=0, style=bold, color=blue];
m12_287 -> m12_288  [key=0, style=solid];
m12_287 -> m12_24  [key=2, style=dotted];
m12_287 -> m12_139  [key=2, style=dotted];
m12_287 -> m12_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_290 -> m12_291  [key=0, style=solid];
m12_283 -> m12_284  [key=0, style=solid];
m12_286 -> m12_287  [key=0, style=solid];
m12_292 -> m12_293  [key=0, style=solid];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_35  [key=2, style=dotted];
m12_295 -> m12_296  [key=0, style=solid];
m12_284 -> m12_285  [key=0, style=solid];
m12_284 -> m12_40  [key=2, style=dotted];
m12_285 -> m12_283  [key=0, style=bold, color=blue];
m12_288 -> m12_286  [key=0, style=bold, color=blue];
m12_289 -> m12_290  [key=0, style=solid];
m12_291 -> m12_289  [key=0, style=bold, color=blue];
m12_293 -> m12_294  [key=0, style=solid];
m12_294 -> m12_292  [key=0, style=bold, color=blue];
m12_297 -> m12_295  [key=0, style=bold, color=blue];
m12_309 -> m12_310  [key=0, style=solid];
m12_312 -> m12_313  [key=0, style=solid];
m12_315 -> m12_316  [key=0, style=solid];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_35  [key=2, style=dotted];
m12_318 -> m12_319  [key=0, style=solid];
m12_321 -> m12_322  [key=0, style=solid];
m12_310 -> m12_311  [key=0, style=solid];
m12_310 -> m12_40  [key=2, style=dotted];
m12_311 -> m12_309  [key=0, style=bold, color=blue];
m12_313 -> m12_314  [key=0, style=solid];
m12_313 -> m12_24  [key=2, style=dotted];
m12_313 -> m12_139  [key=2, style=dotted];
m12_314 -> m12_312  [key=0, style=bold, color=blue];
m12_316 -> m12_317  [key=0, style=solid];
m12_317 -> m12_315  [key=0, style=bold, color=blue];
m12_320 -> m12_318  [key=0, style=bold, color=blue];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_24  [key=2, style=dotted];
m12_322 -> m12_139  [key=2, style=dotted];
m12_322 -> m12_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_323 -> m12_321  [key=0, style=bold, color=blue];
m12_325 -> m12_326  [key=0, style=solid];
m12_326 -> m12_324  [key=0, style=bold, color=blue];
m12_36 -> m12_34  [key=0, style=bold, color=blue];
m12_34 -> m12_30  [key=0, style=bold, color=blue];
m12_34 -> m12_35  [key=0, style=solid, color=green];
m12_34 -> m12_26  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime FromStringTimestamp"];
m12_34 -> m12_38  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_23  [key=2, style=dotted];
m12_19 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_24  [key=2, style=dotted];
m12_20 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_25  [key=2, style=dotted];
m12_119 -> m12_120  [key=0, style=solid];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_128  [key=2, style=dotted];
m12_120 -> m12_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_120 -> m12_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_62  [key=2, style=dotted];
m12_122 -> m12_123  [key=0, style=solid];
m12_122 -> m12_46  [key=2, style=dotted];
m12_122 -> m12_84  [key=2, style=dotted];
m12_122 -> m12_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_46  [key=2, style=dotted];
m12_124 -> m12_84  [key=2, style=dotted];
m12_124 -> m12_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_46  [key=2, style=dotted];
m12_123 -> m12_84  [key=2, style=dotted];
m12_123 -> m12_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_23  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_35  [key=2, style=dotted];
m12_127 -> m12_119  [key=0, style=bold, color=blue];
m12_331 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_230  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_232  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_266  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_276  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_303  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_305  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_331 -> m12_328  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m12_332 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_333 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_334 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_335 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_336 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_337 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_338 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_339 -> m12_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_339 -> m12_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_340 -> m12_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_341 -> m12_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_341 -> m12_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_342 -> m12_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_342 -> m12_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_343 -> m12_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m12_344 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m13_5 -> m13_11  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=0, style=solid];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_11  [key=0, style=solid];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_1 -> m13_5  [key=2, style=dotted, color=green];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_7  [key=2, style=dotted];
m13_16 -> m13_0  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_8  [key=2, style=dotted];
m13_3 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m13_3 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m13_3 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m13_4 -> m13_0  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_6  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_12  [key=2, style=dotted];
m13_6 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m13_6 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m13_6 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m13_17 -> m13_14  [key=0, style=bold, color=blue];
m13_14 -> m13_15  [key=0, style=solid];
m13_13 -> m13_18  [key=0, style=solid];
m13_13 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label=long];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_21  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_22  [key=2, style=dotted];
m13_19 -> m13_23  [key=2, style=dotted];
m13_19 -> m13_24  [key=2, style=dotted];
m13_20 -> m13_13  [key=0, style=bold, color=blue];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_13  [key=2, style=dotted];
m13_8 -> m13_14  [key=2, style=dotted];
m13_8 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label=delay];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_15  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_16  [key=2, style=dotted];
m13_10 -> m13_17  [key=2, style=dotted];
m13_11 -> m13_3  [key=0, style=bold, color=blue];
m13_25 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RetryAttribute"];
m13_25 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RetryAttribute"];
m13_25 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RetryAttribute"];
m14_376 -> m14_377  [key=0, style=solid];
m14_377 -> m14_378  [key=0, style=solid];
m14_377 -> m14_59  [key=2, style=dotted];
m14_377 -> m14_26  [key=2, style=dotted];
m14_377 -> m14_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_378 -> m14_379  [key=0, style=solid];
m14_378 -> m14_58  [key=2, style=dotted];
m14_378 -> m14_381  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_379 -> m14_380  [key=0, style=solid];
m14_379 -> m14_25  [key=2, style=dotted];
m14_379 -> m14_387  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_381 -> m14_382  [key=0, style=solid];
m14_381 -> m14_46  [key=2, style=dotted];
m14_381 -> m14_389  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_380 -> m14_381  [key=0, style=solid];
m14_380 -> m14_26  [key=2, style=dotted];
m14_380 -> m14_386  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_382 -> m14_376  [key=0, style=bold, color=blue];
m14_152 -> m14_153  [key=0, style=solid];
m14_153 -> m14_154  [key=0, style=solid];
m14_153 -> m14_58  [key=2, style=dotted];
m14_153 -> m14_156  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_154 -> m14_155  [key=0, style=solid];
m14_154 -> m14_59  [key=2, style=dotted];
m14_154 -> m14_118  [key=2, style=dotted];
m14_154 -> m14_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_156 -> m14_157  [key=0, style=solid];
m14_156 -> m14_59  [key=2, style=dotted];
m14_156 -> m14_118  [key=2, style=dotted];
m14_156 -> m14_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_155 -> m14_156  [key=0, style=solid];
m14_155 -> m14_59  [key=2, style=dotted];
m14_155 -> m14_118  [key=2, style=dotted];
m14_155 -> m14_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_157 -> m14_158  [key=0, style=solid];
m14_157 -> m14_25  [key=2, style=dotted];
m14_158 -> m14_159  [key=0, style=solid];
m14_158 -> m14_31  [key=2, style=dotted];
m14_159 -> m14_152  [key=0, style=bold, color=blue];
m14_170 -> m14_171  [key=0, style=solid];
m14_171 -> m14_172  [key=0, style=solid];
m14_171 -> m14_58  [key=2, style=dotted];
m14_171 -> m14_173  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m14_171 -> m14_176  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m14_172 -> m14_173  [key=0, style=solid];
m14_172 -> m14_58  [key=2, style=dotted];
m14_172 -> m14_174  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m14_172 -> m14_175  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m14_173 -> m14_174  [key=0, style=solid];
m14_173 -> m14_59  [key=2, style=dotted];
m14_173 -> m14_118  [key=2, style=dotted];
m14_173 -> m14_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_176 -> m14_177  [key=0, style=solid];
m14_176 -> m14_59  [key=2, style=dotted];
m14_176 -> m14_118  [key=2, style=dotted];
m14_176 -> m14_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_174 -> m14_175  [key=0, style=solid];
m14_174 -> m14_59  [key=2, style=dotted];
m14_174 -> m14_118  [key=2, style=dotted];
m14_174 -> m14_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_175 -> m14_176  [key=0, style=solid];
m14_175 -> m14_59  [key=2, style=dotted];
m14_175 -> m14_118  [key=2, style=dotted];
m14_175 -> m14_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_177 -> m14_178  [key=0, style=solid];
m14_177 -> m14_25  [key=2, style=dotted];
m14_178 -> m14_179  [key=0, style=solid];
m14_178 -> m14_31  [key=2, style=dotted];
m14_179 -> m14_170  [key=0, style=bold, color=blue];
m14_359 -> m14_360  [key=0, style=solid];
m14_360 -> m14_361  [key=0, style=solid];
m14_360 -> m14_58  [key=2, style=dotted];
m14_361 -> m14_362  [key=0, style=solid];
m14_361 -> m14_59  [key=2, style=dotted];
m14_361 -> m14_26  [key=2, style=dotted];
m14_361 -> m14_367  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_362 -> m14_363  [key=0, style=solid];
m14_362 -> m14_59  [key=2, style=dotted];
m14_362 -> m14_26  [key=2, style=dotted];
m14_362 -> m14_370  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_363 -> m14_364  [key=0, style=solid];
m14_363 -> m14_25  [key=2, style=dotted];
m14_363 -> m14_374  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_364 -> m14_365  [key=0, style=solid];
m14_364 -> m14_26  [key=2, style=dotted];
m14_364 -> m14_373  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_365 -> m14_366  [key=0, style=solid];
m14_365 -> m14_26  [key=2, style=dotted];
m14_366 -> m14_359  [key=0, style=bold, color=blue];
m14_319 -> m14_320  [key=0, style=solid];
m14_320 -> m14_321  [key=0, style=solid];
m14_320 -> m14_58  [key=2, style=dotted];
m14_320 -> m14_326  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m14_321 -> m14_322  [key=0, style=solid];
m14_321 -> m14_58  [key=2, style=dotted];
m14_321 -> m14_323  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m14_326 -> m14_327  [key=0, style=solid];
m14_326 -> m14_46  [key=2, style=dotted];
m14_326 -> m14_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_322 -> m14_323  [key=0, style=solid];
m14_322 -> m14_59  [key=2, style=dotted];
m14_322 -> m14_26  [key=2, style=dotted];
m14_322 -> m14_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_323 -> m14_324  [key=0, style=solid];
m14_323 -> m14_59  [key=2, style=dotted];
m14_323 -> m14_138  [key=2, style=dotted];
m14_323 -> m14_331  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_323 -> m14_334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_25  [key=2, style=dotted];
m14_324 -> m14_338  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_325 -> m14_326  [key=0, style=solid];
m14_325 -> m14_139  [key=2, style=dotted];
m14_325 -> m14_337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_327 -> m14_319  [key=0, style=bold, color=blue];
m14_404 -> m14_405  [key=0, style=solid];
m14_405 -> m14_406  [key=0, style=solid];
m14_405 -> m14_58  [key=2, style=dotted];
m14_406 -> m14_407  [key=0, style=solid];
m14_406 -> m14_59  [key=2, style=dotted];
m14_406 -> m14_26  [key=2, style=dotted];
m14_406 -> m14_410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_407 -> m14_408  [key=0, style=solid];
m14_407 -> m14_25  [key=2, style=dotted];
m14_407 -> m14_414  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_408 -> m14_409  [key=0, style=solid];
m14_408 -> m14_26  [key=2, style=dotted];
m14_408 -> m14_413  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_409 -> m14_404  [key=0, style=bold, color=blue];
m14_131 -> m14_132  [key=0, style=solid];
m14_132 -> m14_133  [key=0, style=solid];
m14_132 -> m14_59  [key=2, style=dotted];
m14_132 -> m14_26  [key=2, style=dotted];
m14_132 -> m14_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_133 -> m14_134  [key=0, style=solid];
m14_133 -> m14_58  [key=2, style=dotted];
m14_134 -> m14_135  [key=0, style=solid];
m14_134 -> m14_59  [key=2, style=dotted];
m14_134 -> m14_138  [key=2, style=dotted];
m14_134 -> m14_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_134 -> m14_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_135 -> m14_136  [key=0, style=solid];
m14_135 -> m14_25  [key=2, style=dotted];
m14_135 -> m14_150  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_136 -> m14_137  [key=0, style=solid];
m14_136 -> m14_139  [key=2, style=dotted];
m14_136 -> m14_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_137 -> m14_131  [key=0, style=bold, color=blue];
m14_296 -> m14_297  [key=0, style=solid];
m14_297 -> m14_298  [key=0, style=solid];
m14_297 -> m14_58  [key=2, style=dotted];
m14_297 -> m14_300  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_298 -> m14_299  [key=0, style=solid];
m14_298 -> m14_261  [key=2, style=dotted];
m14_298 -> m14_300  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_298 -> m14_308  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_298 -> m14_311  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_300 -> m14_301  [key=0, style=solid];
m14_300 -> m14_59  [key=2, style=dotted];
m14_300 -> m14_138  [key=2, style=dotted];
m14_300 -> m14_307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_300 -> m14_313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_299 -> m14_300  [key=0, style=solid];
m14_299 -> m14_59  [key=2, style=dotted];
m14_299 -> m14_262  [key=2, style=dotted];
m14_299 -> m14_304  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_301 -> m14_302  [key=0, style=solid];
m14_301 -> m14_25  [key=2, style=dotted];
m14_301 -> m14_317  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_302 -> m14_303  [key=0, style=solid];
m14_302 -> m14_139  [key=2, style=dotted];
m14_302 -> m14_316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_303 -> m14_296  [key=0, style=bold, color=blue];
m14_41 -> m14_42  [key=0, style=solid];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_25  [key=2, style=dotted];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_31  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_46  [key=2, style=dotted];
m14_44 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_45 -> m14_41  [key=0, style=bold, color=blue];
m14_71 -> m14_72  [key=0, style=solid];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_58  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_25  [key=2, style=dotted];
m14_73 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_59  [key=2, style=dotted];
m14_74 -> m14_60  [key=2, style=dotted];
m14_74 -> m14_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_31  [key=2, style=dotted];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_27  [key=2, style=dotted];
m14_77 -> m14_71  [key=0, style=bold, color=blue];
m14_51 -> m14_52  [key=0, style=solid];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_58  [key=2, style=dotted];
m14_52 -> m14_56  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_25  [key=2, style=dotted];
m14_53 -> m14_55  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_46  [key=2, style=dotted];
m14_56 -> m14_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_59  [key=2, style=dotted];
m14_54 -> m14_60  [key=2, style=dotted];
m14_54 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_31  [key=2, style=dotted];
m14_57 -> m14_51  [key=0, style=bold, color=blue];
m14_19 -> m14_416  [key=0, style=solid];
m14_416 -> m14_19  [key=0, style=bold, color=blue];
m14_275 -> m14_276  [key=0, style=solid];
m14_276 -> m14_277  [key=0, style=solid];
m14_276 -> m14_58  [key=2, style=dotted];
m14_276 -> m14_282  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m14_277 -> m14_278  [key=0, style=solid];
m14_277 -> m14_58  [key=2, style=dotted];
m14_282 -> m14_283  [key=0, style=solid];
m14_282 -> m14_46  [key=2, style=dotted];
m14_282 -> m14_290  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_278 -> m14_279  [key=0, style=solid];
m14_278 -> m14_261  [key=2, style=dotted];
m14_278 -> m14_282  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_278 -> m14_291  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_278 -> m14_294  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_279 -> m14_280  [key=0, style=solid];
m14_279 -> m14_59  [key=2, style=dotted];
m14_279 -> m14_262  [key=2, style=dotted];
m14_279 -> m14_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_280 -> m14_281  [key=0, style=solid];
m14_280 -> m14_25  [key=2, style=dotted];
m14_280 -> m14_288  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_281 -> m14_282  [key=0, style=solid];
m14_281 -> m14_26  [key=2, style=dotted];
m14_281 -> m14_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_283 -> m14_275  [key=0, style=bold, color=blue];
m14_232 -> m14_233  [key=0, style=solid];
m14_233 -> m14_234  [key=0, style=solid];
m14_233 -> m14_58  [key=2, style=dotted];
m14_233 -> m14_239  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_234 -> m14_235  [key=0, style=solid];
m14_234 -> m14_59  [key=2, style=dotted];
m14_234 -> m14_26  [key=2, style=dotted];
m14_234 -> m14_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_239 -> m14_240  [key=0, style=solid];
m14_239 -> m14_46  [key=2, style=dotted];
m14_239 -> m14_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_235 -> m14_236  [key=0, style=solid];
m14_235 -> m14_25  [key=2, style=dotted];
m14_235 -> m14_245  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_236 -> m14_237  [key=0, style=solid];
m14_236 -> m14_26  [key=2, style=dotted];
m14_236 -> m14_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_237 -> m14_238  [key=0, style=solid];
m14_237 -> m14_26  [key=2, style=dotted];
m14_238 -> m14_239  [key=0, style=solid];
m14_238 -> m14_46  [key=2, style=dotted];
m14_238 -> m14_247  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_240 -> m14_232  [key=0, style=bold, color=blue];
m14_25 -> m14_417  [key=0, style=solid, color=red];
m14_417 -> m14_418  [key=0, style=solid, color=red];
m14_417 -> m14_419  [key=2, style=dotted, color=red];
m14_418 -> m14_25  [key=0, style=bold, color=blue];
m14_392 -> m14_393  [key=0, style=solid];
m14_393 -> m14_394  [key=0, style=solid];
m14_393 -> m14_58  [key=2, style=dotted];
m14_394 -> m14_395  [key=0, style=solid];
m14_394 -> m14_59  [key=2, style=dotted];
m14_394 -> m14_26  [key=2, style=dotted];
m14_394 -> m14_398  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_395 -> m14_396  [key=0, style=solid];
m14_395 -> m14_25  [key=2, style=dotted];
m14_395 -> m14_402  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_396 -> m14_397  [key=0, style=solid];
m14_396 -> m14_26  [key=2, style=dotted];
m14_396 -> m14_401  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_397 -> m14_392  [key=0, style=bold, color=blue];
m14_253 -> m14_254  [key=0, style=solid];
m14_254 -> m14_255  [key=0, style=solid];
m14_254 -> m14_58  [key=2, style=dotted];
m14_254 -> m14_259  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_255 -> m14_256  [key=0, style=solid];
m14_255 -> m14_261  [key=2, style=dotted];
m14_255 -> m14_259  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_255 -> m14_270  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_255 -> m14_273  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_259 -> m14_260  [key=0, style=solid];
m14_259 -> m14_46  [key=2, style=dotted];
m14_259 -> m14_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_256 -> m14_257  [key=0, style=solid];
m14_256 -> m14_59  [key=2, style=dotted];
m14_256 -> m14_262  [key=2, style=dotted];
m14_256 -> m14_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_257 -> m14_258  [key=0, style=solid];
m14_257 -> m14_25  [key=2, style=dotted];
m14_257 -> m14_267  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_258 -> m14_259  [key=0, style=solid];
m14_258 -> m14_26  [key=2, style=dotted];
m14_258 -> m14_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_260 -> m14_253  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_9  [key=2, style=dotted];
m14_1 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label=workerContext];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_10  [key=2, style=dotted];
m14_2 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label=connection];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_12  [key=2, style=dotted];
m14_5 -> m14_13  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_3 -> m14_3  [key=3, color=darkorchid, style=bold, label="Local variable string jobId"];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_11  [key=2, style=dotted];
m14_4 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_14  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_15  [key=2, style=dotted];
m14_8 -> m14_0  [key=0, style=bold, color=blue];
m14_192 -> m14_193  [key=0, style=solid];
m14_193 -> m14_194  [key=0, style=solid];
m14_193 -> m14_58  [key=2, style=dotted];
m14_193 -> m14_198  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_194 -> m14_195  [key=0, style=solid];
m14_194 -> m14_59  [key=2, style=dotted];
m14_194 -> m14_138  [key=2, style=dotted];
m14_194 -> m14_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_194 -> m14_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_198 -> m14_199  [key=0, style=solid];
m14_198 -> m14_46  [key=2, style=dotted];
m14_198 -> m14_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_195 -> m14_196  [key=0, style=solid];
m14_195 -> m14_25  [key=2, style=dotted];
m14_196 -> m14_197  [key=0, style=solid];
m14_196 -> m14_31  [key=2, style=dotted];
m14_197 -> m14_198  [key=0, style=solid];
m14_197 -> m14_46  [key=2, style=dotted];
m14_197 -> m14_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_199 -> m14_192  [key=0, style=bold, color=blue];
m14_413 -> m14_414  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [key=2, style=dotted];
m14_18 -> m14_16  [key=0, style=bold, color=blue];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_31  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_30 -> m14_28  [key=0, style=bold, color=blue];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_40  [key=2, style=dotted];
m14_37 -> m14_38  [key=0, style=solid];
m14_39 -> m14_37  [key=0, style=bold, color=blue];
m14_47 -> m14_48  [key=0, style=solid];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_26  [key=2, style=dotted];
m14_48 -> m14_50  [key=2, style=dotted];
m14_49 -> m14_47  [key=0, style=bold, color=blue];
m14_61 -> m14_62  [key=0, style=solid];
m14_64 -> m14_65  [key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_26  [key=2, style=dotted];
m14_62 -> m14_50  [key=2, style=dotted];
m14_63 -> m14_61  [key=0, style=bold, color=blue];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_26  [key=2, style=dotted];
m14_65 -> m14_67  [key=2, style=dotted];
m14_65 -> m14_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_66 -> m14_64  [key=0, style=bold, color=blue];
m14_68 -> m14_69  [key=0, style=solid];
m14_69 -> m14_70  [key=0, style=solid];
m14_70 -> m14_68  [key=0, style=bold, color=blue];
m14_78 -> m14_79  [key=0, style=solid];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_26  [key=2, style=dotted];
m14_79 -> m14_50  [key=2, style=dotted];
m14_80 -> m14_78  [key=0, style=bold, color=blue];
m14_86 -> m14_87  [key=0, style=solid];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_31  [key=2, style=dotted];
m14_89 -> m14_90  [key=0, style=solid];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_26  [key=2, style=dotted];
m14_87 -> m14_50  [key=2, style=dotted];
m14_88 -> m14_86  [key=0, style=bold, color=blue];
m14_91 -> m14_89  [key=0, style=bold, color=blue];
m14_99 -> m14_100  [key=0, style=solid];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_31  [key=2, style=dotted];
m14_102 -> m14_103  [key=0, style=solid];
m14_105 -> m14_106  [key=0, style=solid];
m14_100 -> m14_101  [key=0, style=solid];
m14_100 -> m14_26  [key=2, style=dotted];
m14_100 -> m14_50  [key=2, style=dotted];
m14_101 -> m14_99  [key=0, style=bold, color=blue];
m14_104 -> m14_102  [key=0, style=bold, color=blue];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_26  [key=2, style=dotted];
m14_106 -> m14_108  [key=2, style=dotted];
m14_107 -> m14_105  [key=0, style=bold, color=blue];
m14_119 -> m14_120  [key=0, style=solid];
m14_122 -> m14_123  [key=0, style=solid];
m14_125 -> m14_126  [key=0, style=solid];
m14_129 -> m14_130  [key=0, style=solid];
m14_129 -> m14_31  [key=2, style=dotted];
m14_128 -> m14_129  [key=0, style=solid];
m14_120 -> m14_121  [key=0, style=solid];
m14_120 -> m14_26  [key=2, style=dotted];
m14_120 -> m14_108  [key=2, style=dotted];
m14_121 -> m14_119  [key=0, style=bold, color=blue];
m14_123 -> m14_124  [key=0, style=solid];
m14_123 -> m14_26  [key=2, style=dotted];
m14_123 -> m14_108  [key=2, style=dotted];
m14_124 -> m14_122  [key=0, style=bold, color=blue];
m14_126 -> m14_127  [key=0, style=solid];
m14_126 -> m14_26  [key=2, style=dotted];
m14_126 -> m14_50  [key=2, style=dotted];
m14_127 -> m14_125  [key=0, style=bold, color=blue];
m14_130 -> m14_128  [key=0, style=bold, color=blue];
m14_140 -> m14_141  [key=0, style=solid];
m14_143 -> m14_144  [key=0, style=solid];
m14_146 -> m14_147  [key=0, style=solid];
m14_150 -> m14_151  [key=0, style=solid];
m14_150 -> m14_31  [key=2, style=dotted];
m14_149 -> m14_150  [key=0, style=solid];
m14_141 -> m14_142  [key=0, style=solid];
m14_141 -> m14_26  [key=2, style=dotted];
m14_141 -> m14_50  [key=2, style=dotted];
m14_142 -> m14_140  [key=0, style=bold, color=blue];
m14_144 -> m14_145  [key=0, style=solid];
m14_144 -> m14_26  [key=2, style=dotted];
m14_144 -> m14_108  [key=2, style=dotted];
m14_145 -> m14_143  [key=0, style=bold, color=blue];
m14_147 -> m14_148  [key=0, style=solid];
m14_148 -> m14_146  [key=0, style=bold, color=blue];
m14_151 -> m14_149  [key=0, style=bold, color=blue];
m14_160 -> m14_161  [key=0, style=solid];
m14_164 -> m14_165  [key=0, style=solid];
m14_167 -> m14_168  [key=0, style=solid];
m14_161 -> m14_162  [key=0, style=solid];
m14_161 -> m14_26  [key=2, style=dotted];
m14_161 -> m14_163  [key=2, style=dotted];
m14_162 -> m14_160  [key=0, style=bold, color=blue];
m14_165 -> m14_166  [key=0, style=solid];
m14_165 -> m14_26  [key=2, style=dotted];
m14_165 -> m14_50  [key=2, style=dotted];
m14_166 -> m14_164  [key=0, style=bold, color=blue];
m14_168 -> m14_169  [key=0, style=solid];
m14_168 -> m14_26  [key=2, style=dotted];
m14_168 -> m14_67  [key=2, style=dotted];
m14_169 -> m14_167  [key=0, style=bold, color=blue];
m14_180 -> m14_181  [key=0, style=solid];
m14_183 -> m14_184  [key=0, style=solid];
m14_186 -> m14_187  [key=0, style=solid];
m14_189 -> m14_190  [key=0, style=solid];
m14_181 -> m14_182  [key=0, style=solid];
m14_181 -> m14_26  [key=2, style=dotted];
m14_181 -> m14_163  [key=2, style=dotted];
m14_182 -> m14_180  [key=0, style=bold, color=blue];
m14_184 -> m14_185  [key=0, style=solid];
m14_184 -> m14_26  [key=2, style=dotted];
m14_184 -> m14_163  [key=2, style=dotted];
m14_185 -> m14_183  [key=0, style=bold, color=blue];
m14_187 -> m14_188  [key=0, style=solid];
m14_187 -> m14_26  [key=2, style=dotted];
m14_187 -> m14_67  [key=2, style=dotted];
m14_188 -> m14_186  [key=0, style=bold, color=blue];
m14_190 -> m14_191  [key=0, style=solid];
m14_190 -> m14_26  [key=2, style=dotted];
m14_190 -> m14_67  [key=2, style=dotted];
m14_191 -> m14_189  [key=0, style=bold, color=blue];
m14_200 -> m14_201  [key=0, style=solid];
m14_203 -> m14_204  [key=0, style=solid];
m14_206 -> m14_207  [key=0, style=solid];
m14_209 -> m14_210  [key=0, style=solid];
m14_201 -> m14_202  [key=0, style=solid];
m14_201 -> m14_26  [key=2, style=dotted];
m14_201 -> m14_163  [key=2, style=dotted];
m14_202 -> m14_200  [key=0, style=bold, color=blue];
m14_204 -> m14_205  [key=0, style=solid];
m14_205 -> m14_203  [key=0, style=bold, color=blue];
m14_207 -> m14_208  [key=0, style=solid];
m14_207 -> m14_26  [key=2, style=dotted];
m14_207 -> m14_50  [key=2, style=dotted];
m14_208 -> m14_206  [key=0, style=bold, color=blue];
m14_210 -> m14_211  [key=0, style=solid];
m14_210 -> m14_26  [key=2, style=dotted];
m14_210 -> m14_67  [key=2, style=dotted];
m14_211 -> m14_209  [key=0, style=bold, color=blue];
m14_220 -> m14_221  [key=0, style=solid];
m14_223 -> m14_224  [key=0, style=solid];
m14_226 -> m14_227  [key=0, style=solid];
m14_221 -> m14_222  [key=0, style=solid];
m14_221 -> m14_26  [key=2, style=dotted];
m14_221 -> m14_163  [key=2, style=dotted];
m14_222 -> m14_220  [key=0, style=bold, color=blue];
m14_224 -> m14_225  [key=0, style=solid];
m14_225 -> m14_223  [key=0, style=bold, color=blue];
m14_227 -> m14_228  [key=0, style=solid];
m14_227 -> m14_26  [key=2, style=dotted];
m14_227 -> m14_67  [key=2, style=dotted];
m14_227 -> m14_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_228 -> m14_226  [key=0, style=bold, color=blue];
m14_229 -> m14_230  [key=0, style=solid];
m14_230 -> m14_231  [key=0, style=solid];
m14_231 -> m14_229  [key=0, style=bold, color=blue];
m14_241 -> m14_242  [key=0, style=solid];
m14_245 -> m14_246  [key=0, style=solid];
m14_245 -> m14_31  [key=2, style=dotted];
m14_244 -> m14_245  [key=0, style=solid];
m14_247 -> m14_248  [key=0, style=solid];
m14_250 -> m14_251  [key=0, style=solid];
m14_242 -> m14_243  [key=0, style=solid];
m14_242 -> m14_26  [key=2, style=dotted];
m14_242 -> m14_163  [key=2, style=dotted];
m14_243 -> m14_241  [key=0, style=bold, color=blue];
m14_246 -> m14_244  [key=0, style=bold, color=blue];
m14_248 -> m14_249  [key=0, style=solid];
m14_248 -> m14_26  [key=2, style=dotted];
m14_248 -> m14_50  [key=2, style=dotted];
m14_249 -> m14_247  [key=0, style=bold, color=blue];
m14_251 -> m14_252  [key=0, style=solid];
m14_251 -> m14_26  [key=2, style=dotted];
m14_251 -> m14_67  [key=2, style=dotted];
m14_252 -> m14_250  [key=0, style=bold, color=blue];
m14_270 -> m14_271  [key=0, style=solid];
m14_270 -> m14_26  [key=2, style=dotted];
m14_270 -> m14_67  [key=2, style=dotted];
m14_270 -> m14_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_273 -> m14_274  [key=0, style=solid];
m14_263 -> m14_264  [key=0, style=solid];
m14_267 -> m14_268  [key=0, style=solid];
m14_267 -> m14_31  [key=2, style=dotted];
m14_266 -> m14_267  [key=0, style=solid];
m14_269 -> m14_270  [key=0, style=solid];
m14_264 -> m14_265  [key=0, style=solid];
m14_264 -> m14_26  [key=2, style=dotted];
m14_264 -> m14_50  [key=2, style=dotted];
m14_265 -> m14_263  [key=0, style=bold, color=blue];
m14_268 -> m14_266  [key=0, style=bold, color=blue];
m14_271 -> m14_269  [key=0, style=bold, color=blue];
m14_272 -> m14_273  [key=0, style=solid];
m14_274 -> m14_272  [key=0, style=bold, color=blue];
m14_291 -> m14_292  [key=0, style=solid];
m14_291 -> m14_26  [key=2, style=dotted];
m14_291 -> m14_67  [key=2, style=dotted];
m14_291 -> m14_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_294 -> m14_295  [key=0, style=solid];
m14_284 -> m14_285  [key=0, style=solid];
m14_288 -> m14_289  [key=0, style=solid];
m14_288 -> m14_31  [key=2, style=dotted];
m14_287 -> m14_288  [key=0, style=solid];
m14_290 -> m14_291  [key=0, style=solid];
m14_285 -> m14_286  [key=0, style=solid];
m14_285 -> m14_26  [key=2, style=dotted];
m14_285 -> m14_50  [key=2, style=dotted];
m14_286 -> m14_284  [key=0, style=bold, color=blue];
m14_289 -> m14_287  [key=0, style=bold, color=blue];
m14_292 -> m14_290  [key=0, style=bold, color=blue];
m14_293 -> m14_294  [key=0, style=solid];
m14_295 -> m14_293  [key=0, style=bold, color=blue];
m14_308 -> m14_309  [key=0, style=solid];
m14_308 -> m14_26  [key=2, style=dotted];
m14_308 -> m14_67  [key=2, style=dotted];
m14_308 -> m14_310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_311 -> m14_312  [key=0, style=solid];
m14_304 -> m14_305  [key=0, style=solid];
m14_307 -> m14_308  [key=0, style=solid];
m14_313 -> m14_314  [key=0, style=solid];
m14_317 -> m14_318  [key=0, style=solid];
m14_317 -> m14_31  [key=2, style=dotted];
m14_316 -> m14_317  [key=0, style=solid];
m14_305 -> m14_306  [key=0, style=solid];
m14_305 -> m14_26  [key=2, style=dotted];
m14_305 -> m14_50  [key=2, style=dotted];
m14_306 -> m14_304  [key=0, style=bold, color=blue];
m14_309 -> m14_307  [key=0, style=bold, color=blue];
m14_310 -> m14_311  [key=0, style=solid];
m14_312 -> m14_310  [key=0, style=bold, color=blue];
m14_314 -> m14_315  [key=0, style=solid];
m14_315 -> m14_313  [key=0, style=bold, color=blue];
m14_318 -> m14_316  [key=0, style=bold, color=blue];
m14_328 -> m14_329  [key=0, style=solid];
m14_331 -> m14_332  [key=0, style=solid];
m14_334 -> m14_335  [key=0, style=solid];
m14_338 -> m14_339  [key=0, style=solid];
m14_338 -> m14_31  [key=2, style=dotted];
m14_337 -> m14_338  [key=0, style=solid];
m14_340 -> m14_341  [key=0, style=solid];
m14_329 -> m14_330  [key=0, style=solid];
m14_329 -> m14_26  [key=2, style=dotted];
m14_329 -> m14_50  [key=2, style=dotted];
m14_330 -> m14_328  [key=0, style=bold, color=blue];
m14_332 -> m14_333  [key=0, style=solid];
m14_332 -> m14_26  [key=2, style=dotted];
m14_332 -> m14_67  [key=2, style=dotted];
m14_333 -> m14_331  [key=0, style=bold, color=blue];
m14_335 -> m14_336  [key=0, style=solid];
m14_336 -> m14_334  [key=0, style=bold, color=blue];
m14_339 -> m14_337  [key=0, style=bold, color=blue];
m14_341 -> m14_342  [key=0, style=solid];
m14_341 -> m14_26  [key=2, style=dotted];
m14_341 -> m14_67  [key=2, style=dotted];
m14_341 -> m14_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_342 -> m14_340  [key=0, style=bold, color=blue];
m14_343 -> m14_344  [key=0, style=solid];
m14_344 -> m14_345  [key=0, style=solid];
m14_345 -> m14_343  [key=0, style=bold, color=blue];
m14_353 -> m14_354  [key=0, style=solid];
m14_357 -> m14_358  [key=0, style=solid];
m14_357 -> m14_31  [key=2, style=dotted];
m14_356 -> m14_357  [key=0, style=solid];
m14_354 -> m14_355  [key=0, style=solid];
m14_354 -> m14_26  [key=2, style=dotted];
m14_354 -> m14_67  [key=2, style=dotted];
m14_355 -> m14_353  [key=0, style=bold, color=blue];
m14_358 -> m14_356  [key=0, style=bold, color=blue];
m14_367 -> m14_368  [key=0, style=solid];
m14_370 -> m14_371  [key=0, style=solid];
m14_374 -> m14_375  [key=0, style=solid];
m14_374 -> m14_31  [key=2, style=dotted];
m14_373 -> m14_374  [key=0, style=solid];
m14_368 -> m14_369  [key=0, style=solid];
m14_368 -> m14_26  [key=2, style=dotted];
m14_368 -> m14_67  [key=2, style=dotted];
m14_369 -> m14_367  [key=0, style=bold, color=blue];
m14_371 -> m14_372  [key=0, style=solid];
m14_371 -> m14_26  [key=2, style=dotted];
m14_371 -> m14_50  [key=2, style=dotted];
m14_372 -> m14_370  [key=0, style=bold, color=blue];
m14_375 -> m14_373  [key=0, style=bold, color=blue];
m14_383 -> m14_384  [key=0, style=solid];
m14_387 -> m14_388  [key=0, style=solid];
m14_387 -> m14_31  [key=2, style=dotted];
m14_386 -> m14_387  [key=0, style=solid];
m14_389 -> m14_390  [key=0, style=solid];
m14_384 -> m14_385  [key=0, style=solid];
m14_384 -> m14_26  [key=2, style=dotted];
m14_384 -> m14_50  [key=2, style=dotted];
m14_385 -> m14_383  [key=0, style=bold, color=blue];
m14_388 -> m14_386  [key=0, style=bold, color=blue];
m14_390 -> m14_391  [key=0, style=solid];
m14_390 -> m14_26  [key=2, style=dotted];
m14_390 -> m14_108  [key=2, style=dotted];
m14_391 -> m14_389  [key=0, style=bold, color=blue];
m14_398 -> m14_399  [key=0, style=solid];
m14_402 -> m14_403  [key=0, style=solid];
m14_402 -> m14_31  [key=2, style=dotted];
m14_401 -> m14_402  [key=0, style=solid];
m14_399 -> m14_400  [key=0, style=solid];
m14_399 -> m14_26  [key=2, style=dotted];
m14_399 -> m14_163  [key=2, style=dotted];
m14_400 -> m14_398  [key=0, style=bold, color=blue];
m14_403 -> m14_401  [key=0, style=bold, color=blue];
m14_410 -> m14_411  [key=0, style=solid];
m14_414 -> m14_415  [key=0, style=solid];
m14_414 -> m14_31  [key=2, style=dotted];
m14_411 -> m14_412  [key=0, style=solid];
m14_411 -> m14_26  [key=2, style=dotted];
m14_411 -> m14_67  [key=2, style=dotted];
m14_412 -> m14_410  [key=0, style=bold, color=blue];
m14_415 -> m14_413  [key=0, style=bold, color=blue];
m14_109 -> m14_110  [key=0, style=solid];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_58  [key=2, style=dotted];
m14_110 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_58  [key=2, style=dotted];
m14_113 -> m14_114  [key=0, style=solid];
m14_113 -> m14_59  [key=2, style=dotted];
m14_113 -> m14_118  [key=2, style=dotted];
m14_113 -> m14_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_59  [key=2, style=dotted];
m14_112 -> m14_118  [key=2, style=dotted];
m14_112 -> m14_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_114 -> m14_115  [key=0, style=solid];
m14_114 -> m14_59  [key=2, style=dotted];
m14_114 -> m14_26  [key=2, style=dotted];
m14_114 -> m14_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_25  [key=2, style=dotted];
m14_115 -> m14_129  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_26  [key=2, style=dotted];
m14_116 -> m14_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_117 -> m14_109  [key=0, style=bold, color=blue];
m14_212 -> m14_213  [key=0, style=solid];
m14_213 -> m14_214  [key=0, style=solid];
m14_213 -> m14_58  [key=2, style=dotted];
m14_213 -> m14_218  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m14_214 -> m14_215  [key=0, style=solid];
m14_214 -> m14_58  [key=2, style=dotted];
m14_218 -> m14_219  [key=0, style=solid];
m14_218 -> m14_46  [key=2, style=dotted];
m14_218 -> m14_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_215 -> m14_216  [key=0, style=solid];
m14_215 -> m14_59  [key=2, style=dotted];
m14_215 -> m14_138  [key=2, style=dotted];
m14_215 -> m14_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_215 -> m14_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_216 -> m14_217  [key=0, style=solid];
m14_216 -> m14_25  [key=2, style=dotted];
m14_217 -> m14_218  [key=0, style=solid];
m14_217 -> m14_31  [key=2, style=dotted];
m14_219 -> m14_212  [key=0, style=bold, color=blue];
m14_32 -> m14_33  [key=0, style=solid];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_25  [key=2, style=dotted];
m14_33 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_26  [key=2, style=dotted];
m14_34 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_27  [key=2, style=dotted];
m14_36 -> m14_32  [key=0, style=bold, color=blue];
m14_20 -> m14_21  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_25  [key=2, style=dotted];
m14_21 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_26  [key=2, style=dotted];
m14_22 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_27  [key=2, style=dotted];
m14_24 -> m14_20  [key=0, style=bold, color=blue];
m14_58 -> m14_420  [key=0, style=solid];
m14_420 -> m14_421  [key=0, style=solid];
m14_420 -> m14_424  [key=2, style=dotted];
m14_420 -> m14_422  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_421 -> m14_422  [key=0, style=solid];
m14_421 -> m14_425  [key=2, style=dotted];
m14_422 -> m14_423  [key=0, style=solid];
m14_423 -> m14_58  [key=0, style=bold, color=blue];
m14_81 -> m14_82  [key=0, style=solid];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_59  [key=2, style=dotted];
m14_82 -> m14_26  [key=2, style=dotted];
m14_82 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_25  [key=2, style=dotted];
m14_83 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_26  [key=2, style=dotted];
m14_84 -> m14_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_85 -> m14_81  [key=0, style=bold, color=blue];
m14_346 -> m14_347  [key=0, style=solid];
m14_347 -> m14_348  [key=0, style=solid];
m14_347 -> m14_58  [key=2, style=dotted];
m14_348 -> m14_349  [key=0, style=solid];
m14_348 -> m14_59  [key=2, style=dotted];
m14_348 -> m14_26  [key=2, style=dotted];
m14_348 -> m14_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_349 -> m14_350  [key=0, style=solid];
m14_349 -> m14_25  [key=2, style=dotted];
m14_349 -> m14_357  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_350 -> m14_351  [key=0, style=solid];
m14_350 -> m14_26  [key=2, style=dotted];
m14_350 -> m14_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_351 -> m14_352  [key=0, style=solid];
m14_351 -> m14_26  [key=2, style=dotted];
m14_352 -> m14_346  [key=0, style=bold, color=blue];
m14_92 -> m14_93  [key=0, style=solid];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_58  [key=2, style=dotted];
m14_93 -> m14_97  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_94 -> m14_95  [key=0, style=solid];
m14_94 -> m14_59  [key=2, style=dotted];
m14_94 -> m14_26  [key=2, style=dotted];
m14_94 -> m14_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_46  [key=2, style=dotted];
m14_97 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_95 -> m14_96  [key=0, style=solid];
m14_95 -> m14_25  [key=2, style=dotted];
m14_95 -> m14_103  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_26  [key=2, style=dotted];
m14_96 -> m14_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_98 -> m14_92  [key=0, style=bold, color=blue];
m14_426 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_132  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_217  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_245  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_238  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_267  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_276  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_277  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_279  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_297  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_299  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_317  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_320  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_321  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_324  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_325  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_338  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_347  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_349  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_350  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_357  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_360  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_362  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_363  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_364  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_374  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_377  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_378  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_379  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_380  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_387  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_393  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_395  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_396  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_402  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_405  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_407  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_408  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_414  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_417  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_426 -> m14_421  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.JobPerformanceProcessFacts"];
m14_427 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_428 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_429 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_430 -> m14_103  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_431 -> m14_129  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_432 -> m14_150  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_433 -> m14_245  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_434 -> m14_267  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_435 -> m14_270  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_435 -> m14_273  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_436 -> m14_288  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_437 -> m14_291  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_437 -> m14_294  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_438 -> m14_308  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_438 -> m14_311  [key=1, style=dashed, color=darkseagreen4, label=exception];
m14_439 -> m14_317  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_440 -> m14_338  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_441 -> m14_357  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_442 -> m14_374  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_443 -> m14_387  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_444 -> m14_402  [key=1, style=dashed, color=darkseagreen4, label=process];
m14_445 -> m14_414  [key=1, style=dashed, color=darkseagreen4, label=process];
m15_8 -> m15_0  [key=0, style=bold, color=blue];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_15 -> m15_17  [key=0, style=solid];
m15_15 -> m15_20  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_17 -> m15_15  [key=0, style=bold, color=blue];
m15_17 -> m15_10  [key=0, style=bold, color=blue];
m15_0 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m15_0 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m15_0 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_9  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_10  [key=2, style=dotted];
m15_6 -> m15_11  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_0  [key=0, style=bold, color=blue];
m15_3 -> m15_5  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_4 -> m15_8  [key=0, style=solid];
m15_4 -> n17  [key=2, style=dotted];
m15_4 -> m15_7  [key=0, style=solid];
m15_2 -> m15_8  [key=0, style=solid];
m15_2 -> n17  [key=2, style=dotted];
m15_2 -> m15_7  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_15  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_19  [key=2, style=dotted];
m15_14 -> m15_12  [key=0, style=bold, color=blue];
m15_14 -> m15_15  [key=0, style=solid];
m15_18 -> m15_32  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m15_18 -> m15_24  [key=0, style=solid];
m15_18 -> m15_28  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m15_18 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m15_18 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m15_18 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m15_18 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m15_31 -> m15_32  [key=0, style=solid, color=green];
m15_31 -> m15_40  [key=2, style=dotted, color=green];
m15_26 -> m15_31  [key=1, style=dashed, color=green, label=jobId];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_36  [key=2, style=dotted];
m15_29 -> m15_31  [key=1, style=dashed, color=green, label=stateMachine];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_38  [key=2, style=dotted];
m15_30 -> m15_31  [key=0, style=solid, color=green];
m15_30 -> m15_39  [key=2, style=dotted];
m15_32 -> m15_33  [key=0, style=solid];
m15_24 -> m15_26  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_24 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_34  [key=2, style=dotted];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_35  [key=2, style=dotted];
m15_27 -> m15_29  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_37  [key=2, style=dotted];
m15_28 -> m15_33  [key=0, style=solid];
m15_33 -> m15_18  [key=0, style=bold, color=blue];
m15_11 -> m15_18  [key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_16  [key=0, style=solid];
m15_41 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m15_41 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m16_15 -> m16_16  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_17 -> m16_15  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m16_0 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m16_0 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_9  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_10  [key=2, style=dotted];
m16_6 -> m16_11  [key=2, style=dotted];
m16_2 -> m16_7  [key=0, style=solid];
m16_2 -> n17  [key=2, style=dotted];
m16_4 -> m16_7  [key=0, style=solid];
m16_4 -> n17  [key=2, style=dotted];
m16_7 -> m16_0  [key=0, style=bold, color=blue];
m16_12 -> m16_13  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_14 -> m16_12  [key=0, style=bold, color=blue];
m16_18 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m16_18 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m16_18 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m16_18 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m17_37 -> m17_12  [key=3, color=red, style=bold, label="Field variable System.Func<Hangfire.Common.Job, System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>> _getFiltersThunk"];
m17_22 -> m17_23  [key=0, style=solid, color=red];
m17_22 -> m17_24  [key=1, style=dashed, color=red, label="Hangfire.States.StateContext"];
m17_22 -> m17_27  [key=1, style=dashed, color=red, label="Hangfire.States.StateContext"];
m17_22 -> m17_32  [key=1, style=dashed, color=red, label="Hangfire.States.StateContext"];
m17_22 -> m17_29  [key=3, color=red, style=bold, label="method methodReturn bool ChangeState"];
m17_22 -> m17_34  [key=3, color=red, style=bold, label="method methodReturn bool ChangeState"];
m17_23 -> m17_24  [key=0, style=solid, color=red];
m17_23 -> m17_36  [key=2, style=dotted, color=red];
m17_23 -> m17_25  [key=1, style=dashed, color=red, label=filterInfo];
m17_23 -> m17_28  [key=1, style=dashed, color=red, label=filterInfo];
m17_24 -> m17_25  [key=0, style=solid, color=red];
m17_24 -> m17_37  [key=2, style=dotted, color=red];
m17_24 -> m17_26  [key=1, style=dashed, color=red, label=electStateContext];
m17_24 -> m17_27  [key=1, style=dashed, color=red, label=electStateContext];
m17_27 -> m17_28  [key=0, style=solid, color=red];
m17_27 -> m17_39  [key=2, style=dotted, color=red];
m17_32 -> m17_33  [key=0, style=solid, color=red];
m17_32 -> m17_39  [key=2, style=dotted, color=red];
m17_32 -> m17_42  [key=2, style=dotted, color=red];
m17_25 -> m17_26  [key=0, style=solid, color=red];
m17_25 -> m17_27  [key=0, style=solid, color=red];
m17_28 -> m17_29  [key=0, style=solid, color=red];
m17_28 -> m17_40  [key=2, style=dotted, color=red];
m17_26 -> m17_25  [key=0, style=solid, color=red];
m17_26 -> m17_38  [key=2, style=dotted, color=red];
m17_29 -> m17_35  [key=0, style=solid, color=red];
m17_30 -> m17_31  [key=0, style=solid, color=red];
m17_31 -> m17_32  [key=0, style=solid, color=red];
m17_31 -> m17_41  [key=2, style=dotted, color=red];
m17_33 -> m17_34  [key=0, style=solid, color=red];
m17_33 -> m17_42  [key=2, style=dotted, color=red];
m17_33 -> m17_40  [key=2, style=dotted, color=red];
m17_34 -> m17_35  [key=0, style=solid, color=red];
m17_35 -> m17_22  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=red];
m17_0 -> m17_3  [key=1, style=dashed, color=red, label="Hangfire.States.StateHandlerCollection"];
m17_0 -> m17_5  [key=1, style=dashed, color=red, label="Hangfire.Storage.IStorageConnection"];
m17_0 -> m17_6  [key=1, style=dashed, color=red, label="Hangfire.States.StateHandlerCollection"];
m17_1 -> m17_2  [key=0, style=solid, color=red];
m17_1 -> m17_3  [key=0, style=solid, color=red];
m17_3 -> m17_4  [key=0, style=solid, color=red];
m17_3 -> m17_5  [key=0, style=solid, color=red];
m17_5 -> m17_6  [key=0, style=solid, color=red];
m17_6 -> m17_7  [key=0, style=solid, color=red];
m17_2 -> m17_7  [key=0, style=solid, color=red];
m17_2 -> n17  [key=2, style=dotted, color=red];
m17_4 -> m17_7  [key=0, style=solid, color=red];
m17_4 -> n17  [key=2, style=dotted, color=red];
m17_7 -> m17_0  [key=0, style=bold, color=blue];
m17_40 -> m17_43  [key=0, style=solid, color=red];
m17_40 -> m17_44  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_45  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_46  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_47  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_48  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>"];
m17_40 -> m17_49  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_50  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_51  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_52  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_53  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<Hangfire.States.IApplyStateFilter>"];
m17_40 -> m17_54  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_55  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_56  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_57  [key=1, style=dashed, color=red, label="Hangfire.States.ApplyStateContext"];
m17_40 -> m17_27  [key=3, color=red, style=bold, label="Parameter variable Hangfire.States.ApplyStateContext context"];
m17_40 -> m17_32  [key=3, color=red, style=bold, label="Parameter variable Hangfire.States.ApplyStateContext context"];
m17_43 -> m17_44  [key=0, style=solid, color=red];
m17_43 -> m17_60  [key=2, style=dotted, color=red];
m17_43 -> m17_45  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_47  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_49  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_50  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_52  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_54  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_56  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_57  [key=1, style=dashed, color=red, label=transaction];
m17_43 -> m17_58  [key=1, style=dashed, color=red, label=transaction];
m17_44 -> m17_45  [key=0, style=solid, color=red];
m17_44 -> m17_46  [key=0, style=solid, color=red];
m17_45 -> m17_44  [key=0, style=solid, color=red];
m17_45 -> m17_61  [key=2, style=dotted, color=red];
m17_46 -> m17_47  [key=0, style=solid, color=red];
m17_46 -> m17_48  [key=0, style=solid, color=red];
m17_46 -> m17_62  [key=2, style=dotted, color=red];
m17_47 -> m17_46  [key=0, style=solid, color=red];
m17_47 -> m17_63  [key=2, style=dotted, color=red];
m17_48 -> m17_49  [key=0, style=solid, color=red];
m17_48 -> m17_50  [key=0, style=solid, color=red];
m17_49 -> m17_48  [key=0, style=solid, color=red];
m17_49 -> m17_64  [key=2, style=dotted, color=red];
m17_50 -> m17_51  [key=0, style=solid, color=red];
m17_50 -> m17_65  [key=2, style=dotted, color=red];
m17_51 -> m17_52  [key=0, style=solid, color=red];
m17_51 -> m17_53  [key=0, style=solid, color=red];
m17_51 -> m17_62  [key=2, style=dotted, color=red];
m17_52 -> m17_51  [key=0, style=solid, color=red];
m17_52 -> m17_66  [key=2, style=dotted, color=red];
m17_53 -> m17_54  [key=0, style=solid, color=red];
m17_53 -> m17_55  [key=0, style=solid, color=red];
m17_54 -> m17_53  [key=0, style=solid, color=red];
m17_54 -> m17_67  [key=2, style=dotted, color=red];
m17_55 -> m17_56  [key=0, style=solid, color=red];
m17_55 -> m17_57  [key=0, style=solid, color=red];
m17_56 -> m17_58  [key=0, style=solid, color=red];
m17_56 -> m17_68  [key=2, style=dotted, color=red];
m17_57 -> m17_58  [key=0, style=solid, color=red];
m17_57 -> m17_69  [key=2, style=dotted, color=red];
m17_58 -> m17_59  [key=0, style=solid, color=red];
m17_58 -> m17_70  [key=2, style=dotted, color=red];
m17_59 -> m17_40  [key=0, style=bold, color=blue];
m17_60 -> m17_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.Storage.IStorageConnection _connection"];
m17_36 -> m17_71  [key=0, style=solid, color=red];
m17_71 -> m17_72  [key=0, style=solid, color=red];
m17_71 -> m17_73  [key=2, style=dotted, color=red];
m17_71 -> m17_74  [key=2, style=dotted, color=red];
m17_72 -> m17_36  [key=0, style=bold, color=blue];
m17_18 -> m17_19  [key=0, style=solid, color=red];
m17_15 -> m17_16  [key=0, style=solid, color=red];
m17_15 -> m17_17  [key=2, style=dotted, color=red];
m17_15 -> m17_18  [key=1, style=dashed, color=red, label="lambda expression"];
m17_14 -> m17_15  [key=0, style=solid, color=red];
m17_16 -> m17_14  [key=0, style=bold, color=blue];
m17_19 -> m17_20  [key=0, style=solid, color=red];
m17_19 -> m17_21  [key=2, style=dotted, color=red];
m17_20 -> m17_18  [key=0, style=bold, color=blue];
m17_65 -> m17_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.States.StateHandlerCollection _handlers"];
m17_9 -> m17_10  [key=0, style=solid, color=red];
m17_9 -> m17_12  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<object>"];
m17_9 -> m17_15  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<object>"];
m17_10 -> m17_11  [key=0, style=solid, color=red];
m17_10 -> m17_12  [key=0, style=solid, color=red];
m17_12 -> m17_13  [key=0, style=solid, color=red];
m17_11 -> m17_13  [key=0, style=solid, color=red];
m17_11 -> n17  [key=2, style=dotted, color=red];
m17_13 -> m17_9  [key=0, style=bold, color=blue];
m17_75 -> m17_5  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_6  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_12  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_23  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_24  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_28  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_33  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_43  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_46  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_51  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_75 -> m17_71  [key=1, style=dashed, color=red, label="Hangfire.States.StateChangeProcess"];
m17_76 -> m17_15  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<object>"];
m18_114 -> m18_115  [key=0, style=solid];
m18_117 -> m18_30  [key=2, style=dotted];
m18_117 -> m18_118  [key=0, style=solid];
m18_120 -> m18_33  [key=2, style=dotted];
m18_120 -> m18_121  [key=0, style=solid];
m18_116 -> m18_22  [key=2, style=dotted];
m18_116 -> m18_117  [key=0, style=solid];
m18_123 -> m18_26  [key=2, style=dotted];
m18_123 -> m18_124  [key=0, style=solid];
m18_119 -> m18_50  [key=2, style=dotted];
m18_119 -> m18_120  [key=0, style=solid];
m18_122 -> m18_51  [key=2, style=dotted];
m18_122 -> m18_123  [key=0, style=solid];
m18_118 -> m18_120  [key=1, style=dashed, color=darkseagreen4, label=table7];
m18_118 -> m18_49  [key=2, style=dotted];
m18_118 -> m18_119  [key=0, style=solid];
m18_121 -> m18_48  [key=2, style=dotted];
m18_121 -> m18_122  [key=0, style=solid];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_47  [key=2, style=dotted];
m18_124 -> m18_114  [key=0, style=bold, color=blue];
m18_26 -> m18_27  [key=0, style=solid];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_29  [key=2, style=dotted];
m18_28 -> m18_26  [key=0, style=bold, color=blue];
m18_184 -> m18_185  [key=0, style=solid];
m18_187 -> m18_30  [key=2, style=dotted];
m18_187 -> m18_188  [key=0, style=solid];
m18_188 -> m18_33  [key=2, style=dotted];
m18_188 -> m18_189  [key=0, style=solid];
m18_186 -> m18_22  [key=2, style=dotted];
m18_186 -> m18_187  [key=0, style=solid];
m18_197 -> m18_26  [key=2, style=dotted];
m18_197 -> m18_198  [key=0, style=solid];
m18_193 -> m18_50  [key=2, style=dotted];
m18_193 -> m18_194  [key=0, style=solid];
m18_194 -> m18_50  [key=2, style=dotted];
m18_194 -> m18_195  [key=0, style=solid];
m18_189 -> m18_52  [key=2, style=dotted];
m18_189 -> m18_190  [key=0, style=solid];
m18_191 -> m18_52  [key=2, style=dotted];
m18_191 -> m18_192  [key=0, style=solid];
m18_196 -> m18_52  [key=2, style=dotted];
m18_196 -> m18_197  [key=0, style=solid];
m18_195 -> m18_51  [key=2, style=dotted];
m18_195 -> m18_196  [key=0, style=solid];
m18_185 -> m18_186  [key=0, style=solid];
m18_185 -> m18_47  [key=2, style=dotted];
m18_192 -> m18_49  [key=2, style=dotted];
m18_192 -> m18_193  [key=0, style=solid];
m18_192 -> m18_194  [key=1, style=dashed, color=darkseagreen4, label=table11];
m18_192 -> m18_195  [key=1, style=dashed, color=darkseagreen4, label=table11];
m18_190 -> m18_48  [key=2, style=dotted];
m18_190 -> m18_191  [key=0, style=solid];
m18_198 -> m18_184  [key=0, style=bold, color=blue];
m18_80 -> m18_81  [key=0, style=solid];
m18_83 -> m18_84  [key=0, style=solid, color=green];
m18_83 -> m18_30  [key=2, style=dotted, color=green];
m18_82 -> m18_83  [key=0, style=solid, color=green];
m18_82 -> m18_22  [key=2, style=dotted];
m18_84 -> m18_85  [key=0, style=solid, color=green];
m18_84 -> m18_49  [key=2, style=dotted];
m18_84 -> m18_86  [key=1, style=dashed, color=darkseagreen4, label=table4];
m18_85 -> m18_86  [key=0, style=solid, color=green];
m18_85 -> m18_50  [key=2, style=dotted, color=green];
m18_86 -> m18_33  [key=2, style=dotted];
m18_86 -> m18_87  [key=0, style=solid];
m18_89 -> m18_26  [key=2, style=dotted];
m18_89 -> m18_90  [key=0, style=solid];
m18_81 -> m18_82  [key=0, style=solid];
m18_81 -> m18_47  [key=2, style=dotted];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_48  [key=2, style=dotted];
m18_88 -> m18_51  [key=2, style=dotted];
m18_88 -> m18_89  [key=0, style=solid];
m18_90 -> m18_80  [key=0, style=bold, color=blue];
m18_68 -> m18_69  [key=0, style=solid];
m18_71 -> m18_72  [key=0, style=solid, color=green];
m18_71 -> m18_30  [key=2, style=dotted, color=green];
m18_70 -> m18_71  [key=0, style=solid, color=green];
m18_70 -> m18_22  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid, color=green];
m18_72 -> m18_49  [key=2, style=dotted];
m18_72 -> m18_74  [key=1, style=dashed, color=darkseagreen4, label=table3];
m18_72 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label=table3];
m18_73 -> m18_74  [key=0, style=solid, color=green];
m18_73 -> m18_50  [key=2, style=dotted, color=green];
m18_74 -> m18_50  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_75 -> m18_33  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid];
m18_78 -> m18_26  [key=2, style=dotted];
m18_78 -> m18_79  [key=0, style=solid];
m18_69 -> m18_70  [key=0, style=solid];
m18_69 -> m18_47  [key=2, style=dotted];
m18_77 -> m18_51  [key=2, style=dotted];
m18_77 -> m18_78  [key=0, style=solid];
m18_76 -> m18_48  [key=2, style=dotted];
m18_76 -> m18_77  [key=0, style=solid];
m18_79 -> m18_68  [key=0, style=bold, color=blue];
m18_91 -> m18_92  [key=0, style=solid];
m18_93 -> m18_94  [key=0, style=solid, color=green];
m18_93 -> m18_22  [key=2, style=dotted, color=green];
m18_92 -> m18_93  [key=0, style=solid, color=green];
m18_92 -> m18_47  [key=2, style=dotted];
m18_94 -> m18_30  [key=2, style=dotted];
m18_94 -> m18_95  [key=0, style=solid];
m18_98 -> m18_99  [key=0, style=solid, color=green];
m18_98 -> m18_52  [key=2, style=dotted, color=green];
m18_97 -> m18_98  [key=0, style=solid, color=green];
m18_97 -> m18_33  [key=2, style=dotted];
m18_99 -> m18_100  [key=0, style=solid, color=green];
m18_99 -> m18_48  [key=2, style=dotted];
m18_100 -> m18_101  [key=0, style=solid, color=green];
m18_100 -> m18_51  [key=2, style=dotted, color=green];
m18_101 -> m18_102  [key=0, style=solid, color=green];
m18_101 -> m18_26  [key=2, style=dotted, color=green];
m18_96 -> m18_50  [key=2, style=dotted];
m18_96 -> m18_97  [key=0, style=solid];
m18_95 -> m18_97  [key=1, style=dashed, color=darkseagreen4, label=table5];
m18_95 -> m18_49  [key=2, style=dotted];
m18_95 -> m18_96  [key=0, style=solid];
m18_102 -> m18_91  [key=0, style=bold, color=blue];
m18_141 -> m18_142  [key=0, style=solid];
m18_144 -> m18_30  [key=2, style=dotted];
m18_144 -> m18_145  [key=0, style=solid];
m18_145 -> m18_33  [key=2, style=dotted];
m18_145 -> m18_146  [key=0, style=solid];
m18_143 -> m18_22  [key=2, style=dotted];
m18_143 -> m18_144  [key=0, style=solid];
m18_153 -> m18_26  [key=2, style=dotted];
m18_153 -> m18_154  [key=0, style=solid];
m18_149 -> m18_50  [key=2, style=dotted];
m18_149 -> m18_150  [key=0, style=solid];
m18_150 -> m18_50  [key=2, style=dotted];
m18_150 -> m18_151  [key=0, style=solid];
m18_151 -> m18_50  [key=2, style=dotted];
m18_151 -> m18_152  [key=0, style=solid];
m18_146 -> m18_52  [key=2, style=dotted];
m18_146 -> m18_147  [key=0, style=solid];
m18_152 -> m18_51  [key=2, style=dotted];
m18_152 -> m18_153  [key=0, style=solid];
m18_142 -> m18_143  [key=0, style=solid];
m18_142 -> m18_47  [key=2, style=dotted];
m18_148 -> m18_49  [key=2, style=dotted];
m18_148 -> m18_149  [key=0, style=solid];
m18_148 -> m18_150  [key=1, style=dashed, color=darkseagreen4, label=table9];
m18_148 -> m18_151  [key=1, style=dashed, color=darkseagreen4, label=table9];
m18_148 -> m18_152  [key=1, style=dashed, color=darkseagreen4, label=table9];
m18_147 -> m18_48  [key=2, style=dotted];
m18_147 -> m18_148  [key=0, style=solid];
m18_154 -> m18_141  [key=0, style=bold, color=blue];
m18_22 -> m18_23  [key=0, style=solid];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_25  [key=2, style=dotted];
m18_24 -> m18_22  [key=0, style=bold, color=blue];
m18_173 -> m18_174  [key=0, style=solid];
m18_176 -> m18_30  [key=2, style=dotted];
m18_176 -> m18_177  [key=0, style=solid];
m18_177 -> m18_33  [key=2, style=dotted];
m18_177 -> m18_178  [key=0, style=solid];
m18_175 -> m18_22  [key=2, style=dotted];
m18_175 -> m18_176  [key=0, style=solid];
m18_182 -> m18_26  [key=2, style=dotted];
m18_182 -> m18_183  [key=0, style=solid];
m18_179 -> m18_52  [key=2, style=dotted];
m18_179 -> m18_180  [key=0, style=solid];
m18_181 -> m18_52  [key=2, style=dotted];
m18_181 -> m18_182  [key=0, style=solid];
m18_180 -> m18_51  [key=2, style=dotted];
m18_180 -> m18_181  [key=0, style=solid];
m18_178 -> m18_48  [key=2, style=dotted];
m18_178 -> m18_179  [key=0, style=solid];
m18_174 -> m18_175  [key=0, style=solid];
m18_174 -> m18_47  [key=2, style=dotted];
m18_183 -> m18_173  [key=0, style=bold, color=blue];
m18_9 -> m18_10  [key=0, style=solid, color=green];
m18_10 -> m18_11  [key=0, style=solid, color=green];
m18_10 -> m18_13  [key=2, style=dotted, color=green];
m18_11 -> m18_12  [key=0, style=solid, color=green];
m18_12 -> m18_9  [key=0, style=bold, color=blue];
m18_34 -> m18_35  [key=0, style=solid];
m18_36 -> m18_37  [key=0, style=solid, color=green];
m18_36 -> m18_22  [key=2, style=dotted, color=green];
m18_35 -> m18_36  [key=0, style=solid, color=green];
m18_35 -> m18_47  [key=2, style=dotted];
m18_37 -> m18_30  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_38 -> m18_33  [key=2, style=dotted];
m18_38 -> m18_39  [key=0, style=solid];
m18_45 -> m18_26  [key=2, style=dotted];
m18_45 -> m18_46  [key=0, style=solid];
m18_41 -> m18_50  [key=2, style=dotted];
m18_41 -> m18_42  [key=0, style=solid];
m18_42 -> m18_50  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_44 -> m18_52  [key=2, style=dotted];
m18_44 -> m18_45  [key=0, style=solid];
m18_43 -> m18_51  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_39 -> m18_48  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_40 -> m18_49  [key=2, style=dotted];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label=table1];
m18_40 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label=table1];
m18_46 -> m18_34  [key=0, style=bold, color=blue];
m18_155 -> m18_156  [key=0, style=solid];
m18_158 -> m18_30  [key=2, style=dotted];
m18_158 -> m18_159  [key=0, style=solid];
m18_159 -> m18_33  [key=2, style=dotted];
m18_159 -> m18_160  [key=0, style=solid];
m18_157 -> m18_22  [key=2, style=dotted];
m18_157 -> m18_158  [key=0, style=solid];
m18_171 -> m18_26  [key=2, style=dotted];
m18_171 -> m18_172  [key=0, style=solid];
m18_164 -> m18_50  [key=2, style=dotted];
m18_164 -> m18_165  [key=0, style=solid];
m18_165 -> m18_50  [key=2, style=dotted];
m18_165 -> m18_166  [key=0, style=solid];
m18_166 -> m18_50  [key=2, style=dotted];
m18_166 -> m18_167  [key=0, style=solid];
m18_167 -> m18_50  [key=2, style=dotted];
m18_167 -> m18_168  [key=0, style=solid];
m18_168 -> m18_50  [key=2, style=dotted];
m18_168 -> m18_169  [key=0, style=solid];
m18_160 -> m18_52  [key=2, style=dotted];
m18_160 -> m18_161  [key=0, style=solid];
m18_161 -> m18_52  [key=2, style=dotted];
m18_161 -> m18_162  [key=0, style=solid];
m18_170 -> m18_52  [key=2, style=dotted];
m18_170 -> m18_171  [key=0, style=solid];
m18_169 -> m18_51  [key=2, style=dotted];
m18_169 -> m18_170  [key=0, style=solid];
m18_156 -> m18_157  [key=0, style=solid];
m18_156 -> m18_47  [key=2, style=dotted];
m18_163 -> m18_49  [key=2, style=dotted];
m18_163 -> m18_164  [key=0, style=solid];
m18_163 -> m18_165  [key=1, style=dashed, color=darkseagreen4, label=table10];
m18_163 -> m18_166  [key=1, style=dashed, color=darkseagreen4, label=table10];
m18_163 -> m18_167  [key=1, style=dashed, color=darkseagreen4, label=table10];
m18_163 -> m18_168  [key=1, style=dashed, color=darkseagreen4, label=table10];
m18_163 -> m18_169  [key=1, style=dashed, color=darkseagreen4, label=table10];
m18_162 -> m18_48  [key=2, style=dotted];
m18_162 -> m18_163  [key=0, style=solid];
m18_172 -> m18_155  [key=0, style=bold, color=blue];
m18_53 -> m18_54  [key=0, style=solid];
m18_61 -> m18_62  [key=0, style=solid, color=green];
m18_61 -> m18_50  [key=2, style=dotted, color=green];
m18_60 -> m18_61  [key=0, style=solid, color=green];
m18_60 -> m18_49  [key=2, style=dotted];
m18_60 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label=table2];
m18_60 -> m18_63  [key=1, style=dashed, color=darkseagreen4, label=table2];
m18_60 -> m18_64  [key=1, style=dashed, color=darkseagreen4, label=table2];
m18_60 -> m18_65  [key=1, style=dashed, color=darkseagreen4, label=table2];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_50  [key=2, style=dotted];
m18_56 -> m18_30  [key=2, style=dotted];
m18_56 -> m18_57  [key=0, style=solid];
m18_57 -> m18_33  [key=2, style=dotted];
m18_57 -> m18_58  [key=0, style=solid];
m18_55 -> m18_22  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_66 -> m18_26  [key=2, style=dotted];
m18_66 -> m18_67  [key=0, style=solid];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_48  [key=2, style=dotted];
m18_63 -> m18_50  [key=2, style=dotted];
m18_63 -> m18_64  [key=0, style=solid];
m18_64 -> m18_50  [key=2, style=dotted];
m18_64 -> m18_65  [key=0, style=solid];
m18_65 -> m18_51  [key=2, style=dotted];
m18_65 -> m18_66  [key=0, style=solid];
m18_58 -> m18_52  [key=2, style=dotted];
m18_58 -> m18_59  [key=0, style=solid];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_47  [key=2, style=dotted];
m18_67 -> m18_53  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_6  [key=2, style=dotted, color=green];
m18_2 -> m18_7  [key=2, style=dotted, color=green];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_1 -> m18_5  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid, color=green];
m18_3 -> m18_8  [key=2, style=dotted, color=green];
m18_4 -> m18_0  [key=0, style=bold, color=blue];
m18_30 -> m18_31  [key=0, style=solid, color=green];
m18_31 -> m18_32  [key=0, style=solid, color=green];
m18_31 -> m18_33  [key=2, style=dotted, color=green];
m18_32 -> m18_30  [key=0, style=bold, color=blue];
m18_125 -> m18_126  [key=0, style=solid];
m18_128 -> m18_30  [key=2, style=dotted];
m18_128 -> m18_129  [key=0, style=solid];
m18_129 -> m18_33  [key=2, style=dotted];
m18_129 -> m18_130  [key=0, style=solid];
m18_127 -> m18_22  [key=2, style=dotted];
m18_127 -> m18_128  [key=0, style=solid];
m18_139 -> m18_26  [key=2, style=dotted];
m18_139 -> m18_140  [key=0, style=solid];
m18_135 -> m18_50  [key=2, style=dotted];
m18_135 -> m18_136  [key=0, style=solid];
m18_136 -> m18_50  [key=2, style=dotted];
m18_136 -> m18_137  [key=0, style=solid];
m18_137 -> m18_50  [key=2, style=dotted];
m18_137 -> m18_138  [key=0, style=solid];
m18_130 -> m18_52  [key=2, style=dotted];
m18_130 -> m18_131  [key=0, style=solid];
m18_131 -> m18_52  [key=2, style=dotted];
m18_131 -> m18_132  [key=0, style=solid];
m18_138 -> m18_52  [key=2, style=dotted];
m18_138 -> m18_139  [key=0, style=solid];
m18_133 -> m18_51  [key=2, style=dotted];
m18_133 -> m18_134  [key=0, style=solid];
m18_126 -> m18_127  [key=0, style=solid];
m18_126 -> m18_47  [key=2, style=dotted];
m18_134 -> m18_49  [key=2, style=dotted];
m18_134 -> m18_135  [key=0, style=solid];
m18_134 -> m18_136  [key=1, style=dashed, color=darkseagreen4, label=table8];
m18_134 -> m18_137  [key=1, style=dashed, color=darkseagreen4, label=table8];
m18_134 -> m18_138  [key=1, style=dashed, color=darkseagreen4, label=table8];
m18_132 -> m18_48  [key=2, style=dotted];
m18_132 -> m18_133  [key=0, style=solid];
m18_140 -> m18_125  [key=0, style=bold, color=blue];
m18_103 -> m18_104  [key=0, style=solid];
m18_106 -> m18_30  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid];
m18_109 -> m18_33  [key=2, style=dotted];
m18_109 -> m18_110  [key=0, style=solid];
m18_105 -> m18_22  [key=2, style=dotted];
m18_105 -> m18_106  [key=0, style=solid];
m18_112 -> m18_26  [key=2, style=dotted];
m18_112 -> m18_113  [key=0, style=solid];
m18_108 -> m18_50  [key=2, style=dotted];
m18_108 -> m18_109  [key=0, style=solid];
m18_111 -> m18_51  [key=2, style=dotted];
m18_111 -> m18_112  [key=0, style=solid];
m18_107 -> m18_109  [key=1, style=dashed, color=darkseagreen4, label=table6];
m18_107 -> m18_49  [key=2, style=dotted];
m18_107 -> m18_108  [key=0, style=solid];
m18_110 -> m18_48  [key=2, style=dotted];
m18_110 -> m18_111  [key=0, style=solid];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_47  [key=2, style=dotted];
m18_113 -> m18_103  [key=0, style=bold, color=blue];
m18_199 -> m18_200  [key=0, style=solid];
m18_202 -> m18_30  [key=2, style=dotted];
m18_202 -> m18_203  [key=0, style=solid];
m18_203 -> m18_33  [key=2, style=dotted];
m18_203 -> m18_204  [key=0, style=solid];
m18_201 -> m18_22  [key=2, style=dotted];
m18_201 -> m18_202  [key=0, style=solid];
m18_214 -> m18_26  [key=2, style=dotted];
m18_214 -> m18_215  [key=0, style=solid];
m18_209 -> m18_50  [key=2, style=dotted];
m18_209 -> m18_210  [key=0, style=solid];
m18_210 -> m18_50  [key=2, style=dotted];
m18_210 -> m18_211  [key=0, style=solid];
m18_211 -> m18_50  [key=2, style=dotted];
m18_211 -> m18_212  [key=0, style=solid];
m18_204 -> m18_52  [key=2, style=dotted];
m18_204 -> m18_205  [key=0, style=solid];
m18_205 -> m18_52  [key=2, style=dotted];
m18_205 -> m18_206  [key=0, style=solid];
m18_207 -> m18_52  [key=2, style=dotted];
m18_207 -> m18_208  [key=0, style=solid];
m18_213 -> m18_52  [key=2, style=dotted];
m18_213 -> m18_214  [key=0, style=solid];
m18_212 -> m18_51  [key=2, style=dotted];
m18_212 -> m18_213  [key=0, style=solid];
m18_200 -> m18_201  [key=0, style=solid];
m18_200 -> m18_47  [key=2, style=dotted];
m18_208 -> m18_49  [key=2, style=dotted];
m18_208 -> m18_209  [key=0, style=solid];
m18_208 -> m18_210  [key=1, style=dashed, color=darkseagreen4, label=table12];
m18_208 -> m18_211  [key=1, style=dashed, color=darkseagreen4, label=table12];
m18_208 -> m18_212  [key=1, style=dashed, color=darkseagreen4, label=table12];
m18_206 -> m18_48  [key=2, style=dotted];
m18_206 -> m18_207  [key=0, style=solid];
m18_215 -> m18_199  [key=0, style=bold, color=blue];
m18_14 -> m18_15  [key=0, style=solid];
m18_16 -> m18_0  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [key=0, style=solid];
m18_17 -> m18_14  [key=0, style=bold, color=blue];
m18_216 -> m18_36  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_71  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_83  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_93  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_101  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_201  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m18_216 -> m18_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_3 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.ServerExceptionContext"];
m20_0 -> m20_1  [key=0, style=solid, color=red];
m20_1 -> m20_2  [key=0, style=solid, color=red];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_5  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_0  [key=0, style=bold, color=blue];
m20_6 -> m20_1  [key=1, style=dashed, color=red, label="HangFire.Server.ServerComponentRunnerOptions"];
m20_6 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m20_6 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m21_14 -> m21_15  [key=0, style=solid];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_8  [key=2, style=dotted];
m21_15 -> m21_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_9  [key=2, style=dotted];
m21_17 -> m21_14  [key=0, style=bold, color=blue];
m21_29 -> m21_30  [key=0, style=solid];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> m21_34  [key=2, style=dotted];
m21_30 -> m21_32  [key=1, style=dashed, color=darkseagreen4, label=processingJob];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_9  [key=2, style=dotted];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_9  [key=2, style=dotted];
m21_33 -> m21_29  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_35 -> m21_36  [key=0, style=solid];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_34  [key=2, style=dotted];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_40  [key=2, style=dotted];
m21_38 -> m21_39  [key=0, style=solid];
m21_38 -> m21_41  [key=2, style=dotted];
m21_38 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_39 -> m21_35  [key=0, style=bold, color=blue];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_8  [key=2, style=dotted];
m21_5 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_9  [key=2, style=dotted];
m21_7 -> m21_4  [key=0, style=bold, color=blue];
m21_42 -> m21_43  [key=0, style=solid];
m21_10 -> m21_11  [key=0, style=solid];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_13  [key=2, style=dotted];
m21_12 -> m21_10  [key=0, style=bold, color=blue];
m21_18 -> m21_19  [key=0, style=solid];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_21  [key=2, style=dotted];
m21_20 -> m21_18  [key=0, style=bold, color=blue];
m21_26 -> m21_27  [key=0, style=solid];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_21  [key=2, style=dotted];
m21_28 -> m21_26  [key=0, style=bold, color=blue];
m21_43 -> m21_44  [key=0, style=solid];
m21_43 -> m21_45  [key=2, style=dotted];
m21_44 -> m21_42  [key=0, style=bold, color=blue];
m21_34 -> m21_46  [key=0, style=solid];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_21  [key=2, style=dotted];
m21_47 -> m21_34  [key=0, style=bold, color=blue];
m21_22 -> m21_23  [key=0, style=solid];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_8  [key=2, style=dotted];
m21_23 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_9  [key=2, style=dotted];
m21_25 -> m21_22  [key=0, style=bold, color=blue];
m21_48 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m21_48 -> m21_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m22_8 -> m22_9  [key=0, style=solid];
m22_24 -> m22_28  [key=0, style=solid];
m22_53 -> m22_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.States.IStateChangeProcess _stateChangeProcess"];
m22_18 -> m22_19  [key=0, style=solid, color=red];
m22_18 -> m22_24  [key=2, style=dotted, color=red];
m22_19 -> m22_17  [key=2, style=dotted];
m22_19 -> m22_20  [key=0, style=solid, color=red];
m22_19 -> m22_25  [key=2, style=dotted, color=red];
m22_20 -> m22_21  [key=0, style=solid];
m22_21 -> m22_18  [key=0, style=bold, color=blue];
m22_21 -> m22_9  [key=0, style=bold, color=blue];
m22_0 -> m22_7  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m22_0 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m22_0 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_0 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m22_0 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m22_0 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_0  [key=0, style=bold, color=blue];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m22_9 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m22_9 -> m22_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m22_9 -> m22_18  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m22_9 -> m22_19  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_12  [key=0, style=solid];
m22_5 -> m22_7  [key=0, style=solid];
m22_5 -> m22_6  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=0, style=solid];
m22_3 -> m22_5  [key=0, style=solid];
m22_3 -> m22_4  [key=0, style=solid];
m22_6 -> m22_11  [key=0, style=solid];
m22_6 -> n17  [key=2, style=dotted];
m22_6 -> m22_7  [key=0, style=solid];
m22_2 -> m22_11  [key=0, style=solid];
m22_2 -> n17  [key=2, style=dotted];
m22_2 -> m22_7  [key=0, style=solid];
m22_2 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_11  [key=0, style=solid];
m22_4 -> n17  [key=2, style=dotted];
m22_4 -> m22_7  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_11 -> m22_0  [key=0, style=bold, color=blue];
m22_11 -> m22_21  [key=0, style=solid];
m22_11 -> m22_8  [key=2, style=dotted];
m22_17 -> m22_18  [key=0, style=solid, color=red];
m22_17 -> m22_22  [key=2, style=dotted];
m22_17 -> m22_23  [key=2, style=dotted];
m22_17 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid, color=green];
m22_14 -> m22_16  [key=0, style=solid];
m22_14 -> m22_17  [key=2, style=dotted, color=green];
m22_13 -> m22_21  [key=0, style=solid];
m22_13 -> m22_8  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid, color=green];
m22_15 -> m22_21  [key=0, style=solid];
m22_15 -> m22_8  [key=2, style=dotted];
m22_15 -> m22_16  [key=0, style=solid];
m22_16 -> m22_17  [key=0, style=solid];
m22_16 -> m22_18  [key=1, style=dashed, color=red, label=createdAt];
m22_16 -> m22_13  [key=0, style=bold, color=blue];
m22_22 -> m22_23  [key=0, style=solid];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_25  [key=0, style=solid];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_27  [key=0, style=solid];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_18  [key=2, style=dotted];
m22_26 -> m22_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m22_26 -> m22_31  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m22_26 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_26 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_26 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m22_26 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m22_26 -> m22_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m22_26 -> m22_45  [key=1, style=dashed, color=red, label=string];
m22_26 -> m22_46  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m22_26 -> m22_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryToChangeState"];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_29  [key=0, style=solid];
m22_28 -> m22_22  [key=0, style=bold, color=blue];
m22_28 -> m22_48  [key=0, style=solid];
m22_28 -> m22_8  [key=2, style=dotted];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_31  [key=0, style=solid];
m22_29 -> m22_14  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_29 -> m22_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_33  [key=0, style=solid];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_50  [key=2, style=dotted];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_51  [key=2, style=dotted];
m22_34 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m22_34 -> m22_40  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m22_34 -> m22_45  [key=1, style=dashed, color=red, label=jobData];
m22_34 -> m22_46  [key=1, style=dashed, color=red, label=jobData];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_39  [key=0, style=solid];
m22_37 -> m22_52  [key=2, style=dotted];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_45  [key=0, style=solid, color=red];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_54  [key=2, style=dotted];
m22_43 -> m22_55  [key=2, style=dotted];
m22_43 -> m22_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m22_43 -> m22_46  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m22_45 -> m22_46  [key=0, style=solid, color=red];
m22_45 -> m22_24  [key=2, style=dotted, color=red];
m22_46 -> m22_47  [key=0, style=solid, color=red];
m22_46 -> m22_25  [key=2, style=dotted, color=red];
m22_30 -> m22_48  [key=0, style=solid];
m22_30 -> m22_8  [key=2, style=dotted];
m22_32 -> m22_48  [key=0, style=solid];
m22_32 -> m22_49  [key=2, style=dotted];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_37  [key=0, style=solid];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_45  [key=0, style=solid, color=red];
m22_40 -> m22_53  [key=2, style=dotted];
m22_36 -> m22_48  [key=0, style=solid];
m22_38 -> m22_48  [key=0, style=solid];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m22_39 -> m22_39  [key=3, color=darkorchid, style=bold, label="Local variable bool loadSucceeded"];
m22_47 -> m22_48  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_44 -> m22_45  [key=0, style=solid, color=red];
m22_44 -> m22_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m22_48 -> m22_26  [key=0, style=bold, color=blue];
m22_56 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m22_56 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m22_56 -> m22_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m22_56 -> m22_18  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachine"];
m22_56 -> m22_19  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachine"];
m22_56 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m22_56 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m22_56 -> m22_45  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachine"];
m22_56 -> m22_46  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachine"];
m23_7 -> m23_0  [key=0, style=bold, color=blue];
m23_119 -> m23_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_119 -> m23_120  [key=0, style=solid];
m23_119 -> m23_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m23_119 -> m23_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m23_125 -> m23_126  [key=0, style=solid];
m23_125 -> m23_67  [key=2, style=dotted];
m23_125 -> m23_71  [key=2, style=dotted];
m23_121 -> n17  [key=2, style=dotted];
m23_121 -> m23_126  [key=0, style=solid];
m23_123 -> n17  [key=2, style=dotted];
m23_123 -> m23_126  [key=0, style=solid];
m23_124 -> m23_125  [key=0, style=solid];
m23_124 -> m23_127  [key=2, style=dotted];
m23_120 -> m23_121  [key=0, style=solid];
m23_120 -> m23_122  [key=0, style=solid];
m23_122 -> m23_123  [key=0, style=solid];
m23_122 -> m23_124  [key=0, style=solid];
m23_126 -> m23_119  [key=0, style=bold, color=blue];
m23_97 -> m23_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_97 -> m23_98  [key=0, style=solid];
m23_97 -> m23_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_102 -> m23_103  [key=0, style=solid];
m23_102 -> m23_69  [key=2, style=dotted];
m23_102 -> m23_45  [key=2, style=dotted];
m23_99 -> n17  [key=2, style=dotted];
m23_99 -> m23_103  [key=0, style=solid];
m23_101 -> n17  [key=2, style=dotted];
m23_101 -> m23_103  [key=0, style=solid];
m23_100 -> m23_102  [key=0, style=solid];
m23_100 -> m23_101  [key=0, style=solid];
m23_98 -> m23_99  [key=0, style=solid];
m23_98 -> m23_100  [key=0, style=solid];
m23_103 -> m23_97  [key=0, style=bold, color=blue];
m23_49 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_49 -> m23_50  [key=0, style=solid];
m23_49 -> m23_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m23_49 -> m23_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m23_49 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m23_49 -> m23_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m23_49 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_67  [key=2, style=dotted];
m23_56 -> m23_68  [key=2, style=dotted];
m23_56 -> m23_69  [key=2, style=dotted];
m23_56 -> m23_70  [key=2, style=dotted];
m23_56 -> m23_48  [key=2, style=dotted];
m23_56 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_56 -> m23_64  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_71  [key=2, style=dotted];
m23_51 -> n17  [key=2, style=dotted];
m23_51 -> m23_65  [key=0, style=solid];
m23_53 -> n17  [key=2, style=dotted];
m23_53 -> m23_65  [key=0, style=solid];
m23_55 -> m23_56  [key=0, style=solid];
m23_55 -> m23_66  [key=2, style=dotted];
m23_54 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m23_54 -> m23_55  [key=0, style=solid];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_64  [key=0, style=solid];
m23_61 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m23_61 -> m23_60  [key=0, style=solid];
m23_64 -> m23_65  [key=0, style=solid];
m23_58 -> m23_63  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m23_58 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m23_58 -> m23_59  [key=0, style=solid];
m23_62 -> m23_63  [key=0, style=solid];
m23_50 -> m23_51  [key=0, style=solid];
m23_50 -> m23_52  [key=0, style=solid];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_54  [key=0, style=solid];
m23_60 -> m23_61  [key=0, style=solid];
m23_60 -> m23_62  [key=0, style=solid];
m23_59 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m23_59 -> m23_60  [key=0, style=solid];
m23_65 -> m23_49  [key=0, style=bold, color=blue];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_12  [key=2, style=dotted];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_0 -> m23_3  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerStorageOptions"];
m23_0 -> m23_6  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerStorageOptions"];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_3  [key=0, style=solid, color=green];
m23_5 -> m23_6  [key=0, style=solid, color=green];
m23_5 -> m23_10  [key=2, style=dotted];
m23_5 -> m23_9  [key=2, style=dotted];
m23_2 -> m23_6  [key=0, style=solid];
m23_2 -> m23_7  [key=2, style=dotted];
m23_2 -> n17  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid, color=green];
m23_3 -> m23_8  [key=2, style=dotted];
m23_3 -> m23_5  [key=0, style=solid, color=green];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_9  [key=2, style=dotted];
m23_4 -> m23_7  [key=0, style=solid, color=green];
m23_4 -> n17  [key=2, style=dotted, color=green];
m23_6 -> m23_0  [key=0, style=bold, color=blue];
m23_6 -> m23_7  [key=0, style=solid, color=green];
m23_17 -> m23_18  [key=0, style=solid];
m23_72 -> m23_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_72 -> m23_73  [key=0, style=solid];
m23_76 -> m23_77  [key=0, style=solid];
m23_76 -> m23_69  [key=2, style=dotted];
m23_76 -> m23_45  [key=2, style=dotted];
m23_76 -> m23_79  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m23_76 -> m23_80  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m23_76 -> m23_86  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m23_74 -> n17  [key=2, style=dotted];
m23_74 -> m23_87  [key=0, style=solid];
m23_75 -> m23_76  [key=0, style=solid];
m23_77 -> m23_78  [key=0, style=solid];
m23_77 -> m23_79  [key=0, style=solid];
m23_79 -> m23_69  [key=2, style=dotted];
m23_79 -> m23_80  [key=0, style=solid];
m23_79 -> m23_83  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m23_80 -> m23_81  [key=0, style=solid];
m23_86 -> m23_87  [key=0, style=solid];
m23_86 -> m23_89  [key=2, style=dotted];
m23_73 -> m23_74  [key=0, style=solid];
m23_73 -> m23_75  [key=0, style=solid];
m23_78 -> m23_87  [key=0, style=solid];
m23_83 -> m23_86  [key=0, style=solid];
m23_83 -> m23_84  [key=0, style=solid];
m23_83 -> m23_88  [key=2, style=dotted];
m23_81 -> m23_82  [key=0, style=solid];
m23_85 -> m23_86  [key=0, style=solid];
m23_82 -> m23_83  [key=0, style=solid];
m23_84 -> m23_85  [key=0, style=solid];
m23_87 -> m23_72  [key=0, style=bold, color=blue];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_16  [key=0, style=solid];
m23_13 -> m23_7  [key=2, style=dotted];
m23_14 -> m23_15  [key=0, style=solid, color=red];
m23_14 -> m23_16  [key=2, style=dotted];
m23_14 -> m23_17  [key=2, style=dotted, color=red];
m23_15 -> m23_13  [key=0, style=bold, color=blue];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> m23_18  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_14  [key=1, style=dashed, color=red, label="Hangfire.Storage.IStorageConnection"];
m23_11 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m23_11 -> m23_9  [key=0, style=bold, color=blue];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_14  [key=0, style=solid, color=red];
m23_16 -> m23_11  [key=0, style=bold, color=blue];
m23_9 -> m23_10  [key=0, style=solid];
m23_22 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_25  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m23_22 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_21  [key=2, style=dotted];
m23_32 -> m23_43  [key=2, style=dotted];
m23_32 -> m23_44  [key=2, style=dotted];
m23_32 -> m23_45  [key=2, style=dotted];
m23_32 -> m23_38  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m23_32 -> m23_39  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m23_35 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_46  [key=2, style=dotted];
m23_24 -> n17  [key=2, style=dotted];
m23_24 -> m23_40  [key=0, style=solid];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m23_31 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m23_31 -> m23_42  [key=2, style=dotted];
m23_28 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m23_28 -> m23_29  [key=0, style=solid];
m23_29 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_34  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m23_29 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m23_30 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m23_30 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_37  [key=0, style=solid];
m23_38 -> m23_30  [key=0, style=solid];
m23_38 -> m23_39  [key=0, style=solid];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_47  [key=2, style=dotted];
m23_39 -> m23_48  [key=2, style=dotted];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_37  [key=0, style=solid];
m23_36 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_42  [key=2, style=dotted];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_25  [key=0, style=solid];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_27  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m23_26 -> m23_40  [key=0, style=solid];
m23_26 -> m23_41  [key=2, style=dotted];
m23_40 -> m23_22  [key=0, style=bold, color=blue];
m23_138 -> m23_139  [key=0, style=solid];
m23_141 -> m23_141  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_141 -> m23_142  [key=0, style=solid];
m23_141 -> m23_43  [key=2, style=dotted];
m23_141 -> m23_68  [key=2, style=dotted];
m23_141 -> m23_71  [key=2, style=dotted];
m23_139 -> m23_141  [key=0, style=solid];
m23_139 -> m23_139  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_139 -> m23_140  [key=0, style=solid];
m23_139 -> m23_143  [key=2, style=dotted];
m23_140 -> m23_142  [key=0, style=solid];
m23_140 -> m23_41  [key=2, style=dotted];
m23_142 -> m23_138  [key=0, style=bold, color=blue];
m23_104 -> m23_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_104 -> m23_105  [key=0, style=solid];
m23_104 -> m23_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_109 -> m23_110  [key=0, style=solid];
m23_109 -> m23_71  [key=2, style=dotted];
m23_106 -> n17  [key=2, style=dotted];
m23_106 -> m23_110  [key=0, style=solid];
m23_108 -> n17  [key=2, style=dotted];
m23_108 -> m23_110  [key=0, style=solid];
m23_107 -> m23_109  [key=0, style=solid];
m23_107 -> m23_108  [key=0, style=solid];
m23_105 -> m23_106  [key=0, style=solid];
m23_105 -> m23_107  [key=0, style=solid];
m23_110 -> m23_104  [key=0, style=bold, color=blue];
m23_90 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_90 -> m23_91  [key=0, style=solid];
m23_90 -> m23_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_95 -> m23_96  [key=0, style=solid];
m23_95 -> m23_71  [key=2, style=dotted];
m23_92 -> n17  [key=2, style=dotted];
m23_92 -> m23_96  [key=0, style=solid];
m23_94 -> n17  [key=2, style=dotted];
m23_94 -> m23_96  [key=0, style=solid];
m23_93 -> m23_95  [key=0, style=solid];
m23_93 -> m23_94  [key=0, style=solid];
m23_91 -> m23_92  [key=0, style=solid];
m23_91 -> m23_93  [key=0, style=solid];
m23_96 -> m23_90  [key=0, style=bold, color=blue];
m23_111 -> m23_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_111 -> m23_112  [key=0, style=solid];
m23_111 -> m23_114  [key=1, style=dashed, color=darkseagreen4, label=double];
m23_116 -> m23_117  [key=0, style=solid];
m23_116 -> m23_69  [key=2, style=dotted];
m23_116 -> m23_45  [key=2, style=dotted];
m23_113 -> n17  [key=2, style=dotted];
m23_113 -> m23_117  [key=0, style=solid];
m23_114 -> m23_116  [key=0, style=solid];
m23_114 -> m23_115  [key=0, style=solid];
m23_112 -> m23_113  [key=0, style=solid];
m23_112 -> m23_114  [key=0, style=solid];
m23_115 -> m23_117  [key=0, style=solid];
m23_115 -> m23_118  [key=2, style=dotted];
m23_117 -> m23_111  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_20  [key=2, style=dotted];
m23_18 -> m23_21  [key=2, style=dotted];
m23_19 -> m23_17  [key=0, style=bold, color=blue];
m23_19 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m23_19 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m23_19 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m23_19 -> m23_14  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachineFactory"];
m23_128 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_128 -> m23_129  [key=0, style=solid];
m23_131 -> m23_132  [key=0, style=solid];
m23_131 -> m23_71  [key=2, style=dotted];
m23_130 -> n17  [key=2, style=dotted];
m23_130 -> m23_132  [key=0, style=solid];
m23_129 -> m23_131  [key=0, style=solid];
m23_129 -> m23_130  [key=0, style=solid];
m23_132 -> m23_128  [key=0, style=bold, color=blue];
m23_133 -> m23_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_133 -> m23_134  [key=0, style=solid];
m23_136 -> m23_137  [key=0, style=solid];
m23_136 -> m23_71  [key=2, style=dotted];
m23_135 -> n17  [key=2, style=dotted];
m23_135 -> m23_137  [key=0, style=solid];
m23_134 -> m23_136  [key=0, style=solid];
m23_134 -> m23_135  [key=0, style=solid];
m23_137 -> m23_133  [key=0, style=bold, color=blue];
m23_144 -> m23_6  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_144 -> m23_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m24_18 -> m24_19  [key=0, style=solid];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_17  [key=2, style=dotted];
m24_20 -> m24_21  [key=0, style=solid];
m24_21 -> m24_18  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid, color=green];
m24_0 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_0 -> m24_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_0 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m24_0 -> m24_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m24_0 -> m24_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_0 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_1 -> m24_2  [key=0, style=solid, color=green];
m24_1 -> m24_3  [key=0, style=solid, color=green];
m24_2 -> m24_11  [key=0, style=solid, color=green];
m24_2 -> n17  [key=2, style=dotted, color=green];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid];
m24_8 -> m24_9  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_10 -> m24_11  [key=0, style=solid];
m24_4 -> m24_11  [key=0, style=solid];
m24_4 -> n17  [key=2, style=dotted];
m24_6 -> m24_11  [key=0, style=solid];
m24_6 -> n17  [key=2, style=dotted];
m24_11 -> m24_0  [key=0, style=bold, color=blue];
m24_22 -> m24_23  [key=0, style=solid];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_25  [key=0, style=solid];
m24_25 -> m24_26  [key=0, style=solid];
m24_25 -> m24_27  [key=0, style=solid];
m24_26 -> m24_27  [key=0, style=solid];
m24_26 -> m24_18  [key=2, style=dotted];
m24_27 -> m24_28  [key=0, style=solid];
m24_24 -> m24_28  [key=0, style=solid];
m24_28 -> m24_22  [key=0, style=bold, color=blue];
m24_13 -> m24_14  [key=0, style=solid];
m24_14 -> m24_15  [key=0, style=solid];
m24_14 -> m24_17  [key=2, style=dotted];
m24_15 -> m24_16  [key=0, style=solid];
m24_16 -> m24_13  [key=0, style=bold, color=blue];
m24_29 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m24_29 -> m24_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerFetchedJob"];
m25_22 -> m25_23  [key=0, style=solid];
m25_23 -> m25_24  [key=0, style=solid];
m25_24 -> m25_22  [key=0, style=bold, color=blue];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m25_6 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_17  [key=2, style=dotted];
m25_7 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=connection];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_18  [key=2, style=dotted];
m25_8 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m25_8 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m25_8 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_19  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_13  [key=0, style=solid];
m25_10 -> m25_16  [key=0, style=solid];
m25_10 -> m25_20  [key=2, style=dotted];
m25_12 -> m25_16  [key=0, style=solid];
m25_12 -> m25_20  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_21  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_13 -> m25_14  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_16 -> m25_6  [key=0, style=bold, color=blue];
m25_58 -> m25_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.Server.WorkerContext _context"];
m25_19 -> m25_25  [key=0, style=solid];
m25_19 -> m25_27  [key=1, style=dashed, color=red, label=string];
m25_19 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_19 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_19 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_19 -> m25_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformanceProcess"];
m25_19 -> m25_45  [key=1, style=dashed, color=red, label=string];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_47  [key=2, style=dotted];
m25_25 -> m25_27  [key=1, style=dashed, color=red, label=stateMachine];
m25_25 -> m25_45  [key=1, style=dashed, color=red, label=stateMachine];
m25_27 -> m25_28  [key=0, style=solid, color=red];
m25_27 -> m25_29  [key=0, style=solid, color=red];
m25_27 -> m25_49  [key=2, style=dotted, color=red];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_50  [key=2, style=dotted];
m25_30 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m25_30 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m25_30 -> m25_36  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_52  [key=2, style=dotted];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_53  [key=2, style=dotted];
m25_33 -> m25_36  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_55  [key=2, style=dotted];
m25_36 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=result];
m25_45 -> m25_46  [key=0, style=solid, color=red];
m25_45 -> m25_49  [key=2, style=dotted, color=red];
m25_26 -> m25_27  [key=0, style=solid, color=red];
m25_26 -> m25_48  [key=2, style=dotted];
m25_28 -> m25_46  [key=0, style=solid];
m25_29 -> m25_30  [key=0, style=solid];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_51  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=latency];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_54  [key=2, style=dotted];
m25_35 -> m25_37  [key=1, style=dashed, color=darkseagreen4, label=duration];
m25_35 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=duration];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_41  [key=0, style=solid];
m25_38 -> m25_43  [key=0, style=solid];
m25_38 -> m25_45  [key=0, style=solid, color=red];
m25_38 -> m25_57  [key=2, style=dotted];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_56  [key=2, style=dotted];
m25_39 -> m25_40  [key=0, style=solid];
m25_41 -> m25_42  [key=0, style=solid];
m25_43 -> m25_44  [key=0, style=solid];
m25_40 -> m25_46  [key=0, style=solid];
m25_42 -> m25_45  [key=0, style=solid, color=red];
m25_42 -> m25_58  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid, color=red];
m25_44 -> m25_58  [key=2, style=dotted];
m25_46 -> m25_19  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.WorkerContext"];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=0, style=solid];
m25_3 -> m25_4  [key=0, style=solid];
m25_2 -> m25_4  [key=0, style=solid];
m25_2 -> n17  [key=2, style=dotted];
m25_4 -> m25_0  [key=0, style=bold, color=blue];
m25_59 -> m25_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m25_59 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m26_12 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_15  [key=2, style=dotted];
m26_14 -> m26_12  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_0 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_0 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m26_0 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_0 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=0, style=solid];
m26_7 -> m26_8  [key=0, style=solid];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_2 -> m26_10  [key=0, style=solid];
m26_2 -> n17  [key=2, style=dotted];
m26_4 -> m26_10  [key=0, style=solid];
m26_4 -> n17  [key=2, style=dotted];
m26_6 -> m26_10  [key=0, style=solid];
m26_6 -> n17  [key=2, style=dotted];
m26_10 -> m26_0  [key=0, style=bold, color=blue];
m26_16 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m26_16 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m26_16 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m26_16 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
}
