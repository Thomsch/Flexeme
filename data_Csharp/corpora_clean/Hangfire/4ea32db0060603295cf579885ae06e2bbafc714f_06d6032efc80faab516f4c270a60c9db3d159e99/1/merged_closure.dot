digraph  {
n215 [label="Hangfire.Core.Tests.Common.JobArgumentFacts", span=""];
n216 [label=T, span=""];
n217 [label=converter, span=""];
n0 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", span="16-16"];
n1 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", label="_activator = new Mock<JobActivator>()", span="18-18"];
n2 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>()))\r\n				      .Returns(() => new JobArgumentFacts())", span="19-20"];
n5 [cluster="Mock<JobActivator>.cstr", label="Entry Mock<JobActivator>.cstr", span=""];
n3 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", label="_token = new Mock<IJobCancellationToken>()", span="22-22"];
n6 [cluster="Unk.Setup", label="Entry Unk.Setup", span=""];
n7 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
n9 [cluster="lambda expression", label="Entry lambda expression", span="19-19"];
n14 [cluster="lambda expression", label="Entry lambda expression", span="20-20"];
n4 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.JobArgumentFacts()", span="16-16"];
n8 [cluster="Mock<IJobCancellationToken>.cstr", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
n10 [cluster="lambda expression", label="x.ActivateJob(It.IsAny<Type>())", span="19-19"];
n11 [cluster="lambda expression", label="Exit lambda expression", span="19-19"];
n12 [cluster="Unk.>", label="Entry Unk.>", span=""];
n13 [cluster="Unk.ActivateJob", label="Entry Unk.ActivateJob", span=""];
n15 [cluster="lambda expression", label="new JobArgumentFacts()", span="20-20"];
n16 [cluster="lambda expression", label="Exit lambda expression", span="20-20"];
n17 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(bool)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(bool)", span="26-26"];
n18 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(bool)", label="Assert.Equal(BooleanValue, value)", span="26-26"];
n19 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(bool)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(bool)", span="26-26"];
n20 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n21 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", span="29-29"];
n22 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(BooleanValue)", span="31-31"];
n23 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.BooleanArguments_AreBeingCorrectlyDeserialized()", span="29-29"];
n24 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", span="292-292"];
n25 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", span="35-35"];
n26 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", label="Assert.Equal(ByteValue, value)", span="35-35"];
n27 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(byte)", span="35-35"];
n28 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", span="38-38"];
n29 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(ByteValue)", span="40-40"];
n30 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ByteValues_AreBeingCorrectlyDeserialized()", span="38-38"];
n31 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", span="44-44"];
n32 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", label="Assert.Equal(SByteValue, value)", span="44-44"];
n33 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(sbyte)", span="44-44"];
n34 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", span="47-47"];
n35 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(SByteValue)", span="49-49"];
n36 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.SByteValues_AreBeingCorrectlyDeserialized()", span="47-47"];
n37 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(char)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(char)", span="53-53"];
n38 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(char)", label="Assert.Equal(CharValue, value)", span="53-53"];
n39 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(char)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(char)", span="53-53"];
n40 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56"];
n41 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(CharValue)", span="58-58"];
n42 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CharValues_AreBeingCorrectlyDeserialized()", span="56-56"];
n43 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(decimal)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(decimal)", span="62-62"];
n44 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(decimal)", label="Assert.Equal(DecimalValue, value)", span="62-62"];
n45 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(decimal)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(decimal)", span="62-62"];
n46 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65"];
n47 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(DecimalValue)", span="67-67"];
n48 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DecimalValues_AreBeingCorrectlyDeserialized()", span="65-65"];
n49 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", span="71-71"];
n50 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", label="Assert.Equal(DoubleValue, value)", span="71-71"];
n51 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(double)", span="71-71"];
n52 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74"];
n53 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(DoubleValue)", span="76-76"];
n54 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DoubleValues_AreBeingCorrectlyDeserialized()", span="74-74"];
n55 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", span="80-80"];
n56 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", label="Assert.Equal(SingleValue, value)", span="80-80"];
n57 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(float)", span="80-80"];
n58 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SingleValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.SingleValues_AreBeingCorrectlyDeserialized()", span="83-83"];
n59 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SingleValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(SingleValue)", span="85-85"];
n60 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.SingleValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.SingleValues_AreBeingCorrectlyDeserialized()", span="83-83"];
n61 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89"];
n62 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", label="Assert.Equal(Int32Value, value)", span="89-89"];
n63 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int)", span="89-89"];
n64 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92"];
n65 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(Int32Value)", span="94-94"];
n66 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Int32Values_AreBeingCorrectlyDeserialized()", span="92-92"];
n67 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98"];
n68 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", label="Assert.Equal(UInt32Value, value)", span="98-98"];
n69 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(uint)", span="98-98"];
n70 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", span="101-101"];
n71 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(UInt32Value)", span="103-103"];
n72 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt32Values_AreBeingCorrectlyDeserialized()", span="101-101"];
n73 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long)", span="107-107"];
n74 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long)", label="Assert.Equal(Int64Value, value)", span="107-107"];
n75 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long)", span="107-107"];
n76 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int64Values_AreBeingCorrectyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Int64Values_AreBeingCorrectyDeserialized()", span="110-110"];
n77 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int64Values_AreBeingCorrectyDeserialized()", label="CreateAndPerform(Int64Value)", span="112-112"];
n78 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int64Values_AreBeingCorrectyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Int64Values_AreBeingCorrectyDeserialized()", span="110-110"];
n79 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", span="116-116"];
n80 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", label="Assert.Equal(UInt64Value, value)", span="116-116"];
n81 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ulong)", span="116-116"];
n82 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", span="119-119"];
n83 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(UInt64Value)", span="121-121"];
n84 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt64Values_AreBeingCorrectlyDeserialized()", span="119-119"];
n85 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", span="125-125"];
n86 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", label="Assert.Equal(Int16Value, value)", span="125-125"];
n87 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(short)", span="125-125"];
n88 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", span="128-128"];
n89 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(Int16Value)", span="130-130"];
n90 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Int16Values_AreBeingCorrectlyDeserialized()", span="128-128"];
n91 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134"];
n92 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", label="Assert.Equal(UInt16Value, value)", span="134-134"];
n93 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(ushort)", span="134-134"];
n94 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", span="137-137"];
n95 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(UInt16Value)", span="139-139"];
n96 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UInt16Values_AreBeingCorrectlyDeserialized()", span="137-137"];
n97 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", span="143-143"];
n98 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", label="Assert.Equal(StringValue, value)", span="143-143"];
n99 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string)", span="143-143"];
n100 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", span="146-146"];
n101 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(StringValue)", span="148-148"];
n102 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.StringValues_AreBeingCorrectlyDeserialized()", span="146-146"];
n103 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", span="152-152"];
n104 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", label="Assert.Equal(TimeSpanValue, value)", span="152-152"];
n105 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.TimeSpan)", span="152-152"];
n106 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", span="155-155"];
n107 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(TimeSpanValue)", span="157-157"];
n108 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.TimeSpanValues_AreBeingCorrectlyDeserialized()", span="155-155"];
n109 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161"];
n110 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", label="Assert.Equal(ObjectValue, value)", span="161-161"];
n111 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(object)", span="161-161"];
n112 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", span="164-164"];
n113 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", label="CreateAndPerform(ObjectValue)", span="166-166"];
n114 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ObjectValues_AreBeingDeserializedAsStrings()", span="164-164"];
n115 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", span="170-170"];
n116 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", label="Assert.Equal(DateTimeOffsetValue, value)", span="170-170"];
n117 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DateTimeOffset)", span="170-170"];
n118 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", span="173-173"];
n119 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", label="CreateAndPerform(DateTimeOffsetValue)", span="175-175"];
n120 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DateTimeOffsetValues_AreBeingDeserializedCorrectly()", span="173-173"];
n121 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179"];
n122 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", label="Assert.Equal(CultureInfoValue, value)", span="179-179"];
n123 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Globalization.CultureInfo)", span="179-179"];
n124 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182"];
n125 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", label="CreateAndPerform(CultureInfoValue)", span="184-184"];
n126 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CultureInfoValues_AreBeingDeserializedCorrectly()", span="182-182"];
n127 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", span="188-188"];
n128 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", label="Assert.Equal(EnumValue, value)", span="188-188"];
n129 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.DayOfWeek)", span="188-188"];
n130 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", span="191-191"];
n131 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", label="CreateAndPerform(EnumValue)", span="193-193"];
n132 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.EnumValues_AreBeingDeserializedCorrectly()", span="191-191"];
n133 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197"];
n134 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", label="Assert.Equal(GuidValue, value)", span="197-197"];
n135 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Guid)", span="197-197"];
n136 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", span="200-200"];
n137 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(GuidValue)", span="202-202"];
n138 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.GuidValues_AreBeingCorrectlyDeserialized()", span="200-200"];
n139 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", span="206-206"];
n140 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", label="Assert.Equal(UriValue, value)", span="206-206"];
n141 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Uri)", span="206-206"];
n142 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209"];
n143 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(UriValue)", span="211-211"];
n144 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.UriValues_AreBeingCorrectlyDeserialized()", span="209-209"];
n145 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", span="215-215"];
n146 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", label="Assert.Equal(NotNullNullableValue, value)", span="215-215"];
n147 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(long?)", span="215-215"];
n148 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218"];
n149 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(NotNullNullableValue)", span="220-220"];
n150 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.NotNullNullableValues_AreBeingCorrectlyDeserialized()", span="218-218"];
n151 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224"];
n152 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", label="Assert.Equal(NullNullableValue, value)", span="224-224"];
n153 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(int?)", span="224-224"];
n154 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", span="227-227"];
n155 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", label="CreateAndPerform(NullNullableValue)", span="229-229"];
n156 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.NullNullableValues_AreBeingCorrectlyDeserialized()", span="227-227"];
n157 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233"];
n158 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", label="Assert.Equal(ArrayValue, value)", span="233-233"];
n159 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(string[])", span="233-233"];
n160 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236"];
n161 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", label="CreateAndPerform(ArrayValue, true)", span="238-238"];
n162 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ArrayValues_AreBeingCorrectlyDeserialized_FromJson()", span="236-236"];
n163 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242"];
n164 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", label="Assert.Equal(ListValue, value)", span="242-242"];
n165 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.List<System.DateTime>)", span="242-242"];
n166 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", span="245-245"];
n167 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", label="CreateAndPerform(ListValue, true)", span="247-247"];
n168 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.ListValues_AreBeingCorrectlyDeserialized_FromJson()", span="245-245"];
n169 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255"];
n170 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", label="Assert.Equal(DictionaryValue, value)", span="255-255"];
n171 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(System.Collections.Generic.Dictionary<System.TimeSpan, string>)", span="255-255"];
n172 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258"];
n173 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", label="CreateAndPerform(DictionaryValue, true)", span="260-260"];
n174 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.DictionaryValues_AreBeingCorrectlyDeserialized_FromJson()", span="258-258"];
n175 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", span="270-270"];
n176 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", label="Assert.Equal(CustomStructValue, value)", span="270-270"];
n177 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyStruct)", span="270-270"];
n178 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273"];
n179 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", label="CreateAndPerform(CustomStructValue, true)", span="275-275"];
n180 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CustomStructValues_AreBeingCorrectlyDeserialized_FromJson()", span="273-273"];
n181 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284"];
n182 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", label="Assert.Equal(CustomClassValue.CreatedAt, value.CreatedAt)", span="284-284"];
n183 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.Method(Hangfire.Core.Tests.Common.JobArgumentFacts.MyClass)", span="284-284"];
n184 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", label="Entry Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", span="287-287"];
n185 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", label="CreateAndPerform(CustomClassValue, true)", span="289-289"];
n186 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CustomClassValues_AreBeingCorrectlyDeserialized_FromJson()", span="287-287"];
n187 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="var type = typeof(JobArgumentFacts)", span="294-294"];
n190 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="!checkJsonOnly", span="299-299"];
n192 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="serializationMethods.Add(new Tuple<string, Func<string>>(\r\n					''TypeDescriptor'',\r\n					() => converter.ConvertToInvariantString(argumentValue)))", span="302-304"];
n208 [cluster="lambda expression", label="converter.ConvertToInvariantString(argumentValue)", span="304-304"];
n193 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="serializationMethods.Add(new Tuple<string, Func<string>>(\r\n				''JSON'',\r\n				() => JsonConvert.SerializeObject(argumentValue)))", span="307-309"];
n212 [cluster="lambda expression", label="JsonConvert.SerializeObject(argumentValue)", span="309-309"];
n188 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="var methodInfo = type.GetMethod(''Method'', new[] { typeof(T) })", span="295-295"];
n195 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="var job = new Job(type, methodInfo, new[] { method.Item2() })", span="313-313"];
n189 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="var serializationMethods = new List<Tuple<string, Func<string>>>()", span="297-297"];
n198 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n199 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n194 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label=serializationMethods, span="311-311"];
n191 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="var converter = TypeDescriptor.GetConverter(typeof(T))", span="301-301"];
n200 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
n201 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
n202 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n203 [cluster="Tuple<string, Func<string>>.cstr", label="Entry Tuple<string, Func<string>>.cstr", span=""];
n197 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="Exit Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", span="292-292"];
n196 [cluster="Hangfire.Core.Tests.Common.JobArgumentFacts.CreateAndPerform<T>(T, bool)", label="job.Perform(_activator.Object, _token.Object)", span="314-314"];
n204 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="68-68"];
n205 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n206 [cluster="Unk.Perform", label="Entry Unk.Perform", span=""];
n207 [cluster="lambda expression", label="Entry lambda expression", span="304-304"];
n209 [cluster="lambda expression", label="Exit lambda expression", span="304-304"];
n210 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
n211 [cluster="lambda expression", label="Entry lambda expression", span="309-309"];
n213 [cluster="lambda expression", label="Exit lambda expression", span="309-309"];
n214 [cluster="Unk.SerializeObject", label="Entry Unk.SerializeObject", span=""];
m0_71 [cluster="RecurringJobScheduler.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry RecurringJobScheduler.cstr", span=""];
m0_63 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="61-61"];
m0_64 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _client.Object, _instantFactory.Object, _throttler.Object))", span="63-65"];
m0_65 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="67-67"];
m0_66 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="61-61"];
m0_115 [cluster="Unk.SetRangeInHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m0_17 [cluster="Mock<IBackgroundJobClient>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
m0_19 [cluster="Mock<IThrottler>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IThrottler>.cstr", span=""];
m0_152 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="160-160"];
m0_153 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var time = DateTime.UtcNow", span="162-162"];
m0_154 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", prediction=0, span="163-163"];
m0_157 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_instant.Verify(x => x.GetMatches(time))", span="168-168"];
m0_155 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="164-164"];
m0_156 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="166-166"];
m0_158 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="160-160"];
m0_58 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m0_163 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="172-172"];
m0_164 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="174-175"];
m0_165 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="176-176"];
m0_166 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="178-178"];
m0_167 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="172-172"];
m0_57 [cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_104 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="111-111"];
m0_105 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="114-114"];
m0_106 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="117-117"];
m0_107 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var jobKey = String.Format(''recurring-job:{0}'', RecurringJobId)", span="120-120"];
m0_108 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id'')))", span="122-125"];
m0_109 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution''] \r\n                        == JobHelper.SerializeDateTime(_instant.Object.UtcTime))))", span="127-131"];
m0_110 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence))))", span="133-137"];
m0_111 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="111-111"];
m0_133 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="141-141"];
m0_134 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetMatches(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="143-143"];
m0_135 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="144-144"];
m0_136 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="146-146"];
m0_137 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="148-150"];
m0_138 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence))))", span="152-156"];
m0_139 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="141-141"];
m0_18 [cluster="Mock<IScheduleInstantFactory>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IScheduleInstantFactory>.cstr", span=""];
m0_168 [cluster="Unk.DoesNotThrow", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m0_79 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="81-81"];
m0_80 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object))", span="83-85"];
m0_81 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''instantFactory'', exception.ParamName)", span="87-87"];
m0_82 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="81-81"];
m0_98 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="194-194"];
m0_184 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="return new RecurringJobScheduler(\r\n                _storage.Object, \r\n                _client.Object, \r\n                _instantFactory.Object,\r\n                _throttler.Object);", span="196-200"];
m0_185 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="194-194"];
m0_33 [cluster="Unk.>", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m0_99 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="56-56"];
m0_72 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="71-71"];
m0_73 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object))", span="73-75"];
m0_74 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="77-77"];
m0_75 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="71-71"];
m0_26 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m0_0 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27"];
m0_1 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_storage = new Mock<JobStorage>()", span="29-29"];
m0_2 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_client = new Mock<IBackgroundJobClient>()", span="30-30"];
m0_3 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = new Mock<IScheduleInstantFactory>()", span="31-31"];
m0_4 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_throttler = new Mock<IThrottler>()", span="32-32"];
m0_5 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_token = new CancellationTokenSource().Token", span="33-33"];
m0_6 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant = new Mock<IScheduleInstant>()", span="36-36"];
m0_7 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetMatches(It.IsAny<DateTime?>())).Returns(new[] { _instant.Object.UtcTime })", span="37-37"];
m0_8 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory.Setup(x => x.GetInstant(It.IsNotNull<CrontabSchedule>()))\r\n                .Returns(() => _instant.Object)", span="39-40"];
m0_9 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) }\r\n            }", span="42-46"];
m0_10 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="48-48"];
m0_11 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="49-49"];
m0_12 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="51-52"];
m0_13 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="54-55"];
m0_14 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_client.Setup(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>())).Returns(''job-id'')", span="57-57"];
m0_15 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27"];
m0_21 [cluster="Mock<IScheduleInstant>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m0_34 [cluster="Unk.GetMatches", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetMatches", span=""];
m0_49 [cluster="Unk.GetConnection", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetConnection", span=""];
m0_16 [cluster="Mock<JobStorage>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m0_126 [cluster="Unk.SerializeDateTime", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SerializeDateTime", span=""];
m0_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_159 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m0_22 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m0_93 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="101-101"];
m0_94 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="103-103"];
m0_95 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="105-105"];
m0_96 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="107-107"];
m0_97 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="101-101"];
m0_20 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m0_27 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m0_38 [cluster="Unk.GetInstant", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetInstant", span=""];
m0_181 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="191-191"];
m0_30 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="37-37"];
m0_35 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="39-39"];
m0_39 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="40-40"];
m0_42 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="45-45"];
m0_46 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="49-49"];
m0_50 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="51-51"];
m0_54 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="54-54"];
m0_59 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="57-57"];
m0_31 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetMatches(It.IsAny<DateTime?>())", span="37-37"];
m0_32 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="37-37"];
m0_36 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetInstant(It.IsNotNull<CrontabSchedule>())", span="39-39"];
m0_37 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="39-39"];
m0_40 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="_instant.Object", span="40-40"];
m0_41 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="40-40"];
m0_43 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="45-45"];
m0_44 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="45-45"];
m0_47 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetConnection()", span="49-49"];
m0_48 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="49-49"];
m0_51 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(''recurring-jobs'')", span="51-51"];
m0_52 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="51-51"];
m0_55 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="54-54"];
m0_56 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="54-54"];
m0_60 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="57-57"];
m0_61 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="57-57"];
m0_68 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="65-65"];
m0_69 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(null, _client.Object, _instantFactory.Object, _throttler.Object)", span="65-65"];
m0_70 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="65-65"];
m0_76 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="75-75"];
m0_77 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object)", span="75-75"];
m0_78 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="75-75"];
m0_83 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="85-85"];
m0_84 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object)", span="85-85"];
m0_85 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="85-85"];
m0_90 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="95-95"];
m0_91 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null)", span="95-95"];
m0_92 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="95-95"];
m0_101 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="107-107"];
m0_102 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="107-107"];
m0_103 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="107-107"];
m0_113 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''))", span="122-125"];
m0_121 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution''] \r\n                        == JobHelper.SerializeDateTime(_instant.Object.UtcTime)))", span="127-131"];
m0_128 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence)))", span="133-137"];
m0_112 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="122-125"];
m0_120 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="127-131"];
m0_127 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="133-137"];
m0_114 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="122-125"];
m0_116 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="124-125"];
m0_117 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''", span="125-125"];
m0_118 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="124-125"];
m0_122 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="127-131"];
m0_123 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="129-131"];
m0_124 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution''] \r\n                        == JobHelper.SerializeDateTime(_instant.Object.UtcTime)", span="130-131"];
m0_125 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="129-131"];
m0_129 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="133-137"];
m0_130 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="135-137"];
m0_131 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence)", span="136-137"];
m0_132 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="135-137"];
m0_140 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="143-143"];
m0_143 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="149-149"];
m0_146 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="152-156"];
m0_141 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetMatches(It.IsAny<DateTime?>())", span="143-143"];
m0_142 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="143-143"];
m0_144 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>())", span="149-149"];
m0_145 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="149-149"];
m0_147 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence)))", span="152-156"];
m0_148 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="152-156"];
m0_149 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="154-156"];
m0_150 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextOccurrence)", span="155-156"];
m0_151 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="154-156"];
m0_161 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetMatches(time)", span="168-168"];
m0_160 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="168-168"];
m0_162 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="168-168"];
m0_169 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="174-174"];
m0_173 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="178-178"];
m0_172 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="178-178"];
m0_170 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="174-174"];
m0_171 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="174-174"];
m0_174 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="178-178"];
m0_182 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_token)", span="191-191"];
m0_183 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="191-191"];
m0_100 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m0_53 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m0_62 [cluster="Unk.Create", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Create", span=""];
m0_180 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m0_23 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m0_86 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="91-91"];
m0_87 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null))", span="93-95"];
m0_88 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''throttler'', exception.ParamName)", span="97-97"];
m0_89 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="91-91"];
m0_175 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="182-182"];
m0_176 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="185-186"];
m0_177 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="188-188"];
m0_178 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="191-191"];
m0_179 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="182-182"];
m0_28 [cluster="Mock<IStorageConnection>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_45 [cluster="System.Console.WriteLine()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m0_25 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m0_119 [cluster="Unk.ContainsKey", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ContainsKey", span=""];
m0_29 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m0_186 [file="RecurringJobSchedulerFacts.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m0_187 [file="RecurringJobSchedulerFacts.cs", label=jobKey, span=""];
m0_188 [file="RecurringJobSchedulerFacts.cs", label=time, span=""];
m0_189 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m0_190 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
n215 -> n2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n143  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n149  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n161  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n167  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n185  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n215 -> n196  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobArgumentFacts", style=dashed];
n216 -> n208  [color=darkseagreen4, key=1, label=T, style=dashed];
n216 -> n212  [color=darkseagreen4, key=1, label=T, style=dashed];
n217 -> n208  [color=darkseagreen4, key=1, label=converter, style=dashed];
n2 -> n9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n2 -> n14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n24 -> n190  [color=darkseagreen4, key=1, label=bool, style=dashed];
n24 -> n192  [color=darkseagreen4, key=1, label=T, style=dashed];
n24 -> n208  [color=darkseagreen4, key=1, label=T, style=dashed];
n24 -> n193  [color=darkseagreen4, key=1, label=T, style=dashed];
n24 -> n212  [color=darkseagreen4, key=1, label=T, style=dashed];
n189 -> n192  [color=darkseagreen4, key=1, label=serializationMethods, style=dashed];
n189 -> n193  [color=darkseagreen4, key=1, label=serializationMethods, style=dashed];
n189 -> n194  [color=darkseagreen4, key=1, label=serializationMethods, style=dashed];
n191 -> n208  [color=darkseagreen4, key=1, label=converter, style=dashed];
m0_64 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_153 -> m0_157  [color=darkseagreen4, key=1, label=time, style=dashed];
m0_153 -> m0_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m0_157 -> m0_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_164 -> m0_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_165 -> m0_173  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m0_166 -> m0_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_107 -> m0_113  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_107 -> m0_121  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_107 -> m0_128  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_108 -> m0_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_109 -> m0_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_110 -> m0_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_134 -> m0_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_137 -> m0_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_138 -> m0_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_80 -> m0_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_7 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_9 -> m0_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_11 -> m0_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_12 -> m0_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_13 -> m0_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_96 -> m0_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_113 -> m0_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_121 -> m0_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_128 -> m0_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_147 -> m0_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_87 -> m0_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_177 -> m0_182  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m0_178 -> m0_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_186 -> m0_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_108  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_109  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_121  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_128  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_147  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_150  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_182  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_186 -> m0_184  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m0_187 -> m0_113  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_187 -> m0_121  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_187 -> m0_128  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m0_188 -> m0_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m0_189 -> m0_173  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m0_190 -> m0_182  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
}
