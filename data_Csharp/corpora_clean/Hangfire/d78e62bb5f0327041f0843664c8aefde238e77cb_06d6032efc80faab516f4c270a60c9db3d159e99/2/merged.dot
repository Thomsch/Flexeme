digraph  {
d21 [label="var client = ClientFactory()", span="107-107", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=1];
d20 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
d22 [label="return client.Schedule(methodCall, delay);", span="108-108", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=0];
d8 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
d23 [label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
d24 [label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85", cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)"];
d31 [label="var client = ClientFactory()", span="137-137", cluster="Hangfire.BackgroundJob.Delete(string, string)", color=green, community=1];
d30 [label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="135-135", cluster="Hangfire.BackgroundJob.Delete(string, string)"];
d32 [label="return client.Delete(jobId, fromState);", span="138-138", cluster="Hangfire.BackgroundJob.Delete(string, string)", color=green, community=0];
d33 [label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="135-135", cluster="Hangfire.BackgroundJob.Delete(string, string)"];
d34 [label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="195-195", cluster="Hangfire.IBackgroundJobClient.Delete(string, string)"];
d5 [label="var client = ClientFactory()", span="62-62", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)"];
d11 [label="var client = ClientFactory()", span="78-78", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)"];
d16 [label="var client = ClientFactory()", span="92-92", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
d26 [label="var client = ClientFactory()", span="121-121", cluster="Hangfire.BackgroundJob.Delete(string)"];
d36 [label="var client = ClientFactory()", span="150-150", cluster="Hangfire.BackgroundJob.Requeue(string)"];
d41 [label="var client = ClientFactory()", span="166-166", cluster="Hangfire.BackgroundJob.Requeue(string, string)"];
d4 [label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)"];
d6 [label="return client.Enqueue(methodCall);", span="63-63", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)"];
d10 [label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="76-76", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)"];
d12 [label="return client.Enqueue(methodCall);", span="79-79", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)"];
d15 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="90-90", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
d17 [label="return client.Schedule(methodCall, delay);", span="93-93", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
d25 [label="Entry Hangfire.BackgroundJob.Delete(string)", span="119-119", cluster="Hangfire.BackgroundJob.Delete(string)"];
d27 [label="return client.Delete(jobId);", span="122-122", cluster="Hangfire.BackgroundJob.Delete(string)"];
d35 [label="Entry Hangfire.BackgroundJob.Requeue(string)", span="148-148", cluster="Hangfire.BackgroundJob.Requeue(string)"];
d37 [label="return client.Requeue(jobId);", span="151-151", cluster="Hangfire.BackgroundJob.Requeue(string)"];
d40 [label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="164-164", cluster="Hangfire.BackgroundJob.Requeue(string, string)"];
d42 [label="return client.Requeue(jobId, fromState);", span="167-167", cluster="Hangfire.BackgroundJob.Requeue(string, string)"];
d7 [label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)"];
d9 [label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)"];
d13 [label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="76-76", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)"];
d14 [label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)"];
d18 [label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="90-90", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
d19 [label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68", cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)"];
d28 [label="Exit Hangfire.BackgroundJob.Delete(string)", span="119-119", cluster="Hangfire.BackgroundJob.Delete(string)"];
d29 [label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="166-166", cluster="Hangfire.IBackgroundJobClient.Delete(string)"];
d38 [label="Exit Hangfire.BackgroundJob.Requeue(string)", span="148-148", cluster="Hangfire.BackgroundJob.Requeue(string)"];
d39 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="211-211", cluster="Hangfire.IBackgroundJobClient.Requeue(string)"];
d43 [label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="164-164", cluster="Hangfire.BackgroundJob.Requeue(string, string)"];
d44 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="227-227", cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)"];
m0_5 [label="_queues = queues", span="28-28", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_11 [label="return client.Create(methodCall, new EnqueuedState());", span="57-57", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m0_15 [label="client == null", span="70-70", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_16 [label="throw new ArgumentNullException(''client'');", span="70-70", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_18 [label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_19 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_20 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_17 [label="return client.Create(methodCall, new ScheduledState(delay));", span="72-72", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_21 [label="client == null", span="87-87", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", color=green, community=0];
m0_22 [label="throw new ArgumentNullException(''client'');", span="87-87", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", color=green, community=0];
m0_23 [label="return client.Create(methodCall, new ScheduledState(delay));", span="89-89", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", color=green, community=0];
m0_26 [label="client == null", span="105-105", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs"];
m0_29 [label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="100-100", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs"];
m0_24 [label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_25 [label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="100-100", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs"];
m0_27 [label="throw new ArgumentNullException(''client'');", span="105-105", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", color=red, community=0, file="BackgroundJobClientExtensions.cs"];
m0_28 [label="return client.Create(Job.FromExpression(methodCall), state);", span="107-107", cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs"];
m0_30 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs"];
m0_31 [label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs"];
m0_45 [label="return Delete(client, jobId, null);", span="168-168", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs"];
m0_73 [label="Entry Unk.CreateModel", span="", cluster="Unk.CreateModel", file="BackgroundJobClientExtensions.cs"];
m0_6 [label="_factory = factory", span="29-29", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_57 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BackgroundJobClientExtensions.cs"];
m0_59 [label="_channel != null && _channel.IsOpen && _connection.IsOpen", span="105-105", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_58 [label=ConsumerLock, span="103-103", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_60 [label="return;", span="105-105", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_61 [label="_channel != null && _channel.IsOpen", span="107-107", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_62 [label="_channel.Abort()", span="107-107", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_44 [label="Entry Unk.SetPersistent", span="", cluster="Unk.SetPersistent", file="BackgroundJobClientExtensions.cs"];
m0_46 [label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", span="86-86", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="BackgroundJobClientExtensions.cs"];
m0_56 [label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="211-211", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs"];
m0_14 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs"];
m0_63 [label="!_connection.IsOpen", span="108-108", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_64 [label="_connection = _factory.CreateConnection()", span="108-108", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_65 [label="_channel = _connection.CreateModel()", span="110-110", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_66 [label="_channel.BasicQos(0, 1, false)", span="111-111", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_67 [label="var properties = _channel.CreateBasicProperties()", span="113-113", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_68 [label="properties.SetPersistent(true)", span="114-114", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_69 [label=_queues, span="117-117", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_70 [label="_channel.QueueDeclare(queue, true, false, false, null)", span="118-118", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_71 [label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="101-101", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs"];
m0_47 [label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="195-195", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs"];
m0_48 [label="client == null", span="197-197", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs"];
m0_51 [label="return client.ChangeState(jobId, state, fromState);", span="200-200", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs"];
m0_49 [label="throw new ArgumentNullException(''client'');", span="197-197", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs"];
m0_50 [label="var state = new DeletedState()", span="199-199", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs"];
m0_52 [label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="195-195", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs"];
m0_53 [label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27", cluster="Hangfire.States.DeletedState.DeletedState()", file="BackgroundJobClientExtensions.cs"];
m0_54 [label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="211-211", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs"];
m0_55 [label="return Requeue(client, jobId, null);", span="213-213", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs"];
m0_38 [label="var properties = _channel.CreateBasicProperties()", span="80-80", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs"];
m0_40 [label="_channel.BasicPublish('''', queue, properties, body)", span="83-83", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs"];
m0_39 [label="properties.SetPersistent(true)", span="81-81", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs"];
m0_41 [label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="77-77", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs"];
m0_42 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="BackgroundJobClientExtensions.cs"];
m0_95 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="BackgroundJobClientExtensions.cs"];
m0_13 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BackgroundJobClientExtensions.cs"];
m0_94 [label="Entry QueueingBasicConsumer.cstr", span="", cluster="QueueingBasicConsumer.cstr", file="BackgroundJobClientExtensions.cs"];
m0_8 [label="_consumers = new ConcurrentDictionary<string, QueueingBasicConsumer>()", span="31-31", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_10 [label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_9 [label="CreateChannel()", span="33-33", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_12 [label="Entry Unk.CreateConnection", span="", cluster="Unk.CreateConnection", file="BackgroundJobClientExtensions.cs"];
m0_32 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="BackgroundJobClientExtensions.cs"];
m0_33 [label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="122-122", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientExtensions.cs"];
m0_34 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", color=green, community=0, file="BackgroundJobClientExtensions.cs"];
m0_35 [label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", color=green, community=0, file="BackgroundJobClientExtensions.cs"];
m0_36 [label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="77-77", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs"];
m0_75 [label="Entry Unk.QueueDeclare", span="", cluster="Unk.QueueDeclare", file="BackgroundJobClientExtensions.cs"];
m0_37 [label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="175-175", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs"];
m0_76 [label="QueueingBasicConsumer consumer", span="124-124", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_77 [label="cancellationToken.ThrowIfCancellationRequested()", span="126-126", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_78 [label="!_consumers.TryGetValue(queue, out consumer)", span="128-128", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_80 [label="!_consumers.TryGetValue(queue, out consumer)", span="133-133", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_82 [label="_consumers.AddOrUpdate(queue, consumer, (dq, dc) => consumer)", span="136-136", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_83 [label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, consumer)", span="137-137", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_88 [label="_consumers.AddOrUpdate(queue, newConsumer, (dq, dc) => newConsumer)", span="152-152", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_89 [label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, newConsumer)", span="153-153", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_79 [label=ConsumerLock, span="131-131", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_84 [label="consumer.Model.IsClosed", span="144-144", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_86 [label="consumer.Model.IsClosed", span="148-148", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_91 [label="return consumer;", span="160-160", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_81 [label="consumer = new QueueingBasicConsumer(_channel)", span="135-135", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_85 [label=ConsumerLock, span="146-146", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_87 [label="var newConsumer = new QueueingBasicConsumer(_channel)", span="151-151", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_90 [label="consumer = newConsumer", span="154-154", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_92 [label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="122-122", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs"];
m0_100 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="BackgroundJobClientExtensions.cs"];
m0_98 [label=consumer, span="136-136", cluster="lambda expression", file="BackgroundJobClientExtensions.cs"];
m0_97 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="BackgroundJobClientExtensions.cs"];
m0_101 [label=newConsumer, span="152-152", cluster="lambda expression", file="BackgroundJobClientExtensions.cs"];
m0_99 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="BackgroundJobClientExtensions.cs"];
m0_102 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="BackgroundJobClientExtensions.cs"];
m0_0 [label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_2 [label="throw new ArgumentNullException(''queues'');", span="25-25", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_1 [label="queues == null", span="25-25", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_3 [label="factory == null", span="26-26", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_4 [label="throw new ArgumentNullException(''factory'');", span="26-26", cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs"];
m0_7 [label="Entry Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="100-100", cluster="Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs"];
m0_43 [label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="54-54", cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClientExtensions.cs"];
m0_93 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BackgroundJobClientExtensions.cs"];
m0_96 [label="Entry Unk.BasicConsume", span="", cluster="Unk.BasicConsume", file="BackgroundJobClientExtensions.cs"];
m0_72 [label="Entry Unk.Abort", span="", cluster="Unk.Abort", file="BackgroundJobClientExtensions.cs"];
m0_74 [label="Entry Unk.BasicQos", span="", cluster="Unk.BasicQos", file="BackgroundJobClientExtensions.cs"];
m0_103 [label="HangFire.RabbitMQ.RabbitMqJobQueue", span="", file="BackgroundJobClientExtensions.cs"];
m0_104 [label=consumer, span="", file="BackgroundJobClientExtensions.cs"];
m0_105 [label=newConsumer, span="", file="BackgroundJobClientExtensions.cs"];
m1_191 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", span="192-192", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_192 [label="_client.Object.Requeue(JobId)", span="194-194", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_193 [label="_client.Verify(x => x.ChangeState(JobId, It.IsAny<EnqueuedState>(), null))", span="196-196", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_194 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", span="192-192", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_153 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", span="144-144", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_154 [label="_client.Object.ChangeState(''job-id'', _state.Object)", span="146-146", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_155 [label="_client.Verify(x => x.ChangeState(''job-id'', _state.Object, null))", span="148-148", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_156 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", span="144-144", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_5 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundJobClientExtensionsFacts.cs"];
m1_128 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85", cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs"];
m1_160 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_161 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Delete(null, JobId))", span="154-155", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_162 [label="Assert.Equal(''client'', exception.ParamName)", span="157-157", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_163 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_4 [label="Entry Mock<IBackgroundJobClient>.cstr", span="", cluster="Mock<IBackgroundJobClient>.cstr", file="BackgroundJobClientExtensionsFacts.cs"];
m1_6 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="22-22", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object))", span="24-26", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_8 [label="Assert.Equal(''client'', exception.ParamName)", span="28-28", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_9 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="22-22", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientExtensionsFacts.cs"];
m1_52 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="58-58", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="60-62", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_54 [label="Assert.Equal(''client'', exception.ParamName)", span="64-64", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_55 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="58-58", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_199 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", span="200-200", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_200 [label="_client.Object.Requeue(JobId, FailedState.StateName)", span="202-202", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_201 [label="_client.Verify(x => x.ChangeState(JobId, It.IsAny<EnqueuedState>(), FailedState.StateName))", span="204-204", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_202 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", span="200-200", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_74 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="76-76", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_75 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="78-80", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_76 [label="Assert.Equal(''client'', exception.ParamName)", span="82-82", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_77 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="76-76", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_190 [label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="227-227", cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensionsFacts.cs"];
m1_0 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="15-15", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_1 [label="_client = new Mock<IBackgroundJobClient>()", span="17-17", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_2 [label="_state = new Mock<IState>()", span="18-18", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_3 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="15-15", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_20 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="32-32", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_21 [label="_client.Object.Create(() => StaticMethod(), _state.Object)", span="34-34", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_22 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="36-36", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_23 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="32-32", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_167 [label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="166-166", cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensionsFacts.cs"];
m1_195 [label="Entry Unk.Requeue", span="", cluster="Unk.Requeue", file="BackgroundJobClientExtensionsFacts.cs"];
m1_31 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="40-40", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_32 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="42-44", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_33 [label="Assert.Equal(''client'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_34 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="40-40", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_103 [label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68", cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs"];
m1_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClientExtensionsFacts.cs"];
m1_63 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="68-68", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_64 [label="_client.Object.Enqueue(() => StaticMethod())", span="70-70", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_65 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="72-72", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_66 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="68-68", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_107 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="104-104", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_108 [label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="106-106", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_109 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="108-110", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_110 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="104-104", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_95 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="94-94", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_96 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="96-98", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_97 [label="Assert.Equal(''client'', exception.ParamName)", span="100-100", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_98 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="94-94", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_81 [label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensionsFacts.cs"];
m1_41 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="211-211", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_207 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="211-211", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_19 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="207-207", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_206 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="207-207", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_176 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", span="172-172", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_177 [label="_client.Object.Delete(JobId, FailedState.StateName)", span="174-174", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_178 [label="_client.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName))", span="176-179", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_179 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", span="172-172", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_102 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobClientExtensionsFacts.cs"];
m1_67 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="BackgroundJobClientExtensionsFacts.cs"];
m1_152 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="BackgroundJobClientExtensionsFacts.cs"];
m1_132 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="124-124", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_133 [label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="126-127", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_134 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="129-131", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=1];
m1_135 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="124-124", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_168 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", span="161-161", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_169 [label="_client.Object.Delete(JobId)", span="163-163", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_170 [label="_client.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                null))", span="165-168", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_171 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", span="161-161", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_85 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="86-86", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_86 [label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="88-88", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_87 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="90-90", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_88 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="86-86", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_59 [label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensionsFacts.cs"];
m1_203 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_12 [label="Entry lambda expression", span="25-26", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_13 [label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="25-26", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_14 [label="Exit lambda expression", span="25-26", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_16 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_17 [label="StaticMethod()", span="26-26", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_18 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_25 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_28 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_26 [label="StaticMethod()", span="34-34", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_27 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_29 [label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="36-36", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_30 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_35 [label="Entry lambda expression", span="43-44", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_36 [label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="43-44", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_37 [label="Exit lambda expression", span="43-44", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_38 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_39 [label="x.InstanceMethod()", span="44-44", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_40 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_46 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_49 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_47 [label="x.InstanceMethod()", span="52-52", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_48 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_50 [label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="54-54", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_51 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_56 [label="Entry lambda expression", span="61-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_57 [label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="61-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_58 [label="Exit lambda expression", span="61-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_60 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_61 [label="StaticMethod()", span="62-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_62 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_68 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_71 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_69 [label="StaticMethod()", span="70-70", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_70 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_72 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="72-72", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_73 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_78 [label="Entry lambda expression", span="79-80", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_79 [label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="79-80", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_80 [label="Exit lambda expression", span="79-80", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_82 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_83 [label="x.InstanceMethod()", span="80-80", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_84 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_89 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_92 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_90 [label="x.InstanceMethod()", span="88-88", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_91 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_93 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="90-90", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_94 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_99 [label="Entry lambda expression", span="97-98", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_100 [label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="97-98", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_101 [label="Exit lambda expression", span="97-98", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_104 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_105 [label="StaticMethod()", span="98-98", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_106 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_112 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_115 [label="Entry lambda expression", span="108-110", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_113 [label="StaticMethod()", span="106-106", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_114 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_116 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="108-110", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_117 [label="Exit lambda expression", span="108-110", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_118 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_119 [label="state.EnqueueAt > DateTime.UtcNow", span="110-110", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_120 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_125 [label="Entry lambda expression", span="117-118", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_126 [label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="117-118", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_127 [label="Exit lambda expression", span="117-118", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_129 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_130 [label="x.InstanceMethod()", span="118-118", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_131 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_136 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_139 [label="Entry lambda expression", span="129-131", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_137 [label="x.InstanceMethod()", span="127-127", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_138 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_140 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="129-131", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=1];
m1_141 [label="Exit lambda expression", span="129-131", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_142 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_143 [label="state.EnqueueAt > DateTime.UtcNow", span="131-131", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_144 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_149 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_150 [label="BackgroundJobClientExtensions.ChangeState(null, ''job-id'', _state.Object)", span="138-138", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_151 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_157 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_158 [label="x.ChangeState(''job-id'', _state.Object, null)", span="148-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_159 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_164 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_165 [label="BackgroundJobClientExtensions.Delete(null, JobId)", span="155-155", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_166 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_173 [label="Entry lambda expression", span="165-168", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_174 [label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                null)", span="165-168", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_175 [label="Exit lambda expression", span="165-168", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_180 [label="Entry lambda expression", span="176-179", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_181 [label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName)", span="176-179", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_182 [label="Exit lambda expression", span="176-179", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_187 [label="Entry lambda expression", span="186-186", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_188 [label="BackgroundJobClientExtensions.Requeue(null, JobId, FailedState.StateName)", span="186-186", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_189 [label="Exit lambda expression", span="186-186", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_196 [label="Entry lambda expression", span="196-196", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_197 [label="x.ChangeState(JobId, It.IsAny<EnqueuedState>(), null)", span="196-196", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_198 [label="Exit lambda expression", span="196-196", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_204 [label="x.ChangeState(JobId, It.IsAny<EnqueuedState>(), FailedState.StateName)", span="204-204", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_205 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m1_42 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="50-50", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_43 [label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="52-52", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_44 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="54-54", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_45 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="50-50", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_172 [label="Entry Unk.Delete", span="", cluster="Unk.Delete", file="BackgroundJobClientExtensionsFacts.cs"];
m1_145 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", span="135-135", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_146 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.ChangeState(null, ''job-id'', _state.Object))", span="137-138", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_147 [label="Assert.Equal(''client'', exception.ParamName)", span="140-140", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_148 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", span="135-135", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_121 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="114-114", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_122 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="116-118", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=1];
m1_123 [label="Assert.Equal(''client'', exception.ParamName)", span="120-120", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", color=green, community=0];
m1_124 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="114-114", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_111 [label="Entry Unk.Schedule", span="", cluster="Unk.Schedule", file="BackgroundJobClientExtensionsFacts.cs"];
m1_15 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobClientExtensionsFacts.cs"];
m1_183 [label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", span="183-183", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_184 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Requeue(null, JobId, FailedState.StateName))", span="185-186", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_185 [label="Assert.Equal(''client'', exception.ParamName)", span="188-188", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_186 [label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", span="183-183", cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m1_24 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClientExtensionsFacts.cs"];
m1_208 [label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", span="", file="BackgroundJobClientExtensionsFacts.cs"];
m2_94 [label="BackgroundJob.Requeue(''job-id'', FailedState.StateName)", span="105-105", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs"];
m2_3 [label="_connection.EnlistTransaction(Transaction.Current)", span="27-27", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs"];
m2_71 [label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null)", span="68-71", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_142 [label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="BackgroundJobFacts.cs"];
m2_50 [label="Initialize()", span="52-52", cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", color=green, community=0];
m2_51 [label="BackgroundJob.Schedule<BackgroundJobFacts>(x => Method(), TimeSpan.FromDays(1))", span="54-54", cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", color=green, community=0];
m2_52 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="56-58", cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", color=green, community=1];
m2_54 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobFacts.cs"];
m2_55 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_56 [label="Method()", span="54-54", cluster="lambda expression", file="BackgroundJobFacts.cs", color=green, community=0];
m2_53 [label="Exit Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="50-50", cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs"];
m2_57 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_62 [label="state.EnqueueAt > DateTime.UtcNow", span="58-58", cluster="lambda expression", file="BackgroundJobFacts.cs", color=green, community=0];
m2_43 [label="Entry lambda expression", span="44-46", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_178 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_179 [label="var stats = new StatisticsDto()", span="353-353", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_180 [label="string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect sum([Value]) from HangFire.Counter where [Key] = 'stats:succeeded'\r\n''", span="355-360", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_184 [label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="368-368", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_185 [label="stats.Failed = getCountIfExists(FailedState.Name)", span="369-369", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_186 [label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="370-370", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_187 [label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="371-371", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_188 [label="stats.Servers = multi.Read<int>().Single()", span="373-373", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_189 [label="stats.Queues = multi.Read<int>().Single()", span="374-374", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_190 [label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="376-376", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_191 [label="return stats;", span="379-379", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_181 [label="var multi = _connection.QueryMultiple(sql)", span="362-362", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_182 [label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="364-364", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_183 [label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_192 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs"];
m2_42 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_83 [label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="88-88", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs"];
m2_84 [label="Initialize()", span="90-90", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs"];
m2_85 [label="BackgroundJob.Requeue(''job-id'')", span="92-92", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs"];
m2_103 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="BackgroundJobFacts.cs"];
m2_7 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="24-24", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs"];
m2_147 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_206 [label="var endDate = DateTime.UtcNow", span="384-384", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_213 [label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="392-392", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_207 [label="var dates = new List<DateTime>()", span="385-385", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_210 [label="dates.Add(endDate)", span="388-388", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_211 [label="endDate = endDate.AddHours(-1)", span="389-389", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_208 [label="var i = 0", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_221 [label="i < dates.Count", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_223 [label="result.Add(dates[i], value)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_209 [label="i < 24", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_212 [label="i++", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_214 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="394-397", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_215 [label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="399-402", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_216 [label=keys, span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_217 [label="!valuesMap.ContainsKey(key)", span="406-406", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_218 [label="valuesMap.Add(key, 0)", span="406-406", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_222 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="412-412", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_219 [label="var result = new Dictionary<DateTime, long>()", span="409-409", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_220 [label="var i = 0", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_225 [label="return result;", span="416-416", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_224 [label="i++", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_226 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_141 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="BackgroundJobFacts.cs"];
m2_73 [label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_151 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_152 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_153 [label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_154 [label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_157 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_158 [label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => JobHelper.FromJson<Dictionary<string, string>>(x.Data))\r\n                        .ToList()", span="328-332", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_155 [label="job == null", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_159 [label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="334-342", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_156 [label="return null;", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_160 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs"];
m2_49 [label="Entry Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="50-50", cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs"];
m2_32 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_33 [label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="38-38", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs"];
m2_34 [label="Initialize()", span="40-40", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs"];
m2_144 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="BackgroundJobFacts.cs"];
m2_145 [label="return GetHourlyTimelineStats(''succeeded'');", span="307-307", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="BackgroundJobFacts.cs"];
m2_146 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="BackgroundJobFacts.cs"];
m2_79 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="BackgroundJobFacts.cs"];
m2_86 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs"];
m2_87 [label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs"];
m2_194 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="BackgroundJobFacts.cs"];
m2_104 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_105 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_106 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_96 [label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="101-101", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs"];
m2_97 [label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="164-164", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="BackgroundJobFacts.cs"];
m2_98 [label="Entry lambda expression", span="107-110", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_9 [label="_transaction.Complete()", span="32-32", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="BackgroundJobFacts.cs"];
m2_110 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="BackgroundJobFacts.cs"];
m2_111 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_205 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="BackgroundJobFacts.cs"];
m2_4 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs"];
m2_5 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="BackgroundJobFacts.cs"];
m2_6 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="BackgroundJobFacts.cs"];
m2_8 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="BackgroundJobFacts.cs"];
m2_121 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="BackgroundJobFacts.cs"];
m2_80 [label="Entry lambda expression", span="81-84", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_81 [label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName)", span="81-84", cluster="lambda expression", file="BackgroundJobFacts.cs", color=green, community=0];
m2_59 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="56-58", cluster="lambda expression", file="BackgroundJobFacts.cs", color=green, community=1];
m2_60 [label="Exit lambda expression", span="56-58", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_66 [label="BackgroundJob.Delete(''job-id'')", span="66-66", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs"];
m2_67 [label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null))", span="68-71", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs"];
m2_68 [label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="62-62", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs"];
m2_69 [label="return null;", span="138-138", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="BackgroundJobFacts.cs"];
m2_70 [label="Entry lambda expression", span="68-71", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_139 [label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="BackgroundJobFacts.cs"];
m2_88 [label="var result = new List<ServerDto>()", span="170-170", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs"];
m2_193 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="BackgroundJobFacts.cs"];
m2_195 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BackgroundJobFacts.cs"];
m2_63 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_28 [label="x.Method()", span="32-32", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_95 [label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName))", span="107-110", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs"];
m2_143 [label="Entry Unk.DeserializeJobMethod", span="", cluster="Unk.DeserializeJobMethod", file="BackgroundJobFacts.cs"];
m2_35 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_36 [label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.Name,\r\n                (method, stateData) => new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="80-88", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_37 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_264 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="BackgroundJobFacts.cs"];
m2_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobFacts.cs"];
m2_65 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="BackgroundJobFacts.cs"];
m2_14 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_165 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="BackgroundJobFacts.cs"];
m2_0 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs"];
m2_1 [label="_connection = connection", span="22-22", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs"];
m2_2 [label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="23-25", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs"];
m2_24 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="34-34", cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs"];
m2_25 [label="Exit Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="28-28", cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs"];
m2_26 [label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="76-76", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobFacts.cs"];
m2_46 [label="return DeserializeJobs(jobs, selector);", span="107-107", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs"];
m2_39 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="90-90", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobFacts.cs"];
m2_40 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_41 [label="Method()", span="42-42", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_75 [label="Initialize()", span="77-77", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", color=green, community=1];
m2_76 [label="BackgroundJob.Delete(''job-id'', FailedState.StateName)", span="79-79", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", color=green, community=0];
m2_77 [label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName))", span="81-84", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", color=green, community=0];
m2_99 [label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName)", span="107-110", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_100 [label="Exit lambda expression", span="107-110", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_101 [label="Exit lambda expression", span="194-201", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_107 [label="Entry lambda expression", span="210-214", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_108 [label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_109 [label="Exit lambda expression", span="210-214", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_127 [label="Entry lambda expression", span="266-270", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_128 [label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_129 [label="Exit lambda expression", span="266-270", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_166 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_169 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_172 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_167 [label="x.Name", span="327-327", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_168 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_170 [label="x.Value", span="327-327", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_171 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_173 [label="JobHelper.FromJson<Dictionary<string, string>>(x.Data)", span="331-331", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_174 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_196 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_199 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_203 [label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_197 [label="x.State", span="364-364", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_198 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_200 [label="x.Count", span="364-364", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_201 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_202 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_204 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_233 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="392-392", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_232 [label="Entry lambda expression", span="392-392", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_237 [label="Entry lambda expression", span="402-402", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_240 [label="Entry lambda expression", span="402-402", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_234 [label="Exit lambda expression", span="392-392", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_238 [label="(string)x.Key", span="402-402", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_239 [label="Exit lambda expression", span="402-402", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_241 [label="(long)x.Count", span="402-402", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_242 [label="Exit lambda expression", span="402-402", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_269 [label="String.Format(''stats:{0}:{1}'', type, x)", span="432-432", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_265 [label="Entry lambda expression", span="431-431", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_268 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_272 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_275 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_266 [label="x.ToString(''yyyy-MM-dd'')", span="431-431", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_267 [label="Exit lambda expression", span="431-431", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_270 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_273 [label="(string)x.Key", span="442-442", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_274 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_276 [label="(long)x.Count", span="442-442", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_277 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="BackgroundJobFacts.cs"];
m2_58 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="BackgroundJobFacts.cs"];
m2_61 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="BackgroundJobFacts.cs"];
m2_82 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="419-419", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_13 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="BackgroundJobFacts.cs"];
m2_113 [label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_17 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="BackgroundJobFacts.cs"];
m2_31 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="BackgroundJobFacts.cs"];
m2_44 [label="string jobsSql = @''\r\nselect * from (select *, row_number() over (order by CreatedAt desc) as row_num\r\nfrom HangFire.Job where State = @stateName) as j where j.row_num between @start and @end\r\n''", span="97-100", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs"];
m2_90 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs"];
m2_12 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="BackgroundJobFacts.cs"];
m2_16 [label="return GetNumberOfJobsByStateName(ScheduledState.Name);", span="39-39", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="BackgroundJobFacts.cs"];
m2_30 [label="return _connection.Query<int>(\r\n                @''select count(Id) from HangFire.Job where State = @state'',\r\n                new { state = stateName })\r\n                .Single();", span="67-70", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="BackgroundJobFacts.cs"];
m2_89 [label=servers, span="172-172", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs"];
m2_112 [label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_114 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_18 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="BackgroundJobFacts.cs"];
m2_45 [label="var jobs = _connection.Query<Job>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="102-105", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs"];
m2_72 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_91 [label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs"];
m2_47 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs"];
m2_48 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BackgroundJobFacts.cs"];
m2_120 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="BackgroundJobFacts.cs"];
m2_271 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="BackgroundJobFacts.cs"];
m2_235 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="BackgroundJobFacts.cs"];
m2_78 [label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="75-75", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs"];
m2_119 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="BackgroundJobFacts.cs"];
m2_231 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="BackgroundJobFacts.cs"];
m2_10 [label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobFacts.cs"];
m2_11 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobFacts.cs"];
m2_228 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="BackgroundJobFacts.cs"];
m2_74 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="BackgroundJobFacts.cs"];
m2_229 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BackgroundJobFacts.cs"];
m2_227 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="BackgroundJobFacts.cs"];
m2_15 [label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Method()", span="128-128", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Method()", file="BackgroundJobFacts.cs"];
m2_38 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobFacts.cs"];
m2_161 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="BackgroundJobFacts.cs"];
m2_140 [label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span="", cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="BackgroundJobFacts.cs"];
m2_122 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_123 [label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_124 [label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_125 [label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_126 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_92 [label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="101-101", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs"];
m2_93 [label="Initialize()", span="103-103", cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs"];
m2_236 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundJobFacts.cs"];
m2_163 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="BackgroundJobFacts.cs"];
m2_175 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="BackgroundJobFacts.cs"];
m2_176 [label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="348-348", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="BackgroundJobFacts.cs"];
m2_177 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="BackgroundJobFacts.cs"];
m2_130 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="BackgroundJobFacts.cs"];
m2_102 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="BackgroundJobFacts.cs"];
m2_19 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="BackgroundJobFacts.cs"];
m2_22 [label="Initialize()", span="30-30", cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs"];
m2_243 [label="var endDate = DateTime.UtcNow.Date", span="421-421", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_250 [label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="432-432", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_244 [label="var startDate = endDate.AddDays(-7)", span="422-422", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_246 [label="startDate <= endDate", span="425-425", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_247 [label="dates.Add(endDate)", span="427-427", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_248 [label="endDate = endDate.AddDays(-1)", span="428-428", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_245 [label="var dates = new List<DateTime>()", span="423-423", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_249 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="431-431", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_260 [label="result.Add(dates[i], value)", span="453-453", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_258 [label="i < stringDates.Count", span="450-450", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_251 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="434-437", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_252 [label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="439-442", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_253 [label=keys, span="444-444", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_254 [label="!valuesMap.ContainsKey(key)", span="446-446", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_255 [label="valuesMap.Add(key, 0)", span="446-446", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_259 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="452-452", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_256 [label="var result = new Dictionary<DateTime, long>()", span="449-449", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_257 [label="var i = 0", span="450-450", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_262 [label="return result;", span="456-456", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_261 [label="i++", span="450-450", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_263 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="419-419", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs"];
m2_230 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobFacts.cs"];
m2_115 [label=queues, span="236-236", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_20 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobFacts.cs"];
m2_21 [label="Entry Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="28-28", cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs"];
m2_148 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="BackgroundJobFacts.cs"];
m2_149 [label="return GetHourlyTimelineStats(''failed'');", span="312-312", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="BackgroundJobFacts.cs"];
m2_150 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="BackgroundJobFacts.cs"];
m2_164 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobFacts.cs"];
m2_23 [label="BackgroundJob.Enqueue<BackgroundJobFacts>(x => x.Method())", span="32-32", cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs"];
m2_116 [label="Hangfire.Core.Tests.BackgroundJobFacts", span="", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_117 [label="return result;", span="247-247", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_118 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs"];
m2_162 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="BackgroundJobFacts.cs"];
m2_131 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_132 [label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_133 [label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_134 [label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_135 [label=jobs, span="289-289", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_136 [label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_137 [label="return new JobList<DequeuedJobDto>(result);", span="302-302", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_138 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs"];
m2_278 [label="HangFire.SqlServer.SqlServerMonitoringApi", span="", file="BackgroundJobFacts.cs"];
m2_279 [label=countByStates, span="", file="BackgroundJobFacts.cs"];
m2_280 [label=string, span="", file="BackgroundJobFacts.cs"];
m2_281 [label=string, span="", file="BackgroundJobFacts.cs"];
m3_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobArgumentFacts.cs"];
m3_24 [label="Entry Unk.BasicNack", span="", cluster="Unk.BasicNack", file="JobArgumentFacts.cs"];
m3_17 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs"];
m3_18 [label=_completed, span="36-36", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs"];
m3_19 [label="throw new InvalidOperationException(''Job already completed'');", span="36-36", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs"];
m3_20 [label="_channel.BasicNack(_message.DeliveryTag, false, true)", span="37-37", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs"];
m3_21 [label="_channel.Close(global::RabbitMQ.Client.Framing.v0_9_1.Constants.ReplySuccess, ''Requeue'')", span="38-38", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs"];
m3_22 [label="_completed = true", span="40-40", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs"];
m3_23 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs"];
m3_8 [label="Entry Unk.GetString", span="", cluster="Unk.GetString", file="JobArgumentFacts.cs"];
m3_0 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs"];
m3_1 [label="message == null", span="17-17", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs"];
m3_3 [label="_message = message", span="19-19", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs"];
m3_4 [label="_channel = channel", span="20-20", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs"];
m3_2 [label="throw new ArgumentNullException(''message'');", span="17-17", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs"];
m3_5 [label="JobId = Encoding.UTF8.GetString(_message.Body)", span="22-22", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs"];
m3_6 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs"];
m3_9 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs"];
m3_10 [label=_completed, span="29-29", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs"];
m3_11 [label="throw new InvalidOperationException(''Job already completed'');", span="29-29", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs"];
m3_12 [label="_channel.BasicAck(_message.DeliveryTag, false)", span="30-30", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs"];
m3_13 [label="_completed = true", span="31-31", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs"];
m3_14 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs"];
m3_16 [label="Entry Unk.BasicAck", span="", cluster="Unk.BasicAck", file="JobArgumentFacts.cs"];
m3_25 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="JobArgumentFacts.cs"];
m3_15 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobArgumentFacts.cs"];
m3_26 [label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs"];
m3_27 [label="!_completed && !_disposed", span="45-45", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs"];
m3_28 [label="Requeue()", span="47-47", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs"];
m3_29 [label="_disposed = true", span="50-50", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs"];
m3_30 [label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43", cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs"];
m3_31 [label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", span="", file="JobArgumentFacts.cs"];
m4_64 [label="Entry Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", span="39-39", cluster="Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", file="RecurringJobSchedulerFacts.cs"];
m4_30 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobSchedulerFacts.cs"];
m4_31 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobSchedulerFacts.cs"];
m4_45 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="114-114", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs"];
m4_46 [label="_processingServer.Dispose()", span="116-116", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs"];
m4_47 [label="Logger.Info(''Hangfire Server stopped.'')", span="117-117", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs"];
m4_48 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="114-114", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs"];
m4_4 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="RecurringJobSchedulerFacts.cs"];
m4_5 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="RecurringJobSchedulerFacts.cs"];
m4_0 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="RecurringJobSchedulerFacts.cs"];
m4_1 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="RecurringJobSchedulerFacts.cs"];
m4_39 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="RecurringJobSchedulerFacts.cs"];
m4_73 [label="Entry Hangfire.BackgroundJobServer.Start()", span="157-157", cluster="Hangfire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs"];
m4_74 [label="Exit Hangfire.BackgroundJobServer.Start()", span="157-157", cluster="Hangfire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs"];
m4_37 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="RecurringJobSchedulerFacts.cs"];
m4_69 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobSchedulerFacts.cs"];
m4_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs"];
m4_65 [label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="RecurringJobSchedulerFacts.cs"];
m4_36 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="RecurringJobSchedulerFacts.cs"];
m4_41 [label="Entry Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141", cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs"];
m4_70 [label="return new BackgroundProcessingServerOptions\r\n            {\r\n                ShutdownTimeout = _options.ShutdownTimeout,\r\n                HeartbeatInterval = _options.HeartbeatInterval,\r\n                ServerCheckInterval = _options.ServerWatchdogOptions != null\r\n                    ? _options.ServerWatchdogOptions.CheckInterval\r\n                    : _options.ServerCheckInterval,\r\n                ServerTimeout = _options.ServerWatchdogOptions != null\r\n                    ? _options.ServerWatchdogOptions.ServerTimeout\r\n                    : _options.ServerTimeout\r\n            };", span="143-153", cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs"];
m4_71 [label="Exit Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141", cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs"];
m4_75 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="162-162", cluster="Hangfire.BackgroundJobServer.Stop()", file="RecurringJobSchedulerFacts.cs"];
m4_76 [label="Exit Hangfire.BackgroundJobServer.Stop()", span="162-162", cluster="Hangfire.BackgroundJobServer.Stop()", file="RecurringJobSchedulerFacts.cs"];
m4_63 [label="Entry Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", file="RecurringJobSchedulerFacts.cs"];
m4_42 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m4_43 [label="''''' + x + '''''", span="103-103", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m4_44 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m4_38 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RecurringJobSchedulerFacts.cs"];
m4_33 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="RecurringJobSchedulerFacts.cs"];
m4_35 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="RecurringJobSchedulerFacts.cs"];
m4_8 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_9 [label="storage == null", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_11 [label="options == null", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_13 [label="additionalProcesses == null", span="82-82", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_15 [label="_options = options", span="84-84", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_18 [label="processes.AddRange(additionalProcesses)", span="88-88", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_19 [label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="90-94", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_21 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="97-97", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_22 [label="storage.WriteOptionsToLog(Logger)", span="99-99", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_24 [label="Logger.InfoFormat(''    Worker count: {0}.'', options.WorkerCount)", span="102-102", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_25 [label="Logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', options.Queues.Select(x => ''''' + x + ''''')))", span="103-103", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_26 [label="Logger.InfoFormat(''    Shutdown timeout: {0}.'', options.ShutdownTimeout)", span="104-104", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_27 [label="Logger.InfoFormat(''    Schedule polling interval: {0}.'', options.SchedulePollingInterval)", span="105-105", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_28 [label="_processingServer = new BackgroundProcessingServer(\r\n                storage, \r\n                processes, \r\n                properties, \r\n                GetProcessingServerOptions())", span="107-111", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_10 [label="throw new ArgumentNullException(''storage'');", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_12 [label="throw new ArgumentNullException(''options'');", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_14 [label="throw new ArgumentNullException(''additionalProcesses'');", span="82-82", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_16 [label="var processes = new List<IBackgroundProcess>()", span="86-86", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_17 [label="processes.AddRange(GetRequiredProcesses())", span="87-87", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_20 [label="Logger.Info(''Starting Hangfire Server'')", span="96-96", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_23 [label="Logger.Info(''Using the following options for Hangfire Server:'')", span="101-101", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_29 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs"];
m4_66 [label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJobSchedulerFacts.cs"];
m4_72 [label="Entry Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", span="22-22", cluster="Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs"];
m4_67 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobSchedulerFacts.cs"];
m4_32 [label="Entry Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_50 [label="var processes = new List<IBackgroundProcess>()", span="122-122", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_51 [label="var filterProvider = _options.FilterProvider ?? JobFilterProviders.Providers", span="124-124", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_57 [label="processes.Add(new Worker(_options.Queues, performer, stateChanger))", span="132-132", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_59 [label="processes.Add(new DelayedJobScheduler(_options.SchedulePollingInterval, stateChanger))", span="135-135", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_60 [label="processes.Add(new RecurringJobScheduler(factory))", span="136-136", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_61 [label="return processes;", span="138-138", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_52 [label="var factory = new BackgroundJobFactory(filterProvider)", span="126-126", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_53 [label="var performer = new BackgroundJobPerformer(filterProvider, _options.Activator ?? JobActivator.Current)", span="127-127", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_54 [label="var stateChanger = new BackgroundJobStateChanger(filterProvider)", span="128-128", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_55 [label="var i = 0", span="130-130", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_56 [label="i < _options.WorkerCount", span="130-130", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_58 [label="i++", span="130-130", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_62 [label="Exit Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs"];
m4_6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs"];
m4_7 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs"];
m4_49 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="RecurringJobSchedulerFacts.cs"];
m4_68 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJobSchedulerFacts.cs"];
m4_2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs"];
m4_3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs"];
m4_40 [label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", span="87-87", cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", file="RecurringJobSchedulerFacts.cs"];
m4_77 [label="Hangfire.BackgroundJobServer", span="", file="RecurringJobSchedulerFacts.cs"];
m5_29 [label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StorageConnectionExtensions.cs"];
m5_36 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StorageConnectionExtensions.cs"];
m5_38 [label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="StorageConnectionExtensions.cs"];
m5_28 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="StorageConnectionExtensions.cs"];
m5_35 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensions.cs"];
m5_27 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StorageConnectionExtensions.cs"];
m5_34 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StorageConnectionExtensions.cs"];
m5_33 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StorageConnectionExtensions.cs"];
m5_31 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StorageConnectionExtensions.cs"];
m5_37 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StorageConnectionExtensions.cs"];
m5_0 [label="Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_1 [label="connection == null", span="27-27", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_4 [label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="31-31", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_6 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="35-35", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_19 [label="var stateData = connection.GetStateData(dto.LastJobId)", span="65-65", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_2 [label="throw new ArgumentNullException(''connection'');", span="27-27", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_3 [label="var result = new List<RecurringJobDto>()", span="29-29", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_8 [label="result.Add(new RecurringJobDto { Id = id, Removed = true })", span="39-39", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_24 [label="result.Add(dto)", span="77-77", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_25 [label="return result;", span="80-80", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_5 [label=ids, span="33-33", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_9 [label="var dto = new RecurringJobDto { Id = id }", span="43-43", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_7 [label="hash == null", span="37-37", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_10 [label="dto.Cron = hash[''Cron'']", span="44-44", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_11 [label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="48-48", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_15 [label="hash.ContainsKey(''NextExecution'')", span="56-56", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_16 [label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="58-58", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_17 [label="hash.ContainsKey(''LastJobId'')", span="61-61", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=red, community=0, file="StorageConnectionExtensions.cs"];
m5_18 [label="dto.LastJobId = hash[''LastJobId'']", span="63-63", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_22 [label="hash.ContainsKey(''LastExecution'')", span="72-72", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_23 [label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="74-74", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_12 [label="dto.Job = invocationData.Deserialize()", span="49-49", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_14 [label="dto.LoadException = ex", span="53-53", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_21 [label="dto.LastJobState = stateData.Name", span="68-68", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_13 [label=JobLoadException, span="51-51", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_20 [label="stateData != null", span="66-66", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_26 [label="Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m5_32 [label="Entry Hangfire.Storage.RecurringJobDto.RecurringJobDto()", span="21-21", cluster="Hangfire.Storage.RecurringJobDto.RecurringJobDto()", file="StorageConnectionExtensions.cs"];
m5_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StorageConnectionExtensions.cs"];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d8  [key=2, style=dotted, color=green];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d22  [key=1, style=dashed, color=green, label="System.Linq.Expressions.Expression<System.Action<T>>"];
d22 -> d23  [key=0, style=solid, color=green];
d22 -> d24  [key=2, style=dotted, color=green];
d23 -> d20  [key=0, style=bold, color=blue];
d31 -> d32  [key=0, style=solid, color=green];
d31 -> d8  [key=2, style=dotted, color=green];
d30 -> d31  [key=0, style=solid, color=green];
d30 -> d32  [key=1, style=dashed, color=green, label=string];
d32 -> d33  [key=0, style=solid, color=green];
d32 -> d34  [key=2, style=dotted, color=green];
d33 -> d30  [key=0, style=bold, color=blue];
d5 -> d8  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d11 -> d8  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid];
d16 -> d8  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d26 -> d8  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d36 -> d8  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d41 -> d8  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
d6 -> d7  [key=0, style=solid];
d6 -> d9  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
d12 -> d13  [key=0, style=solid];
d12 -> d14  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d15 -> d17  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d25 -> d27  [key=1, style=dashed, color=darkseagreen4, label=string];
d27 -> d28  [key=0, style=solid];
d27 -> d29  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d37  [key=1, style=dashed, color=darkseagreen4, label=string];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d42  [key=1, style=dashed, color=darkseagreen4, label=string];
d42 -> d43  [key=0, style=solid];
d42 -> d44  [key=2, style=dotted];
d7 -> d4  [key=0, style=bold, color=blue];
d13 -> d10  [key=0, style=bold, color=blue];
d18 -> d15  [key=0, style=bold, color=blue];
d28 -> d25  [key=0, style=bold, color=blue];
d38 -> d35  [key=0, style=bold, color=blue];
d43 -> d40  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_6  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_15 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_15 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_15 -> m0_17  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_5  [key=2, style=dotted];
m0_16 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m0_18 -> m0_14  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m0_20 -> m0_21  [key=0, style=solid, color=green];
m0_20 -> m0_32  [key=2, style=dotted];
m0_20 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_20 -> m0_23  [key=1, style=dashed, color=green, label="Hangfire.IBackgroundJobClient"];
m0_20 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string Schedule"];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_17  [key=3, color=darkorchid, style=bold, label="Local variable int queueIndex"];
m0_17 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_7  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid, color=green];
m0_21 -> m0_33  [key=2, style=dotted];
m0_21 -> m0_23  [key=0, style=solid, color=green];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_26  [key=0, style=solid];
m0_22 -> m0_29  [key=0, style=solid];
m0_22 -> m0_34  [key=2, style=dotted];
m0_22 -> m0_24  [key=0, style=solid, color=green];
m0_22 -> m0_5  [key=2, style=dotted, color=green];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_19  [key=2, style=dotted, color=green];
m0_23 -> m0_13  [key=2, style=dotted, color=green];
m0_26 -> m0_27  [key=0, style=solid, color=red];
m0_26 -> m0_28  [key=0, style=solid];
m0_29 -> m0_17  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_25  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_14  [key=2, style=dotted];
m0_24 -> m0_20  [key=0, style=bold, color=blue];
m0_25 -> m0_29  [key=0, style=solid];
m0_25 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
m0_25 -> m0_26  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid, color=red];
m0_27 -> m0_14  [key=2, style=dotted, color=red];
m0_27 -> m0_5  [key=2, style=dotted];
m0_27 -> m0_29  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_28 -> m0_31  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_15  [key=0, style=bold, color=blue];
m0_45 -> m0_47  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_41  [key=3, color=darkorchid, style=bold, label="Parameter variable string fromState"];
m0_57 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
m0_57 -> m0_54  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m0_59 -> m0_5  [key=2, style=dotted];
m0_59 -> m0_62  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=0, style=solid];
m0_60 -> m0_6  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_71  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_43  [key=2, style=dotted];
m0_61 -> m0_63  [key=0, style=solid];
m0_62 -> m0_57  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_72  [key=2, style=dotted];
m0_44 -> m0_47  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Delete"];
m0_44 -> m0_45  [key=0, style=solid];
m0_46 -> m0_44  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_56 -> m0_54  [key=0, style=bold, color=blue];
m0_14 -> m0_58  [key=0, style=solid];
m0_14 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string Schedule"];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_12  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_73  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_74  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_43  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_44  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=0, style=solid];
m0_70 -> m0_69  [key=0, style=solid];
m0_70 -> m0_75  [key=2, style=dotted];
m0_71 -> m0_14  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_51  [key=0, style=solid];
m0_47 -> m0_41  [key=3, color=darkorchid, style=bold, label="Parameter variable string fromState"];
m0_47 -> m0_44  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_55  [key=0, style=solid];
m0_51 -> m0_43  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_56  [key=2, style=dotted];
m0_49 -> m0_5  [key=2, style=dotted];
m0_49 -> m0_52  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_57  [key=2, style=dotted];
m0_50 -> m0_53  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [key=0, style=solid];
m0_52 -> m0_47  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_56  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_57  [key=2, style=dotted];
m0_55 -> m0_46  [key=0, style=bold, color=blue];
m0_55 -> m0_57  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
m0_38 -> m0_43  [key=2, style=dotted];
m0_38 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_40 -> m0_5  [key=2, style=dotted];
m0_40 -> m0_42  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_45  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=0, style=solid];
m0_39 -> m0_44  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=2, style=dotted];
m0_41 -> m0_36  [key=0, style=bold, color=blue];
m0_42 -> m0_38  [key=0, style=bold, color=blue];
m0_8 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string Enqueue"];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
m0_10 -> m0_5  [key=2, style=dotted];
m0_10 -> m0_12  [key=0, style=solid];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_14  [key=2, style=dotted];
m0_12 -> m0_8  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_32 -> m0_35  [key=1, style=dashed, color=green, label="Hangfire.IBackgroundJobClient"];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_33 -> m0_35  [key=0, style=solid, color=green];
m0_33 -> m0_76  [key=0, style=solid];
m0_33 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_33 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m0_33 -> m0_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
m0_34 -> m0_36  [key=0, style=solid, color=green];
m0_34 -> m0_5  [key=2, style=dotted, color=green];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_37  [key=2, style=dotted, color=green];
m0_35 -> m0_31  [key=2, style=dotted, color=green];
m0_36 -> m0_32  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_42  [key=2, style=dotted];
m0_37 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=body];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_87  [key=3, color=darkorchid, style=bold, label="Local variable QueueingBasicConsumer consumer"];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_32  [key=2, style=dotted];
m0_77 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_84  [key=0, style=solid];
m0_78 -> m0_93  [key=2, style=dotted];
m0_78 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m0_78 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_91  [key=0, style=solid];
m0_80 -> m0_93  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_95  [key=2, style=dotted];
m0_82 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_83 -> m0_91  [key=0, style=solid];
m0_83 -> m0_96  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_95  [key=2, style=dotted];
m0_88 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_96  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_91  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_94  [key=2, style=dotted];
m0_81 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m0_81 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m0_81 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m0_85 -> m0_86  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_94  [key=2, style=dotted];
m0_87 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m0_87 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m0_87 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m0_90 -> m0_91  [key=0, style=solid];
m0_92 -> m0_33  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_99 -> m0_97  [key=0, style=bold, color=blue];
m0_102 -> m0_100  [key=0, style=bold, color=blue];
m0_0 -> m0_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string Enqueue"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_10  [key=0, style=solid];
m0_2 -> m0_11  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_3 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_10  [key=0, style=solid];
m0_4 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_12  [key=2, style=dotted];
m0_103 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_27  [key=1, style=dashed, color=red, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_103 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RabbitMQ.RabbitMqJobQueue"];
m0_104 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m0_105 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m1_191 -> m1_192  [key=0, style=solid];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_195  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_24  [key=2, style=dotted];
m1_193 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_194 -> m1_191  [key=0, style=bold, color=blue];
m1_153 -> m1_154  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_152  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_24  [key=2, style=dotted];
m1_155 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_156 -> m1_153  [key=0, style=bold, color=blue];
m1_160 -> m1_161  [key=0, style=solid];
m1_161 -> m1_162  [key=0, style=solid, color=green];
m1_161 -> m1_10  [key=2, style=dotted];
m1_161 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_162 -> m1_163  [key=0, style=solid, color=green];
m1_162 -> m1_11  [key=2, style=dotted, color=green];
m1_163 -> m1_160  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_10  [key=2, style=dotted];
m1_7 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=2, style=dotted];
m1_9 -> m1_6  [key=0, style=bold, color=blue];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_10  [key=2, style=dotted];
m1_53 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_11  [key=2, style=dotted];
m1_55 -> m1_52  [key=0, style=bold, color=blue];
m1_199 -> m1_200  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_195  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_24  [key=2, style=dotted];
m1_201 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_202 -> m1_199  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_10  [key=2, style=dotted];
m1_75 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_11  [key=2, style=dotted];
m1_77 -> m1_74  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_15  [key=2, style=dotted];
m1_21 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_23 -> m1_20  [key=0, style=bold, color=blue];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_10  [key=2, style=dotted];
m1_32 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_11  [key=2, style=dotted];
m1_34 -> m1_31  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_67  [key=2, style=dotted];
m1_64 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_24  [key=2, style=dotted];
m1_65 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_66 -> m1_63  [key=0, style=bold, color=blue];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_102  [key=2, style=dotted];
m1_108 -> m1_111  [key=2, style=dotted];
m1_108 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_24  [key=2, style=dotted];
m1_109 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_110 -> m1_107  [key=0, style=bold, color=blue];
m1_95 -> m1_96  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_10  [key=2, style=dotted];
m1_96 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_11  [key=2, style=dotted];
m1_98 -> m1_95  [key=0, style=bold, color=blue];
m1_41 -> m1_207  [key=0, style=solid];
m1_207 -> m1_41  [key=0, style=bold, color=blue];
m1_19 -> m1_206  [key=0, style=solid];
m1_206 -> m1_19  [key=0, style=bold, color=blue];
m1_176 -> m1_177  [key=0, style=solid, color=green];
m1_177 -> m1_178  [key=0, style=solid, color=green];
m1_177 -> m1_172  [key=2, style=dotted, color=green];
m1_178 -> m1_179  [key=0, style=solid, color=green];
m1_178 -> m1_24  [key=2, style=dotted, color=green];
m1_178 -> m1_180  [key=1, style=dashed, color=green, label="lambda expression"];
m1_179 -> m1_176  [key=0, style=bold, color=blue];
m1_132 -> m1_133  [key=0, style=solid, color=green];
m1_133 -> m1_134  [key=0, style=solid, color=green];
m1_133 -> m1_102  [key=2, style=dotted, color=green];
m1_133 -> m1_10  [key=2, style=dotted, color=green];
m1_133 -> m1_136  [key=1, style=dashed, color=green, label="lambda expression"];
m1_134 -> m1_135  [key=0, style=solid, color=green];
m1_134 -> m1_24  [key=2, style=dotted, color=green];
m1_134 -> m1_139  [key=1, style=dashed, color=green, label="lambda expression"];
m1_135 -> m1_132  [key=0, style=bold, color=blue];
m1_168 -> m1_169  [key=0, style=solid, color=green];
m1_169 -> m1_170  [key=0, style=solid, color=green];
m1_169 -> m1_172  [key=2, style=dotted, color=green];
m1_170 -> m1_171  [key=0, style=solid, color=green];
m1_170 -> m1_24  [key=2, style=dotted, color=green];
m1_170 -> m1_173  [key=1, style=dashed, color=green, label="lambda expression"];
m1_171 -> m1_168  [key=0, style=bold, color=blue];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_10  [key=2, style=dotted];
m1_86 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_24  [key=2, style=dotted];
m1_87 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_88 -> m1_85  [key=0, style=bold, color=blue];
m1_203 -> m1_204  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=2, style=dotted];
m1_13 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_19  [key=2, style=dotted];
m1_27 -> m1_25  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_10  [key=2, style=dotted];
m1_29 -> m1_15  [key=2, style=dotted];
m1_30 -> m1_28  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_10  [key=2, style=dotted];
m1_36 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_37 -> m1_35  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=2, style=dotted];
m1_40 -> m1_38  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_41  [key=2, style=dotted];
m1_48 -> m1_46  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_10  [key=2, style=dotted];
m1_50 -> m1_15  [key=2, style=dotted];
m1_51 -> m1_49  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [key=2, style=dotted];
m1_57 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_58 -> m1_56  [key=0, style=bold, color=blue];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_19  [key=2, style=dotted];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_19  [key=2, style=dotted];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_10  [key=2, style=dotted];
m1_72 -> m1_15  [key=2, style=dotted];
m1_73 -> m1_71  [key=0, style=bold, color=blue];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_81  [key=2, style=dotted];
m1_79 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_80 -> m1_78  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_41  [key=2, style=dotted];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_89 -> m1_90  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_41  [key=2, style=dotted];
m1_91 -> m1_89  [key=0, style=bold, color=blue];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_10  [key=2, style=dotted];
m1_93 -> m1_15  [key=2, style=dotted];
m1_94 -> m1_92  [key=0, style=bold, color=blue];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=2, style=dotted];
m1_100 -> m1_103  [key=2, style=dotted];
m1_100 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_101 -> m1_99  [key=0, style=bold, color=blue];
m1_104 -> m1_105  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_19  [key=2, style=dotted];
m1_106 -> m1_104  [key=0, style=bold, color=blue];
m1_112 -> m1_113  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_19  [key=2, style=dotted];
m1_114 -> m1_112  [key=0, style=bold, color=blue];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_10  [key=2, style=dotted];
m1_116 -> m1_15  [key=2, style=dotted];
m1_116 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_117 -> m1_115  [key=0, style=bold, color=blue];
m1_118 -> m1_119  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_120 -> m1_118  [key=0, style=bold, color=blue];
m1_125 -> m1_126  [key=0, style=solid, color=green];
m1_126 -> m1_127  [key=0, style=solid, color=green];
m1_126 -> m1_102  [key=2, style=dotted, color=green];
m1_126 -> m1_128  [key=2, style=dotted, color=green];
m1_126 -> m1_129  [key=1, style=dashed, color=green, label="lambda expression"];
m1_127 -> m1_125  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid, color=green];
m1_130 -> m1_131  [key=0, style=solid, color=green];
m1_130 -> m1_41  [key=2, style=dotted, color=green];
m1_131 -> m1_129  [key=0, style=bold, color=blue];
m1_136 -> m1_137  [key=0, style=solid, color=green];
m1_139 -> m1_140  [key=0, style=solid, color=green];
m1_137 -> m1_138  [key=0, style=solid, color=green];
m1_137 -> m1_41  [key=2, style=dotted, color=green];
m1_138 -> m1_136  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid, color=green];
m1_140 -> m1_10  [key=2, style=dotted, color=green];
m1_140 -> m1_15  [key=2, style=dotted, color=green];
m1_140 -> m1_142  [key=1, style=dashed, color=green, label="lambda expression"];
m1_141 -> m1_139  [key=0, style=bold, color=blue];
m1_142 -> m1_143  [key=0, style=solid, color=green];
m1_143 -> m1_144  [key=0, style=solid, color=green];
m1_144 -> m1_142  [key=0, style=bold, color=blue];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_152  [key=2, style=dotted];
m1_151 -> m1_149  [key=0, style=bold, color=blue];
m1_157 -> m1_158  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_152  [key=2, style=dotted];
m1_159 -> m1_157  [key=0, style=bold, color=blue];
m1_164 -> m1_165  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_167  [key=2, style=dotted];
m1_166 -> m1_164  [key=0, style=bold, color=blue];
m1_173 -> m1_174  [key=0, style=solid, color=green];
m1_174 -> m1_175  [key=0, style=solid, color=green];
m1_174 -> m1_10  [key=2, style=dotted, color=green];
m1_174 -> m1_152  [key=2, style=dotted, color=green];
m1_175 -> m1_173  [key=0, style=bold, color=blue];
m1_180 -> m1_181  [key=0, style=solid, color=green];
m1_181 -> m1_182  [key=0, style=solid, color=green];
m1_181 -> m1_10  [key=2, style=dotted, color=green];
m1_181 -> m1_152  [key=2, style=dotted, color=green];
m1_182 -> m1_180  [key=0, style=bold, color=blue];
m1_187 -> m1_188  [key=0, style=solid];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_190  [key=2, style=dotted];
m1_189 -> m1_187  [key=0, style=bold, color=blue];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_10  [key=2, style=dotted];
m1_197 -> m1_152  [key=2, style=dotted];
m1_198 -> m1_196  [key=0, style=bold, color=blue];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_10  [key=2, style=dotted];
m1_204 -> m1_152  [key=2, style=dotted];
m1_205 -> m1_203  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_10  [key=2, style=dotted];
m1_43 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_24  [key=2, style=dotted];
m1_44 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_45 -> m1_42  [key=0, style=bold, color=blue];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_10  [key=2, style=dotted];
m1_146 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_11  [key=2, style=dotted];
m1_148 -> m1_145  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid, color=green];
m1_122 -> m1_123  [key=0, style=solid, color=green];
m1_122 -> m1_10  [key=2, style=dotted, color=green];
m1_122 -> m1_125  [key=1, style=dashed, color=green, label="lambda expression"];
m1_123 -> m1_124  [key=0, style=solid, color=green];
m1_123 -> m1_11  [key=2, style=dotted, color=green];
m1_124 -> m1_121  [key=0, style=bold, color=blue];
m1_183 -> m1_184  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_10  [key=2, style=dotted];
m1_184 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_11  [key=2, style=dotted];
m1_186 -> m1_183  [key=0, style=bold, color=blue];
m1_208 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_133  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_134  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_169  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_170  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_177  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_178  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m1_208 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_97  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_71 -> m2_19  [key=2, style=dotted];
m2_71 -> m2_73  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid, color=green];
m2_50 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>"];
m2_50 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m2_50 -> m2_9  [key=2, style=dotted, color=green];
m2_51 -> m2_52  [key=0, style=solid, color=green];
m2_51 -> m2_58  [key=2, style=dotted];
m2_51 -> m2_55  [key=1, style=dashed, color=green, label="lambda expression"];
m2_51 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_51 -> m2_38  [key=2, style=dotted, color=green];
m2_51 -> m2_54  [key=2, style=dotted, color=green];
m2_52 -> m2_53  [key=0, style=solid, color=green];
m2_52 -> m2_56  [key=0, style=solid];
m2_52 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_52 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_52 -> m2_11  [key=2, style=dotted, color=green];
m2_52 -> m2_58  [key=1, style=dashed, color=green, label="lambda expression"];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_60  [key=2, style=dotted];
m2_54 -> m2_61  [key=2, style=dotted];
m2_55 -> m2_52  [key=0, style=solid];
m2_55 -> m2_62  [key=2, style=dotted];
m2_55 -> m2_63  [key=2, style=dotted];
m2_55 -> m2_64  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid, color=green];
m2_56 -> m2_57  [key=0, style=solid, color=green];
m2_56 -> m2_65  [key=2, style=dotted];
m2_56 -> m2_15  [key=2, style=dotted, color=green];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_59  [key=2, style=dotted];
m2_53 -> m2_49  [key=0, style=bold, color=blue];
m2_57 -> m2_50  [key=0, style=bold, color=blue];
m2_57 -> m2_55  [key=0, style=bold, color=blue];
m2_62 -> m2_63  [key=0, style=solid, color=green];
m2_43 -> m2_44  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_193  [key=2, style=dotted];
m2_179 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_179 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_179 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_179 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_179 -> m2_188  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_179 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_179 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_179 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label=stats];
m2_180 -> m2_181  [key=0, style=solid];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_195  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_195  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_195  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_195  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_22  [key=2, style=dotted];
m2_188 -> m2_23  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_22  [key=2, style=dotted];
m2_189 -> m2_23  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_22  [key=2, style=dotted];
m2_190 -> m2_162  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_161  [key=2, style=dotted];
m2_181 -> m2_188  [key=1, style=dashed, color=darkseagreen4, label=multi];
m2_181 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label=multi];
m2_181 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label=multi];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_194  [key=2, style=dotted];
m2_182 -> m2_163  [key=2, style=dotted];
m2_182 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_182 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_182 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_183 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m2_183 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m2_183 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m2_192 -> m2_178  [key=0, style=bold, color=blue];
m2_42 -> m2_40  [key=0, style=bold, color=blue];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_82  [key=2, style=dotted];
m2_84 -> m2_9  [key=2, style=dotted];
m2_85 -> m2_83  [key=0, style=bold, color=blue];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_88  [key=2, style=dotted];
m2_7 -> m2_11  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_147 -> m2_206  [key=0, style=solid];
m2_147 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_147 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m2_206 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_164  [key=2, style=dotted];
m2_213 -> m2_48  [key=2, style=dotted];
m2_213 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_213 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label=keys];
m2_213 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label=keys];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_94  [key=2, style=dotted];
m2_207 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_207 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_207 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_207 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_64  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_227  [key=2, style=dotted];
m2_211 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_225  [key=0, style=solid];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_229  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_213  [key=0, style=solid];
m2_212 -> m2_209  [key=0, style=solid];
m2_212 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_214 -> m2_215  [key=0, style=solid];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_228  [key=2, style=dotted];
m2_215 -> m2_163  [key=2, style=dotted];
m2_215 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_215 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_215 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m2_215 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m2_215 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_219  [key=0, style=solid];
m2_216 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label=key];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_216  [key=0, style=solid];
m2_217 -> m2_205  [key=2, style=dotted];
m2_218 -> m2_216  [key=0, style=solid];
m2_218 -> m2_229  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_231  [key=2, style=dotted];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_230  [key=2, style=dotted];
m2_219 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_219 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_220 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_220 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_225 -> m2_226  [key=0, style=solid];
m2_224 -> m2_221  [key=0, style=solid];
m2_224 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_226 -> m2_147  [key=0, style=bold, color=blue];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_38  [key=2, style=dotted];
m2_73 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_152 -> m2_153  [key=0, style=solid];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_161  [key=2, style=dotted];
m2_153 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label=multi];
m2_153 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=multi];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_22  [key=2, style=dotted];
m2_154 -> m2_162  [key=2, style=dotted];
m2_154 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_22  [key=2, style=dotted];
m2_157 -> m2_163  [key=2, style=dotted];
m2_157 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_157 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_157 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_22  [key=2, style=dotted];
m2_158 -> m2_48  [key=2, style=dotted];
m2_158 -> m2_164  [key=2, style=dotted];
m2_158 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_157  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_165  [key=2, style=dotted];
m2_159 -> m2_22  [key=2, style=dotted];
m2_159 -> m2_143  [key=2, style=dotted];
m2_156 -> m2_160  [key=0, style=solid];
m2_160 -> m2_151  [key=0, style=bold, color=blue];
m2_49 -> m2_50  [key=0, style=solid, color=green];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_30  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_18  [key=2, style=dotted];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_34 -> m2_9  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_147  [key=2, style=dotted];
m2_146 -> m2_144  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_86 -> m2_11  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_87 -> m2_83  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_22  [key=2, style=dotted];
m2_87 -> m2_48  [key=2, style=dotted];
m2_87 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=servers];
m2_104 -> m2_105  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_38  [key=2, style=dotted];
m2_105 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_106 -> m2_104  [key=0, style=bold, color=blue];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_92  [key=0, style=bold, color=blue];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_38  [key=2, style=dotted];
m2_97 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_98 -> m2_96  [key=0, style=bold, color=blue];
m2_98 -> m2_99  [key=0, style=solid];
m2_9 -> m2_110  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_9  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_5 -> m2_9  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_8 -> m2_4  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid, color=green];
m2_80 -> m2_82  [key=2, style=dotted];
m2_81 -> m2_79  [key=0, style=bold, color=blue];
m2_81 -> m2_82  [key=0, style=solid, color=green];
m2_81 -> m2_19  [key=2, style=dotted, color=green];
m2_81 -> m2_73  [key=2, style=dotted, color=green];
m2_59 -> m2_60  [key=0, style=solid, color=green];
m2_59 -> m2_19  [key=2, style=dotted, color=green];
m2_59 -> m2_20  [key=2, style=dotted, color=green];
m2_59 -> m2_61  [key=1, style=dashed, color=green, label="lambda expression"];
m2_60 -> m2_66  [key=0, style=solid];
m2_60 -> m2_58  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_59  [key=2, style=dotted];
m2_66 -> d25  [key=2, style=dotted];
m2_67 -> m2_70  [key=0, style=solid];
m2_67 -> m2_71  [key=2, style=dotted];
m2_67 -> m2_11  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_64  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_60  [key=0, style=bold, color=blue];
m2_70 -> m2_71  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_94  [key=2, style=dotted];
m2_88 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_88 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_63 -> m2_61  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_18  [key=2, style=dotted];
m2_28 -> m2_15  [key=2, style=dotted];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_95 -> m2_11  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_35 -> m2_38  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_39  [key=2, style=dotted];
m2_35 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_36 -> m2_11  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_36 -> m2_38  [key=2, style=dotted];
m2_36 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_37 -> m2_33  [key=0, style=bold, color=blue];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_9  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_6  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_11  [key=2, style=dotted];
m2_24 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_22  [key=2, style=dotted];
m2_25 -> m2_23  [key=2, style=dotted];
m2_25 -> m2_21  [key=0, style=bold, color=blue];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_49  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=2, style=dotted];
m2_40 -> m2_43  [key=2, style=dotted];
m2_41 -> m2_39  [key=0, style=bold, color=blue];
m2_41 -> m2_15  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid, color=green];
m2_75 -> m2_9  [key=2, style=dotted, color=green];
m2_76 -> m2_77  [key=0, style=solid, color=green];
m2_76 -> m2_78  [key=2, style=dotted];
m2_76 -> m2_43  [key=2, style=dotted];
m2_76 -> m2_79  [key=2, style=dotted, color=green];
m2_77 -> m2_75  [key=0, style=bold, color=blue];
m2_77 -> m2_78  [key=0, style=solid, color=green];
m2_77 -> m2_11  [key=2, style=dotted, color=green];
m2_77 -> m2_80  [key=1, style=dashed, color=green, label="lambda expression"];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_19  [key=2, style=dotted];
m2_99 -> m2_73  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [key=2, style=dotted];
m2_100 -> m2_103  [key=2, style=dotted];
m2_100 -> m2_98  [key=0, style=bold, color=blue];
m2_101 -> m2_99  [key=0, style=bold, color=blue];
m2_107 -> m2_108  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_110  [key=2, style=dotted];
m2_108 -> m2_103  [key=2, style=dotted];
m2_109 -> m2_107  [key=0, style=bold, color=blue];
m2_127 -> m2_128  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_130  [key=2, style=dotted];
m2_128 -> m2_103  [key=2, style=dotted];
m2_129 -> m2_127  [key=0, style=bold, color=blue];
m2_166 -> m2_167  [key=0, style=solid];
m2_169 -> m2_170  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_167 -> m2_168  [key=0, style=solid];
m2_168 -> m2_166  [key=0, style=bold, color=blue];
m2_170 -> m2_171  [key=0, style=solid];
m2_171 -> m2_169  [key=0, style=bold, color=blue];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_22  [key=2, style=dotted];
m2_174 -> m2_172  [key=0, style=bold, color=blue];
m2_196 -> m2_197  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_205  [key=2, style=dotted];
m2_197 -> m2_198  [key=0, style=solid];
m2_198 -> m2_196  [key=0, style=bold, color=blue];
m2_200 -> m2_201  [key=0, style=solid];
m2_201 -> m2_199  [key=0, style=bold, color=blue];
m2_202 -> m2_203  [key=0, style=solid];
m2_204 -> m2_202  [key=0, style=bold, color=blue];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_235  [key=2, style=dotted];
m2_233 -> m2_236  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_237 -> m2_238  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_234 -> m2_232  [key=0, style=bold, color=blue];
m2_238 -> m2_239  [key=0, style=solid];
m2_239 -> m2_237  [key=0, style=bold, color=blue];
m2_241 -> m2_242  [key=0, style=solid];
m2_242 -> m2_240  [key=0, style=bold, color=blue];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_271  [key=2, style=dotted];
m2_265 -> m2_266  [key=0, style=solid];
m2_268 -> m2_269  [key=0, style=solid];
m2_272 -> m2_273  [key=0, style=solid];
m2_275 -> m2_276  [key=0, style=solid];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_235  [key=2, style=dotted];
m2_267 -> m2_265  [key=0, style=bold, color=blue];
m2_270 -> m2_268  [key=0, style=bold, color=blue];
m2_273 -> m2_274  [key=0, style=solid];
m2_274 -> m2_272  [key=0, style=bold, color=blue];
m2_276 -> m2_277  [key=0, style=solid];
m2_277 -> m2_275  [key=0, style=bold, color=blue];
m2_58 -> m2_59  [key=0, style=solid, color=green];
m2_61 -> m2_62  [key=0, style=solid, color=green];
m2_82 -> m2_80  [key=0, style=bold, color=blue];
m2_82 -> m2_243  [key=0, style=solid];
m2_82 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_82 -> m2_269  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_13 -> m2_15  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_22  [key=2, style=dotted];
m2_113 -> m2_48  [key=2, style=dotted];
m2_113 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=queues];
m2_17 -> m2_19  [key=2, style=dotted];
m2_17 -> m2_20  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_15  [key=0, style=bold, color=blue];
m2_31 -> m2_19  [key=2, style=dotted];
m2_31 -> m2_20  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_18  [key=0, style=bold, color=blue];
m2_44 -> m2_19  [key=2, style=dotted];
m2_44 -> m2_20  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_90 -> m2_19  [key=2, style=dotted];
m2_90 -> m2_73  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_22  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_8  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_22  [key=2, style=dotted];
m2_30 -> m2_23  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_92  [key=0, style=solid];
m2_89 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=server];
m2_112 -> m2_113  [key=0, style=solid];
m2_114 -> m2_112  [key=0, style=bold, color=blue];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_119  [key=2, style=dotted];
m2_114 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_114 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_18 -> m2_30  [key=0, style=solid];
m2_45 -> m2_43  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_22  [key=2, style=dotted];
m2_45 -> m2_48  [key=2, style=dotted];
m2_72 -> m2_70  [key=0, style=bold, color=blue];
m2_72 -> m2_73  [key=0, style=solid];
m2_91 -> m2_89  [key=0, style=solid, color=blue];
m2_91 -> m2_95  [key=2, style=dotted];
m2_91 -> m2_64  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_38  [key=0, style=bold, color=blue];
m2_48 -> m2_46  [key=0, style=bold, color=blue];
m2_78 -> m2_74  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_14  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid, color=green];
m2_74 -> m2_72  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_115  [key=0, style=solid];
m2_38 -> m2_44  [key=0, style=solid];
m2_38 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_38 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_22  [key=2, style=dotted];
m2_124 -> m2_48  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_49  [key=2, style=dotted];
m2_125 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_126 -> m2_122  [key=0, style=bold, color=blue];
m2_92 -> m2_93  [key=0, style=solid];
m2_93 -> m2_86  [key=0, style=bold, color=blue];
m2_93 -> m2_9  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_175 -> m2_176  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_18  [key=2, style=dotted];
m2_177 -> m2_175  [key=0, style=bold, color=blue];
m2_19 -> m2_20  [key=0, style=solid];
m2_22 -> m2_9  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m2_243 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m2_243 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_164  [key=2, style=dotted];
m2_250 -> m2_48  [key=2, style=dotted];
m2_250 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_250 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label=keys];
m2_250 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label=keys];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_264  [key=2, style=dotted];
m2_244 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_249  [key=0, style=solid];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_64  [key=2, style=dotted];
m2_248 -> m2_246  [key=0, style=solid];
m2_248 -> m2_264  [key=2, style=dotted];
m2_248 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_94  [key=2, style=dotted];
m2_245 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_245 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_245 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_164  [key=2, style=dotted];
m2_249 -> m2_48  [key=2, style=dotted];
m2_249 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_249 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_229  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_262  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_228  [key=2, style=dotted];
m2_252 -> m2_163  [key=2, style=dotted];
m2_252 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_252 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_252 -> m2_254  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m2_252 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m2_252 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_256  [key=0, style=solid];
m2_253 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label=key];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_253  [key=0, style=solid];
m2_254 -> m2_205  [key=2, style=dotted];
m2_255 -> m2_253  [key=0, style=solid];
m2_255 -> m2_229  [key=2, style=dotted];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_231  [key=2, style=dotted];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_230  [key=2, style=dotted];
m2_256 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_256 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_257 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_257 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_262 -> m2_263  [key=0, style=solid];
m2_261 -> m2_258  [key=0, style=solid];
m2_261 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_263 -> m2_82  [key=0, style=bold, color=blue];
m2_115 -> m2_15  [key=0, style=bold, color=blue];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_23  [key=2, style=dotted];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_148 -> m2_149  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_147  [key=2, style=dotted];
m2_150 -> m2_148  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=2, style=dotted];
m2_23 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_116 -> m2_115  [key=0, style=solid];
m2_116 -> m2_120  [key=2, style=dotted];
m2_116 -> m2_121  [key=2, style=dotted];
m2_116 -> m2_64  [key=2, style=dotted];
m2_116 -> m2_50  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_51  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_52  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_56  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_75  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_77  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_116 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobFacts"];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_111  [key=0, style=bold, color=blue];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_22  [key=2, style=dotted];
m2_133 -> m2_48  [key=2, style=dotted];
m2_133 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_139  [key=2, style=dotted];
m2_134 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_134 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_137  [key=0, style=solid];
m2_136 -> m2_135  [key=0, style=solid];
m2_136 -> m2_140  [key=2, style=dotted];
m2_136 -> m2_141  [key=2, style=dotted];
m2_136 -> m2_142  [key=2, style=dotted];
m2_136 -> m2_143  [key=2, style=dotted];
m2_136 -> m2_64  [key=2, style=dotted];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_65  [key=2, style=dotted];
m2_138 -> m2_131  [key=0, style=bold, color=blue];
m2_278 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_278 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m2_279 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m2_280 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_281 -> m2_269  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=0, style=solid];
m3_19 -> m3_23  [key=0, style=solid];
m3_19 -> m3_15  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_24  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_25  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_17  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=BasicDeliverEventArgs];
m3_0 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="ref IModel"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_2 -> m3_6  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=0, style=solid];
m3_11 -> m3_14  [key=0, style=solid];
m3_11 -> m3_15  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_16  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_9  [key=0, style=bold, color=blue];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_17  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_26  [key=0, style=bold, color=blue];
m3_31 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m3_31 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m4_45 -> m4_46  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_49  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_35  [key=2, style=dotted];
m4_48 -> m4_45  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_73  [key=0, style=bold, color=blue];
m4_41 -> m4_70  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=2, style=dotted];
m4_71 -> m4_41  [key=0, style=bold, color=blue];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_75  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_42  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_8 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
m4_8 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_8 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
m4_8 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_8 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m4_8 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m4_8 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_8 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_8 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_8 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m4_8 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_33  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_34  [key=2, style=dotted];
m4_19 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=properties];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_36  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_37  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_36  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_38  [key=2, style=dotted];
m4_25 -> m4_39  [key=2, style=dotted];
m4_25 -> m4_36  [key=2, style=dotted];
m4_25 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_36  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_36  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_40  [key=2, style=dotted];
m4_28 -> m4_41  [key=2, style=dotted];
m4_10 -> m4_29  [key=0, style=solid];
m4_10 -> m4_30  [key=2, style=dotted];
m4_12 -> m4_29  [key=0, style=solid];
m4_12 -> m4_30  [key=2, style=dotted];
m4_14 -> m4_29  [key=0, style=solid];
m4_14 -> m4_30  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_31  [key=2, style=dotted];
m4_16 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=processes];
m4_16 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=processes];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_32  [key=2, style=dotted];
m4_17 -> m4_33  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_35  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_35  [key=2, style=dotted];
m4_29 -> m4_8  [key=0, style=bold, color=blue];
m4_32 -> m4_50  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_31  [key=2, style=dotted];
m4_50 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=processes];
m4_50 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=processes];
m4_50 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=processes];
m4_50 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=processes];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label=filterProvider];
m4_51 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label=filterProvider];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_66  [key=2, style=dotted];
m4_57 -> m4_67  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_68  [key=2, style=dotted];
m4_59 -> m4_67  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_69  [key=2, style=dotted];
m4_60 -> m4_67  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_63  [key=2, style=dotted];
m4_52 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=factory];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_64  [key=2, style=dotted];
m4_53 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=performer];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_65  [key=2, style=dotted];
m4_54 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=stateChanger];
m4_54 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=stateChanger];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_59  [key=0, style=solid];
m4_58 -> m4_56  [key=0, style=solid];
m4_58 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_62 -> m4_32  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_6  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [key=0, style=bold, color=blue];
m4_77 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_77 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m5_0 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m5_0 -> m5_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<Hangfire.Storage.RecurringJobDto> GetRecurringJobs"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_29  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_30  [key=2, style=dotted];
m5_6 -> m5_31  [key=2, style=dotted];
m5_6 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_6 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_6 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_6 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_6 -> m5_17  [key=1, style=dashed, color=red, label=hash];
m5_6 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_6 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_6 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_38  [key=2, style=dotted];
m5_19 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m5_2 -> m5_26  [key=0, style=solid];
m5_2 -> m5_27  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_28  [key=2, style=dotted];
m5_3 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_3 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_3 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_8 -> m5_5  [key=0, style=solid];
m5_8 -> m5_32  [key=2, style=dotted];
m5_8 -> m5_33  [key=2, style=dotted];
m5_24 -> m5_5  [key=0, style=solid];
m5_24 -> m5_33  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_25  [key=0, style=solid];
m5_5 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=id];
m5_5 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=id];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_32  [key=2, style=dotted];
m5_9 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_9 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_9 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_9 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_9 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_9 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_9 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_9 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=dto];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_34  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=0, style=solid, color=red];
m5_15 -> m5_36  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid, color=red];
m5_16 -> m5_37  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid, color=red];
m5_17 -> m5_22  [key=0, style=solid, color=red];
m5_17 -> m5_36  [key=2, style=dotted, color=red];
m5_18 -> m5_19  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_36  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_37  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_15  [key=0, style=solid];
m5_12 -> m5_35  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=0, style=solid];
m5_26 -> m5_0  [key=0, style=bold, color=blue];
}
