digraph  {
d21 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=1, label="var client = ClientFactory()", prediction=0, span="107-107"];
d20 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="105-105"];
d22 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=0, label="return client.Schedule(methodCall, delay);", prediction=1, span="108-108"];
d8 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
d23 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="105-105"];
d24 [cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85"];
d31 [cluster="Hangfire.BackgroundJob.Delete(string, string)", color=green, community=1, label="var client = ClientFactory()", prediction=2, span="137-137"];
d30 [cluster="Hangfire.BackgroundJob.Delete(string, string)", label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="135-135"];
d32 [cluster="Hangfire.BackgroundJob.Delete(string, string)", color=green, community=0, label="return client.Delete(jobId, fromState);", prediction=3, span="138-138"];
d33 [cluster="Hangfire.BackgroundJob.Delete(string, string)", label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="135-135"];
d34 [cluster="Hangfire.IBackgroundJobClient.Delete(string, string)", label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="195-195"];
d5 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="var client = ClientFactory()", span="62-62"];
d11 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="var client = ClientFactory()", span="78-78"];
d16 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="var client = ClientFactory()", span="92-92"];
d26 [cluster="Hangfire.BackgroundJob.Delete(string)", label="var client = ClientFactory()", span="121-121"];
d36 [cluster="Hangfire.BackgroundJob.Requeue(string)", label="var client = ClientFactory()", span="150-150"];
d41 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", label="var client = ClientFactory()", span="166-166"];
d4 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
d6 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="return client.Enqueue(methodCall);", span="63-63"];
d10 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="76-76"];
d12 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="return client.Enqueue(methodCall);", span="79-79"];
d15 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="90-90"];
d17 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="return client.Schedule(methodCall, delay);", span="93-93"];
d25 [cluster="Hangfire.BackgroundJob.Delete(string)", label="Entry Hangfire.BackgroundJob.Delete(string)", span="119-119"];
d27 [cluster="Hangfire.BackgroundJob.Delete(string)", label="return client.Delete(jobId);", span="122-122"];
d35 [cluster="Hangfire.BackgroundJob.Requeue(string)", label="Entry Hangfire.BackgroundJob.Requeue(string)", span="148-148"];
d37 [cluster="Hangfire.BackgroundJob.Requeue(string)", label="return client.Requeue(jobId);", span="151-151"];
d40 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="164-164"];
d42 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", label="return client.Requeue(jobId, fromState);", span="167-167"];
d7 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
d9 [cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="35-35"];
d13 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="76-76"];
d14 [cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53"];
d18 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="90-90"];
d19 [cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68"];
d28 [cluster="Hangfire.BackgroundJob.Delete(string)", label="Exit Hangfire.BackgroundJob.Delete(string)", span="119-119"];
d29 [cluster="Hangfire.IBackgroundJobClient.Delete(string)", label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="166-166"];
d38 [cluster="Hangfire.BackgroundJob.Requeue(string)", label="Exit Hangfire.BackgroundJob.Requeue(string)", span="148-148"];
d39 [cluster="Hangfire.IBackgroundJobClient.Requeue(string)", label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="211-211"];
d43 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="164-164"];
d44 [cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)", label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="227-227"];
m0_5 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="_queues = queues", span="28-28"];
m0_11 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs", label="return client.Create(methodCall, new EnqueuedState());", span="57-57"];
m0_15 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="client == null", span="70-70"];
m0_16 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="throw new ArgumentNullException(''client'');", span="70-70"];
m0_18 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68"];
m0_19 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m0_20 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85"];
m0_17 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="return client.Create(methodCall, new ScheduledState(delay));", span="72-72"];
m0_21 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClientExtensions.cs", label="client == null", prediction=4, span="87-87"];
m0_22 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClientExtensions.cs", label="throw new ArgumentNullException(''client'');", prediction=5, span="87-87"];
m0_23 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClientExtensions.cs", label="return client.Create(methodCall, new ScheduledState(delay));", prediction=6, span="89-89"];
m0_26 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs", label="client == null", span="105-105"];
m0_29 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="100-100"];
m0_24 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85"];
m0_25 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="100-100"];
m0_28 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="107-107"];
m0_30 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m0_31 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41"];
m0_45 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs", label="return Delete(client, jobId, null);", span="168-168"];
m0_73 [cluster="Unk.CreateModel", file="BackgroundJobClientExtensions.cs", label="Entry Unk.CreateModel", span=""];
m0_6 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="_factory = factory", span="29-29"];
m0_57 [cluster="Unk.Dispose", file="BackgroundJobClientExtensions.cs", label="Entry Unk.Dispose", span=""];
m0_59 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="_channel != null && _channel.IsOpen && _connection.IsOpen", span="105-105"];
m0_58 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label=ConsumerLock, span="103-103"];
m0_60 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="return;", span="105-105"];
m0_61 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="_channel != null && _channel.IsOpen", span="107-107"];
m0_62 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="_channel.Abort()", span="107-107"];
m0_44 [cluster="Unk.SetPersistent", file="BackgroundJobClientExtensions.cs", label="Entry Unk.SetPersistent", span=""];
m0_46 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", span="86-86"];
m0_56 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="211-211"];
m0_14 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68"];
m0_63 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="!_connection.IsOpen", span="108-108"];
m0_64 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="_connection = _factory.CreateConnection()", span="108-108"];
m0_65 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="_channel = _connection.CreateModel()", span="110-110"];
m0_66 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="_channel.BasicQos(0, 1, false)", span="111-111"];
m0_67 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="var properties = _channel.CreateBasicProperties()", span="113-113"];
m0_68 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="properties.SetPersistent(true)", span="114-114"];
m0_69 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label=_queues, span="117-117"];
m0_70 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="_channel.QueueDeclare(queue, true, false, false, null)", span="118-118"];
m0_71 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="101-101"];
m0_47 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="195-195"];
m0_48 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs", label="client == null", span="197-197"];
m0_51 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs", label="return client.ChangeState(jobId, state, fromState);", span="200-200"];
m0_49 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs", label="throw new ArgumentNullException(''client'');", span="197-197"];
m0_50 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs", label="var state = new DeletedState()", span="199-199"];
m0_52 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensions.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="195-195"];
m0_53 [cluster="Hangfire.States.DeletedState.DeletedState()", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m0_54 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="211-211"];
m0_55 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensions.cs", label="return Requeue(client, jobId, null);", span="213-213"];
m0_38 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs", label="var properties = _channel.CreateBasicProperties()", span="80-80"];
m0_40 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs", label="_channel.BasicPublish('''', queue, properties, body)", span="83-83"];
m0_39 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs", label="properties.SetPersistent(true)", span="81-81"];
m0_41 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="77-77"];
m0_42 [cluster="System.Text.Encoding.GetBytes(string)", file="BackgroundJobClientExtensions.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m0_95 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="BackgroundJobClientExtensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m0_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BackgroundJobClientExtensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m0_94 [cluster="QueueingBasicConsumer.cstr", file="BackgroundJobClientExtensions.cs", label="Entry QueueingBasicConsumer.cstr", span=""];
m0_8 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="_consumers = new ConcurrentDictionary<string, QueueingBasicConsumer>()", span="31-31"];
m0_10 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23"];
m0_9 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="CreateChannel()", span="33-33"];
m0_12 [cluster="Unk.CreateConnection", file="BackgroundJobClientExtensions.cs", label="Entry Unk.CreateConnection", span=""];
m0_32 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="BackgroundJobClientExtensions.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m0_33 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientExtensions.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", prediction=7, span="122-122"];
m0_34 [cluster="Unk.Dequeue", color=green, community=0, file="BackgroundJobClientExtensions.cs", label="Entry Unk.Dequeue", prediction=8, span=""];
m0_35 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", color=green, community=0, file="BackgroundJobClientExtensions.cs", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", prediction=9, span="15-15"];
m0_36 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="77-77"];
m0_75 [cluster="Unk.QueueDeclare", file="BackgroundJobClientExtensions.cs", label="Entry Unk.QueueDeclare", span=""];
m0_37 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="175-175"];
m0_76 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="QueueingBasicConsumer consumer", span="124-124"];
m0_77 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="126-126"];
m0_78 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="!_consumers.TryGetValue(queue, out consumer)", span="128-128"];
m0_80 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="!_consumers.TryGetValue(queue, out consumer)", span="133-133"];
m0_82 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="_consumers.AddOrUpdate(queue, consumer, (dq, dc) => consumer)", span="136-136"];
m0_83 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, consumer)", span="137-137"];
m0_88 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="_consumers.AddOrUpdate(queue, newConsumer, (dq, dc) => newConsumer)", span="152-152"];
m0_89 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="_channel.BasicConsume(queue, false, ''HangFire.RabbitMq.'' + Thread.CurrentThread.Name, newConsumer)", span="153-153"];
m0_79 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label=ConsumerLock, span="131-131"];
m0_84 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="consumer.Model.IsClosed", span="144-144"];
m0_86 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="consumer.Model.IsClosed", span="148-148"];
m0_91 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="return consumer;", span="160-160"];
m0_81 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="consumer = new QueueingBasicConsumer(_channel)", span="135-135"];
m0_85 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label=ConsumerLock, span="146-146"];
m0_87 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="var newConsumer = new QueueingBasicConsumer(_channel)", span="151-151"];
m0_90 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="consumer = newConsumer", span="154-154"];
m0_92 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="122-122"];
m0_100 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="152-152"];
m0_98 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label=consumer, span="136-136"];
m0_97 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="136-136"];
m0_101 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label=newConsumer, span="152-152"];
m0_99 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="136-136"];
m0_102 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="152-152"];
m0_0 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="23-23"];
m0_2 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="throw new ArgumentNullException(''queues'');", span="25-25"];
m0_1 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="queues == null", span="25-25"];
m0_3 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="factory == null", span="26-26"];
m0_4 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="BackgroundJobClientExtensions.cs", label="throw new ArgumentNullException(''factory'');", span="26-26"];
m0_7 [cluster="Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="100-100"];
m0_43 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClientExtensions.cs", label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="54-54"];
m0_93 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BackgroundJobClientExtensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m0_96 [cluster="Unk.BasicConsume", file="BackgroundJobClientExtensions.cs", label="Entry Unk.BasicConsume", span=""];
m0_72 [cluster="Unk.Abort", file="BackgroundJobClientExtensions.cs", label="Entry Unk.Abort", span=""];
m0_74 [cluster="Unk.BasicQos", file="BackgroundJobClientExtensions.cs", label="Entry Unk.BasicQos", span=""];
m0_103 [file="BackgroundJobClientExtensions.cs", label="HangFire.RabbitMQ.RabbitMqJobQueue", span=""];
m0_104 [file="BackgroundJobClientExtensions.cs", label=consumer, span=""];
m0_105 [file="BackgroundJobClientExtensions.cs", label=newConsumer, span=""];
m1_191 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", span="192-192"];
m1_192 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Requeue(JobId)", span="194-194"];
m1_193 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.ChangeState(JobId, It.IsAny<EnqueuedState>(), null))", span="196-196"];
m1_194 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ChangesTheStateOfAJob_ToEnqueued()", span="192-192"];
m1_153 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", span="144-144"];
m1_154 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.ChangeState(''job-id'', _state.Object)", span="146-146"];
m1_155 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.ChangeState(''job-id'', _state.Object, null))", span="148-148"];
m1_156 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_CallsItsOverload()", span="144-144"];
m1_5 [cluster="Mock<IState>.cstr", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m1_128 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="85-85"];
m1_160 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m1_161 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Delete(null, JobId))", span="154-155"];
m1_162 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", prediction=10, span="157-157"];
m1_163 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m1_4 [cluster="Mock<IBackgroundJobClient>.cstr", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
m1_6 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="22-22"];
m1_7 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object))", span="24-26"];
m1_8 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="28-28"];
m1_9 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="22-22"];
m1_11 [cluster="Unk.Equal", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Equal", span=""];
m1_52 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="58-58"];
m1_53 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="60-62"];
m1_54 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="64-64"];
m1_55 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="58-58"];
m1_199 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", span="200-200"];
m1_200 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Requeue(JobId, FailedState.StateName)", span="202-202"];
m1_201 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.ChangeState(JobId, It.IsAny<EnqueuedState>(), FailedState.StateName))", span="204-204"];
m1_202 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_WithFromState_ChangesTheStateOfAJob_ToEnqueued_FromTheGivenState()", span="200-200"];
m1_74 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="76-76"];
m1_75 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="78-80"];
m1_76 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="82-82"];
m1_77 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="76-76"];
m1_190 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="227-227"];
m1_0 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="15-15"];
m1_1 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs", label="_client = new Mock<IBackgroundJobClient>()", span="17-17"];
m1_2 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs", label="_state = new Mock<IState>()", span="18-18"];
m1_3 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="15-15"];
m1_20 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="32-32"];
m1_21 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Create(() => StaticMethod(), _state.Object)", span="34-34"];
m1_22 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="36-36"];
m1_23 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="32-32"];
m1_167 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="166-166"];
m1_195 [cluster="Unk.Requeue", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Requeue", span=""];
m1_31 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="40-40"];
m1_32 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="42-44"];
m1_33 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="46-46"];
m1_34 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="40-40"];
m1_103 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="68-68"];
m1_10 [cluster="Unk.>", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.>", span=""];
m1_63 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="68-68"];
m1_64 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Enqueue(() => StaticMethod())", span="70-70"];
m1_65 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="72-72"];
m1_66 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="68-68"];
m1_107 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="104-104"];
m1_108 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="106-106"];
m1_109 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="108-110"];
m1_110 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="104-104"];
m1_95 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="94-94"];
m1_96 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="96-98"];
m1_97 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="100-100"];
m1_98 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="94-94"];
m1_81 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53"];
m1_41 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="211-211"];
m1_207 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="211-211"];
m1_19 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="207-207"];
m1_206 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="207-207"];
m1_176 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", span="172-172"];
m1_177 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Delete(JobId, FailedState.StateName)", prediction=11, span="174-174"];
m1_178 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName))", prediction=11, span="176-179"];
m1_179 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_WithFromState_ChangesTheStateOfAJob_ToDeletedWithFromStateValue()", span="172-172"];
m1_102 [cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m1_67 [cluster="Unk.Enqueue", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Enqueue", span=""];
m1_152 [cluster="Unk.ChangeState", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.ChangeState", span=""];
m1_132 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="124-124"];
m1_133 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", prediction=11, span="126-127"];
m1_134 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", color=green, community=1, file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", prediction=11, span="129-131"];
m1_135 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="124-124"];
m1_168 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", span="161-161"];
m1_169 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Delete(JobId)", prediction=11, span="163-163"];
m1_170 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                null))", prediction=11, span="165-168"];
m1_171 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Delete_ChangesTheStateOfAJob_ToDeleted()", span="161-161"];
m1_85 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="86-86"];
m1_86 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="88-88"];
m1_87 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="90-90"];
m1_88 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="86-86"];
m1_59 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35"];
m1_203 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="204-204"];
m1_12 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="25-26"];
m1_13 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="25-26"];
m1_14 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="25-26"];
m1_16 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="26-26"];
m1_17 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="26-26"];
m1_18 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="26-26"];
m1_25 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="34-34"];
m1_28 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="36-36"];
m1_26 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="34-34"];
m1_27 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="34-34"];
m1_29 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="36-36"];
m1_30 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="36-36"];
m1_35 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="43-44"];
m1_36 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="43-44"];
m1_37 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="43-44"];
m1_38 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="44-44"];
m1_39 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="44-44"];
m1_40 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="44-44"];
m1_46 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="52-52"];
m1_49 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="54-54"];
m1_47 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="52-52"];
m1_48 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="52-52"];
m1_50 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="54-54"];
m1_51 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="54-54"];
m1_56 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="61-62"];
m1_57 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="61-62"];
m1_58 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="61-62"];
m1_60 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="62-62"];
m1_61 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="62-62"];
m1_62 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="62-62"];
m1_68 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="70-70"];
m1_71 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="72-72"];
m1_69 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="70-70"];
m1_70 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="70-70"];
m1_72 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="72-72"];
m1_73 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="72-72"];
m1_78 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="79-80"];
m1_79 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="79-80"];
m1_80 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="79-80"];
m1_82 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="80-80"];
m1_83 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="80-80"];
m1_84 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="80-80"];
m1_89 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="88-88"];
m1_92 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="90-90"];
m1_90 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="88-88"];
m1_91 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="88-88"];
m1_93 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="90-90"];
m1_94 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="90-90"];
m1_99 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="97-98"];
m1_100 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="97-98"];
m1_101 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="97-98"];
m1_104 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="98-98"];
m1_105 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="98-98"];
m1_106 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="98-98"];
m1_112 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="106-106"];
m1_115 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="108-110"];
m1_113 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="106-106"];
m1_114 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="106-106"];
m1_116 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="108-110"];
m1_117 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="108-110"];
m1_118 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="110-110"];
m1_119 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="110-110"];
m1_120 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="110-110"];
m1_125 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="117-118"];
m1_126 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", prediction=17, span="117-118"];
m1_127 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="117-118"];
m1_129 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="118-118"];
m1_130 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", prediction=18, span="118-118"];
m1_131 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="118-118"];
m1_136 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="127-127"];
m1_139 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="129-131"];
m1_137 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", prediction=19, span="127-127"];
m1_138 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="127-127"];
m1_140 [cluster="lambda expression", color=green, community=1, file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", prediction=20, span="129-131"];
m1_141 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="129-131"];
m1_142 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="131-131"];
m1_143 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", prediction=21, span="131-131"];
m1_144 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="131-131"];
m1_149 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="138-138"];
m1_150 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.ChangeState(null, ''job-id'', _state.Object)", span="138-138"];
m1_151 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="138-138"];
m1_157 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="148-148"];
m1_158 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.ChangeState(''job-id'', _state.Object, null)", span="148-148"];
m1_159 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="148-148"];
m1_164 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="155-155"];
m1_165 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Delete(null, JobId)", span="155-155"];
m1_166 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="155-155"];
m1_173 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="165-168"];
m1_174 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                null)", prediction=22, span="165-168"];
m1_175 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="165-168"];
m1_180 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="176-179"];
m1_181 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName)", prediction=23, span="176-179"];
m1_182 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="176-179"];
m1_187 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="186-186"];
m1_188 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Requeue(null, JobId, FailedState.StateName)", span="186-186"];
m1_189 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="186-186"];
m1_196 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="196-196"];
m1_197 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.ChangeState(JobId, It.IsAny<EnqueuedState>(), null)", span="196-196"];
m1_198 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="196-196"];
m1_204 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.ChangeState(JobId, It.IsAny<EnqueuedState>(), FailedState.StateName)", span="204-204"];
m1_205 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="204-204"];
m1_42 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="50-50"];
m1_43 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="52-52"];
m1_44 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="54-54"];
m1_45 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="50-50"];
m1_172 [cluster="Unk.Delete", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Delete", span=""];
m1_145 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", span="135-135"];
m1_146 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.ChangeState(null, ''job-id'', _state.Object))", span="137-138"];
m1_147 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="140-140"];
m1_148 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.ChangeState_WithoutFromState_ThrowsAnException_WhenClientIsNull()", span="135-135"];
m1_121 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="114-114"];
m1_122 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", color=green, community=1, file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", prediction=24, span="116-118"];
m1_123 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", prediction=25, span="120-120"];
m1_124 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="114-114"];
m1_111 [cluster="Unk.Schedule", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Schedule", span=""];
m1_15 [cluster="Unk.Create", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Create", span=""];
m1_183 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", span="183-183"];
m1_184 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Requeue(null, JobId, FailedState.StateName))", span="185-186"];
m1_185 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="188-188"];
m1_186 [cluster="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts.Requeue_ThrowsAnException_WhenClientIsNull()", span="183-183"];
m1_24 [cluster="Unk.Verify", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Verify", span=""];
m1_208 [file="BackgroundJobClientExtensionsFacts.cs", label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", span=""];
m2_94 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Requeue(''job-id'', FailedState.StateName)", span="105-105"];
m2_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="27-27"];
m2_71 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null)", span="68-71"];
m2_142 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m2_50 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", color=green, community=0, file="BackgroundJobFacts.cs", label="Initialize()", prediction=26, span="52-52"];
m2_51 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", color=green, community=0, file="BackgroundJobFacts.cs", label="BackgroundJob.Schedule<BackgroundJobFacts>(x => Method(), TimeSpan.FromDays(1))", prediction=26, span="54-54"];
m2_52 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", color=green, community=1, file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", prediction=26, span="56-58"];
m2_54 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="105-105"];
m2_55 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="54-54"];
m2_56 [cluster="lambda expression", color=green, community=0, file="BackgroundJobFacts.cs", label="Method()", prediction=26, span="54-54"];
m2_53 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="50-50"];
m2_57 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="54-54"];
m2_62 [cluster="lambda expression", color=green, community=0, file="BackgroundJobFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", prediction=30, span="58-58"];
m2_43 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="44-46"];
m2_178 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351"];
m2_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="var stats = new StatisticsDto()", span="353-353"];
m2_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect sum([Value]) from HangFire.Counter where [Key] = 'stats:succeeded'\r\n''", span="355-360"];
m2_184 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="368-368"];
m2_185 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="stats.Failed = getCountIfExists(FailedState.Name)", span="369-369"];
m2_186 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="370-370"];
m2_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="371-371"];
m2_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="stats.Servers = multi.Read<int>().Single()", span="373-373"];
m2_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="stats.Queues = multi.Read<int>().Single()", span="374-374"];
m2_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="376-376"];
m2_191 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="return stats;", span="379-379"];
m2_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="var multi = _connection.QueryMultiple(sql)", span="362-362"];
m2_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="364-364"];
m2_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366"];
m2_192 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351"];
m2_42 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="42-42"];
m2_83 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="88-88"];
m2_84 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Initialize()", span="90-90"];
m2_85 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="BackgroundJob.Requeue(''job-id'')", span="92-92"];
m2_103 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m2_7 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="24-24"];
m2_147 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382"];
m2_206 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var endDate = DateTime.UtcNow", span="384-384"];
m2_213 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="392-392"];
m2_207 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var dates = new List<DateTime>()", span="385-385"];
m2_210 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="dates.Add(endDate)", span="388-388"];
m2_211 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="endDate = endDate.AddHours(-1)", span="389-389"];
m2_208 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var i = 0", span="386-386"];
m2_221 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="i < dates.Count", span="410-410"];
m2_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="result.Add(dates[i], value)", span="413-413"];
m2_209 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="i < 24", span="386-386"];
m2_212 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="i++", span="386-386"];
m2_214 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="394-397"];
m2_215 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="399-402"];
m2_216 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label=keys, span="404-404"];
m2_217 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="!valuesMap.ContainsKey(key)", span="406-406"];
m2_218 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="valuesMap.Add(key, 0)", span="406-406"];
m2_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="412-412"];
m2_219 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="409-409"];
m2_220 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="var i = 0", span="410-410"];
m2_225 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="return result;", span="416-416"];
m2_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="i++", span="410-410"];
m2_226 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382"];
m2_141 [cluster="Unk.ToString", file="BackgroundJobFacts.cs", label="Entry Unk.ToString", span=""];
m2_73 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="BackgroundJobFacts.cs", label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151"];
m2_151 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m2_152 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320"];
m2_153 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322"];
m2_154 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324"];
m2_157 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327"];
m2_158 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => JobHelper.FromJson<Dictionary<string, string>>(x.Data))\r\n                        .ToList()", span="328-332"];
m2_155 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="job == null", span="325-325"];
m2_159 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="334-342"];
m2_156 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="return null;", span="325-325"];
m2_160 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m2_49 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="50-50"];
m2_32 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="34-34"];
m2_33 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="38-38"];
m2_34 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Initialize()", span="40-40"];
m2_144 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m2_145 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="BackgroundJobFacts.cs", label="return GetHourlyTimelineStats(''succeeded'');", span="307-307"];
m2_146 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m2_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154"];
m2_86 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164"];
m2_87 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs", label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168"];
m2_194 [cluster="Unk.Read", file="BackgroundJobFacts.cs", label="Entry Unk.Read", span=""];
m2_104 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m2_105 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="BackgroundJobFacts.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214"];
m2_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m2_96 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="101-101"];
m2_97 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="164-164"];
m2_98 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="107-110"];
m2_9 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="BackgroundJobFacts.cs", label="_transaction.Complete()", span="32-32"];
m2_110 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m2_111 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m2_205 [cluster="Unk.ContainsKey", file="BackgroundJobFacts.cs", label="Entry Unk.ContainsKey", span=""];
m2_4 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m2_5 [cluster="TransactionScope.cstr", file="BackgroundJobFacts.cs", label="Entry TransactionScope.cstr", span=""];
m2_6 [cluster="TransactionOptions.cstr", file="BackgroundJobFacts.cs", label="Entry TransactionOptions.cstr", span=""];
m2_8 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30"];
m2_121 [cluster="Unk.EnqueuedJobs", file="BackgroundJobFacts.cs", label="Entry Unk.EnqueuedJobs", span=""];
m2_80 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="81-84"];
m2_81 [cluster="lambda expression", color=green, community=0, file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName)", prediction=31, span="81-84"];
m2_59 [cluster="lambda expression", color=green, community=1, file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", prediction=32, span="56-58"];
m2_60 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="56-58"];
m2_66 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="BackgroundJob.Delete(''job-id'')", span="66-66"];
m2_67 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null))", span="68-71"];
m2_68 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="62-62"];
m2_69 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="BackgroundJobFacts.cs", label="return null;", span="138-138"];
m2_70 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="68-71"];
m2_139 [cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="BackgroundJobFacts.cs", label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span=""];
m2_88 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs", label="var result = new List<ServerDto>()", span="170-170"];
m2_193 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m2_195 [cluster="System.Func<T, TResult>.Invoke(T)", file="BackgroundJobFacts.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_63 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="58-58"];
m2_27 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="32-32"];
m2_28 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Method()", span="32-32"];
m2_29 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="32-32"];
m2_95 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName))", span="107-110"];
m2_143 [cluster="Unk.DeserializeJobMethod", file="BackgroundJobFacts.cs", label="Entry Unk.DeserializeJobMethod", span=""];
m2_35 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m2_36 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="BackgroundJobFacts.cs", label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.Name,\r\n                (method, stateData) => new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="80-88"];
m2_37 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m2_264 [cluster="System.DateTime.AddDays(double)", file="BackgroundJobFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m2_64 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_65 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
m2_14 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="22-22"];
m2_165 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m2_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m2_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs", label="_connection = connection", span="22-22"];
m2_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="BackgroundJobFacts.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="23-25"];
m2_24 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="34-34"];
m2_25 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="28-28"];
m2_26 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="76-76"];
m2_46 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs", label="return DeserializeJobs(jobs, selector);", span="107-107"];
m2_39 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="90-90"];
m2_40 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="42-42"];
m2_41 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="42-42"];
m2_75 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", color=green, community=1, file="BackgroundJobFacts.cs", label="Initialize()", prediction=26, span="77-77"];
m2_76 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", color=green, community=0, file="BackgroundJobFacts.cs", label="BackgroundJob.Delete(''job-id'', FailedState.StateName)", prediction=34, span="79-79"];
m2_77 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", color=green, community=0, file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName))", prediction=26, span="81-84"];
m2_99 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName)", span="107-110"];
m2_100 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="107-110"];
m2_101 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="194-201"];
m2_107 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="210-214"];
m2_108 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214"];
m2_109 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="210-214"];
m2_127 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="266-270"];
m2_128 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270"];
m2_129 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="266-270"];
m2_166 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="327-327"];
m2_169 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="327-327"];
m2_172 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="331-331"];
m2_167 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Name", span="327-327"];
m2_168 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="327-327"];
m2_170 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Value", span="327-327"];
m2_171 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="327-327"];
m2_173 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="JobHelper.FromJson<Dictionary<string, string>>(x.Data)", span="331-331"];
m2_174 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="331-331"];
m2_196 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="364-364"];
m2_199 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="364-364"];
m2_203 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366"];
m2_197 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.State", span="364-364"];
m2_198 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="364-364"];
m2_200 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Count", span="364-364"];
m2_201 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="364-364"];
m2_202 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="366-366"];
m2_204 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="366-366"];
m2_233 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="392-392"];
m2_232 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="392-392"];
m2_237 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="402-402"];
m2_240 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="402-402"];
m2_234 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="392-392"];
m2_238 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="(string)x.Key", span="402-402"];
m2_239 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="402-402"];
m2_241 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="(long)x.Count", span="402-402"];
m2_242 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="402-402"];
m2_269 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="432-432"];
m2_265 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="431-431"];
m2_268 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="432-432"];
m2_272 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="442-442"];
m2_275 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="442-442"];
m2_266 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ToString(''yyyy-MM-dd'')", span="431-431"];
m2_267 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="431-431"];
m2_270 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="432-432"];
m2_273 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="(string)x.Key", span="442-442"];
m2_274 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="442-442"];
m2_276 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="(long)x.Count", span="442-442"];
m2_277 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="442-442"];
m2_58 [cluster="System.Collections.Generic.List<T>.List(int)", file="BackgroundJobFacts.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m2_61 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="BackgroundJobFacts.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_82 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="419-419"];
m2_13 [cluster="Unk.Complete", file="BackgroundJobFacts.cs", label="Entry Unk.Complete", span=""];
m2_113 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233"];
m2_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37"];
m2_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m2_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs", label="string jobsSql = @''\r\nselect * from (select *, row_number() over (order by CreatedAt desc) as row_num\r\nfrom HangFire.Job where State = @stateName) as j where j.row_num between @start and @end\r\n''", span="97-100"];
m2_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174"];
m2_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30"];
m2_16 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="BackgroundJobFacts.cs", label="return GetNumberOfJobsByStateName(ScheduledState.Name);", span="39-39"];
m2_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="BackgroundJobFacts.cs", label="return _connection.Query<int>(\r\n                @''select count(Id) from HangFire.Job where State = @state'',\r\n                new { state = stateName })\r\n                .Single();", span="67-70"];
m2_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs", label=servers, span="172-172"];
m2_112 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231"];
m2_114 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234"];
m2_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m2_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs", label="var jobs = _connection.Query<Job>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="102-105"];
m2_72 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m2_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="BackgroundJobFacts.cs", label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182"];
m2_47 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91"];
m2_48 [cluster="Unk.ToList", file="BackgroundJobFacts.cs", label="Entry Unk.ToList", span=""];
m2_120 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m2_271 [cluster="Unk.Format", file="BackgroundJobFacts.cs", label="Entry Unk.Format", span=""];
m2_235 [cluster="System.DateTime.ToString(string)", file="BackgroundJobFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m2_78 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="75-75"];
m2_119 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="BackgroundJobFacts.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m2_231 [cluster="Unk.ElementAt", file="BackgroundJobFacts.cs", label="Entry Unk.ElementAt", span=""];
m2_10 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobFacts.cs", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
m2_11 [cluster="Unk.Verify", file="BackgroundJobFacts.cs", label="Entry Unk.Verify", span=""];
m2_228 [cluster="Unk.Query", file="BackgroundJobFacts.cs", label="Entry Unk.Query", span=""];
m2_74 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m2_229 [cluster="Unk.Add", file="BackgroundJobFacts.cs", label="Entry Unk.Add", span=""];
m2_227 [cluster="System.DateTime.AddHours(double)", file="BackgroundJobFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m2_15 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Method()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Method()", span="128-128"];
m2_38 [cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m2_161 [cluster="Unk.QueryMultiple", file="BackgroundJobFacts.cs", label="Entry Unk.QueryMultiple", span=""];
m2_140 [cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="BackgroundJobFacts.cs", label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span=""];
m2_122 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m2_123 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257"];
m2_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262"];
m2_125 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270"];
m2_126 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m2_92 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="101-101"];
m2_93 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Initialize()", span="103-103"];
m2_236 [cluster="string.Format(string, object, object)", file="BackgroundJobFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_163 [cluster="Unk.ToDictionary", file="BackgroundJobFacts.cs", label="Entry Unk.ToDictionary", span=""];
m2_175 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346"];
m2_176 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="BackgroundJobFacts.cs", label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="348-348"];
m2_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346"];
m2_130 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m2_102 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="BackgroundJobFacts.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m2_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="42-42"];
m2_22 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Initialize()", span="30-30"];
m2_243 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var endDate = DateTime.UtcNow.Date", span="421-421"];
m2_250 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="432-432"];
m2_244 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var startDate = endDate.AddDays(-7)", span="422-422"];
m2_246 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="startDate <= endDate", span="425-425"];
m2_247 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="dates.Add(endDate)", span="427-427"];
m2_248 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="endDate = endDate.AddDays(-1)", span="428-428"];
m2_245 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var dates = new List<DateTime>()", span="423-423"];
m2_249 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="431-431"];
m2_260 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="result.Add(dates[i], value)", span="453-453"];
m2_258 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="i < stringDates.Count", span="450-450"];
m2_251 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="434-437"];
m2_252 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="439-442"];
m2_253 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label=keys, span="444-444"];
m2_254 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="!valuesMap.ContainsKey(key)", span="446-446"];
m2_255 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="valuesMap.Add(key, 0)", span="446-446"];
m2_259 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="452-452"];
m2_256 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="449-449"];
m2_257 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="var i = 0", span="450-450"];
m2_262 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="return result;", span="456-456"];
m2_261 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="i++", span="450-450"];
m2_263 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="419-419"];
m2_230 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_115 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label=queues, span="236-236"];
m2_20 [cluster="Unk.Create", file="BackgroundJobFacts.cs", label="Entry Unk.Create", span=""];
m2_21 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="28-28"];
m2_148 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m2_149 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="BackgroundJobFacts.cs", label="return GetHourlyTimelineStats(''failed'');", span="312-312"];
m2_150 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m2_164 [cluster="Unk.Select", file="BackgroundJobFacts.cs", label="Entry Unk.Select", span=""];
m2_23 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Enqueue<BackgroundJobFacts>(x => x.Method())", span="32-32"];
m2_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label="Hangfire.Core.Tests.BackgroundJobFacts", span=""];
m2_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label="return result;", span="247-247"];
m2_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m2_162 [cluster="Unk.SingleOrDefault", file="BackgroundJobFacts.cs", label="Entry Unk.SingleOrDefault", span=""];
m2_131 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m2_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280"];
m2_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285"];
m2_134 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287"];
m2_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label=jobs, span="289-289"];
m2_136 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299"];
m2_137 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="return new JobList<DequeuedJobDto>(result);", span="302-302"];
m2_138 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundJobFacts.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m2_278 [file="BackgroundJobFacts.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m2_279 [file="BackgroundJobFacts.cs", label=countByStates, span=""];
m2_280 [file="BackgroundJobFacts.cs", label=string, span=""];
m2_281 [file="BackgroundJobFacts.cs", label=string, span=""];
m3_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobArgumentFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_24 [cluster="Unk.BasicNack", file="JobArgumentFacts.cs", label="Entry Unk.BasicNack", span=""];
m3_17 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
m3_18 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs", label=_completed, span="36-36"];
m3_19 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs", label="throw new InvalidOperationException(''Job already completed'');", span="36-36"];
m3_20 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs", label="_channel.BasicNack(_message.DeliveryTag, false, true)", span="37-37"];
m3_21 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs", label="_channel.Close(global::RabbitMQ.Client.Framing.v0_9_1.Constants.ReplySuccess, ''Requeue'')", span="38-38"];
m3_22 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs", label="_completed = true", span="40-40"];
m3_23 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobArgumentFacts.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
m3_8 [cluster="Unk.GetString", file="JobArgumentFacts.cs", label="Entry Unk.GetString", span=""];
m3_0 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
m3_1 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs", label="message == null", span="17-17"];
m3_3 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs", label="_message = message", span="19-19"];
m3_4 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs", label="_channel = channel", span="20-20"];
m3_2 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs", label="throw new ArgumentNullException(''message'');", span="17-17"];
m3_5 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs", label="JobId = Encoding.UTF8.GetString(_message.Body)", span="22-22"];
m3_6 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobArgumentFacts.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
m3_9 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27"];
m3_10 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs", label=_completed, span="29-29"];
m3_11 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs", label="throw new InvalidOperationException(''Job already completed'');", span="29-29"];
m3_12 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs", label="_channel.BasicAck(_message.DeliveryTag, false)", span="30-30"];
m3_13 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs", label="_completed = true", span="31-31"];
m3_14 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="JobArgumentFacts.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27"];
m3_16 [cluster="Unk.BasicAck", file="JobArgumentFacts.cs", label="Entry Unk.BasicAck", span=""];
m3_25 [cluster="Unk.Close", file="JobArgumentFacts.cs", label="Entry Unk.Close", span=""];
m3_15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobArgumentFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_26 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs", label="Entry HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
m3_27 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs", label="!_completed && !_disposed", span="45-45"];
m3_28 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs", label="Requeue()", span="47-47"];
m3_29 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs", label="_disposed = true", span="50-50"];
m3_30 [cluster="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobArgumentFacts.cs", label="Exit HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
m3_31 [file="JobArgumentFacts.cs", label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", span=""];
m4_64 [cluster="Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", span="39-39"];
m4_30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_31 [cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_45 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
m4_46 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs", label="_processingServer.Dispose()", span="116-116"];
m4_47 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs", label="Logger.Info(''Hangfire Server stopped.'')", span="117-117"];
m4_48 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
m4_4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
m4_5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
m4_0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
m4_1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
m4_39 [cluster="Unk.Join", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Join", span=""];
m4_73 [cluster="Hangfire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="157-157"];
m4_74 [cluster="Hangfire.BackgroundJobServer.Start()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.Start()", span="157-157"];
m4_37 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68"];
m4_69 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m4_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_65 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m4_36 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m4_41 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
m4_70 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs", label="return new BackgroundProcessingServerOptions\r\n            {\r\n                ShutdownTimeout = _options.ShutdownTimeout,\r\n                HeartbeatInterval = _options.HeartbeatInterval,\r\n                ServerCheckInterval = _options.ServerWatchdogOptions != null\r\n                    ? _options.ServerWatchdogOptions.CheckInterval\r\n                    : _options.ServerCheckInterval,\r\n                ServerTimeout = _options.ServerWatchdogOptions != null\r\n                    ? _options.ServerWatchdogOptions.ServerTimeout\r\n                    : _options.ServerTimeout\r\n            };", span="143-153"];
m4_71 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
m4_75 [cluster="Hangfire.BackgroundJobServer.Stop()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.Stop()", span="162-162"];
m4_76 [cluster="Hangfire.BackgroundJobServer.Stop()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.Stop()", span="162-162"];
m4_63 [cluster="Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m4_42 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="103-103"];
m4_43 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="''''' + x + '''''", span="103-103"];
m4_44 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="103-103"];
m4_38 [cluster="Unk.Select", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Select", span=""];
m4_33 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_35 [cluster="Hangfire.Logging.ILog.Info(string)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m4_8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
m4_9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="storage == null", span="80-80"];
m4_11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="options == null", span="81-81"];
m4_13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="additionalProcesses == null", span="82-82"];
m4_15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="_options = options", span="84-84"];
m4_18 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="processes.AddRange(additionalProcesses)", span="88-88"];
m4_19 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="90-94"];
m4_21 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="97-97"];
m4_22 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="storage.WriteOptionsToLog(Logger)", span="99-99"];
m4_24 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Logger.InfoFormat(''    Worker count: {0}.'', options.WorkerCount)", span="102-102"];
m4_25 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', options.Queues.Select(x => ''''' + x + ''''')))", span="103-103"];
m4_26 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Logger.InfoFormat(''    Shutdown timeout: {0}.'', options.ShutdownTimeout)", span="104-104"];
m4_27 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Logger.InfoFormat(''    Schedule polling interval: {0}.'', options.SchedulePollingInterval)", span="105-105"];
m4_28 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="_processingServer = new BackgroundProcessingServer(\r\n                storage, \r\n                processes, \r\n                properties, \r\n                GetProcessingServerOptions())", span="107-111"];
m4_10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''storage'');", span="80-80"];
m4_12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''options'');", span="81-81"];
m4_14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''additionalProcesses'');", span="82-82"];
m4_16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="var processes = new List<IBackgroundProcess>()", span="86-86"];
m4_17 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="processes.AddRange(GetRequiredProcesses())", span="87-87"];
m4_20 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Logger.Info(''Starting Hangfire Server'')", span="96-96"];
m4_23 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Logger.Info(''Using the following options for Hangfire Server:'')", span="101-101"];
m4_29 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
m4_66 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60"];
m4_72 [cluster="Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", span="22-22"];
m4_67 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_32 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
m4_50 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="var processes = new List<IBackgroundProcess>()", span="122-122"];
m4_51 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="var filterProvider = _options.FilterProvider ?? JobFilterProviders.Providers", span="124-124"];
m4_57 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="processes.Add(new Worker(_options.Queues, performer, stateChanger))", span="132-132"];
m4_59 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="processes.Add(new DelayedJobScheduler(_options.SchedulePollingInterval, stateChanger))", span="135-135"];
m4_60 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="processes.Add(new RecurringJobScheduler(factory))", span="136-136"];
m4_61 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="return processes;", span="138-138"];
m4_52 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="var factory = new BackgroundJobFactory(filterProvider)", span="126-126"];
m4_53 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="var performer = new BackgroundJobPerformer(filterProvider, _options.Activator ?? JobActivator.Current)", span="127-127"];
m4_54 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="var stateChanger = new BackgroundJobStateChanger(filterProvider)", span="128-128"];
m4_55 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="var i = 0", span="130-130"];
m4_56 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="i < _options.WorkerCount", span="130-130"];
m4_58 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="i++", span="130-130"];
m4_62 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
m4_6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
m4_7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
m4_49 [cluster="System.IDisposable.Dispose()", file="RecurringJobSchedulerFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_68 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m4_2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
m4_3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
m4_40 [cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", span="87-87"];
m4_77 [file="RecurringJobSchedulerFacts.cs", label="Hangfire.BackgroundJobServer", span=""];
m5_29 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m5_36 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_38 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m5_28 [cluster="System.Collections.Generic.List<T>.List()", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_35 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m5_27 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StorageConnectionExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_34 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m5_33 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_31 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m5_37 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m5_0 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25"];
m5_1 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="connection == null", span="27-27"];
m5_4 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="31-31"];
m5_6 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="35-35"];
m5_19 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", span="65-65"];
m5_2 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="throw new ArgumentNullException(''connection'');", span="27-27"];
m5_3 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var result = new List<RecurringJobDto>()", span="29-29"];
m5_8 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="result.Add(new RecurringJobDto { Id = id, Removed = true })", span="39-39"];
m5_24 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="result.Add(dto)", span="77-77"];
m5_25 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="return result;", span="80-80"];
m5_5 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label=ids, span="33-33"];
m5_9 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var dto = new RecurringJobDto { Id = id }", span="43-43"];
m5_7 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="hash == null", span="37-37"];
m5_10 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.Cron = hash[''Cron'']", span="44-44"];
m5_11 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="48-48"];
m5_15 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''NextExecution'')", span="56-56"];
m5_16 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="58-58"];
m5_18 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LastJobId = hash[''LastJobId'']", span="63-63"];
m5_22 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''LastExecution'')", span="72-72"];
m5_23 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="74-74"];
m5_12 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.Job = invocationData.Deserialize()", span="49-49"];
m5_14 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LoadException = ex", span="53-53"];
m5_21 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="dto.LastJobState = stateData.Name", span="68-68"];
m5_13 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label=JobLoadException, span="51-51"];
m5_20 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="stateData != null", span="66-66"];
m5_26 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs", label="Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="25-25"];
m5_32 [cluster="Hangfire.Storage.RecurringJobDto.RecurringJobDto()", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.RecurringJobDto.RecurringJobDto()", span="21-21"];
m5_30 [cluster="string.Format(string, object)", file="StorageConnectionExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
d20 -> d22  [color=green, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
d30 -> d32  [color=green, key=1, label=string, style=dashed];
d4 -> d6  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
d10 -> d12  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
d15 -> d17  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
d25 -> d27  [color=darkseagreen4, key=1, label=string, style=dashed];
d35 -> d37  [color=darkseagreen4, key=1, label=string, style=dashed];
d40 -> d42  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_15 -> m0_18  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_15 -> m0_19  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_15 -> m0_20  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_18 -> m0_18  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m0_19 -> m0_21  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m0_20 -> m0_20  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_20 -> m0_23  [color=green, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m0_57 -> m0_61  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_14 -> m0_17  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=properties, style=dashed];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_32 -> m0_35  [color=green, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_33 -> m0_77  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_33 -> m0_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_36 -> m0_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label=body, style=dashed];
m0_77 -> m0_77  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_78 -> m0_86  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m0_78 -> m0_91  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m0_82 -> m0_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_88 -> m0_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_81 -> m0_98  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m0_81 -> m0_91  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m0_87 -> m0_101  [color=darkseagreen4, key=1, label=newConsumer, style=dashed];
m0_87 -> m0_89  [color=darkseagreen4, key=1, label=newConsumer, style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m0_103 -> m0_7  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_9  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_21  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_24  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_30  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_40  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_48  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_49  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_51  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_52  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_53  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_54  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_59  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_61  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_62  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_63  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_66  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_69  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_70  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_78  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_80  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_82  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_83  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_88  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_103 -> m0_89  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqJobQueue", style=dashed];
m0_104 -> m0_98  [color=darkseagreen4, key=1, label=consumer, style=dashed];
m0_105 -> m0_101  [color=darkseagreen4, key=1, label=newConsumer, style=dashed];
m1_193 -> m1_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_155 -> m1_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_161 -> m1_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_7 -> m1_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_53 -> m1_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_201 -> m1_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_75 -> m1_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_21 -> m1_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_22 -> m1_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_64 -> m1_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_65 -> m1_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_108 -> m1_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_109 -> m1_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_96 -> m1_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_178 -> m1_180  [color=green, key=1, label="lambda expression", style=dashed];
m1_133 -> m1_136  [color=green, key=1, label="lambda expression", style=dashed];
m1_134 -> m1_139  [color=green, key=1, label="lambda expression", style=dashed];
m1_170 -> m1_173  [color=green, key=1, label="lambda expression", style=dashed];
m1_86 -> m1_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_87 -> m1_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_13 -> m1_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_36 -> m1_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_57 -> m1_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_79 -> m1_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_100 -> m1_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_116 -> m1_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_126 -> m1_129  [color=green, key=1, label="lambda expression", style=dashed];
m1_140 -> m1_142  [color=green, key=1, label="lambda expression", style=dashed];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_44 -> m1_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_146 -> m1_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_122 -> m1_125  [color=green, key=1, label="lambda expression", style=dashed];
m1_184 -> m1_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_208 -> m1_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_21  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_108  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_109  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_133  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_134  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_150  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_169  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_170  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_177  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_178  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_200  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m1_208 -> m1_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m2_50 -> m2_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>", style=dashed];
m2_50 -> m2_54  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m2_51 -> m2_55  [color=green, key=1, label="lambda expression", style=dashed];
m2_51 -> m2_56  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_52 -> m2_58  [color=green, key=1, label="lambda expression", style=dashed];
m2_179 -> m2_191  [color=darkseagreen4, key=1, label=stats, style=dashed];
m2_182 -> m2_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_182 -> m2_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_182 -> m2_203  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m2_183 -> m2_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_7 -> m2_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_147 -> m2_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_206 -> m2_210  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m2_213 -> m2_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_213 -> m2_216  [color=darkseagreen4, key=1, label=keys, style=dashed];
m2_207 -> m2_210  [color=darkseagreen4, key=1, label=dates, style=dashed];
m2_207 -> m2_221  [color=darkseagreen4, key=1, label=dates, style=dashed];
m2_207 -> m2_223  [color=darkseagreen4, key=1, label=dates, style=dashed];
m2_208 -> m2_212  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_212 -> m2_212  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_215 -> m2_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_215 -> m2_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_215 -> m2_217  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m2_215 -> m2_218  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m2_216 -> m2_218  [color=darkseagreen4, key=1, label=key, style=dashed];
m2_219 -> m2_223  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_219 -> m2_225  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_220 -> m2_223  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_220 -> m2_224  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_224 -> m2_224  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_73 -> m2_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_153 -> m2_158  [color=darkseagreen4, key=1, label=multi, style=dashed];
m2_157 -> m2_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_157 -> m2_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_158 -> m2_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_86 -> m2_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_87 -> m2_89  [color=darkseagreen4, key=1, label=servers, style=dashed];
m2_105 -> m2_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_97 -> m2_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_59 -> m2_61  [color=green, key=1, label="lambda expression", style=dashed];
m2_88 -> m2_92  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_95 -> m2_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_77 -> m2_80  [color=green, key=1, label="lambda expression", style=dashed];
m2_82 -> m2_269  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_113 -> m2_115  [color=darkseagreen4, key=1, label=queues, style=dashed];
m2_44 -> m2_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_114 -> m2_116  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_114 -> m2_117  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_38 -> m2_46  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m2_125 -> m2_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_243 -> m2_246  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m2_243 -> m2_247  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m2_250 -> m2_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_250 -> m2_253  [color=darkseagreen4, key=1, label=keys, style=dashed];
m2_244 -> m2_246  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m2_245 -> m2_247  [color=darkseagreen4, key=1, label=dates, style=dashed];
m2_245 -> m2_260  [color=darkseagreen4, key=1, label=dates, style=dashed];
m2_249 -> m2_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_249 -> m2_258  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m2_252 -> m2_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_252 -> m2_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_252 -> m2_254  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m2_252 -> m2_255  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m2_253 -> m2_255  [color=darkseagreen4, key=1, label=key, style=dashed];
m2_256 -> m2_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_256 -> m2_262  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_257 -> m2_260  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_257 -> m2_261  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_261 -> m2_261  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_23 -> m2_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_116 -> m2_50  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_51  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_52  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_56  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_75  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_77  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_116 -> m2_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
m2_133 -> m2_135  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m2_134 -> m2_137  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_278 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_20  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_97  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_116  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_145  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_149  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_278 -> m2_176  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m2_279 -> m2_203  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m2_280 -> m2_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_281 -> m2_269  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_31 -> m3_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m3_31 -> m3_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m3_31 -> m3_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m3_31 -> m3_20  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m3_31 -> m3_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m3_31 -> m3_27  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m3_31 -> m3_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m4_8 -> m4_11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m4_8 -> m4_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m4_8 -> m4_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m4_8 -> m4_21  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_8 -> m4_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_8 -> m4_24  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m4_8 -> m4_25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m4_8 -> m4_26  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m4_8 -> m4_27  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m4_25 -> m4_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_16 -> m4_18  [color=darkseagreen4, key=1, label=processes, style=dashed];
m4_50 -> m4_57  [color=darkseagreen4, key=1, label=processes, style=dashed];
m4_50 -> m4_59  [color=darkseagreen4, key=1, label=processes, style=dashed];
m4_50 -> m4_60  [color=darkseagreen4, key=1, label=processes, style=dashed];
m4_50 -> m4_61  [color=darkseagreen4, key=1, label=processes, style=dashed];
m4_52 -> m4_60  [color=darkseagreen4, key=1, label=factory, style=dashed];
m4_53 -> m4_57  [color=darkseagreen4, key=1, label=performer, style=dashed];
m4_54 -> m4_57  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
m4_54 -> m4_59  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
m4_55 -> m4_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_58 -> m4_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_77 -> m4_17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m4_77 -> m4_46  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m4_77 -> m4_56  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m4_77 -> m4_57  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m4_77 -> m4_59  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m5_6 -> m5_15  [color=darkseagreen4, key=1, label=hash, style=dashed];
m5_6 -> m5_22  [color=darkseagreen4, key=1, label=hash, style=dashed];
m5_3 -> m5_24  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_3 -> m5_25  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_9 -> m5_24  [color=darkseagreen4, key=1, label=dto, style=dashed];
}
