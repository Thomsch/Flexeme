digraph  {
n41 [label="HangFire.SqlServer.SqlServerDistributedLock", span=""];
n0 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="44-44"];
n1 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="String.IsNullOrEmpty(resource)", span="46-46"];
n3 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="connection == null", span="47-47"];
n5 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="_resource = resource", span="49-49"];
n6 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="_connection = connection", span="50-50"];
n13 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="connection.Execute(\r\n                @''sp_getapplock'', \r\n                parameters, \r\n                commandType: CommandType.StoredProcedure)", span="59-62"];
n2 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="throw new ArgumentNullException(''resource'');", span="46-46"];
n18 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n4 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="throw new ArgumentNullException(''connection'');", span="47-47"];
n7 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="var parameters = new DynamicParameters()", span="52-52"];
n8 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="parameters.Add(''@Resource'', _resource)", span="53-53"];
n20 [cluster="DynamicParameters.cstr", label="Entry DynamicParameters.cstr", span=""];
n9 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="parameters.Add(''@LockMode'', LockMode)", span="54-54"];
n10 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="parameters.Add(''@LockOwner'', LockOwner)", span="55-55"];
n11 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="parameters.Add(''@LockTimeout'', LockTimeout.TotalMilliseconds)", span="56-56"];
n12 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="57-57"];
n14 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="var lockResult = parameters.Get<int>(''@Result'')", span="64-64"];
n21 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n22 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
n15 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="lockResult < 0", span="66-66"];
n23 [cluster="Unk.>", label="Entry Unk.>", span=""];
n16 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                    ''Could not place a lock on the resource '{0}': {1}.'',\r\n                    _resource,\r\n                    LockErrorMessages.ContainsKey(lockResult) \r\n                        ? LockErrorMessages[lockResult]\r\n                        : String.Format(''Server returned the '{0}' error.'', lockResult)));", span="68-74"];
n17 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="Exit HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="44-44"];
n19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n24 [cluster="HangFire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", label="Entry HangFire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="23-23"];
n25 [cluster="Unk.ContainsKey", label="Entry Unk.ContainsKey", span=""];
n26 [cluster="Unk.Format", label="Entry Unk.Format", span=""];
n27 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n28 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="Entry HangFire.SqlServer.SqlServerDistributedLock.Dispose()", span="78-78"];
n29 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label=_completed, span="80-80"];
n30 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="return;", span="80-80"];
n31 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="_completed = true", span="82-82"];
n32 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="var parameters = new DynamicParameters()", span="84-84"];
n33 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="parameters.Add(''@Resource'', _resource)", span="85-85"];
n34 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="parameters.Add(''@LockOwner'', LockOwner)", span="86-86"];
n35 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="87-87"];
n36 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="_connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="89-92"];
n37 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="var releaseResult = parameters.Get<int>(''@Result'')", span="94-94"];
n38 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="releaseResult < 0", span="96-96"];
n39 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'', \r\n                        _resource,\r\n                        releaseResult));", span="98-102"];
n40 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", label="Exit HangFire.SqlServer.SqlServerDistributedLock.Dispose()", span="78-78"];
m0_24 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="78-78"];
m0_25 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="CleanDatabaseAttribute.cs", label="return new RedisConnection(_pooledManager.GetClient());", span="80-80"];
m0_26 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="CleanDatabaseAttribute.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="78-78"];
m0_18 [cluster="RedisClientManagerConfig.cstr", file="CleanDatabaseAttribute.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m0_19 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="73-73"];
m0_20 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="CleanDatabaseAttribute.cs", label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="75-75"];
m0_21 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="CleanDatabaseAttribute.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="73-73"];
m0_23 [cluster="Unk.GetClient", file="CleanDatabaseAttribute.cs", label="Entry Unk.GetClient", span=""];
m0_28 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="83-83"];
m0_29 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="CleanDatabaseAttribute.cs", label="yield return new FetchedJobsWatcher(this);", span="85-85"];
m0_30 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="CleanDatabaseAttribute.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="83-83"];
m0_0 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7"];
m0_1 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="CleanDatabaseAttribute.cs", label="var response = context.Response", span="9-9"];
m0_2 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="CleanDatabaseAttribute.cs", label="response.StatusCode = (int) statusCode", span="11-11"];
m0_3 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="CleanDatabaseAttribute.cs", label="response.Write(response.Status)", span="12-12"];
m0_4 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="CleanDatabaseAttribute.cs", label="response.End()", span="14-14"];
m0_5 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="CleanDatabaseAttribute.cs", label="return null;", span="15-15"];
m0_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="48-48"];
m0_31 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
m0_17 [cluster="PooledRedisClientManager.cstr", file="CleanDatabaseAttribute.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m0_51 [cluster="string.Format(string, object, object)", file="CleanDatabaseAttribute.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_47 [cluster="Unk.InfoFormat", file="CleanDatabaseAttribute.cs", label="Entry Unk.InfoFormat", span=""];
m0_22 [cluster="RedisMonitoringApi.cstr", file="CleanDatabaseAttribute.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m0_48 [cluster="HangFire.Redis.RedisStorage.ToString()", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="102-102"];
m0_49 [cluster="HangFire.Redis.RedisStorage.ToString()", file="CleanDatabaseAttribute.cs", label="return String.Format(''redis://{0}/{1}'', HostAndPort, Db);", span="104-104"];
m0_50 [cluster="HangFire.Redis.RedisStorage.ToString()", file="CleanDatabaseAttribute.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="102-102"];
m0_8 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="throw new ArgumentNullException(''hostAndPort'');", span="50-50"];
m0_52 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m0_54 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="CleanDatabaseAttribute.cs", label="throw new ArgumentNullException(''key'');", span="109-109"];
m0_53 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="CleanDatabaseAttribute.cs", label="key == null", span="109-109"];
m0_55 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="CleanDatabaseAttribute.cs", label="return Prefix + key;", span="111-111"];
m0_56 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="CleanDatabaseAttribute.cs", label="Exit HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m0_14 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", color=green, community=0, file="CleanDatabaseAttribute.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ HostAndPort },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = Db,\r\n                    MaxWritePoolSize = Options.ConnectionPoolSize\r\n                })", prediction=0, span="57-64"];
m0_13 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="Options = options", span="55-55"];
m0_11 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="HostAndPort = hostAndPort", span="53-53"];
m0_12 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="Db = db", span="54-54"];
m0_10 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="throw new ArgumentNullException(''options'');", span="51-51"];
m0_9 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="options == null", span="51-51"];
m0_7 [cluster="Unk.Write", file="CleanDatabaseAttribute.cs", label="Entry Unk.Write", span=""];
m0_15 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="CleanDatabaseAttribute.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="48-48"];
m0_42 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="CleanDatabaseAttribute.cs", label="Entry HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", span="96-96"];
m0_44 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="CleanDatabaseAttribute.cs", label="logger.InfoFormat(''    Connection pool size: {0}.'', Options.ConnectionPoolSize)", span="99-99"];
m0_43 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="CleanDatabaseAttribute.cs", label="logger.Info(''Using the following options for Redis job storage:'')", span="98-98"];
m0_45 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="CleanDatabaseAttribute.cs", label="Exit HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", span="96-96"];
m0_27 [cluster="RedisConnection.cstr", file="CleanDatabaseAttribute.cs", label="Entry RedisConnection.cstr", span=""];
m0_46 [cluster="Unk.Info", file="CleanDatabaseAttribute.cs", label="Entry Unk.Info", span=""];
m0_57 [file="CleanDatabaseAttribute.cs", label="HangFire.Redis.RedisStorage", span=""];
m1_29 [cluster="System.Threading.Thread.Join()", file="CountersAggregator.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m1_18 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="_jobPayload = payload", span="75-75"];
m1_19 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="_jobIsReady.Set()", span="78-78"];
m1_20 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71"];
m1_47 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="CountersAggregator.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m1_74 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="CountersAggregator.cs", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
m1_6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="CountersAggregator.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m1_10 [cluster="System.Threading.Thread.Start()", file="CountersAggregator.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m1_11 [cluster="HangFire.Server.Worker.SendStop()", file="CountersAggregator.cs", label="Entry HangFire.Server.Worker.SendStop()", span="47-47"];
m1_12 [cluster="HangFire.Server.Worker.SendStop()", file="CountersAggregator.cs", label="_stopSent = true", span="49-49"];
m1_48 [cluster="string.Format(string, params object[])", file="CountersAggregator.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m1_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="CountersAggregator.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m1_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="CountersAggregator.cs", label="_manager = manager", span="34-34"];
m1_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="CountersAggregator.cs", label="_context = context", span="35-35"];
m1_30 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="CountersAggregator.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m1_9 [cluster="HangFire.Perform.Async(System.Type)", file="CountersAggregator.cs", label="Exit HangFire.Perform.Async(System.Type)", span="22-22"];
m1_7 [cluster="HangFire.Perform.Async(System.Type)", file="CountersAggregator.cs", label="Entry HangFire.Perform.Async(System.Type)", span="22-22"];
m1_15 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="CountersAggregator.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36"];
m1_21 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="CountersAggregator.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54"];
m1_44 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="CountersAggregator.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="80-80"];
m1_3 [cluster="HangFire.Perform.Async<TJob>(object)", file="CountersAggregator.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="16-16"];
m1_4 [cluster="HangFire.Perform.Async<TJob>(object)", file="CountersAggregator.cs", label="return Async(typeof(TJob), args);", span="19-19"];
m1_5 [cluster="HangFire.Perform.Async<TJob>(object)", file="CountersAggregator.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="16-16"];
m1_22 [cluster="HangFire.Server.Worker.Dispose()", file="CountersAggregator.cs", label="Entry HangFire.Server.Worker.Dispose()", span="81-81"];
m1_23 [cluster="HangFire.Server.Worker.Dispose()", file="CountersAggregator.cs", label="!_stopSent", span="83-83"];
m1_24 [cluster="HangFire.Server.Worker.Dispose()", color=green, community=0, file="CountersAggregator.cs", label="SendStop()", prediction=1, span="85-85"];
m1_14 [cluster="HangFire.Server.Worker.SendStop()", file="CountersAggregator.cs", label="Exit HangFire.Server.Worker.SendStop()", span="47-47"];
m1_8 [cluster="HangFire.Perform.Async(System.Type)", file="CountersAggregator.cs", label="return Async(jobType, null);", span="24-24"];
m1_32 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="Entry HangFire.Server.Worker.DoWork()", span="95-95"];
m1_34 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="_manager.NotifyReady(this)", span="101-101"];
m1_35 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="_jobIsReady.Wait(_cts.Token)", span="102-102"];
m1_36 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label=_jobLock, span="104-104"];
m1_37 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="PerformJob(_jobPayload)", span="106-106"];
m1_38 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="_jobIsReady.Reset()", span="107-107"];
m1_41 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="Crashed = true", span="116-116"];
m1_42 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="117-120"];
m1_33 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label=true, span="99-99"];
m1_40 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label=Exception, span="114-114"];
m1_39 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label=OperationCanceledException, span="111-111"];
m1_43 [cluster="HangFire.Server.Worker.DoWork()", file="CountersAggregator.cs", label="Exit HangFire.Server.Worker.DoWork()", span="95-95"];
m1_45 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m1_77 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="CountersAggregator.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m1_25 [cluster="HangFire.Server.Worker.Dispose()", file="CountersAggregator.cs", label="_thread.Join()", span="88-88"];
m1_26 [cluster="HangFire.Server.Worker.Dispose()", color=green, community=0, file="CountersAggregator.cs", label="_cts.Dispose()", prediction=1, span="90-90"];
m1_27 [cluster="HangFire.Server.Worker.Dispose()", file="CountersAggregator.cs", label="_jobIsReady.Dispose()", span="91-91"];
m1_72 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12"];
m1_78 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="CountersAggregator.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="83-83"];
m1_16 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71"];
m1_17 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label=_jobLock, span="73-73"];
m1_70 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="CountersAggregator.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
m1_69 [cluster="Unk.Warn", file="CountersAggregator.cs", label="Entry Unk.Warn", span=""];
m1_28 [cluster="HangFire.Server.Worker.Dispose()", file="CountersAggregator.cs", label="Exit HangFire.Server.Worker.Dispose()", span="81-81"];
m1_73 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="CountersAggregator.cs", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
m1_49 [cluster="Unk.Fatal", file="CountersAggregator.cs", label="Entry Unk.Fatal", span=""];
m1_76 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="CountersAggregator.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m1_13 [cluster="HangFire.Client.JobClient.JobClient()", file="CountersAggregator.cs", label="Entry HangFire.Client.JobClient.JobClient()", span="7-7"];
m1_71 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="CountersAggregator.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m1_46 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125"];
m1_51 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="129-131"];
m1_53 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="!JobState.Apply(\r\n                _redis,\r\n                new ProcessingState(payload.Id, ''Worker has started processing.'', _context.ServerName),\r\n                EnqueuedState.Name)", span="136-139"];
m1_57 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="154-155"];
m1_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="157-158"];
m1_59 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="_context.Performer.PerformJob(performContext)", span="160-160"];
m1_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="166-168"];
m1_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="JobState.Apply(\r\n                    _redis,\r\n                    new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                    ProcessingState.Name)", span="180-183"];
m1_65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                    ProcessingState.Name)", span="187-190"];
m1_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="JobFetcher.RemoveFromFetchedQueue(\r\n                _redis, payload.Id, payload.Queue)", span="198-199"];
m1_50 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="String.IsNullOrEmpty(payload.Type)", span="127-127"];
m1_52 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="return;", span="133-133"];
m1_54 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="return;", span="141-141"];
m1_55 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Exception exception = null", span="149-149"];
m1_56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="ServerJobDescriptor jobDescriptor = null", span="151-151"];
m1_60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label=Exception, span="162-162"];
m1_63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="exception == null", span="178-178"];
m1_61 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="exception = ex", span="164-164"];
m1_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="CountersAggregator.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125"];
m1_75 [cluster="Unk.Error", file="CountersAggregator.cs", label="Entry Unk.Error", span=""];
m1_31 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="CountersAggregator.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m1_79 [file="CountersAggregator.cs", label="HangFire.Server.Worker", span=""];
m2_19 [cluster="Unk.RegisterPathHandlerFactory", file="CountersAggregatorFacts.cs", label="Entry Unk.RegisterPathHandlerFactory", span=""];
m2_81 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="14-14"];
m2_31 [cluster="HangFire.Web.Pages.QueuesPage.QueuesPage()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.QueuesPage.QueuesPage()", span="35-35"];
m2_0 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="17-17"];
m2_1 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterDefaultPathHandlerFactory(() => new DashboardPage())", prediction=3, span="19-19"];
m2_2 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/job/(?<JobId>.+)'',\r\n                x => new JobDetailsPage(x.Groups[''JobId''].Value))", prediction=4, span="21-23"];
m2_3 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/queues'', x => new QueuesPage())", prediction=5, span="25-25"];
m2_4 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/queues/dequeued/(?<Queue>.+)'',\r\n                x => new DequeuedJobsPage(x.Groups[''Queue''].Value))", prediction=6, span="26-28"];
m2_5 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/queues/(?<Queue>.+)'',\r\n                x => new EnqueuedJobsPage(x.Groups[''Queue''].Value))", prediction=7, span="29-31"];
m2_6 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/processing'', x => new ProcessingJobsPage())", prediction=8, span="33-33"];
m2_7 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/scheduled'', x => new ScheduledJobsPage())", prediction=9, span="34-34"];
m2_8 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/schedule/enqueue/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => Command.EnqueueScheduled(x.Groups[''JobId''].Value)))", prediction=10, span="36-38"];
m2_9 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/servers'', x => new ServersPage())", prediction=11, span="40-40"];
m2_10 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/succeeded'', x => new SucceededJobs())", prediction=12, span="41-41"];
m2_11 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/failed'', x => new FailedJobsPage())", prediction=13, span="42-42"];
m2_12 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=green, community=0, file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/failed/retry/(?<JobId>.+)'', \r\n                x => new CommandHandler(() => Command.Retry(x.Groups[''JobId''].Value)))", prediction=14, span="44-46"];
m2_13 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/js/scripts.js'',  x => new JavaScriptHandler())", span="48-48"];
m2_14 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(''/css/styles.css'', x => new StyleSheetHandler())", span="49-49"];
m2_15 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/fonts/(?<File>.+)'',\r\n                x => new FontsHandler(x.Groups[''File''].Value))", span="51-53"];
m2_16 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="CountersAggregatorFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/stats'',\r\n                x => new JsonStats())", span="55-57"];
m2_17 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="CountersAggregatorFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="17-17"];
m2_27 [cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6"];
m2_63 [cluster="HangFire.Web.Pages.SucceededJobs.SucceededJobs()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.SucceededJobs.SucceededJobs()", span="25-25"];
m2_131 [cluster="string.EndsWith(string, System.StringComparison)", file="CountersAggregatorFacts.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m2_43 [cluster="HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", span="25-25"];
m2_55 [cluster="System.Func<T, TResult>.Invoke(T)", file="CountersAggregatorFacts.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_35 [cluster="HangFire.Web.Pages.DequeuedJobsPage.DequeuedJobsPage(string)", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.DequeuedJobsPage.DequeuedJobsPage(string)", span="4-4"];
m2_114 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.FindHandler(string)", span="92-92"];
m2_125 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="return pathHandlerFactory.Item2(match);", span="115-115"];
m2_123 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="var match = Regex.Match(\r\n                    resource,\r\n                    pattern, \r\n                    RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline)", span="108-111"];
m2_117 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label=PathHandlerFactories, span="99-99"];
m2_124 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="match.Success", span="113-113"];
m2_118 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="var pattern = pathHandlerFactory.Item1", span="101-101"];
m2_120 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="pattern = ''^'' + pattern", span="104-104"];
m2_121 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="!pattern.EndsWith(''$'', StringComparison.OrdinalIgnoreCase)", span="105-105"];
m2_122 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="pattern += ''$''", span="106-106"];
m2_115 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="resource.Length == 0 || resource.Equals(''/'', StringComparison.OrdinalIgnoreCase)", span="94-94"];
m2_126 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="return null;", span="119-119"];
m2_116 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="return _defaultHandlerFactory();", span="96-96"];
m2_119 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="!pattern.StartsWith(''^'', StringComparison.OrdinalIgnoreCase)", span="103-103"];
m2_127 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="CountersAggregatorFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.FindHandler(string)", span="92-92"];
m2_47 [cluster="HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", span="25-25"];
m2_85 [cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="6-6"];
m2_23 [cluster="HangFire.Web.Pages.DashboardPage.DashboardPage()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.DashboardPage.DashboardPage()", span="41-41"];
m2_129 [cluster="System.Func<TResult>.Invoke()", file="CountersAggregatorFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_51 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="10-10"];
m2_130 [cluster="string.StartsWith(string, System.StringComparison)", file="CountersAggregatorFacts.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m2_89 [cluster="HangFire.Web.JsonStats.JsonStats()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.JsonStats.JsonStats()", span="7-7"];
m2_132 [cluster="System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", file="CountersAggregatorFacts.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m2_67 [cluster="HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", span="30-30"];
m2_77 [cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="18-18"];
m2_86 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="57-57"];
m2_20 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="19-19"];
m2_24 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="23-23"];
m2_28 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="25-25"];
m2_32 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="28-28"];
m2_36 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="31-31"];
m2_40 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="33-33"];
m2_44 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="34-34"];
m2_48 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="38-38"];
m2_56 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="40-40"];
m2_60 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="41-41"];
m2_64 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="42-42"];
m2_68 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="46-46"];
m2_21 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new DashboardPage()", prediction=15, span="19-19"];
m2_22 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="19-19"];
m2_25 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new JobDetailsPage(x.Groups[''JobId''].Value)", prediction=16, span="23-23"];
m2_26 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="23-23"];
m2_29 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new QueuesPage()", prediction=17, span="25-25"];
m2_30 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="25-25"];
m2_33 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new DequeuedJobsPage(x.Groups[''Queue''].Value)", prediction=18, span="28-28"];
m2_34 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="28-28"];
m2_37 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new EnqueuedJobsPage(x.Groups[''Queue''].Value)", prediction=19, span="31-31"];
m2_38 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="31-31"];
m2_41 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new ProcessingJobsPage()", prediction=20, span="33-33"];
m2_42 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="33-33"];
m2_45 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new ScheduledJobsPage()", prediction=21, span="34-34"];
m2_46 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="34-34"];
m2_49 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new CommandHandler(() => Command.EnqueueScheduled(x.Groups[''JobId''].Value))", prediction=22, span="38-38"];
m2_50 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="38-38"];
m2_53 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="Command.EnqueueScheduled(x.Groups[''JobId''].Value)", prediction=23, span="38-38"];
m2_52 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="38-38"];
m2_54 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="38-38"];
m2_57 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new ServersPage()", prediction=24, span="40-40"];
m2_58 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="40-40"];
m2_61 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new SucceededJobs()", prediction=25, span="41-41"];
m2_62 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="41-41"];
m2_65 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new FailedJobsPage()", prediction=26, span="42-42"];
m2_66 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="42-42"];
m2_69 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="new CommandHandler(() => Command.Retry(x.Groups[''JobId''].Value))", prediction=27, span="46-46"];
m2_70 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="46-46"];
m2_72 [cluster="lambda expression", color=green, community=0, file="CountersAggregatorFacts.cs", label="Command.Retry(x.Groups[''JobId''].Value)", prediction=28, span="46-46"];
m2_71 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="46-46"];
m2_73 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="46-46"];
m2_74 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="48-48"];
m2_78 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="49-49"];
m2_82 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Entry lambda expression", span="53-53"];
m2_76 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="48-48"];
m2_75 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="new JavaScriptHandler()", span="48-48"];
m2_80 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="49-49"];
m2_79 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="new StyleSheetHandler()", span="49-49"];
m2_84 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="53-53"];
m2_83 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="new FontsHandler(x.Groups[''File''].Value)", span="53-53"];
m2_87 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="new JsonStats()", span="57-57"];
m2_88 [cluster="lambda expression", file="CountersAggregatorFacts.cs", label="Exit lambda expression", span="57-57"];
m2_128 [cluster="string.Equals(string, System.StringComparison)", file="CountersAggregatorFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m2_39 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m2_59 [cluster="HangFire.Web.Pages.ServersPage.ServersPage()", file="CountersAggregatorFacts.cs", label="Entry HangFire.Web.Pages.ServersPage.ServersPage()", span="35-35"];
m2_18 [cluster="Unk.RegisterDefaultPathHandlerFactory", file="CountersAggregatorFacts.cs", label="Entry Unk.RegisterDefaultPathHandlerFactory", span=""];
m2_142 [file="CountersAggregatorFacts.cs", label="System.Text.RegularExpressions.Match", span=""];
m2_143 [file="CountersAggregatorFacts.cs", label="System.Text.RegularExpressions.Match", span=""];
m3_5 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardMiddleware.cs", label="authorizationFilters == null", span="42-42"];
m3_6 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardMiddleware.cs", label="throw new ArgumentNullException(''authorizationFilters'');", span="42-42"];
m3_7 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardMiddleware.cs", label="_appPath = appPath", span="44-44"];
m3_8 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardMiddleware.cs", label="_storage = storage", span="45-45"];
m3_128 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="152-152"];
m3_126 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
m3_127 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="151-151"];
m3_129 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
m3_90 [cluster="Unk.EnqueueItemOnList", file="DashboardMiddleware.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m3_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DashboardMiddleware.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_156 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m3_157 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="175-176"];
m3_158 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m3_78 [cluster="Unk.SetRangeInHash", file="DashboardMiddleware.cs", label="Entry Unk.SetRangeInHash", span=""];
m3_111 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="141-141"];
m3_109 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
m3_110 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="140-140"];
m3_112 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
m3_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m3_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="DashboardMiddleware.cs", label="transaction == null", prediction=29, span="31-31"];
m3_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="DashboardMiddleware.cs", label="throw new ArgumentNullException(''transaction'');", prediction=30, span="31-31"];
m3_9 [cluster="Unk.Dispose", file="DashboardMiddleware.cs", label="Entry Unk.Dispose", span=""];
m3_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m3_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m3_11 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="DashboardMiddleware.cs", label="!_transaction.Commit()", span="43-43"];
m3_169 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
m3_170 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="188-189"];
m3_171 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
m3_55 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95"];
m3_53 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m3_54 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92"];
m3_56 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="97-97"];
m3_57 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="storedData.Add(''State'', state.Name)", span="98-98"];
m3_58 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="state.Reason != null", span="100-100"];
m3_59 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="storedData.Add(''Reason'', state.Reason)", span="102-102"];
m3_60 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="105-107"];
m3_61 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="AddJobState(jobId, state)", span="109-109"];
m3_62 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m3_70 [cluster="Unk.SetEntryInHash", file="DashboardMiddleware.cs", label="Entry Unk.SetEntryInHash", span=""];
m3_98 [cluster="Unk.AddItemToSet", file="DashboardMiddleware.cs", label="Entry Unk.AddItemToSet", span=""];
m3_30 [cluster="string.Format(string, object)", file="DashboardMiddleware.cs", label="Hangfire.Dashboard.DashboardMiddleware", span=""];
m3_74 [cluster="Unk.RemoveEntry", file="DashboardMiddleware.cs", label="Entry Unk.RemoveEntry", span=""];
m3_28 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66"];
m3_108 [cluster="Unk.IncrementValue", file="DashboardMiddleware.cs", label="Entry Unk.IncrementValue", span=""];
m3_38 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m3_39 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80"];
m3_40 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82"];
m3_41 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84"];
m3_42 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m3_31 [cluster="Unk.ExpireEntryIn", file="DashboardMiddleware.cs", label="Entry Unk.ExpireEntryIn", span=""];
m3_142 [cluster="Unk.AddItemToSortedSet", file="DashboardMiddleware.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m3_119 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
m3_120 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="146-146"];
m3_121 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
m3_136 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m3_137 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="157-158"];
m3_138 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m3_29 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="64-66"];
m3_149 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
m3_150 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="169-170"];
m3_151 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
m3_27 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="64-66"];
m3_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DashboardMiddleware.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m3_25 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m3_12 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="DashboardMiddleware.cs", label="int replayCount = 1", span="49-49"];
m3_13 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="Entry Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50"];
m3_15 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="dispatcher == null", span="54-54"];
m3_14 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="var dispatcher = _routes.FindDispatcher(context.Request.Path.Value)", span="52-52"];
m3_16 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="return Next.Invoke(context);", span="56-56"];
m3_17 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label=_authorizationFilters, span="59-59"];
m3_64 [cluster="HangFire.States.State.SerializeData()", file="DashboardMiddleware.cs", label="Entry HangFire.States.State.SerializeData()", span="27-27"];
m3_172 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="188-189"];
m3_33 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70"];
m3_36 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74"];
m3_32 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="68-70"];
m3_35 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="72-74"];
m3_34 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="68-70"];
m3_37 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="72-74"];
m3_44 [cluster="lambda expression", file="DashboardMiddleware.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80"];
m3_48 [cluster="lambda expression", file="DashboardMiddleware.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82"];
m3_51 [cluster="lambda expression", file="DashboardMiddleware.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84"];
m3_43 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="79-80"];
m3_47 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="81-82"];
m3_50 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="83-84"];
m3_45 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="79-80"];
m3_49 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="81-82"];
m3_52 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="83-84"];
m3_68 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92"];
m3_72 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95"];
m3_76 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="105-107"];
m3_67 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="89-92"];
m3_71 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="94-95"];
m3_75 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="105-107"];
m3_69 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="89-92"];
m3_73 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="94-95"];
m3_77 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="105-107"];
m3_87 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="119-121"];
m3_86 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="119-121"];
m3_88 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="119-121"];
m3_96 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="126-127"];
m3_100 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="129-130"];
m3_95 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="126-127"];
m3_99 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="129-130"];
m3_97 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="126-127"];
m3_101 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="129-130"];
m3_106 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="135-135"];
m3_105 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="135-135"];
m3_107 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="135-135"];
m3_114 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="140-140"];
m3_117 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="141-141"];
m3_113 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="140-140"];
m3_116 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="141-141"];
m3_115 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="140-140"];
m3_118 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="141-141"];
m3_123 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="146-146"];
m3_122 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="146-146"];
m3_124 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="146-146"];
m3_131 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="151-151"];
m3_134 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="152-152"];
m3_130 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="151-151"];
m3_133 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="152-152"];
m3_132 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="151-151"];
m3_135 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="152-152"];
m3_140 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="157-158"];
m3_139 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="157-158"];
m3_141 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="157-158"];
m3_147 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="163-164"];
m3_146 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="163-164"];
m3_148 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="163-164"];
m3_153 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="169-170"];
m3_152 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="169-170"];
m3_154 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="169-170"];
m3_160 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="175-176"];
m3_159 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="175-176"];
m3_161 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="175-176"];
m3_166 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="181-182"];
m3_165 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Entry lambda expression", span="181-182"];
m3_167 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="181-182"];
m3_173 [cluster="lambda expression", file="DashboardMiddleware.cs", label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="188-189"];
m3_174 [cluster="lambda expression", file="DashboardMiddleware.cs", label="Exit lambda expression", span="188-189"];
m3_85 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DashboardMiddleware.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m3_143 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
m3_144 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="163-164"];
m3_145 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
m3_102 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
m3_103 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="135-135"];
m3_104 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
m3_168 [cluster="Unk.RemoveItemFromList", file="DashboardMiddleware.cs", label="Entry Unk.RemoveItemFromList", span=""];
m3_24 [cluster="Unk.FindDispatcher", file="DashboardMiddleware.cs", label="Entry Unk.FindDispatcher", span=""];
m3_21 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="var dispatcherContext = new RequestDispatcherContext(\r\n                _appPath,\r\n                _storage,\r\n                context.Environment,\r\n                dispatcher.Item2)", span="68-72"];
m3_22 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="return dispatcher.Item1.Dispatch(dispatcherContext);", span="74-74"];
m3_23 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="Exit Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50"];
m3_91 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
m3_92 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="126-127"];
m3_93 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="129-130"];
m3_94 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
m3_89 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="DashboardMiddleware.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m3_46 [cluster="Unk.Persist", file="DashboardMiddleware.cs", label="Entry Unk.Persist", span=""];
m3_18 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="!filter.Authorize(context.Environment)", span="61-61"];
m3_66 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112"];
m3_79 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="114-114"];
m3_80 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="storedData.Add(''State'', state.Name)", span="115-115"];
m3_81 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="storedData.Add(''Reason'', state.Reason)", span="116-116"];
m3_83 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="119-121"];
m3_82 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="117-117"];
m3_84 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112"];
m3_26 [cluster="Unk.QueueCommand", file="DashboardMiddleware.cs", label="Entry Unk.QueueCommand", span=""];
m3_19 [cluster="Unk.Replay", file="DashboardMiddleware.cs", label="Entry Unk.Replay", span=""];
m3_20 [cluster="RedisException.cstr", file="DashboardMiddleware.cs", label="Entry RedisException.cstr", span=""];
m3_125 [cluster="Unk.DecrementValue", file="DashboardMiddleware.cs", label="Entry Unk.DecrementValue", span=""];
m3_175 [cluster="Unk.TrimList", file="DashboardMiddleware.cs", label="Entry Unk.TrimList", span=""];
m3_162 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="DashboardMiddleware.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
m3_163 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="DashboardMiddleware.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="181-182"];
m3_164 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="DashboardMiddleware.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
m3_155 [cluster="Unk.RemoveItemFromSortedSet", file="DashboardMiddleware.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m3_176 [file="DashboardMiddleware.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m3_177 [file="DashboardMiddleware.cs", label=string, span=""];
m3_178 [file="DashboardMiddleware.cs", label="System.TimeSpan", span=""];
m3_179 [file="DashboardMiddleware.cs", label=string, span=""];
m3_180 [file="DashboardMiddleware.cs", label=string, span=""];
m3_181 [file="DashboardMiddleware.cs", label="HangFire.States.State", span=""];
m3_182 [file="DashboardMiddleware.cs", label=storedData, span=""];
m3_183 [file="DashboardMiddleware.cs", label=string, span=""];
m3_184 [file="DashboardMiddleware.cs", label=storedData, span=""];
m3_185 [file="DashboardMiddleware.cs", label=string, span=""];
m3_186 [file="DashboardMiddleware.cs", label=string, span=""];
m3_187 [file="DashboardMiddleware.cs", label=string, span=""];
m3_188 [file="DashboardMiddleware.cs", label=string, span=""];
m3_189 [file="DashboardMiddleware.cs", label="System.TimeSpan", span=""];
m3_190 [file="DashboardMiddleware.cs", label=string, span=""];
m3_191 [file="DashboardMiddleware.cs", label=string, span=""];
m3_192 [file="DashboardMiddleware.cs", label="System.TimeSpan", span=""];
m3_193 [file="DashboardMiddleware.cs", label=string, span=""];
m3_194 [file="DashboardMiddleware.cs", label=string, span=""];
m3_195 [file="DashboardMiddleware.cs", label=string, span=""];
m3_196 [file="DashboardMiddleware.cs", label=string, span=""];
m3_197 [file="DashboardMiddleware.cs", label=double, span=""];
m3_198 [file="DashboardMiddleware.cs", label=string, span=""];
m3_199 [file="DashboardMiddleware.cs", label=string, span=""];
m3_200 [file="DashboardMiddleware.cs", label=string, span=""];
m3_201 [file="DashboardMiddleware.cs", label=string, span=""];
m3_202 [file="DashboardMiddleware.cs", label=string, span=""];
m3_203 [file="DashboardMiddleware.cs", label=string, span=""];
m3_204 [file="DashboardMiddleware.cs", label=string, span=""];
m3_205 [file="DashboardMiddleware.cs", label=int, span=""];
m3_206 [file="DashboardMiddleware.cs", label=int, span=""];
m4_4 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", file="DashboardOptions.cs", label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", span="22-22"];
m4_0 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m4_1 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="AppPath = ''/''", span="25-25"];
m4_2 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="AuthorizationFilters = new[] { new LocalRequestsOnlyAuthorizationFilter() }", span="26-26"];
m4_3 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="Exit Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m4_5 [file="DashboardOptions.cs", label="Hangfire.DashboardOptions", span=""];
m5_86 [cluster="HangFire.Web.RazorPage.Write(object)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m5_82 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
m5_95 [cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="74-74"];
m5_81 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="17-17"];
m5_91 [cluster="string.Format(string, object)", file="DashboardOwinExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_92 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m5_78 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m5_0 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m5_1 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\r\n'')", span="73-73"];
m5_2 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="JobDetailsDto job", span="88-88"];
m5_3 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="89-89"];
m5_4 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job = monitor.JobDetails(JobId.ToString())", span="91-91"];
m5_5 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="string title = null", span="94-94"];
m5_6 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job != null && job.Method != null", span="96-96"];
m5_7 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="title = HtmlHelper.DisplayMethod(job.Method)", span="98-98"];
m5_11 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job == null", span="114-114"];
m5_17 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job.CreatedAt.HasValue", span="149-149"];
m5_19 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="161-161"];
m5_21 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job.Method != null", span="179-179"];
m5_23 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(JobMethodCallRenderer.Render(job.Method, job.Arguments, job.OldFormatArguments))", span="190-190"];
m5_26 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job.Properties.Count > 0", span="210-210"];
m5_28 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job.Properties", span="221-221"];
m5_37 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job.History.Count > 0", span="277-277"];
m5_40 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="job.History", span="289-289"];
m5_8 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="title = title ?? ''Job''", span="101-101"];
m5_9 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Layout = new LayoutPage { Title = title, Subtitle = HtmlHelper.JobId(JobId.ToString(), false).ToString() }", span="103-103"];
m5_10 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\r\n'')", span="109-109"];
m5_12 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''    '')", span="120-120"];
m5_16 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''    <div class=\''job-snippet\''>\r\n        <div class=\''job-snippet-code\''>\r\n'')", span="144-144"];
m5_13 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral('' The job with id \''')", span="122-122"];
m5_14 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(JobId)", span="127-127"];
m5_15 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\' was expired or was not existed on the server.\r\n'')", span="132-132"];
m5_18 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\r\n                    C'' +\r\n''reated\r\n                    <span data-moment=\'''')", span="155-156"];
m5_20 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\''></span>\r\n                </div>\r\n'')", span="166-166"];
m5_22 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                <pre><code>'')", span="185-185"];
m5_25 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''            <div class=\''clearfix\''></div>\r\n        </div>\r\n\r\n'')", span="205-205"];
m5_24 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''</code></pre>\r\n'')", span="195-195"];
m5_27 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\r\n                <dl>\r\n'')", span="216-216"];
m5_36 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''    </div>\r\n'')", span="271-271"];
m5_29 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                        <dt>'')", span="227-227"];
m5_35 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                </dl>\r\n            </div>\r\n'')", span="261-261"];
m5_30 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(property.Key)", span="232-232"];
m5_31 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''</dt>\r\n'')", span="237-237"];
m5_33 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(property.Value)", span="246-246"];
m5_32 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                        <dd><pre>'')", span="241-241"];
m5_34 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''</pre></dd>\r\n'')", span="251-251"];
m5_38 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''        <h3>History</h3>\r\n'')", span="283-283"];
m5_39 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="var index = 0", span="288-288"];
m5_42 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="index == 0", span="295-295"];
m5_45 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(index == 0 ? ''job-history-current'' : null)", span="311-311"];
m5_76 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="index++", span="488-488"];
m5_41 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="var background = JobHistoryRenderer.BackgroundStateColors.ContainsKey(entry[''State''])\r\n               ? JobHistoryRenderer.BackgroundStateColors[entry[''State'']]\r\n               : null", span="291-293"];
m5_43 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="background = JobHistoryRenderer.ForegroundStateColors.ContainsKey(entry[''State''])\r\n                    ? JobHistoryRenderer.ForegroundStateColors[entry[''State'']]\r\n                    : null", span="297-299"];
m5_49 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(entry[''CreatedAt''])", span="331-331"];
m5_51 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(JobHelper.FromStringTimestamp(entry[''CreatedAt'']))", span="341-341"];
m5_53 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(entry[''State''])", span="352-352"];
m5_55 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="!String.IsNullOrEmpty(entry[''Reason''])", span="362-362"];
m5_57 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(entry[''Reason''])", span="373-373"];
m5_60 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="JobHistoryRenderer.Exists(entry[''State''])", span="393-393"];
m5_61 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="var rendered = JobHistoryRenderer.Render(entry[''State''], entry)", span="395-395"];
m5_67 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="entry.Where(x => x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason'')", span="432-432"];
m5_47 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="321-321"];
m5_44 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''            <div class=\''job-history '')", span="306-306"];
m5_46 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\''>\r\n                <div class=\''job-history-heading\'' style=\'''')", span="316-316"];
m5_48 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\''>\r\n                    <span class=\''pull-right\'' data-moment=\'''')", span="326-326"];
m5_50 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\''>'')", span="336-336"];
m5_52 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''</span>\r\n                    <h4 class=\''job-history-title\''>\r\n                    '' +\r\n''    '')", span="346-347"];
m5_54 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\r\n\r\n'')", span="357-357"];
m5_56 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                            <small>'')", span="368-368"];
m5_59 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                    </h4>\r\n                </div>\r\n\r\n'')", span="388-388"];
m5_58 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''</small>\r\n'')", span="378-378"];
m5_66 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                    <div class=\''job-history-body\''>\r\n                        <dl c'' +\r\n''lass=\''dl-horizontal\''>\r\n'')", span="426-427"];
m5_62 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="rendered != null", span="396-396"];
m5_64 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(rendered)", span="408-408"];
m5_63 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                        <div class=\''job-history-body\''>\r\n                         '' +\r\n''   '')", span="402-403"];
m5_75 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''            </div>\r\n'')", span="482-482"];
m5_65 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''\r\n                        </div>\r\n'')", span="413-413"];
m5_68 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                                <dt>'')", span="438-438"];
m5_74 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                        </dl>\r\n                    </div>\r\n'')", span="472-472"];
m5_69 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(item.Key)", span="443-443"];
m5_72 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Write(item.Value)", span="457-457"];
m5_70 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral('':</dt>\r\n'')", span="448-448"];
m5_71 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''                                <dd>'')", span="452-452"];
m5_73 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="WriteLiteral(''</dd>\r\n'')", span="462-462"];
m5_77 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="DashboardOwinExtensions.cs", label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m5_94 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="69-69"];
m5_96 [cluster="Unk.Where", file="DashboardOwinExtensions.cs", label="Entry Unk.Where", span=""];
m5_85 [cluster="Unk.ToString", file="DashboardOwinExtensions.cs", label="Entry Unk.ToString", span=""];
m5_90 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="DashboardOwinExtensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_97 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="432-432"];
m5_98 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason''", span="432-432"];
m5_99 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="432-432"];
m5_88 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", span="28-28"];
m5_87 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m5_80 [cluster="string.ToString()", file="DashboardOwinExtensions.cs", label="Entry string.ToString()", span="0-0"];
m5_89 [cluster="Unk.Write", file="DashboardOwinExtensions.cs", label="Entry Unk.Write", span=""];
m5_84 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m5_79 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="DashboardOwinExtensions.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m5_83 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m5_100 [file="DashboardOwinExtensions.cs", label="HangFire.Web.Pages.JobDetailsPage", span=""];
m7_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobHelperFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_0 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobHelperFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m7_1 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobHelperFacts.cs", label="ServerId = ''server''", span="14-14"];
m7_2 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobHelperFacts.cs", label="Storage = new Mock<JobStorage>()", span="15-15"];
m7_3 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobHelperFacts.cs", label="Properties = new Dictionary<string, object>()", span="16-16"];
m7_4 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobHelperFacts.cs", label="CancellationTokenSource = new CancellationTokenSource()", span="17-17"];
m7_5 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobHelperFacts.cs", label="_context = new Lazy<BackgroundProcessContext>(\r\n                () => new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token))", span="19-20"];
m7_6 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobHelperFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m7_10 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="JobHelperFacts.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m7_14 [cluster="BackgroundProcessContext.cstr", file="JobHelperFacts.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m7_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobHelperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m7_7 [cluster="Mock<JobStorage>.cstr", file="JobHelperFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m7_11 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="20-20"];
m7_12 [cluster="lambda expression", file="JobHelperFacts.cs", label="new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token)", span="20-20"];
m7_13 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="20-20"];
m7_15 [file="JobHelperFacts.cs", label="Hangfire.Core.Tests.BackgroundProcessContextMock", span=""];
m8_121 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m8_53 [cluster="Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="117-117"];
m8_54 [cluster="Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return null;", span="119-119"];
m8_55 [cluster="Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="117-117"];
m8_46 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", span="105-105"];
m8_47 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="return Renderers.ContainsKey(state);", span="107-107"];
m8_48 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", span="105-105"];
m8_78 [cluster="System.Text.StringBuilder.Append(string)", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m8_80 [cluster="System.TimeSpan.FromMilliseconds(double)", file="JobHistoryRenderer.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m8_83 [cluster="string.IsNullOrWhiteSpace(string)", file="JobHistoryRenderer.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m8_37 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m8_38 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="stateName == null || !ForegroundStateColors.ContainsKey(stateName)", span="85-85"];
m8_40 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="return ForegroundStateColors[stateName];", span="90-90"];
m8_39 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="return ''inherit'';", span="87-87"];
m8_41 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m8_115 [cluster="string.Format(string, object)", file="JobHistoryRenderer.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_137 [cluster="JsonSerializerSettings.cstr", file="JobHistoryRenderer.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m8_25 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", span="63-63"];
m8_26 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(stateName, color)", span="65-65"];
m8_27 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", span="63-63"];
m8_0 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", span="36-36"];
m8_1 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(SucceededState.StateName, SucceededRenderer)", span="38-38"];
m8_2 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(FailedState.StateName, FailedRenderer)", span="39-39"];
m8_3 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(ProcessingState.StateName, ProcessingRenderer)", span="40-40"];
m8_4 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(EnqueuedState.StateName, EnqueuedRenderer)", span="41-41"];
m8_5 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(ScheduledState.StateName, ScheduledRenderer)", span="42-42"];
m8_6 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(DeletedState.StateName, NullRenderer)", span="43-43"];
m8_7 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(AwaitingState.StateName, AwaitingRenderer)", span="44-44"];
m8_8 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(EnqueuedState.StateName, ''#F5F5F5'')", span="46-46"];
m8_9 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(SucceededState.StateName, ''#EDF7ED'')", span="47-47"];
m8_10 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(FailedState.StateName, ''#FAEBEA'')", span="48-48"];
m8_11 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(ProcessingState.StateName, ''#FCEFDC'')", span="49-49"];
m8_12 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(ScheduledState.StateName, ''#E0F3F8'')", span="50-50"];
m8_13 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(DeletedState.StateName, ''#ddd'')", span="51-51"];
m8_14 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(AwaitingState.StateName, ''#F5F5F5'')", span="52-52"];
m8_15 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(EnqueuedState.StateName, ''#999'')", span="54-54"];
m8_16 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(SucceededState.StateName, ''#5cb85c'')", span="55-55"];
m8_17 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(FailedState.StateName, ''#d9534f'')", span="56-56"];
m8_18 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(ProcessingState.StateName, ''#f0ad4e'')", span="57-57"];
m8_19 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(ScheduledState.StateName, ''#5bc0de'')", span="58-58"];
m8_20 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(DeletedState.StateName, ''#777'')", span="59-59"];
m8_21 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(AwaitingState.StateName, ''#999'')", span="60-60"];
m8_22 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", span="36-36"];
m8_138 [cluster="Unk.>", file="JobHistoryRenderer.cs", label="Entry Unk.>", span=""];
m8_77 [cluster="System.Text.StringBuilder.StringBuilder()", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m8_91 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="240-240"];
m8_111 [cluster="string.ToUpperInvariant()", file="JobHistoryRenderer.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m8_84 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="JobHistoryRenderer.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m8_79 [cluster="int.Parse(string)", file="JobHistoryRenderer.cs", label="Entry int.Parse(string)", span="0-0"];
m8_86 [cluster="System.Text.StringBuilder.ToString()", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_140 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="391-391"];
m8_82 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m8_93 [cluster="string.Format(string, object, object, object)", file="JobHistoryRenderer.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m8_81 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="162-162"];
m8_123 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="223-223"];
m8_124 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="225-225"];
m8_126 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ParentId'')", span="229-229"];
m8_127 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dt>Parent</dt><dd>{0}</dd>'',\r\n                    helper.JobIdLink(stateData[''ParentId'']))", span="231-233"];
m8_128 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''NextState'')", span="236-236"];
m8_129 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var nextState = JsonConvert.DeserializeObject<IState>(\r\n                    stateData[''NextState''],\r\n                    new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="238-240"];
m8_130 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dt>Next State</dt><dd>{0}</dd>'',\r\n                    helper.StateLabel(nextState.Name))", span="242-244"];
m8_131 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''Options'')", span="247-247"];
m8_132 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dt>Options</dt><dd><code>{0}</code></dd>'',\r\n                    helper.HtmlEncode(stateData[''Options'']))", span="249-251"];
m8_125 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="227-227"];
m8_133 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="254-254"];
m8_134 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(builder.ToString());", span="256-256"];
m8_135 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="223-223"];
m8_120 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m8_139 [cluster="Unk.StateLabel", file="JobHistoryRenderer.cs", label="Entry Unk.StateLabel", span=""];
m8_92 [cluster="Hangfire.Dashboard.NonEscapedString.ToString()", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27"];
m8_33 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_116 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m8_117 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var enqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt''])", span="215-215"];
m8_118 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(String.Format(\r\n                ''<dl class=\''dl-horizontal\''><dt>Enqueue at:</dt><dd data-moment=\''{0}\''>{1}</dd></dl>'',\r\n                JobHelper.ToTimestamp(enqueueAt),\r\n                enqueueAt));", span="217-220"];
m8_119 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m8_85 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m8_56 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="122-122"];
m8_57 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="124-124"];
m8_60 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''Latency'')", span="129-129"];
m8_62 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Latency:</dt><dd>{0}</dd>'', html.ToHumanDuration(latency, false))", span="132-132"];
m8_64 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''PerformanceDuration'')", span="137-137"];
m8_65 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var duration = TimeSpan.FromMilliseconds(int.Parse(stateData[''PerformanceDuration'']))", span="139-139"];
m8_66 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Duration:</dt><dd>{0}</dd>'', html.ToHumanDuration(duration, false))", span="140-140"];
m8_68 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''Result'') && !String.IsNullOrWhiteSpace(stateData[''Result''])", span="146-146"];
m8_69 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var result = stateData[''Result'']", span="148-148"];
m8_58 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="125-125"];
m8_70 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Result:</dt><dd>{0}</dd>'', System.Net.WebUtility.HtmlEncode(result))", span="149-149"];
m8_72 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="154-154"];
m8_75 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(builder.ToString());", span="158-158"];
m8_59 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var itemsAdded = false", span="127-127"];
m8_73 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="!itemsAdded", span="156-156"];
m8_63 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="134-134"];
m8_67 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="142-142"];
m8_71 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="151-151"];
m8_74 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return null;", span="156-156"];
m8_76 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="122-122"];
m8_34 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", span="78-78"];
m8_35 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(stateName, color)", span="80-80"];
m8_36 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", span="78-78"];
m8_136 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="139-139"];
m8_94 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="171-171"];
m8_95 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="173-173"];
m8_98 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ServerId'')", span="178-178"];
m8_99 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId = stateData[''ServerId'']", span="180-180"];
m8_100 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ServerName'')", span="182-182"];
m8_101 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId = stateData[''ServerName'']", span="184-184"];
m8_105 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''WorkerNumber'')", span="195-195"];
m8_107 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dd>#{0}</dd>'', stateData[''WorkerNumber''])", span="198-198"];
m8_96 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="174-174"];
m8_103 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dt>Server:</dt>'')", span="189-189"];
m8_104 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dd><span class=\''label label-default\''>{0}</span></dd>'',\r\n                    serverId.ToUpperInvariant())", span="190-192"];
m8_106 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dt>Worker:</dt>'')", span="197-197"];
m8_108 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="201-201"];
m8_109 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(builder.ToString());", span="203-203"];
m8_97 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="string serverId = null", span="176-176"];
m8_102 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId != null", span="187-187"];
m8_110 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="171-171"];
m8_49 [cluster="Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", span="110-110"];
m8_50 [cluster="Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return Renderers[state](helper, properties);", span="114-114"];
m8_51 [cluster="Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", span="110-110"];
m8_112 [cluster="Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="206-206"];
m8_113 [cluster="Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(String.Format(\r\n                ''<dl class=\''dl-horizontal\''><dt>Queue:</dt><dd><span class=\''label label-queue label-primary\''>{0}</span></dd></dl>'',\r\n                stateData[''Queue'']));", span="208-210"];
m8_114 [cluster="Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="206-206"];
m8_24 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_52 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="JobHistoryRenderer.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m8_28 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", span="68-68"];
m8_29 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="stateName == null || !BackgroundStateColors.ContainsKey(stateName)", span="70-70"];
m8_31 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="return BackgroundStateColors[stateName];", span="75-75"];
m8_30 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="return ''inherit'';", span="72-72"];
m8_32 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", span="68-68"];
m8_23 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", span="93-93"];
m8_42 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="!Renderers.ContainsKey(state)", span="95-95"];
m8_43 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Renderers.Add(state, renderer)", span="97-97"];
m8_44 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Renderers[state] = renderer", span="101-101"];
m8_45 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", span="93-93"];
m8_87 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="161-161"];
m8_88 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var stackTrace = html.StackTrace(stateData[''ExceptionDetails'']).ToString()", span="163-163"];
m8_89 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(String.Format(\r\n                ''<h4 class=\''exception-type\''>{0}</h4><p>{1}</p>{2}'',\r\n                stateData[''ExceptionType''],\r\n                stateData[''ExceptionMessage''],\r\n                stackTrace != null ? ''<pre class=\''stack-trace\''>'' + stackTrace + ''</pre>'' : null));", span="164-168"];
m8_90 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="161-161"];
m9_18 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioTearDown()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ScenarioTearDown()", span="57-57"];
m9_19 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioTearDown()", file="JobMethodCallRenderer.cs", label="testRunner.OnScenarioEnd()", span="59-59"];
m9_20 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioTearDown()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ScenarioTearDown()", span="57-57"];
m9_25 [cluster="Unk.OnScenarioStart", file="JobMethodCallRenderer.cs", label="Entry Unk.OnScenarioStart", span=""];
m9_29 [cluster="Unk.CollectScenarioErrors", file="JobMethodCallRenderer.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m9_26 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioCleanup()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ScenarioCleanup()", span="67-67"];
m9_27 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioCleanup()", file="JobMethodCallRenderer.cs", label="testRunner.CollectScenarioErrors()", span="69-69"];
m9_28 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioCleanup()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ScenarioCleanup()", span="67-67"];
m9_68 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", span="153-153"];
m9_69 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should remove the long-running server with no heartbeats'', ((string[])(null)))", span="155-155"];
m9_70 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="this.ScenarioSetup(scenarioInfo)", span="157-157"];
m9_71 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="this.FeatureBackground()", span="159-159"];
m9_72 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.Given(''a server that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="161-161"];
m9_73 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.And(''there are no any heartbeats'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="163-163"];
m9_74 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="165-165"];
m9_75 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.Then(''the server should be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="167-167"];
m9_76 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="this.ScenarioCleanup()", span="169-169"];
m9_77 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", span="153-153"];
m9_21 [cluster="Unk.OnScenarioEnd", file="JobMethodCallRenderer.cs", label="Entry Unk.OnScenarioEnd", span=""];
m9_88 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", span="199-199"];
m9_89 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should remove only those servers that were timed out'', ((string[])(null)))", span="201-201"];
m9_90 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="this.ScenarioSetup(scenarioInfo)", span="203-203"];
m9_91 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="this.FeatureBackground()", span="205-205"];
m9_92 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.Given(''a server \'Active\' that was started a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="207-207"];
m9_93 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.And(''a server \'TimedOut\' that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="209-209"];
m9_94 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="211-211"];
m9_95 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.Then(''the server \'TimedOut\' should be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="213-213"];
m9_96 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.But(''the server \'Active\' should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="215-215"];
m9_97 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="this.ScenarioCleanup()", span="217-217"];
m9_98 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", span="199-199"];
m9_45 [cluster="Unk.And", file="JobMethodCallRenderer.cs", label="Entry Unk.And", span=""];
m9_99 [cluster="Unk.But", file="JobMethodCallRenderer.cs", label="Entry Unk.But", span=""];
m9_48 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", span="107-107"];
m9_49 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should remove the server when its last heartbeat timed out'', ((string[])(null)))", span="109-109"];
m9_50 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="this.ScenarioSetup(scenarioInfo)", span="111-111"];
m9_51 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="this.FeatureBackground()", span="113-113"];
m9_52 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.Given(''a server that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="115-115"];
m9_53 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.And(''its last heartbeat was a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="117-117"];
m9_54 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="119-119"];
m9_55 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="testRunner.Then(''the server should be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="121-121"];
m9_56 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="this.ScenarioCleanup()", span="123-123"];
m9_57 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", span="107-107"];
m9_5 [cluster="Unk.GetTestRunner", file="JobMethodCallRenderer.cs", label="Entry Unk.GetTestRunner", span=""];
m9_78 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", span="176-176"];
m9_79 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should not remove the recently started server with timed out heartbeat'', ((string[])(null)))", span="178-178"];
m9_80 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="this.ScenarioSetup(scenarioInfo)", span="180-180"];
m9_81 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="this.FeatureBackground()", span="182-182"];
m9_82 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="testRunner.Given(''a server that was started a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="184-184"];
m9_83 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="testRunner.And(''its last heartbeat was a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="186-186"];
m9_84 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="188-188"];
m9_85 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="testRunner.Then(''the server should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="190-190"];
m9_86 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="this.ScenarioCleanup()", span="192-192"];
m9_87 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", span="176-176"];
m9_13 [cluster="Unk.OnFeatureEnd", file="JobMethodCallRenderer.cs", label="Entry Unk.OnFeatureEnd", span=""];
m9_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobMethodCallRenderer.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m9_58 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", span="130-130"];
m9_59 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should not remove the recently started server with no heartbeats'', ((string[])(null)))", span="132-132"];
m9_60 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="this.ScenarioSetup(scenarioInfo)", span="134-134"];
m9_61 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="this.FeatureBackground()", span="136-136"];
m9_62 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.Given(''a server that was started a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="138-138"];
m9_63 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.And(''there are no any heartbeats'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="140-140"];
m9_64 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="142-142"];
m9_65 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="testRunner.Then(''the server should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="144-144"];
m9_66 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="this.ScenarioCleanup()", span="146-146"];
m9_67 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", span="130-130"];
m9_46 [cluster="Unk.When", file="JobMethodCallRenderer.cs", label="Entry Unk.When", span=""];
m9_34 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", span="84-84"];
m9_35 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should not remove the active server'', ((string[])(null)))", span="86-86"];
m9_36 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="this.ScenarioSetup(scenarioInfo)", span="88-88"];
m9_37 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="this.FeatureBackground()", span="90-90"];
m9_38 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="testRunner.Given(''a server that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92"];
m9_39 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="testRunner.And(''its last heartbeat was a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="94-94"];
m9_40 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="96-96"];
m9_41 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="testRunner.Then(''the server should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="98-98"];
m9_42 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="this.ScenarioCleanup()", span="100-100"];
m9_43 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", span="84-84"];
m9_22 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m9_23 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethodCallRenderer.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
m9_24 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m9_14 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", span="47-47"];
m9_15 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", file="JobMethodCallRenderer.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server watchdog''))", span="49-50"];
m9_16 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", file="JobMethodCallRenderer.cs", label="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(null)", span="52-52"];
m9_17 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.TestInitialize()", span="47-47"];
m9_30 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureBackground()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.FeatureBackground()", span="72-72"];
m9_31 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureBackground()", file="JobMethodCallRenderer.cs", label="testRunner.Given(''a server watchdog'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76"];
m9_32 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureBackground()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.FeatureBackground()", span="72-72"];
m9_0 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m9_1 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m9_2 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server watchdog'', ''\r\n  As an Administrator, I would like if the crashed servers \r\n  are automaticall'' +\r\n                    ''y removed.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
m9_3 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs", label="testRunner.OnFeatureStart(featureInfo)", span="36-36"];
m9_4 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m9_9 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", span="40-40"];
m9_10 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", file="JobMethodCallRenderer.cs", label="testRunner.OnFeatureEnd()", span="42-42"];
m9_11 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", file="JobMethodCallRenderer.cs", label="testRunner = null", span="43-43"];
m9_12 [cluster="HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.Server.ServerWatchdogFeature.FeatureTearDown()", span="40-40"];
m9_44 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobMethodCallRenderer.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m9_47 [cluster="Unk.Then", file="JobMethodCallRenderer.cs", label="Entry Unk.Then", span=""];
m9_33 [cluster="Unk.Given", file="JobMethodCallRenderer.cs", label="Entry Unk.Given", span=""];
m9_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobMethodCallRenderer.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m9_8 [cluster="Unk.OnFeatureStart", file="JobMethodCallRenderer.cs", label="Entry Unk.OnFeatureStart", span=""];
m9_100 [file="JobMethodCallRenderer.cs", label="HangFire.Tests.Server.ServerWatchdogFeature", span=""];
m10_42 [cluster="string.Format(string, object, object, object)", file="LayoutPage.generated.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m10_36 [cluster="Hangfire.Dashboard.UrlHelper.Home()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.Home()", span="38-38"];
m10_39 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119"];
m10_33 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m10_37 [cluster="Hangfire.Dashboard.Pages.Navigation.Navigation()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.Navigation.Navigation()", span="25-25"];
m10_0 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.Execute()", span="40-40"];
m10_1 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", span="44-44"];
m10_2 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''<!DOCTYPE html>\r\n<html lang=\''en\''>\r\n<head>\r\n    <title>'')", span="50-50"];
m10_3 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Title)", span="55-55"];
m10_4 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral('' - Hangfire</title>\r\n    <meta http-equiv=\''X-UA-Compatible\'' content=\''IE=edge\''>\r\n '' +\r\n''   <meta charset=\''utf-8\'' />\r\n    <meta name=\''viewport\'' content=\''width=device-wid'' +\r\n''th, initial-scale=1.0\''>\r\n    <link rel=\''stylesheet\'' href=\'''')", span="60-62"];
m10_5 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.To(''/css''))", span="67-67"];
m10_6 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="WriteLiteral(@'''''' />\r\n</head>\r\n    <body>\r\n        <!-- Wrap all page content here -->\r\n        <div id=''''wrap''''>\r\n\r\n            <!-- Fixed navbar -->\r\n            <div class=''''navbar navbar-default navbar-fixed-top''''>\r\n                <div class=''''container''''>\r\n                    <div class=''''navbar-header''''>\r\n                        <button type=''''button'''' class=''''navbar-toggle'''' data-toggle=''''collapse'''' data-target=''''.navbar-collapse''''>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                        </button>\r\n                        <a class=''''navbar-brand'''' href='''''')", prediction=31, span="72-87"];
m10_7 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.Home())", span="92-92"];
m10_8 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>Hangfire Dashboard</a>\r\n                    </div>\r\n                    <div cl'' +\r\n''ass=\''collapse navbar-collapse\''>\r\n                        '')", span="97-98"];
m10_9 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Html.RenderPartial(new Navigation()))", span="103-103"];
m10_10 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", prediction=31, span="108-108"];
m10_11 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="@AppPath != null", prediction=31, span="113-113"];
m10_13 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="Write(AppPath)", prediction=31, span="124-124"];
m10_14 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="WriteLiteral(@''''''>\r\n                                        <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                        Back to site\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n'')", prediction=31, span="129-135"];
m10_16 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(RenderBody())", span="153-153"];
m10_17 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="WriteLiteral(@''\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://hangfire.io/'''' target=''''_blank''''>Hangfire\r\n'')", prediction=31, span="158-167"];
m10_18 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="var version = GetType().Assembly.GetName().Version", span="173-173"];
m10_19 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            '')", span="179-179"];
m10_20 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(String.Format(''{0}.{1}.{2}'', version.Major, version.Minor, version.Build))", span="184-184"];
m10_21 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>'')", span="189-190"];
m10_22 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Storage)", span="195-195"];
m10_23 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</li>\r\n                    <li>Time: '')", span="200-200"];
m10_24 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(DateTime.UtcNow)", span="205-205"];
m10_25 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="WriteLiteral('' GMT</li>\r\n                    <li>Generated: '')", prediction=31, span="210-210"];
m10_26 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(GenerationTime.Elapsed.TotalMilliseconds.ToString(''N''))", span="215-215"];
m10_27 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="WriteLiteral(''ms</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n   '' +\r\n''     <script>\r\n            (function (hangFire) {\r\n                hangFire.conf'' +\r\n''ig = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: \''')", prediction=38, span="220-222"];
m10_28 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.To(''/stats''))", span="227-227"];
m10_29 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'\r\n                };\r\n            })(window.Hangfire = window.Hangfire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="232-233"];
m10_30 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.To(''/js''))", span="238-238"];
m10_31 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="243-243"];
m10_32 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.LayoutPage.Execute()", span="40-40"];
m10_41 [cluster="System.Reflection.Assembly.GetName()", file="LayoutPage.generated.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m10_40 [cluster="object.GetType()", file="LayoutPage.generated.cs", label="Entry object.GetType()", span="0-0"];
m10_38 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="82-82"];
m10_34 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m10_43 [cluster="double.ToString(string)", file="LayoutPage.generated.cs", label="Entry double.ToString(string)", span="0-0"];
m10_35 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m10_44 [file="LayoutPage.generated.cs", label="Hangfire.Dashboard.Pages.LayoutPage", span=""];
m11_0 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="Entry Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25"];
m11_1 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="jobStorage == null", span="31-31"];
m11_3 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="owinEnvironment == null", span="32-32"];
m11_5 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="uriMatch == null", span="33-33"];
m11_7 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="AppPath = appPath", span="35-35"];
m11_8 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="JobStorage = jobStorage", span="36-36"];
m11_9 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="OwinEnvironment = owinEnvironment", span="37-37"];
m11_10 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="UriMatch = uriMatch", span="38-38"];
m11_2 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="throw new ArgumentNullException(''jobStorage'');", span="31-31"];
m11_4 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="throw new ArgumentNullException(''owinEnvironment'');", span="32-32"];
m11_6 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="throw new ArgumentNullException(''uriMatch'');", span="33-33"];
m11_11 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="Exit Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25"];
m11_13 [file="RequestDispatcherContext.cs", label="Hangfire.Dashboard.RequestDispatcherContext", span=""];
m13_123 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m13_124 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="key == null", span="257-257"];
m13_126 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="toScore < fromScore", span="258-258"];
m13_128 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="260-263"];
m13_125 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m13_127 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="258-258"];
m13_129 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m13_219 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416"];
m13_220 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="key == null", span="418-418"];
m13_223 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="424-424"];
m13_221 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="418-418"];
m13_222 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.Hash\r\nwhere [Key] = @key''", span="420-422"];
m13_224 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="!result.HasValue", span="425-425"];
m13_226 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="return result.Value - DateTime.UtcNow;", span="427-427"];
m13_225 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="return TimeSpan.FromSeconds(-1);", span="425-425"];
m13_227 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416"];
m13_88 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m13_157 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301"];
m13_158 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="serverId == null", span="303-303"];
m13_160 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="context == null", span="304-304"];
m13_162 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="306-311"];
m13_159 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="303-303"];
m13_161 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''context'');", span="304-304"];
m13_164 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301"];
m13_27 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84"];
m13_28 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="queues == null || queues.Length == 0", span="86-86"];
m13_30 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var providers = queues\r\n                .Select(queue => _queueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="88-91"];
m13_32 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="95-97"];
m13_34 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="return persistentQueue.Dequeue(queues, cancellationToken);", span="101-101"];
m13_29 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''queues'');", span="86-86"];
m13_31 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="providers.Length != 1", span="93-93"];
m13_33 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var persistentQueue = providers[0].GetJobQueue(_connection)", span="100-100"];
m13_35 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84"];
m13_46 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m13_150 [cluster="Unk.ToDictionary", file="SqlServerConnection.cs", label="Entry Unk.ToDictionary", span=""];
m13_13 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63"];
m13_14 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label=OwnsConnection, span="65-65"];
m13_15 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_connection.Dispose()", span="67-67"];
m13_16 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63"];
m13_171 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331"];
m13_172 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="serverId == null", span="333-333"];
m13_174 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="335-337"];
m13_173 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="333-333"];
m13_175 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331"];
m13_190 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361"];
m13_191 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="key == null", span="363-363"];
m13_194 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="372-374"];
m13_192 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="363-363"];
m13_195 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361"];
m13_242 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453"];
m13_243 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="key == null", span="455-455"];
m13_246 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="461-461"];
m13_244 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="455-455"];
m13_245 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.List\r\nwhere [Key] = @key''", span="457-459"];
m13_247 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="!result.HasValue", span="462-462"];
m13_249 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="return result.Value - DateTime.UtcNow;", span="464-464"];
m13_248 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="return TimeSpan.FromSeconds(-1);", span="462-462"];
m13_250 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453"];
m13_21 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39"];
m13_101 [cluster="Hangfire.Storage.StateData.StateData()", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m13_165 [cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m13_213 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405"];
m13_214 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="key == null", span="407-407"];
m13_217 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="return _connection.Query<long>(query, new { key = key }).Single();", span="413-413"];
m13_215 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="407-407"];
m13_216 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="string query = @''\r\nselect count([Id]) from HangFire.Hash\r\nwhere [Key] = @key''", span="409-411"];
m13_218 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405"];
m13_26 [cluster="string.Format(string, object)", file="SqlServerConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_257 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483"];
m13_258 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="key == null", span="485-485"];
m13_261 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(query, new { key = key }).ToList();", span="492-492"];
m13_259 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="485-485"];
m13_262 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483"];
m13_2 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", span="44-44"];
m13_3 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="connection == null", span="50-50"];
m13_5 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="queueProviders == null", span="51-51"];
m13_7 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="_connection = connection", span="53-53"];
m13_8 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="_isolationLevel = isolationLevel", span="54-54"];
m13_9 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="_queueProviders = queueProviders", span="55-55"];
m13_10 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="OwnsConnection = ownsConnection", span="57-57"];
m13_4 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''connection'');", span="50-50"];
m13_6 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''queueProviders'');", span="51-51"];
m13_11 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", span="44-44"];
m13_71 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154"];
m13_72 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="id == null", span="156-156"];
m13_75 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="161-162"];
m13_73 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="156-156"];
m13_74 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where Id = @id''", span="158-159"];
m13_76 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="jobData == null", span="164-164"];
m13_78 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="167-167"];
m13_79 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="invocationData.Arguments = jobData.Arguments", span="168-168"];
m13_85 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                CreatedAt = jobData.CreatedAt,\r\n                LoadException = loadException\r\n            };", span="182-188"];
m13_77 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return null;", span="164-164"];
m13_82 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="job = invocationData.Deserialize()", span="175-175"];
m13_80 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Job job = null", span="170-170"];
m13_81 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="JobLoadException loadException = null", span="171-171"];
m13_83 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label=JobLoadException, span="177-177"];
m13_84 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="loadException = ex", span="179-179"];
m13_86 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154"];
m13_144 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289"];
m13_145 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="key == null", span="291-291"];
m13_147 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="var result = _connection.Query<SqlHash>(\r\n                ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                new { key })\r\n                .ToDictionary(x => x.Field, x => x.Value)", span="293-296"];
m13_146 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="291-291"];
m13_148 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="return result.Count != 0 ? result : null;", span="298-298"];
m13_149 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289"];
m13_22 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76"];
m13_23 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout,\r\n                _connection);", span="78-81"];
m13_24 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76"];
m13_67 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m13_183 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m13_102 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219"];
m13_103 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="id == null", span="221-221"];
m13_105 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="name == null", span="222-222"];
m13_104 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="221-221"];
m13_106 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="222-222"];
m13_108 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219"];
m13_130 [cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_0 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m13_1 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m13_40 [cluster="string.Join(string, params string[])", file="SqlServerConnection.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m13_206 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnection.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m13_64 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m13_142 [cluster="TransactionScope.cstr", file="SqlServerConnection.cs", label="Entry TransactionScope.cstr", span=""];
m13_197 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377"];
m13_198 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="key == null", span="379-379"];
m13_201 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="385-385"];
m13_199 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="379-379"];
m13_200 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.[Set]\r\nwhere [Key] = @key''", span="381-383"];
m13_202 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="!result.HasValue", span="386-386"];
m13_204 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="return result.Value - DateTime.UtcNow;", span="388-388"];
m13_203 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="return TimeSpan.FromSeconds(-1);", span="386-386"];
m13_205 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377"];
m13_38 [cluster="Unk.ToArray", file="SqlServerConnection.cs", label="Entry Unk.ToArray", span=""];
m13_207 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391"];
m13_208 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="key == null", span="393-393"];
m13_211 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="return _connection.Query<long?>(query, new { key = key }).Single() ?? 0;", span="402-402"];
m13_209 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="393-393"];
m13_210 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="string query = @''\r\nselect sum(s.[Value]) from (select sum([Value]) as [Value] from HangFire.Counter\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from HangFire.AggregatedCounter\r\nwhere [Key] = @key) as s''", span="395-400"];
m13_212 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391"];
m13_39 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerConnection.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m13_25 [cluster="SqlServerDistributedLock.cstr", file="SqlServerConnection.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m13_69 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m13_100 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m13_66 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m13_109 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233"];
m13_110 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="id == null", span="235-235"];
m13_112 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="name == null", span="236-236"];
m13_114 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="238-241"];
m13_111 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="235-235"];
m13_113 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="236-236"];
m13_115 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233"];
m13_143 [cluster="Unk.Complete", file="SqlServerConnection.cs", label="Entry Unk.Complete", span=""];
m13_166 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322"];
m13_167 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="serverId == null", span="324-324"];
m13_169 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="326-328"];
m13_168 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="324-324"];
m13_170 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322"];
m13_90 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191"];
m13_91 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="jobId == null", span="193-193"];
m13_94 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="201-201"];
m13_92 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''jobId'');", span="193-193"];
m13_93 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="195-199"];
m13_95 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="sqlState == null", span="202-202"];
m13_97 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="var data = new Dictionary<string, string>(\r\n                JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                StringComparer.OrdinalIgnoreCase)", span="207-209"];
m13_98 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = data\r\n            };", span="211-216"];
m13_96 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="return null;", span="204-204"];
m13_99 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191"];
m13_251 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467"];
m13_252 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="key == null", span="469-469"];
m13_255 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="478-480"];
m13_253 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="469-469"];
m13_256 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467"];
m13_17 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m13_181 [cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m13_47 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104"];
m13_48 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="job == null", span="110-110"];
m13_50 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters == null", span="111-111"];
m13_53 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var invocationData = InvocationData.Serialize(job)", span="118-118"];
m13_54 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="120-128"];
m13_55 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters.Count > 0", span="130-130"];
m13_56 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var parameterArray = new object[parameters.Count]", span="132-132"];
m13_58 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label=parameters, span="134-134"];
m13_49 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''job'');", span="110-110"];
m13_51 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''parameters'');", span="111-111"];
m13_52 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="113-116"];
m13_59 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="136-141"];
m13_62 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="return jobId;", span="151-151"];
m13_57 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="int parameterIndex = 0", span="133-133"];
m13_61 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="148-148"];
m13_60 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="144-146"];
m13_63 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104"];
m13_65 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m13_42 [cluster="Unk.Dequeue", file="SqlServerConnection.cs", label="Entry Unk.Dequeue", span=""];
m13_37 [cluster="Unk.Distinct", file="SqlServerConnection.cs", label="Entry Unk.Distinct", span=""];
m13_154 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="296-296"];
m13_43 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="89-89"];
m13_44 [cluster="lambda expression", file="SqlServerConnection.cs", label="_queueProviders.GetProvider(queue)", span="89-89"];
m13_45 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="89-89"];
m13_151 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="296-296"];
m13_152 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Field", span="296-296"];
m13_153 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="296-296"];
m13_155 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Value", span="296-296"];
m13_156 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="296-296"];
m13_131 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m13_132 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="key == null", span="268-268"];
m13_134 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="keyValuePairs == null", span="269-269"];
m13_138 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label=keyValuePairs, span="280-280"];
m13_139 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="_connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="282-282"];
m13_133 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="268-268"];
m13_135 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="269-269"];
m13_137 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="var transaction = new TransactionScope()", span="278-278"];
m13_140 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="transaction.Complete()", span="285-285"];
m13_141 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m13_89 [cluster="Hangfire.Storage.JobData.JobData()", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m13_18 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71"];
m13_19 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="return new SqlServerWriteOnlyTransaction(_connection, _isolationLevel, _queueProviders);", span="73-73"];
m13_20 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71"];
m13_189 [cluster="Unk.First", file="SqlServerConnection.cs", label="Entry Unk.First", span=""];
m13_36 [cluster="Unk.Select", file="SqlServerConnection.cs", label="Entry Unk.Select", span=""];
m13_228 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430"];
m13_229 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="key == null", span="432-432"];
m13_231 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="name == null", span="433-433"];
m13_234 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(query, new { key = key, field = name }).SingleOrDefault();", span="439-439"];
m13_230 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="432-432"];
m13_232 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="433-433"];
m13_233 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="string query = @''\r\nselect [Value] from HangFire.Hash\r\nwhere [Key] = @key and [Field] = @field''", span="435-437"];
m13_235 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430"];
m13_184 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352"];
m13_185 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="key == null", span="354-354"];
m13_187 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="return _connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First();", span="356-358"];
m13_186 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="354-354"];
m13_188 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352"];
m13_68 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m13_182 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m13_196 [cluster="Unk.ToList", file="SqlServerConnection.cs", label="Entry Unk.ToList", span=""];
m13_70 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m13_41 [cluster="Unk.GetJobQueue", file="SqlServerConnection.cs", label="Entry Unk.GetJobQueue", span=""];
m13_122 [cluster="HashSet<string>.cstr", file="SqlServerConnection.cs", label="Entry HashSet<string>.cstr", span=""];
m13_116 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244"];
m13_117 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="key == null", span="246-246"];
m13_119 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="var result = _connection.Query<string>(\r\n                @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                new { key })", span="248-250"];
m13_118 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="246-246"];
m13_120 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="return new HashSet<string>(result);", span="252-252"];
m13_121 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244"];
m13_236 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442"];
m13_237 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="key == null", span="444-444"];
m13_240 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="return _connection.Query<long>(query, new { key = key }).Single();", span="450-450"];
m13_238 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="444-444"];
m13_239 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="string query = @''\r\nselect count([Id]) from HangFire.List\r\nwhere [Key] = @key''", span="446-448"];
m13_241 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442"];
m13_87 [cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs", label="Entry Unk.SingleOrDefault", span=""];
m13_176 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340"];
m13_177 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="timeOut.Duration() != timeOut", span="342-342"];
m13_178 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="344-344"];
m13_179 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="347-349"];
m13_180 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340"];
m13_263 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m14_46 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="30-30"];
m14_38 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m14_0 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="29-29"];
m14_1 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="serverId == null", span="37-37"];
m14_3 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="storage == null", span="38-38"];
m14_5 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="performanceProcess == null", span="39-39"];
m14_7 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="stateMachineFactory == null", span="40-40"];
m14_9 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="queues == null", span="41-41"];
m14_11 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="workerCount <= 0", span="42-42"];
m14_13 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="_storage = storage", span="44-44"];
m14_14 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="_performanceProcess = performanceProcess", span="45-45"];
m14_15 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="_stateMachineFactory = stateMachineFactory", span="46-46"];
m14_16 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="var workerRunners = new List<IServerComponentRunner>(workerCount)", span="48-48"];
m14_18 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="i <= workerCount", span="49-49"];
m14_19 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="var workerContext = new WorkerContext(serverId, queues, i)", span="51-51"];
m14_2 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="37-37"];
m14_4 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="throw new ArgumentNullException(''storage'');", span="38-38"];
m14_6 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="throw new ArgumentNullException(''performanceProcess'');", span="39-39"];
m14_8 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="40-40"];
m14_10 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="throw new ArgumentNullException(''queues'');", span="41-41"];
m14_12 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="42-42"];
m14_17 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="var i = 1", span="49-49"];
m14_20 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="54-54"];
m14_22 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="_workerRunners = new ServerComponentRunnerCollection(workerRunners)", span="57-57"];
m14_21 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="i++", span="49-49"];
m14_23 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerConnectionFacts.cs", label="Exit HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="29-29"];
m14_27 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m14_26 [cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerConnectionFacts.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m14_35 [cluster="HangFire.Server.WorkerManager.Stop()", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.WorkerManager.Stop()", span="65-65"];
m14_36 [cluster="HangFire.Server.WorkerManager.Stop()", file="SqlServerConnectionFacts.cs", label="_workerRunners.Stop()", span="67-67"];
m14_37 [cluster="HangFire.Server.WorkerManager.Stop()", file="SqlServerConnectionFacts.cs", label="Exit HangFire.Server.WorkerManager.Stop()", span="65-65"];
m14_29 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerConnectionFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m14_25 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="SqlServerConnectionFacts.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m14_34 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m14_39 [cluster="HangFire.Server.WorkerManager.Dispose()", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.WorkerManager.Dispose()", span="70-70"];
m14_40 [cluster="HangFire.Server.WorkerManager.Dispose()", file="SqlServerConnectionFacts.cs", label="_workerRunners.Dispose()", span="72-72"];
m14_41 [cluster="HangFire.Server.WorkerManager.Dispose()", file="SqlServerConnectionFacts.cs", label="Exit HangFire.Server.WorkerManager.Dispose()", span="70-70"];
m14_28 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="75-75"];
m14_43 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="SqlServerConnectionFacts.cs", label="return new ServerComponentRunner(\r\n                new Worker(context, _storage, _performanceProcess, _stateMachineFactory),\r\n                new ServerComponentRunnerOptions { MinimumLogVerbosity = true });", span="77-79"];
m14_44 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="SqlServerConnectionFacts.cs", label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="75-75"];
m14_42 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m14_47 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m14_45 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m14_31 [cluster="HangFire.Server.WorkerManager.Start()", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.WorkerManager.Start()", span="60-60"];
m14_32 [cluster="HangFire.Server.WorkerManager.Start()", file="SqlServerConnectionFacts.cs", label="_workerRunners.Start()", span="62-62"];
m14_33 [cluster="HangFire.Server.WorkerManager.Start()", file="SqlServerConnectionFacts.cs", label="Exit HangFire.Server.WorkerManager.Start()", span="60-60"];
m14_30 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="SqlServerConnectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m14_48 [file="SqlServerConnectionFacts.cs", label="HangFire.Server.WorkerManager", span=""];
m15_23 [cluster="string.Replace(string, string)", file="SqlServerObjectsInstaller.cs", label="Entry string.Replace(string, string)", span="0-0"];
m15_19 [cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerObjectsInstaller.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="201-201"];
m15_29 [cluster="Unk.>", file="SqlServerObjectsInstaller.cs", label="Entry Unk.>", span=""];
m15_40 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerObjectsInstaller.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m15_30 [cluster="Unk.Single", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Single", span=""];
m15_20 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="75-75"];
m15_26 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="77-77"];
m15_27 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.SqlAzure;", span="78-78"];
m15_28 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="75-75"];
m15_38 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m15_0 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m15_1 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="connection == null", span="37-37"];
m15_4 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="!IsSqlEditionSupported(connection)", span="41-41"];
m15_10 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="connection.Execute(script)", span="56-56"];
m15_2 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="throw new ArgumentNullException(''connection'');", span="37-37"];
m15_3 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Log.Info(''Start installing Hangfire SQL objects...'')", span="39-39"];
m15_5 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="43-43"];
m15_6 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''Hangfire.SqlServer.Install.sql'')", span="46-48"];
m15_7 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="SqlServerObjectsInstaller.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 5;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", prediction=39, span="50-50"];
m15_8 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="var i = 0", span="52-52"];
m15_9 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="i < RetryAttempts", span="52-52"];
m15_15 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="i++", span="52-52"];
m15_16 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Log.Info(''Hangfire SQL objects installed.'')", span="72-72"];
m15_11 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label=SqlException, span="59-59"];
m15_12 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="ex.ErrorCode == 1205", span="61-61"];
m15_13 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Log.WarnException(''Deadlock occurred during automatic migration execution. Retrying...'', ex)", span="63-63"];
m15_14 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="throw;", span="67-67"];
m15_17 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m15_25 [cluster="Unk.WarnException", file="SqlServerObjectsInstaller.cs", label="Entry Unk.WarnException", span=""];
m15_24 [cluster="Unk.Execute", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Execute", span=""];
m15_39 [cluster="string.Format(string, object, object)", file="SqlServerObjectsInstaller.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m15_41 [cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerObjectsInstaller.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m15_22 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81"];
m15_31 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="83-83"];
m15_33 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="87-90"];
m15_32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="stream == null", span="85-85"];
m15_34 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="var reader = new StreamReader(stream)", span="93-93"];
m15_35 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="return reader.ReadToEnd();", span="95-95"];
m15_36 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81"];
m15_37 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m15_21 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m16_18 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="45-45"];
m16_19 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(_type, null, _arguments))", span="47-48"];
m16_20 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="45-45"];
m16_314 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="372-372"];
m16_315 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = new InvalidOperationException()", span="374-374"];
m16_316 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="375-375"];
m16_317 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="377-377"];
m16_318 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="379-380"];
m16_319 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Same(exception, thrownException.InnerException)", span="382-382"];
m16_320 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="372-372"];
m16_335 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="386-386"];
m16_336 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="388-388"];
m16_337 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="389-389"];
m16_338 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="391-392"];
m16_339 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="394-394"];
m16_340 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="386-386"];
m16_360 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="408-408"];
m16_361 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="410-410"];
m16_362 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="412-412"];
m16_363 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="414-415"];
m16_364 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="417-417"];
m16_365 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(exception.InnerException)", span="418-418"];
m16_366 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="408-408"];
m16_17 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m16_213 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="482-482"];
m16_440 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="482-482"];
m16_384 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="542-542"];
m16_468 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="throw new InvalidOperationException(''exception'');", span="544-544"];
m16_469 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="542-542"];
m16_100 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", span="136-136"];
m16_101 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var date = new DateTime(2014, 5, 30, 12, 0, 0, 777)", span="138-138"];
m16_102 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var expected = date.ToString(''o'')", span="139-139"];
m16_103 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="141-141"];
m16_104 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(expected, job.Arguments[0])", span="143-143"];
m16_105 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", span="136-136"];
m16_136 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="170-170"];
m16_137 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression<JobFacts>(null))", span="172-173"];
m16_138 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="175-175"];
m16_139 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="170-170"];
m16_351 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="398-398"];
m16_352 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var type = typeof (JobFacts)", span="400-400"];
m16_353 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="401-401"];
m16_354 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<JsonReaderException>(\r\n                () => new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') }))", span="403-404"];
m16_355 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="398-398"];
m16_0 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.JobFacts()", span="27-27"];
m16_1 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_type = typeof (JobFacts)", span="29-29"];
m16_2 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_method = _type.GetMethod(''StaticMethod'')", span="30-30"];
m16_3 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_arguments = new string[0]", span="31-31"];
m16_4 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_activator = new Mock<JobActivator> { CallBase = true }", span="33-33"];
m16_5 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_token = new Mock<IJobCancellationToken>()", span="34-34"];
m16_6 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.JobFacts()", span="27-27"];
m16_412 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571"];
m16_483 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="return ''Return value'';", span="573-573"];
m16_484 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571"];
m16_286 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="325-325"];
m16_287 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="328-328"];
m16_288 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="329-329"];
m16_289 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var type = typeof(JobFacts)", span="331-331"];
m16_290 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="332-332"];
m16_291 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="334-334"];
m16_292 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="337-337"];
m16_293 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="340-340"];
m16_294 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="325-325"];
m16_192 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="486-486"];
m16_441 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="486-486"];
m16_161 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="561-561"];
m16_478 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = true", span="563-563"];
m16_479 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="561-561"];
m16_265 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="291-291"];
m16_266 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="294-294"];
m16_267 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="295-295"];
m16_268 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="298-298"];
m16_269 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="301-301"];
m16_270 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="291-291"];
m16_171 [cluster="System.IDisposable.Dispose()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m16_375 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="422-422"];
m16_376 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => ExceptionMethod())", span="424-424"];
m16_377 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="426-427"];
m16_378 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="429-429"];
m16_379 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="430-430"];
m16_380 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="422-422"];
m16_423 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m16_153 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="186-186"];
m16_154 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="188-188"];
m16_155 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(typeof(Instance), job.Type)", span="190-190"];
m16_156 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''Method'', job.Method.Name)", span="191-191"];
m16_157 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="186-186"];
m16_51 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", span="84-84"];
m16_52 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new Job(_type, _method, new[] { ''hello!'' }))", span="86-87"];
m16_53 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Contains(''count'', exception.Message)", span="89-89"];
m16_54 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", span="84-84"];
m16_172 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="204-204"];
m16_173 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="IDisposable instance = null", span="206-206"];
m16_174 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => Job.FromExpression(() => instance.Dispose()))", span="208-209"];
m16_175 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="204-204"];
m16_112 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="147-147"];
m16_113 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''123'', 1))", span="149-149"];
m16_114 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''\''123\'''', job.Arguments[0])", span="151-151"];
m16_115 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''1'', job.Arguments[1])", span="152-152"];
m16_116 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="147-147"];
m16_120 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="516-516"];
m16_455 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = true", span="518-518"];
m16_456 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''hello'', stringArg)", span="520-520"];
m16_457 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(5, intArg)", span="521-521"];
m16_458 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="516-516"];
m16_73 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="111-111"];
m16_74 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression(null))", span="113-114"];
m16_75 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="116-116"];
m16_76 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="111-111"];
m16_66 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="102-102"];
m16_67 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var method = _type.GetMethod(''AsyncMethod'')", span="104-104"];
m16_68 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => new Job(_type, method, new string[0]))", span="106-107"];
m16_69 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="102-102"];
m16_7 [cluster="System.Type.GetMethod(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m16_143 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
m16_422 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="178-178"];
m16_203 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="490-490"];
m16_442 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="a = ''hello''", span="492-492"];
m16_443 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="490-490"];
m16_111 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="535-535"];
m16_465 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = true", span="537-537"];
m16_466 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(SomeDateTime, argument)", span="539-539"];
m16_467 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="535-535"];
m16_36 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", span="66-66"];
m16_37 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = new Job(_type, _method, _arguments)", span="68-68"];
m16_38 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Same(_type, job.Type)", span="70-70"];
m16_39 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Same(_method, job.Method)", span="71-71"];
m16_40 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_arguments.SequenceEqual(job.Arguments))", span="72-72"];
m16_41 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", span="66-66"];
m16_331 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="500-500"];
m16_446 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = true", span="502-502"];
m16_447 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="500-500"];
m16_371 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="579-579"];
m16_485 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = true", span="581-581"];
m16_486 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="579-579"];
m16_238 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="258-258"];
m16_239 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="260-260"];
m16_240 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="261-261"];
m16_241 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="263-263"];
m16_242 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="265-265"];
m16_243 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="258-258"];
m16_304 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="358-358"];
m16_305 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="361-361"];
m16_306 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => NullArgumentMethod(null))", span="362-362"];
m16_307 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="365-365"];
m16_308 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="368-368"];
m16_309 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="358-358"];
m16_409 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="448-448"];
m16_14 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="41-41"];
m16_15 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(null, _method, _arguments)", span="41-41"];
m16_16 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="41-41"];
m16_21 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="48-48"];
m16_22 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(_type, null, _arguments)", span="48-48"];
m16_23 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="48-48"];
m16_27 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="55-55"];
m16_28 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(typeof(Job), _method, _arguments)", span="55-55"];
m16_29 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="55-55"];
m16_33 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="62-62"];
m16_34 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(_type, _method, null)", span="62-62"];
m16_35 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="62-62"];
m16_56 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="87-87"];
m16_57 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(_type, _method, new[] { ''hello!'' })", span="87-87"];
m16_58 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="87-87"];
m16_63 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="98-98"];
m16_64 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(_type, method, new[] { ''hello!'' })", span="98-98"];
m16_65 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="98-98"];
m16_70 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="107-107"];
m16_71 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(_type, method, new string[0])", span="107-107"];
m16_72 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="107-107"];
m16_78 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="114-114"];
m16_79 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Job.FromExpression(null)", span="114-114"];
m16_80 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="114-114"];
m16_85 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="123-123"];
m16_86 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Job.FromExpression(() => new JobFacts())", span="123-123"];
m16_87 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="123-123"];
m16_88 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="123-123"];
m16_89 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new JobFacts()", span="123-123"];
m16_90 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="123-123"];
m16_96 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="129-129"];
m16_97 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Console.WriteLine()", span="129-129"];
m16_98 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="129-129"];
m16_108 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="141-141"];
m16_109 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithDateTimeArgument(date)", span="141-141"];
m16_110 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="141-141"];
m16_117 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="149-149"];
m16_118 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithArguments(''123'', 1)", span="149-149"];
m16_119 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="149-149"];
m16_130 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="161-161"];
m16_131 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithDateTimeArgument(date)", span="161-161"];
m16_132 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="161-161"];
m16_133 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="164-164"];
m16_134 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithDateTimeArgument(date)", span="164-164"];
m16_135 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="164-164"];
m16_140 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="173-173"];
m16_141 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Job.FromExpression<JobFacts>(null)", span="173-173"];
m16_142 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="173-173"];
m16_147 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="182-182"];
m16_149 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="182-182"];
m16_150 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="182-182"];
m16_152 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="182-182"];
m16_158 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="188-188"];
m16_159 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Method()", span="188-188"];
m16_160 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="188-188"];
m16_168 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="198-198"];
m16_169 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="instance.Dispose()", span="198-198"];
m16_170 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="198-198"];
m16_176 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="209-209"];
m16_177 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Job.FromExpression(() => instance.Dispose())", span="209-209"];
m16_178 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="209-209"];
m16_179 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="209-209"];
m16_180 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="instance.Dispose()", span="209-209"];
m16_181 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="209-209"];
m16_186 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="217-217"];
m16_187 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Job.FromExpression(() => MethodWithReferenceParameter(ref test))", span="217-217"];
m16_188 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="217-217"];
m16_189 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="217-217"];
m16_190 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithReferenceParameter(ref test)", span="217-217"];
m16_191 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="217-217"];
m16_197 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="225-225"];
m16_198 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Job.FromExpression(() => MethodWithOutputParameter(out test))", span="225-225"];
m16_199 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="225-225"];
m16_200 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="225-225"];
m16_201 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithOutputParameter(out test)", span="225-225"];
m16_202 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="225-225"];
m16_207 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="232-232"];
m16_208 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Job.FromExpression(() => PrivateMethod())", span="232-232"];
m16_209 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="232-232"];
m16_210 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="232-232"];
m16_211 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="PrivateMethod()", span="232-232"];
m16_212 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="232-232"];
m16_219 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="238-238"];
m16_220 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="StaticMethod()", span="238-238"];
m16_221 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="238-238"];
m16_223 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="241-241"];
m16_224 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(null, _token.Object)", span="241-241"];
m16_225 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="241-241"];
m16_232 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="249-249"];
m16_233 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="StaticMethod()", span="249-249"];
m16_234 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="249-249"];
m16_235 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="252-252"];
m16_236 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, null)", span="252-252"];
m16_237 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="252-252"];
m16_244 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="261-261"];
m16_245 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="StaticMethod()", span="261-261"];
m16_246 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="261-261"];
m16_253 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="272-272"];
m16_254 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Method()", span="272-272"];
m16_255 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="272-272"];
m16_262 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="283-283"];
m16_263 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Method()", span="283-283"];
m16_264 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="283-283"];
m16_271 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="295-295"];
m16_272 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithArguments(''hello'', 5)", span="295-295"];
m16_273 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="295-295"];
m16_301 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="348-348"];
m16_302 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="MethodWithDateTimeArgument(SomeDateTime)", span="348-348"];
m16_303 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="348-348"];
m16_310 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="362-362"];
m16_311 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="NullArgumentMethod(null)", span="362-362"];
m16_312 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="362-362"];
m16_324 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="375-375"];
m16_325 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ActivateJob(It.IsAny<Type>())", span="375-375"];
m16_326 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="375-375"];
m16_328 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="377-377"];
m16_329 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="InstanceMethod()", span="377-377"];
m16_330 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="377-377"];
m16_332 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="380-380"];
m16_333 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="380-380"];
m16_334 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="380-380"];
m16_342 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="388-388"];
m16_343 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ActivateJob(It.IsNotNull<Type>())", span="388-388"];
m16_344 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="388-388"];
m16_345 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="389-389"];
m16_346 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="InstanceMethod()", span="389-389"];
m16_347 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="389-389"];
m16_348 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="392-392"];
m16_349 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="392-392"];
m16_350 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="392-392"];
m16_356 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="404-404"];
m16_357 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') })", span="404-404"];
m16_358 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="404-404"];
m16_368 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="412-412"];
m16_369 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Method()", span="412-412"];
m16_370 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="412-412"];
m16_372 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="415-415"];
m16_373 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="415-415"];
m16_374 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="415-415"];
m16_381 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="424-424"];
m16_382 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="ExceptionMethod()", span="424-424"];
m16_383 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="424-424"];
m16_385 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="427-427"];
m16_386 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="427-427"];
m16_387 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="427-427"];
m16_393 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="437-437"];
m16_394 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="CancelableJob(JobCancellationToken.Null)", span="437-437"];
m16_395 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="437-437"];
m16_397 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="438-438"];
m16_398 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ThrowIfCancellationRequested()", span="438-438"];
m16_399 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="438-438"];
m16_401 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="442-442"];
m16_402 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="442-442"];
m16_403 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="442-442"];
m16_410 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.FunctionReturningValue()", span="448-448"];
m16_411 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="448-448"];
m16_182 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="213-213"];
m16_183 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string test = null", span="215-215"];
m16_184 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithReferenceParameter(ref test)))", span="216-217"];
m16_185 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="213-213"];
m16_295 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="344-344"];
m16_296 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="347-347"];
m16_297 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="348-348"];
m16_298 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="351-351"];
m16_299 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="354-354"];
m16_300 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="344-344"];
m16_8 [cluster="Mock<JobActivator>.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m16_222 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="495-495"];
m16_444 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = true", span="497-497"];
m16_445 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="495-495"];
m16_341 [cluster="Unk.Returns", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Returns", span=""];
m16_81 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
m16_30 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", span="59-59"];
m16_31 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(_type, _method, null))", span="61-62"];
m16_32 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", span="59-59"];
m16_10 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="38-38"];
m16_11 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(null, _method, _arguments))", span="40-41"];
m16_12 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="38-38"];
m16_107 [cluster="System.DateTime.ToString(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m16_77 [cluster="Unk.Equal", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Equal", span=""];
m16_321 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m16_91 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", span="127-127"];
m16_92 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => Console.WriteLine())", span="129-129"];
m16_93 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(typeof(Console), job.Type)", span="131-131"];
m16_94 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''WriteLine'', job.Method.Name)", span="132-132"];
m16_95 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", span="127-127"];
m16_45 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m16_46 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = new Job(_type, _method)", span="78-78"];
m16_47 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Empty(job.Arguments)", span="80-80"];
m16_48 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m16_214 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="236-236"];
m16_215 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="238-238"];
m16_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(null, _token.Object))", span="240-241"];
m16_217 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''activator'', exception.ParamName)", span="243-243"];
m16_218 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="236-236"];
m16_106 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m16_413 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="455-455"];
m16_414 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="457-457"];
m16_415 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var nonCachedAttributes = job.GetTypeFilterAttributes(false).ToArray()", span="458-458"];
m16_416 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var cachedAttributes = job.GetTypeFilterAttributes(true).ToArray()", span="459-459"];
m16_417 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="461-461"];
m16_418 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="462-462"];
m16_419 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(nonCachedAttributes[0] is TestTypeAttribute)", span="464-464"];
m16_420 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(cachedAttributes[0] is TestTypeAttribute)", span="465-465"];
m16_421 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="455-455"];
m16_367 [cluster="Unk.NotNull", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.NotNull", span=""];
m16_322 [cluster="Unk.Setup", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Setup", span=""];
m16_359 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m16_313 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="510-510"];
m16_451 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = true", span="512-512"];
m16_452 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(argument)", span="513-513"];
m16_453 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="510-510"];
m16_82 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="120-120"];
m16_83 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => new JobFacts()))", span="122-123"];
m16_84 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="120-120"];
m16_9 [cluster="Mock<IJobCancellationToken>.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m16_167 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", span="558-558"];
m16_204 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="229-229"];
m16_205 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => PrivateMethod()))", span="231-232"];
m16_206 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="229-229"];
m16_50 [cluster="Unk.Empty", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Empty", span=""];
m16_396 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="505-505"];
m16_448 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SqlServerWriteOnlyTransactionFacts.cs", label="token.ThrowIfCancellationRequested()", span="507-507"];
m16_449 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="505-505"];
m16_227 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="247-247"];
m16_228 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="249-249"];
m16_229 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(_activator.Object, null))", span="251-252"];
m16_230 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''cancellationToken'', exception.ParamName)", span="254-254"];
m16_231 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="247-247"];
m16_49 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="122-122"];
m16_193 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="221-221"];
m16_194 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string test", span="223-223"];
m16_195 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithOutputParameter(out test)))", span="224-225"];
m16_196 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="221-221"];
m16_247 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="269-269"];
m16_248 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="271-271"];
m16_249 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="272-272"];
m16_250 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="274-274"];
m16_251 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="276-276"];
m16_252 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="269-269"];
m16_42 [cluster="Unk.Same", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Same", span=""];
m16_285 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m16_121 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="156-156"];
m16_122 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var date = DateTime.UtcNow", span="158-158"];
m16_123 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="160-160"];
m16_124 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var enJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="161-161"];
m16_125 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="163-163"];
m16_126 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var ruJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="164-164"];
m16_127 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(enJob.Arguments[0], ruJob.Arguments[0])", span="166-166"];
m16_128 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="156-156"];
m16_400 [cluster="Unk.ThrowIfCancellationRequested", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m16_162 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="195-195"];
m16_163 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SqlServerWriteOnlyTransactionFacts.cs", label="IDisposable instance = new Instance()", span="197-197"];
m16_164 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => instance.Dispose())", span="198-198"];
m16_165 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(typeof(Instance), job.Type)", span="200-200"];
m16_166 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="195-195"];
m16_24 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m16_25 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => new Job(typeof(Job), _method, _arguments))", span="54-55"];
m16_26 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m16_144 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="179-179"];
m16_146 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="179-179"];
m16_284 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m16_43 [cluster="Unk.SequenceEqual", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.SequenceEqual", span=""];
m16_256 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="280-280"];
m16_257 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_disposed = false", span="282-282"];
m16_258 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="283-283"];
m16_259 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="285-285"];
m16_260 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_disposed)", span="287-287"];
m16_261 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="280-280"];
m16_323 [cluster="Unk.Throws", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Throws", span=""];
m16_226 [cluster="Unk.Perform", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Perform", span=""];
m16_274 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="305-305"];
m16_275 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_methodInvoked = false", span="308-308"];
m16_276 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var typeConverter = TypeDescriptor.GetConverter(typeof (DateTime))", span="309-309"];
m16_277 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="310-310"];
m16_278 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var type = typeof (JobFacts)", span="312-312"];
m16_279 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="313-313"];
m16_280 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="315-315"];
m16_281 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="318-318"];
m16_282 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(_methodInvoked)", span="321-321"];
m16_283 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="305-305"];
m16_388 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="434-434"];
m16_389 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="437-437"];
m16_390 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_token.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="438-438"];
m16_391 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="441-442"];
m16_392 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="434-434"];
m16_55 [cluster="Unk.Contains", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Contains", span=""];
m16_327 [cluster="Unk.ActivateJob", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.ActivateJob", span=""];
m16_44 [cluster="Unk.True", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.True", span=""];
m16_59 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m16_60 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var method = _type.GetMethod(''GenericMethod'')", span="95-95"];
m16_61 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => new Job(_type, method, new[] { ''hello!'' }))", span="97-98"];
m16_62 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m16_129 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m16_99 [cluster="System.Console.WriteLine()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m16_404 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="446-446"];
m16_405 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.FunctionReturningValue())", span="448-448"];
m16_406 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var result = job.Perform(_activator.Object, _token.Object)", span="450-450"];
m16_407 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''Return value'', result)", span="452-452"];
m16_408 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="446-446"];
m17_50 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Entry Hangfire.Server.Worker.ToString()", span="121-121"];
m17_51 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="return ''Worker #'' + _context.WorkerNumber;", span="123-123"];
m17_52 [cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs", label="Exit Hangfire.Server.Worker.ToString()", span="121-121"];
m17_15 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="Worker.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", span="38-38"];
m17_16 [cluster="Unk.Execute", file="Worker.cs", label="Entry Unk.Execute", span=""];
m17_17 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="Worker.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49"];
m17_20 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57"];
m17_23 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="HangFire.SqlServer.SqlStoredJobs", span=""];
m17_26 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="var jobCancellationToken = new ServerJobCancellationToken(\r\n                        fetchedJob.JobId, connection, _context, cancellationToken)", span="88-89"];
m17_18 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="Worker.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="51-54"];
m17_27 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="var state = PerformJob(fetchedJob.JobId, connection, jobCancellationToken)", span="91-91"];
m17_22 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="Worker.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", span="57-57"];
m17_24 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="78-78"];
m17_29 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="stateMachine.ChangeState(fetchedJob.JobId, state, new[] { ProcessingState.StateName })", span="96-96"];
m17_30 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="104-104"];
m17_32 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="111-111"];
m17_34 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="fetchedJob.Requeue()", span="115-115"];
m17_19 [cluster="HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", file="Worker.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.GetParameter(string, string)", span="49-49"];
m17_21 [cluster="HangFire.SqlServer.SqlStoredJobs.Complete(HangFire.Server.JobPayload)", file="Worker.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="59-60"];
m17_25 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="return;", span="79-79"];
m17_28 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="state != null", span="93-93"];
m17_31 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label=JobAbortedException, span="109-109"];
m17_35 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="throw;", span="116-116"];
m17_36 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="51-51"];
m17_73 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m17_77 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m17_37 [cluster="Hangfire.JobStorage.GetConnection()", file="Worker.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m17_3 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="storage == null", span="41-41"];
m17_7 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", color=green, community=0, file="Worker.cs", label="stateMachineFactory == null", prediction=40, span="43-43"];
m17_4 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''storage'');", span="41-41"];
m17_5 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="process == null", span="42-42"];
m17_8 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="43-43"];
m17_6 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''process'');", span="42-42"];
m17_9 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="_context = context", span="45-45"];
m17_39 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="Worker.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m17_40 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m17_10 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="_storage = storage", span="46-46"];
m17_11 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="_process = process", span="47-47"];
m17_13 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="34-34"];
m17_14 [cluster="HangFire.SqlServer.SqlStoredJobs.SetParameter(string, string, string)", file="Worker.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="40-46"];
m17_75 [cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m17_76 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28"];
m17_70 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m17_44 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="Worker.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m17_46 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32"];
m17_45 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m17_49 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m17_47 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="126-126"];
m17_53 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="130-130"];
m17_57 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, token)", span="142-143"];
m17_54 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData == null", span="131-131"];
m17_56 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData.EnsureLoaded()", span="140-140"];
m17_58 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="145-145"];
m17_60 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var result = _process.Run(performContext, jobData.Job)", span="148-148"];
m17_55 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return null;", span="137-137"];
m17_59 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var duration = Stopwatch.StartNew()", span="146-146"];
m17_62 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="151-151"];
m17_61 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="duration.Stop()", span="149-149"];
m17_63 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=OperationCanceledException, span="153-153"];
m17_64 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="throw;", span="155-155"];
m17_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=JobPerformanceException, span="157-157"];
m17_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="159-162"];
m17_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label=Exception, span="164-164"];
m17_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                };", span="166-169"];
m17_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Exit Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="126-126"];
m17_72 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35"];
m17_0 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="Worker.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15"];
m17_1 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="Worker.cs", label="_connection = connection", span="17-17"];
m17_12 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="Worker.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m17_2 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="Worker.cs", label="Exit HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15"];
m17_74 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="Worker.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20"];
m17_48 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="Worker.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m17_43 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="26-26"];
m17_38 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m17_71 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m17_42 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="Worker.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m17_41 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m17_78 [file="Worker.cs", label="Hangfire.Server.Worker", span=""];
n41 -> n8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
n41 -> n16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
n41 -> n29  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
n41 -> n33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
n41 -> n36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
n41 -> n39  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
n0 -> n13  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
n7 -> n9  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n7 -> n10  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n7 -> n11  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n7 -> n12  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n7 -> n13  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n14 -> n16  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
n32 -> n34  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n32 -> n35  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n32 -> n36  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n37 -> n39  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_6 -> m0_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m0_52 -> m0_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m0_57 -> m0_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m0_57 -> m0_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m0_57 -> m0_29  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m0_57 -> m0_44  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m0_57 -> m0_49  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m1_6 -> m1_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_21 -> m1_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_46 -> m1_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_46 -> m1_53  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_46 -> m1_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_46 -> m1_64  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_46 -> m1_65  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_46 -> m1_66  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_61 -> m1_65  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_61 -> m1_63  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_79 -> m1_24  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_26  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_3  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_4  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_19  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_27  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_34  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_35  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_37  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_38  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_42  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_51  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_53  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_59  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_62  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_64  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_65  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_79 -> m1_66  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_1 -> m2_20  [color=green, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_24  [color=green, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_28  [color=green, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_32  [color=green, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_36  [color=green, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_40  [color=green, key=1, label="lambda expression", style=dashed];
m2_7 -> m2_44  [color=green, key=1, label="lambda expression", style=dashed];
m2_8 -> m2_48  [color=green, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_56  [color=green, key=1, label="lambda expression", style=dashed];
m2_10 -> m2_60  [color=green, key=1, label="lambda expression", style=dashed];
m2_11 -> m2_64  [color=green, key=1, label="lambda expression", style=dashed];
m2_12 -> m2_68  [color=green, key=1, label="lambda expression", style=dashed];
m2_13 -> m2_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_14 -> m2_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_15 -> m2_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_16 -> m2_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_123 -> m2_125  [color=darkseagreen4, key=1, label=match, style=dashed];
m2_117 -> m2_125  [color=darkseagreen4, key=1, label=pathHandlerFactory, style=dashed];
m2_118 -> m2_121  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m2_48 -> m2_53  [color=green, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m2_68 -> m2_72  [color=green, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m2_142 -> m2_53  [color=green, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m2_143 -> m2_72  [color=green, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m3_128 -> m3_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_126 -> m3_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_126 -> m3_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_126 -> m3_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_127 -> m3_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_156 -> m3_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_157 -> m3_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_111 -> m3_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_109 -> m3_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_109 -> m3_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_109 -> m3_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_110 -> m3_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m3_0 -> m3_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RouteCollection", style=dashed];
m3_0 -> m3_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m3_169 -> m3_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_170 -> m3_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_55 -> m3_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_53 -> m3_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_53 -> m3_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_53 -> m3_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_53 -> m3_57  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m3_53 -> m3_58  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m3_53 -> m3_59  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m3_53 -> m3_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_53 -> m3_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_53 -> m3_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_54 -> m3_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_56 -> m3_59  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_56 -> m3_60  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_56 -> m3_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_60 -> m3_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_30 -> m3_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_38 -> m3_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_38 -> m3_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_38 -> m3_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_38 -> m3_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_38 -> m3_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_39 -> m3_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_40 -> m3_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_41 -> m3_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_119 -> m3_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_120 -> m3_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_136 -> m3_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_137 -> m3_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_149 -> m3_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_150 -> m3_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_12 -> m3_15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
m3_13 -> m3_15  [color=darkseagreen4, key=1, label=maxReplayCount, style=dashed];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_13 -> m3_19  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_15 -> m3_15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
m3_14 -> m3_22  [color=darkseagreen4, key=1, label=dispatcher, style=dashed];
m3_143 -> m3_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_144 -> m3_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_102 -> m3_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_103 -> m3_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_24 -> m3_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_21 -> m3_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_21 -> m3_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_21 -> m3_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_21 -> m3_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_21 -> m3_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_23 -> m3_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_91 -> m3_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_91 -> m3_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_92 -> m3_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_93 -> m3_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_66 -> m3_80  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m3_66 -> m3_81  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m3_66 -> m3_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_66 -> m3_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_79 -> m3_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_79 -> m3_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_79 -> m3_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_79 -> m3_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_83 -> m3_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_19 -> m3_19  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_162 -> m3_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_163 -> m3_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_176 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_24  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_39  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_40  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_54  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_55  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_60  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_61  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_83  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_92  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_93  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_110  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_111  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_128  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_137  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_144  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_150  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_157  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_163  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_176 -> m3_170  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m3_177 -> m3_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_177 -> m3_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_177 -> m3_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_178 -> m3_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_178 -> m3_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_178 -> m3_36  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_179 -> m3_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_179 -> m3_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_179 -> m3_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_180 -> m3_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_180 -> m3_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_180 -> m3_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_181 -> m3_68  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m3_182 -> m3_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_183 -> m3_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_184 -> m3_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m3_185 -> m3_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_185 -> m3_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_186 -> m3_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_187 -> m3_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_188 -> m3_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_188 -> m3_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_189 -> m3_117  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_190 -> m3_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_191 -> m3_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_191 -> m3_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_192 -> m3_134  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_193 -> m3_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_194 -> m3_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_195 -> m3_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_196 -> m3_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_197 -> m3_147  [color=darkseagreen4, key=1, label=double, style=dashed];
m3_198 -> m3_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_199 -> m3_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_200 -> m3_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_201 -> m3_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_202 -> m3_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_203 -> m3_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_204 -> m3_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_205 -> m3_173  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_206 -> m3_173  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_4 -> m5_6  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_11  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_4 -> m5_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_28 -> m5_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_40 -> m5_49  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_40 -> m5_51  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_40 -> m5_53  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_40 -> m5_55  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_40 -> m5_57  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_40 -> m5_60  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_40 -> m5_67  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_30 -> m5_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_30 -> m5_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_33 -> m5_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m5_39 -> m5_42  [color=darkseagreen4, key=1, label=index, style=dashed];
m5_39 -> m5_45  [color=darkseagreen4, key=1, label=index, style=dashed];
m5_39 -> m5_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m5_76 -> m5_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m5_41 -> m5_47  [color=darkseagreen4, key=1, label=background, style=dashed];
m5_43 -> m5_47  [color=darkseagreen4, key=1, label=background, style=dashed];
m5_61 -> m5_64  [color=darkseagreen4, key=1, label=rendered, style=dashed];
m5_67 -> m5_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_67 -> m5_69  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_67 -> m5_72  [color=darkseagreen4, key=1, label=item, style=dashed];
m5_98 -> m5_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m5_100 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m5_100 -> m5_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m7_15 -> m7_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m8_37 -> m8_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_123 -> m8_126  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_123 -> m8_127  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m8_123 -> m8_128  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_123 -> m8_130  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m8_123 -> m8_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_123 -> m8_132  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m8_124 -> m8_127  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_124 -> m8_130  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_124 -> m8_132  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_124 -> m8_133  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_124 -> m8_134  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_56 -> m8_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_56 -> m8_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m8_56 -> m8_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_56 -> m8_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m8_56 -> m8_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_57 -> m8_62  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_57 -> m8_66  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_57 -> m8_70  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_57 -> m8_72  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_57 -> m8_75  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_59 -> m8_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m8_63 -> m8_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m8_67 -> m8_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m8_71 -> m8_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m8_94 -> m8_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_94 -> m8_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_94 -> m8_105  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_94 -> m8_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_95 -> m8_103  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_95 -> m8_104  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_95 -> m8_106  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_95 -> m8_107  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_95 -> m8_108  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_95 -> m8_109  [color=darkseagreen4, key=1, label=builder, style=dashed];
m8_99 -> m8_104  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m8_101 -> m8_104  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m8_97 -> m8_102  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m8_97 -> m8_104  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m8_28 -> m8_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_23 -> m8_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_87 -> m8_89  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m9_100 -> m9_36  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_37  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_42  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_50  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_51  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_56  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_60  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_61  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_70  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_71  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_76  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_80  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_81  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_86  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_90  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_91  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m9_100 -> m9_97  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.ServerWatchdogFeature", style=dashed];
m10_18 -> m10_20  [color=darkseagreen4, key=1, label=version, style=dashed];
m10_44 -> m10_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_6  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_10  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_11  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_13  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_14  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_17  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_25  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m10_44 -> m10_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m11_0 -> m11_5  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m13_123 -> m13_126  [color=darkseagreen4, key=1, label=double, style=dashed];
m13_223 -> m13_226  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_157 -> m13_160  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m13_27 -> m13_32  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m13_27 -> m13_34  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m13_30 -> m13_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_246 -> m13_249  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_2 -> m13_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m13_147 -> m13_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_147 -> m13_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_102 -> m13_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_201 -> m13_204  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_109 -> m13_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_47 -> m13_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m13_47 -> m13_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m13_47 -> m13_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m13_54 -> m13_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_56 -> m13_61  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m13_131 -> m13_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m13_131 -> m13_138  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m13_137 -> m13_140  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_228 -> m13_231  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_177 -> m13_177  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_263 -> m13_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_263 -> m13_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_263 -> m13_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_263 -> m13_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_263 -> m13_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_263 -> m13_61  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m14_0 -> m14_5  [color=darkseagreen4, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m14_0 -> m14_7  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m14_0 -> m14_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m14_0 -> m14_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_0 -> m14_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_16 -> m14_20  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m14_17 -> m14_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_21 -> m14_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_48 -> m14_20  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m14_48 -> m14_32  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m14_48 -> m14_36  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m14_48 -> m14_40  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m15_0 -> m15_4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m15_0 -> m15_10  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m15_7 -> m15_10  [color=green, key=1, label=script, style=dashed];
m15_8 -> m15_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_15 -> m15_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_22 -> m15_33  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m17_15 -> m17_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_15 -> m17_20  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_15 -> m17_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_17 -> m17_22  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m17_17 -> m17_24  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m17_17 -> m17_29  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m17_17 -> m17_30  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m17_17 -> m17_32  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m17_17 -> m17_34  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m17_20 -> m17_22  [color=darkseagreen4, key=1, label=linkedCts, style=dashed];
m17_23 -> m17_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_23 -> m17_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredJobs", style=dashed];
m17_18 -> m17_22  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m17_18 -> m17_29  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m17_27 -> m17_29  [color=darkseagreen4, key=1, label=state, style=dashed];
m17_4 -> m17_7  [color=green, key=1, label=job, style=dashed];
m17_4 -> m17_8  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_53 -> m17_56  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_58 -> m17_62  [color=darkseagreen4, key=1, label=latency, style=dashed];
m17_60 -> m17_62  [color=darkseagreen4, key=1, label=result, style=dashed];
m17_59 -> m17_61  [color=darkseagreen4, key=1, label=duration, style=dashed];
m17_59 -> m17_62  [color=darkseagreen4, key=1, label=duration, style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m17_0 -> m17_5  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m17_0 -> m17_7  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m17_0 -> m17_12  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m17_78 -> m17_12  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m17_78 -> m17_16  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m17_78 -> m17_17  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m17_78 -> m17_51  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
}
