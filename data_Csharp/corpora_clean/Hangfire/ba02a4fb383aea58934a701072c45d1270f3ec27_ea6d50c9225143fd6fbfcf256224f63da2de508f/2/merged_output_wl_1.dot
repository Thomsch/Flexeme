digraph  {
n75 [label="HangFire.Tests.States.ScheduledStateFeature", span=""];
n0 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="Entry HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
n1 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
n2 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Scheduled state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
n5 [cluster="Unk.GetTestRunner", label="Entry Unk.GetTestRunner", span=""];
n3 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
n6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
n7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
n4 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="Exit HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
n8 [cluster="Unk.OnFeatureStart", label="Entry Unk.OnFeatureStart", span=""];
n9 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureTearDown()", label="Entry HangFire.Tests.States.ScheduledStateFeature.FeatureTearDown()", span="39-39"];
n10 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureTearDown()", label="testRunner.OnFeatureEnd()", span="41-41"];
n11 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureTearDown()", label="testRunner = null", span="42-42"];
n13 [cluster="Unk.OnFeatureEnd", label="Entry Unk.OnFeatureEnd", span=""];
n12 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureTearDown()", label="Exit HangFire.Tests.States.ScheduledStateFeature.FeatureTearDown()", span="39-39"];
n14 [cluster="HangFire.Tests.States.ScheduledStateFeature.TestInitialize()", label="Entry HangFire.Tests.States.ScheduledStateFeature.TestInitialize()", span="46-46"];
n15 [cluster="HangFire.Tests.States.ScheduledStateFeature.TestInitialize()", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Scheduled state''))", span="48-49"];
n16 [cluster="HangFire.Tests.States.ScheduledStateFeature.TestInitialize()", label="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(null)", span="51-51"];
n17 [cluster="HangFire.Tests.States.ScheduledStateFeature.TestInitialize()", label="Exit HangFire.Tests.States.ScheduledStateFeature.TestInitialize()", span="46-46"];
n18 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioTearDown()", label="Entry HangFire.Tests.States.ScheduledStateFeature.ScenarioTearDown()", span="56-56"];
n19 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioTearDown()", label="testRunner.OnScenarioEnd()", span="58-58"];
n20 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioTearDown()", label="Exit HangFire.Tests.States.ScheduledStateFeature.ScenarioTearDown()", span="56-56"];
n21 [cluster="Unk.OnScenarioEnd", label="Entry Unk.OnScenarioEnd", span=""];
n22 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="Entry HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
n23 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
n24 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="Exit HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
n25 [cluster="Unk.OnScenarioStart", label="Entry Unk.OnScenarioStart", span=""];
n26 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", label="Entry HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", span="66-66"];
n27 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", label="testRunner.CollectScenarioErrors()", span="68-68"];
n28 [cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", label="Exit HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", span="66-66"];
n29 [cluster="Unk.CollectScenarioErrors", label="Entry Unk.CollectScenarioErrors", span=""];
n30 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", label="Entry HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", span="71-71"];
n31 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
n32 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", label="testRunner.And(''the Scheduled state with the date set to tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
n34 [cluster="Unk.Given", label="Entry Unk.Given", span=""];
n33 [cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", label="Exit HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", span="71-71"];
n35 [cluster="Unk.And", label="Entry Unk.And", span=""];
n36 [cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", label="Entry HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", span="85-85"];
n37 [cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name is \'Scheduled\''', ((string[])(null)))", span="87-87"];
n38 [cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", label="this.ScenarioSetup(scenarioInfo)", span="89-89"];
n43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
n39 [cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", label="this.FeatureBackground()", span="91-91"];
n40 [cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", label="testRunner.Then(''the state name is equal to \'Scheduled\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
n41 [cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", label="this.ScenarioCleanup()", span="95-95"];
n44 [cluster="Unk.Then", label="Entry Unk.Then", span=""];
n42 [cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", label="Exit HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", span="85-85"];
n45 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="Entry HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102"];
n46 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It has the correct properties set'', ((string[])(null)))", span="104-104"];
n47 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
n48 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="this.FeatureBackground()", span="108-108"];
n49 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112"];
n50 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="table1.AddRow(new string[] {\r\n                        ''ScheduledAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115"];
n55 [cluster="TechTalk.SpecFlow.Table.cstr", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
n51 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="table1.AddRow(new string[] {\r\n                        ''EnqueueAt'',\r\n                        ''<Tomorrow timestamp>''})", span="116-118"];
n52 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", color=red, community=0, label="0: testRunner.Then(''properties table contains the following items:'', ((string)(null)), table1, ''Then '')", span="120-120"];
n56 [cluster="Unk.AddRow", label="Entry Unk.AddRow", span=""];
n53 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", color=red, community=0, label="0: this.ScenarioCleanup()", span="122-122"];
n54 [cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", label="Exit HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102"];
n57 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="Entry HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", span="129-129"];
n58 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should add the job to the schedule at tomorrow'', ((string[])(null)))", span="131-131"];
n59 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="this.ScenarioSetup(scenarioInfo)", span="133-133"];
n60 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="this.FeatureBackground()", span="135-135"];
n61 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137"];
n62 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="testRunner.Then(''the schedule contains the job that will be enqueued tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139"];
n65 [cluster="Unk.When", label="Entry Unk.When", span=""];
n63 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="this.ScenarioCleanup()", span="141-141"];
n64 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", label="Exit HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", span="129-129"];
n66 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="Entry HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", span="148-148"];
n67 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should remove the job from the schedule'', ((string[])(null)))", span="150-150"];
n68 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="this.ScenarioSetup(scenarioInfo)", span="152-152"];
n69 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="this.FeatureBackground()", span="154-154"];
n70 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
n71 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="158-158"];
n72 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="testRunner.Then(''the schedule does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="160-160"];
n73 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="this.ScenarioCleanup()", span="162-162"];
n74 [cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", label="Exit HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", span="148-148"];
d24 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", color=green, community=0, label="0: Logger.InfoFormat(''    Worker count: {0}.'', options.WorkerCount)", span="101-101"];
d8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="74-74"];
d23 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", color=green, community=0, label="0: Logger.Info(''Using the following options for Hangfire Server:'')", span="100-100"];
d25 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", color=green, community=0, label="0: Logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', options.Queues.Select(x => ''''' + x + ''''')))", span="102-102"];
d36 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
d26 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", color=green, community=0, label="0: Logger.InfoFormat(''    Shutdown timeout: {0}.'', options.ShutdownTimeout)", span="103-103"];
d38 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d39 [cluster="Unk.Join", label="Entry Unk.Join", span=""];
d42 [cluster="lambda expression", label="Entry lambda expression", span="102-102"];
d27 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", color=green, community=0, label="0: Logger.InfoFormat(''    Schedule polling interval: {0}.'', options.SchedulePollingInterval)", span="104-104"];
d28 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="_processingServer = new BackgroundProcessingServer(\r\n                storage, \r\n                processes, \r\n                properties, \r\n                GetProcessingServerOptions())", span="106-110"];
d22 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage.WriteOptionsToLog(Logger)", span="98-98"];
d35 [cluster="Hangfire.Logging.ILog.Info(string)", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
d43 [cluster="lambda expression", color=green, community=0, label="0: ''''' + x + '''''", span="102-102"];
d44 [cluster="lambda expression", label="Exit lambda expression", span="102-102"];
d53 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", color=green, community=0, label="0: processes.Add(new Worker(\r\n                    _options.Queues, \r\n                    new BackgroundJobPerformer(_options.FilterProvider), \r\n                    new BackgroundJobStateChanger(_options.FilterProvider)))", span="125-128"];
d73 [label="Hangfire.BackgroundJobServer", span=""];
d50 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var processes = new List<IBackgroundProcess>()", span="121-121"];
d52 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="i < _options.WorkerCount", span="123-123"];
d54 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="i++", span="123-123"];
d59 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="48-48"];
d60 [cluster="Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider)", span="34-34"];
d61 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
d62 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d56 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", color=green, community=0, label="0: processes.Add(new RecurringJobScheduler(new BackgroundJobFactory(_options.FilterProvider)))", span="132-132"];
d55 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="processes.Add(new DelayedJobScheduler(_options.SchedulePollingInterval, new BackgroundJobStateChanger(_options.FilterProvider)))", span="131-131"];
d57 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="return processes;", span="134-134"];
d64 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
d65 [cluster="Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", span="35-35"];
d29 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="74-74"];
d9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage == null", span="79-79"];
d11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="options == null", span="80-80"];
d13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="additionalProcesses == null", span="81-81"];
d15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="_options = options", span="83-83"];
d18 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(additionalProcesses)", span="87-87"];
d19 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="89-93"];
d21 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="96-96"];
d16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var processes = new List<IBackgroundProcess>()", span="85-85"];
d40 [cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", span="65-65"];
d41 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="Entry Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="137-137"];
d37 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68"];
d20 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info(''Starting Hangfire Server'')", span="95-95"];
d47 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Logger.Info(''Hangfire Server stopped.'')", span="116-116"];
d17 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(GetRequiredProcesses())", span="86-86"];
d46 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="_processingServer.Dispose()", span="115-115"];
d66 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="return new BackgroundProcessingServerOptions\r\n            {\r\n                ShutdownTimeout = _options.ShutdownTimeout,\r\n                HeartbeatInterval = _options.HeartbeatInterval,\r\n                ServerCheckInterval = _options.ServerWatchdogOptions != null\r\n                    ? _options.ServerWatchdogOptions.CheckInterval\r\n                    : _options.ServerCheckInterval,\r\n                ServerTimeout = _options.ServerWatchdogOptions != null\r\n                    ? _options.ServerWatchdogOptions.ServerTimeout\r\n                    : _options.ServerTimeout\r\n            };", span="139-149"];
d32 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="Entry Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="119-119"];
d51 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var i = 0", span="123-123"];
d31 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d63 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
d58 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="Exit Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="119-119"];
d10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(''storage'');", span="79-79"];
d12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(''options'');", span="80-80"];
d14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(''additionalProcesses'');", span="81-81"];
d33 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
d34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d67 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="Exit Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="137-137"];
d48 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="113-113"];
d45 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="113-113"];
d49 [cluster="System.IDisposable.Dispose()", label="Entry System.IDisposable.Dispose()", span="0-0"];
d68 [cluster="Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", label="Entry Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", span="22-22"];
d30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_20 [cluster="Unk.Select", file="BackgroundJobServerOptions.cs", label="Entry Unk.Select", span=""];
m0_26 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="BackgroundJobServerOptions.cs", label="_payload = _fetcher.DequeueJob(new CancellationTokenSource().Token)", span="46-46"];
m0_27 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="44-44"];
m0_28 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="BackgroundJobServerOptions.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m0_39 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59"];
m0_25 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="44-44"];
m0_44 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="71-71"];
m0_45 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="BackgroundJobServerOptions.cs", label="Assert.IsNull(_payload)", span="73-73"];
m0_46 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="71-71"];
m0_48 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="77-77"];
m0_50 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", color=green, community=0, file="BackgroundJobServerOptions.cs", label="0: Then(String.Format(''the '{0}' queue is empty'', queue))", span="81-81"];
m0_49 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="BackgroundJobServerOptions.cs", label=_queues, span="79-79"];
m0_51 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="77-77"];
m0_3 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="Log.Info(''Start installing Hangfire SQL objects...'')", span="39-39"];
m0_29 [cluster="Unk.>", file="BackgroundJobServerOptions.cs", label="Entry Unk.>", span=""];
m0_10 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="connection.Execute(script)", span="56-56"];
m0_16 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="Log.Info(''Hangfire SQL objects installed.'')", span="72-72"];
m0_11 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label=SqlException, span="59-59"];
m0_14 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="throw;", span="67-67"];
m0_13 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="Log.WarnException(''Deadlock occurred during automatic migration execution. Retrying...'', ex)", span="63-63"];
m0_12 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="ex.ErrorCode == 1205", span="61-61"];
m0_15 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="i++", span="52-52"];
m0_17 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m0_23 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="x[''Queue'']", span="40-40"];
m0_0 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m0_1 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="connection == null", span="37-37"];
m0_2 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="throw new ArgumentNullException(''connection'');", span="37-37"];
m0_8 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="var i = 0", span="52-52"];
m0_9 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="i < RetryAttempts", span="52-52"];
m0_40 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="BackgroundJobServerOptions.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m0_47 [cluster="Unk.IsNull", file="BackgroundJobServerOptions.cs", label="Entry Unk.IsNull", span=""];
m0_18 [cluster="Unk.Parse", file="BackgroundJobServerOptions.cs", label="Entry Unk.Parse", span=""];
m0_38 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="BackgroundJobServerOptions.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="61-61"];
m0_37 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59"];
m0_5 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="43-43"];
m0_6 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''Hangfire.SqlServer.Install.sql'')", span="46-48"];
m0_7 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundJobServerOptions.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 4;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="50-50"];
m0_41 [cluster="System.IO.StreamReader.ReadToEnd()", file="BackgroundJobServerOptions.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m0_42 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="BackgroundJobServerOptions.cs", label="Assert.AreEqual(jobId, _payload.Id)", span="67-67"];
m0_43 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="65-65"];
m0_4 [cluster="Unk.Given", file="BackgroundJobServerOptions.cs", label="Entry Unk.Given", span=""];
m0_22 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="40-40"];
m0_31 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundJobServerOptions.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="83-83"];
m0_33 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", color=red, community=0, file="BackgroundJobServerOptions.cs", label="0: throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="87-90"];
m0_32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundJobServerOptions.cs", label="stream == null", span="85-85"];
m0_34 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", color=red, community=0, file="BackgroundJobServerOptions.cs", label="0: var reader = new StreamReader(stream)", span="93-93"];
m0_35 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundJobServerOptions.cs", label="return reader.ReadToEnd();", span="95-95"];
m0_36 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81"];
m0_24 [cluster="Unk.Execute", file="BackgroundJobServerOptions.cs", label="Entry Unk.Execute", span=""];
m0_19 [cluster="Unk.Format", file="BackgroundJobServerOptions.cs", label="Entry Unk.Format", span=""];
m0_52 [cluster="Unk.Then", file="BackgroundJobServerOptions.cs", label="Entry Unk.Then", span=""];
m0_30 [cluster="Unk.Single", file="BackgroundJobServerOptions.cs", label="Entry Unk.Single", span=""];
m0_21 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="BackgroundJobServerOptions.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m0_53 [file="BackgroundJobServerOptions.cs", label="HangFire.Tests.JobFetcherSteps", span=""];
m2_16 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m2_17 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", color=red, community=0, file="CleanDatabaseAttribute.cs", label="0: _transaction.Dispose()", span="47-47"];
m2_18 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m2_0 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", span="18-18"];
m2_1 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", color=green, community=0, file="CleanDatabaseAttribute.cs", label="0: Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", span="18-18"];
m2_2 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", color=green, community=0, file="CleanDatabaseAttribute.cs", label="0: Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="23-23"];
m2_3 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="_isolationLevel = isolationLevel", span="25-25"];
m2_9 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", color=green, community=0, file="CleanDatabaseAttribute.cs", label="0: _sqlObjectInstalled = true", span="35-35"];
m2_7 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="!_sqlObjectInstalled", span="32-32"];
m2_10 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", color=red, community=1, file="CleanDatabaseAttribute.cs", label="0: _transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = _isolationLevel })", span="38-40"];
m2_11 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", color=green, community=0, file="CleanDatabaseAttribute.cs", label="0: Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="28-28"];
m2_12 [cluster="System.Threading.Monitor.Enter(object)", color=green, community=0, file="CleanDatabaseAttribute.cs", label="0: Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m2_5 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="28-28"];
m2_4 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="23-23"];
m2_8 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", color=red, community=0, file="CleanDatabaseAttribute.cs", label="0: RecreateDatabaseAndInstallObjects()", span="34-34"];
m2_6 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Monitor.Enter(GlobalLock)", span="30-30"];
m2_13 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", span="56-56"];
m2_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m2_27 [cluster="string.Format(string, object)", file="CleanDatabaseAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_30 [cluster="Unk.Execute", file="CleanDatabaseAttribute.cs", label="Entry Unk.Execute", span=""];
m2_19 [cluster="Unk.Dispose", file="CleanDatabaseAttribute.cs", label="Entry Unk.Dispose", span=""];
m2_32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m2_28 [cluster="SqlConnection.cstr", file="CleanDatabaseAttribute.cs", label="Entry SqlConnection.cstr", span=""];
m2_29 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", span="21-21"];
m2_15 [cluster="TransactionOptions.cstr", file="CleanDatabaseAttribute.cs", label="Hangfire.Dashboard.RequestDispatcherContext", span=""];
m2_26 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", span="16-16"];
m2_14 [cluster="TransactionScope.cstr", file="CleanDatabaseAttribute.cs", label="Entry TransactionScope.cstr", span=""];
m2_20 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="var recreateDatabaseSql = String.Format(\r\n                @''if db_id('{0}') is null create database [{0}] COLLATE SQL_Latin1_General_CP1_CS_AS'',\r\n                ConnectionUtils.GetDatabaseName())", span="58-60"];
m2_21 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetMasterConnectionString())", span="62-63"];
m2_22 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="connection.Execute(recreateDatabaseSql)", span="65-65"];
m2_23 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetConnectionString())", span="68-69"];
m2_24 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="SqlServerObjectsInstaller.Install(connection)", span="71-71"];
m2_25 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", span="56-56"];
m2_33 [file="CleanDatabaseAttribute.cs", label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", span=""];
m3_9 [cluster="HangFire.BackgroundJobServer.Start()", file="DelayedJobScheduler.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="66-66"];
m3_2 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="DelayedJobScheduler.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44"];
m3_3 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="DelayedJobScheduler.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44"];
m3_16 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="DelayedJobScheduler.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69"];
m3_17 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="DelayedJobScheduler.cs", label="Stop()", span="71-71"];
m3_18 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="DelayedJobScheduler.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69"];
m3_0 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="DelayedJobScheduler.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33"];
m3_1 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="DelayedJobScheduler.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33"];
m3_8 [cluster="Unk.RegisterObject", file="DelayedJobScheduler.cs", label="Entry Unk.RegisterObject", span=""];
m3_14 [cluster="HangFire.BackgroundJobServer.Stop()", file="DelayedJobScheduler.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="72-72"];
m3_15 [cluster="Unk.UnregisterObject", file="DelayedJobScheduler.cs", label="Entry Unk.UnregisterObject", span=""];
m3_4 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="DelayedJobScheduler.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Start()", span="53-53"];
m3_5 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="DelayedJobScheduler.cs", label="HostingEnvironment.RegisterObject(this)", span="55-55"];
m3_6 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="DelayedJobScheduler.cs", label="base.Start()", span="56-56"];
m3_7 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="DelayedJobScheduler.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Start()", span="53-53"];
m3_10 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="DelayedJobScheduler.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63"];
m3_11 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="DelayedJobScheduler.cs", label="base.Stop()", span="65-65"];
m3_12 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="DelayedJobScheduler.cs", label="HostingEnvironment.UnregisterObject(this)", span="66-66"];
m3_13 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="DelayedJobScheduler.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63"];
m3_19 [file="DelayedJobScheduler.cs", label="HangFire.Web.AspNetBackgroundJobServer", span=""];
m4_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="20-20"];
m4_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="20-20"];
m5_12 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82"];
m5_13 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", span="84-84"];
m5_14 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="85-85"];
m5_15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="86-86"];
m5_16 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="87-87"];
m5_17 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="88-88"];
m5_18 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82"];
m5_8 [cluster="System.Math.Min(int, int)", file="RecurringJobScheduler.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m5_10 [cluster="System.TimeSpan.FromSeconds(double)", file="RecurringJobScheduler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m5_21 [cluster="Unk.Join", file="RecurringJobScheduler.cs", label="Entry Unk.Join", span=""];
m5_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
m5_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="35-35"];
m5_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="ServerName = Environment.GetEnvironmentVariable(''COMPUTERNAME'')", span="36-36"];
m5_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="37-37"];
m5_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="38-38"];
m5_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="39-39"];
m5_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="ServerWatchdogOptions = new ServerWatchdogOptions()", span="41-41"];
m5_7 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
m5_11 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
m5_22 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="86-86"];
m5_23 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="''''' + x + '''''", span="86-86"];
m5_24 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="86-86"];
m5_20 [cluster="Unk.Select", file="RecurringJobScheduler.cs", label="Entry Unk.Select", span=""];
m5_9 [cluster="System.Environment.GetEnvironmentVariable(string)", file="RecurringJobScheduler.cs", label="Entry System.Environment.GetEnvironmentVariable(string)", span="0-0"];
m5_25 [file="RecurringJobScheduler.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m6_0 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="ServerJobCancellationToken.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m6_1 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="ServerJobCancellationToken.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m6_2 [cluster="Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ServerJobCancellationToken.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="41-41"];
m6_3 [cluster="Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ServerJobCancellationToken.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="41-41"];
m7_29 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="47-47"];
m7_72 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="103-103"];
m7_73 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="_stateData.Name = ''NotProcessing''", span="105-105"];
m7_74 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="106-106"];
m7_75 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="108-109"];
m7_76 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="103-103"];
m7_15 [cluster="Unk.GetStateData", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.GetStateData", span=""];
m7_21 [cluster="Unk.Equal", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Equal", span=""];
m7_6 [cluster="Hangfire.Storage.StateData.StateData()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m7_50 [cluster="Unk.DoesNotThrow", file="ServerJobCancellationTokenFacts.cs", label="HangFire.Tests.JobActivatorFeature", span=""];
m7_56 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m7_20 [cluster="Unk.>", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.>", span=""];
m7_22 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="40-41"];
m7_23 [cluster="lambda expression", color=red, community=0, file="ServerJobCancellationTokenFacts.cs", label="0: new ServerJobCancellationToken(\r\n                    null, JobId, WorkerId, _cts.Token)", span="40-41"];
m7_24 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="40-41"];
m7_51 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="84-84"];
m7_52 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="_cts.Cancel()", span="86-86"];
m7_53 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="87-87"];
m7_54 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="89-90"];
m7_55 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="84-84"];
m7_16 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37"];
m7_17 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="ServerJobCancellationTokenFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, JobId, WorkerId, _cts.Token))", span="39-41"];
m7_18 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="43-43"];
m7_19 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37"];
m7_26 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", span="65-65"];
m7_27 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", color=red, community=0, file="ServerJobCancellationTokenFacts.cs", label="0: testRunner.CollectScenarioErrors()", span="67-67"];
m7_28 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", file="ServerJobCancellationTokenFacts.cs", label="Exit HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", span="65-65"];
m7_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_40 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="62-63"];
m7_9 [cluster="Unk.Setup", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Setup", span=""];
m7_61 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="94-94"];
m7_62 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", span="96-96"];
m7_63 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="97-97"];
m7_64 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="99-99"];
m7_65 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="94-94"];
m7_34 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="testRunner.When(''I call the `Activate` method with the \'TestJob\' type argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="83-83"];
m7_35 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", color=red, community=0, file="ServerJobCancellationTokenFacts.cs", label="0: testRunner.Then(''Activator should return an instance of the \'TestJob\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="85-85"];
m7_36 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="this.ScenarioCleanup()", span="87-87"];
m7_37 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="Exit HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", span="73-73"];
m7_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m7_0 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m7_1 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_stateData = new StateData\r\n            {\r\n                Name = ProcessingState.StateName,\r\n                Data = new Dictionary<string, string>\r\n                {\r\n                    { ''WorkerId'', WorkerId },\r\n                }\r\n            }", span="21-28"];
m7_2 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="30-30"];
m7_3 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="31-31"];
m7_4 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_cts = new CancellationTokenSource()", span="33-33"];
m7_5 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m7_85 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="119-119"];
m7_12 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="31-31"];
m7_13 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="x.GetStateData(JobId)", span="31-31"];
m7_14 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="31-31"];
m7_30 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", span="73-73"];
m7_31 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", color=red, community=0, file="ServerJobCancellationTokenFacts.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Activator returns the job instance when its type has default constructor'', ((string[])(null)))", span="75-75"];
m7_32 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="77-77"];
m7_38 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ServerJobCancellationTokenFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m7_39 [cluster="Unk.Given", color=red, community=0, file="ServerJobCancellationTokenFacts.cs", label="0: Entry Unk.Given", span=""];
m7_58 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="90-90"];
m7_57 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="90-90"];
m7_59 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="90-90"];
m7_66 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="96-96"];
m7_70 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="99-99"];
m7_69 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="99-99"];
m7_67 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="x.GetStateData(It.IsAny<string>())", span="96-96"];
m7_68 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="96-96"];
m7_71 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="99-99"];
m7_78 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="109-109"];
m7_77 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="109-109"];
m7_79 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="109-109"];
m7_86 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="119-119"];
m7_87 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="119-119"];
m7_80 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="113-113"];
m7_81 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="_stateData.Data[''WorkerId''] = ''999''", span="115-115"];
m7_82 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="116-116"];
m7_83 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="118-119"];
m7_84 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="113-113"];
m7_33 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="testRunner.Given(''the following job type:'', ''public class TestJob : BackgroundJob\r\n{\r\n    public override void Perform()\r\n    '' +\r\n                    ''{\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="80-81"];
m7_41 [cluster="Unk.Then", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Then", span=""];
m7_42 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", span="94-94"];
m7_43 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Activator throws an exception when the specified job type has no default construc'' +\r\n                    ''tor'', ((string[])(null)))", span="96-97"];
m7_44 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="99-99"];
m7_60 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m7_25 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m7_45 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="testRunner.Given(''the following job type:'', ''public class CustomConstructorJob : BackgroundJob\r\n{\r\n    public CustomConstructo'' +\r\n                    ''rJob(string parameter)\r\n    {\r\n    }\r\n\r\n    public override void Perform()\r\n    '' +\r\n                    ''{\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-104"];
m7_88 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", color=red, community=0, file="ServerJobCancellationTokenFacts.cs", label="0: return new ServerJobCancellationToken(_connection.Object, JobId, WorkerId, _cts.Token);", span="124-124"];
m7_89 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="122-122"];
m7_46 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="testRunner.When(''I call the `Activate` method with the \'CustomConstructorJob\' type argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m7_47 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="testRunner.Then(''Activator throws a \'System.MissingMethodException\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m7_48 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="this.ScenarioCleanup()", span="110-110"];
m7_49 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="ServerJobCancellationTokenFacts.cs", label="Exit HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", span="94-94"];
m7_10 [cluster="Unk.Returns", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Returns", span=""];
m7_8 [cluster="Mock<IStorageConnection>.cstr", file="ServerJobCancellationTokenFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_90 [file="ServerJobCancellationTokenFacts.cs", label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span=""];
m7_91 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m7_92 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m7_93 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m7_94 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m8_17 [cluster="HangFire.Server.ServerHeartbeat.ToString()", file="SqlServerDistributedLock.cs", label="Entry HangFire.Server.ServerHeartbeat.ToString()", span="47-47"];
m8_18 [cluster="HangFire.Server.ServerHeartbeat.ToString()", file="SqlServerDistributedLock.cs", label="return ''Server Heartbeat'';", span="49-49"];
m8_19 [cluster="HangFire.Server.ServerHeartbeat.ToString()", file="SqlServerDistributedLock.cs", label="Exit HangFire.Server.ServerHeartbeat.ToString()", span="47-47"];
m8_9 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLock.cs", label="Entry HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37"];
m8_10 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLock.cs", label="var connection = _storage.GetConnection()", span="39-39"];
m8_12 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLock.cs", label="cancellationToken.WaitHandle.WaitOne(HeartbeatInterval)", span="44-44"];
m8_11 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLock.cs", label="connection.Heartbeat(_serverId)", span="41-41"];
m8_13 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLock.cs", label="Exit HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37"];
m8_16 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m8_15 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="SqlServerDistributedLock.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="43-43"];
m8_0 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m8_1 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="storage == null", span="30-30"];
m8_3 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="serverId == null", span="31-31"];
m8_5 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="_storage = storage", span="33-33"];
m8_6 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="_serverId = serverId", span="34-34"];
m8_2 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="throw new ArgumentNullException(''storage'');", span="30-30"];
m8_4 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="throw new ArgumentNullException(''serverId'');", span="31-31"];
m8_7 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="SqlServerDistributedLock.cs", label="Exit HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m8_14 [cluster="HangFire.JobStorage.GetConnection()", file="SqlServerDistributedLock.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m8_20 [file="SqlServerDistributedLock.cs", label="HangFire.Server.ServerHeartbeat", span=""];
m9_50 [cluster="Hangfire.Server.Worker.ToString()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Server.Worker.ToString()", span="121-121"];
m9_51 [cluster="Hangfire.Server.Worker.ToString()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: return ''Worker #'' + _context.WorkerNumber;", span="123-123"];
m9_52 [cluster="Hangfire.Server.Worker.ToString()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.Server.Worker.ToString()", span="121-121"];
m9_15 [cluster="HangFire.Tests.Redis.AfterRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="Exit HangFire.Tests.Redis.AfterRedisScenario()", span="34-34"];
m9_16 [cluster="Unk.Dispose", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.Dispose", span=""];
m9_17 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var fetchedJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="54-54"];
m9_18 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var stateMachine = _stateMachineFactory.Create(connection)", span="58-58"];
m9_21 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var processingState = new ProcessingState(_context.ServerId, _context.WorkerNumber)", span="65-65"];
m9_26 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var jobCancellationToken = new ServerJobCancellationToken(\r\n                        fetchedJob.JobId, connection, _context, cancellationToken)", span="88-89"];
m9_27 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var state = PerformJob(fetchedJob.JobId, connection, jobCancellationToken)", span="91-91"];
m9_23 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="75-75"];
m9_22 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="!stateMachine.ChangeState(\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token)", span="67-71"];
m9_24 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="fetchedJob.RemoveFromQueue()", span="78-78"];
m9_29 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="stateMachine.ChangeState(fetchedJob.JobId, state, new[] { ProcessingState.StateName })", span="96-96"];
m9_30 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="fetchedJob.RemoveFromQueue()", span="104-104"];
m9_32 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="fetchedJob.RemoveFromQueue()", span="111-111"];
m9_34 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="fetchedJob.Requeue()", span="115-115"];
m9_19 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="60-60"];
m9_20 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        cancellationToken,\r\n                        timeoutCts.Token)", span="61-63"];
m9_28 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="state != null", span="93-93"];
m9_25 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="return;", span="79-79"];
m9_31 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label=JobAbortedException, span="109-109"];
m9_33 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label=Exception, span="113-113"];
m9_35 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="throw;", span="116-116"];
m9_36 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="51-51"];
m9_73 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m9_77 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m9_37 [cluster="Hangfire.JobStorage.GetConnection()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m9_11 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerDistributedLockFacts.cs", label="_process = process", span="47-47"];
m9_39 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m9_40 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m9_76 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28"];
m9_75 [cluster="System.Diagnostics.Stopwatch.Stop()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m9_70 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m9_13 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="34-34"];
m9_14 [cluster="HangFire.Tests.Redis.AfterRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="Client.Dispose()", span="38-38"];
m9_44 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m9_46 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32"];
m9_45 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m9_49 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m9_47 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="126-126"];
m9_53 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var jobData = connection.GetJobData(jobId)", span="130-130"];
m9_54 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: jobData == null", span="131-131"];
m9_56 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="jobData.EnsureLoaded()", span="140-140"];
m9_57 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, token)", span="142-143"];
m9_58 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="145-145"];
m9_60 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var result = _process.Run(performContext, jobData.Job)", span="148-148"];
m9_55 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="return null;", span="137-137"];
m9_59 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="var duration = Stopwatch.StartNew()", span="146-146"];
m9_62 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="151-151"];
m9_61 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="duration.Stop()", span="149-149"];
m9_64 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="throw;", span="155-155"];
m9_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="159-162"];
m9_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                };", span="166-169"];
m9_63 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label=OperationCanceledException, span="153-153"];
m9_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label=JobPerformanceException, span="157-157"];
m9_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label=Exception, span="164-164"];
m9_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="126-126"];
m9_12 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="SqlServerDistributedLockFacts.cs", label="_stateMachineFactory = stateMachineFactory", span="48-48"];
m9_72 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35"];
m9_0 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="Entry HangFire.Tests.Redis.BeforeRedisScenario()", span="20-20"];
m9_9 [cluster="System.Threading.Monitor.Enter(object)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m9_10 [cluster="ConsoleLogFactory.cstr", file="SqlServerDistributedLockFacts.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m9_7 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="RedisFactory.Port = RedisPort", span="30-30"];
m9_1 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="Monitor.Enter(_lock)", span="22-22"];
m9_3 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="Client = new RedisClient(RedisHost, RedisPort, null, RedisDb)", span="25-25"];
m9_5 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="RedisFactory.Db = RedisDb", span="28-28"];
m9_8 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="Exit HangFire.Tests.Redis.BeforeRedisScenario()", span="20-20"];
m9_2 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="LogManager.LogFactory = new ConsoleLogFactory()", span="23-23"];
m9_4 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="Client.FlushDb()", span="26-26"];
m9_6 [cluster="HangFire.Tests.Redis.BeforeRedisScenario()", file="SqlServerDistributedLockFacts.cs", label="RedisFactory.Host = RedisHost", span="29-29"];
m9_74 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20"];
m9_48 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m9_43 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="26-26"];
m9_38 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m9_71 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m9_42 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m9_41 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m9_78 [file="SqlServerDistributedLockFacts.cs", label="Hangfire.Server.Worker", span=""];
m10_99 [cluster="string.Format(string, object, object, object)", file="SqlServerStorageFacts.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m10_90 [cluster="HangFire.Web.RazorPage.Write(object)", file="SqlServerStorageFacts.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m10_92 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerStorageFacts.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="553-553"];
m10_89 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SqlServerStorageFacts.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m10_95 [cluster="string.IsNullOrEmpty(string)", file="SqlServerStorageFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m10_94 [cluster="Unk.StartsWith", file="SqlServerStorageFacts.cs", label="Entry Unk.StartsWith", span=""];
m10_0 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Entry HangFire.Web.Pages.LayoutPage.Execute()", span="39-39"];
m10_1 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=red, community=0, file="SqlServerStorageFacts.cs", label="0: WriteLiteral(''\r\n'')", span="43-43"];
m10_2 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''<!DOCTYPE html>\r\n\r\n<html lang=\''ru\''>\r\n<head>\r\n    <title>'')", span="49-49"];
m10_3 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Title)", span="54-54"];
m10_4 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral('' - HangFire</title>\r\n    <meta charset=\''utf-8\'' />\r\n    <meta name=\''viewport\'' cont'' +\r\n''ent=\''width=device-width, initial-scale=1.0\''>\r\n    <link rel=\''stylesheet\'' href=\'''')", span="59-60"];
m10_5 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/css/styles.css''))", span="65-65"];
m10_6 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(@'''''' />\r\n</head>\r\n    <body>\r\n        <!-- Wrap all page content here -->\r\n        <div id=''''wrap''''>\r\n\r\n            <!-- Fixed navbar -->\r\n            <div class=''''navbar navbar-default navbar-static-top''''>\r\n                <div class=''''container''''>\r\n                    <div class=''''navbar-header''''>\r\n                        <button type=''''button'''' class=''''navbar-toggle'''' data-toggle=''''collapse'''' data-target=''''.navbar-collapse''''>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                        </button>\r\n                        <a class=''''navbar-brand'''' href='''''')", span="70-85"];
m10_7 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/''))", span="90-90"];
m10_8 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(@''''''>HangFire Monitor</a>\r\n                    </div>\r\n                    <div class=''''collapse navbar-collapse''''>\r\n                        <ul class=''''nav navbar-nav navbar-right''''>\r\n                            <li>\r\n                                <a href=''''/''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n\r\n            <div class=''''container''''>\r\n                <div class=''''col-md-3''''>\r\n'')", span="95-115"];
m10_9 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="var statistics = JobStorage.GetStatistics()", span="120-120"];
m10_10 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                    <div id=\''stats\'' class=\''list-group\''>\r\n                      '' +\r\n''  <a class=\''list-group-item '')", span="125-126"];
m10_19 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(statistics.Servers)", span="173-173"];
m10_25 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(statistics.Enqueued)", span="207-207"];
m10_27 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(statistics.Queues)", span="219-219"];
m10_33 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(statistics.Scheduled)", span="256-256"];
m10_39 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(statistics.Processing)", span="289-289"];
m10_45 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(statistics.Succeeded)", span="322-322"];
m10_51 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(statistics.Failed)", span="355-355"];
m10_11 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.PathInfo.Equals(''/'') ? ''active'' : null)", span="131-131"];
m10_12 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="136-136"];
m10_13 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/''))", span="141-141"];
m10_14 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''glyphicon glyphicon-dashboard\''></spa'' +\r\n''n>\r\n                            Dashboard\r\n                        </a>\r\n\r\n     '' +\r\n''                   <a class=\''list-group-item '')", span="146-148"];
m10_15 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.PathInfo.Equals(''/servers'') ? ''active'' : null)", span="153-153"];
m10_16 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="158-158"];
m10_17 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/servers''))", span="163-163"];
m10_18 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>'')", span="168-168"];
m10_20 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''</span>\r\n                            <span class=\''glyphicon glyphicon-hdd\''></span'' +\r\n''>\r\n                            Active Servers\r\n                        </a>\r\n\r\n '' +\r\n''                       <a class=\''list-group-item '')", span="178-180"];
m10_21 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.PathInfo.StartsWith(''/queues'') ? ''active'' : null)", span="185-185"];
m10_22 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="190-190"];
m10_23 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/queues''))", span="195-195"];
m10_24 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>\r\n  '' +\r\n''                              <span id=\''stats-enqueued\'' title=\''Enqueued jobs cou'' +\r\n''nt\''>\r\n                                    '')", span="200-202"];
m10_26 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                                </span>\r\n                                / \r\n  '' +\r\n''                              <span id=\''stats-queues\'' title=\''Queues count\''>\r\n   '' +\r\n''                                 '')", span="212-214"];
m10_28 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(@''\r\n                                </span>\r\n                            </span>\r\n                            <span class=''''glyphicon glyphicon-inbox''''></span>\r\n                            Jobs & Queues\r\n                        </a>\r\n                        <a class=''''list-group-item stats-indent '')", span="224-230"];
m10_29 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.PathInfo.Equals(''/scheduled'') ? ''active'' : null)", span="235-235"];
m10_30 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="240-240"];
m10_31 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/scheduled''))", span="245-245"];
m10_32 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-scheduled\'' class=\''label label-inf'' +\r\n''o pull-right\''>\r\n                                '')", span="250-251"];
m10_34 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Scheduled\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="261-263"];
m10_35 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.PathInfo.Equals(''/processing'') ? ''active'' : null)", span="268-268"];
m10_36 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="273-273"];
m10_37 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/processing''))", span="278-278"];
m10_38 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-workers\'' class=\''label label-warni'' +\r\n''ng pull-right\''>\r\n                                '')", span="283-284"];
m10_40 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Processing\r\n  '' +\r\n''                      </a>\r\n                        <a class=\''list-group-item st'' +\r\n''ats-indent '')", span="294-296"];
m10_41 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.PathInfo.Equals(''/succeeded'') ? ''active'' : null)", span="301-301"];
m10_42 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="306-306"];
m10_43 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/succeeded''))", span="311-311"];
m10_44 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-succeeded\'' class=\''label label-suc'' +\r\n''cess pull-right\''>\r\n                                '')", span="316-317"];
m10_46 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Succeeded\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="327-329"];
m10_47 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.PathInfo.Equals(''/failed'') ? ''active'' : null)", span="334-334"];
m10_48 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="339-339"];
m10_49 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/failed''))", span="344-344"];
m10_50 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-failed\'' class=\''label label-danger'' +\r\n'' pull-right\''>\r\n                                '')", span="349-350"];
m10_52 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Failed\r\n      '' +\r\n''                  </a>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n'' +\r\n''                <div class=\''col-md-9\''>\r\n'')", span="360-362"];
m10_53 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Breadcrumbs != null", span="367-367"];
m10_54 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''                        <ol class=\''breadcrumb\''>\r\n                            <li>'' +\r\n''<a href=\'''')", span="373-374"];
m10_66 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                    <h1 class=\''page-header\''>\r\n                        '')", span="445-445"];
m10_55 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/''))", span="379-379"];
m10_56 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''><span class=\''glyphicon glyphicon-home\''></span></a></li>\r\n'')", span="384-384"];
m10_57 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label=Breadcrumbs, span="389-389"];
m10_58 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''                                <li><a href=\'''')", span="395-395"];
m10_63 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''                            <li class=\''active\''>'')", span="425-425"];
m10_59 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(breadcrumb.Value)", span="400-400"];
m10_60 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''>'')", span="405-405"];
m10_61 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(breadcrumb.Key)", span="410-410"];
m10_62 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''</a></li>\r\n'')", span="415-415"];
m10_64 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(BreadcrumbsTitle ?? Title)", span="430-430"];
m10_65 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''</li>\r\n                        </ol>\r\n'')", span="435-435"];
m10_67 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Title)", span="450-450"];
m10_68 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n'')", span="455-455"];
m10_69 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="!String.IsNullOrEmpty(Subtitle)", span="460-460"];
m10_70 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''                            <small>'')", span="466-466"];
m10_73 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''                    </h1>\r\n                    '')", span="486-486"];
m10_71 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Subtitle)", span="471-471"];
m10_72 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''</small>\r\n'')", span="476-476"];
m10_74 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(RenderBody())", span="491-491"];
m10_75 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(@''\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://github.io/odinserj/hangfire'''' target=''''_blank''''>HangFire \r\n                            '')", span="496-506"];
m10_76 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(FileVersionInfo.GetVersionInfo(GetType().Assembly.Location).ProductVersion)", span="511-511"];
m10_77 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>\r\n                        '')", span="516-517"];
m10_78 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(String.Format(''redis://{0}:{1}/{2}'', RedisFactory.Host, RedisFactory.Port, RedisFactory.Db))", span="522-522"];
m10_79 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\r\n                    </li>\r\n                    <li>Time: '')", span="527-527"];
m10_80 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(DateTime.UtcNow)", span="532-532"];
m10_81 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral('' UTC\r\n                    </li>\r\n                    <li>Generated in ['')", span="537-537"];
m10_82 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write((DateTime.UtcNow - (DateTime)Context.Items[''GenerationStartedAt'']).Milliseconds)", span="542-542"];
m10_83 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(@'' ms]\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n        <script>\r\n            (function (hangFire) {\r\n                hangFire.config = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: ''')", span="547-557"];
m10_84 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/stats''))", span="562-562"];
m10_85 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\'\r\n                };\r\n            })(window.HangFire = window.HangFire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="567-568"];
m10_86 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Write(Request.LinkTo(''/js/scripts.js''))", span="573-573"];
m10_87 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="578-578"];
m10_88 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorageFacts.cs", label="Exit HangFire.Web.Pages.LayoutPage.Execute()", span="39-39"];
m10_91 [cluster="HttpRequestBase.LinkTo(string)", file="SqlServerStorageFacts.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m10_98 [cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="SqlServerStorageFacts.cs", label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0"];
m10_96 [cluster="HangFire.Web.RazorPage.RenderBody()", file="SqlServerStorageFacts.cs", label="Entry HangFire.Web.RazorPage.RenderBody()", span="48-48"];
m10_97 [cluster="object.GetType()", file="SqlServerStorageFacts.cs", label="Entry object.GetType()", span="0-0"];
m10_93 [cluster="Unk.Equals", file="SqlServerStorageFacts.cs", label="Entry Unk.Equals", span=""];
m10_100 [cluster="Unk.Write", file="SqlServerStorageFacts.cs", label="Entry Unk.Write", span=""];
m10_101 [file="SqlServerStorageFacts.cs", label="HangFire.Web.Pages.LayoutPage", span=""];
m11_22 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m11_23 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Worker.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m11_24 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m11_29 [cluster="Unk.CollectScenarioErrors", file="Worker.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m11_36 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", span="85-85"];
m11_39 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="Worker.cs", label="this.FeatureBackground()", span="91-91"];
m11_38 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="89-89"];
m11_41 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="Worker.cs", label="this.ScenarioCleanup()", span="95-95"];
m11_40 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="Worker.cs", label="testRunner.Then(''the state name should be equal to \'Failed\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m11_37 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Failed\''', ((string[])(null)))", span="87-87"];
m11_42 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", span="85-85"];
m11_35 [cluster="Unk.And", file="Worker.cs", label="Entry Unk.And", span=""];
m11_0 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", file="Worker.cs", label="Entry Hangfire.RecurringJobOptions.RecurringJobOptions()", span="27-27"];
m11_1 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", color=green, community=0, file="Worker.cs", label="0: TimeZone = TimeZoneInfo.Utc", span="29-29"];
m11_2 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", color=green, community=0, file="Worker.cs", label="0: QueueName = EnqueuedState.DefaultQueue", span="30-30"];
m11_3 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", color=green, community=0, file="Worker.cs", label="0: Exit Hangfire.RecurringJobOptions.RecurringJobOptions()", span="27-27"];
m11_4 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Worker.cs", label="Hangfire.RecurringJobOptions", span=""];
m11_5 [cluster="Unk.GetTestRunner", file="Worker.cs", label="Entry Unk.GetTestRunner", span=""];
m11_26 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66"];
m11_27 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="Worker.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m11_28 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66"];
m11_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="Worker.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m11_67 [cluster="Unk.When", file="Worker.cs", label="Entry Unk.When", span=""];
m11_59 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135"];
m11_62 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="this.FeatureBackground()", span="141-141"];
m11_61 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="139-139"];
m11_65 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="this.ScenarioCleanup()", span="147-147"];
m11_63 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="143-143"];
m11_60 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the failed set'', ((string[])(null)))", span="137-137"];
m11_64 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="testRunner.Then(''the job should be added to the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="145-145"];
m11_66 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135"];
m11_58 [cluster="Unk.AddRow", file="Worker.cs", label="Entry Unk.AddRow", span=""];
m11_68 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154"];
m11_70 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", color=green, community=0, file="Worker.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="158-158"];
m11_69 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the failed set'', ((string[])(null)))", span="156-156"];
m11_71 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="Worker.cs", label="this.FeatureBackground()", span="160-160"];
m11_73 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", color=green, community=0, file="Worker.cs", label="0: testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164"];
m11_72 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="Worker.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="162-162"];
m11_74 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="Worker.cs", label="testRunner.Then(''the job should be removed from the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="166-166"];
m11_75 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="Worker.cs", label="this.ScenarioCleanup()", span="168-168"];
m11_76 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154"];
m11_45 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m11_52 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="Worker.cs", label="0: table1.AddRow(new string[] {\r\n                        ''ExceptionMessage'',\r\n                        ''Hello''})", span="119-121"];
m11_49 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112"];
m11_51 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="table1.AddRow(new string[] {\r\n                        ''ExceptionType'',\r\n                        ''System.InvalidOperationException''})", span="116-118"];
m11_53 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="table1.AddRow(new string[] {\r\n                        ''ExceptionDetails'',\r\n                        ''<Non-empty>''})", span="122-124"];
m11_48 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="this.FeatureBackground()", span="108-108"];
m11_50 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="table1.AddRow(new string[] {\r\n                        ''FailedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115"];
m11_54 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="126-126"];
m11_47 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
m11_55 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="this.ScenarioCleanup()", span="128-128"];
m11_46 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104"];
m11_56 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m11_43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="Worker.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m11_44 [cluster="Unk.Then", file="Worker.cs", label="Entry Unk.Then", span=""];
m11_34 [cluster="Unk.Given", file="Worker.cs", label="Entry Unk.Given", span=""];
m11_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="Worker.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m11_57 [cluster="TechTalk.SpecFlow.Table.cstr", file="Worker.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m11_8 [cluster="Unk.OnFeatureStart", file="Worker.cs", label="Entry Unk.OnFeatureStart", span=""];
m11_30 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m11_31 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", color=green, community=0, file="Worker.cs", label="0: testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m11_32 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="Worker.cs", label="testRunner.And(''the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m11_33 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m11_14 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="Worker.cs", label="Entry HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m11_16 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="Worker.cs", label="HangFire.Tests.States.FailedStateFeature.FeatureSetup(null)", span="51-51"];
m11_15 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="Worker.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Failed state''))", span="48-49"];
m11_17 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="Worker.cs", label="Exit HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m11_77 [file="Worker.cs", label="HangFire.Tests.States.FailedStateFeature", span=""];
n75 -> n38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n39  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n41  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n48  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n53  [color=red, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n59  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n60  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n63  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n68  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n69  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n75 -> n73  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ScheduledStateFeature", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n4 -> n0  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n12 -> n9  [color=blue, key=0, style=bold];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n0  [key=2, style=dotted];
n17 -> n14  [color=blue, key=0, style=bold];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n18  [color=blue, key=0, style=bold];
n22 -> n23  [key=0, style=solid];
n22 -> n37  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
n22 -> n46  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
n22 -> n58  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
n22 -> n67  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=2, style=dotted];
n24 -> n22  [color=blue, key=0, style=bold];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=2, style=dotted];
n28 -> n26  [color=blue, key=0, style=bold];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n34  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n35  [key=2, style=dotted];
n33 -> n30  [color=blue, key=0, style=bold];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n43  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n22  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n30  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n44  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n26  [key=2, style=dotted];
n42 -> n36  [color=blue, key=0, style=bold];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n43  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n22  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n30  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n55  [key=2, style=dotted];
n49 -> n51  [color=darkseagreen4, key=1, label=table1, style=dashed];
n49 -> n52  [color=red, key=1, label=table1, style=dashed];
n50 -> n51  [key=0, style=solid];
n50 -> n56  [key=2, style=dotted];
n51 -> n52  [color=red, key=0, style=solid];
n51 -> n56  [key=2, style=dotted];
n52 -> n53  [color=red, key=0, style=solid];
n52 -> n44  [color=red, key=2, style=dotted];
n53 -> n54  [color=red, key=0, style=solid];
n53 -> n26  [color=red, key=2, style=dotted];
n54 -> n45  [color=blue, key=0, style=bold];
n57 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n43  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n22  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n30  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n65  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n44  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n26  [key=2, style=dotted];
n64 -> n57  [color=blue, key=0, style=bold];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n43  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n22  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n30  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n65  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n35  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n44  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n26  [key=2, style=dotted];
n74 -> n66  [color=blue, key=0, style=bold];
d24 -> d25  [color=green, key=0, style=solid];
d24 -> d36  [color=green, key=2, style=dotted];
d8 -> d24  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d8 -> d25  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d8 -> d26  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d8 -> d27  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d8 -> d9  [key=0, style=solid];
d8 -> d11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d8 -> d13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
d8 -> d15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d8 -> d18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
d8 -> d19  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d8 -> d21  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
d8 -> d22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
d8 -> d28  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
d23 -> d24  [color=green, key=0, style=solid];
d23 -> d35  [color=green, key=2, style=dotted];
d25 -> d26  [color=green, key=0, style=solid];
d25 -> d38  [color=green, key=2, style=dotted];
d25 -> d39  [color=green, key=2, style=dotted];
d25 -> d36  [color=green, key=2, style=dotted];
d25 -> d42  [color=green, key=1, label="lambda expression", style=dashed];
d26 -> d27  [color=green, key=0, style=solid];
d26 -> d36  [color=green, key=2, style=dotted];
d42 -> d43  [color=green, key=0, style=solid];
d27 -> d28  [color=green, key=0, style=solid];
d27 -> d36  [color=green, key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d28 -> d40  [key=2, style=dotted];
d28 -> d41  [key=2, style=dotted];
d22 -> d23  [color=green, key=0, style=solid];
d22 -> d37  [key=2, style=dotted];
d43 -> d44  [color=green, key=0, style=solid];
d44 -> d42  [color=blue, key=0, style=bold];
d53 -> d54  [color=green, key=0, style=solid];
d53 -> d59  [color=green, key=2, style=dotted];
d53 -> d60  [color=green, key=2, style=dotted];
d53 -> d61  [color=green, key=2, style=dotted];
d53 -> d62  [color=green, key=2, style=dotted];
d73 -> d53  [color=green, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d56  [color=green, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d28  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d46  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d52  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d55  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d73 -> d66  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
d50 -> d53  [color=green, key=1, label=processes, style=dashed];
d50 -> d56  [color=green, key=1, label=processes, style=dashed];
d50 -> d51  [key=0, style=solid];
d50 -> d31  [key=2, style=dotted];
d50 -> d55  [color=darkseagreen4, key=1, label=processes, style=dashed];
d50 -> d57  [color=darkseagreen4, key=1, label=processes, style=dashed];
d52 -> d53  [color=green, key=0, style=solid];
d52 -> d55  [key=0, style=solid];
d54 -> d52  [key=0, style=solid];
d54 -> d54  [color=darkseagreen4, key=1, label=i, style=dashed];
d56 -> d57  [color=green, key=0, style=solid];
d56 -> d64  [color=green, key=2, style=dotted];
d56 -> d65  [color=green, key=2, style=dotted];
d56 -> d62  [color=green, key=2, style=dotted];
d55 -> d56  [color=green, key=0, style=solid];
d55 -> d61  [key=2, style=dotted];
d55 -> d62  [key=2, style=dotted];
d55 -> d63  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d29 -> d8  [color=blue, key=0, style=bold];
d9 -> d10  [key=0, style=solid];
d9 -> d11  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d11 -> d13  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d33  [key=2, style=dotted];
d19 -> d28  [color=darkseagreen4, key=1, label=properties, style=dashed];
d19 -> d20  [key=0, style=solid];
d19 -> d34  [key=2, style=dotted];
d21 -> d36  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d16 -> d28  [color=darkseagreen4, key=1, label=processes, style=dashed];
d16 -> d18  [color=darkseagreen4, key=1, label=processes, style=dashed];
d16 -> d17  [key=0, style=solid];
d16 -> d31  [key=2, style=dotted];
d41 -> d66  [key=0, style=solid];
d20 -> d35  [key=2, style=dotted];
d20 -> d21  [key=0, style=solid];
d47 -> d35  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d17 -> d32  [key=2, style=dotted];
d17 -> d33  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d46 -> d49  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=2, style=dotted];
d32 -> d50  [key=0, style=solid];
d51 -> d52  [key=0, style=solid];
d51 -> d54  [color=darkseagreen4, key=1, label=i, style=dashed];
d51 -> d51  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d58 -> d32  [color=blue, key=0, style=bold];
d10 -> d29  [key=0, style=solid];
d10 -> d30  [key=2, style=dotted];
d12 -> d29  [key=0, style=solid];
d12 -> d30  [key=2, style=dotted];
d14 -> d29  [key=0, style=solid];
d14 -> d30  [key=2, style=dotted];
d67 -> d41  [color=blue, key=0, style=bold];
d48 -> d45  [color=blue, key=0, style=bold];
d45 -> d46  [key=0, style=solid];
m0_20 -> m0_26  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_28  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_25  [color=blue, key=0, style=bold];
m0_28 -> m0_20  [color=blue, key=0, style=bold];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_50 -> m0_49  [color=green, key=0, style=solid];
m0_50 -> m0_3  [color=green, key=2, style=dotted];
m0_50 -> m0_52  [color=green, key=2, style=dotted];
m0_49 -> m0_50  [color=green, key=0, style=solid];
m0_49 -> m0_51  [key=0, style=solid];
m0_51 -> m0_48  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_19  [key=2, style=dotted];
m0_10 -> m0_16  [color=darkseagreen4, key=1, label=Table, style=dashed];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_24  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_20  [key=2, style=dotted];
m0_16 -> m0_21  [key=2, style=dotted];
m0_16 -> m0_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_16 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_16  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=row, style=dashed];
m0_11 -> m0_14  [color=darkseagreen4, key=1, label=row, style=dashed];
m0_14 -> m0_4  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_19  [key=2, style=dotted];
m0_14 -> m0_17  [key=0, style=solid];
m0_13 -> m0_11  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_18  [key=2, style=dotted];
m0_13 -> m0_15  [key=0, style=solid];
m0_13 -> m0_25  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_12 -> m0_14  [key=0, style=solid];
m0_15 -> m0_13  [key=0, style=solid];
m0_15 -> m0_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_15 -> m0_9  [key=0, style=solid];
m0_17 -> m0_10  [color=blue, key=0, style=bold];
m0_17 -> m0_0  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_0 -> m0_10  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_17  [key=0, style=solid];
m0_2 -> d30  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_16  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_17  [key=0, style=solid];
m0_5 -> m0_21  [key=2, style=dotted];
m0_6 -> m0_6  [color=darkorchid, key=3, label="Field variable int MaxDefaultWorkerCount", style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_9  [key=2, style=dotted];
m0_6 -> m0_22  [key=2, style=dotted];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_23  [key=2, style=dotted];
m0_7 -> m0_7  [color=darkseagreen4, key=1, label=script, style=dashed];
m0_7 -> m0_10  [color=darkseagreen4, key=1, label=script, style=dashed];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_40  [key=2, style=dotted];
m0_43 -> m0_41  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=0, style=solid];
m0_4 -> m0_20  [key=2, style=dotted];
m0_22 -> m0_31  [key=0, style=solid];
m0_22 -> m0_33  [color=red, key=1, label="System.Reflection.Assembly", style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_37  [key=2, style=dotted];
m0_31 -> m0_34  [color=red, key=1, label=stream, style=dashed];
m0_33 -> m0_36  [color=red, key=0, style=solid];
m0_33 -> m0_38  [color=red, key=2, style=dotted];
m0_33 -> m0_39  [color=red, key=2, style=dotted];
m0_32 -> m0_33  [color=red, key=0, style=solid];
m0_32 -> m0_34  [color=red, key=0, style=solid];
m0_34 -> m0_35  [color=red, key=0, style=solid];
m0_34 -> m0_40  [color=red, key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_36 -> m0_22  [color=blue, key=0, style=bold];
m0_24 -> m0_22  [color=blue, key=0, style=bold];
m0_53 -> m0_49  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m0_53 -> m0_6  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m0_53 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m0_53 -> m0_26  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m0_53 -> m0_38  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m0_53 -> m0_42  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m0_53 -> m0_45  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m2_16 -> m2_17  [color=red, key=0, style=solid];
m2_17 -> m2_18  [color=red, key=0, style=solid];
m2_17 -> m2_19  [color=red, key=2, style=dotted];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_0 -> m2_9  [color=green, key=1, label=string, style=dashed];
m2_0 -> m2_10  [color=green, key=1, label="Hangfire.JobStorage", style=dashed];
m2_0 -> m2_11  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m2_0 -> m2_12  [color=green, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_13  [color=green, key=0, style=solid];
m2_2 -> d30  [color=green, key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_7 -> m2_9  [color=green, key=0, style=solid];
m2_7 -> m2_8  [color=red, key=0, style=solid];
m2_7 -> m2_10  [color=red, key=0, style=solid];
m2_10 -> m2_11  [color=red, key=0, style=solid];
m2_10 -> m2_14  [color=red, key=2, style=dotted];
m2_10 -> m2_15  [color=red, key=2, style=dotted];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_11 -> m2_5  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_4 -> m2_13  [key=0, style=solid];
m2_4 -> d30  [key=2, style=dotted];
m2_4 -> m2_2  [color=blue, key=0, style=bold];
m2_8 -> m2_13  [key=0, style=solid];
m2_8 -> d30  [key=2, style=dotted];
m2_8 -> m2_9  [color=red, key=0, style=solid];
m2_6 -> m2_13  [key=0, style=solid];
m2_6 -> d30  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_12  [key=2, style=dotted];
m2_13 -> m2_0  [color=blue, key=0, style=bold];
m2_13 -> m2_20  [key=0, style=solid];
m2_15 -> m2_9  [color=green, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m2_15 -> m2_10  [color=green, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m2_15 -> m2_11  [color=green, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m2_15 -> m2_12  [color=green, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_26  [key=2, style=dotted];
m2_20 -> m2_27  [key=2, style=dotted];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label=recreateDatabaseSql, style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_28  [key=2, style=dotted];
m2_21 -> m2_29  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_30  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_28  [key=2, style=dotted];
m2_23 -> m2_31  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_32  [key=2, style=dotted];
m2_25 -> m2_13  [color=blue, key=0, style=bold];
m2_33 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m2_33 -> m2_10  [color=red, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m2_33 -> m2_17  [color=red, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_10  [key=2, style=dotted];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_9  [key=2, style=dotted];
m3_7 -> m3_4  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_14  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [key=2, style=dotted];
m3_13 -> m3_10  [color=blue, key=0, style=bold];
m3_19 -> m3_5  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m3_19 -> m3_6  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m3_19 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m3_19 -> m3_12  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m3_19 -> m3_17  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m5_12 -> m5_15  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m5_12 -> m5_17  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> d36  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> d36  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_20  [key=2, style=dotted];
m5_15 -> m5_21  [key=2, style=dotted];
m5_15 -> d36  [key=2, style=dotted];
m5_15 -> m5_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> d36  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> d36  [key=2, style=dotted];
m5_18 -> m5_12  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_10  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_11  [key=2, style=dotted];
m5_7 -> m5_0  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_25 -> m5_1  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_4  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_16  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m5_25 -> m5_17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m7_29 -> m7_26  [color=blue, key=0, style=bold];
m7_72 -> m7_73  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_45  [key=2, style=dotted];
m7_74 -> m7_78  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_20  [key=2, style=dotted];
m7_75 -> m7_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_76 -> m7_72  [color=blue, key=0, style=bold];
m7_50 -> m7_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m7_50 -> m7_44  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m7_50 -> m7_36  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m7_50 -> m7_48  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m7_22 -> m7_23  [color=red, key=0, style=solid];
m7_23 -> m7_24  [color=red, key=0, style=solid];
m7_23 -> n25  [color=green, key=2, style=dotted];
m7_23 -> m7_25  [color=red, key=2, style=dotted];
m7_24 -> m7_22  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_56  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_45  [key=2, style=dotted];
m7_53 -> m7_58  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_20  [key=2, style=dotted];
m7_54 -> m7_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_55 -> m7_51  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [color=red, key=0, style=solid];
m7_17 -> m7_18  [color=red, key=0, style=solid];
m7_17 -> m7_20  [color=red, key=2, style=dotted];
m7_17 -> m7_22  [color=red, key=1, label="lambda expression", style=dashed];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_21  [key=2, style=dotted];
m7_19 -> m7_16  [color=blue, key=0, style=bold];
m7_26 -> m7_27  [color=red, key=0, style=solid];
m7_27 -> m7_28  [color=red, key=0, style=solid];
m7_27 -> m7_20  [color=red, key=2, style=dotted];
m7_27 -> m7_30  [color=red, key=1, label="lambda expression", style=dashed];
m7_27 -> m7_29  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_21  [key=2, style=dotted];
m7_28 -> m7_26  [color=blue, key=0, style=bold];
m7_40 -> m7_38  [color=blue, key=0, style=bold];
m7_61 -> m7_62  [key=0, style=solid];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_9  [key=2, style=dotted];
m7_62 -> m7_10  [key=2, style=dotted];
m7_62 -> m7_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_45  [key=2, style=dotted];
m7_63 -> m7_70  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_20  [key=2, style=dotted];
m7_64 -> m7_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_65 -> m7_61  [color=blue, key=0, style=bold];
m7_34 -> m7_35  [color=red, key=0, style=solid];
m7_34 -> m7_40  [key=2, style=dotted];
m7_35 -> m7_36  [color=red, key=0, style=solid];
m7_35 -> m7_20  [color=red, key=2, style=dotted];
m7_35 -> m7_38  [color=red, key=1, label="lambda expression", style=dashed];
m7_35 -> m7_41  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_21  [key=2, style=dotted];
m7_36 -> m7_26  [key=2, style=dotted];
m7_37 -> m7_34  [color=blue, key=0, style=bold];
m7_37 -> m7_30  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_6  [key=2, style=dotted];
m7_1 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_9  [key=2, style=dotted];
m7_3 -> m7_10  [key=2, style=dotted];
m7_3 -> m7_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_11  [key=2, style=dotted];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_85 -> m7_86  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=2, style=dotted];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_30 -> m7_31  [color=red, key=0, style=solid];
m7_31 -> m7_32  [color=red, key=0, style=solid];
m7_31 -> m7_33  [color=red, key=2, style=dotted];
m7_31 -> m7_38  [key=2, style=dotted];
m7_32 -> m7_30  [color=blue, key=0, style=bold];
m7_32 -> m7_22  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_38 -> m7_39  [color=red, key=0, style=solid];
m7_39 -> m7_40  [color=red, key=0, style=solid];
m7_39 -> m7_33  [color=red, key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_60  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_59 -> m7_57  [color=blue, key=0, style=bold];
m7_66 -> m7_67  [key=0, style=solid];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_60  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_20  [key=2, style=dotted];
m7_67 -> m7_15  [key=2, style=dotted];
m7_68 -> m7_66  [color=blue, key=0, style=bold];
m7_71 -> m7_69  [color=blue, key=0, style=bold];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_60  [key=2, style=dotted];
m7_77 -> m7_78  [key=0, style=solid];
m7_79 -> m7_77  [color=blue, key=0, style=bold];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_60  [key=2, style=dotted];
m7_87 -> m7_85  [color=blue, key=0, style=bold];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_45  [key=2, style=dotted];
m7_82 -> m7_86  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_20  [key=2, style=dotted];
m7_83 -> m7_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_84 -> m7_80  [color=blue, key=0, style=bold];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_39  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_45  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_21  [key=2, style=dotted];
m7_43 -> m7_38  [key=2, style=dotted];
m7_44 -> m7_41  [color=blue, key=0, style=bold];
m7_44 -> m7_22  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_45 -> m7_88  [color=red, key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_39  [key=2, style=dotted];
m7_88 -> m7_89  [color=red, key=0, style=solid];
m7_88 -> m7_33  [color=red, key=2, style=dotted];
m7_89 -> m7_45  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_40  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_45  [key=2, style=dotted];
m7_47 -> m7_41  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_50  [key=2, style=dotted];
m7_48 -> m7_26  [key=2, style=dotted];
m7_49 -> m7_46  [color=blue, key=0, style=bold];
m7_49 -> m7_42  [color=blue, key=0, style=bold];
m7_90 -> m7_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_17  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_23  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_27  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_31  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_35  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_39  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_42  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_90 -> m7_88  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m7_91 -> m7_58  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_92 -> m7_70  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_93 -> m7_78  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_94 -> m7_86  [color=darkseagreen4, key=1, label=token, style=dashed];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_17  [color=blue, key=0, style=bold];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_14  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_16  [key=2, style=dotted];
m8_12 -> m8_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_15  [key=2, style=dotted];
m8_13 -> m8_9  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m8_0 -> m8_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_2 -> m8_7  [key=0, style=solid];
m8_2 -> d30  [key=2, style=dotted];
m8_4 -> m8_7  [key=0, style=solid];
m8_4 -> d30  [key=2, style=dotted];
m8_7 -> m8_0  [color=blue, key=0, style=bold];
m8_20 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m8_20 -> m8_6  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m8_20 -> m8_10  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m8_20 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m9_50 -> m9_51  [color=green, key=0, style=solid];
m9_51 -> m9_52  [color=green, key=0, style=solid];
m9_52 -> m9_50  [color=blue, key=0, style=bold];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_15 -> m9_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_15 -> m9_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_15 -> m9_20  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_15 -> m9_13  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_37  [key=2, style=dotted];
m9_16 -> m9_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m9_16 -> m9_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m9_16 -> m9_27  [color=darkseagreen4, key=1, label=connection, style=dashed];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_38  [key=2, style=dotted];
m9_17 -> m9_22  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_17 -> m9_24  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_17 -> m9_26  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_17 -> m9_27  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_17 -> m9_29  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_17 -> m9_30  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_17 -> m9_32  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_17 -> m9_34  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_39  [key=2, style=dotted];
m9_18 -> m9_22  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m9_18 -> m9_29  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_42  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_46  [key=2, style=dotted];
m9_27 -> m9_47  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [color=darkseagreen4, key=1, label=state, style=dashed];
m9_23 -> m9_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_23 -> m9_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_44  [key=2, style=dotted];
m9_22 -> m9_26  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_43  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_45  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_48  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_33  [key=0, style=solid];
m9_30 -> m9_36  [key=0, style=solid];
m9_30 -> m9_45  [key=2, style=dotted];
m9_32 -> m9_36  [key=0, style=solid];
m9_32 -> m9_45  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_49  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_40  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [color=darkseagreen4, key=1, label=linkedCts, style=dashed];
m9_20 -> m9_41  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=0, style=solid];
m9_25 -> m9_36  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_15  [color=blue, key=0, style=bold];
m9_11 -> m9_12  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_0  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=2, style=dotted];
m9_47 -> m9_53  [color=green, key=0, style=solid];
m9_47 -> m9_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_53 -> m9_54  [color=green, key=0, style=solid];
m9_53 -> m9_70  [color=green, key=2, style=dotted];
m9_53 -> m9_56  [color=green, key=1, label=jobData, style=dashed];
m9_53 -> m9_57  [color=green, key=1, label=jobData, style=dashed];
m9_53 -> m9_58  [color=green, key=1, label=jobData, style=dashed];
m9_53 -> m9_60  [color=green, key=1, label=jobData, style=dashed];
m9_54 -> m9_55  [color=green, key=0, style=solid];
m9_54 -> m9_56  [color=green, key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_71  [key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_72  [key=2, style=dotted];
m9_57 -> m9_60  [color=darkseagreen4, key=1, label=performContext, style=dashed];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_62  [color=darkseagreen4, key=1, label=latency, style=dashed];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_74  [key=2, style=dotted];
m9_60 -> m9_62  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_55 -> m9_69  [key=0, style=solid];
m9_55 -> m9_23  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_73  [key=2, style=dotted];
m9_59 -> m9_61  [color=darkseagreen4, key=1, label=duration, style=dashed];
m9_59 -> m9_62  [color=darkseagreen4, key=1, label=duration, style=dashed];
m9_62 -> m9_69  [key=0, style=solid];
m9_62 -> m9_76  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_75  [key=2, style=dotted];
m9_64 -> m9_69  [key=0, style=solid];
m9_66 -> m9_69  [key=0, style=solid];
m9_66 -> m9_77  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_77  [key=2, style=dotted];
m9_63 -> m9_64  [key=0, style=solid];
m9_65 -> m9_66  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_69 -> m9_47  [color=blue, key=0, style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_0 -> m9_9  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m9_0 -> m9_10  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m9_0 -> m9_11  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m9_0 -> m9_12  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m9_0 -> m9_7  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_7 -> m9_9  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_1 -> m9_9  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_3 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_7  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_8 -> m9_13  [key=0, style=solid];
m9_8 -> d30  [key=2, style=dotted];
m9_8 -> m9_0  [color=blue, key=0, style=bold];
m9_2 -> m9_13  [key=0, style=solid];
m9_2 -> d30  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_10  [key=2, style=dotted];
m9_4 -> m9_13  [key=0, style=solid];
m9_4 -> d30  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_12  [key=2, style=dotted];
m9_6 -> m9_13  [key=0, style=solid];
m9_6 -> d30  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_78 -> m9_51  [color=green, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_9  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_10  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_11  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_12  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_16  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_17  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_18  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_21  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_26  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_27  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_57  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m9_78 -> m9_60  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m10_0 -> m10_1  [color=red, key=0, style=solid];
m10_1 -> m10_2  [color=red, key=0, style=solid];
m10_1 -> m10_89  [color=red, key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_89  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_90  [key=2, style=dotted];
m10_3 -> m10_6  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_89  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_91  [key=2, style=dotted];
m10_5 -> m10_90  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_89  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_91  [key=2, style=dotted];
m10_7 -> m10_90  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_89  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_92  [key=2, style=dotted];
m10_9 -> m10_19  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m10_9 -> m10_25  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m10_9 -> m10_27  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m10_9 -> m10_33  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m10_9 -> m10_39  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m10_9 -> m10_45  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m10_9 -> m10_51  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_89  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_90  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_90  [key=2, style=dotted];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_90  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_90  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_90  [key=2, style=dotted];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_90  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_90  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_93  [key=2, style=dotted];
m10_11 -> m10_90  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_89  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_91  [key=2, style=dotted];
m10_13 -> m10_90  [key=2, style=dotted];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_89  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_93  [key=2, style=dotted];
m10_15 -> m10_90  [key=2, style=dotted];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_89  [key=2, style=dotted];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_91  [key=2, style=dotted];
m10_17 -> m10_90  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_89  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_89  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_94  [key=2, style=dotted];
m10_21 -> m10_90  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_89  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_91  [key=2, style=dotted];
m10_23 -> m10_90  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_89  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_89  [key=2, style=dotted];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_89  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_93  [key=2, style=dotted];
m10_29 -> m10_90  [key=2, style=dotted];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_89  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_91  [key=2, style=dotted];
m10_31 -> m10_90  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_89  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_89  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_93  [key=2, style=dotted];
m10_35 -> m10_90  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_89  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_91  [key=2, style=dotted];
m10_37 -> m10_90  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_89  [key=2, style=dotted];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_89  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_93  [key=2, style=dotted];
m10_41 -> m10_90  [key=2, style=dotted];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_89  [key=2, style=dotted];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_91  [key=2, style=dotted];
m10_43 -> m10_90  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_89  [key=2, style=dotted];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_89  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_93  [key=2, style=dotted];
m10_47 -> m10_90  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_89  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_91  [key=2, style=dotted];
m10_49 -> m10_90  [key=2, style=dotted];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_89  [key=2, style=dotted];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_89  [key=2, style=dotted];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_66  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_89  [key=2, style=dotted];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_89  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_91  [key=2, style=dotted];
m10_55 -> m10_90  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_89  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_63  [key=0, style=solid];
m10_57 -> m10_59  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_89  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_89  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_90  [key=2, style=dotted];
m10_59 -> m10_59  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m10_59 -> m10_61  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_89  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_90  [key=2, style=dotted];
m10_61 -> m10_61  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m10_62 -> m10_57  [key=0, style=solid];
m10_62 -> m10_89  [key=2, style=dotted];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_90  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_89  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_90  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_89  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_73  [key=0, style=solid];
m10_69 -> m10_95  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_89  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_89  [key=2, style=dotted];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_90  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_89  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_96  [key=2, style=dotted];
m10_74 -> m10_90  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_89  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_97  [key=2, style=dotted];
m10_76 -> m10_98  [key=2, style=dotted];
m10_76 -> m10_90  [key=2, style=dotted];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_89  [key=2, style=dotted];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_99  [key=2, style=dotted];
m10_78 -> m10_90  [key=2, style=dotted];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_89  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_90  [key=2, style=dotted];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_89  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_100  [key=2, style=dotted];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_89  [key=2, style=dotted];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_91  [key=2, style=dotted];
m10_84 -> m10_90  [key=2, style=dotted];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_89  [key=2, style=dotted];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_91  [key=2, style=dotted];
m10_86 -> m10_90  [key=2, style=dotted];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_89  [key=2, style=dotted];
m10_88 -> m10_0  [color=blue, key=0, style=bold];
m10_101 -> m10_1  [color=red, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_76  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_77  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_78  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_80  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_81  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_82  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_83  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_84  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_85  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_86  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m10_101 -> m10_87  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> n25  [key=2, style=dotted];
m11_24 -> m11_22  [color=blue, key=0, style=bold];
m11_36 -> m11_37  [key=0, style=solid];
m11_39 -> m11_30  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_38 -> m11_22  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_26  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_44  [key=2, style=dotted];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_43  [key=2, style=dotted];
m11_42 -> m11_36  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_5  [color=green, key=2, style=dotted];
m11_2 -> m11_3  [color=green, key=0, style=solid];
m11_2 -> m11_6  [color=green, key=2, style=dotted];
m11_2 -> m11_7  [color=green, key=2, style=dotted];
m11_3 -> m11_4  [color=green, key=0, style=solid];
m11_3 -> m11_8  [color=green, key=2, style=dotted];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_4 -> m11_0  [color=blue, key=0, style=bold];
m11_4 -> m11_1  [color=darkseagreen4, key=1, label="Hangfire.RecurringJobOptions", style=dashed];
m11_4 -> m11_2  [color=darkseagreen4, key=1, label="Hangfire.RecurringJobOptions", style=dashed];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_29  [key=2, style=dotted];
m11_28 -> m11_26  [color=blue, key=0, style=bold];
m11_59 -> m11_60  [key=0, style=solid];
m11_62 -> m11_30  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_61 -> m11_22  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_26  [key=2, style=dotted];
m11_63 -> m11_67  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_43  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_44  [key=2, style=dotted];
m11_66 -> m11_59  [color=blue, key=0, style=bold];
m11_68 -> m11_69  [key=0, style=solid];
m11_70 -> m11_71  [color=green, key=0, style=solid];
m11_70 -> m11_22  [color=green, key=2, style=dotted];
m11_69 -> m11_70  [color=green, key=0, style=solid];
m11_69 -> m11_43  [key=2, style=dotted];
m11_71 -> m11_30  [key=2, style=dotted];
m11_71 -> m11_72  [key=0, style=solid];
m11_73 -> m11_74  [color=green, key=0, style=solid];
m11_73 -> m11_35  [color=green, key=2, style=dotted];
m11_72 -> m11_73  [color=green, key=0, style=solid];
m11_72 -> m11_67  [key=2, style=dotted];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_44  [key=2, style=dotted];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_26  [key=2, style=dotted];
m11_76 -> m11_68  [color=blue, key=0, style=bold];
m11_45 -> m11_46  [key=0, style=solid];
m11_52 -> m11_53  [color=green, key=0, style=solid];
m11_52 -> m11_58  [color=green, key=2, style=dotted];
m11_49 -> m11_52  [color=green, key=1, label=table1, style=dashed];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_57  [key=2, style=dotted];
m11_49 -> m11_51  [color=darkseagreen4, key=1, label=table1, style=dashed];
m11_49 -> m11_53  [color=darkseagreen4, key=1, label=table1, style=dashed];
m11_49 -> m11_54  [color=darkseagreen4, key=1, label=table1, style=dashed];
m11_51 -> m11_52  [color=green, key=0, style=solid];
m11_51 -> m11_58  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_58  [key=2, style=dotted];
m11_48 -> m11_30  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_58  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_44  [key=2, style=dotted];
m11_47 -> m11_22  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_26  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_43  [key=2, style=dotted];
m11_56 -> m11_45  [color=blue, key=0, style=bold];
m11_30 -> m11_31  [color=green, key=0, style=solid];
m11_31 -> m11_32  [color=green, key=0, style=solid];
m11_31 -> m11_34  [color=green, key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_30  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_16 -> m11_0  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=0, style=solid];
m11_17 -> m11_14  [color=blue, key=0, style=bold];
m11_77 -> m11_70  [color=green, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_39  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_41  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_48  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_55  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_61  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_62  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_65  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_71  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
}
