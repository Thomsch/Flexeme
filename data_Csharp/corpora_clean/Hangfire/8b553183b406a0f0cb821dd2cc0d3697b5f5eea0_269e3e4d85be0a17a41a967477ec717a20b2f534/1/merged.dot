digraph  {
n19 [label="HangFire.Web.AspNetBackgroundJobServer", span=""];
n0 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])"];
n1 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])"];
n2 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])"];
n3 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])"];
n4 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Start()", span="53-53", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()"];
n5 [label="HostingEnvironment.RegisterObject(this)", span="55-55", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()"];
n6 [label="base.Start()", span="56-56", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", color=red, community=0];
n8 [label="Entry Unk.RegisterObject", span="", cluster="Unk.RegisterObject"];
n7 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Start()", span="53-53", cluster="HangFire.Web.AspNetBackgroundJobServer.Start()"];
n9 [label="Entry HangFire.BackgroundJobServer.Start()", span="66-66", cluster="HangFire.BackgroundJobServer.Start()"];
n10 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()"];
n11 [label="base.Stop()", span="65-65", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0];
n12 [label="HostingEnvironment.UnregisterObject(this)", span="66-66", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()"];
n14 [label="Entry HangFire.BackgroundJobServer.Stop()", span="72-72", cluster="HangFire.BackgroundJobServer.Stop()"];
n13 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()"];
n15 [label="Entry Unk.UnregisterObject", span="", cluster="Unk.UnregisterObject"];
n16 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)"];
n17 [label="Stop()", span="71-71", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", color=red, community=0];
n18 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)"];
m0_31 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs"];
m0_32 [label="Entry Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="119-119", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_20 [label="Logger.Info(''Starting Hangfire Server'')", span="95-95", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_30 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJobServer.cs"];
m0_45 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="BackgroundJobServer.cs"];
m0_46 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="BackgroundJobServer.cs"];
m0_47 [label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="97-97", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs"];
m0_48 [label="var componentRunners = new List<IServerComponentRunner>()", span="99-99", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs", color=green, community=0];
m0_4 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", span="46-46", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m0_5 [label="workerCount <= 0", span="48-48", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m0_56 [label="processes.Add(new RecurringJobScheduler(new BackgroundJobFactory(_options.FilterProvider)))", span="132-132", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_68 [label="Entry Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", span="22-22", cluster="Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", file="BackgroundJobServer.cs"];
m0_69 [label="Entry Hangfire.BackgroundJobServer.Start()", span="153-153", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_70 [label="Exit Hangfire.BackgroundJobServer.Start()", span="153-153", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_24 [label="Logger.InfoFormat(''    Worker count: {0}.'', options.WorkerCount)", span="101-101", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_0 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="BackgroundJobServer.cs"];
m0_1 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="BackgroundJobServer.cs"];
m0_13 [label="additionalProcesses == null", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_14 [label="throw new ArgumentNullException(''additionalProcesses'');", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_15 [label="_options = options", span="83-83", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_16 [label="var processes = new List<IBackgroundProcess>()", span="85-85", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_17 [label="processes.AddRange(GetRequiredProcesses())", span="86-86", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", color=red, community=0];
m0_11 [label="options == null", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_7 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="69-69", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m0_9 [label="storage == null", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_12 [label="throw new ArgumentNullException(''options'');", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="69-69", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m0_8 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_10 [label="throw new ArgumentNullException(''storage'');", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_18 [label="processes.AddRange(additionalProcesses)", span="87-87", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_39 [label="var server = new JobServer(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerComponentRunner>(GetServerComponentsRunner))", span="86-90", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m0_71 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="158-158", cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_60 [label="yield return new ServerComponentRunner(\r\n                new ServerWatchdog(_storage));", span="115-116", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs"];
m0_44 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_19 [label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="89-93", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_23 [label="Logger.Info(''Using the following options for Hangfire Server:'')", span="100-100", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_29 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_73 [label="Hangfire.BackgroundJobServer", span="", cluster="Unk.ToArray", file="BackgroundJobServer.cs"];
m0_37 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m0_54 [label="i++", span="123-123", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_58 [label="Exit Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="119-119", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_59 [label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="48-48", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobServer.cs"];
m0_61 [label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="BackgroundJobServer.cs"];
m0_64 [label="Entry HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="29-29", cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="BackgroundJobServer.cs"];
m0_43 [label="''''' + x + '''''", span="102-102", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_63 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobServer.cs"];
m0_33 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BackgroundJobServer.cs"];
m0_34 [label="Entry HangFire.BackgroundJobServer.Dispose()", span="73-73", cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m0_65 [label="Entry Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", file="BackgroundJobServer.cs"];
m0_36 [label="Exit HangFire.BackgroundJobServer.Dispose()", span="73-73", cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m0_41 [label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="78-78", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m0_66 [label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m0_67 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m0_42 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_72 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServer.cs"];
m0_49 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", color=green, community=0, file="BackgroundJobServer.cs"];
m0_50 [label="var processes = new List<IBackgroundProcess>()", span="121-121", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", color=green, community=0, file="BackgroundJobServer.cs"];
m0_51 [label="var i = 0", span="123-123", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_52 [label="i < _options.WorkerCount", span="123-123", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_74 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_75 [label="new ServerComponentRunner(component)", span="124-124", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_76 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_22 [label="storage.WriteOptionsToLog(Logger)", span="98-98", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs"];
m0_57 [label="return processes;", span="134-134", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_38 [label="var context = new ServerContext\r\n            {\r\n                Queues = _queues,\r\n                WorkerCount = _workerCount\r\n            }", span="80-84", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs", color=green, community=0];
m0_35 [label="_serverRunner.Dispose()", span="75-75", cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m0_21 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="BackgroundJobServer.cs"];
m0_25 [label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="78-78", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m0_26 [label="Entry HangFire.BackgroundJobServer.Start()", span="63-63", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_27 [label="_serverRunner.Start()", span="65-65", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_28 [label="Exit HangFire.BackgroundJobServer.Start()", span="63-63", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_62 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m0_40 [label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", span="65-65", cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", file="BackgroundJobServer.cs"];
m0_53 [label="processes.Add(new Worker(\r\n                    _options.Queues, \r\n                    new BackgroundJobPerformer(_options.FilterProvider), \r\n                    new BackgroundJobStateChanger(_options.FilterProvider)))", span="125-128", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_55 [label="processes.Add(new DelayedJobScheduler(_options.SchedulePollingInterval, new BackgroundJobStateChanger(_options.FilterProvider)))", span="131-131", cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="BackgroundJobServer.cs"];
m0_2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m0_3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m0_77 [label="HangFire.BackgroundJobServer", span="", file="BackgroundJobServer.cs"];
m2_9 [label="Entry HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_10 [label="var connection = _storage.CreateAndOpenConnection()", span="53-53", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_14 [label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="67-67", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_11 [label=ProcessedTables, span="55-55", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_13 [label="connection.Execute(\r\n                        String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete from HangFire.[{0}] with (tablock) where ExpireAt < @now;'', table),\r\n                        new { now = DateTime.UtcNow })", span="59-63", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_12 [label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="57-57", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_15 [label="Exit HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpirationManager.cs"];
m2_2 [label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_3 [label="storage == null", span="45-45", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_5 [label="_storage = storage", span="47-47", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_6 [label="_checkInterval = checkInterval", span="48-48", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_4 [label="throw new ArgumentNullException(''storage'');", span="45-45", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_7 [label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_0 [label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m2_1 [label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m2_20 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs"];
m2_19 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ExpirationManager.cs"];
m2_16 [label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="70-70", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs"];
m2_17 [label="Entry Unk.DebugFormat", span="", cluster="Unk.DebugFormat", file="ExpirationManager.cs"];
m2_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ExpirationManager.cs"];
m2_21 [label="HangFire.SqlServer.ExpirationManager", span="", file="ExpirationManager.cs"];
m4_61 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="JobServerFacts.cs"];
m4_102 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="JobServerFacts.cs"];
m4_20 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", span="132-132", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", file="JobServerFacts.cs"];
m4_100 [label="return new SqlServerStorage(connection);", span="134-134", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", file="JobServerFacts.cs"];
m4_101 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", span="132-132", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", file="JobServerFacts.cs"];
m4_13 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="JobServerFacts.cs"];
m4_98 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JobServerFacts.cs"];
m4_58 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="JobServerFacts.cs"];
m4_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobServerFacts.cs"];
m4_25 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="38-38", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="JobServerFacts.cs"];
m4_26 [label="UseConnection(connection =>\r\n            {\r\n                var storage = CreateStorage(connection);\r\n\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout));\r\n\r\n                Assert.Equal(''resource'', exception.ParamName);\r\n            })", span="40-48", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", color=red, community=0, file="JobServerFacts.cs"];
m4_27 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="38-38", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="JobServerFacts.cs"];
m4_60 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="JobServerFacts.cs"];
m4_106 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="JobServerFacts.cs"];
m4_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobServerFacts.cs"];
m4_79 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="JobServerFacts.cs"];
m4_80 [label="UseConnection(sql =>\r\n            {\r\n                var storage = CreateStorage(sql);\r\n                var distributedLock = new SqlServerDistributedLock(storage, ''hello'', _timeout);\r\n                distributedLock.Dispose();\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''NoLock'', lockMode);\r\n            })", span="107-117", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="JobServerFacts.cs"];
m4_81 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="JobServerFacts.cs"];
m4_89 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobServerFacts.cs"];
m4_21 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="JobServerFacts.cs"];
m4_107 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="JobServerFacts.cs"];
m4_96 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="40-40", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="JobServerFacts.cs"];
m4_36 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="52-52", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="JobServerFacts.cs"];
m4_37 [label="UseConnection(sql =>\r\n            {\r\n                // ReSharper disable once UnusedVariable\r\n                var storage = CreateStorage(sql);\r\n                using (new SqlServerDistributedLock(storage, ''hello'', _timeout))\r\n                {\r\n                    var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                    Assert.Equal(''Exclusive'', lockMode);\r\n                }\r\n            })", span="54-65", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", color=red, community=0, file="JobServerFacts.cs"];
m4_38 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="52-52", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="JobServerFacts.cs"];
m4_9 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobServerFacts.cs"];
m4_59 [label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait()", file="JobServerFacts.cs"];
m4_56 [label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0", cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="JobServerFacts.cs"];
m4_65 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", span="137-137", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="JobServerFacts.cs"];
m4_103 [label="var connection = ConnectionUtils.CreateConnection()", span="139-139", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="JobServerFacts.cs"];
m4_104 [label="action(connection)", span="141-141", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="JobServerFacts.cs"];
m4_105 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", span="137-137", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="JobServerFacts.cs"];
m4_82 [label="Entry lambda expression", span="107-117", cluster="lambda expression", file="JobServerFacts.cs"];
m4_6 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="JobServerFacts.cs"];
m4_7 [label="new SqlServerDistributedLock(null, ''hello'', _timeout)", span="19-19", cluster="lambda expression", file="JobServerFacts.cs"];
m4_8 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="JobServerFacts.cs"];
m4_14 [label="Entry lambda expression", span="27-34", cluster="lambda expression", file="JobServerFacts.cs"];
m4_15 [label="var storage = CreateStorage(connection)", span="29-29", cluster="lambda expression", file="JobServerFacts.cs"];
m4_16 [label="var tooLargeTimeout = TimeSpan.FromSeconds(Int32.MaxValue)", span="30-30", cluster="lambda expression", file="JobServerFacts.cs"];
m4_17 [label="var exception = Assert.Throws<ArgumentException>(() => new SqlServerDistributedLock(storage, ''hello'', tooLargeTimeout))", span="31-31", cluster="lambda expression", file="JobServerFacts.cs"];
m4_23 [label="new SqlServerDistributedLock(storage, ''hello'', tooLargeTimeout)", span="31-31", cluster="lambda expression", file="JobServerFacts.cs"];
m4_18 [label="Assert.Equal(''timeout'', exception.ParamName)", span="33-33", cluster="lambda expression", file="JobServerFacts.cs"];
m4_22 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="JobServerFacts.cs"];
m4_19 [label="Exit lambda expression", span="27-34", cluster="lambda expression", file="JobServerFacts.cs"];
m4_24 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="JobServerFacts.cs"];
m4_28 [label="Entry lambda expression", span="40-48", cluster="lambda expression", file="JobServerFacts.cs"];
m4_29 [label="var storage = CreateStorage(connection)", span="42-42", cluster="lambda expression", file="JobServerFacts.cs"];
m4_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout))", span="44-45", cluster="lambda expression", color=red, community=0, file="JobServerFacts.cs"];
m4_34 [label="new SqlServerDistributedLock(storage, '''', _timeout)", span="45-45", cluster="lambda expression", color=red, community=0, file="JobServerFacts.cs"];
m4_31 [label="Assert.Equal(''resource'', exception.ParamName)", span="47-47", cluster="lambda expression", file="JobServerFacts.cs"];
m4_33 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="JobServerFacts.cs"];
m4_32 [label="Exit lambda expression", span="40-48", cluster="lambda expression", file="JobServerFacts.cs"];
m4_35 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="JobServerFacts.cs"];
m4_39 [label="Entry lambda expression", span="54-65", cluster="lambda expression", file="JobServerFacts.cs"];
m4_40 [label="var storage = CreateStorage(sql)", span="57-57", cluster="lambda expression", file="JobServerFacts.cs"];
m4_42 [label="var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'hello', 'session')'').Single()", span="60-61", cluster="lambda expression", file="JobServerFacts.cs"];
m4_41 [label="new SqlServerDistributedLock(storage, ''hello'', _timeout)", span="58-58", cluster="lambda expression", file="JobServerFacts.cs"];
m4_43 [label="Assert.Equal(''Exclusive'', lockMode)", span="63-63", cluster="lambda expression", color=red, community=0, file="JobServerFacts.cs"];
m4_44 [label="Exit lambda expression", span="54-65", cluster="lambda expression", file="JobServerFacts.cs"];
m4_63 [label="UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="75-83", cluster="lambda expression", file="JobServerFacts.cs"];
m4_70 [label="releaseLock.Wait()", span="81-81", cluster="lambda expression", file="JobServerFacts.cs"];
m4_69 [label="lockAcquired.Set()", span="80-80", cluster="lambda expression", file="JobServerFacts.cs"];
m4_72 [label="Entry lambda expression", span="88-98", cluster="lambda expression", file="JobServerFacts.cs"];
m4_62 [label="Entry lambda expression", span="75-83", cluster="lambda expression", file="JobServerFacts.cs"];
m4_64 [label="Exit lambda expression", span="75-83", cluster="lambda expression", file="JobServerFacts.cs"];
m4_66 [label="Entry lambda expression", span="75-83", cluster="lambda expression", file="JobServerFacts.cs"];
m4_67 [label="var storage = CreateStorage(connection1)", span="77-77", cluster="lambda expression", file="JobServerFacts.cs"];
m4_68 [label="new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="78-78", cluster="lambda expression", file="JobServerFacts.cs"];
m4_71 [label="Exit lambda expression", span="75-83", cluster="lambda expression", file="JobServerFacts.cs"];
m4_73 [label="var storage = CreateStorage(connection2)", span="90-90", cluster="lambda expression", file="JobServerFacts.cs"];
m4_74 [label="Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    })", span="91-97", cluster="lambda expression", file="JobServerFacts.cs"];
m4_77 [label="new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="94-94", cluster="lambda expression", file="JobServerFacts.cs"];
m4_75 [label="Exit lambda expression", span="88-98", cluster="lambda expression", file="JobServerFacts.cs"];
m4_76 [label="Entry lambda expression", span="92-97", cluster="lambda expression", file="JobServerFacts.cs"];
m4_78 [label="Exit lambda expression", span="92-97", cluster="lambda expression", file="JobServerFacts.cs"];
m4_83 [label="var storage = CreateStorage(sql)", span="109-109", cluster="lambda expression", file="JobServerFacts.cs"];
m4_86 [label="var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="113-114", cluster="lambda expression", file="JobServerFacts.cs"];
m4_84 [label="var distributedLock = new SqlServerDistributedLock(storage, ''hello'', _timeout)", span="110-110", cluster="lambda expression", file="JobServerFacts.cs"];
m4_85 [label="distributedLock.Dispose()", span="111-111", cluster="lambda expression", file="JobServerFacts.cs"];
m4_87 [label="Assert.Equal(''NoLock'', lockMode)", span="116-116", cluster="lambda expression", file="JobServerFacts.cs"];
m4_88 [label="Exit lambda expression", span="107-117", cluster="lambda expression", file="JobServerFacts.cs"];
m4_90 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="JobServerFacts.cs"];
m4_91 [label="var storage = new SqlServerStorage(ConnectionUtils.GetConnectionString())", span="123-123", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="JobServerFacts.cs"];
m4_92 [label="new SqlServerDistributedLock(storage, ''hello'', TimeSpan.FromMinutes(5))", span="125-125", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="JobServerFacts.cs"];
m4_93 [label="new SqlServerDistributedLock(storage, ''hello'', TimeSpan.FromMinutes(5))", span="126-126", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="JobServerFacts.cs"];
m4_94 [label="Assert.True(true)", span="128-128", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="JobServerFacts.cs"];
m4_95 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.DistributedLocks_AreReEntrant_FromTheSameThread_OnTheSameResource()", file="JobServerFacts.cs"];
m4_10 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", span="25-25", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", file="JobServerFacts.cs"];
m4_11 [label="UseConnection(connection =>\r\n            {\r\n                var storage = CreateStorage(connection);\r\n                var tooLargeTimeout = TimeSpan.FromSeconds(Int32.MaxValue);\r\n                var exception = Assert.Throws<ArgumentException>(() => new SqlServerDistributedLock(storage, ''hello'', tooLargeTimeout));\r\n\r\n                Assert.Equal(''timeout'', exception.ParamName);\r\n            })", span="27-34", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", file="JobServerFacts.cs"];
m4_12 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", span="25-25", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenTimeoutTooLarge()", file="JobServerFacts.cs"];
m4_45 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="JobServerFacts.cs"];
m4_97 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="JobServerFacts.cs"];
m4_99 [label="Entry Unk.True", span="", cluster="Unk.True", file="JobServerFacts.cs"];
m4_0 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="16-16", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServerFacts.cs"];
m4_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(null, ''hello'', _timeout))", span="18-19", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServerFacts.cs"];
m4_2 [label="Assert.Equal(''storage'', exception.ParamName)", span="21-21", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServerFacts.cs"];
m4_3 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="16-16", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobServerFacts.cs"];
m4_46 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="69-69", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_47 [label="var releaseLock = new ManualResetEventSlim(false)", span="71-71", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_48 [label="var lockAcquired = new ManualResetEventSlim(false)", span="72-72", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_49 [label="var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="74-83", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_53 [label="releaseLock.Set()", span="100-100", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_51 [label="lockAcquired.Wait()", span="86-86", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_50 [label="thread.Start()", span="84-84", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_54 [label="thread.Join()", span="101-101", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_52 [label="UseConnection(connection2 =>\r\n            {\r\n                var storage = CreateStorage(connection2);\r\n                Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    });\r\n            })", span="88-98", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_55 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="69-69", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="JobServerFacts.cs"];
m4_57 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobServerFacts.cs"];
m4_108 [label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", span="", file="JobServerFacts.cs"];
m4_109 [label=storage, span="", file="JobServerFacts.cs"];
m4_110 [label=tooLargeTimeout, span="", file="JobServerFacts.cs"];
m4_111 [label=storage, span="", file="JobServerFacts.cs"];
m4_112 [label=releaseLock, span="", file="JobServerFacts.cs"];
m4_113 [label=lockAcquired, span="", file="JobServerFacts.cs"];
m4_114 [label=storage, span="", file="JobServerFacts.cs"];
m5_40 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="Program.cs"];
m5_5 [label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="Program.cs"];
m5_6 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="26-26", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="Program.cs"];
m5_7 [label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="Program.cs"];
m5_0 [label="Entry HangFire.Tests.JobSteps.GivenAJob()", span="18-18", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="Program.cs"];
m5_1 [label="Given(String.Format(''a job of the '{0}' type'', DefaultJobType.AssemblyQualifiedName))", span="20-20", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="Program.cs"];
m5_2 [label="Exit HangFire.Tests.JobSteps.GivenAJob()", span="18-18", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="Program.cs"];
m5_17 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="Program.cs"];
m5_18 [label="GivenTheJobOfTheTypeWithTheFollowingArguments(JobSteps.DefaultJobId, type, args)", span="44-44", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="Program.cs"];
m5_19 [label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="Program.cs"];
m5_29 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="Program.cs"];
m5_8 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Program.cs"];
m5_27 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="Program.cs"];
m5_46 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="94-97", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="Program.cs"];
m5_45 [label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="Program.cs"];
m5_47 [label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="Program.cs"];
m5_25 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="Program.cs"];
m5_3 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Program.cs"];
m5_12 [label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="Program.cs"];
m5_13 [label="GivenTheJobOfTheTypeWithTheFollowingArguments(jobId, type, new Table(''Name'', ''Value''))", span="38-38", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="Program.cs"];
m5_14 [label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="Program.cs"];
m5_9 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="Program.cs"];
m5_10 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="32-32", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="Program.cs"];
m5_11 [label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="Program.cs"];
m5_15 [label="Entry Table.cstr", span="", cluster="Table.cstr", file="Program.cs"];
m5_53 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="Program.cs"];
m5_26 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Program.cs"];
m5_24 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="Program.cs"];
m5_41 [label="Entry HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="Program.cs"];
m5_42 [label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', typeof(TestJob).AssemblyQualifiedName },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', String.Empty }\r\n                    })", span="81-88", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="Program.cs"];
m5_43 [label="Exit HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="Program.cs"];
m5_28 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="Program.cs"];
m5_33 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="Program.cs"];
m5_30 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="Program.cs"];
m5_31 [label="x[''Name'']", span="64-64", cluster="lambda expression", file="Program.cs"];
m5_32 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="Program.cs"];
m5_34 [label="x[''Value'']", span="64-64", cluster="lambda expression", file="Program.cs"];
m5_35 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="Program.cs"];
m5_21 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                ''StateProp'',\r\n                ''SomeValue'')", span="54-57", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="Program.cs"];
m5_16 [label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="Program.cs"];
m5_20 [label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                '''')", span="50-52", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="Program.cs"];
m5_22 [label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(args.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="59-66", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="Program.cs"];
m5_23 [label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="Program.cs"];
m5_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="Program.cs"];
m5_44 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="Program.cs"];
m5_52 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="Program.cs"];
m5_36 [label="Entry HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="Program.cs"];
m5_37 [label="GivenAJobOfTheTypeWithTheFollowingArguments(typeof(CustomJob).AssemblyQualifiedName, table)", span="72-72", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="Program.cs"];
m5_38 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', QueueSteps.DefaultQueue),\r\n                DefaultJobId)", span="73-75", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="Program.cs"];
m5_39 [label="Exit HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="Program.cs"];
m5_48 [label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="Program.cs"];
m5_49 [label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="106-108", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="Program.cs"];
m5_50 [label="Assert.AreEqual(state, jobState)", span="110-110", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="Program.cs"];
m5_51 [label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="Program.cs"];
m5_54 [label="HangFire.Tests.JobSteps", span="", file="Program.cs"];
m8_44 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="71-71", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="ServerComponentRunnerFacts.cs"];
m8_45 [label="Assert.IsNull(_payload)", span="73-73", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="ServerComponentRunnerFacts.cs"];
m8_46 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="71-71", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="ServerComponentRunnerFacts.cs"];
m8_48 [label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="77-77", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="ServerComponentRunnerFacts.cs"];
m8_49 [label=_queues, span="79-79", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="ServerComponentRunnerFacts.cs"];
m8_50 [label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="81-81", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="ServerComponentRunnerFacts.cs"];
m8_51 [label="Exit HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="77-77", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="ServerComponentRunnerFacts.cs"];
m8_3 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ServerComponentRunnerFacts.cs"];
m8_29 [label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="24-24", cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs"];
m8_10 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="30-30", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_11 [label="table.Rows", span="32-32", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_16 [label="_queues = table.Rows.Select(x => x[''Queue'']).ToList()", span="40-40", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_12 [label="var i = 0", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_13 [label="i < int.Parse(row[''Jobs''])", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_14 [label="Given(String.Format(''a job in the '{0}' queue'', row[''Queue'']))", span="36-36", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_15 [label="i++", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_17 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="30-30", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="ServerComponentRunnerFacts.cs"];
m8_8 [label="Entry HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", span="13-13", cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", file="ServerComponentRunnerFacts.cs"];
m8_0 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="18-18", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="ServerComponentRunnerFacts.cs"];
m8_1 [label="Given(String.Format(''the fetcher listening the '{0}' queue'', QueueSteps.DefaultQueue))", span="20-20", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="ServerComponentRunnerFacts.cs"];
m8_2 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="18-18", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="ServerComponentRunnerFacts.cs"];
m8_9 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerFacts.cs"];
m8_40 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ServerComponentRunnerFacts.cs"];
m8_47 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="ServerComponentRunnerFacts.cs"];
m8_18 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="ServerComponentRunnerFacts.cs"];
m8_5 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="24-24", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="ServerComponentRunnerFacts.cs"];
m8_6 [label="_fetcher = new JobFetcher(queue, TimeSpan.FromSeconds(1))", span="26-26", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="ServerComponentRunnerFacts.cs"];
m8_7 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="24-24", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="ServerComponentRunnerFacts.cs"];
m8_36 [label="Entry Unk.When", span="", cluster="Unk.When", file="ServerComponentRunnerFacts.cs"];
m8_41 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="65-65", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="ServerComponentRunnerFacts.cs"];
m8_42 [label="Assert.AreEqual(jobId, _payload.Id)", span="67-67", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="ServerComponentRunnerFacts.cs"];
m8_43 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="65-65", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="ServerComponentRunnerFacts.cs"];
m8_28 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerComponentRunnerFacts.cs"];
m8_25 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="44-44", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="ServerComponentRunnerFacts.cs"];
m8_26 [label="_payload = _fetcher.DequeueJob(new CancellationTokenSource().Token)", span="46-46", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="ServerComponentRunnerFacts.cs"];
m8_27 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="44-44", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="ServerComponentRunnerFacts.cs"];
m8_22 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m8_23 [label="x[''Queue'']", span="40-40", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m8_24 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m8_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServerComponentRunnerFacts.cs"];
m8_52 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="ServerComponentRunnerFacts.cs"];
m8_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="ServerComponentRunnerFacts.cs"];
m8_30 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="50-50", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="ServerComponentRunnerFacts.cs"];
m8_31 [label="var i = 0", span="52-52", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="ServerComponentRunnerFacts.cs"];
m8_32 [label="i < count", span="52-52", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="ServerComponentRunnerFacts.cs"];
m8_34 [label="i++", span="52-52", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="ServerComponentRunnerFacts.cs"];
m8_33 [label="When(''it dequeues a job'')", span="54-54", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="ServerComponentRunnerFacts.cs"];
m8_35 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="50-50", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="ServerComponentRunnerFacts.cs"];
m8_37 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="ServerComponentRunnerFacts.cs"];
m8_38 [label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="61-61", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="ServerComponentRunnerFacts.cs"];
m8_39 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="ServerComponentRunnerFacts.cs"];
m8_21 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ServerComponentRunnerFacts.cs"];
m8_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="ServerComponentRunnerFacts.cs"];
m8_53 [label="HangFire.Tests.JobFetcherSteps", span="", file="ServerComponentRunnerFacts.cs"];
m9_12 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerComponentRunnerOptions.cs"];
m9_13 [label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", span="84-84", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerComponentRunnerOptions.cs"];
m9_14 [label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="85-85", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerComponentRunnerOptions.cs"];
m9_15 [label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="86-86", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerComponentRunnerOptions.cs"];
m9_16 [label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="87-87", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerComponentRunnerOptions.cs"];
m9_17 [label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="88-88", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerComponentRunnerOptions.cs"];
m9_18 [label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="ServerComponentRunnerOptions.cs"];
m9_8 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="ServerComponentRunnerOptions.cs"];
m9_19 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="ServerComponentRunnerOptions.cs"];
m9_10 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptions.cs"];
m9_21 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="ServerComponentRunnerOptions.cs"];
m9_0 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_1 [label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="35-35", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_2 [label="ServerName = Environment.GetEnvironmentVariable(''COMPUTERNAME'')", span="36-36", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_3 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="37-37", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_4 [label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="38-38", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_5 [label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="39-39", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_6 [label="ServerWatchdogOptions = new ServerWatchdogOptions()", span="41-41", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_7 [label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ServerComponentRunnerOptions.cs"];
m9_11 [label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerComponentRunnerOptions.cs"];
m9_22 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="ServerComponentRunnerOptions.cs"];
m9_23 [label="''''' + x + '''''", span="86-86", cluster="lambda expression", file="ServerComponentRunnerOptions.cs"];
m9_24 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="ServerComponentRunnerOptions.cs"];
m9_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServerComponentRunnerOptions.cs"];
m9_9 [label="Entry System.Environment.GetEnvironmentVariable(string)", span="0-0", cluster="System.Environment.GetEnvironmentVariable(string)", file="ServerComponentRunnerOptions.cs"];
m9_25 [label="Hangfire.BackgroundJobServerOptions", span="", file="ServerComponentRunnerOptions.cs"];
m10_17 [label="HangFire.Server.ServerHeartbeat", span="", cluster="HangFire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs"];
m10_18 [label="return ''Server Heartbeat'';", span="49-49", cluster="HangFire.Server.ServerHeartbeat.ToString()", color=green, community=0, file="ServerHeartbeat.cs"];
m10_19 [label="Exit HangFire.Server.ServerHeartbeat.ToString()", span="47-47", cluster="HangFire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs"];
m10_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerHeartbeat.cs"];
m10_9 [label="Entry HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37", cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs"];
m10_10 [label="var connection = _storage.GetConnection()", span="39-39", cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs"];
m10_12 [label="cancellationToken.WaitHandle.WaitOne(HeartbeatInterval)", span="44-44", cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs"];
m10_11 [label="connection.Heartbeat(_serverId)", span="41-41", cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs"];
m10_13 [label="Exit HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37", cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs"];
m10_16 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerHeartbeat.cs"];
m10_15 [label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="43-43", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="ServerHeartbeat.cs"];
m10_0 [label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_1 [label="storage == null", span="30-30", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_3 [label="serverId == null", span="31-31", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_5 [label="_storage = storage", span="33-33", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_6 [label="_serverId = serverId", span="34-34", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_2 [label="throw new ArgumentNullException(''storage'');", span="30-30", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_4 [label="throw new ArgumentNullException(''serverId'');", span="31-31", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_7 [label="Exit HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ServerHeartbeat.cs"];
m10_14 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="ServerHeartbeat.cs"];
m11_10 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)", file="ServerWatchdog.cs"];
m11_40 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="ServerWatchdog.cs"];
m11_41 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ServerWatchdog.cs"];
m11_39 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="ServerWatchdog.cs"];
m11_15 [label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", span="50-52", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs"];
m11_13 [label="var serversRemoved = connection.RemoveTimedOutServers(_options.ServerTimeout)", span="47-47", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs"];
m11_20 [label="timeAgo.Equals(''day'')", span="28-28", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ServerWatchdog.cs"];
m11_16 [label="cancellationToken.WaitHandle.WaitOne(_options.CheckInterval)", span="56-56", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs"];
m11_22 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerWatchdog.cs"];
m11_23 [label="HangFire.Server.ServerWatchdog", span="", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ServerWatchdog.cs"];
m11_17 [label="Exit HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs"];
m11_19 [label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="44-44", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs"];
m11_21 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="ServerWatchdog.cs"];
m11_18 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="ServerWatchdog.cs"];
m11_24 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="24-24", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="ServerWatchdog.cs"];
m11_14 [label="serversRemoved != 0", span="48-48", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs"];
m11_9 [label="Exit HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", span="34-34", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_0 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdog.cs"];
m11_6 [label="throw new ArgumentNullException(''options'');", span="37-37", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_7 [label="_storage = storage", span="39-39", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_4 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_1 [label="Exit HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdog.cs"];
m11_3 [label="storage == null", span="36-36", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_5 [label="options == null", span="37-37", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_2 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", span="34-34", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_8 [label="_options = options", span="40-40", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage, HangFire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs"];
m11_50 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="ServerWatchdog.cs"];
m11_12 [label="var connection = _storage.GetConnection()", span="45-45", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs"];
m11_11 [label="Entry HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs"];
m11_51 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_52 [label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="82-83", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_53 [label="Assert.IsNotNull(fetchedTimestamp)", span="85-85", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_54 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_55 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_56 [label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="91-92", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_57 [label="Assert.IsNull(fetchedTimestamp)", span="94-94", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_58 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="ServerWatchdog.cs"];
m11_38 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ServerWatchdog.cs"];
m11_46 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="70-70", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ServerWatchdog.cs"];
m11_47 [label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="72-74", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ServerWatchdog.cs"];
m11_48 [label="Assert.IsNull(checkedTimestamp)", span="76-76", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ServerWatchdog.cs"];
m11_49 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="70-70", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="ServerWatchdog.cs"];
m11_37 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="ServerWatchdog.cs"];
m11_31 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="47-47", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ServerWatchdog.cs"];
m11_32 [label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="49-51", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ServerWatchdog.cs"];
m11_33 [label="Assert.IsNotNull(checkedTimestamp)", span="53-53", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ServerWatchdog.cs"];
m11_34 [label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="54-54", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ServerWatchdog.cs"];
m11_35 [label="Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="56-56", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ServerWatchdog.cs"];
m11_36 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="47-47", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="ServerWatchdog.cs"];
m11_42 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="60-60", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="ServerWatchdog.cs"];
m11_43 [label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="62-64", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", color=green, community=0, file="ServerWatchdog.cs"];
m11_44 [label="Assert.IsNotNull(checkedTimestamp)", span="66-66", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="ServerWatchdog.cs"];
m11_45 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="60-60", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="ServerWatchdog.cs"];
m12_11 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerObjectsInstaller.cs"];
m12_12 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerObjectsInstaller.cs"];
m12_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_1 [label="TransactionIsolationLevel = null", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="33-33", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="35-35", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_4 [label="JobExpirationCheckInterval = TimeSpan.FromMinutes(30)", span="37-37", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="38-38", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=red, community=0, file="SqlServerObjectsInstaller.cs"];
m12_6 [label="PrepareSchemaIfNecessary = true", span="39-39", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_7 [label="DashboardJobListLimit = 10000", span="40-40", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_8 [label="_schemaName = Constants.DefaultSchema", span="41-41", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_9 [label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="42-42", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_10 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerObjectsInstaller.cs"];
m12_13 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", file="SqlServerObjectsInstaller.cs"];
m13_23 [label="Entry HangFire.Server.Worker.ToString()", span="72-72", cluster="HangFire.Server.Worker.ToString()", file="Worker.cs"];
m13_24 [label="return ''Worker #'' + _context.WorkerNumber;", span="74-74", cluster="HangFire.Server.Worker.ToString()", color=green, community=0, file="Worker.cs"];
m13_25 [label="Exit HangFire.Server.Worker.ToString()", span="72-72", cluster="HangFire.Server.Worker.ToString()", file="Worker.cs"];
m13_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="30-30", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_9 [label="_storage = storage", span="41-41", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_10 [label="_context = context", span="42-42", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_11 [label="_process = process", span="43-43", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_12 [label="_stateMachineFactory = stateMachineFactory", span="44-44", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_7 [label="stateMachineFactory == null", span="39-39", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_1 [label="storage == null", span="36-36", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_3 [label="context == null", span="37-37", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_5 [label="process == null", span="38-38", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_8 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="39-39", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_2 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_4 [label="throw new ArgumentNullException(''context'');", span="37-37", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_6 [label="throw new ArgumentNullException(''process'');", span="38-38", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_13 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="30-30", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m13_44 [label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="Worker.cs"];
m13_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Worker.cs"];
m13_22 [label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_26 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="82-82", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_27 [label="var processingState = new ProcessingState(_context.ServerName)", span="83-83", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_33 [label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="105-105", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_28 [label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="85-88", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_40 [label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="128-128", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_31 [label="var jobData = connection.GetJobData(jobId)", span="102-102", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_32 [label="jobData.EnsureLoaded()", span="103-103", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_34 [label="process.Run(performContext, jobData.Job)", span="107-107", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_29 [label="return;", span="90-90", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_30 [label="State state", span="98-98", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_35 [label="state = new SucceededState()", span="109-109", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_37 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="113-116", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_39 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="120-123", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_36 [label=JobPerformanceException, span="111-111", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_38 [label=Exception, span="118-118", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_41 [label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m13_42 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="Worker.cs"];
m13_50 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="Worker.cs"];
m13_21 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs"];
m13_47 [label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35", cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="Worker.cs"];
m13_46 [label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27", cluster="HangFire.Storage.JobData.EnsureLoaded()", file="Worker.cs"];
m13_15 [label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m13_16 [label="var connection = _storage.GetConnection()", span="49-49", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m13_17 [label="var nextJob = connection.FetchNextJob(_context.QueueNames, cancellationToken)", span="51-51", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m13_18 [label="ProcessJob(nextJob.JobId, connection, _process)", span="55-55", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m13_19 [label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m13_48 [label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20", cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="Worker.cs"];
m13_45 [label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37", cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs"];
m13_43 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs"];
m13_49 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs"];
m13_20 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="Worker.cs"];
m13_51 [label="HangFire.Server.Worker", span="", file="Worker.cs"];
m14_0 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerManager.cs"];
m14_1 [label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerManager.cs"];
n19 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n6  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n11  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n17  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid, color=red];
n5 -> n8  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid, color=red];
n6 -> n9  [key=2, style=dotted, color=red];
n7 -> n4  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid, color=red];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> n14  [key=2, style=dotted, color=red];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=2, style=dotted];
n13 -> n10  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid, color=red];
n17 -> n18  [key=0, style=solid, color=red];
n17 -> n10  [key=2, style=dotted, color=red];
n18 -> n16  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=2, style=dotted];
m0_32 -> n14  [key=0, style=bold, color=blue];
m0_32 -> m0_50  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_35  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_49  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_35  [key=2, style=dotted];
m0_48 -> m0_45  [key=0, style=bold, color=blue];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_48 -> m0_31  [key=2, style=dotted, color=green];
m0_48 -> m0_50  [key=1, style=dashed, color=green, label=componentRunners];
m0_48 -> m0_51  [key=1, style=dashed, color=green, label=componentRunners];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m0_4 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_4 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_4 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m0_5 -> m0_4  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_56 -> m0_68  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_64  [key=2, style=dotted];
m0_56 -> m0_65  [key=2, style=dotted];
m0_56 -> m0_62  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_71  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_72  [key=2, style=dotted];
m0_69 -> m0_73  [key=2, style=dotted];
m0_69 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_70 -> m0_56  [key=0, style=bold, color=blue];
m0_70 -> m0_69  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_36  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_7  [key=3, color=darkorchid, style=bold, label="Field variable string[] _queues"];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_29  [key=0, style=solid];
m0_14 -> m0_30  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid, color=red];
m0_16 -> m0_22  [key=2, style=dotted];
m0_16 -> m0_23  [key=2, style=dotted];
m0_16 -> m0_24  [key=2, style=dotted];
m0_16 -> m0_31  [key=2, style=dotted];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=processes];
m0_16 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=processes];
m0_17 -> m0_25  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid, color=red];
m0_17 -> m0_32  [key=2, style=dotted, color=red];
m0_17 -> m0_33  [key=2, style=dotted, color=red];
m0_11 -> m0_13  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_7 -> m0_6  [key=0, style=bold, color=blue];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_12 -> m0_18  [key=0, style=solid];
m0_12 -> m0_20  [key=2, style=dotted];
m0_12 -> m0_29  [key=0, style=solid];
m0_12 -> m0_30  [key=2, style=dotted];
m0_6 -> m0_18  [key=0, style=solid];
m0_6 -> m0_19  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_8 -> m0_18  [key=0, style=solid];
m0_8 -> m0_20  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_8 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
m0_8 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_8 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_8 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_8 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_8 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_8 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_8 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_8 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_8 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_10 -> m0_18  [key=0, style=solid];
m0_10 -> m0_21  [key=2, style=dotted];
m0_10 -> m0_29  [key=0, style=solid];
m0_10 -> m0_30  [key=2, style=dotted];
m0_18 -> m0_4  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_33  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [key=2, style=dotted];
m0_39 -> m0_44  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [key=2, style=dotted];
m0_60 -> m0_67  [key=2, style=dotted];
m0_44 -> m0_42  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_34  [key=2, style=dotted];
m0_19 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_35  [key=2, style=dotted];
m0_29 -> m0_8  [key=0, style=bold, color=blue];
m0_73 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_17  [key=1, style=dashed, color=red, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_73 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m0_54 -> m0_58  [key=0, style=solid];
m0_54 -> m0_59  [key=0, style=bold, color=crimson];
m0_54 -> m0_60  [key=0, style=bold, color=crimson];
m0_54 -> m0_52  [key=0, style=solid];
m0_54 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_62  [key=2, style=dotted];
m0_58 -> m0_63  [key=2, style=dotted];
m0_58 -> m0_32  [key=0, style=bold, color=blue];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_64  [key=2, style=dotted];
m0_59 -> m0_65  [key=2, style=dotted];
m0_59 -> m0_66  [key=2, style=dotted];
m0_61 -> m0_54  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_36 -> m0_34  [key=0, style=bold, color=blue];
m0_41 -> m0_66  [key=0, style=solid];
m0_41 -> m0_25  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [key=2, style=dotted];
m0_67 -> m0_41  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_72 -> m0_71  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_54  [key=2, style=dotted, color=green];
m0_49 -> m0_33  [key=2, style=dotted, color=green];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_56  [key=2, style=dotted, color=green];
m0_50 -> m0_33  [key=2, style=dotted, color=green];
m0_50 -> m0_31  [key=2, style=dotted];
m0_50 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=processes];
m0_50 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=processes];
m0_50 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=processes];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_57  [key=2, style=dotted];
m0_51 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_52 -> m0_47  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_55  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_62  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_74  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_37  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_42  [key=2, style=dotted, color=green];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_36  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_38  [key=2, style=dotted];
m0_25 -> m0_39  [key=2, style=dotted];
m0_25 -> m0_36  [key=2, style=dotted];
m0_25 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_36  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_36  [key=2, style=dotted];
m0_27 -> m0_29  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_40  [key=2, style=dotted];
m0_28 -> m0_41  [key=2, style=dotted];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_45  [key=2, style=dotted];
m0_40 -> m0_46  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_59  [key=2, style=dotted];
m0_53 -> m0_60  [key=2, style=dotted];
m0_53 -> m0_61  [key=2, style=dotted];
m0_53 -> m0_62  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_63  [key=2, style=dotted];
m0_55 -> m0_61  [key=2, style=dotted];
m0_55 -> m0_62  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_77 -> m0_38  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_49  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_50  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_77 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_16  [key=2, style=dotted];
m2_10 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=connection];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_20  [key=2, style=dotted];
m2_14 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=0, style=solid];
m2_11 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=table];
m2_13 -> m2_11  [key=0, style=solid];
m2_13 -> m2_18  [key=2, style=dotted];
m2_13 -> m2_19  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_17  [key=2, style=dotted];
m2_15 -> m2_9  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
m2_2 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_4 -> m2_7  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_7 -> m2_2  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_21 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.ExpirationManager"];
m2_21 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.ExpirationManager"];
m2_21 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.ExpirationManager"];
m2_21 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.ExpirationManager"];
m4_20 -> m4_100  [key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_102  [key=2, style=dotted];
m4_101 -> m4_20  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid, color=red];
m4_26 -> m4_27  [key=0, style=solid, color=red];
m4_26 -> m4_13  [key=2, style=dotted, color=red];
m4_26 -> m4_28  [key=1, style=dashed, color=red, label="lambda expression"];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_79 -> m4_80  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_13  [key=2, style=dotted];
m4_80 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid, color=red];
m4_37 -> m4_38  [key=0, style=solid, color=red];
m4_37 -> m4_13  [key=2, style=dotted, color=red];
m4_37 -> m4_39  [key=1, style=dashed, color=red, label="lambda expression"];
m4_38 -> m4_36  [key=0, style=bold, color=blue];
m4_65 -> m4_103  [key=0, style=solid];
m4_65 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_106  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_107  [key=2, style=dotted];
m4_105 -> m4_65  [key=0, style=bold, color=blue];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=2, style=dotted];
m4_8 -> m4_6  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_20  [key=2, style=dotted];
m4_15 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=storage];
m4_15 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=storage];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_21  [key=2, style=dotted];
m4_16 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=tooLargeTimeout];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_4  [key=2, style=dotted];
m4_17 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_9  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_5  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_19 -> m4_14  [key=0, style=bold, color=blue];
m4_24 -> m4_22  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid, color=red];
m4_29 -> m4_20  [key=2, style=dotted];
m4_29 -> m4_34  [key=1, style=dashed, color=red, label=storage];
m4_30 -> m4_31  [key=0, style=solid, color=red];
m4_30 -> m4_4  [key=2, style=dotted, color=red];
m4_30 -> m4_33  [key=1, style=dashed, color=red, label="lambda expression"];
m4_34 -> m4_35  [key=0, style=solid, color=red];
m4_34 -> m4_9  [key=2, style=dotted, color=red];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_5  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid, color=red];
m4_32 -> m4_28  [key=0, style=bold, color=blue];
m4_35 -> m4_33  [key=0, style=bold, color=blue];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_20  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid, color=red];
m4_42 -> m4_4  [key=2, style=dotted];
m4_42 -> m4_45  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_9  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid, color=red];
m4_43 -> m4_5  [key=2, style=dotted, color=red];
m4_44 -> m4_39  [key=0, style=bold, color=blue];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_65  [key=2, style=dotted];
m4_63 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_59  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_60  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_64 -> m4_62  [key=0, style=bold, color=blue];
m4_66 -> m4_67  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_20  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_9  [key=2, style=dotted];
m4_71 -> m4_66  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_20  [key=2, style=dotted];
m4_73 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=storage];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_4  [key=2, style=dotted];
m4_74 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_9  [key=2, style=dotted];
m4_75 -> m4_72  [key=0, style=bold, color=blue];
m4_76 -> m4_77  [key=0, style=solid];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_20  [key=2, style=dotted];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_4  [key=2, style=dotted];
m4_86 -> m4_45  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_9  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_89  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_5  [key=2, style=dotted];
m4_88 -> m4_82  [key=0, style=bold, color=blue];
m4_90 -> m4_91  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_96  [key=2, style=dotted];
m4_91 -> m4_97  [key=2, style=dotted];
m4_91 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=storage];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_9  [key=2, style=dotted];
m4_92 -> m4_98  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_9  [key=2, style=dotted];
m4_93 -> m4_98  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_99  [key=2, style=dotted];
m4_95 -> m4_90  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_1 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_56  [key=2, style=dotted];
m4_47 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m4_47 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m4_47 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m4_47 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_56  [key=2, style=dotted];
m4_48 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m4_48 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m4_48 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_57  [key=2, style=dotted];
m4_49 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label=thread];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_60  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_59  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_58  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_61  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_13  [key=2, style=dotted];
m4_52 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_55 -> m4_46  [key=0, style=bold, color=blue];
m4_108 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_26  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_30  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_34  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_37  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_108 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m4_109 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=storage];
m4_110 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=tooLargeTimeout];
m4_111 -> m4_34  [key=1, style=dashed, color=red, label=storage];
m4_112 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m4_112 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m4_113 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m4_113 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m4_114 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=storage];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=2, style=dotted];
m5_6 -> m5_4  [key=2, style=dotted];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_36  [key=3, color=darkorchid, style=bold, label="Parameter variable Table args"];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_16  [key=2, style=dotted];
m5_19 -> m5_17  [key=0, style=bold, color=blue];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_3  [key=2, style=dotted];
m5_46 -> m5_25  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_47 -> m5_45  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=2, style=dotted];
m5_13 -> m5_16  [key=2, style=dotted];
m5_14 -> m5_12  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_8  [key=2, style=dotted];
m5_10 -> m5_4  [key=2, style=dotted];
m5_11 -> m5_9  [key=0, style=bold, color=blue];
m5_41 -> m5_42  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_3  [key=2, style=dotted];
m5_42 -> m5_26  [key=2, style=dotted];
m5_42 -> m5_44  [key=2, style=dotted];
m5_42 -> m5_29  [key=2, style=dotted];
m5_43 -> m5_41  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_33  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_3  [key=2, style=dotted];
m5_21 -> m5_25  [key=2, style=dotted];
m5_16 -> m5_20  [key=0, style=solid];
m5_16 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_16 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_16 -> m5_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m5_16 -> m5_17  [key=3, color=darkorchid, style=bold, label="Parameter variable Table args"];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_3  [key=2, style=dotted];
m5_20 -> m5_24  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_3  [key=2, style=dotted];
m5_22 -> m5_26  [key=2, style=dotted];
m5_22 -> m5_27  [key=2, style=dotted];
m5_22 -> m5_28  [key=2, style=dotted];
m5_22 -> m5_29  [key=2, style=dotted];
m5_22 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_22 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_23 -> m5_16  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_17  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_3  [key=2, style=dotted];
m5_38 -> m5_40  [key=2, style=dotted];
m5_39 -> m5_36  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_3  [key=2, style=dotted];
m5_49 -> m5_52  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_53  [key=2, style=dotted];
m5_51 -> m5_48  [key=0, style=bold, color=blue];
m5_54 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m5_54 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m5_54 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_47  [key=2, style=dotted];
m8_46 -> m8_44  [key=0, style=bold, color=blue];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [key=0, style=solid];
m8_50 -> m8_49  [key=0, style=solid];
m8_50 -> m8_3  [key=2, style=dotted];
m8_50 -> m8_52  [key=2, style=dotted];
m8_51 -> m8_48  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=Table];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_16  [key=0, style=solid];
m8_11 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label=row];
m8_11 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=row];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_20  [key=2, style=dotted];
m8_16 -> m8_21  [key=2, style=dotted];
m8_16 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_11  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_19  [key=2, style=dotted];
m8_14 -> m8_4  [key=2, style=dotted];
m8_15 -> m8_13  [key=0, style=solid];
m8_15 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_17 -> m8_10  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [key=2, style=dotted];
m8_6 -> m8_9  [key=2, style=dotted];
m8_6 -> m8_6  [key=3, color=darkorchid, style=bold, label="Field variable int MaxDefaultWorkerCount"];
m8_7 -> m8_5  [key=0, style=bold, color=blue];
m8_41 -> m8_42  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_40  [key=2, style=dotted];
m8_43 -> m8_41  [key=0, style=bold, color=blue];
m8_25 -> m8_26  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [key=2, style=dotted];
m8_26 -> m8_29  [key=2, style=dotted];
m8_27 -> m8_25  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_35  [key=0, style=solid];
m8_34 -> m8_32  [key=0, style=solid];
m8_34 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_36  [key=2, style=dotted];
m8_35 -> m8_30  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=2, style=dotted];
m8_39 -> m8_37  [key=0, style=bold, color=blue];
m8_53 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m8_53 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m8_53 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m8_53 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m8_53 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m8_53 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m8_53 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m9_12 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m9_12 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m9_12 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_19  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_19  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_20  [key=2, style=dotted];
m9_15 -> m9_21  [key=2, style=dotted];
m9_15 -> m9_19  [key=2, style=dotted];
m9_15 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=2, style=dotted];
m9_18 -> m9_12  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_8  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_9  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_10  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_10  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_11  [key=2, style=dotted];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_22  [key=0, style=bold, color=blue];
m9_25 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m9_25 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m10_17 -> m10_18  [key=0, style=solid, color=green];
m10_17 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerHeartbeat"];
m10_17 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerHeartbeat"];
m10_17 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerHeartbeat"];
m10_17 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerHeartbeat"];
m10_18 -> m10_19  [key=0, style=solid, color=green];
m10_19 -> m10_17  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_14  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_16  [key=2, style=dotted];
m10_12 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_15  [key=2, style=dotted];
m10_13 -> m10_9  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m10_0 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_2 -> m10_7  [key=0, style=solid];
m10_2 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_7  [key=0, style=solid];
m10_4 -> m10_8  [key=2, style=dotted];
m10_7 -> m10_0  [key=0, style=bold, color=blue];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_20  [key=2, style=dotted];
m11_15 -> m11_21  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_19  [key=2, style=dotted];
m11_13 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label=serversRemoved];
m11_20 -> m11_22  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_9  [key=2, style=dotted];
m11_16 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_16 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_16 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m11_22 -> m11_13  [key=2, style=dotted];
m11_22 -> m11_24  [key=0, style=solid];
m11_22 -> m11_12  [key=2, style=dotted];
m11_23 -> m11_13  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_14  [key=2, style=dotted];
m11_23 -> m11_15  [key=2, style=dotted];
m11_23 -> m11_48  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.BackgroundJobServerOptions _options"];
m11_23 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerWatchdog"];
m11_23 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerWatchdog"];
m11_23 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerWatchdog"];
m11_23 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerWatchdog"];
m11_17 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=time];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_11  [key=0, style=bold, color=blue];
m11_19 -> m11_23  [key=0, style=solid];
m11_19 -> m11_10  [key=2, style=dotted];
m11_21 -> m11_23  [key=0, style=solid];
m11_21 -> m11_11  [key=2, style=dotted];
m11_18 -> m11_20  [key=0, style=solid];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_9  [key=2, style=dotted];
m11_24 -> m11_16  [key=0, style=bold, color=blue];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=0, style=solid];
m11_9 -> m11_2  [key=0, style=bold, color=blue];
m11_0 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_6 -> m11_13  [key=2, style=dotted];
m11_6 -> m11_8  [key=0, style=solid];
m11_6 -> m11_12  [key=2, style=dotted];
m11_6 -> m11_9  [key=0, style=solid];
m11_6 -> m11_10  [key=2, style=dotted];
m11_7 -> m11_13  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_14  [key=2, style=dotted];
m11_7 -> m11_15  [key=2, style=dotted];
m11_4 -> m11_6  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_9  [key=2, style=dotted];
m11_4 -> m11_10  [key=2, style=dotted];
m11_1 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=time];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m11_3 -> m11_7  [key=0, style=solid];
m11_3 -> m11_10  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_5  [key=0, style=solid];
m11_5 -> m11_7  [key=0, style=solid];
m11_5 -> m11_11  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_2 -> m11_4  [key=0, style=solid];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_9  [key=2, style=dotted];
m11_2 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerWatchdogOptions"];
m11_2 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m11_2 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerWatchdogOptions"];
m11_8 -> m11_0  [key=0, style=bold, color=blue];
m11_8 -> m11_9  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_18  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m11_51 -> m11_52  [key=0, style=solid];
m11_52 -> m11_13  [key=2, style=dotted];
m11_52 -> m11_37  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_53 -> m11_38  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_54 -> m11_51  [key=0, style=bold, color=blue];
m11_55 -> m11_56  [key=0, style=solid];
m11_56 -> m11_13  [key=2, style=dotted];
m11_56 -> m11_37  [key=2, style=dotted];
m11_56 -> m11_57  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_50  [key=2, style=dotted];
m11_58 -> m11_55  [key=0, style=bold, color=blue];
m11_46 -> m11_47  [key=0, style=solid];
m11_47 -> m11_13  [key=2, style=dotted];
m11_47 -> m11_37  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_50  [key=2, style=dotted];
m11_49 -> m11_46  [key=0, style=bold, color=blue];
m11_31 -> m11_32  [key=0, style=solid];
m11_32 -> m11_13  [key=2, style=dotted];
m11_32 -> m11_37  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label=checkedTimestamp];
m11_33 -> m11_38  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_39  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_40  [key=2, style=dotted];
m11_35 -> m11_41  [key=2, style=dotted];
m11_36 -> m11_31  [key=0, style=bold, color=blue];
m11_42 -> m11_43  [key=0, style=solid, color=green];
m11_43 -> m11_44  [key=0, style=solid, color=green];
m11_43 -> m11_13  [key=2, style=dotted, color=green];
m11_43 -> m11_37  [key=2, style=dotted, color=green];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_38  [key=2, style=dotted];
m11_45 -> m11_42  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_0  [key=3, color=darkorchid, style=bold, label="Field variable int RequiredSchemaVersion"];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_11  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_12  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid, color=red];
m12_4 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid, color=red];
m12_5 -> m12_12  [key=2, style=dotted, color=red];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_12  [key=2, style=dotted];
m12_10 -> m12_0  [key=0, style=bold, color=blue];
m12_13 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_5  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m13_23 -> m13_24  [key=0, style=solid, color=green];
m13_24 -> m13_25  [key=0, style=solid, color=green];
m13_25 -> m13_23  [key=0, style=bold, color=blue];
m13_0 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m13_0 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m13_0 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m13_0 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m13_0 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m13_0 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_7 -> m13_9  [key=0, style=solid];
m13_7 -> m13_8  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_5  [key=0, style=solid];
m13_5 -> m13_7  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_8 -> m13_13  [key=0, style=solid];
m13_8 -> m13_14  [key=2, style=dotted];
m13_2 -> m13_13  [key=0, style=solid];
m13_2 -> m13_14  [key=2, style=dotted];
m13_4 -> m13_13  [key=0, style=solid];
m13_4 -> m13_14  [key=2, style=dotted];
m13_6 -> m13_13  [key=0, style=solid];
m13_6 -> m13_14  [key=2, style=dotted];
m13_13 -> m13_0  [key=0, style=bold, color=blue];
m13_22 -> m13_26  [key=0, style=solid];
m13_22 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_22 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_22 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_22 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m13_22 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_42  [key=2, style=dotted];
m13_26 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m13_26 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_43  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_47  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_30  [key=0, style=solid];
m13_28 -> m13_44  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_44  [key=2, style=dotted];
m13_31 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_45  [key=2, style=dotted];
m13_31 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_46  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_48  [key=2, style=dotted];
m13_29 -> m13_41  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_35 -> m13_40  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_38  [key=0, style=solid];
m13_35 -> m13_49  [key=2, style=dotted];
m13_37 -> m13_40  [key=0, style=solid];
m13_37 -> m13_50  [key=2, style=dotted];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_50  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid];
m13_41 -> m13_22  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_20  [key=2, style=dotted];
m13_16 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label=connection];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_21  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_22  [key=2, style=dotted];
m13_19 -> m13_15  [key=0, style=bold, color=blue];
m13_51 -> m13_24  [key=1, style=dashed, color=green, label="HangFire.Server.Worker"];
m13_51 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m13_51 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
}
