digraph  {
n202 [label="HangFire.Core.Tests.States.ApplyStateContextFacts", span=""];
n203 [label=context, span=""];
n204 [label=context, span=""];
n205 [label=context, span=""];
n206 [label=context, span=""];
n207 [label=context, span=""];
n208 [label=context, span=""];
n0 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n1 [label="_job = Job.FromExpression(() => Console.WriteLine())", span="24-24", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n2 [label="_newStateMock = new Mock<State>()", span="25-25", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n8 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)"];
n15 [label="Entry lambda expression", span="24-24", cluster="lambda expression"];
n3 [label="_newStateMock.Setup(x => x.Name).Returns(NewState)", span="26-26", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n9 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr"];
n4 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n10 [label="Entry Unk.Setup", span="", cluster="Unk.Setup"];
n11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns"];
n19 [label="Entry lambda expression", span="26-26", cluster="lambda expression"];
n5 [label="_filters = new List<IApplyStateFilter>()", span="30-30", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n12 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr"];
n6 [label="_handlers = new StateHandlerCollection()", span="31-31", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n7 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()"];
n14 [label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22", cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()"];
n16 [label="Console.WriteLine()", span="24-24", cluster="lambda expression"];
n17 [label="Exit lambda expression", span="24-24", cluster="lambda expression"];
n18 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()"];
n20 [label="x.Name", span="26-26", cluster="lambda expression"];
n21 [label="Exit lambda expression", span="26-26", cluster="lambda expression"];
n22 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()"];
n23 [label="var context = CreateContext()", span="37-37", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()"];
n24 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(null, _filters))", span="39-40", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()"];
n27 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()"];
n31 [label="context.ApplyState(null, _filters)", span="40-40", cluster="lambda expression"];
n25 [label="Assert.Equal(''handlers'', exception.ParamName)", span="42-42", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()"];
n28 [label="Entry Unk.>", span="", cluster="Unk.>"];
n30 [label="Entry lambda expression", span="40-40", cluster="lambda expression"];
n26 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()"];
n29 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n32 [label="Exit lambda expression", span="40-40", cluster="lambda expression"];
n33 [label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="45-45", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n34 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()"];
n35 [label="var context = CreateContext()", span="48-48", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()"];
n36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(_handlers, null))", span="50-51", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()"];
n40 [label="context.ApplyState(_handlers, null)", span="51-51", cluster="lambda expression"];
n37 [label="Assert.Equal(''filters'', exception.ParamName)", span="53-53", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()"];
n39 [label="Entry lambda expression", span="51-51", cluster="lambda expression"];
n38 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()"];
n41 [label="Exit lambda expression", span="51-51", cluster="lambda expression"];
n42 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()"];
n43 [label="_transaction.Setup(x => x.SetJobState(\r\n                JobId, _newStateMock.Object)).InSequence()", span="60-61", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()"];
n44 [label="_transaction.Setup(x => x.Commit()).InSequence()", span="63-63", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()"];
n48 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence"];
n49 [label="Entry lambda expression", span="60-61", cluster="lambda expression"];
n45 [label="var context = CreateContext()", span="65-65", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()"];
n53 [label="Entry lambda expression", span="63-63", cluster="lambda expression"];
n46 [label="context.ApplyState(_handlers, _filters)", span="68-68", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()"];
n47 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()"];
n50 [label="x.SetJobState(\r\n                JobId, _newStateMock.Object)", span="60-61", cluster="lambda expression"];
n51 [label="Exit lambda expression", span="60-61", cluster="lambda expression"];
n52 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState"];
n54 [label="x.Commit()", span="63-63", cluster="lambda expression"];
n55 [label="Exit lambda expression", span="63-63", cluster="lambda expression"];
n56 [label="Entry Unk.Commit", span="", cluster="Unk.Commit"];
n57 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n58 [label="var context = CreateContext()", span="77-77", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n59 [label="var handler1 = new Mock<StateHandler>()", span="79-79", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", color=red, community=0];
n65 [label="handler1.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="88-88", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n79 [label="x.Unapply(context, _transaction.Object)", span="88-88", cluster="lambda expression"];
n66 [label="handler2.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="89-89", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n83 [label="x.Unapply(context, _transaction.Object)", span="89-89", cluster="lambda expression"];
n68 [label="context.ApplyState(_handlers, _filters)", span="94-94", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n60 [label="handler1.Setup(x => x.StateName).Returns(OldState)", span="80-80", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n70 [label="Entry Mock<StateHandler>.cstr", span="", cluster="Mock<StateHandler>.cstr"];
n63 [label="_handlers.AddHandler(handler1.Object)", span="85-85", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n61 [label="var handler2 = new Mock<StateHandler>()", span="82-82", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", color=red, community=0];
n72 [label="Entry lambda expression", span="80-80", cluster="lambda expression"];
n62 [label="handler2.Setup(x => x.StateName).Returns(OldState)", span="83-83", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n64 [label="_handlers.AddHandler(handler2.Object)", span="86-86", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n75 [label="Entry lambda expression", span="83-83", cluster="lambda expression"];
n71 [label="Entry Unk.AddHandler", span="", cluster="Unk.AddHandler"];
n78 [label="Entry lambda expression", span="88-88", cluster="lambda expression"];
n67 [label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="90-91", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n82 [label="Entry lambda expression", span="89-89", cluster="lambda expression"];
n85 [label="Entry lambda expression", span="90-90", cluster="lambda expression"];
n69 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()"];
n73 [label="x.StateName", span="80-80", cluster="lambda expression"];
n74 [label="Exit lambda expression", span="80-80", cluster="lambda expression"];
n76 [label="x.StateName", span="83-83", cluster="lambda expression"];
n77 [label="Exit lambda expression", span="83-83", cluster="lambda expression"];
n80 [label="Exit lambda expression", span="88-88", cluster="lambda expression"];
n81 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply"];
n84 [label="Exit lambda expression", span="89-89", cluster="lambda expression"];
n86 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="90-90", cluster="lambda expression"];
n87 [label="Exit lambda expression", span="90-90", cluster="lambda expression"];
n88 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n89 [label="var context = CreateContext()", span="103-103", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n90 [label="var handler1 = new Mock<StateHandler>()", span="105-105", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", color=red, community=0];
n97 [label="handler1.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="118-118", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n111 [label="x.Apply(context, _transaction.Object)", span="118-118", cluster="lambda expression"];
n98 [label="handler2.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="119-119", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n115 [label="x.Apply(context, _transaction.Object)", span="119-119", cluster="lambda expression"];
n99 [label="context.ApplyState(_handlers, _filters)", span="122-122", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n91 [label="handler1.Setup(x => x.StateName).Returns(NewState)", span="106-106", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n94 [label="_handlers.AddHandler(handler1.Object)", span="111-111", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n92 [label="var handler2 = new Mock<StateHandler>()", span="108-108", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", color=red, community=0];
n101 [label="Entry lambda expression", span="106-106", cluster="lambda expression"];
n93 [label="handler2.Setup(x => x.StateName).Returns(NewState)", span="109-109", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n95 [label="_handlers.AddHandler(handler2.Object)", span="112-112", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n104 [label="Entry lambda expression", span="109-109", cluster="lambda expression"];
n96 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="114-116", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n107 [label="Entry lambda expression", span="115-115", cluster="lambda expression"];
n110 [label="Entry lambda expression", span="118-118", cluster="lambda expression"];
n114 [label="Entry lambda expression", span="119-119", cluster="lambda expression"];
n100 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()"];
n102 [label="x.StateName", span="106-106", cluster="lambda expression"];
n103 [label="Exit lambda expression", span="106-106", cluster="lambda expression"];
n105 [label="x.StateName", span="109-109", cluster="lambda expression"];
n106 [label="Exit lambda expression", span="109-109", cluster="lambda expression"];
n108 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="115-115", cluster="lambda expression"];
n109 [label="Exit lambda expression", span="115-115", cluster="lambda expression"];
n112 [label="Exit lambda expression", span="118-118", cluster="lambda expression"];
n113 [label="Entry Unk.Apply", span="", cluster="Unk.Apply"];
n116 [label="Exit lambda expression", span="119-119", cluster="lambda expression"];
n117 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()"];
n118 [label="var context = CreateContext()", span="130-130", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()"];
n119 [label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(true)", span="131-131", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()"];
n120 [label="context.ApplyState(_handlers, _filters)", span="133-133", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()"];
n124 [label="Entry lambda expression", span="131-131", cluster="lambda expression"];
n121 [label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="135-135", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()"];
n122 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()"];
n123 [label="Entry Unk.Verify", span="", cluster="Unk.Verify"];
n127 [label="Entry lambda expression", span="135-135", cluster="lambda expression"];
n125 [label="x.ExpireJobOnApply", span="131-131", cluster="lambda expression"];
n126 [label="Exit lambda expression", span="131-131", cluster="lambda expression"];
n128 [label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="135-135", cluster="lambda expression"];
n129 [label="Exit lambda expression", span="135-135", cluster="lambda expression"];
n130 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob"];
n131 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()"];
n132 [label="var context = CreateContext()", span="141-141", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()"];
n133 [label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(false)", span="142-142", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()"];
n134 [label="context.ApplyState(_handlers, _filters)", span="144-144", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()"];
n137 [label="Entry lambda expression", span="142-142", cluster="lambda expression"];
n135 [label="_transaction.Verify(x => x.PersistJob(JobId))", span="146-146", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()"];
n136 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()"];
n140 [label="Entry lambda expression", span="146-146", cluster="lambda expression"];
n138 [label="x.ExpireJobOnApply", span="142-142", cluster="lambda expression"];
n139 [label="Exit lambda expression", span="142-142", cluster="lambda expression"];
n141 [label="x.PersistJob(JobId)", span="146-146", cluster="lambda expression"];
n142 [label="Exit lambda expression", span="146-146", cluster="lambda expression"];
n143 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob"];
n144 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n145 [label="var context = CreateContext()", span="153-153", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n146 [label="var filter1 = new Mock<IApplyStateFilter>()", span="155-155", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n150 [label="filter1.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="161-162", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n158 [label="x.OnStateUnapplied(context, _transaction.Object)", span="161-161", cluster="lambda expression"];
n151 [label="filter2.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="163-164", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n162 [label="x.OnStateUnapplied(context, _transaction.Object)", span="163-163", cluster="lambda expression"];
n153 [label="context.ApplyState(_handlers, _filters)", span="170-170", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n147 [label="var filter2 = new Mock<IApplyStateFilter>()", span="156-156", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n155 [label="Entry Mock<IApplyStateFilter>.cstr", span="", cluster="Mock<IApplyStateFilter>.cstr"];
n148 [label="_filters.Add(filter1.Object)", span="158-158", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n149 [label="_filters.Add(filter2.Object)", span="159-159", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n156 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
n157 [label="Entry lambda expression", span="161-161", cluster="lambda expression"];
n152 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="165-167", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n161 [label="Entry lambda expression", span="163-163", cluster="lambda expression"];
n164 [label="Entry lambda expression", span="166-166", cluster="lambda expression"];
n154 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()"];
n159 [label="Exit lambda expression", span="161-161", cluster="lambda expression"];
n160 [label="Entry Unk.OnStateUnapplied", span="", cluster="Unk.OnStateUnapplied"];
n163 [label="Exit lambda expression", span="163-163", cluster="lambda expression"];
n165 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="166-166", cluster="lambda expression"];
n166 [label="Exit lambda expression", span="166-166", cluster="lambda expression"];
n167 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n168 [label="var context = CreateContext()", span="179-179", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n169 [label="var filter1 = new Mock<IApplyStateFilter>()", span="181-181", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n173 [label="filter1.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="187-188", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n178 [label="x.OnStateApplied(context, _transaction.Object)", span="187-187", cluster="lambda expression"];
n174 [label="filter2.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="189-190", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n182 [label="x.OnStateApplied(context, _transaction.Object)", span="189-189", cluster="lambda expression"];
n175 [label="context.ApplyState(_handlers, _filters)", span="193-193", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n170 [label="var filter2 = new Mock<IApplyStateFilter>()", span="182-182", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n171 [label="_filters.Add(filter1.Object)", span="184-184", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n172 [label="_filters.Add(filter2.Object)", span="185-185", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n177 [label="Entry lambda expression", span="187-187", cluster="lambda expression"];
n181 [label="Entry lambda expression", span="189-189", cluster="lambda expression"];
n176 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()"];
n179 [label="Exit lambda expression", span="187-187", cluster="lambda expression"];
n180 [label="Entry Unk.OnStateApplied", span="", cluster="Unk.OnStateApplied"];
n183 [label="Exit lambda expression", span="189-189", cluster="lambda expression"];
n184 [label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()"];
n185 [label="var context = CreateContext()", span="201-201", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()"];
n186 [label="Assert.Equal(OldState, context.OldStateName)", span="203-203", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()"];
n187 [label="Assert.Same(_newStateMock.Object, context.NewState)", span="204-204", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()"];
n188 [label="Assert.Same(_job, context.Job)", span="205-205", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()"];
n190 [label="Entry Unk.Same", span="", cluster="Unk.Same"];
n189 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()"];
n191 [label="var connectionMock = new Mock<IStorageConnection>()", span="210-210", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()"];
n192 [label="connectionMock.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="211-211", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()"];
n195 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr"];
n193 [label="return new ApplyStateContext(\r\n                connectionMock.Object,\r\n                new StateContext(JobId, _job),\r\n                _newStateMock.Object,\r\n                OldState);", span="213-217", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()"];
n198 [label="Entry lambda expression", span="211-211", cluster="lambda expression"];
n194 [label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208", cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()"];
n196 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr"];
n197 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)"];
n199 [label="x.CreateWriteTransaction()", span="211-211", cluster="lambda expression"];
n200 [label="Exit lambda expression", span="211-211", cluster="lambda expression"];
n201 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction"];
m1_21 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="EnqueuedStateHandlerFacts.cs"];
m1_17 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m1_18 [label="var handler = new EnqueuedState.Handler()", span="37-37", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m1_19 [label="Assert.Equal(EnqueuedState.StateName, handler.StateName)", span="38-38", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m1_20 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m1_40 [label="Entry Unk.>", span="", cluster="Unk.>", file="EnqueuedStateHandlerFacts.cs"];
m1_12 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m1_39 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="EnqueuedStateHandlerFacts.cs"];
m1_8 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="EnqueuedStateHandlerFacts.cs"];
m1_28 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="EnqueuedStateHandlerFacts.cs"];
m1_34 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m1_35 [label="var handler = new EnqueuedState.Handler()", span="54-54", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m1_36 [label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<State>().Object, null)", span="55-56", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m1_37 [label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="58-59", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m1_38 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m1_7 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedStateHandlerFacts.cs"];
m1_11 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr", file="EnqueuedStateHandlerFacts.cs"];
m1_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="EnqueuedStateHandlerFacts.cs"];
m1_33 [label="Entry Unk.AddToQueue", span="", cluster="Unk.AddToQueue", file="EnqueuedStateHandlerFacts.cs"];
m1_0 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m1_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="21-21", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m1_2 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m1_4 [label="_stateContext = new StateContext(JobId, job)", span="25-25", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m1_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m1_5 [label="_context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new EnqueuedState { Queue = Queue }, \r\n                null)", span="27-31", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m1_6 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m1_23 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m1_24 [label="var handler = new EnqueuedState.Handler()", span="44-44", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m1_25 [label="handler.Apply(_context, _transaction.Object)", span="46-46", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m1_26 [label="_transaction.Verify(x => x.AddToQueue(Queue, JobId))", span="48-48", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m1_27 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m1_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="EnqueuedStateHandlerFacts.cs"];
m1_16 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="EnqueuedStateHandlerFacts.cs"];
m1_41 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_13 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_14 [label="Console.WriteLine()", span="21-21", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_15 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_30 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_31 [label="x.AddToQueue(Queue, JobId)", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_32 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_42 [label="handler.Apply(context, _transaction.Object)", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_43 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m1_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="EnqueuedStateHandlerFacts.cs"];
m1_44 [label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", span="", file="EnqueuedStateHandlerFacts.cs"];
m1_45 [label=handler, span="", file="EnqueuedStateHandlerFacts.cs"];
m1_46 [label=context, span="", file="EnqueuedStateHandlerFacts.cs"];
m2_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FailedStateHandler.cs"];
m2_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedStateHandler.cs"];
m2_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="FailedStateHandler.cs"];
m2_5 [label="Entry HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34", cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs"];
m2_6 [label="transaction.RemoveFromSet(''failed'', context.JobId)", span="37-37", cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs"];
m2_7 [label="Exit HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34", cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs"];
m2_0 [label="Entry HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25", cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs"];
m2_1 [label="transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="28-31", cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs"];
m2_2 [label="Exit HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25", cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs"];
m3_0 [label="Entry HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22", cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="GlobalStateHandlers.cs"];
m3_1 [label="return null;", span="24-24", cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="GlobalStateHandlers.cs"];
m3_2 [label="Exit HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22", cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="GlobalStateHandlers.cs"];
m6_4 [label="Entry HangFire.JobStorage.GetComponents()", span="57-57", cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs"];
m6_5 [label="return Enumerable.Empty<IServerComponent>();", span="59-59", cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs"];
m6_6 [label="Exit HangFire.JobStorage.GetComponents()", span="57-57", cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs"];
m6_0 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="53-53", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs"];
m6_1 [label="Exit HangFire.JobStorage.GetMonitoringApi()", span="53-53", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs"];
m6_8 [label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62", cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs"];
m6_9 [label="return Enumerable.Empty<IStateHandler>();", span="64-64", cluster="HangFire.JobStorage.GetStateHandlers()", color=green, community=0, file="JobStorage.cs"];
m6_10 [label="Exit HangFire.JobStorage.GetStateHandlers()", span="62-62", cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs"];
m6_7 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobStorage.cs"];
m6_2 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="JobStorage.cs"];
m6_3 [label="Exit HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="JobStorage.cs"];
m7_0 [label="Entry HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="PossibleHangingFactAttribute.cs"];
m7_1 [label="Timeout = Debugger.IsAttached ? Int32.MaxValue : 30 * 1000", span="10-10", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", color=green, community=0, file="PossibleHangingFactAttribute.cs"];
m7_2 [label="Exit HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="PossibleHangingFactAttribute.cs"];
m8_17 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ProcessingStateHandler.cs"];
m8_0 [label="Entry HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_1 [label="_transaction = transaction", span="11-11", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_2 [label="var storage = new RedisStoredValues(_transaction)", span="13-13", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_3 [label="Values = storage", span="15-15", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_4 [label="Sets = storage", span="16-16", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_5 [label="Lists = storage", span="17-17", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_6 [label="Queues = storage", span="18-18", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_7 [label="Jobs = storage", span="19-19", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_8 [label="Exit HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9", cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_14 [label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="ProcessingStateHandler.cs"];
m8_15 [label="_transaction.Dispose()", span="35-35", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", color=red, community=0, file="ProcessingStateHandler.cs"];
m8_16 [label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="ProcessingStateHandler.cs"];
m8_10 [label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ProcessingStateHandler.cs"];
m8_11 [label="return _transaction.Commit();", span="30-30", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ProcessingStateHandler.cs"];
m8_12 [label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28", cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ProcessingStateHandler.cs"];
m8_9 [label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15", cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="ProcessingStateHandler.cs"];
m8_18 [label="HangFire.Redis.RedisAtomicWriteTransaction", span="", file="ProcessingStateHandler.cs"];
m9_71 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="RedisStorage.cs"];
m9_141 [label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="RedisStorage.cs"];
m9_50 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_55 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="121-122", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_51 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="114-114", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_52 [label=jobs, span="116-116", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_54 [label="var dto = selector(DeserializeJobMethod(job.InvocationData), stateData)", span="119-119", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_56 [label="return new JobList<TDto>(result);", span="125-125", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_53 [label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="118-118", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_57 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_62 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="RedisStorage.cs"];
m9_43 [label="HangFire.Redis.RedisStorage", span="", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RedisStorage.cs"];
m9_177 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_180 [label="var multi = _connection.QueryMultiple(sql)", span="362-362", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_179 [label="string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect IntValue from HangFire.Value where [Key] = 'stats:succeeded'\r\n''", span="355-360", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_181 [label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="364-364", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_187 [label="stats.Servers = multi.Read<int>().Single()", span="373-373", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_188 [label="stats.Queues = multi.Read<int>().Single()", span="374-374", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_189 [label="stats.Succeeded = multi.Read<int>().SingleOrDefault()", span="376-376", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_178 [label="var stats = new StatisticsDto()", span="353-353", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_182 [label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_186 [label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="371-371", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_190 [label="return stats;", span="379-379", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_183 [label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="368-368", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_184 [label="stats.Failed = getCountIfExists(FailedState.Name)", span="369-369", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_185 [label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="370-370", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_191 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs"];
m9_42 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RedisStorage.cs"];
m9_83 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="RedisStorage.cs"];
m9_84 [label="return GetTimelineStats(''failed'');", span="161-161", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="RedisStorage.cs"];
m9_85 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="RedisStorage.cs"];
m9_103 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RedisStorage.cs"];
m9_7 [label="HostAndPort = hostAndPort", span="48-48", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs"];
m9_146 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_213 [label="var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="393-396", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_212 [label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="392-392", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_214 [label=keys, span="398-398", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_215 [label="!valuesMap.ContainsKey(key)", span="400-400", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_216 [label="valuesMap.Add(key, 0)", span="400-400", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_220 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="406-406", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_209 [label="dates.Add(endDate)", span="388-388", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_205 [label="var endDate = DateTime.UtcNow", span="384-384", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_206 [label="var dates = new List<DateTime>()", span="385-385", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_208 [label="i < 24", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_217 [label="var result = new Dictionary<DateTime, long>()", span="403-403", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_219 [label="i < dates.Count", span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_218 [label="var i = 0", span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_221 [label="result.Add(dates[i], value)", span="407-407", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_210 [label="endDate = endDate.AddHours(-1)", span="389-389", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_223 [label="return result;", span="410-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_207 [label="var i = 0", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_211 [label="i++", span="386-386", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_222 [label="i++", span="404-404", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_224 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs"];
m9_140 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="RedisStorage.cs"];
m9_18 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="RedisStorage.cs"];
m9_150 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_152 [label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_158 [label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="334-342", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_151 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_153 [label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_156 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_157 [label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => JobHelper.FromJson<Dictionary<string, string>>(x.Data))\r\n                        .ToList()", span="328-332", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_154 [label="job == null", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_155 [label="return null;", span="325-325", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_159 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs"];
m9_49 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="RedisStorage.cs"];
m9_6 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="RedisStorage.cs"];
m9_8 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs"];
m9_9 [label="_transaction.Complete()", span="32-32", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs"];
m9_10 [label="_transaction.Dispose()", span="33-33", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs"];
m9_11 [label="_connection.Dispose()", span="34-34", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs"];
m9_32 [label="yield return new FailedStateHandler();", span="88-88", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs"];
m9_33 [label="yield return new ProcessingStateHandler();", span="89-89", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs"];
m9_34 [label="yield return new SucceededStateHandler();", span="90-90", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs"];
m9_143 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="RedisStorage.cs"];
m9_144 [label="return GetHourlyTimelineStats(''succeeded'');", span="307-307", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="RedisStorage.cs"];
m9_145 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="RedisStorage.cs"];
m9_193 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="RedisStorage.cs"];
m9_104 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="RedisStorage.cs"];
m9_105 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="RedisStorage.cs"];
m9_106 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="RedisStorage.cs"];
m9_96 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="RedisStorage.cs"];
m9_97 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.Name,\r\n                (method, stateData) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="190-201", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="RedisStorage.cs"];
m9_98 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="RedisStorage.cs"];
m9_204 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="RedisStorage.cs"];
m9_79 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="RedisStorage.cs"];
m9_80 [label="return GetTimelineStats(''succeeded'');", span="156-156", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="RedisStorage.cs"];
m9_81 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="RedisStorage.cs"];
m9_59 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RedisStorage.cs"];
m9_138 [label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="RedisStorage.cs"];
m9_60 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs"];
m9_66 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="130-130", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs"];
m9_67 [label="return JobMethod.Deserialize(data);", span="134-134", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs"];
m9_69 [label="return null;", span="138-138", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs"];
m9_68 [label=JobLoadException, span="136-136", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs"];
m9_70 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs"];
m9_192 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RedisStorage.cs"];
m9_194 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="RedisStorage.cs"];
m9_2 [label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="23-25", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="RedisStorage.cs"];
m9_3 [label="_connection.EnlistTransaction(Transaction.Current)", span="27-27", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="RedisStorage.cs"];
m9_63 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="RedisStorage.cs"];
m9_27 [label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="78-78", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs"];
m9_28 [label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RedisStorage.cs"];
m9_29 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="RedisStorage.cs"];
m9_95 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="RedisStorage.cs"];
m9_142 [label="Entry Unk.DeserializeJobMethod", span="", cluster="Unk.DeserializeJobMethod", file="RedisStorage.cs"];
m9_5 [label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs"];
m9_261 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="RedisStorage.cs"];
m9_14 [label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="68-68", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs"];
m9_164 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="RedisStorage.cs"];
m9_39 [label="Entry lambda expression", span="83-88", cluster="lambda expression", file="RedisStorage.cs"];
m9_40 [label="new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="83-88", cluster="lambda expression", file="RedisStorage.cs", color=green, community=0];
m9_41 [label="Exit lambda expression", span="83-88", cluster="lambda expression", file="RedisStorage.cs"];
m9_24 [label="var stateMachineFactory = new StateMachineFactory(this)", span="80-80", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs"];
m9_25 [label="yield return new SchedulePoller(this, stateMachineFactory, Options.PollInterval);", span="82-82", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs"];
m9_26 [label="yield return new FetchedJobsWatcher(this, stateMachineFactory);", span="83-83", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs"];
m9_201 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="RedisStorage.cs"];
m9_76 [label="new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="147-151", cluster="lambda expression", file="RedisStorage.cs"];
m9_75 [label="Entry lambda expression", span="147-151", cluster="lambda expression", file="RedisStorage.cs"];
m9_99 [label="Entry lambda expression", span="194-201", cluster="lambda expression", file="RedisStorage.cs"];
m9_107 [label="Entry lambda expression", span="210-214", cluster="lambda expression", file="RedisStorage.cs"];
m9_126 [label="Entry lambda expression", span="266-270", cluster="lambda expression", file="RedisStorage.cs"];
m9_235 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="RedisStorage.cs"];
m9_238 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="RedisStorage.cs"];
m9_269 [label="Entry lambda expression", span="431-431", cluster="lambda expression", file="RedisStorage.cs"];
m9_272 [label="Entry lambda expression", span="431-431", cluster="lambda expression", file="RedisStorage.cs"];
m9_77 [label="Exit lambda expression", span="147-151", cluster="lambda expression", file="RedisStorage.cs"];
m9_172 [label="JobHelper.FromJson<Dictionary<string, string>>(x.Data)", span="331-331", cluster="lambda expression", file="RedisStorage.cs"];
m9_266 [label="String.Format(''stats:{0}:{1}'', type, x)", span="426-426", cluster="lambda expression", file="RedisStorage.cs"];
m9_101 [label="Exit lambda expression", span="194-201", cluster="lambda expression", file="RedisStorage.cs"];
m9_100 [label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="194-201", cluster="lambda expression", file="RedisStorage.cs"];
m9_109 [label="Exit lambda expression", span="210-214", cluster="lambda expression", file="RedisStorage.cs"];
m9_108 [label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214", cluster="lambda expression", file="RedisStorage.cs"];
m9_128 [label="Exit lambda expression", span="266-270", cluster="lambda expression", file="RedisStorage.cs"];
m9_127 [label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270", cluster="lambda expression", file="RedisStorage.cs"];
m9_231 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="392-392", cluster="lambda expression", file="RedisStorage.cs"];
m9_165 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="RedisStorage.cs"];
m9_168 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="RedisStorage.cs"];
m9_171 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="RedisStorage.cs"];
m9_195 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="RedisStorage.cs"];
m9_198 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="RedisStorage.cs"];
m9_202 [label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366", cluster="lambda expression", file="RedisStorage.cs"];
m9_230 [label="Entry lambda expression", span="392-392", cluster="lambda expression", file="RedisStorage.cs"];
m9_237 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="RedisStorage.cs"];
m9_236 [label="(string)x.Key", span="396-396", cluster="lambda expression", file="RedisStorage.cs"];
m9_240 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="RedisStorage.cs"];
m9_239 [label="(long)x.IntValue", span="396-396", cluster="lambda expression", file="RedisStorage.cs"];
m9_265 [label="Entry lambda expression", span="426-426", cluster="lambda expression", file="RedisStorage.cs"];
m9_271 [label="Exit lambda expression", span="431-431", cluster="lambda expression", file="RedisStorage.cs"];
m9_270 [label="(string)x.Key", span="431-431", cluster="lambda expression", file="RedisStorage.cs"];
m9_274 [label="Exit lambda expression", span="431-431", cluster="lambda expression", file="RedisStorage.cs"];
m9_273 [label="(long)x.IntValue", span="431-431", cluster="lambda expression", file="RedisStorage.cs"];
m9_173 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="RedisStorage.cs"];
m9_262 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="RedisStorage.cs"];
m9_267 [label="Exit lambda expression", span="426-426", cluster="lambda expression", file="RedisStorage.cs"];
m9_232 [label="Exit lambda expression", span="392-392", cluster="lambda expression", file="RedisStorage.cs"];
m9_167 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="RedisStorage.cs"];
m9_166 [label="x.Name", span="327-327", cluster="lambda expression", file="RedisStorage.cs"];
m9_170 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="RedisStorage.cs"];
m9_169 [label="x.Value", span="327-327", cluster="lambda expression", file="RedisStorage.cs"];
m9_197 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="RedisStorage.cs"];
m9_196 [label="x.State", span="364-364", cluster="lambda expression", file="RedisStorage.cs"];
m9_200 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="RedisStorage.cs"];
m9_199 [label="x.Count", span="364-364", cluster="lambda expression", file="RedisStorage.cs"];
m9_203 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="RedisStorage.cs"];
m9_263 [label="x.ToString(''yyyy-MM-dd'')", span="425-425", cluster="lambda expression", file="RedisStorage.cs"];
m9_264 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="RedisStorage.cs"];
m9_120 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RedisStorage.cs"];
m9_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisStorage.cs"];
m9_48 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="RedisStorage.cs"];
m9_268 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RedisStorage.cs"];
m9_61 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="RedisStorage.cs"];
m9_233 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="RedisStorage.cs"];
m9_0 [label="Entry HangFire.Redis.RedisStorage.RedisStorage()", span="31-31", cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs"];
m9_1 [label="Exit HangFire.Redis.RedisStorage.RedisStorage()", span="31-31", cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs"];
m9_4 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs"];
m9_78 [label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="RedisStorage.cs"];
m9_119 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RedisStorage.cs"];
m9_229 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="RedisStorage.cs"];
m9_12 [label="Entry PooledRedisClientManager.cstr", span="", cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs"];
m9_38 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_31 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="RedisStorage.cs"];
m9_35 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="RedisStorage.cs"];
m9_226 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="RedisStorage.cs"];
m9_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisStorage.cs"];
m9_36 [label="Entry HangFire.Redis.FailedStateHandler.FailedStateHandler()", span="23-23", cluster="HangFire.Redis.FailedStateHandler.FailedStateHandler()", color=green, community=0, file="RedisStorage.cs"];
m9_37 [label="Entry HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", span="23-23", cluster="HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", file="RedisStorage.cs"];
m9_30 [label="return _connection.Query<int>(\r\n                @''select count(Id) from HangFire.Job where State = @state'',\r\n                new { state = stateName })\r\n                .Single();", span="67-70", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="RedisStorage.cs"];
m9_13 [label="Entry RedisClientManagerConfig.cstr", span="", cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs"];
m9_227 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="RedisStorage.cs"];
m9_17 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="RedisStorage.cs"];
m9_225 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="RedisStorage.cs"];
m9_15 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="RedisStorage.cs"];
m9_16 [label="return GetNumberOfJobsByStateName(ScheduledState.Name);", span="39-39", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="RedisStorage.cs"];
m9_23 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="RedisStorage.cs"];
m9_45 [label="var jobs = _connection.Query<Job>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="102-105", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_46 [label="return DeserializeJobs(jobs, selector);", span="107-107", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_44 [label="string jobsSql = @''\r\nselect * from (select *, row_number() over (order by CreatedAt desc) as row_num\r\nfrom HangFire.Job where State = @stateName) as j where j.row_num between @start and @end\r\n''", span="97-100", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_47 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs"];
m9_160 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="RedisStorage.cs"];
m9_110 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="RedisStorage.cs"];
m9_139 [label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span="", cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="RedisStorage.cs"];
m9_72 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="RedisStorage.cs"];
m9_73 [label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="RedisStorage.cs"];
m9_74 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="RedisStorage.cs"];
m9_121 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_123 [label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_124 [label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_122 [label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_125 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_86 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_87 [label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_88 [label="var result = new List<ServerDto>()", span="170-170", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_89 [label=servers, span="172-172", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_90 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_91 [label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_92 [label="return result;", span="185-185", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_93 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs"];
m9_234 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RedisStorage.cs"];
m9_162 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="RedisStorage.cs"];
m9_174 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="RedisStorage.cs"];
m9_175 [label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="348-348", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="RedisStorage.cs"];
m9_176 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="RedisStorage.cs"];
m9_129 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="RedisStorage.cs"];
m9_102 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RedisStorage.cs"];
m9_82 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_249 [label="var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="428-431", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_248 [label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="426-426", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_250 [label=keys, span="433-433", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_251 [label="!valuesMap.ContainsKey(key)", span="435-435", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_252 [label="valuesMap.Add(key, 0)", span="435-435", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_256 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="441-441", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_247 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="425-425", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_241 [label="var endDate = DateTime.UtcNow.Date", span="415-415", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_245 [label="dates.Add(endDate)", span="421-421", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_253 [label="var result = new Dictionary<DateTime, long>()", span="438-438", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_255 [label="i < stringDates.Count", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_254 [label="var i = 0", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_257 [label="result.Add(dates[i], value)", span="442-442", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_244 [label="startDate <= endDate", span="419-419", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_243 [label="var dates = new List<DateTime>()", span="417-417", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_259 [label="return result;", span="445-445", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_242 [label="var startDate = endDate.AddDays(-7)", span="416-416", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_246 [label="endDate = endDate.AddDays(-1)", span="422-422", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_258 [label="i++", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_260 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs"];
m9_228 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisStorage.cs"];
m9_65 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="RedisStorage.cs"];
m9_19 [label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="73-73", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs"];
m9_20 [label="return new RedisConnection(_pooledManager.GetClient());", span="75-75", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs"];
m9_21 [label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="73-73", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs"];
m9_147 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="RedisStorage.cs"];
m9_148 [label="return GetHourlyTimelineStats(''failed'');", span="312-312", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="RedisStorage.cs"];
m9_149 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="RedisStorage.cs"];
m9_163 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RedisStorage.cs"];
m9_58 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="RedisStorage.cs"];
m9_111 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_113 [label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_112 [label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_114 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_115 [label=queues, span="236-236", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_116 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue.Queue,\r\n                    Length = queue.Enqueued,\r\n                    Dequeued = queue.Fetched,\r\n                    FirstJobs = new List<KeyValuePair<string, EnqueuedJobDto>>() // TODO: implement\r\n                })", span="238-244", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_117 [label="return result;", span="247-247", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_118 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs"];
m9_161 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="RedisStorage.cs"];
m9_130 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_132 [label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_135 [label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_131 [label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_133 [label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_134 [label=jobs, span="289-289", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_136 [label="return new JobList<DequeuedJobDto>(result);", span="302-302", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_137 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs"];
m9_275 [label="HangFire.SqlServer.SqlServerMonitoringApi", span="", file="RedisStorage.cs"];
m9_278 [label=string, span="", file="RedisStorage.cs"];
m9_277 [label=string, span="", file="RedisStorage.cs"];
m9_276 [label=countByStates, span="", file="RedisStorage.cs"];
m10_0 [label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="ScheduledState.cs"];
m10_1 [label="Performed = true", span="185-185", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="ScheduledState.cs"];
m10_2 [label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="ScheduledState.cs"];
m10_7 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="ScheduledState.cs"];
m10_8 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="ScheduledState.cs"];
m10_3 [label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs"];
m10_4 [label="A = a", span="196-196", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs"];
m10_5 [label="B = b", span="197-197", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs"];
m10_6 [label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs"];
m10_9 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="ScheduledState.cs"];
m10_10 [label="Disposed = true", span="211-211", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="ScheduledState.cs"];
m10_11 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="ScheduledState.cs"];
m10_12 [label="HangFire.Tests.JobInvokerTests.CorrectJob", span="", file="ScheduledState.cs"];
m10_13 [label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span="", file="ScheduledState.cs"];
m10_14 [label="HangFire.Tests.JobInvokerTests.DisposableJob", span="", file="ScheduledState.cs"];
m11_75 [label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m11_76 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="82-83", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m11_77 [label="var scheduler = CreateScheduler()", span="84-84", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m11_78 [label="scheduler.Execute(_token)", span="86-86", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m11_79 [label="_stateMachine.Verify(\r\n                x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="88-90", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m11_80 [label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m11_14 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SchedulePollerFacts.cs"];
m11_57 [label="Entry HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m11_42 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="SchedulePollerFacts.cs"];
m11_66 [label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m11_67 [label="var scheduler = CreateScheduler()", span="69-69", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m11_68 [label="scheduler.Execute(_token)", span="71-71", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m11_69 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", span="73-76", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m11_70 [label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m11_20 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePollerFacts.cs"];
m11_41 [label="Entry SchedulePoller.cstr", span="", cluster="SchedulePoller.cstr", file="SchedulePollerFacts.cs"];
m11_29 [label="Entry Unk.GetFirstByLowestScoreFromSet", span="", cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs"];
m11_25 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="SchedulePollerFacts.cs"];
m11_50 [label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m11_51 [label="var scheduler = CreateScheduler()", span="58-58", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m11_52 [label="scheduler.Execute(_token)", span="60-60", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m11_53 [label="_storage.Verify(x => x.GetConnection())", span="62-62", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m11_54 [label="_connection.Verify(x => x.Dispose())", span="63-63", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m11_55 [label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m11_33 [label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m11_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, TimeSpan.FromMilliseconds(-1)))", span="38-40", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="SchedulePollerFacts.cs"];
m11_35 [label="Assert.Equal(''storage'', exception.ParamName)", span="42-42", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m11_36 [label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m11_15 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SchedulePollerFacts.cs"];
m11_65 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SchedulePollerFacts.cs"];
m11_74 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="SchedulePollerFacts.cs"];
m11_0 [label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_1 [label="_storage = new Mock<JobStorage>()", span="21-21", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_2 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_3 [label="_stateMachine = new Mock<IStateMachine>()", span="23-23", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_4 [label="_token = new CancellationToken(true)", span="24-24", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_6 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_7 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="30-30", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_8 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="31-32", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_9 [label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m11_84 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_17 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_22 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_26 [label="Entry lambda expression", span="31-32", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_18 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_19 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_23 [label="x.GetConnection()", span="30-30", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_24 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_27 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="31-32", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_28 [label="Exit lambda expression", span="31-32", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_30 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_31 [label="time > 0", span="32-32", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_32 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_38 [label="Entry lambda expression", span="39-40", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_39 [label="new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, TimeSpan.FromMilliseconds(-1))", span="39-40", cluster="lambda expression", color=red, community=0, file="SchedulePollerFacts.cs"];
m11_40 [label="Exit lambda expression", span="39-40", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_47 [label="Entry lambda expression", span="49-50", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_48 [label="new SchedulePoller(\r\n                    _storage.Object, null, TimeSpan.FromMilliseconds(-1))", span="49-50", cluster="lambda expression", color=red, community=0, file="SchedulePollerFacts.cs"];
m11_49 [label="Exit lambda expression", span="49-50", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_59 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_62 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_60 [label="x.GetConnection()", span="62-62", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_61 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_63 [label="x.Dispose()", span="63-63", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_64 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_71 [label="Entry lambda expression", span="73-76", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_72 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", span="73-76", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_73 [label="Exit lambda expression", span="73-76", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_81 [label="Entry lambda expression", span="82-83", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_87 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_82 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="82-83", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_83 [label="Exit lambda expression", span="82-83", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_85 [label="time > 0", span="83-83", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_86 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_88 [label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>())", span="89-89", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_89 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m11_13 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="SchedulePollerFacts.cs"];
m11_58 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SchedulePollerFacts.cs"];
m11_56 [label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs"];
m11_90 [label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, TimeSpan.Zero);", span="95-95", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", color=red, community=0, file="SchedulePollerFacts.cs"];
m11_91 [label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs"];
m11_12 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs"];
m11_21 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="SchedulePollerFacts.cs"];
m11_16 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SchedulePollerFacts.cs"];
m11_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SchedulePollerFacts.cs"];
m11_10 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs"];
m11_43 [label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m11_44 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, TimeSpan.FromMilliseconds(-1)))", span="48-50", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="SchedulePollerFacts.cs"];
m11_45 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="52-52", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m11_46 [label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m11_92 [label="HangFire.Core.Tests.Server.SchedulePollerFacts", span="", file="SchedulePollerFacts.cs"];
m13_0 [label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8", cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ServerComponentRunnerFacts.cs"];
m13_1 [label="Exception = exception", span="11-11", cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ServerComponentRunnerFacts.cs"];
m13_2 [label="Exit HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8", cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ServerComponentRunnerFacts.cs"];
m13_3 [label="HangFire.Filters.ClientJobExceptionContext", span="", file="ServerComponentRunnerFacts.cs"];
m14_0 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m14_1 [label="MaxRetryAttempts = 10", span="27-27", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m14_2 [label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="28-28", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m14_3 [label="MinimumLogVerbosity = false", span="29-29", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m14_4 [label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs"];
m14_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptions.cs"];
m14_6 [label="HangFire.Server.ServerComponentRunnerOptions", span="", file="ServerComponentRunnerOptions.cs"];
m15_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="ServerComponentRunnerOptionsFacts.cs"];
m15_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ServerComponentRunnerOptionsFacts.cs"];
m15_96 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_97 [label="var client = CreateClient()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_98 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="104-105", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_99 [label="Assert.Equal(''job'', exception.ParamName)", span="107-107", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_100 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_56 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_57 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_58 [label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_59 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_136 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_137 [label="var client = CreateClient()", span="148-148", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_138 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_139 [label="Assert.Equal(''jobId'', exception.ParamName)", span="153-153", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_140 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_77 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_78 [label="CreateClient()", span="86-86", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_79 [label="_storage.Verify(x => x.GetConnection())", span="87-87", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_80 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_17 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="ServerComponentRunnerOptionsFacts.cs"];
m15_60 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="ServerComponentRunnerOptionsFacts.cs"];
m15_112 [label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="ServerComponentRunnerOptionsFacts.cs"];
m15_121 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="ServerComponentRunnerOptionsFacts.cs"];
m15_64 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39", cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_122 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_123 [label="var client = CreateClient()", span="134-134", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_124 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_125 [label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_126 [label="Assert.NotNull(exception.InnerException)", span="141-141", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_127 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_128 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_145 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_146 [label="var client = CreateClient()", span="159-159", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_147 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_148 [label="Assert.Equal(''state'', exception.ParamName)", span="164-164", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_149 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_154 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_155 [label="var client = CreateClient()", span="170-170", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_156 [label="client.ChangeState(''job-id'', _state.Object, null)", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_157 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_158 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_36 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerComponentRunnerOptionsFacts.cs"];
m15_104 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_105 [label="var client = CreateClient()", span="113-113", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_106 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="115-116", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_107 [label="Assert.Equal(''state'', exception.ParamName)", span="118-118", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_108 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_163 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_164 [label="var client = CreateClient()", span="183-183", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_165 [label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="185-185", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_166 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="187-190", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_167 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_91 [label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113", cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_171 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_172 [label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="196-197", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_173 [label="var client = CreateClient()", span="198-198", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_174 [label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="200-200", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_175 [label="Assert.True(result)", span="202-202", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_176 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="ServerComponentRunnerOptionsFacts.cs"];
m15_144 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="ServerComponentRunnerOptionsFacts.cs"];
m15_86 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_87 [label="var client = CreateClient()", span="93-93", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_88 [label="client.Dispose()", span="94-94", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_89 [label="_connection.Verify(x => x.Dispose())", span="96-96", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_90 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_129 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ServerComponentRunnerOptionsFacts.cs"];
m15_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerComponentRunnerOptionsFacts.cs"];
m15_95 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ServerComponentRunnerOptionsFacts.cs"];
m15_65 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_66 [label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_67 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_81 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_182 [label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_183 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_71 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_72 [label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_73 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_153 [label="Entry HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="100-100", cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="ServerComponentRunnerOptionsFacts.cs"];
m15_162 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="ServerComponentRunnerOptionsFacts.cs"];
m15_178 [label="Entry lambda expression", span="196-196", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_20 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_21 [label="x.GetConnection()", span="24-24", cluster="lambda expression", color=red, community=0, file="ServerComponentRunnerOptionsFacts.cs"];
m15_22 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_25 [label="x.Create(_connection.Object)", span="29-29", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_29 [label="Method()", span="33-33", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_38 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_39 [label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_40 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_46 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_47 [label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_48 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_53 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_54 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_55 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_61 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_62 [label="new BackgroundJobClient()", span="67-67", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_63 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_69 [label="new BackgroundJobClient(_storage.Object)", span="73-73", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_74 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_75 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_76 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_83 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_84 [label="x.GetConnection()", span="87-87", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_85 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_92 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_93 [label="x.Dispose()", span="96-96", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_94 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_102 [label="client.Create(null, _state.Object)", span="105-105", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_101 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_103 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_110 [label="client.Create(_job, null)", span="116-116", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_109 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_111 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_118 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_119 [label="x.Run(It.IsNotNull<CreateContext>())", span="128-128", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_120 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_134 [label="client.Create(_job, _state.Object)", span="139-139", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_130 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_133 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_131 [label="x.Run(It.IsAny<CreateContext>())", span="135-135", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_132 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_135 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_142 [label="client.ChangeState(null, _state.Object, null)", span="151-151", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_141 [label="Entry lambda expression", span="151-151", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_143 [label="Exit lambda expression", span="151-151", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_151 [label="client.ChangeState(''jobId'', null, null)", span="162-162", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_150 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_152 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_159 [label="Entry lambda expression", span="174-177", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_160 [label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="174-177", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_161 [label="Exit lambda expression", span="174-177", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_168 [label="Entry lambda expression", span="187-190", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_169 [label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="187-190", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_170 [label="Exit lambda expression", span="187-190", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_179 [label="x.TryToChangeState(''job-id'', _state.Object, null)", span="196-196", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_180 [label="Exit lambda expression", span="196-196", cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs"];
m15_82 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerComponentRunnerOptionsFacts.cs"];
m15_49 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_51 [label="Assert.Equal(''process'', exception.ParamName)", span="60-60", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_52 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_31 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_181 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_15 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="ServerComponentRunnerOptionsFacts.cs"];
m15_32 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_34 [label="Assert.Equal(''storage'', exception.ParamName)", span="42-42", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_35 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_42 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_44 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_45 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_19 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerComponentRunnerOptionsFacts.cs"];
m15_27 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="ServerComponentRunnerOptionsFacts.cs"];
m15_113 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_114 [label="var client = CreateClient()", span="124-124", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_115 [label="client.Create(_job, _state.Object)", span="126-126", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_116 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_117 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_177 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerComponentRunnerOptionsFacts.cs"];
m15_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerComponentRunnerOptionsFacts.cs"];
m15_41 [label="Entry BackgroundJobClient.cstr", span="", cluster="BackgroundJobClient.cstr", file="ServerComponentRunnerOptionsFacts.cs"];
m15_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerComponentRunnerOptionsFacts.cs"];
m15_12 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ServerComponentRunnerOptionsFacts.cs"];
m15_0 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_1 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerComponentRunnerOptionsFacts.cs"];
m15_2 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerComponentRunnerOptionsFacts.cs"];
m15_3 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerComponentRunnerOptionsFacts.cs"];
m15_4 [label="_stateMachine = new Mock<IStateMachine>()", span="26-26", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_6 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_7 [label="_process = new Mock<IJobCreationProcess>()", span="31-31", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_8 [label="_state = new Mock<IState>()", span="32-32", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_9 [label="_job = Job.FromExpression(() => Method())", span="33-33", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_10 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs"];
m15_184 [label="HangFire.Core.Tests.BackgroundJobClientFacts", span="", file="ServerComponentRunnerOptionsFacts.cs"];
m15_185 [label=client, span="", file="ServerComponentRunnerOptionsFacts.cs"];
m15_186 [label=client, span="", file="ServerComponentRunnerOptionsFacts.cs"];
m15_187 [label=client, span="", file="ServerComponentRunnerOptionsFacts.cs"];
m15_188 [label=client, span="", file="ServerComponentRunnerOptionsFacts.cs"];
m15_189 [label=client, span="", file="ServerComponentRunnerOptionsFacts.cs"];
m16_10 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerWatchdogFacts.cs"];
m16_0 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m16_1 [label="_storage = new Mock<JobStorage>()", span="18-18", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m16_2 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m16_3 [label="_options = new ServerWatchdogOptions\r\n            {\r\n                CheckInterval = TimeSpan.FromMilliseconds(-1) // To check that it exits by cancellation token\r\n            }", span="20-23", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m16_4 [label="_token = new CancellationToken(true)", span="24-24", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m16_5 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="26-26", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m16_6 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m16_49 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m16_50 [label="_connection.Setup(x => x.RemoveTimedOutServers(It.IsAny<TimeSpan>())).Returns(1)", span="56-56", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m16_51 [label="var watchdog = CreateWatchdog()", span="57-57", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m16_52 [label="watchdog.Execute(_token)", span="59-59", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m16_53 [label="_connection.Verify(x => x.RemoveTimedOutServers(_options.ServerTimeout))", span="61-61", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m16_54 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m16_58 [label="Entry Unk.RemoveTimedOutServers", span="", cluster="Unk.RemoveTimedOutServers", file="ServerWatchdogFacts.cs"];
m16_33 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m16_34 [label="var watchdog = CreateWatchdog()", span="45-45", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m16_35 [label="watchdog.Execute(_token)", span="47-47", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m16_36 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="49-49", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m16_37 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="50-50", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m16_38 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m16_32 [label="Entry ServerWatchdog.cstr", span="", cluster="ServerWatchdog.cstr", file="ServerWatchdogFacts.cs"];
m16_39 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="64-64", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m16_62 [label="return new ServerWatchdog(_storage.Object, _options);", span="66-66", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m16_63 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="64-64", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m16_17 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="ServerWatchdogFacts.cs"];
m16_12 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerWatchdogFacts.cs"];
m16_18 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m16_19 [label="Assert.Throws<ArgumentNullException>(() => new ServerWatchdog(null))", span="32-32", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m16_20 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m16_48 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ServerWatchdogFacts.cs"];
m16_59 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_14 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_15 [label="x.GetConnection()", span="26-26", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_16 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_22 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_23 [label="new ServerWatchdog(null)", span="32-32", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_24 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_29 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_30 [label="new ServerWatchdog(_storage.Object, null)", span="39-39", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_31 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_42 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_45 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_43 [label="x.GetConnection()", span="49-49", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_44 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_46 [label="x.Dispose()", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_47 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_55 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_56 [label="x.RemoveTimedOutServers(It.IsAny<TimeSpan>())", span="56-56", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_57 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_60 [label="x.RemoveTimedOutServers(_options.ServerTimeout)", span="61-61", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_61 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m16_11 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerWatchdogFacts.cs"];
m16_41 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerWatchdogFacts.cs"];
m16_26 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m16_27 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ServerWatchdog(_storage.Object, null))", span="38-39", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m16_28 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m16_40 [label="Entry HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdogFacts.cs"];
m16_13 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerWatchdogFacts.cs"];
m16_9 [label="Entry HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogFacts.cs"];
m16_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerWatchdogFacts.cs"];
m16_7 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ServerWatchdogFacts.cs"];
m16_25 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdogFacts.cs"];
m16_64 [label="HangFire.Core.Tests.Server.ServerWatchdogFacts", span="", file="ServerWatchdogFacts.cs"];
m17_0 [label="Entry HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22", cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m17_1 [label="Exit HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22", cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m17_2 [label="Entry HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27", cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m17_3 [label="Exit HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27", cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m18_9 [label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(''locks:schedulepoller'', It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="32-34", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", color=red, community=0];
m18_12 [label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11", cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="StateHandlerCollection.cs"];
m18_85 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", span="79-79", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs"];
m18_86 [label="_process\r\n                .Setup(x => x.ChangeState(It.IsAny<StateChangeContext>()))\r\n                .Returns<IState>(null)", span="81-83", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs"];
m18_87 [label="var scheduler = CreateScheduler()", span="85-85", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs"];
m18_88 [label="scheduler.Execute(_context.Object)", span="87-87", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs"];
m18_89 [label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="89-89", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs"];
m18_90 [label="_transaction.Verify(x => x.Commit())", span="90-90", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs"];
m18_91 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", span="79-79", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs"];
m18_13 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="StateHandlerCollection.cs"];
m18_18 [label="return _handlers[stateName].ToArray();", span="47-47", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs"];
m18_44 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateHandlerCollection.cs"];
m18_49 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", span="50-50", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs"];
m18_50 [label="var scheduler = CreateScheduler()", span="52-52", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs"];
m18_51 [label="scheduler.Execute(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs"];
m18_52 [label="_process.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName }))))", span="56-59", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs"];
m18_53 [label="_connection.Verify(x => x.Dispose())", span="61-61", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs"];
m18_54 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", span="50-50", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs"];
m18_0 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", span="19-19", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs"];
m18_6 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", color=green, community=0, file="StateHandlerCollection.cs"];
m18_5 [label="_process = new Mock<IStateChangeProcess>()", span="27-27", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", color=red, community=0];
m18_7 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="29-29", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs"];
m18_1 [label="_context = new BackgroundProcessContextMock()", span="21-21", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs"];
m18_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", color=red, community=0];
m18_2 [label="_context.CancellationTokenSource.Cancel()", span="22-22", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs"];
m18_4 [label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", color=red, community=0];
m18_8 [label="_distributedLock = new Mock<IDisposable>()", span="31-31", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs"];
m18_11 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", span="19-19", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs"];
m18_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateHandlerCollection.cs"];
m18_40 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="StateHandlerCollection.cs"];
m18_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Hangfire.Server.DelayedJobScheduler(Timeout.InfiniteTimeSpan, null))", span="43-44", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", color=red, community=0, file="StateHandlerCollection.cs"];
m18_42 [label="Assert.Equal(''process'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="StateHandlerCollection.cs"];
m18_43 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="StateHandlerCollection.cs"];
m18_15 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StateHandlerCollection.cs"];
m18_17 [label="Entry Mock<IStateChangeProcess>.cstr", span="", cluster="Mock<IStateChangeProcess>.cstr", color=green, community=0, file="StateHandlerCollection.cs"];
m18_16 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StateHandlerCollection.cs"];
m18_19 [label="Entry Mock<IDisposable>.cstr", span="", cluster="Mock<IDisposable>.cstr", file="StateHandlerCollection.cs"];
m18_36 [label="Entry Unk.GetFirstByLowestScoreFromSet", span="", cluster="Unk.GetFirstByLowestScoreFromSet", file="StateHandlerCollection.cs"];
m18_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="StateHandlerCollection.cs"];
m18_103 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", span="94-94", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs"];
m18_104 [label="var scheduler = CreateScheduler()", span="96-96", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs"];
m18_105 [label="scheduler.Execute(_context.Object)", span="98-98", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs"];
m18_106 [label="_connection.Verify(x => x.AcquireDistributedLock(It.IsAny<string>(), It.IsAny<TimeSpan>()))", span="100-100", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs"];
m18_107 [label="_distributedLock.Verify(x => x.Dispose())", span="101-101", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs"];
m18_108 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", span="94-94", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs"];
m18_61 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="StateHandlerCollection.cs"];
m18_55 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", span="104-104", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="StateHandlerCollection.cs"];
m18_115 [label="return new Hangfire.Server.DelayedJobScheduler(Timeout.InfiniteTimeSpan, _process.Object);", span="106-106", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="StateHandlerCollection.cs"];
m18_116 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", span="104-104", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="StateHandlerCollection.cs"];
m18_65 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="StateHandlerCollection.cs"];
m18_48 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IStateChangeProcess)", span="45-45", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IStateChangeProcess)", file="StateHandlerCollection.cs"];
m18_21 [label="x.GetConnection()", span="25-25", cluster="lambda expression", file="StateHandlerCollection.cs", color=red, community=0];
m18_69 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StateHandlerCollection.cs"];
m18_32 [label="Entry Unk.AcquireDistributedLock", span="", cluster="Unk.AcquireDistributedLock", file="StateHandlerCollection.cs"];
m18_10 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="StateHandlerCollection.cs"];
m18_112 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_20 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateHandlerCollection.cs"];
m18_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_33 [label="Entry lambda expression", span="36-37", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_22 [label="HangFire.States.StateHandlerCollection", span="", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_25 [label="x.CreateWriteTransaction()", span="29-29", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_29 [label="x.AcquireDistributedLock(''locks:schedulepoller'', It.IsAny<TimeSpan>())", span="33-33", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_34 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="36-37", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_35 [label="Exit lambda expression", span="36-37", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_37 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_38 [label="time > 0", span="37-37", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_39 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_45 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_46 [label="new Hangfire.Server.DelayedJobScheduler(Timeout.InfiniteTimeSpan, null)", span="44-44", cluster="lambda expression", color=red, community=0, file="StateHandlerCollection.cs"];
m18_47 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_58 [label="Entry lambda expression", span="56-59", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_66 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_59 [label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })))", span="56-59", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_60 [label="Exit lambda expression", span="56-59", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_62 [label="Entry lambda expression", span="56-59", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_63 [label="ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })", span="57-59", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_64 [label="Exit lambda expression", span="56-59", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_67 [label="x.Dispose()", span="61-61", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_68 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_76 [label="Entry lambda expression", span="67-68", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_82 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_77 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="67-68", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_78 [label="Exit lambda expression", span="67-68", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_79 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_80 [label="time > 0", span="68-68", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_81 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_83 [label="x.ChangeState(It.IsAny<StateChangeContext>())", span="74-74", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_84 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_92 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_95 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_99 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_93 [label="x.ChangeState(It.IsAny<StateChangeContext>())", span="82-82", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_94 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_96 [label="x.RemoveFromSet(''schedule'', JobId)", span="89-89", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_97 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_100 [label="x.Commit()", span="90-90", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_101 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_109 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_110 [label="x.AcquireDistributedLock(It.IsAny<string>(), It.IsAny<TimeSpan>())", span="100-100", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_111 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_113 [label="x.Dispose()", span="101-101", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_114 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="StateHandlerCollection.cs"];
m18_57 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateHandlerCollection.cs"];
m18_102 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateHandlerCollection.cs"];
m18_27 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="StateHandlerCollection.cs"];
m18_14 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StateHandlerCollection.cs"];
m18_98 [label="Entry Unk.RemoveFromSet", span="", cluster="Unk.RemoveFromSet", file="StateHandlerCollection.cs"];
m18_70 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", span="65-65", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs"];
m18_71 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="67-68", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs"];
m18_72 [label="var scheduler = CreateScheduler()", span="69-69", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs"];
m18_73 [label="scheduler.Execute(_context.Object)", span="71-71", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs"];
m18_74 [label="_process.Verify(\r\n                x => x.ChangeState(It.IsAny<StateChangeContext>()),\r\n                Times.Never)", span="73-75", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs"];
m18_75 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", span="65-65", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs"];
m18_117 [label="Entry Hangfire.Server.DelayedJobScheduler.cstr", span="", cluster="Hangfire.Server.DelayedJobScheduler.cstr", file="StateHandlerCollection.cs"];
m18_56 [label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="53-53", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="StateHandlerCollection.cs"];
m18_118 [label="Hangfire.Core.Tests.Server.DelayedJobScheduler", span="", file="StateHandlerCollection.cs"];
m19_29 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="StateHandlerCollectionFacts.cs"];
m19_26 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateHandlerCollectionFacts.cs"];
m19_27 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateHandlerCollectionFacts.cs"];
m19_0 [label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs"];
m19_1 [label="_connection = connection", span="21-21", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs"];
m19_2 [label="_queues = queues", span="22-22", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs"];
m19_3 [label="Exit HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs"];
m19_25 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="StateHandlerCollectionFacts.cs"];
m19_20 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="StateHandlerCollectionFacts.cs"];
m19_28 [label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23", cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="StateHandlerCollectionFacts.cs"];
m19_21 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="StateHandlerCollectionFacts.cs"];
m19_4 [label="Entry HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_5 [label="Job job = null", span="27-27", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="StateHandlerCollectionFacts.cs"];
m19_6 [label="string queueName = null", span="28-28", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_13 [label="job == null", span="60-60", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_16 [label="job == null", span="67-67", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_17 [label="var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="69-69", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_18 [label="return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", span="71-74", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="StateHandlerCollectionFacts.cs"];
m19_12 [label="queueName = idAndQueue.Queue", span="57-57", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_11 [label="job = _connection.Query<Job>(\r\n                        @''select Id, InvocationData, Arguments from HangFire.Job where Id = @id'',\r\n                        parameters)\r\n                        .SingleOrDefault()", span="52-55", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="StateHandlerCollectionFacts.cs"];
m19_10 [label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", span="50-50", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_9 [label="var parameters = new DynamicParameters()", span="49-49", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_14 [label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="62-62", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_7 [label="var idAndQueue = _connection.Query(@''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt is null\r\nand Queue in @queues'',\r\n                    new { queues = _queues })\r\n                    .SingleOrDefault()", span="33-40", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_8 [label="idAndQueue != null", span="42-42", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_15 [label="return null;", span="64-64", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_19 [label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25", cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs"];
m19_22 [label="Entry DynamicParameters.cstr", span="", cluster="DynamicParameters.cstr", file="StateHandlerCollectionFacts.cs"];
m19_23 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="StateHandlerCollectionFacts.cs"];
m19_30 [label="HangFire.SqlServer.SqlServerFetcher", span="", file="StateHandlerCollectionFacts.cs"];
m20_0 [label="Entry HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22", cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs"];
m20_1 [label="return null;", span="24-24", cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", color=green, community=0, file="StateHandlerProviders.cs"];
m20_2 [label="Exit HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22", cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs"];
m21_7 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="StateMachine.cs"];
m21_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs"];
m21_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachine.cs"];
m21_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs"];
m21_13 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="StateMachine.cs"];
m21_14 [label="return Job.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(Job[name])\r\n                : default(T);", span="31-33", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="StateMachine.cs"];
m21_15 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="StateMachine.cs"];
m21_17 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37", cluster="HangFire.JobHelper.FromJson<T>(string)", file="StateMachine.cs"];
m21_38 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="StateMachine.cs"];
m21_34 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="StateMachine.cs"];
m21_39 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="StateMachine.cs"];
m21_37 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="StateMachine.cs"];
m21_8 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="StateMachine.cs"];
m21_9 [label="Job.Add(name, JobHelper.ToJson(value))", span="26-26", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="StateMachine.cs"];
m21_10 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="StateMachine.cs"];
m21_0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs"];
m21_1 [label="Job = job", span="10-10", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs"];
m21_2 [label="JobId = jobId", span="11-11", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs"];
m21_3 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs"];
m21_33 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="StateMachine.cs"];
m21_4 [label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="StateMachine.cs"];
m21_5 [label="EnqueueAction()", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="StateMachine.cs"];
m21_6 [label="Exit HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="StateMachine.cs"];
m21_35 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="StateMachine.cs"];
m21_11 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)", file="StateMachine.cs"];
m21_18 [label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_19 [label="var result = new Dictionary<string, string>()", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_20 [label="jobProperties != null", span="39-39", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_21 [label="TypeDescriptor.GetProperties(jobProperties)", span="41-41", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_22 [label="var propertyValue = descriptor.GetValue(jobProperties)", span="43-43", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", color=red, community=0, file="StateMachine.cs"];
m21_29 [label="result.Add(descriptor.Name, value)", span="64-64", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_30 [label="return result;", span="68-68", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_28 [label="throw new InvalidOperationException(\r\n                                String.Format(\r\n                                    ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                    descriptor.Name,\r\n                                    descriptor.PropertyType),\r\n                                ex);", span="55-60", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_23 [label="string value = null", span="44-44", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_24 [label="propertyValue != null", span="46-46", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_25 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="50-50", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_26 [label="value = converter.ConvertToInvariantString(propertyValue)", span="51-51", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_27 [label=Exception, span="53-53", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_31 [label="Exit HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs"];
m21_36 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="StateMachine.cs"];
m21_40 [label="HangFire.Client.ClientJobDescriptor", span="", file="StateMachine.cs"];
m22_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachineFactory.cs"];
m22_11 [label="Entry HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24", cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m22_12 [label="connection == null", span="26-26", cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m22_14 [label="return new StateMachine(connection, _handlers);", span="28-28", cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m22_13 [label="throw new ArgumentNullException(''connection'');", span="26-26", cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m22_15 [label="Exit HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24", cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m22_16 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>)", file="StateMachineFactory.cs"];
m22_0 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m22_1 [label="Exit HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m22_10 [label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62", cluster="HangFire.JobStorage.GetStateHandlers()", file="StateMachineFactory.cs"];
m22_2 [label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs"];
m22_3 [label="storage == null", span="18-18", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs"];
m22_6 [label="_handlers.AddRange(storage.GetStateHandlers())", span="21-21", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs"];
m22_4 [label="throw new ArgumentNullException(''storage'');", span="18-18", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs"];
m22_5 [label="_handlers.AddRange(GlobalStateHandlers.Handlers)", span="20-20", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs"];
m22_7 [label="Exit HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs"];
m22_9 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="StateMachineFactory.cs"];
m22_17 [label="HangFire.States.StateMachineFactory", span="", file="StateMachineFactory.cs"];
m23_0 [label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15", cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="StateMachineFacts.cs"];
m23_1 [label="_transaction = transaction", span="17-17", cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="StateMachineFacts.cs", color=green, community=0];
m23_2 [label="Exit HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15", cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="StateMachineFacts.cs"];
m23_3 [label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="20-20", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="StateMachineFacts.cs"];
m23_39 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                Prefix + key, expireIn))", span="51-52", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="StateMachineFacts.cs"];
m23_55 [label="Exit lambda expression", span="58-59", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_47 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(Prefix + ''queue:{0}'', queue), jobId))", span="58-59", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="StateMachineFacts.cs"];
m23_48 [label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="55-55", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="StateMachineFacts.cs"];
m23_49 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_51 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_54 [label="x.EnqueueItemOnList(\r\n                String.Format(Prefix + ''queue:{0}'', queue), jobId)", span="58-59", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_56 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachineFacts.cs"];
m23_58 [label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs"];
m23_59 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs"];
m23_60 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs"];
m23_61 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs"];
m23_52 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="StateMachineFacts.cs"];
m23_53 [label="Entry lambda expression", span="58-59", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_57 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="StateMachineFacts.cs"];
m23_50 [label="x.AddItemToSet(Prefix + ''queues'', queue)", span="57-57", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_62 [label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs"];
m23_63 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_107 [label="Entry lambda expression", span="106-108", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_103 [label="Entry lambda expression", span="155-157", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_99 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="StateMachineFacts.cs"];
m23_43 [label="Exit lambda expression", span="51-52", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_95 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachineFacts.cs"];
m23_42 [label="x.ExpireEntryIn(\r\n                Prefix + key, expireIn)", span="51-52", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_106 [label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="103-103", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachineFacts.cs"];
m23_124 [label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="122-122", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="StateMachineFacts.cs"];
m23_125 [label="_transaction.QueueCommand(x => x.TrimList(\r\n                Prefix + key, keepStartingFrom, keepEndingAt))", span="125-126", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="StateMachineFacts.cs"];
m23_126 [label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="122-122", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="StateMachineFacts.cs"];
m23_79 [label="Exit lambda expression", span="79-80", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_71 [label="Exit lambda expression", span="72-74", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_30 [label="redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', state.JobId), TimeSpan.FromMinutes(1))", span="56-57", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_4 [label="Entry HangFire.States.JobState.Apply(IRedisTransaction)", span="21-21", cluster="HangFire.States.JobState.Apply(IRedisTransaction)", file="StateMachineFacts.cs"];
m23_5 [label="Exit HangFire.States.JobState.Apply(IRedisTransaction)", span="21-21", cluster="HangFire.States.JobState.Apply(IRedisTransaction)", file="StateMachineFacts.cs"];
m23_44 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="StateMachineFacts.cs"];
m23_10 [label="Entry HangFire.States.JobState.JobState()", span="33-33", cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs"];
m23_24 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_25 [label="redis == null", span="50-50", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_26 [label="throw new ArgumentNullException(''redis'');", span="50-50", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_11 [label="RegisterDescriptor(FailedState.Name, new FailedStateDescriptor())", span="35-35", cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs"];
m23_12 [label="RegisterDescriptor(ProcessingState.Name, new ProcessingStateDescriptor())", span="36-36", cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs"];
m23_13 [label="RegisterDescriptor(ScheduledState.Name, new ScheduledStateDescriptor())", span="37-37", cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs"];
m23_74 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(Prefix + ''job:{0}:history'', jobId)))", span="81-82", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="StateMachineFacts.cs"];
m23_45 [label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="StateMachineFacts.cs"];
m23_46 [label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_16 [label="Exit lambda expression", span="28-29", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_9 [label="Exit lambda expression", span="22-23", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_38 [label="Exit HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_40 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="StateMachineFacts.cs"];
m23_18 [label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                Prefix + key, value))", span="34-35", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="StateMachineFacts.cs"];
m23_23 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs"];
m23_104 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties))", span="155-157", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_105 [label="Exit lambda expression", span="155-157", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_72 [label="Entry Unk.AppendHistory", span="", cluster="Unk.AppendHistory", file="StateMachineFacts.cs"];
m23_73 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(Prefix + ''job:{0}'', jobId)))", span="79-80", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="StateMachineFacts.cs"];
m23_75 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateMachineFacts.cs"];
m23_76 [label="Entry lambda expression", span="99-100", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_17 [label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="32-32", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="StateMachineFacts.cs"];
m23_21 [label="x.RemoveItemFromSortedSet(\r\n                Prefix + key, value)", span="34-35", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_22 [label="Exit lambda expression", span="34-35", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_41 [label="Entry lambda expression", span="51-52", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_69 [label="Entry lambda expression", span="72-74", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_31 [label=changingFilters, span="59-59", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_32 [label="var oldState = state", span="61-61", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_33 [label="state = filter.OnStateChanged(redis, oldState)", span="62-62", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_111 [label=properties, span="", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="StateMachineFacts.cs"];
m23_112 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(Prefix + key, value))", span="113-113", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="StateMachineFacts.cs"];
m23_113 [label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="111-111", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="StateMachineFacts.cs"];
m23_97 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        })", span="139-144", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_77 [label="Entry lambda expression", span="79-80", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_78 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(Prefix + ''job:{0}'', jobId))", span="79-80", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_101 [label="x.SetRangeInHash(\r\n                String.Format(Prefix + ''job:{0}:state'', jobId),\r\n                stateProperties)", span="98-100", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_96 [label="Entry lambda expression", span="95-96", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_100 [label="Entry lambda expression", span="98-100", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_98 [label="Exit lambda expression", span="95-96", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_102 [label="Exit lambda expression", span="98-100", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_7 [label="return new Dictionary<string, string>();", span="26-26", cluster="HangFire.States.JobState.GetProperties()", file="StateMachineFacts.cs"];
m23_14 [label="RegisterDescriptor(SucceededState.Name, new SucceededStateDescriptor())", span="38-38", cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs"];
m23_20 [label="Entry HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", span="5-5", cluster="HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", file="StateMachineFacts.cs"];
m23_27 [label="state == null", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_34 [label="oldState != state", span="64-64", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_66 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="StateMachineFacts.cs"];
m23_81 [label="AppendHistory(transaction, state, appendToJob)", span="126-126", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_84 [label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_92 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="153-153", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_114 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_120 [label="Entry lambda expression", span="118-119", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_127 [label="Entry lambda expression", span="125-126", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_8 [label="Exit HangFire.States.JobState.GetProperties()", span="24-24", cluster="HangFire.States.JobState.GetProperties()", file="StateMachineFacts.cs"];
m23_15 [label="Exit HangFire.States.JobState.JobState()", span="33-33", cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs"];
m23_28 [label="throw new ArgumentNullException(''state'');", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_29 [label="var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="53-54", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_35 [label="AppendHistory(redis, oldState, false)", span="66-66", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_36 [label="var appliedFilters = GlobalJobFilters.Filters\r\n                    .OfType<IStateAppliedFilter>().ToList()", span="70-71", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs"];
m23_64 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="StateMachineFacts.cs"];
m23_67 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="StateMachineFacts.cs"];
m23_70 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="StateMachineFacts.cs"];
m23_65 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="StateMachineFacts.cs"];
m23_68 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="StateMachineFacts.cs"];
m23_82 [label="transaction.Commit()", span="127-127", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_85 [label="var properties = state.GetProperties()", span="134-134", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_83 [label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_86 [label="var now = DateTime.UtcNow", span="135-135", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_93 [label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties)))", span="155-157", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_94 [label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_108 [label="HangFire.States.JobState", span="", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_109 [label="HangFire.States.JobState", span="", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_115 [label="x.EnqueueItemOnList(Prefix + key, value)", span="113-113", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_116 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_121 [label="x.RemoveItemFromList(\r\n                Prefix + key, value)", span="118-119", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_122 [label="Exit lambda expression", span="118-119", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_128 [label="x.TrimList(\r\n                Prefix + key, keepStartingFrom, keepEndingAt)", span="125-126", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_129 [label="Exit lambda expression", span="125-126", cluster="lambda expression", file="StateMachineFacts.cs"];
m23_37 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="StateMachineFacts.cs"];
m23_123 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="StateMachineFacts.cs"];
m23_110 [label="HangFire.States.JobState", span="", cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateMachineFacts.cs"];
m23_80 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="StateMachineFacts.cs"];
m23_19 [label="Entry HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", span="5-5", cluster="HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", file="StateMachineFacts.cs"];
m23_87 [label=appendToJob, span="137-137", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_88 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        }))", span="139-144", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_89 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties))", span="146-148", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_90 [label="properties.Add(''State'', state.StateName)", span="151-151", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_91 [label="properties.Add(''Reason'', state.Reason)", span="152-152", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs"];
m23_117 [label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="116-116", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="StateMachineFacts.cs"];
m23_118 [label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                Prefix + key, value))", span="118-119", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="StateMachineFacts.cs"];
m23_119 [label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="116-116", cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="StateMachineFacts.cs"];
m23_130 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="StateMachineFacts.cs"];
m23_6 [label="Entry HangFire.States.JobState.GetProperties()", span="24-24", cluster="HangFire.States.JobState.GetProperties()", file="StateMachineFacts.cs"];
m23_131 [label="HangFire.Redis.RedisStoredValues", span="", file="StateMachineFacts.cs"];
m23_132 [label=string, span="", file="StateMachineFacts.cs"];
m23_133 [label=string, span="", file="StateMachineFacts.cs"];
m23_134 [label=string, span="", file="StateMachineFacts.cs"];
m23_135 [label=string, span="", file="StateMachineFacts.cs"];
m23_136 [label=double, span="", file="StateMachineFacts.cs"];
m23_137 [label=string, span="", file="StateMachineFacts.cs"];
m23_138 [label=string, span="", file="StateMachineFacts.cs"];
m23_139 [label=string, span="", file="StateMachineFacts.cs"];
m23_140 [label=string, span="", file="StateMachineFacts.cs"];
m23_141 [label=string, span="", file="StateMachineFacts.cs"];
m23_142 [label="System.TimeSpan", span="", file="StateMachineFacts.cs"];
m23_143 [label=string, span="", file="StateMachineFacts.cs"];
m23_144 [label=string, span="", file="StateMachineFacts.cs"];
m23_145 [label=string, span="", file="StateMachineFacts.cs"];
m23_146 [label="System.TimeSpan", span="", file="StateMachineFacts.cs"];
m23_147 [label=string, span="", file="StateMachineFacts.cs"];
m23_148 [label=string, span="", file="StateMachineFacts.cs"];
m23_149 [label=string, span="", file="StateMachineFacts.cs"];
m23_150 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="StateMachineFacts.cs"];
m23_151 [label=string, span="", file="StateMachineFacts.cs"];
m23_152 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="StateMachineFacts.cs"];
m23_153 [label=string, span="", file="StateMachineFacts.cs"];
m23_154 [label=string, span="", file="StateMachineFacts.cs"];
m23_155 [label=string, span="", file="StateMachineFacts.cs"];
m23_156 [label=string, span="", file="StateMachineFacts.cs"];
m23_157 [label=string, span="", file="StateMachineFacts.cs"];
m23_158 [label=int, span="", file="StateMachineFacts.cs"];
m23_159 [label=int, span="", file="StateMachineFacts.cs"];
m24_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs"];
m24_8 [label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m24_9 [label="transaction.IncrementCounter(''stats:succeeded'')", span="57-57", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m24_10 [label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m24_11 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs"];
m24_3 [label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m24_4 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m24_5 [label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m24_15 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs"];
m24_0 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m24_1 [label="SucceededAt = DateTime.UtcNow", span="29-29", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m24_2 [label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m24_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs"];
m24_12 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m24_13 [label="transaction.DecrementCounter(''stats:succeeded'')", span="63-63", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m24_14 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m24_16 [label="HangFire.States.SucceededState", span="", file="SucceededState.cs"];
m25_21 [label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151", cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="SucceededStateHandler.cs"];
m25_29 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="SucceededStateHandler.cs"];
m25_22 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SucceededStateHandler.cs"];
m25_10 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SucceededStateHandler.cs"];
m25_8 [label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SucceededStateHandler.cs"];
m25_28 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="SucceededStateHandler.cs"];
m25_23 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="SucceededStateHandler.cs"];
m25_24 [label="Entry HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="70-70", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs"];
m25_25 [label="_stopped.Set()", span="72-72", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs"];
m25_26 [label="thread.Join()", span="73-73", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs"];
m25_27 [label="Exit HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="70-70", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs"];
m25_3 [label="Entry HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", span="31-31", cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs"];
m25_4 [label="var connection = _storage.CreateAndOpenConnection()", span="33-33", cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs"];
m25_5 [label=ProcessedTables, span="35-35", cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs"];
m25_6 [label="connection.Execute(\r\n                        String.Format(@''delete from HangFire.[{0}] with (tablock) where ExpireAt < @now'', table),\r\n                        new { now = DateTime.UtcNow })", span="37-39", cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs"];
m25_7 [label="Exit HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", span="31-31", cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs"];
m25_0 [label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="26-26", cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SucceededStateHandler.cs"];
m25_1 [label="_storage = storage", span="28-28", cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SucceededStateHandler.cs"];
m25_2 [label="Exit HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="26-26", cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SucceededStateHandler.cs"];
m25_11 [label="Entry HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", span="44-44", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_12 [label="Logger.Info(''Expiration manager has been started.'')", span="48-48", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_13 [label=true, span="50-50", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_14 [label="JobServer.RetryOnException(\r\n                        RemoveExpiredRecords,\r\n                        _stopped)", span="52-54", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_16 [label="Logger.Info(''Expiration manager has been stopped.'')", span="62-62", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_15 [label="_stopped.WaitOne(CheckInterval)", span="56-56", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_17 [label=Exception, span="64-64", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_18 [label="Logger.Fatal(''Unexpected exception caught.'', ex)", span="66-66", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_19 [label="Exit HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", span="44-44", cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs"];
m25_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SucceededStateHandler.cs"];
m25_20 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="SucceededStateHandler.cs"];
m25_30 [label="HangFire.SqlServer.Components.ExpirationManager", span="", file="SucceededStateHandler.cs"];
n202 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n151  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n178  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n185  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n202 -> n193  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ApplyStateContextFacts"];
n203 -> n31  [key=1, style=dashed, color=darkseagreen4, label=context];
n204 -> n40  [key=1, style=dashed, color=darkseagreen4, label=context];
n205 -> n79  [key=1, style=dashed, color=darkseagreen4, label=context];
n205 -> n83  [key=1, style=dashed, color=darkseagreen4, label=context];
n206 -> n111  [key=1, style=dashed, color=darkseagreen4, label=context];
n206 -> n115  [key=1, style=dashed, color=darkseagreen4, label=context];
n207 -> n158  [key=1, style=dashed, color=darkseagreen4, label=context];
n207 -> n162  [key=1, style=dashed, color=darkseagreen4, label=context];
n208 -> n178  [key=1, style=dashed, color=darkseagreen4, label=context];
n208 -> n182  [key=1, style=dashed, color=darkseagreen4, label=context];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n8  [key=2, style=dotted];
n1 -> n15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n3  [key=0, style=solid];
n2 -> n9  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n10  [key=2, style=dotted];
n3 -> n11  [key=2, style=dotted];
n3 -> n19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n4 -> n5  [key=0, style=solid];
n4 -> n12  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n13  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n14  [key=2, style=dotted];
n7 -> n0  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n17 -> n15  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n21 -> n19  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n27  [key=2, style=dotted];
n23 -> n31  [key=1, style=dashed, color=darkseagreen4, label=context];
n24 -> n25  [key=0, style=solid];
n24 -> n28  [key=2, style=dotted];
n24 -> n30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n27 -> n191  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n29  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n26 -> n22  [key=0, style=bold, color=blue];
n32 -> n30  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n27  [key=2, style=dotted];
n35 -> n40  [key=1, style=dashed, color=darkseagreen4, label=context];
n36 -> n37  [key=0, style=solid];
n36 -> n28  [key=2, style=dotted];
n36 -> n39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n40 -> n41  [key=0, style=solid];
n40 -> n33  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n29  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n38 -> n34  [key=0, style=bold, color=blue];
n41 -> n39  [key=0, style=bold, color=blue];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n10  [key=2, style=dotted];
n43 -> n48  [key=2, style=dotted];
n43 -> n49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n44 -> n45  [key=0, style=solid];
n44 -> n10  [key=2, style=dotted];
n44 -> n48  [key=2, style=dotted];
n44 -> n53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n49 -> n50  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n27  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n33  [key=2, style=dotted];
n47 -> n42  [key=0, style=bold, color=blue];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=2, style=dotted];
n51 -> n49  [key=0, style=bold, color=blue];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=2, style=dotted];
n55 -> n53  [key=0, style=bold, color=blue];
n57 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid, color=red];
n58 -> n27  [key=2, style=dotted];
n58 -> n65  [key=1, style=dashed, color=darkseagreen4, label=context];
n58 -> n79  [key=1, style=dashed, color=darkseagreen4, label=context];
n58 -> n66  [key=1, style=dashed, color=darkseagreen4, label=context];
n58 -> n83  [key=1, style=dashed, color=darkseagreen4, label=context];
n58 -> n68  [key=1, style=dashed, color=darkseagreen4, label=context];
n59 -> n60  [key=0, style=solid, color=red];
n59 -> n70  [key=2, style=dotted, color=red];
n59 -> n63  [key=1, style=dashed, color=red, label=handler1];
n59 -> n65  [key=1, style=dashed, color=red, label=handler1];
n65 -> n66  [key=0, style=solid];
n65 -> n10  [key=2, style=dotted];
n65 -> n48  [key=2, style=dotted];
n65 -> n78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n10  [key=2, style=dotted];
n66 -> n48  [key=2, style=dotted];
n66 -> n82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n83 -> n84  [key=0, style=solid];
n83 -> n81  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n33  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid, color=red];
n60 -> n10  [key=2, style=dotted];
n60 -> n11  [key=2, style=dotted];
n60 -> n72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n63 -> n64  [key=0, style=solid];
n63 -> n71  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid, color=red];
n61 -> n70  [key=2, style=dotted, color=red];
n61 -> n64  [key=1, style=dashed, color=red, label=handler2];
n61 -> n66  [key=1, style=dashed, color=red, label=handler2];
n72 -> n73  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n10  [key=2, style=dotted];
n62 -> n11  [key=2, style=dotted];
n62 -> n75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n64 -> n65  [key=0, style=solid];
n64 -> n71  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n10  [key=2, style=dotted];
n67 -> n48  [key=2, style=dotted];
n67 -> n85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n82 -> n83  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n69 -> n57  [key=0, style=bold, color=blue];
n73 -> n74  [key=0, style=solid];
n74 -> n72  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n77 -> n75  [key=0, style=bold, color=blue];
n80 -> n78  [key=0, style=bold, color=blue];
n84 -> n82  [key=0, style=bold, color=blue];
n86 -> n87  [key=0, style=solid];
n86 -> n28  [key=2, style=dotted];
n86 -> n52  [key=2, style=dotted];
n87 -> n85  [key=0, style=bold, color=blue];
n88 -> n89  [key=0, style=solid];
n89 -> n90  [key=0, style=solid, color=red];
n89 -> n27  [key=2, style=dotted];
n89 -> n97  [key=1, style=dashed, color=darkseagreen4, label=context];
n89 -> n111  [key=1, style=dashed, color=darkseagreen4, label=context];
n89 -> n98  [key=1, style=dashed, color=darkseagreen4, label=context];
n89 -> n115  [key=1, style=dashed, color=darkseagreen4, label=context];
n89 -> n99  [key=1, style=dashed, color=darkseagreen4, label=context];
n90 -> n91  [key=0, style=solid, color=red];
n90 -> n70  [key=2, style=dotted, color=red];
n90 -> n94  [key=1, style=dashed, color=red, label=handler1];
n90 -> n97  [key=1, style=dashed, color=red, label=handler1];
n97 -> n98  [key=0, style=solid];
n97 -> n10  [key=2, style=dotted];
n97 -> n48  [key=2, style=dotted];
n97 -> n110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n111 -> n112  [key=0, style=solid];
n111 -> n113  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n10  [key=2, style=dotted];
n98 -> n48  [key=2, style=dotted];
n98 -> n114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n115 -> n116  [key=0, style=solid];
n115 -> n113  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n33  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid, color=red];
n91 -> n10  [key=2, style=dotted];
n91 -> n11  [key=2, style=dotted];
n91 -> n101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n94 -> n95  [key=0, style=solid];
n94 -> n71  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid, color=red];
n92 -> n70  [key=2, style=dotted, color=red];
n92 -> n95  [key=1, style=dashed, color=red, label=handler2];
n92 -> n98  [key=1, style=dashed, color=red, label=handler2];
n101 -> n102  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n93 -> n10  [key=2, style=dotted];
n93 -> n11  [key=2, style=dotted];
n93 -> n104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n95 -> n96  [key=0, style=solid];
n95 -> n71  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n10  [key=2, style=dotted];
n96 -> n48  [key=2, style=dotted];
n96 -> n107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n107 -> n108  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n100 -> n88  [key=0, style=bold, color=blue];
n102 -> n103  [key=0, style=solid];
n103 -> n101  [key=0, style=bold, color=blue];
n105 -> n106  [key=0, style=solid];
n106 -> n104  [key=0, style=bold, color=blue];
n108 -> n109  [key=0, style=solid];
n108 -> n28  [key=2, style=dotted];
n108 -> n52  [key=2, style=dotted];
n109 -> n107  [key=0, style=bold, color=blue];
n112 -> n110  [key=0, style=bold, color=blue];
n116 -> n114  [key=0, style=bold, color=blue];
n117 -> n118  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n118 -> n27  [key=2, style=dotted];
n118 -> n120  [key=1, style=dashed, color=darkseagreen4, label=context];
n119 -> n120  [key=0, style=solid];
n119 -> n10  [key=2, style=dotted];
n119 -> n11  [key=2, style=dotted];
n119 -> n124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n120 -> n121  [key=0, style=solid];
n120 -> n33  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n121 -> n123  [key=2, style=dotted];
n121 -> n127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n122 -> n117  [key=0, style=bold, color=blue];
n127 -> n128  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n126 -> n124  [key=0, style=bold, color=blue];
n128 -> n129  [key=0, style=solid];
n128 -> n28  [key=2, style=dotted];
n128 -> n130  [key=2, style=dotted];
n129 -> n127  [key=0, style=bold, color=blue];
n131 -> n132  [key=0, style=solid];
n132 -> n133  [key=0, style=solid];
n132 -> n27  [key=2, style=dotted];
n132 -> n134  [key=1, style=dashed, color=darkseagreen4, label=context];
n133 -> n134  [key=0, style=solid];
n133 -> n10  [key=2, style=dotted];
n133 -> n11  [key=2, style=dotted];
n133 -> n137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n134 -> n135  [key=0, style=solid];
n134 -> n33  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n135 -> n123  [key=2, style=dotted];
n135 -> n140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n136 -> n131  [key=0, style=bold, color=blue];
n140 -> n141  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n139 -> n137  [key=0, style=bold, color=blue];
n141 -> n142  [key=0, style=solid];
n141 -> n143  [key=2, style=dotted];
n142 -> n140  [key=0, style=bold, color=blue];
n144 -> n145  [key=0, style=solid];
n145 -> n146  [key=0, style=solid];
n145 -> n27  [key=2, style=dotted];
n145 -> n150  [key=1, style=dashed, color=darkseagreen4, label=context];
n145 -> n158  [key=1, style=dashed, color=darkseagreen4, label=context];
n145 -> n151  [key=1, style=dashed, color=darkseagreen4, label=context];
n145 -> n162  [key=1, style=dashed, color=darkseagreen4, label=context];
n145 -> n153  [key=1, style=dashed, color=darkseagreen4, label=context];
n146 -> n147  [key=0, style=solid];
n146 -> n155  [key=2, style=dotted];
n146 -> n148  [key=1, style=dashed, color=darkseagreen4, label=filter1];
n146 -> n150  [key=1, style=dashed, color=darkseagreen4, label=filter1];
n150 -> n151  [key=0, style=solid];
n150 -> n10  [key=2, style=dotted];
n150 -> n48  [key=2, style=dotted];
n150 -> n157  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n10  [key=2, style=dotted];
n151 -> n48  [key=2, style=dotted];
n151 -> n161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n162 -> n163  [key=0, style=solid];
n162 -> n160  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n33  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n147 -> n155  [key=2, style=dotted];
n147 -> n149  [key=1, style=dashed, color=darkseagreen4, label=filter2];
n147 -> n151  [key=1, style=dashed, color=darkseagreen4, label=filter2];
n148 -> n149  [key=0, style=solid];
n148 -> n156  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n156  [key=2, style=dotted];
n157 -> n158  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n10  [key=2, style=dotted];
n152 -> n48  [key=2, style=dotted];
n152 -> n164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n161 -> n162  [key=0, style=solid];
n164 -> n165  [key=0, style=solid];
n154 -> n144  [key=0, style=bold, color=blue];
n159 -> n157  [key=0, style=bold, color=blue];
n163 -> n161  [key=0, style=bold, color=blue];
n165 -> n166  [key=0, style=solid];
n165 -> n28  [key=2, style=dotted];
n165 -> n52  [key=2, style=dotted];
n166 -> n164  [key=0, style=bold, color=blue];
n167 -> n168  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n27  [key=2, style=dotted];
n168 -> n173  [key=1, style=dashed, color=darkseagreen4, label=context];
n168 -> n178  [key=1, style=dashed, color=darkseagreen4, label=context];
n168 -> n174  [key=1, style=dashed, color=darkseagreen4, label=context];
n168 -> n182  [key=1, style=dashed, color=darkseagreen4, label=context];
n168 -> n175  [key=1, style=dashed, color=darkseagreen4, label=context];
n169 -> n170  [key=0, style=solid];
n169 -> n155  [key=2, style=dotted];
n169 -> n171  [key=1, style=dashed, color=darkseagreen4, label=filter1];
n169 -> n173  [key=1, style=dashed, color=darkseagreen4, label=filter1];
n173 -> n174  [key=0, style=solid];
n173 -> n10  [key=2, style=dotted];
n173 -> n48  [key=2, style=dotted];
n173 -> n177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n178 -> n179  [key=0, style=solid];
n178 -> n180  [key=2, style=dotted];
n174 -> n175  [key=0, style=solid];
n174 -> n10  [key=2, style=dotted];
n174 -> n48  [key=2, style=dotted];
n174 -> n181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n182 -> n183  [key=0, style=solid];
n182 -> n180  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n33  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n155  [key=2, style=dotted];
n170 -> n172  [key=1, style=dashed, color=darkseagreen4, label=filter2];
n170 -> n174  [key=1, style=dashed, color=darkseagreen4, label=filter2];
n171 -> n172  [key=0, style=solid];
n171 -> n156  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n156  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n176 -> n167  [key=0, style=bold, color=blue];
n179 -> n177  [key=0, style=bold, color=blue];
n183 -> n181  [key=0, style=bold, color=blue];
n184 -> n185  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n27  [key=2, style=dotted];
n185 -> n187  [key=1, style=dashed, color=darkseagreen4, label=context];
n185 -> n188  [key=1, style=dashed, color=darkseagreen4, label=context];
n186 -> n187  [key=0, style=solid];
n186 -> n29  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n190  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n190  [key=2, style=dotted];
n189 -> n184  [key=0, style=bold, color=blue];
n191 -> n192  [key=0, style=solid];
n191 -> n195  [key=2, style=dotted];
n191 -> n193  [key=1, style=dashed, color=darkseagreen4, label=connectionMock];
n192 -> n193  [key=0, style=solid];
n192 -> n10  [key=2, style=dotted];
n192 -> n11  [key=2, style=dotted];
n192 -> n198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n193 -> n194  [key=0, style=solid];
n193 -> n196  [key=2, style=dotted];
n193 -> n197  [key=2, style=dotted];
n198 -> n199  [key=0, style=solid];
n194 -> n27  [key=0, style=bold, color=blue];
n199 -> n200  [key=0, style=solid];
n199 -> n201  [key=2, style=dotted];
n200 -> n198  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_17  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_21  [key=2, style=dotted];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=handler];
m1_35 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=handler];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_11  [key=2, style=dotted];
m1_36 -> m1_39  [key=2, style=dotted];
m1_36 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_40  [key=2, style=dotted];
m1_37 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_34  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> n197  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_21  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_29  [key=2, style=dotted];
m1_26 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_27 -> m1_23  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_15 -> m1_13  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=2, style=dotted];
m1_32 -> m1_30  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_28  [key=2, style=dotted];
m1_43 -> m1_41  [key=0, style=bold, color=blue];
m1_44 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_44 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m1_45 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=handler];
m1_46 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=2, style=dotted];
m2_7 -> m2_5  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_7  [key=2, style=dotted, color=green];
m6_10 -> m6_8  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_9  [key=2, style=dotted];
m8_2 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=storage];
m8_2 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=storage];
m8_2 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label=storage];
m8_2 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=storage];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_0  [key=0, style=bold, color=blue];
m8_14 -> m8_15  [key=0, style=solid, color=red];
m8_15 -> m8_16  [key=0, style=solid, color=red];
m8_15 -> m8_17  [key=2, style=dotted, color=red];
m8_16 -> m8_14  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> n56  [key=2, style=dotted];
m8_12 -> m8_10  [key=0, style=bold, color=blue];
m8_18 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m8_18 -> m8_15  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisAtomicWriteTransaction"];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>"];
m9_50 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m9_55 -> m9_64  [key=2, style=dotted];
m9_55 -> m9_52  [key=0, style=solid];
m9_55 -> m9_62  [key=2, style=dotted];
m9_55 -> m9_63  [key=2, style=dotted];
m9_51 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_58  [key=2, style=dotted];
m9_51 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_52 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_56  [key=0, style=solid];
m9_52 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_60  [key=2, style=dotted];
m9_54 -> m9_61  [key=2, style=dotted];
m9_56 -> m9_65  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_59  [key=2, style=dotted];
m9_57 -> m9_50  [key=0, style=bold, color=blue];
m9_43 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_43 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_177 -> m9_178  [key=0, style=solid];
m9_180 -> m9_181  [key=0, style=solid];
m9_180 -> m9_160  [key=2, style=dotted];
m9_180 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label=multi];
m9_180 -> m9_188  [key=1, style=dashed, color=darkseagreen4, label=multi];
m9_180 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label=multi];
m9_179 -> m9_180  [key=0, style=solid];
m9_181 -> m9_182  [key=0, style=solid];
m9_181 -> m9_193  [key=2, style=dotted];
m9_181 -> m9_162  [key=2, style=dotted];
m9_181 -> m9_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_181 -> m9_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_181 -> m9_202  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m9_187 -> m9_22  [key=2, style=dotted];
m9_187 -> m9_23  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_188 -> m9_22  [key=2, style=dotted];
m9_188 -> m9_23  [key=2, style=dotted];
m9_188 -> m9_189  [key=0, style=solid];
m9_189 -> m9_22  [key=2, style=dotted];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_161  [key=2, style=dotted];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_178 -> m9_188  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_178 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_178 -> m9_192  [key=2, style=dotted];
m9_178 -> m9_183  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_178 -> m9_184  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_178 -> m9_185  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_178 -> m9_186  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_178 -> m9_190  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_202  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_182 -> m9_184  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m9_182 -> m9_185  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m9_182 -> m9_186  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> m9_194  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_194  [key=2, style=dotted];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_194  [key=2, style=dotted];
m9_185 -> m9_186  [key=0, style=solid];
m9_185 -> m9_194  [key=2, style=dotted];
m9_191 -> m9_177  [key=0, style=bold, color=blue];
m9_83 -> m9_84  [key=0, style=solid];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_82  [key=2, style=dotted];
m9_85 -> m9_83  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_146 -> m9_205  [key=0, style=solid];
m9_146 -> m9_212  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_146 -> m9_231  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_213 -> m9_214  [key=0, style=solid];
m9_213 -> m9_226  [key=2, style=dotted];
m9_213 -> m9_162  [key=2, style=dotted];
m9_213 -> m9_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_213 -> m9_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_213 -> m9_215  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_213 -> m9_216  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_213 -> m9_220  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> m9_48  [key=2, style=dotted];
m9_212 -> m9_163  [key=2, style=dotted];
m9_212 -> m9_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_212 -> m9_214  [key=1, style=dashed, color=darkseagreen4, label=keys];
m9_214 -> m9_215  [key=0, style=solid];
m9_214 -> m9_217  [key=0, style=solid];
m9_214 -> m9_216  [key=1, style=dashed, color=darkseagreen4, label=key];
m9_215 -> m9_214  [key=0, style=solid];
m9_215 -> m9_216  [key=0, style=solid];
m9_215 -> m9_204  [key=2, style=dotted];
m9_216 -> m9_214  [key=0, style=solid];
m9_216 -> m9_227  [key=2, style=dotted];
m9_220 -> m9_221  [key=0, style=solid];
m9_220 -> m9_229  [key=2, style=dotted];
m9_209 -> m9_64  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_205 -> m9_209  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_210  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_206 -> m9_212  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_206 -> n13  [key=2, style=dotted];
m9_206 -> m9_209  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_219  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_206 -> m9_221  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_208 -> m9_212  [key=0, style=solid];
m9_208 -> m9_209  [key=0, style=solid];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_228  [key=2, style=dotted];
m9_217 -> m9_221  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_217 -> m9_223  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_219 -> m9_220  [key=0, style=solid];
m9_219 -> m9_223  [key=0, style=solid];
m9_218 -> m9_220  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_218 -> m9_219  [key=0, style=solid];
m9_218 -> m9_221  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_218 -> m9_222  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_221 -> m9_227  [key=2, style=dotted];
m9_221 -> m9_222  [key=0, style=solid];
m9_210 -> m9_210  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_225  [key=2, style=dotted];
m9_223 -> m9_224  [key=0, style=solid];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_211  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_211 -> m9_208  [key=0, style=solid];
m9_211 -> m9_211  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_222 -> m9_219  [key=0, style=solid];
m9_222 -> m9_222  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_224 -> m9_146  [key=0, style=bold, color=blue];
m9_18 -> m9_30  [key=0, style=solid];
m9_150 -> m9_152  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_150 -> m9_151  [key=0, style=solid];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_160  [key=2, style=dotted];
m9_152 -> m9_156  [key=1, style=dashed, color=darkseagreen4, label=multi];
m9_152 -> m9_157  [key=1, style=dashed, color=darkseagreen4, label=multi];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_164  [key=2, style=dotted];
m9_158 -> m9_22  [key=2, style=dotted];
m9_158 -> m9_142  [key=2, style=dotted];
m9_151 -> m9_152  [key=0, style=solid];
m9_153 -> m9_158  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_153 -> m9_22  [key=2, style=dotted];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_161  [key=2, style=dotted];
m9_156 -> m9_158  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m9_156 -> m9_22  [key=2, style=dotted];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_162  [key=2, style=dotted];
m9_156 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_156 -> m9_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> m9_22  [key=2, style=dotted];
m9_157 -> m9_48  [key=2, style=dotted];
m9_157 -> m9_163  [key=2, style=dotted];
m9_157 -> m9_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_154 -> m9_156  [key=0, style=solid];
m9_154 -> m9_155  [key=0, style=solid];
m9_155 -> m9_159  [key=0, style=solid];
m9_159 -> m9_150  [key=0, style=bold, color=blue];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_6 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageOptions"];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_13  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [key=2, style=dotted];
m9_10 -> m9_13  [key=2, style=dotted];
m9_10 -> m9_14  [key=2, style=dotted];
m9_11 -> m9_6  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_36  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_18  [key=2, style=dotted];
m9_33 -> m9_37  [key=2, style=dotted];
m9_34 -> m9_32  [key=0, style=bold, color=blue];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_38  [key=2, style=dotted];
m9_143 -> m9_144  [key=0, style=solid];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_146  [key=2, style=dotted];
m9_145 -> m9_143  [key=0, style=bold, color=blue];
m9_104 -> m9_105  [key=0, style=solid];
m9_105 -> m9_38  [key=2, style=dotted];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_106 -> m9_104  [key=0, style=bold, color=blue];
m9_96 -> m9_97  [key=0, style=solid];
m9_97 -> m9_38  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_98 -> m9_96  [key=0, style=bold, color=blue];
m9_79 -> m9_80  [key=0, style=solid];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_82  [key=2, style=dotted];
m9_81 -> m9_79  [key=0, style=bold, color=blue];
m9_60 -> m9_66  [key=0, style=solid];
m9_66 -> m9_59  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_67 -> m9_70  [key=0, style=solid];
m9_67 -> m9_71  [key=2, style=dotted];
m9_69 -> m9_70  [key=0, style=solid];
m9_68 -> m9_69  [key=0, style=solid];
m9_70 -> m9_60  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_6  [key=2, style=dotted];
m9_3 -> m9_2  [key=0, style=bold, color=blue];
m9_3 -> m9_3  [key=3, color=darkorchid, style=bold, label="Field variable string Prefix"];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_7  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_23  [key=0, style=bold, color=blue];
m9_28 -> m9_20  [key=3, color=darkorchid, style=bold, label="Property variable string HostAndPort"];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_18  [key=2, style=dotted];
m9_29 -> m9_27  [key=0, style=bold, color=blue];
m9_5 -> m9_4  [key=0, style=bold, color=blue];
m9_14 -> m9_15  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid, color=green];
m9_40 -> m9_41  [key=0, style=solid, color=green];
m9_40 -> m9_42  [key=2, style=dotted, color=green];
m9_40 -> m9_43  [key=2, style=dotted, color=green];
m9_41 -> m9_39  [key=0, style=bold, color=blue];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_28  [key=2, style=dotted];
m9_24 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_22  [key=2, style=dotted];
m9_25 -> m9_23  [key=2, style=dotted];
m9_25 -> m9_29  [key=2, style=dotted];
m9_26 -> m9_24  [key=0, style=bold, color=blue];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_30  [key=2, style=dotted];
m9_201 -> m9_202  [key=0, style=solid];
m9_76 -> m9_43  [key=2, style=dotted];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_78  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_107 -> m9_108  [key=0, style=solid];
m9_126 -> m9_127  [key=0, style=solid];
m9_235 -> m9_236  [key=0, style=solid];
m9_238 -> m9_239  [key=0, style=solid];
m9_269 -> m9_270  [key=0, style=solid];
m9_272 -> m9_273  [key=0, style=solid];
m9_77 -> m9_75  [key=0, style=bold, color=blue];
m9_172 -> m9_22  [key=2, style=dotted];
m9_172 -> m9_173  [key=0, style=solid];
m9_266 -> m9_267  [key=0, style=solid];
m9_266 -> m9_268  [key=2, style=dotted];
m9_101 -> m9_99  [key=0, style=bold, color=blue];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_102  [key=2, style=dotted];
m9_100 -> m9_103  [key=2, style=dotted];
m9_109 -> m9_107  [key=0, style=bold, color=blue];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_110  [key=2, style=dotted];
m9_108 -> m9_103  [key=2, style=dotted];
m9_128 -> m9_126  [key=0, style=bold, color=blue];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_129  [key=2, style=dotted];
m9_127 -> m9_103  [key=2, style=dotted];
m9_231 -> m9_232  [key=0, style=solid];
m9_231 -> m9_233  [key=2, style=dotted];
m9_231 -> m9_234  [key=2, style=dotted];
m9_165 -> m9_166  [key=0, style=solid];
m9_168 -> m9_169  [key=0, style=solid];
m9_171 -> m9_172  [key=0, style=solid];
m9_195 -> m9_196  [key=0, style=solid];
m9_198 -> m9_199  [key=0, style=solid];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_204  [key=2, style=dotted];
m9_230 -> m9_231  [key=0, style=solid];
m9_237 -> m9_235  [key=0, style=bold, color=blue];
m9_236 -> m9_237  [key=0, style=solid];
m9_240 -> m9_238  [key=0, style=bold, color=blue];
m9_239 -> m9_240  [key=0, style=solid];
m9_265 -> m9_266  [key=0, style=solid];
m9_271 -> m9_269  [key=0, style=bold, color=blue];
m9_270 -> m9_271  [key=0, style=solid];
m9_274 -> m9_272  [key=0, style=bold, color=blue];
m9_273 -> m9_274  [key=0, style=solid];
m9_173 -> m9_171  [key=0, style=bold, color=blue];
m9_262 -> m9_263  [key=0, style=solid];
m9_267 -> m9_265  [key=0, style=bold, color=blue];
m9_232 -> m9_230  [key=0, style=bold, color=blue];
m9_167 -> m9_165  [key=0, style=bold, color=blue];
m9_166 -> m9_167  [key=0, style=solid];
m9_170 -> m9_168  [key=0, style=bold, color=blue];
m9_169 -> m9_170  [key=0, style=solid];
m9_197 -> m9_195  [key=0, style=bold, color=blue];
m9_196 -> m9_197  [key=0, style=solid];
m9_200 -> m9_198  [key=0, style=bold, color=blue];
m9_199 -> m9_200  [key=0, style=solid];
m9_203 -> m9_201  [key=0, style=bold, color=blue];
m9_263 -> m9_233  [key=2, style=dotted];
m9_263 -> m9_264  [key=0, style=solid];
m9_264 -> m9_262  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m9_4 -> m9_0  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_12 -> m9_8  [key=0, style=bold, color=blue];
m9_38 -> m9_44  [key=0, style=solid];
m9_38 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_38 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=0, style=bold, color=crimson];
m9_31 -> m9_34  [key=0, style=bold, color=crimson];
m9_31 -> m9_18  [key=0, style=bold, color=blue];
m9_35 -> m9_31  [key=0, style=bold, color=blue];
m9_35 -> m9_36  [key=0, style=solid, color=green];
m9_36 -> m9_37  [key=0, style=solid, color=green];
m9_36 -> m9_38  [key=2, style=dotted, color=green];
m9_36 -> m9_39  [key=1, style=dashed, color=green, label="lambda expression"];
m9_37 -> m9_35  [key=0, style=bold, color=blue];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_22  [key=2, style=dotted];
m9_30 -> m9_23  [key=2, style=dotted];
m9_17 -> m9_15  [key=0, style=bold, color=blue];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=2, style=dotted];
m9_15 -> m9_18  [key=2, style=dotted];
m9_16 -> m9_14  [key=0, style=bold, color=blue];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_18  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=0, style=bold, color=crimson];
m9_23 -> m9_26  [key=0, style=bold, color=crimson];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_22  [key=2, style=dotted];
m9_45 -> m9_48  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_49  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_47 -> m9_38  [key=0, style=bold, color=blue];
m9_72 -> m9_73  [key=0, style=solid];
m9_73 -> m9_38  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_74 -> m9_72  [key=0, style=bold, color=blue];
m9_121 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_121 -> m9_122  [key=0, style=solid];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_22  [key=2, style=dotted];
m9_123 -> m9_48  [key=2, style=dotted];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_49  [key=2, style=dotted];
m9_124 -> m9_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_122 -> m9_123  [key=0, style=solid];
m9_125 -> m9_121  [key=0, style=bold, color=blue];
m9_86 -> m9_87  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_22  [key=2, style=dotted];
m9_87 -> m9_48  [key=2, style=dotted];
m9_87 -> m9_89  [key=1, style=dashed, color=darkseagreen4, label=servers];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> n13  [key=2, style=dotted];
m9_88 -> m9_91  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_88 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_92  [key=0, style=solid];
m9_89 -> m9_91  [key=1, style=dashed, color=darkseagreen4, label=server];
m9_90 -> m9_22  [key=2, style=dotted];
m9_90 -> m9_91  [key=0, style=solid];
m9_91 -> m9_89  [key=0, style=solid];
m9_91 -> m9_64  [key=2, style=dotted];
m9_91 -> m9_95  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_93 -> m9_86  [key=0, style=bold, color=blue];
m9_174 -> m9_175  [key=0, style=solid];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_18  [key=2, style=dotted];
m9_176 -> m9_174  [key=0, style=bold, color=blue];
m9_82 -> m9_241  [key=0, style=solid];
m9_82 -> m9_248  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_82 -> m9_266  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_249 -> m9_250  [key=0, style=solid];
m9_249 -> m9_226  [key=2, style=dotted];
m9_249 -> m9_162  [key=2, style=dotted];
m9_249 -> m9_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_249 -> m9_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_249 -> m9_251  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_249 -> m9_252  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_249 -> m9_256  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_248 -> m9_249  [key=0, style=solid];
m9_248 -> m9_48  [key=2, style=dotted];
m9_248 -> m9_163  [key=2, style=dotted];
m9_248 -> m9_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_248 -> m9_250  [key=1, style=dashed, color=darkseagreen4, label=keys];
m9_250 -> m9_251  [key=0, style=solid];
m9_250 -> m9_253  [key=0, style=solid];
m9_250 -> m9_252  [key=1, style=dashed, color=darkseagreen4, label=key];
m9_251 -> m9_250  [key=0, style=solid];
m9_251 -> m9_252  [key=0, style=solid];
m9_251 -> m9_204  [key=2, style=dotted];
m9_252 -> m9_250  [key=0, style=solid];
m9_252 -> m9_227  [key=2, style=dotted];
m9_256 -> m9_257  [key=0, style=solid];
m9_256 -> m9_229  [key=2, style=dotted];
m9_247 -> m9_48  [key=2, style=dotted];
m9_247 -> m9_248  [key=0, style=solid];
m9_247 -> m9_163  [key=2, style=dotted];
m9_247 -> m9_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_247 -> m9_255  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m9_241 -> m9_242  [key=0, style=solid];
m9_241 -> m9_244  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_241 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_241 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_245 -> m9_64  [key=2, style=dotted];
m9_245 -> m9_246  [key=0, style=solid];
m9_253 -> m9_254  [key=0, style=solid];
m9_253 -> m9_228  [key=2, style=dotted];
m9_253 -> m9_257  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_253 -> m9_259  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_255 -> m9_256  [key=0, style=solid];
m9_255 -> m9_259  [key=0, style=solid];
m9_254 -> m9_256  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_254 -> m9_255  [key=0, style=solid];
m9_254 -> m9_257  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_254 -> m9_258  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_257 -> m9_227  [key=2, style=dotted];
m9_257 -> m9_258  [key=0, style=solid];
m9_244 -> m9_247  [key=0, style=solid];
m9_244 -> m9_245  [key=0, style=solid];
m9_243 -> m9_247  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_243 -> n13  [key=2, style=dotted];
m9_243 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_243 -> m9_257  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_243 -> m9_244  [key=0, style=solid];
m9_259 -> m9_260  [key=0, style=solid];
m9_242 -> m9_244  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_261  [key=2, style=dotted];
m9_246 -> m9_244  [key=0, style=solid];
m9_246 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_246 -> m9_261  [key=2, style=dotted];
m9_258 -> m9_255  [key=0, style=solid];
m9_258 -> m9_258  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_260 -> m9_82  [key=0, style=bold, color=blue];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [key=2, style=dotted];
m9_20 -> m9_23  [key=2, style=dotted];
m9_20 -> m9_18  [key=2, style=dotted];
m9_21 -> m9_19  [key=0, style=bold, color=blue];
m9_147 -> m9_148  [key=0, style=solid];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_146  [key=2, style=dotted];
m9_149 -> m9_147  [key=0, style=bold, color=blue];
m9_111 -> m9_112  [key=0, style=solid];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_22  [key=2, style=dotted];
m9_113 -> m9_48  [key=2, style=dotted];
m9_113 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_112 -> m9_113  [key=0, style=solid];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_119  [key=2, style=dotted];
m9_114 -> m9_116  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_114 -> m9_117  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_117  [key=0, style=solid];
m9_116 -> m9_115  [key=0, style=solid];
m9_116 -> m9_64  [key=2, style=dotted];
m9_116 -> n13  [key=2, style=dotted];
m9_116 -> m9_120  [key=2, style=dotted];
m9_117 -> m9_118  [key=0, style=solid];
m9_118 -> m9_111  [key=0, style=bold, color=blue];
m9_130 -> m9_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_130 -> m9_131  [key=0, style=solid];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_22  [key=2, style=dotted];
m9_132 -> m9_48  [key=2, style=dotted];
m9_132 -> m9_134  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_135 -> m9_134  [key=0, style=solid];
m9_135 -> m9_139  [key=2, style=dotted];
m9_135 -> m9_140  [key=2, style=dotted];
m9_135 -> m9_141  [key=2, style=dotted];
m9_135 -> m9_142  [key=2, style=dotted];
m9_135 -> m9_64  [key=2, style=dotted];
m9_131 -> m9_132  [key=0, style=solid];
m9_133 -> m9_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_138  [key=2, style=dotted];
m9_133 -> m9_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_136  [key=0, style=solid];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_65  [key=2, style=dotted];
m9_137 -> m9_130  [key=0, style=bold, color=blue];
m9_275 -> m9_36  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_180  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_275 -> m9_249  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m9_278 -> m9_266  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_277 -> m9_231  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_276 -> m9_202  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_7  [key=0, style=bold, color=blue];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_3  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_9  [key=0, style=bold, color=blue];
m10_12 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.CorrectJob"];
m10_13 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
m10_13 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
m10_14 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.DisposableJob"];
m11_75 -> m11_76  [key=0, style=solid];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_15  [key=2, style=dotted];
m11_76 -> m11_16  [key=2, style=dotted];
m11_76 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_56  [key=2, style=dotted];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_57  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_58  [key=2, style=dotted];
m11_79 -> m11_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_80 -> m11_75  [key=0, style=bold, color=blue];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_56  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_57  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_58  [key=2, style=dotted];
m11_69 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_70 -> m11_66  [key=0, style=bold, color=blue];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_56  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_57  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_58  [key=2, style=dotted];
m11_53 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_58  [key=2, style=dotted];
m11_54 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_55 -> m11_50  [key=0, style=bold, color=blue];
m11_33 -> m11_34  [key=0, style=solid, color=red];
m11_34 -> m11_35  [key=0, style=solid, color=red];
m11_34 -> m11_20  [key=2, style=dotted, color=red];
m11_34 -> m11_38  [key=1, style=dashed, color=red, label="lambda expression"];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> n29  [key=2, style=dotted];
m11_36 -> m11_33  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_10  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_11  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_12  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_13  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_14  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_15  [key=2, style=dotted];
m11_6 -> m11_16  [key=2, style=dotted];
m11_6 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_15  [key=2, style=dotted];
m11_7 -> m11_16  [key=2, style=dotted];
m11_7 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_15  [key=2, style=dotted];
m11_8 -> m11_16  [key=2, style=dotted];
m11_8 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_9 -> m11_0  [key=0, style=bold, color=blue];
m11_84 -> m11_85  [key=0, style=solid];
m11_17 -> m11_18  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_20  [key=2, style=dotted];
m11_18 -> m11_21  [key=2, style=dotted];
m11_19 -> m11_17  [key=0, style=bold, color=blue];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_25  [key=2, style=dotted];
m11_24 -> m11_22  [key=0, style=bold, color=blue];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_20  [key=2, style=dotted];
m11_27 -> m11_29  [key=2, style=dotted];
m11_27 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_28 -> m11_26  [key=0, style=bold, color=blue];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_32 -> m11_30  [key=0, style=bold, color=blue];
m11_38 -> m11_39  [key=0, style=solid, color=red];
m11_39 -> m11_40  [key=0, style=solid, color=red];
m11_39 -> m11_41  [key=2, style=dotted, color=red];
m11_39 -> m11_42  [key=2, style=dotted, color=red];
m11_40 -> m11_38  [key=0, style=bold, color=blue];
m11_47 -> m11_48  [key=0, style=solid, color=red];
m11_48 -> m11_49  [key=0, style=solid, color=red];
m11_48 -> m11_41  [key=2, style=dotted, color=red];
m11_48 -> m11_42  [key=2, style=dotted, color=red];
m11_49 -> m11_47  [key=0, style=bold, color=blue];
m11_59 -> m11_60  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_25  [key=2, style=dotted];
m11_61 -> m11_59  [key=0, style=bold, color=blue];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_65  [key=2, style=dotted];
m11_64 -> m11_62  [key=0, style=bold, color=blue];
m11_71 -> m11_72  [key=0, style=solid];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_20  [key=2, style=dotted];
m11_72 -> m11_74  [key=2, style=dotted];
m11_73 -> m11_71  [key=0, style=bold, color=blue];
m11_81 -> m11_82  [key=0, style=solid];
m11_87 -> m11_88  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_20  [key=2, style=dotted];
m11_82 -> m11_29  [key=2, style=dotted];
m11_82 -> m11_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_83 -> m11_81  [key=0, style=bold, color=blue];
m11_85 -> m11_86  [key=0, style=solid];
m11_86 -> m11_84  [key=0, style=bold, color=blue];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_20  [key=2, style=dotted];
m11_88 -> m11_74  [key=2, style=dotted];
m11_89 -> m11_87  [key=0, style=bold, color=blue];
m11_56 -> m11_90  [key=0, style=solid, color=red];
m11_90 -> m11_91  [key=0, style=solid, color=red];
m11_90 -> m11_41  [key=2, style=dotted, color=red];
m11_91 -> m11_56  [key=0, style=bold, color=blue];
m11_43 -> m11_44  [key=0, style=solid, color=red];
m11_44 -> m11_45  [key=0, style=solid, color=red];
m11_44 -> m11_20  [key=2, style=dotted, color=red];
m11_44 -> m11_47  [key=1, style=dashed, color=red, label="lambda expression"];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> n29  [key=2, style=dotted];
m11_46 -> m11_43  [key=0, style=bold, color=blue];
m11_92 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_34  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_39  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_44  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_48  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m11_92 -> m11_90  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.SchedulePollerFacts"];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_3 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.ClientJobExceptionContext"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m14_6 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m14_6 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m14_6 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerOptions"];
m15_96 -> m15_97  [key=0, style=solid];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_81  [key=2, style=dotted];
m15_97 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_36  [key=2, style=dotted];
m15_98 -> m15_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> n29  [key=2, style=dotted];
m15_100 -> m15_96  [key=0, style=bold, color=blue];
m15_56 -> m15_57  [key=0, style=solid];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_12  [key=2, style=dotted];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_60  [key=2, style=dotted];
m15_58 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_59 -> m15_56  [key=0, style=bold, color=blue];
m15_136 -> m15_137  [key=0, style=solid];
m15_137 -> m15_138  [key=0, style=solid];
m15_137 -> m15_81  [key=2, style=dotted];
m15_137 -> m15_142  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_138 -> m15_139  [key=0, style=solid];
m15_138 -> m15_36  [key=2, style=dotted];
m15_138 -> m15_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_139 -> m15_140  [key=0, style=solid];
m15_139 -> n29  [key=2, style=dotted];
m15_140 -> m15_136  [key=0, style=bold, color=blue];
m15_77 -> m15_78  [key=0, style=solid];
m15_78 -> m15_79  [key=0, style=solid];
m15_78 -> m15_81  [key=2, style=dotted];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_82  [key=2, style=dotted];
m15_79 -> m15_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_80 -> m15_77  [key=0, style=bold, color=blue];
m15_122 -> m15_123  [key=0, style=solid];
m15_123 -> m15_124  [key=0, style=solid];
m15_123 -> m15_81  [key=2, style=dotted];
m15_123 -> m15_125  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_123 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_124 -> m15_125  [key=0, style=solid];
m15_124 -> m15_13  [key=2, style=dotted];
m15_124 -> m15_36  [key=2, style=dotted];
m15_124 -> m15_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_125 -> m15_126  [key=0, style=solid];
m15_125 -> m15_36  [key=2, style=dotted];
m15_125 -> m15_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_125 -> m15_127  [key=1, style=dashed, color=darkseagreen4, label=exception];
m15_126 -> m15_127  [key=0, style=solid];
m15_126 -> m15_129  [key=2, style=dotted];
m15_127 -> m15_128  [key=0, style=solid];
m15_127 -> m15_36  [key=2, style=dotted];
m15_128 -> m15_122  [key=0, style=bold, color=blue];
m15_145 -> m15_146  [key=0, style=solid];
m15_146 -> m15_147  [key=0, style=solid];
m15_146 -> m15_81  [key=2, style=dotted];
m15_146 -> m15_151  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_147 -> m15_148  [key=0, style=solid];
m15_147 -> m15_36  [key=2, style=dotted];
m15_147 -> m15_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_148 -> m15_149  [key=0, style=solid];
m15_148 -> n29  [key=2, style=dotted];
m15_149 -> m15_145  [key=0, style=bold, color=blue];
m15_154 -> m15_155  [key=0, style=solid];
m15_155 -> m15_156  [key=0, style=solid];
m15_155 -> m15_81  [key=2, style=dotted];
m15_156 -> m15_157  [key=0, style=solid];
m15_156 -> m15_144  [key=2, style=dotted];
m15_157 -> m15_158  [key=0, style=solid];
m15_157 -> m15_82  [key=2, style=dotted];
m15_157 -> m15_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_158 -> m15_154  [key=0, style=bold, color=blue];
m15_104 -> m15_105  [key=0, style=solid];
m15_105 -> m15_106  [key=0, style=solid];
m15_105 -> m15_81  [key=2, style=dotted];
m15_105 -> m15_110  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_106 -> m15_107  [key=0, style=solid];
m15_106 -> m15_36  [key=2, style=dotted];
m15_106 -> m15_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> n29  [key=2, style=dotted];
m15_108 -> m15_104  [key=0, style=bold, color=blue];
m15_163 -> m15_164  [key=0, style=solid];
m15_164 -> m15_165  [key=0, style=solid];
m15_164 -> m15_81  [key=2, style=dotted];
m15_165 -> m15_166  [key=0, style=solid];
m15_165 -> m15_144  [key=2, style=dotted];
m15_166 -> m15_167  [key=0, style=solid];
m15_166 -> m15_82  [key=2, style=dotted];
m15_166 -> m15_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_167 -> m15_163  [key=0, style=bold, color=blue];
m15_171 -> m15_172  [key=0, style=solid];
m15_172 -> m15_173  [key=0, style=solid];
m15_172 -> m15_13  [key=2, style=dotted];
m15_172 -> m15_14  [key=2, style=dotted];
m15_172 -> m15_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_173 -> m15_174  [key=0, style=solid];
m15_173 -> m15_81  [key=2, style=dotted];
m15_174 -> m15_175  [key=0, style=solid];
m15_174 -> m15_144  [key=2, style=dotted];
m15_175 -> m15_176  [key=0, style=solid];
m15_175 -> m15_177  [key=2, style=dotted];
m15_176 -> m15_171  [key=0, style=bold, color=blue];
m15_86 -> m15_87  [key=0, style=solid];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_81  [key=2, style=dotted];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_91  [key=2, style=dotted];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_82  [key=2, style=dotted];
m15_89 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_90 -> m15_86  [key=0, style=bold, color=blue];
m15_65 -> m15_66  [key=0, style=solid];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_60  [key=2, style=dotted];
m15_66 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_67 -> m15_65  [key=0, style=bold, color=blue];
m15_81 -> m15_182  [key=0, style=solid];
m15_182 -> m15_183  [key=0, style=solid];
m15_182 -> m15_41  [key=2, style=dotted];
m15_183 -> m15_81  [key=0, style=bold, color=blue];
m15_71 -> m15_72  [key=0, style=solid];
m15_72 -> m15_73  [key=0, style=solid];
m15_72 -> m15_60  [key=2, style=dotted];
m15_72 -> m15_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_73 -> m15_71  [key=0, style=bold, color=blue];
m15_178 -> m15_179  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid, color=red];
m15_24 -> m15_25  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid, color=red];
m15_21 -> m15_23  [key=2, style=dotted, color=red];
m15_22 -> m15_20  [key=0, style=bold, color=blue];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_27  [key=2, style=dotted];
m15_26 -> m15_24  [key=0, style=bold, color=blue];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_31  [key=2, style=dotted];
m15_30 -> m15_28  [key=0, style=bold, color=blue];
m15_38 -> m15_39  [key=0, style=solid];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_41  [key=2, style=dotted];
m15_40 -> m15_38  [key=0, style=bold, color=blue];
m15_46 -> m15_47  [key=0, style=solid];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_41  [key=2, style=dotted];
m15_48 -> m15_46  [key=0, style=bold, color=blue];
m15_53 -> m15_54  [key=0, style=solid];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_41  [key=2, style=dotted];
m15_55 -> m15_53  [key=0, style=bold, color=blue];
m15_61 -> m15_62  [key=0, style=solid];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_64  [key=2, style=dotted];
m15_63 -> m15_61  [key=0, style=bold, color=blue];
m15_68 -> m15_69  [key=0, style=solid];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_41  [key=2, style=dotted];
m15_70 -> m15_68  [key=0, style=bold, color=blue];
m15_74 -> m15_75  [key=0, style=solid];
m15_75 -> m15_76  [key=0, style=solid];
m15_75 -> m15_41  [key=2, style=dotted];
m15_76 -> m15_74  [key=0, style=bold, color=blue];
m15_83 -> m15_84  [key=0, style=solid];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_23  [key=2, style=dotted];
m15_85 -> m15_83  [key=0, style=bold, color=blue];
m15_92 -> m15_93  [key=0, style=solid];
m15_93 -> m15_94  [key=0, style=solid];
m15_93 -> m15_95  [key=2, style=dotted];
m15_94 -> m15_92  [key=0, style=bold, color=blue];
m15_102 -> m15_103  [key=0, style=solid];
m15_102 -> m15_27  [key=2, style=dotted];
m15_101 -> m15_102  [key=0, style=solid];
m15_103 -> m15_101  [key=0, style=bold, color=blue];
m15_110 -> m15_111  [key=0, style=solid];
m15_110 -> m15_112  [key=2, style=dotted];
m15_109 -> m15_110  [key=0, style=solid];
m15_111 -> m15_109  [key=0, style=bold, color=blue];
m15_118 -> m15_119  [key=0, style=solid];
m15_119 -> m15_120  [key=0, style=solid];
m15_119 -> m15_36  [key=2, style=dotted];
m15_119 -> m15_121  [key=2, style=dotted];
m15_120 -> m15_118  [key=0, style=bold, color=blue];
m15_134 -> m15_135  [key=0, style=solid];
m15_134 -> m15_27  [key=2, style=dotted];
m15_130 -> m15_131  [key=0, style=solid];
m15_133 -> m15_134  [key=0, style=solid];
m15_131 -> m15_132  [key=0, style=solid];
m15_131 -> m15_36  [key=2, style=dotted];
m15_131 -> m15_121  [key=2, style=dotted];
m15_132 -> m15_130  [key=0, style=bold, color=blue];
m15_135 -> m15_133  [key=0, style=bold, color=blue];
m15_142 -> m15_143  [key=0, style=solid];
m15_142 -> m15_144  [key=2, style=dotted];
m15_141 -> m15_142  [key=0, style=solid];
m15_143 -> m15_141  [key=0, style=bold, color=blue];
m15_151 -> m15_152  [key=0, style=solid];
m15_151 -> m15_153  [key=2, style=dotted];
m15_150 -> m15_151  [key=0, style=solid];
m15_152 -> m15_150  [key=0, style=bold, color=blue];
m15_159 -> m15_160  [key=0, style=solid];
m15_160 -> m15_161  [key=0, style=solid];
m15_160 -> m15_162  [key=2, style=dotted];
m15_161 -> m15_159  [key=0, style=bold, color=blue];
m15_168 -> m15_169  [key=0, style=solid];
m15_169 -> m15_170  [key=0, style=solid];
m15_169 -> m15_162  [key=2, style=dotted];
m15_170 -> m15_168  [key=0, style=bold, color=blue];
m15_179 -> m15_180  [key=0, style=solid];
m15_179 -> m15_162  [key=2, style=dotted];
m15_180 -> m15_178  [key=0, style=bold, color=blue];
m15_49 -> m15_50  [key=0, style=solid];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_36  [key=2, style=dotted];
m15_50 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> n29  [key=2, style=dotted];
m15_52 -> m15_49  [key=0, style=bold, color=blue];
m15_31 -> m15_181  [key=0, style=solid];
m15_181 -> m15_31  [key=0, style=bold, color=blue];
m15_32 -> m15_33  [key=0, style=solid];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_36  [key=2, style=dotted];
m15_33 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> n29  [key=2, style=dotted];
m15_35 -> m15_32  [key=0, style=bold, color=blue];
m15_42 -> m15_43  [key=0, style=solid];
m15_43 -> m15_44  [key=0, style=solid];
m15_43 -> m15_36  [key=2, style=dotted];
m15_43 -> m15_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> n29  [key=2, style=dotted];
m15_45 -> m15_42  [key=0, style=bold, color=blue];
m15_113 -> m15_114  [key=0, style=solid];
m15_114 -> m15_115  [key=0, style=solid];
m15_114 -> m15_81  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_27  [key=2, style=dotted];
m15_116 -> m15_117  [key=0, style=solid];
m15_116 -> m15_82  [key=2, style=dotted];
m15_116 -> m15_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_117 -> m15_113  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid, color=red];
m15_1 -> m15_2  [key=0, style=solid, color=red];
m15_1 -> m15_11  [key=2, style=dotted, color=red];
m15_2 -> m15_3  [key=0, style=solid, color=red];
m15_2 -> m15_12  [key=2, style=dotted, color=red];
m15_3 -> m15_4  [key=0, style=solid, color=red];
m15_3 -> m15_13  [key=2, style=dotted, color=red];
m15_3 -> m15_14  [key=2, style=dotted, color=red];
m15_3 -> m15_20  [key=1, style=dashed, color=red, label="lambda expression"];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_15  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_16  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_13  [key=2, style=dotted];
m15_6 -> m15_14  [key=2, style=dotted];
m15_6 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_17  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_18  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_19  [key=2, style=dotted];
m15_9 -> m15_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_10 -> m15_0  [key=0, style=bold, color=blue];
m15_184 -> m15_1  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_2  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_3  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_138  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_146  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_164  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_179  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_184 -> m15_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m15_185 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_186 -> m15_110  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_187 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_188 -> m15_142  [key=1, style=dashed, color=darkseagreen4, label=client];
m15_189 -> m15_151  [key=1, style=dashed, color=darkseagreen4, label=client];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_7  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid, color=red];
m16_2 -> m16_8  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid, color=red];
m16_3 -> m16_9  [key=2, style=dotted, color=red];
m16_3 -> m16_10  [key=2, style=dotted, color=red];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_11  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_12  [key=2, style=dotted];
m16_5 -> m16_13  [key=2, style=dotted];
m16_5 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_6 -> m16_0  [key=0, style=bold, color=blue];
m16_49 -> m16_50  [key=0, style=solid];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_12  [key=2, style=dotted];
m16_50 -> m16_13  [key=2, style=dotted];
m16_50 -> m16_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_39  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_40  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_41  [key=2, style=dotted];
m16_53 -> m16_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_54 -> m16_49  [key=0, style=bold, color=blue];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_39  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_40  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_41  [key=2, style=dotted];
m16_36 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_41  [key=2, style=dotted];
m16_37 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_38 -> m16_33  [key=0, style=bold, color=blue];
m16_39 -> m16_62  [key=0, style=solid];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_32  [key=2, style=dotted];
m16_63 -> m16_39  [key=0, style=bold, color=blue];
m16_18 -> m16_19  [key=0, style=solid];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> n28  [key=2, style=dotted];
m16_19 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_20 -> m16_18  [key=0, style=bold, color=blue];
m16_59 -> m16_60  [key=0, style=solid];
m16_14 -> m16_15  [key=0, style=solid];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_17  [key=2, style=dotted];
m16_16 -> m16_14  [key=0, style=bold, color=blue];
m16_22 -> m16_23  [key=0, style=solid];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_25  [key=2, style=dotted];
m16_24 -> m16_22  [key=0, style=bold, color=blue];
m16_29 -> m16_30  [key=0, style=solid];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_32  [key=2, style=dotted];
m16_31 -> m16_29  [key=0, style=bold, color=blue];
m16_42 -> m16_43  [key=0, style=solid];
m16_45 -> m16_46  [key=0, style=solid];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_17  [key=2, style=dotted];
m16_44 -> m16_42  [key=0, style=bold, color=blue];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_48  [key=2, style=dotted];
m16_47 -> m16_45  [key=0, style=bold, color=blue];
m16_55 -> m16_56  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> n28  [key=2, style=dotted];
m16_56 -> m16_58  [key=2, style=dotted];
m16_57 -> m16_55  [key=0, style=bold, color=blue];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_58  [key=2, style=dotted];
m16_61 -> m16_59  [key=0, style=bold, color=blue];
m16_26 -> m16_27  [key=0, style=solid];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> n28  [key=2, style=dotted];
m16_27 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_28 -> m16_26  [key=0, style=bold, color=blue];
m16_64 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_3  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m16_64 -> m16_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [key=0, style=bold, color=blue];
m18_9 -> m18_10  [key=0, style=solid, color=red];
m18_9 -> m18_15  [key=2, style=dotted, color=red];
m18_9 -> m18_16  [key=2, style=dotted, color=red];
m18_9 -> m18_28  [key=1, style=dashed, color=red, label="lambda expression"];
m18_85 -> m18_86  [key=0, style=solid];
m18_86 -> m18_87  [key=0, style=solid];
m18_86 -> m18_15  [key=2, style=dotted];
m18_86 -> m18_31  [key=2, style=dotted];
m18_86 -> m18_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_55  [key=2, style=dotted];
m18_88 -> m18_89  [key=0, style=solid];
m18_88 -> m18_56  [key=2, style=dotted];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_57  [key=2, style=dotted];
m18_89 -> m18_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_57  [key=2, style=dotted];
m18_90 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_91 -> m18_85  [key=0, style=bold, color=blue];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_21  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_55  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_56  [key=2, style=dotted];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_57  [key=2, style=dotted];
m18_52 -> m18_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_57  [key=2, style=dotted];
m18_53 -> m18_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_54 -> m18_49  [key=0, style=bold, color=blue];
m18_0 -> m18_6  [key=1, style=dashed, color=green, label="HangFire.States.IStateHandler"];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateHandler"];
m18_0 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateHandler"];
m18_0 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateHandler"];
m18_6 -> m18_7  [key=0, style=solid, color=green];
m18_6 -> n13  [key=2, style=dotted, color=green];
m18_6 -> m18_13  [key=2, style=dotted, color=green];
m18_6 -> m18_18  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid, color=red];
m18_5 -> m18_7  [key=0, style=solid];
m18_5 -> m18_11  [key=2, style=dotted];
m18_5 -> m18_17  [key=2, style=dotted, color=red];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_14  [key=2, style=dotted];
m18_7 -> m18_15  [key=2, style=dotted];
m18_7 -> m18_16  [key=2, style=dotted];
m18_7 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_1 -> m18_12  [key=2, style=dotted];
m18_3 -> m18_5  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid, color=red];
m18_3 -> m18_14  [key=2, style=dotted, color=red];
m18_2 -> m18_8  [key=0, style=solid];
m18_2 -> m18_9  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid, color=red];
m18_2 -> m18_13  [key=2, style=dotted];
m18_4 -> m18_8  [key=0, style=solid];
m18_4 -> m18_10  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid, color=red];
m18_4 -> m18_15  [key=2, style=dotted, color=red];
m18_4 -> m18_16  [key=2, style=dotted, color=red];
m18_4 -> m18_20  [key=1, style=dashed, color=red, label="lambda expression"];
m18_8 -> m18_0  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid, color=red];
m18_8 -> m18_19  [key=2, style=dotted];
m18_11 -> m18_0  [key=0, style=bold, color=blue];
m18_40 -> m18_41  [key=0, style=solid, color=red];
m18_41 -> m18_42  [key=0, style=solid, color=red];
m18_41 -> m18_31  [key=2, style=dotted, color=red];
m18_41 -> m18_45  [key=1, style=dashed, color=red, label="lambda expression"];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_44  [key=2, style=dotted];
m18_43 -> m18_40  [key=0, style=bold, color=blue];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_17 -> m18_19  [key=0, style=solid, color=green];
m18_17 -> m18_20  [key=2, style=dotted, color=green];
m18_16 -> m18_17  [key=0, style=solid, color=green];
m18_16 -> m18_18  [key=0, style=solid];
m18_16 -> m18_11  [key=2, style=dotted];
m18_19 -> m18_15  [key=0, style=bold, color=blue];
m18_103 -> m18_104  [key=0, style=solid];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_55  [key=2, style=dotted];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_56  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_57  [key=2, style=dotted];
m18_106 -> m18_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_107 -> m18_108  [key=0, style=solid];
m18_107 -> m18_57  [key=2, style=dotted];
m18_107 -> m18_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_108 -> m18_103  [key=0, style=bold, color=blue];
m18_55 -> m18_115  [key=0, style=solid];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_117  [key=2, style=dotted];
m18_116 -> m18_55  [key=0, style=bold, color=blue];
m18_21 -> m18_22  [key=0, style=solid, color=red];
m18_21 -> m18_23  [key=2, style=dotted, color=red];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_15  [key=2, style=dotted];
m18_10 -> m18_16  [key=2, style=dotted];
m18_10 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_112 -> m18_113  [key=0, style=solid];
m18_20 -> m18_21  [key=0, style=solid, color=red];
m18_24 -> m18_25  [key=0, style=solid];
m18_28 -> m18_29  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_22 -> m18_20  [key=0, style=bold, color=blue];
m18_22 -> m18_6  [key=1, style=dashed, color=green, label="HangFire.States.StateHandlerCollection"];
m18_22 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m18_22 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m18_22 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m18_22 -> m18_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_27  [key=2, style=dotted];
m18_26 -> m18_24  [key=0, style=bold, color=blue];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_31  [key=2, style=dotted];
m18_29 -> m18_32  [key=2, style=dotted];
m18_30 -> m18_28  [key=0, style=bold, color=blue];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_31  [key=2, style=dotted];
m18_34 -> m18_36  [key=2, style=dotted];
m18_34 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_35 -> m18_33  [key=0, style=bold, color=blue];
m18_37 -> m18_38  [key=0, style=solid];
m18_38 -> m18_39  [key=0, style=solid];
m18_39 -> m18_37  [key=0, style=bold, color=blue];
m18_45 -> m18_46  [key=0, style=solid, color=red];
m18_46 -> m18_47  [key=0, style=solid, color=red];
m18_46 -> m18_48  [key=2, style=dotted, color=red];
m18_47 -> m18_45  [key=0, style=bold, color=blue];
m18_58 -> m18_59  [key=0, style=solid];
m18_66 -> m18_67  [key=0, style=solid];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_31  [key=2, style=dotted];
m18_59 -> m18_61  [key=2, style=dotted];
m18_59 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_60 -> m18_58  [key=0, style=bold, color=blue];
m18_62 -> m18_63  [key=0, style=solid];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_65  [key=2, style=dotted];
m18_64 -> m18_62  [key=0, style=bold, color=blue];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_69  [key=2, style=dotted];
m18_68 -> m18_66  [key=0, style=bold, color=blue];
m18_76 -> m18_77  [key=0, style=solid];
m18_82 -> m18_83  [key=0, style=solid];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_31  [key=2, style=dotted];
m18_77 -> m18_36  [key=2, style=dotted];
m18_77 -> m18_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_78 -> m18_76  [key=0, style=bold, color=blue];
m18_79 -> m18_80  [key=0, style=solid];
m18_80 -> m18_81  [key=0, style=solid];
m18_81 -> m18_79  [key=0, style=bold, color=blue];
m18_83 -> m18_84  [key=0, style=solid];
m18_83 -> m18_31  [key=2, style=dotted];
m18_83 -> m18_61  [key=2, style=dotted];
m18_84 -> m18_82  [key=0, style=bold, color=blue];
m18_92 -> m18_93  [key=0, style=solid];
m18_95 -> m18_96  [key=0, style=solid];
m18_99 -> m18_100  [key=0, style=solid];
m18_93 -> m18_94  [key=0, style=solid];
m18_93 -> m18_31  [key=2, style=dotted];
m18_93 -> m18_61  [key=2, style=dotted];
m18_94 -> m18_92  [key=0, style=bold, color=blue];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_98  [key=2, style=dotted];
m18_97 -> m18_95  [key=0, style=bold, color=blue];
m18_100 -> m18_101  [key=0, style=solid];
m18_100 -> m18_102  [key=2, style=dotted];
m18_101 -> m18_99  [key=0, style=bold, color=blue];
m18_109 -> m18_110  [key=0, style=solid];
m18_110 -> m18_111  [key=0, style=solid];
m18_110 -> m18_31  [key=2, style=dotted];
m18_110 -> m18_32  [key=2, style=dotted];
m18_111 -> m18_109  [key=0, style=bold, color=blue];
m18_113 -> m18_114  [key=0, style=solid];
m18_113 -> m18_69  [key=2, style=dotted];
m18_114 -> m18_112  [key=0, style=bold, color=blue];
m18_70 -> m18_71  [key=0, style=solid];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_15  [key=2, style=dotted];
m18_71 -> m18_16  [key=2, style=dotted];
m18_71 -> m18_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_55  [key=2, style=dotted];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_56  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_74 -> m18_57  [key=2, style=dotted];
m18_74 -> m18_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_75 -> m18_70  [key=0, style=bold, color=blue];
m18_118 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_9  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m18_118 -> m18_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_0  [key=0, style=bold, color=blue];
m19_4 -> m19_5  [key=0, style=solid, color=green];
m19_4 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_5 -> m19_6  [key=0, style=solid, color=green];
m19_5 -> m19_13  [key=1, style=dashed, color=green, label=job];
m19_5 -> m19_16  [key=1, style=dashed, color=green, label=job];
m19_5 -> m19_17  [key=1, style=dashed, color=green, label=job];
m19_5 -> m19_18  [key=1, style=dashed, color=green, label=job];
m19_6 -> m19_18  [key=1, style=dashed, color=green, label=queueName];
m19_6 -> m19_7  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_16  [key=0, style=solid];
m19_16 -> m19_6  [key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_17 -> m19_18  [key=0, style=solid, color=green];
m19_17 -> m19_27  [key=2, style=dotted];
m19_18 -> m19_19  [key=0, style=solid, color=green];
m19_18 -> m19_28  [key=2, style=dotted, color=green];
m19_18 -> m19_29  [key=2, style=dotted, color=green];
m19_12 -> m19_18  [key=1, style=dashed, color=green, label=queueName];
m19_12 -> m19_13  [key=0, style=solid];
m19_11 -> m19_18  [key=1, style=dashed, color=green, label=job];
m19_11 -> m19_12  [key=0, style=solid, color=green];
m19_11 -> n28  [key=2, style=dotted, color=green];
m19_11 -> m19_21  [key=2, style=dotted, color=green];
m19_11 -> m19_13  [key=1, style=dashed, color=green, label=job];
m19_11 -> m19_16  [key=1, style=dashed, color=green, label=job];
m19_11 -> m19_17  [key=1, style=dashed, color=green, label=job];
m19_10 -> m19_11  [key=0, style=solid, color=green];
m19_10 -> m19_23  [key=2, style=dotted];
m19_9 -> m19_11  [key=1, style=dashed, color=green, label=parameters];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_22  [key=2, style=dotted];
m19_14 -> m19_16  [key=0, style=solid];
m19_14 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_25  [key=2, style=dotted];
m19_14 -> m19_26  [key=2, style=dotted];
m19_7 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m19_7 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m19_7 -> m19_21  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_20  [key=2, style=dotted];
m19_8 -> m19_13  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_15 -> m19_19  [key=0, style=solid];
m19_19 -> m19_4  [key=0, style=bold, color=blue];
m19_30 -> m19_11  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerFetcher"];
m19_30 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerFetcher"];
m19_30 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerFetcher"];
m19_30 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerFetcher"];
m20_0 -> m20_1  [key=0, style=solid, color=green];
m20_1 -> m20_2  [key=0, style=solid, color=green];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m21_13 -> m21_14  [key=0, style=solid, color=red];
m21_14 -> m21_15  [key=0, style=solid, color=red];
m21_14 -> m21_16  [key=2, style=dotted, color=red];
m21_14 -> m21_17  [key=2, style=dotted, color=red];
m21_15 -> m21_13  [key=0, style=bold, color=blue];
m21_8 -> m21_9  [key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=2, style=dotted];
m21_9 -> m21_12  [key=2, style=dotted];
m21_10 -> m21_8  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1 -> m21_2  [key=0, style=solid];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_0  [key=0, style=bold, color=blue];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [key=2, style=dotted];
m21_6 -> m21_4  [key=0, style=bold, color=blue];
m21_18 -> m21_19  [key=0, style=solid];
m21_18 -> m21_20  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_18 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_18 -> m21_22  [key=1, style=dashed, color=red, label=object];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_32  [key=2, style=dotted];
m21_19 -> m21_29  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_19 -> m21_30  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_30  [key=0, style=solid];
m21_21 -> m21_22  [key=0, style=solid, color=red];
m21_21 -> m21_30  [key=0, style=solid];
m21_21 -> m21_33  [key=2, style=dotted];
m21_21 -> m21_28  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m21_21 -> m21_29  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m21_22 -> m21_23  [key=0, style=solid, color=red];
m21_22 -> m21_34  [key=2, style=dotted, color=red];
m21_22 -> m21_24  [key=1, style=dashed, color=red, label=propertyValue];
m21_22 -> m21_25  [key=1, style=dashed, color=red, label=propertyValue];
m21_22 -> m21_26  [key=1, style=dashed, color=red, label=propertyValue];
m21_29 -> m21_21  [key=0, style=solid];
m21_29 -> m21_12  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid];
m21_28 -> m21_31  [key=0, style=solid];
m21_28 -> m21_38  [key=2, style=dotted];
m21_28 -> m21_39  [key=2, style=dotted];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_29  [key=1, style=dashed, color=darkseagreen4, label=value];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_29  [key=0, style=solid];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_35  [key=2, style=dotted];
m21_25 -> m21_36  [key=2, style=dotted];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_29  [key=0, style=solid];
m21_26 -> m21_37  [key=2, style=dotted];
m21_27 -> m21_28  [key=0, style=solid];
m21_31 -> m21_18  [key=0, style=bold, color=blue];
m21_40 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m21_40 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m21_40 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m21_40 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m21_40 -> m21_14  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m22_11 -> m22_0  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.Storage.IStorageConnection connection"];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid];
m22_14 -> m22_16  [key=2, style=dotted];
m22_13 -> m22_15  [key=0, style=solid];
m22_13 -> m22_8  [key=2, style=dotted];
m22_15 -> m22_11  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_11  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.States.IStateMachine Create"];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_10  [key=2, style=dotted];
m22_6 -> m22_9  [key=2, style=dotted];
m22_4 -> m22_7  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_9  [key=2, style=dotted];
m22_7 -> m22_2  [key=0, style=bold, color=blue];
m22_17 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachineFactory"];
m22_17 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachineFactory"];
m22_17 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachineFactory"];
m23_0 -> m23_1  [key=0, style=solid, color=green];
m23_0 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_1 -> m23_2  [key=0, style=solid, color=green];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m23_3 -> m23_0  [key=0, style=bold, color=blue];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_6  [key=2, style=dotted];
m23_39 -> m23_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_55 -> m23_56  [key=0, style=solid];
m23_55 -> m23_70  [key=2, style=dotted];
m23_55 -> m23_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_55 -> m23_53  [key=0, style=bold, color=blue];
m23_47 -> m23_48  [key=0, style=solid];
m23_47 -> m23_49  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m23_47 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m23_47 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_47 -> m23_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_47 -> m23_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_47 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m23_47 -> m23_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_47 -> m23_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_47 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m23_47 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_47 -> m23_6  [key=2, style=dotted];
m23_47 -> m23_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_48 -> m23_49  [key=0, style=solid];
m23_48 -> m23_42  [key=2, style=dotted];
m23_48 -> m23_64  [key=2, style=dotted];
m23_48 -> m23_52  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m23_48 -> m23_53  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m23_48 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m23_48 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m23_48 -> m23_45  [key=0, style=bold, color=blue];
m23_49 -> m23_50  [key=0, style=solid];
m23_49 -> m23_51  [key=0, style=solid];
m23_49 -> m23_65  [key=2, style=dotted];
m23_51 -> m23_52  [key=0, style=solid];
m23_51 -> m23_66  [key=2, style=dotted];
m23_51 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_51 -> m23_55  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_51 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_51 -> m23_58  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_51 -> m23_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_51 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_51 -> m23_62  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_51 -> m23_49  [key=0, style=bold, color=blue];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_69  [key=2, style=dotted];
m23_54 -> m23_56  [key=2, style=dotted];
m23_54 -> m23_57  [key=2, style=dotted];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_58  [key=0, style=solid];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_72  [key=2, style=dotted];
m23_58 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_58 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_58 -> m23_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_58 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_58 -> m23_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_59 -> m23_60  [key=0, style=solid];
m23_59 -> n113  [key=2, style=dotted];
m23_59 -> m23_6  [key=2, style=dotted];
m23_59 -> m23_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_60 -> m23_61  [key=0, style=solid];
m23_60 -> m23_62  [key=0, style=solid];
m23_60 -> m23_6  [key=2, style=dotted];
m23_60 -> m23_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_61 -> m23_60  [key=0, style=solid];
m23_61 -> m23_74  [key=2, style=dotted];
m23_61 -> m23_62  [key=0, style=solid];
m23_61 -> m23_6  [key=2, style=dotted];
m23_61 -> m23_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_58  [key=0, style=solid];
m23_52 -> m23_67  [key=2, style=dotted];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_55  [key=0, style=solid];
m23_53 -> m23_68  [key=2, style=dotted];
m23_57 -> m23_56  [key=0, style=solid];
m23_57 -> m23_71  [key=2, style=dotted];
m23_50 -> m23_63  [key=0, style=solid];
m23_50 -> m23_51  [key=0, style=solid];
m23_50 -> m23_52  [key=2, style=dotted];
m23_62 -> m23_63  [key=0, style=solid];
m23_62 -> m23_75  [key=2, style=dotted];
m23_62 -> m23_58  [key=0, style=bold, color=blue];
m23_63 -> m23_47  [key=0, style=bold, color=blue];
m23_63 -> m23_64  [key=0, style=solid];
m23_107 -> m23_108  [key=0, style=solid];
m23_103 -> m23_104  [key=0, style=solid];
m23_43 -> m23_41  [key=0, style=bold, color=blue];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_44  [key=2, style=dotted];
m23_106 -> m23_104  [key=0, style=bold, color=blue];
m23_124 -> m23_125  [key=0, style=solid];
m23_124 -> m23_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_125 -> m23_126  [key=0, style=solid];
m23_125 -> m23_6  [key=2, style=dotted];
m23_125 -> m23_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_126 -> m23_124  [key=0, style=bold, color=blue];
m23_79 -> m23_77  [key=0, style=bold, color=blue];
m23_71 -> m23_69  [key=0, style=bold, color=blue];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_42  [key=2, style=dotted];
m23_30 -> m23_43  [key=2, style=dotted];
m23_30 -> m23_44  [key=2, style=dotted];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_6  [key=2, style=dotted];
m23_4 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_5 -> m23_3  [key=0, style=bold, color=blue];
m23_5 -> m23_4  [key=0, style=bold, color=blue];
m23_10 -> m23_11  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_24 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_24 -> m23_30  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m23_24 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_24 -> m23_33  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m23_24 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m23_24 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_6  [key=2, style=dotted];
m23_25 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_26 -> m23_24  [key=0, style=bold, color=blue];
m23_26 -> m23_38  [key=0, style=solid];
m23_26 -> m23_39  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_11 -> m23_16  [key=2, style=dotted];
m23_11 -> m23_17  [key=2, style=dotted];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_6  [key=2, style=dotted];
m23_12 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_12 -> m23_18  [key=2, style=dotted];
m23_12 -> m23_17  [key=2, style=dotted];
m23_13 -> m23_11  [key=0, style=bold, color=blue];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_19  [key=2, style=dotted];
m23_13 -> m23_17  [key=2, style=dotted];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_6  [key=2, style=dotted];
m23_74 -> m23_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_45 -> m23_46  [key=0, style=solid];
m23_45 -> m23_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_45 -> m23_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_45 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_46 -> m23_47  [key=0, style=solid];
m23_46 -> m23_6  [key=2, style=dotted];
m23_46 -> m23_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_46 -> m23_80  [key=0, style=solid];
m23_46 -> m23_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_16 -> m23_14  [key=0, style=bold, color=blue];
m23_9 -> m23_7  [key=0, style=bold, color=blue];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_38 -> m23_24  [key=0, style=bold, color=blue];
m23_40 -> m23_38  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_6  [key=2, style=dotted];
m23_18 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_104 -> m23_105  [key=0, style=solid];
m23_104 -> m23_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_104 -> m23_42  [key=2, style=dotted];
m23_104 -> m23_106  [key=2, style=dotted];
m23_104 -> m23_107  [key=2, style=dotted];
m23_105 -> m23_106  [key=0, style=solid];
m23_105 -> m23_6  [key=2, style=dotted];
m23_105 -> m23_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_105 -> m23_103  [key=0, style=bold, color=blue];
m23_72 -> m23_73  [key=0, style=solid];
m23_72 -> m23_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_72 -> m23_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_72 -> m23_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_72 -> m23_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_72 -> m23_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_73 -> m23_74  [key=0, style=solid];
m23_73 -> m23_6  [key=2, style=dotted];
m23_73 -> m23_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_75 -> m23_76  [key=0, style=solid];
m23_75 -> m23_6  [key=2, style=dotted];
m23_75 -> m23_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_76 -> m23_72  [key=0, style=bold, color=blue];
m23_76 -> m23_77  [key=0, style=solid];
m23_17 -> m23_21  [key=0, style=solid];
m23_17 -> m23_18  [key=0, style=solid];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_23  [key=2, style=dotted];
m23_22 -> m23_17  [key=0, style=bold, color=blue];
m23_22 -> m23_20  [key=0, style=bold, color=blue];
m23_41 -> m23_42  [key=0, style=solid];
m23_69 -> m23_70  [key=0, style=solid];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_31 -> m23_36  [key=0, style=solid];
m23_31 -> m23_33  [key=1, style=dashed, color=darkseagreen4, label=filter];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_6  [key=2, style=dotted];
m23_32 -> m23_34  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m23_32 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m23_33 -> m23_31  [key=0, style=bold, color=blue];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_45  [key=2, style=dotted];
m23_33 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_111 -> m23_112  [key=0, style=solid];
m23_111 -> m23_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_111 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_111 -> m23_104  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_112 -> m23_113  [key=0, style=solid];
m23_112 -> m23_6  [key=2, style=dotted];
m23_112 -> m23_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_113 -> m23_111  [key=0, style=bold, color=blue];
m23_97 -> m23_98  [key=0, style=solid];
m23_97 -> m23_56  [key=2, style=dotted];
m23_97 -> m23_99  [key=2, style=dotted];
m23_97 -> m23_42  [key=2, style=dotted];
m23_97 -> m23_9  [key=2, style=dotted];
m23_77 -> m23_78  [key=0, style=solid];
m23_77 -> m23_42  [key=2, style=dotted];
m23_77 -> m23_79  [key=2, style=dotted];
m23_78 -> m23_76  [key=0, style=bold, color=blue];
m23_78 -> m23_79  [key=0, style=solid];
m23_78 -> m23_56  [key=2, style=dotted];
m23_78 -> m23_80  [key=2, style=dotted];
m23_101 -> m23_102  [key=0, style=solid];
m23_101 -> m23_42  [key=2, style=dotted];
m23_101 -> m23_99  [key=2, style=dotted];
m23_101 -> m23_56  [key=2, style=dotted];
m23_101 -> m23_103  [key=2, style=dotted];
m23_96 -> m23_97  [key=0, style=solid];
m23_100 -> m23_101  [key=0, style=solid];
m23_98 -> m23_96  [key=0, style=bold, color=blue];
m23_102 -> m23_100  [key=0, style=bold, color=blue];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_9  [key=2, style=dotted];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_20  [key=2, style=dotted];
m23_14 -> m23_17  [key=2, style=dotted];
m23_20 -> m23_21  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_29  [key=0, style=solid];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_31  [key=0, style=solid];
m23_66 -> m23_67  [key=0, style=solid];
m23_81 -> m23_82  [key=0, style=solid];
m23_81 -> m23_72  [key=2, style=dotted];
m23_84 -> m23_85  [key=0, style=solid];
m23_84 -> m23_87  [key=1, style=dashed, color=darkseagreen4, label=bool];
m23_84 -> m23_88  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m23_84 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_84 -> m23_89  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m23_84 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_84 -> m23_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_84 -> m23_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_84 -> m23_93  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m23_84 -> m23_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_92 -> m23_93  [key=0, style=solid];
m23_92 -> m23_95  [key=2, style=dotted];
m23_92 -> m23_23  [key=2, style=dotted];
m23_114 -> m23_115  [key=0, style=solid];
m23_120 -> m23_121  [key=0, style=solid];
m23_127 -> m23_128  [key=0, style=solid];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_10  [key=2, style=dotted];
m23_8 -> m23_6  [key=0, style=bold, color=blue];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> m23_10  [key=2, style=dotted];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_30  [key=2, style=dotted];
m23_28 -> m23_38  [key=0, style=solid];
m23_28 -> m23_39  [key=2, style=dotted];
m23_29 -> m23_27  [key=0, style=bold, color=blue];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_40  [key=2, style=dotted];
m23_29 -> m23_41  [key=2, style=dotted];
m23_29 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label=changingFilters];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_37  [key=2, style=dotted];
m23_35 -> m23_31  [key=0, style=solid];
m23_35 -> m23_46  [key=2, style=dotted];
m23_36 -> m23_34  [key=0, style=bold, color=blue];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_40  [key=2, style=dotted];
m23_36 -> m23_41  [key=2, style=dotted];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_56  [key=2, style=dotted];
m23_64 -> m23_44  [key=2, style=dotted];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_56  [key=2, style=dotted];
m23_67 -> m23_44  [key=2, style=dotted];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_56  [key=2, style=dotted];
m23_70 -> m23_44  [key=2, style=dotted];
m23_65 -> m23_63  [key=0, style=bold, color=blue];
m23_68 -> m23_66  [key=0, style=bold, color=blue];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_56  [key=2, style=dotted];
m23_82 -> m23_80  [key=2, style=dotted];
m23_82 -> m23_75  [key=2, style=dotted];
m23_85 -> m23_86  [key=0, style=solid];
m23_85 -> m23_56  [key=2, style=dotted];
m23_85 -> m23_80  [key=2, style=dotted];
m23_85 -> m23_6  [key=2, style=dotted];
m23_85 -> m23_89  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_85 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_85 -> m23_90  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_85 -> m23_91  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_85 -> m23_92  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_85 -> m23_93  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_85 -> m23_104  [key=1, style=dashed, color=darkseagreen4, label=properties];
m23_83 -> m23_81  [key=0, style=bold, color=blue];
m23_83 -> m23_46  [key=0, style=bold, color=blue];
m23_86 -> m23_84  [key=0, style=bold, color=blue];
m23_86 -> m23_87  [key=0, style=solid];
m23_86 -> m23_92  [key=1, style=dashed, color=darkseagreen4, label=now];
m23_93 -> m23_94  [key=0, style=solid];
m23_93 -> m23_56  [key=2, style=dotted];
m23_93 -> m23_95  [key=2, style=dotted];
m23_93 -> m23_70  [key=2, style=dotted];
m23_93 -> m23_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_94 -> m23_92  [key=0, style=bold, color=blue];
m23_94 -> m23_84  [key=0, style=bold, color=blue];
m23_108 -> m23_109  [key=0, style=solid];
m23_108 -> m23_56  [key=2, style=dotted];
m23_108 -> m23_110  [key=2, style=dotted];
m23_108 -> m23_57  [key=2, style=dotted];
m23_108 -> m23_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_108 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_109 -> m23_107  [key=0, style=bold, color=blue];
m23_109 -> m23_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_115 -> m23_116  [key=0, style=solid];
m23_115 -> m23_57  [key=2, style=dotted];
m23_116 -> m23_114  [key=0, style=bold, color=blue];
m23_121 -> m23_122  [key=0, style=solid];
m23_121 -> m23_123  [key=2, style=dotted];
m23_122 -> m23_120  [key=0, style=bold, color=blue];
m23_128 -> m23_129  [key=0, style=solid];
m23_128 -> m23_130  [key=2, style=dotted];
m23_129 -> m23_127  [key=0, style=bold, color=blue];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_47  [key=2, style=dotted];
m23_110 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_110 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_110 -> m23_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m23_80 -> m23_81  [key=0, style=solid];
m23_80 -> m23_66  [key=2, style=dotted];
m23_80 -> m23_82  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_19 -> m23_17  [key=0, style=bold, color=blue];
m23_87 -> m23_88  [key=0, style=solid];
m23_87 -> m23_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_87 -> m23_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_87 -> m23_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_87 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_87 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_88 -> m23_89  [key=0, style=solid];
m23_88 -> m23_6  [key=2, style=dotted];
m23_88 -> m23_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_88 -> m23_70  [key=2, style=dotted];
m23_88 -> m23_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_89 -> m23_90  [key=0, style=solid];
m23_89 -> m23_6  [key=2, style=dotted];
m23_89 -> m23_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_89 -> m23_70  [key=2, style=dotted];
m23_89 -> m23_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_90 -> m23_91  [key=0, style=solid];
m23_90 -> m23_6  [key=2, style=dotted];
m23_90 -> m23_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_90 -> m23_23  [key=2, style=dotted];
m23_91 -> m23_87  [key=0, style=bold, color=blue];
m23_91 -> m23_92  [key=0, style=solid];
m23_91 -> m23_23  [key=2, style=dotted];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_118 -> m23_119  [key=0, style=solid];
m23_118 -> m23_6  [key=2, style=dotted];
m23_118 -> m23_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_119 -> m23_117  [key=0, style=bold, color=blue];
m23_6 -> m23_7  [key=0, style=solid];
m23_131 -> m23_1  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_131 -> m23_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStoredValues"];
m23_132 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_133 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_134 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_135 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_136 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label=double];
m23_137 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_138 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_139 -> m23_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_140 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_141 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_142 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_143 -> m23_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_143 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_144 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_145 -> m23_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_145 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_145 -> m23_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_146 -> m23_64  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_146 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_146 -> m23_70  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_147 -> m23_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_147 -> m23_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_147 -> m23_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_148 -> m23_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_148 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_148 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_149 -> m23_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_150 -> m23_101  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m23_151 -> m23_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_152 -> m23_108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m23_153 -> m23_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_154 -> m23_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_155 -> m23_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_156 -> m23_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_157 -> m23_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_158 -> m23_128  [key=1, style=dashed, color=darkseagreen4, label=int];
m23_159 -> m23_128  [key=1, style=dashed, color=darkseagreen4, label=int];
m24_8 -> m24_9  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_11  [key=2, style=dotted];
m24_10 -> m24_8  [key=0, style=bold, color=blue];
m24_3 -> m24_4  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_6  [key=2, style=dotted];
m24_4 -> m24_7  [key=2, style=dotted];
m24_5 -> m24_3  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_2 -> m24_0  [key=0, style=bold, color=blue];
m24_12 -> m24_13  [key=0, style=solid];
m24_13 -> m24_14  [key=0, style=solid];
m24_13 -> m24_15  [key=2, style=dotted];
m24_14 -> m24_12  [key=0, style=bold, color=blue];
m24_16 -> m24_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m24_16 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_28  [key=2, style=dotted];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_29  [key=2, style=dotted];
m25_27 -> m25_24  [key=0, style=bold, color=blue];
m25_3 -> m25_4  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_8  [key=2, style=dotted];
m25_4 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_7  [key=0, style=solid];
m25_6 -> m25_5  [key=0, style=solid];
m25_6 -> m25_9  [key=2, style=dotted];
m25_6 -> m25_10  [key=2, style=dotted];
m25_7 -> m25_3  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_11 -> m25_12  [key=0, style=solid];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_20  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_16  [key=0, style=solid];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_21  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_19  [key=0, style=solid];
m25_16 -> m25_20  [key=2, style=dotted];
m25_15 -> m25_13  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_22  [key=2, style=dotted];
m25_17 -> m25_18  [key=0, style=solid];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_23  [key=2, style=dotted];
m25_19 -> m25_11  [key=0, style=bold, color=blue];
m25_30 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Components.ExpirationManager"];
m25_30 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Components.ExpirationManager"];
m25_30 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Components.ExpirationManager"];
m25_30 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Components.ExpirationManager"];
m25_30 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Components.ExpirationManager"];
}
