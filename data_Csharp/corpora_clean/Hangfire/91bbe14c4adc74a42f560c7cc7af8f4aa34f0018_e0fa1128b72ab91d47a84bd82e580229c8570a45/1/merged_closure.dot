digraph  {
n202 [label="HangFire.Core.Tests.States.ApplyStateContextFacts", span=""];
n203 [label=context, span=""];
n204 [label=context, span=""];
n205 [label=context, span=""];
n206 [label=context, span=""];
n207 [label=context, span=""];
n208 [label=context, span=""];
n0 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22"];
n1 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_job = Job.FromExpression(() => Console.WriteLine())", span="24-24"];
n2 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_newStateMock = new Mock<State>()", span="25-25"];
n8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
n15 [cluster="lambda expression", label="Entry lambda expression", span="24-24"];
n3 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_newStateMock.Setup(x => x.Name).Returns(NewState)", span="26-26"];
n9 [cluster="Mock<State>.cstr", label="Entry Mock<State>.cstr", span=""];
n4 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28"];
n10 [cluster="Unk.Setup", label="Entry Unk.Setup", span=""];
n11 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
n19 [cluster="lambda expression", label="Entry lambda expression", span="26-26"];
n5 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_filters = new List<IApplyStateFilter>()", span="30-30"];
n12 [cluster="Mock<IWriteOnlyTransaction>.cstr", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
n6 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="_handlers = new StateHandlerCollection()", span="31-31"];
n13 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n7 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22"];
n14 [cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
n16 [cluster="lambda expression", label="Console.WriteLine()", span="24-24"];
n17 [cluster="lambda expression", label="Exit lambda expression", span="24-24"];
n18 [cluster="System.Console.WriteLine()", label="Entry System.Console.WriteLine()", span="0-0"];
n20 [cluster="lambda expression", label="x.Name", span="26-26"];
n21 [cluster="lambda expression", label="Exit lambda expression", span="26-26"];
n22 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35"];
n23 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="var context = CreateContext()", span="37-37"];
n24 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(null, _filters))", span="39-40"];
n27 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208"];
n31 [cluster="lambda expression", label="context.ApplyState(null, _filters)", span="40-40"];
n25 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="Assert.Equal(''handlers'', exception.ParamName)", span="42-42"];
n28 [cluster="Unk.>", label="Entry Unk.>", span=""];
n30 [cluster="lambda expression", label="Entry lambda expression", span="40-40"];
n26 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenHandlersIsNull()", span="35-35"];
n29 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n32 [cluster="lambda expression", label="Exit lambda expression", span="40-40"];
n33 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="45-45"];
n34 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46"];
n35 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="var context = CreateContext()", span="48-48"];
n36 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.ApplyState(_handlers, null))", span="50-51"];
n40 [cluster="lambda expression", label="context.ApplyState(_handlers, null)", span="51-51"];
n37 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="Assert.Equal(''filters'', exception.ParamName)", span="53-53"];
n39 [cluster="lambda expression", label="Entry lambda expression", span="51-51"];
n38 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldThrowAnException_WhenFiltersIsNull()", span="46-46"];
n41 [cluster="lambda expression", label="Exit lambda expression", span="51-51"];
n42 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57"];
n43 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="_transaction.Setup(x => x.SetJobState(\r\n                JobId, _newStateMock.Object)).InSequence()", span="60-61"];
n44 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="_transaction.Setup(x => x.Commit()).InSequence()", span="63-63"];
n48 [cluster="Unk.InSequence", label="Entry Unk.InSequence", span=""];
n49 [cluster="lambda expression", label="Entry lambda expression", span="60-61"];
n45 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="var context = CreateContext()", span="65-65"];
n53 [cluster="lambda expression", label="Entry lambda expression", span="63-63"];
n46 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="context.ApplyState(_handlers, _filters)", span="68-68"];
n47 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57"];
n50 [cluster="lambda expression", label="x.SetJobState(\r\n                JobId, _newStateMock.Object)", span="60-61"];
n51 [cluster="lambda expression", label="Exit lambda expression", span="60-61"];
n52 [cluster="Unk.SetJobState", label="Entry Unk.SetJobState", span=""];
n54 [cluster="lambda expression", label="x.Commit()", span="63-63"];
n55 [cluster="lambda expression", label="Exit lambda expression", span="63-63"];
n56 [cluster="Unk.Commit", label="Entry Unk.Commit", span=""];
n57 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74"];
n58 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="var context = CreateContext()", span="77-77"];
n65 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler1.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="88-88"];
n79 [cluster="lambda expression", label="x.Unapply(context, _transaction.Object)", span="88-88"];
n66 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler2.Setup(x => x.Unapply(context, _transaction.Object)).InSequence()", span="89-89"];
n83 [cluster="lambda expression", label="x.Unapply(context, _transaction.Object)", span="89-89"];
n68 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="context.ApplyState(_handlers, _filters)", span="94-94"];
n60 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler1.Setup(x => x.StateName).Returns(OldState)", span="80-80"];
n70 [cluster="Mock<StateHandler>.cstr", label="Entry Mock<StateHandler>.cstr", span=""];
n63 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="_handlers.AddHandler(handler1.Object)", span="85-85"];
n72 [cluster="lambda expression", label="Entry lambda expression", span="80-80"];
n62 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="handler2.Setup(x => x.StateName).Returns(OldState)", span="83-83"];
n64 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="_handlers.AddHandler(handler2.Object)", span="86-86"];
n75 [cluster="lambda expression", label="Entry lambda expression", span="83-83"];
n71 [cluster="Unk.AddHandler", label="Entry Unk.AddHandler", span=""];
n78 [cluster="lambda expression", label="Entry lambda expression", span="88-88"];
n67 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="90-91"];
n82 [cluster="lambda expression", label="Entry lambda expression", span="89-89"];
n85 [cluster="lambda expression", label="Entry lambda expression", span="90-90"];
n69 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74"];
n73 [cluster="lambda expression", label="x.StateName", span="80-80"];
n74 [cluster="lambda expression", label="Exit lambda expression", span="80-80"];
n76 [cluster="lambda expression", label="x.StateName", span="83-83"];
n77 [cluster="lambda expression", label="Exit lambda expression", span="83-83"];
n80 [cluster="lambda expression", label="Exit lambda expression", span="88-88"];
n81 [cluster="Unk.Unapply", label="Entry Unk.Unapply", span=""];
n84 [cluster="lambda expression", label="Exit lambda expression", span="89-89"];
n86 [cluster="lambda expression", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="90-90"];
n87 [cluster="lambda expression", label="Exit lambda expression", span="90-90"];
n88 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
n89 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="var context = CreateContext()", span="103-103"];
n97 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler1.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="118-118"];
n111 [cluster="lambda expression", label="x.Apply(context, _transaction.Object)", span="118-118"];
n98 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler2.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="119-119"];
n115 [cluster="lambda expression", label="x.Apply(context, _transaction.Object)", span="119-119"];
n99 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="context.ApplyState(_handlers, _filters)", span="122-122"];
n91 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler1.Setup(x => x.StateName).Returns(NewState)", span="106-106"];
n94 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="_handlers.AddHandler(handler1.Object)", span="111-111"];
n101 [cluster="lambda expression", label="Entry lambda expression", span="106-106"];
n93 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="handler2.Setup(x => x.StateName).Returns(NewState)", span="109-109"];
n95 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="_handlers.AddHandler(handler2.Object)", span="112-112"];
n104 [cluster="lambda expression", label="Entry lambda expression", span="109-109"];
n96 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="114-116"];
n107 [cluster="lambda expression", label="Entry lambda expression", span="115-115"];
n110 [cluster="lambda expression", label="Entry lambda expression", span="118-118"];
n114 [cluster="lambda expression", label="Entry lambda expression", span="119-119"];
n100 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
n102 [cluster="lambda expression", label="x.StateName", span="106-106"];
n103 [cluster="lambda expression", label="Exit lambda expression", span="106-106"];
n105 [cluster="lambda expression", label="x.StateName", span="109-109"];
n106 [cluster="lambda expression", label="Exit lambda expression", span="109-109"];
n108 [cluster="lambda expression", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="115-115"];
n109 [cluster="lambda expression", label="Exit lambda expression", span="115-115"];
n112 [cluster="lambda expression", label="Exit lambda expression", span="118-118"];
n113 [cluster="Unk.Apply", label="Entry Unk.Apply", span=""];
n116 [cluster="lambda expression", label="Exit lambda expression", span="119-119"];
n117 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
n118 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="var context = CreateContext()", span="130-130"];
n119 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(true)", span="131-131"];
n120 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="context.ApplyState(_handlers, _filters)", span="133-133"];
n124 [cluster="lambda expression", label="Entry lambda expression", span="131-131"];
n121 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="135-135"];
n122 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
n123 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
n127 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
n125 [cluster="lambda expression", label="x.ExpireJobOnApply", span="131-131"];
n126 [cluster="lambda expression", label="Exit lambda expression", span="131-131"];
n128 [cluster="lambda expression", label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="135-135"];
n129 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
n130 [cluster="Unk.ExpireJob", label="Entry Unk.ExpireJob", span=""];
n131 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
n132 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="var context = CreateContext()", span="141-141"];
n133 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(false)", span="142-142"];
n134 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="context.ApplyState(_handlers, _filters)", span="144-144"];
n137 [cluster="lambda expression", label="Entry lambda expression", span="142-142"];
n135 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="_transaction.Verify(x => x.PersistJob(JobId))", span="146-146"];
n136 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
n140 [cluster="lambda expression", label="Entry lambda expression", span="146-146"];
n138 [cluster="lambda expression", label="x.ExpireJobOnApply", span="142-142"];
n139 [cluster="lambda expression", label="Exit lambda expression", span="142-142"];
n141 [cluster="lambda expression", label="x.PersistJob(JobId)", span="146-146"];
n142 [cluster="lambda expression", label="Exit lambda expression", span="146-146"];
n143 [cluster="Unk.PersistJob", label="Entry Unk.PersistJob", span=""];
n144 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
n145 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="var context = CreateContext()", span="153-153"];
n146 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="var filter1 = new Mock<IApplyStateFilter>()", span="155-155"];
n150 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="filter1.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="161-162"];
n158 [cluster="lambda expression", label="x.OnStateUnapplied(context, _transaction.Object)", span="161-161"];
n151 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="filter2.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="163-164"];
n162 [cluster="lambda expression", label="x.OnStateUnapplied(context, _transaction.Object)", span="163-163"];
n153 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="context.ApplyState(_handlers, _filters)", span="170-170"];
n147 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="var filter2 = new Mock<IApplyStateFilter>()", span="156-156"];
n155 [cluster="Mock<IApplyStateFilter>.cstr", label="Entry Mock<IApplyStateFilter>.cstr", span=""];
n148 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="_filters.Add(filter1.Object)", span="158-158"];
n149 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="_filters.Add(filter2.Object)", span="159-159"];
n156 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n157 [cluster="lambda expression", label="Entry lambda expression", span="161-161"];
n152 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="165-167"];
n161 [cluster="lambda expression", label="Entry lambda expression", span="163-163"];
n164 [cluster="lambda expression", label="Entry lambda expression", span="166-166"];
n154 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
n159 [cluster="lambda expression", label="Exit lambda expression", span="161-161"];
n160 [cluster="Unk.OnStateUnapplied", label="Entry Unk.OnStateUnapplied", span=""];
n163 [cluster="lambda expression", label="Exit lambda expression", span="163-163"];
n165 [cluster="lambda expression", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="166-166"];
n166 [cluster="lambda expression", label="Exit lambda expression", span="166-166"];
n167 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
n168 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="var context = CreateContext()", span="179-179"];
n169 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="var filter1 = new Mock<IApplyStateFilter>()", span="181-181"];
n173 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="filter1.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="187-188"];
n178 [cluster="lambda expression", label="x.OnStateApplied(context, _transaction.Object)", span="187-187"];
n174 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="filter2.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="189-190"];
n182 [cluster="lambda expression", label="x.OnStateApplied(context, _transaction.Object)", span="189-189"];
n175 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="context.ApplyState(_handlers, _filters)", span="193-193"];
n170 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="var filter2 = new Mock<IApplyStateFilter>()", span="182-182"];
n171 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="_filters.Add(filter1.Object)", span="184-184"];
n172 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="_filters.Add(filter2.Object)", span="185-185"];
n177 [cluster="lambda expression", label="Entry lambda expression", span="187-187"];
n181 [cluster="lambda expression", label="Entry lambda expression", span="189-189"];
n176 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
n179 [cluster="lambda expression", label="Exit lambda expression", span="187-187"];
n180 [cluster="Unk.OnStateApplied", label="Entry Unk.OnStateApplied", span=""];
n183 [cluster="lambda expression", label="Exit lambda expression", span="189-189"];
n184 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
n185 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="var context = CreateContext()", span="201-201"];
n186 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Assert.Equal(OldState, context.OldStateName)", span="203-203"];
n187 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Assert.Same(_newStateMock.Object, context.NewState)", span="204-204"];
n188 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Assert.Same(_job, context.Job)", span="205-205"];
n190 [cluster="Unk.Same", label="Entry Unk.Same", span=""];
n189 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
n191 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="var connectionMock = new Mock<IStorageConnection>()", span="210-210"];
n192 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="connectionMock.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="211-211"];
n195 [cluster="Mock<IStorageConnection>.cstr", label="Entry Mock<IStorageConnection>.cstr", span=""];
n193 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="return new ApplyStateContext(\r\n                connectionMock.Object,\r\n                new StateContext(JobId, _job),\r\n                _newStateMock.Object,\r\n                OldState);", span="213-217"];
n198 [cluster="lambda expression", label="Entry lambda expression", span="211-211"];
n194 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208"];
n196 [cluster="ApplyStateContext.cstr", label="Entry ApplyStateContext.cstr", span=""];
n197 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
n199 [cluster="lambda expression", label="x.CreateWriteTransaction()", span="211-211"];
n200 [cluster="lambda expression", label="Exit lambda expression", span="211-211"];
n201 [cluster="Unk.CreateWriteTransaction", label="Entry Unk.CreateWriteTransaction", span=""];
m1_21 [cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77"];
m1_17 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35"];
m1_18 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="var handler = new EnqueuedState.Handler()", span="37-37"];
m1_19 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Assert.Equal(EnqueuedState.StateName, handler.StateName)", span="38-38"];
m1_20 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35"];
m1_40 [cluster="Unk.>", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.>", span=""];
m1_12 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m1_39 [cluster="Mock<State>.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry Mock<State>.cstr", span=""];
m1_8 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m1_28 [cluster="Unk.Apply", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.Apply", span=""];
m1_34 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52"];
m1_35 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="var handler = new EnqueuedState.Handler()", span="54-54"];
m1_36 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<State>().Object, null)", span="55-56"];
m1_37 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="58-59"];
m1_38 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52"];
m1_7 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m1_11 [cluster="ApplyStateContext.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry ApplyStateContext.cstr", span=""];
m1_22 [cluster="Unk.Equal", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.Equal", span=""];
m1_33 [cluster="Unk.AddToQueue", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.AddToQueue", span=""];
m1_0 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19"];
m1_1 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="var job = Job.FromExpression(() => Console.WriteLine())", span="21-21"];
m1_2 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23"];
m1_4 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_stateContext = new StateContext(JobId, job)", span="25-25"];
m1_3 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="24-24"];
m1_5 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new EnqueuedState { Queue = Queue }, \r\n                null)", span="27-31"];
m1_6 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19"];
m1_23 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42"];
m1_24 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="var handler = new EnqueuedState.Handler()", span="44-44"];
m1_25 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="handler.Apply(_context, _transaction.Object)", span="46-46"];
m1_26 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="_transaction.Verify(x => x.AddToQueue(Queue, JobId))", span="48-48"];
m1_27 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42"];
m1_9 [cluster="Mock<IStorageConnection>.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m1_16 [cluster="System.Console.WriteLine()", file="EnqueuedStateHandlerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m1_41 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="59-59"];
m1_13 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="21-21"];
m1_14 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Console.WriteLine()", span="21-21"];
m1_15 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="21-21"];
m1_30 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="48-48"];
m1_31 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="x.AddToQueue(Queue, JobId)", span="48-48"];
m1_32 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="48-48"];
m1_42 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="handler.Apply(context, _transaction.Object)", span="59-59"];
m1_43 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="59-59"];
m1_29 [cluster="Unk.Verify", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.Verify", span=""];
m1_44 [file="EnqueuedStateHandlerFacts.cs", label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", span=""];
m1_45 [file="EnqueuedStateHandlerFacts.cs", label=handler, span=""];
m1_46 [file="EnqueuedStateHandlerFacts.cs", label=context, span=""];
m2_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m2_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m2_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m2_5 [cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34"];
m2_6 [cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="transaction.RemoveFromSet(''failed'', context.JobId)", span="37-37"];
m2_7 [cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34"];
m2_0 [cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
m2_1 [cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="28-31"];
m2_2 [cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
m3_0 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m3_1 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="GlobalStateHandlers.cs", label="return null;", span="24-24"];
m3_2 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="GlobalStateHandlers.cs", label="Exit HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m6_4 [cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetComponents()", span="57-57"];
m6_5 [cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs", label="return Enumerable.Empty<IServerComponent>();", span="59-59"];
m6_6 [cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetComponents()", span="57-57"];
m6_0 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="53-53"];
m6_1 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetMonitoringApi()", span="53-53"];
m6_8 [cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m6_9 [cluster="HangFire.JobStorage.GetStateHandlers()", color=green, community=0, file="JobStorage.cs", label="return Enumerable.Empty<IStateHandler>();", prediction=0, span="64-64"];
m6_10 [cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m6_7 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobStorage.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m6_2 [cluster="HangFire.JobStorage.GetConnection()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m6_3 [cluster="HangFire.JobStorage.GetConnection()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetConnection()", span="55-55"];
m7_0 [cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6"];
m7_1 [cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", color=green, community=0, file="PossibleHangingFactAttribute.cs", label="Timeout = Debugger.IsAttached ? Int32.MaxValue : 30 * 1000", prediction=1, span="10-10"];
m7_2 [cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6"];
m8_17 [cluster="Unk.Dispose", file="ProcessingStateHandler.cs", label="Entry Unk.Dispose", span=""];
m8_0 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m8_1 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="_transaction = transaction", span="11-11"];
m8_2 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="var storage = new RedisStoredValues(_transaction)", span="13-13"];
m8_3 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Values = storage", span="15-15"];
m8_4 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Sets = storage", span="16-16"];
m8_5 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Lists = storage", span="17-17"];
m8_6 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Queues = storage", span="18-18"];
m8_7 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Jobs = storage", span="19-19"];
m8_8 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m8_14 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33"];
m8_16 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33"];
m8_10 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28"];
m8_11 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ProcessingStateHandler.cs", label="return _transaction.Commit();", span="30-30"];
m8_12 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28"];
m8_9 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15"];
m8_18 [file="ProcessingStateHandler.cs", label="HangFire.Redis.RedisAtomicWriteTransaction", span=""];
m9_71 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="RedisStorage.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m9_141 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m9_50 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110"];
m9_55 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="121-122"];
m9_51 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="114-114"];
m9_52 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label=jobs, span="116-116"];
m9_54 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="var dto = selector(DeserializeJobMethod(job.InvocationData), stateData)", span="119-119"];
m9_56 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="return new JobList<TDto>(result);", span="125-125"];
m9_53 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="118-118"];
m9_57 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="110-110"];
m9_62 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="RedisStorage.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m9_43 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RedisStorage.cs", label="HangFire.Redis.RedisStorage", span=""];
m9_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351"];
m9_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="var multi = _connection.QueryMultiple(sql)", span="362-362"];
m9_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="string sql = @''\r\nselect [State], count(id) as [Count] From HangFire.Job group by [State]\r\nselect count(Id) from HangFire.Server\r\nselect count(distinct Queue) from HangFire.JobQueue\r\nselect IntValue from HangFire.Value where [Key] = 'stats:succeeded'\r\n''", span="355-360"];
m9_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="364-364"];
m9_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="stats.Servers = multi.Read<int>().Single()", span="373-373"];
m9_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="stats.Queues = multi.Read<int>().Single()", span="374-374"];
m9_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="stats.Succeeded = multi.Read<int>().SingleOrDefault()", span="376-376"];
m9_178 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="var stats = new StatisticsDto()", span="353-353"];
m9_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366"];
m9_186 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.Name)", span="371-371"];
m9_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="return stats;", span="379-379"];
m9_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.Name)", span="368-368"];
m9_184 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="stats.Failed = getCountIfExists(FailedState.Name)", span="369-369"];
m9_185 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="stats.Processing = getCountIfExists(ProcessingState.Name)", span="370-370"];
m9_191 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="351-351"];
m9_42 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_83 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159"];
m9_84 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="RedisStorage.cs", label="return GetTimelineStats(''failed'');", span="161-161"];
m9_85 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="159-159"];
m9_103 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RedisStorage.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m9_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="HostAndPort = hostAndPort", span="48-48"];
m9_146 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382"];
m9_213 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="393-396"];
m9_212 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="392-392"];
m9_214 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label=keys, span="398-398"];
m9_215 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="!valuesMap.ContainsKey(key)", span="400-400"];
m9_216 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="valuesMap.Add(key, 0)", span="400-400"];
m9_220 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="406-406"];
m9_209 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="dates.Add(endDate)", span="388-388"];
m9_205 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var endDate = DateTime.UtcNow", span="384-384"];
m9_206 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var dates = new List<DateTime>()", span="385-385"];
m9_208 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="i < 24", span="386-386"];
m9_217 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var result = new Dictionary<DateTime, long>()", span="403-403"];
m9_219 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="i < dates.Count", span="404-404"];
m9_218 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var i = 0", span="404-404"];
m9_221 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="result.Add(dates[i], value)", span="407-407"];
m9_210 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="endDate = endDate.AddHours(-1)", span="389-389"];
m9_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="return result;", span="410-410"];
m9_207 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="var i = 0", span="386-386"];
m9_211 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="i++", span="386-386"];
m9_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="i++", span="404-404"];
m9_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="382-382"];
m9_140 [cluster="Unk.ToString", file="RedisStorage.cs", label="Entry Unk.ToString", span=""];
m9_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m9_150 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m9_152 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="322-322"];
m9_158 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="return new JobDetailsDto\r\n                {\r\n                    Arguments = JobHelper.FromJson<string[]>(job.Arguments),\r\n                    CreatedAt = job.CreatedAt,\r\n                    State = job.State,\r\n                    Method = DeserializeJobMethod(job.InvocationData),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", span="334-342"];
m9_151 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.JobHistory where JobId = @id order by CreatedAt desc''", span="317-320"];
m9_153 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="var job = multi.Read<Job>().SingleOrDefault()", span="324-324"];
m9_156 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="327-327"];
m9_157 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="var history =\r\n                    multi.Read<JobHistory>()\r\n                        .ToList()\r\n                        .Select(x => JobHelper.FromJson<Dictionary<string, string>>(x.Data))\r\n                        .ToList()", span="328-332"];
m9_154 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="job == null", span="325-325"];
m9_155 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="return null;", span="325-325"];
m9_159 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="315-315"];
m9_49 [cluster="Unk.DeserializeJobs", file="RedisStorage.cs", label="Entry Unk.DeserializeJobs", span=""];
m9_6 [cluster="TransactionOptions.cstr", file="RedisStorage.cs", label="Entry TransactionOptions.cstr", span=""];
m9_8 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="30-30"];
m9_9 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs", label="_transaction.Complete()", span="32-32"];
m9_10 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs", label="_transaction.Dispose()", span="33-33"];
m9_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="RedisStorage.cs", label="_connection.Dispose()", span="34-34"];
m9_32 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new FailedStateHandler();", span="88-88"];
m9_33 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new ProcessingStateHandler();", span="89-89"];
m9_34 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new SucceededStateHandler();", span="90-90"];
m9_143 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m9_144 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="RedisStorage.cs", label="return GetHourlyTimelineStats(''succeeded'');", span="307-307"];
m9_145 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="305-305"];
m9_193 [cluster="Unk.Read", file="RedisStorage.cs", label="Entry Unk.Read", span=""];
m9_104 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m9_105 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="RedisStorage.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.Name,\r\n                (method, stateData) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="206-214"];
m9_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="204-204"];
m9_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188"];
m9_97 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="RedisStorage.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.Name,\r\n                (method, stateData) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="190-201"];
m9_98 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="188-188"];
m9_204 [cluster="Unk.ContainsKey", file="RedisStorage.cs", label="Entry Unk.ContainsKey", span=""];
m9_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154"];
m9_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="RedisStorage.cs", label="return GetTimelineStats(''succeeded'');", span="156-156"];
m9_81 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="154-154"];
m9_59 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RedisStorage.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m9_138 [cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="RedisStorage.cs", label="Entry List<KeyValuePair<string, DequeuedJobDto>>.cstr", span=""];
m9_60 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128"];
m9_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="130-130"];
m9_67 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs", label="return JobMethod.Deserialize(data);", span="134-134"];
m9_69 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs", label="return null;", span="138-138"];
m9_68 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs", label=JobLoadException, span="136-136"];
m9_70 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobMethod(string)", span="128-128"];
m9_192 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m9_194 [cluster="System.Func<T, TResult>.Invoke(T)", file="RedisStorage.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="RedisStorage.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="23-25"];
m9_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="RedisStorage.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="27-27"];
m9_63 [cluster="int.ToString()", file="RedisStorage.cs", label="Entry int.ToString()", span="0-0"];
m9_27 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="78-78"];
m9_28 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RedisStorage.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m9_29 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="RedisStorage.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m9_95 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5"];
m9_142 [cluster="Unk.DeserializeJobMethod", file="RedisStorage.cs", label="Entry Unk.DeserializeJobMethod", span=""];
m9_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m9_261 [cluster="System.DateTime.AddDays(double)", file="RedisStorage.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m9_14 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="68-68"];
m9_164 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m9_39 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="83-88"];
m9_40 [cluster="lambda expression", color=green, community=0, file="RedisStorage.cs", label="new ProcessingJobDto\r\n                {\r\n                    Method = method,\r\n                    ServerName = stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", prediction=2, span="83-88"];
m9_41 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="83-88"];
m9_24 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="var stateMachineFactory = new StateMachineFactory(this)", span="80-80"];
m9_25 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new SchedulePoller(this, stateMachineFactory, Options.PollInterval);", span="82-82"];
m9_26 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new FetchedJobsWatcher(this, stateMachineFactory);", span="83-83"];
m9_201 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="366-366"];
m9_76 [cluster="lambda expression", file="RedisStorage.cs", label="new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="147-151"];
m9_75 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="147-151"];
m9_99 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="194-201"];
m9_107 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="210-214"];
m9_126 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="266-270"];
m9_235 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="396-396"];
m9_238 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="396-396"];
m9_269 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="431-431"];
m9_272 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="431-431"];
m9_77 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="147-151"];
m9_172 [cluster="lambda expression", file="RedisStorage.cs", label="JobHelper.FromJson<Dictionary<string, string>>(x.Data)", span="331-331"];
m9_266 [cluster="lambda expression", file="RedisStorage.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="426-426"];
m9_101 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="194-201"];
m9_100 [cluster="lambda expression", file="RedisStorage.cs", label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="194-201"];
m9_109 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="210-214"];
m9_108 [cluster="lambda expression", file="RedisStorage.cs", label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="210-214"];
m9_128 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="266-270"];
m9_127 [cluster="lambda expression", file="RedisStorage.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                }", span="266-270"];
m9_231 [cluster="lambda expression", file="RedisStorage.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="392-392"];
m9_165 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="327-327"];
m9_168 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="327-327"];
m9_171 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="331-331"];
m9_195 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="364-364"];
m9_198 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="364-364"];
m9_202 [cluster="lambda expression", file="RedisStorage.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="366-366"];
m9_230 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="392-392"];
m9_237 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="396-396"];
m9_236 [cluster="lambda expression", file="RedisStorage.cs", label="(string)x.Key", span="396-396"];
m9_240 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="396-396"];
m9_239 [cluster="lambda expression", file="RedisStorage.cs", label="(long)x.IntValue", span="396-396"];
m9_265 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="426-426"];
m9_271 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="431-431"];
m9_270 [cluster="lambda expression", file="RedisStorage.cs", label="(string)x.Key", span="431-431"];
m9_274 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="431-431"];
m9_273 [cluster="lambda expression", file="RedisStorage.cs", label="(long)x.IntValue", span="431-431"];
m9_173 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="331-331"];
m9_262 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="425-425"];
m9_267 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="426-426"];
m9_232 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="392-392"];
m9_167 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="327-327"];
m9_166 [cluster="lambda expression", file="RedisStorage.cs", label="x.Name", span="327-327"];
m9_170 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="327-327"];
m9_169 [cluster="lambda expression", file="RedisStorage.cs", label="x.Value", span="327-327"];
m9_197 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="364-364"];
m9_196 [cluster="lambda expression", file="RedisStorage.cs", label="x.State", span="364-364"];
m9_200 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="364-364"];
m9_199 [cluster="lambda expression", file="RedisStorage.cs", label="x.Count", span="364-364"];
m9_203 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="366-366"];
m9_263 [cluster="lambda expression", file="RedisStorage.cs", label="x.ToString(''yyyy-MM-dd'')", span="425-425"];
m9_264 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="425-425"];
m9_120 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m9_64 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisStorage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_48 [cluster="Unk.ToList", file="RedisStorage.cs", label="Entry Unk.ToList", span=""];
m9_268 [cluster="Unk.Format", file="RedisStorage.cs", label="Entry Unk.Format", span=""];
m9_61 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="RedisStorage.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m9_233 [cluster="System.DateTime.ToString(string)", file="RedisStorage.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m9_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m9_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m9_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m9_78 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m9_119 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RedisStorage.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m9_229 [cluster="Unk.ElementAt", file="RedisStorage.cs", label="Entry Unk.ElementAt", span=""];
m9_12 [cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m9_38 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91"];
m9_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="65-65"];
m9_35 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m9_226 [cluster="Unk.Query", file="RedisStorage.cs", label="Entry Unk.Query", span=""];
m9_22 [cluster="Unk.>", file="RedisStorage.cs", label="Entry Unk.>", span=""];
m9_36 [cluster="HangFire.Redis.FailedStateHandler.FailedStateHandler()", color=green, community=0, file="RedisStorage.cs", label="Entry HangFire.Redis.FailedStateHandler.FailedStateHandler()", prediction=3, span="23-23"];
m9_37 [cluster="HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", span="23-23"];
m9_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="RedisStorage.cs", label="return _connection.Query<int>(\r\n                @''select count(Id) from HangFire.Job where State = @state'',\r\n                new { state = stateName })\r\n                .Single();", span="67-70"];
m9_13 [cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m9_227 [cluster="Unk.Add", file="RedisStorage.cs", label="Entry Unk.Add", span=""];
m9_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37"];
m9_225 [cluster="System.DateTime.AddHours(double)", file="RedisStorage.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m9_15 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="37-37"];
m9_16 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="RedisStorage.cs", label="return GetNumberOfJobsByStateName(ScheduledState.Name);", span="39-39"];
m9_23 [cluster="Unk.Single", file="RedisStorage.cs", label="Entry Unk.Single", span=""];
m9_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="var jobs = _connection.Query<Job>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", span="102-105"];
m9_46 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="return DeserializeJobs(jobs, selector);", span="107-107"];
m9_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="string jobsSql = @''\r\nselect * from (select *, row_number() over (order by CreatedAt desc) as row_num\r\nfrom HangFire.Job where State = @stateName) as j where j.row_num between @start and @end\r\n''", span="97-100"];
m9_47 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="91-91"];
m9_160 [cluster="Unk.QueryMultiple", file="RedisStorage.cs", label="Entry Unk.QueryMultiple", span=""];
m9_110 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m9_139 [cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="RedisStorage.cs", label="Entry KeyValuePair<string, DequeuedJobDto>.cstr", span=""];
m9_72 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m9_73 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="RedisStorage.cs", label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.Name,\r\n                (method, stateData) => new ScheduleDto\r\n                {\r\n                    Method = method,\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="144-151"];
m9_74 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="142-142"];
m9_121 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m9_123 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs", label="var jobs = _connection.Query<Job>(\r\n                enqueuedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="259-262"];
m9_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (method, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                });", span="264-270"];
m9_122 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs", label="string enqueuedJobsSql = @''\r\nselect * from\r\n(select j.*, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is null) as r\r\nwhere r.row_num between @start and @end''", span="252-257"];
m9_125 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="250-250"];
m9_86 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164"];
m9_87 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="166-168"];
m9_88 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label="var result = new List<ServerDto>()", span="170-170"];
m9_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label=servers, span="172-172"];
m9_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="174-174"];
m9_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="175-182"];
m9_92 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label="return result;", span="185-185"];
m9_93 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="164-164"];
m9_234 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_162 [cluster="Unk.ToDictionary", file="RedisStorage.cs", label="Entry Unk.ToDictionary", span=""];
m9_174 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346"];
m9_175 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="RedisStorage.cs", label="return GetNumberOfJobsByStateName(SucceededState.Name);", span="348-348"];
m9_176 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="346-346"];
m9_129 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m9_102 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m9_82 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413"];
m9_249 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var valuesMap = _connection.Query(\r\n                @''select [Key], IntValue from HangFire.Value where [Key] in @keys'',\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.IntValue)", span="428-431"];
m9_248 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="426-426"];
m9_250 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label=keys, span="433-433"];
m9_251 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="!valuesMap.ContainsKey(key)", span="435-435"];
m9_252 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="valuesMap.Add(key, 0)", span="435-435"];
m9_256 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="441-441"];
m9_247 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="425-425"];
m9_241 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var endDate = DateTime.UtcNow.Date", span="415-415"];
m9_245 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="dates.Add(endDate)", span="421-421"];
m9_253 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var result = new Dictionary<DateTime, long>()", span="438-438"];
m9_255 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="i < stringDates.Count", span="439-439"];
m9_254 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var i = 0", span="439-439"];
m9_257 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="result.Add(dates[i], value)", span="442-442"];
m9_244 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="startDate <= endDate", span="419-419"];
m9_243 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var dates = new List<DateTime>()", span="417-417"];
m9_259 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="return result;", span="445-445"];
m9_242 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="var startDate = endDate.AddDays(-7)", span="416-416"];
m9_246 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="endDate = endDate.AddDays(-1)", span="422-422"];
m9_258 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="i++", span="439-439"];
m9_260 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="413-413"];
m9_228 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisStorage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_65 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="RedisStorage.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7"];
m9_19 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="73-73"];
m9_20 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="return new RedisConnection(_pooledManager.GetClient());", span="75-75"];
m9_21 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="73-73"];
m9_147 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m9_148 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="RedisStorage.cs", label="return GetHourlyTimelineStats(''failed'');", span="312-312"];
m9_149 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="310-310"];
m9_163 [cluster="Unk.Select", file="RedisStorage.cs", label="Entry Unk.Select", span=""];
m9_58 [cluster="System.Collections.Generic.List<T>.List(int)", file="RedisStorage.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m9_111 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m9_113 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="233-233"];
m9_112 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="226-231"];
m9_114 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="234-234"];
m9_115 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label=queues, span="236-236"];
m9_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue.Queue,\r\n                    Length = queue.Enqueued,\r\n                    Dequeued = queue.Fetched,\r\n                    FirstJobs = new List<KeyValuePair<string, EnqueuedJobDto>>() // TODO: implement\r\n                })", span="238-244"];
m9_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label="return result;", span="247-247"];
m9_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="224-224"];
m9_161 [cluster="Unk.SingleOrDefault", file="RedisStorage.cs", label="Entry Unk.SingleOrDefault", span=""];
m9_130 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m9_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label="var jobs = _connection.Query<Job>(\r\n                fetchedJobsSql,\r\n                new { queue = queue, start = from + 1, end = @from + perPage })\r\n                .ToList()", span="282-285"];
m9_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label="result.Add(new KeyValuePair<string, DequeuedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new DequeuedJobDto\r\n                    {\r\n                        Method = DeserializeJobMethod(job.InvocationData),\r\n                        State = job.State,\r\n                        CreatedAt = job.CreatedAt,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="291-299"];
m9_131 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label="string fetchedJobsSql = @''\r\nselect * from\r\n(select j.*, jq.FetchedAt, row_number() over (order by j.CreatedAt) as row_num from HangFire.JobQueue jq\r\nleft join HangFire.Job j on jq.JobId = j.Id\r\nwhere jq.Queue = @queue and jq.FetchedAt is not null) as r\r\nwhere r.row_num between @start and @end''", span="275-280"];
m9_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label="var result = new List<KeyValuePair<string, DequeuedJobDto>>(jobs.Count)", span="287-287"];
m9_134 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label=jobs, span="289-289"];
m9_136 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label="return new JobList<DequeuedJobDto>(result);", span="302-302"];
m9_137 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="RedisStorage.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", span="273-273"];
m9_275 [file="RedisStorage.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m9_278 [file="RedisStorage.cs", label=string, span=""];
m9_277 [file="RedisStorage.cs", label=string, span=""];
m9_276 [file="RedisStorage.cs", label=countByStates, span=""];
m10_0 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="ScheduledState.cs", label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m10_1 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="ScheduledState.cs", label="Performed = true", span="185-185"];
m10_2 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="ScheduledState.cs", label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m10_7 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="ScheduledState.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m10_8 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="ScheduledState.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m10_3 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs", label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m10_4 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs", label="A = a", span="196-196"];
m10_5 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs", label="B = b", span="197-197"];
m10_6 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="ScheduledState.cs", label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m10_9 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="ScheduledState.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m10_10 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="ScheduledState.cs", label="Disposed = true", span="211-211"];
m10_11 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="ScheduledState.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m10_12 [file="ScheduledState.cs", label="HangFire.Tests.JobInvokerTests.CorrectJob", span=""];
m10_13 [file="ScheduledState.cs", label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span=""];
m10_14 [file="ScheduledState.cs", label="HangFire.Tests.JobInvokerTests.DisposableJob", span=""];
m11_75 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m11_76 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="82-83"];
m11_77 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="84-84"];
m11_78 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="86-86"];
m11_79 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_stateMachine.Verify(\r\n                x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="88-90"];
m11_80 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m11_14 [cluster="Mock<IStateMachineFactory>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m11_57 [cluster="HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs", label="Entry HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m11_42 [cluster="System.TimeSpan.FromMilliseconds(double)", file="SchedulePollerFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m11_66 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m11_67 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="69-69"];
m11_68 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="71-71"];
m11_69 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", span="73-76"];
m11_70 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m11_20 [cluster="Unk.>", file="SchedulePollerFacts.cs", label="Entry Unk.>", span=""];
m11_41 [cluster="SchedulePoller.cstr", file="SchedulePollerFacts.cs", label="Entry SchedulePoller.cstr", span=""];
m11_29 [cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m11_25 [cluster="Unk.GetConnection", file="SchedulePollerFacts.cs", label="Entry Unk.GetConnection", span=""];
m11_50 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m11_51 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="58-58"];
m11_52 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="60-60"];
m11_53 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_storage.Verify(x => x.GetConnection())", span="62-62"];
m11_54 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_connection.Verify(x => x.Dispose())", span="63-63"];
m11_55 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m11_33 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m11_35 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m11_36 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m11_15 [cluster="Unk.Setup", file="SchedulePollerFacts.cs", label="Entry Unk.Setup", span=""];
m11_65 [cluster="Unk.Dispose", file="SchedulePollerFacts.cs", label="Entry Unk.Dispose", span=""];
m11_74 [cluster="Unk.TryToChangeState", file="SchedulePollerFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m11_0 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m11_1 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage = new Mock<JobStorage>()", span="21-21"];
m11_2 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m11_3 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="23-23"];
m11_4 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_token = new CancellationToken(true)", span="24-24"];
m11_5 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26"];
m11_6 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28"];
m11_7 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="30-30"];
m11_8 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="31-32"];
m11_9 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m11_84 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="83-83"];
m11_17 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="27-27"];
m11_22 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="30-30"];
m11_26 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="31-32"];
m11_18 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27"];
m11_19 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="27-27"];
m11_23 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="30-30"];
m11_24 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="30-30"];
m11_27 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="31-32"];
m11_28 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="31-32"];
m11_30 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="32-32"];
m11_31 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="32-32"];
m11_32 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="32-32"];
m11_38 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="39-40"];
m11_40 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="39-40"];
m11_47 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="49-50"];
m11_49 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="49-50"];
m11_59 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="62-62"];
m11_62 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="63-63"];
m11_60 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="62-62"];
m11_61 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="62-62"];
m11_63 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Dispose()", span="63-63"];
m11_64 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="63-63"];
m11_71 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="73-76"];
m11_72 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", span="73-76"];
m11_73 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="73-76"];
m11_81 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="82-83"];
m11_87 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="89-89"];
m11_82 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="82-83"];
m11_83 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="82-83"];
m11_85 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="83-83"];
m11_86 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="83-83"];
m11_88 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>())", span="89-89"];
m11_89 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="89-89"];
m11_13 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="SchedulePollerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m11_58 [cluster="Unk.Verify", file="SchedulePollerFacts.cs", label="Entry Unk.Verify", span=""];
m11_56 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m11_91 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m11_12 [cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m11_21 [cluster="Unk.Create", file="SchedulePollerFacts.cs", label="Entry Unk.Create", span=""];
m11_16 [cluster="Unk.Returns", file="SchedulePollerFacts.cs", label="Entry Unk.Returns", span=""];
m11_11 [cluster="Mock<IStorageConnection>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m11_10 [cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m11_43 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m11_45 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="52-52"];
m11_46 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m11_92 [file="SchedulePollerFacts.cs", label="HangFire.Core.Tests.Server.SchedulePollerFacts", span=""];
m13_0 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m13_1 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ServerComponentRunnerFacts.cs", label="Exception = exception", span="11-11"];
m13_2 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m13_3 [file="ServerComponentRunnerFacts.cs", label="HangFire.Filters.ClientJobExceptionContext", span=""];
m14_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m14_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MaxRetryAttempts = 10", span="27-27"];
m14_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="28-28"];
m14_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MinimumLogVerbosity = false", span="29-29"];
m14_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m14_5 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m14_6 [file="ServerComponentRunnerOptions.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m15_16 [cluster="Mock<IStateMachineFactory>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m15_18 [cluster="Mock<IState>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m15_96 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m15_97 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="102-102"];
m15_98 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="104-105"];
m15_99 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="107-107"];
m15_100 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m15_56 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m15_57 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66"];
m15_58 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67"];
m15_59 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m15_136 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m15_137 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="148-148"];
m15_138 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151"];
m15_139 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="153-153"];
m15_140 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m15_77 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m15_78 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="CreateClient()", span="86-86"];
m15_79 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="_storage.Verify(x => x.GetConnection())", span="87-87"];
m15_80 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m15_17 [cluster="Mock<IJobCreationProcess>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m15_60 [cluster="Unk.DoesNotThrow", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m15_112 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81"];
m15_121 [cluster="Unk.Run", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.Run", span=""];
m15_64 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39"];
m15_122 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m15_123 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="134-134"];
m15_124 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136"];
m15_125 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139"];
m15_126 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.NotNull(exception.InnerException)", span="141-141"];
m15_127 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142"];
m15_128 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m15_145 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m15_146 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="159-159"];
m15_147 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162"];
m15_148 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="164-164"];
m15_149 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m15_154 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m15_155 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="170-170"];
m15_156 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="172-172"];
m15_157 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177"];
m15_158 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m15_36 [cluster="Unk.>", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.>", span=""];
m15_104 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m15_105 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="113-113"];
m15_106 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="115-116"];
m15_107 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="118-118"];
m15_108 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m15_163 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m15_164 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="183-183"];
m15_165 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="185-185"];
m15_166 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="187-190"];
m15_167 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m15_91 [cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113"];
m15_171 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m15_172 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs", label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="196-197"];
m15_173 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="198-198"];
m15_174 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="200-200"];
m15_175 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.True(result)", span="202-202"];
m15_176 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m15_23 [cluster="Unk.GetConnection", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.GetConnection", span=""];
m15_144 [cluster="Unk.ChangeState", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.ChangeState", span=""];
m15_86 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m15_87 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="93-93"];
m15_88 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="client.Dispose()", span="94-94"];
m15_89 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="_connection.Verify(x => x.Dispose())", span="96-96"];
m15_90 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m15_129 [cluster="Unk.NotNull", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.NotNull", span=""];
m15_13 [cluster="Unk.Setup", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.Setup", span=""];
m15_95 [cluster="Unk.Dispose", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.Dispose", span=""];
m15_65 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m15_66 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73"];
m15_67 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m15_81 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m15_182 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerComponentRunnerOptionsFacts.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211"];
m15_183 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m15_71 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m15_72 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80"];
m15_73 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m15_153 [cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="100-100"];
m15_162 [cluster="Unk.TryToChangeState", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m15_178 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="196-196"];
m15_20 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="24-24"];
m15_24 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="29-29"];
m15_28 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="33-33"];
m15_22 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="24-24"];
m15_25 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.Create(_connection.Object)", span="29-29"];
m15_26 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="29-29"];
m15_29 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Method()", span="33-33"];
m15_30 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="33-33"];
m15_38 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="40-40"];
m15_39 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40"];
m15_40 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="40-40"];
m15_46 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="49-49"];
m15_47 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49"];
m15_48 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="49-49"];
m15_53 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="58-58"];
m15_54 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58"];
m15_55 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="58-58"];
m15_61 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="67-67"];
m15_62 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="new BackgroundJobClient()", span="67-67"];
m15_63 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="67-67"];
m15_68 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="73-73"];
m15_69 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="new BackgroundJobClient(_storage.Object)", span="73-73"];
m15_70 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="73-73"];
m15_74 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="80-80"];
m15_75 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80"];
m15_76 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="80-80"];
m15_83 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="87-87"];
m15_84 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.GetConnection()", span="87-87"];
m15_85 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="87-87"];
m15_92 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="96-96"];
m15_93 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.Dispose()", span="96-96"];
m15_94 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="96-96"];
m15_102 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="client.Create(null, _state.Object)", span="105-105"];
m15_101 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="105-105"];
m15_103 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="105-105"];
m15_110 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="client.Create(_job, null)", span="116-116"];
m15_109 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="116-116"];
m15_111 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="116-116"];
m15_118 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="128-128"];
m15_119 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.Run(It.IsNotNull<CreateContext>())", span="128-128"];
m15_120 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="128-128"];
m15_134 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="client.Create(_job, _state.Object)", span="139-139"];
m15_130 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="135-135"];
m15_133 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="139-139"];
m15_131 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.Run(It.IsAny<CreateContext>())", span="135-135"];
m15_132 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="135-135"];
m15_135 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="139-139"];
m15_142 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="client.ChangeState(null, _state.Object, null)", span="151-151"];
m15_141 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="151-151"];
m15_143 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="151-151"];
m15_151 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="client.ChangeState(''jobId'', null, null)", span="162-162"];
m15_150 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="162-162"];
m15_152 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="162-162"];
m15_159 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="174-177"];
m15_160 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="174-177"];
m15_161 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="174-177"];
m15_168 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="187-190"];
m15_169 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="187-190"];
m15_170 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="187-190"];
m15_179 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="x.TryToChangeState(''job-id'', _state.Object, null)", span="196-196"];
m15_180 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="196-196"];
m15_82 [cluster="Unk.Verify", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.Verify", span=""];
m15_49 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m15_50 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58"];
m15_51 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Equal(''process'', exception.ParamName)", span="60-60"];
m15_52 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m15_31 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m15_181 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m15_15 [cluster="Mock<IStateMachine>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m15_32 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m15_33 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40"];
m15_34 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m15_35 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m15_42 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m15_43 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49"];
m15_44 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51"];
m15_45 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m15_19 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m15_27 [cluster="Unk.Create", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.Create", span=""];
m15_113 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m15_114 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="var client = CreateClient()", span="124-124"];
m15_115 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="client.Create(_job, _state.Object)", span="126-126"];
m15_116 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128"];
m15_117 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m15_177 [cluster="Unk.True", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.True", span=""];
m15_14 [cluster="Unk.Returns", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.Returns", span=""];
m15_41 [cluster="BackgroundJobClient.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry BackgroundJobClient.cstr", span=""];
m15_11 [cluster="Mock<IStorageConnection>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m15_12 [cluster="Mock<JobStorage>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m15_0 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m15_4 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="26-26"];
m15_5 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m15_6 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29"];
m15_7 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="_process = new Mock<IJobCreationProcess>()", span="31-31"];
m15_8 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="_state = new Mock<IState>()", span="32-32"];
m15_9 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="_job = Job.FromExpression(() => Method())", span="33-33"];
m15_10 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m15_184 [file="ServerComponentRunnerOptionsFacts.cs", label="HangFire.Core.Tests.BackgroundJobClientFacts", span=""];
m15_185 [file="ServerComponentRunnerOptionsFacts.cs", label=client, span=""];
m15_186 [file="ServerComponentRunnerOptionsFacts.cs", label=client, span=""];
m15_187 [file="ServerComponentRunnerOptionsFacts.cs", label=client, span=""];
m15_188 [file="ServerComponentRunnerOptionsFacts.cs", label=client, span=""];
m15_189 [file="ServerComponentRunnerOptionsFacts.cs", label=client, span=""];
m16_10 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerWatchdogFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m16_0 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16"];
m16_1 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="_storage = new Mock<JobStorage>()", span="18-18"];
m16_2 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="19-19"];
m16_4 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="_token = new CancellationToken(true)", span="24-24"];
m16_5 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="26-26"];
m16_6 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16"];
m16_49 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54"];
m16_50 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="_connection.Setup(x => x.RemoveTimedOutServers(It.IsAny<TimeSpan>())).Returns(1)", span="56-56"];
m16_51 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="var watchdog = CreateWatchdog()", span="57-57"];
m16_52 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="watchdog.Execute(_token)", span="59-59"];
m16_53 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="_connection.Verify(x => x.RemoveTimedOutServers(_options.ServerTimeout))", span="61-61"];
m16_54 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54"];
m16_58 [cluster="Unk.RemoveTimedOutServers", file="ServerWatchdogFacts.cs", label="Entry Unk.RemoveTimedOutServers", span=""];
m16_33 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43"];
m16_34 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="var watchdog = CreateWatchdog()", span="45-45"];
m16_35 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="watchdog.Execute(_token)", span="47-47"];
m16_36 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="49-49"];
m16_37 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="50-50"];
m16_38 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43"];
m16_32 [cluster="ServerWatchdog.cstr", file="ServerWatchdogFacts.cs", label="Entry ServerWatchdog.cstr", span=""];
m16_39 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="64-64"];
m16_62 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs", label="return new ServerWatchdog(_storage.Object, _options);", span="66-66"];
m16_63 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="64-64"];
m16_17 [cluster="Unk.GetConnection", file="ServerWatchdogFacts.cs", label="Entry Unk.GetConnection", span=""];
m16_12 [cluster="Unk.Setup", file="ServerWatchdogFacts.cs", label="Entry Unk.Setup", span=""];
m16_18 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m16_19 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs", label="Assert.Throws<ArgumentNullException>(() => new ServerWatchdog(null))", span="32-32"];
m16_20 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m16_48 [cluster="Unk.Dispose", file="ServerWatchdogFacts.cs", label="Entry Unk.Dispose", span=""];
m16_59 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="61-61"];
m16_14 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="26-26"];
m16_15 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.GetConnection()", span="26-26"];
m16_16 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="26-26"];
m16_22 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="32-32"];
m16_23 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="new ServerWatchdog(null)", span="32-32"];
m16_24 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="32-32"];
m16_29 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="39-39"];
m16_30 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="new ServerWatchdog(_storage.Object, null)", span="39-39"];
m16_31 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="39-39"];
m16_42 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="49-49"];
m16_45 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="50-50"];
m16_43 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.GetConnection()", span="49-49"];
m16_44 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="49-49"];
m16_46 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.Dispose()", span="50-50"];
m16_47 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="50-50"];
m16_55 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="56-56"];
m16_56 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.RemoveTimedOutServers(It.IsAny<TimeSpan>())", span="56-56"];
m16_57 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="56-56"];
m16_60 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.RemoveTimedOutServers(_options.ServerTimeout)", span="61-61"];
m16_61 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="61-61"];
m16_11 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerWatchdogFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m16_41 [cluster="Unk.Verify", file="ServerWatchdogFacts.cs", label="Entry Unk.Verify", span=""];
m16_26 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36"];
m16_27 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new ServerWatchdog(_storage.Object, null))", span="38-39"];
m16_28 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36"];
m16_40 [cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43"];
m16_13 [cluster="Unk.Returns", file="ServerWatchdogFacts.cs", label="Entry Unk.Returns", span=""];
m16_9 [cluster="HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
m16_8 [cluster="Mock<IStorageConnection>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m16_7 [cluster="Mock<JobStorage>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m16_25 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
m16_64 [file="ServerWatchdogFacts.cs", label="HangFire.Core.Tests.Server.ServerWatchdogFacts", span=""];
m17_0 [cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Entry HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m17_1 [cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Exit HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m17_2 [cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Entry HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m17_3 [cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Exit HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m18_12 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m18_85 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", span="79-79"];
m18_86 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs", label="_process\r\n                .Setup(x => x.ChangeState(It.IsAny<StateChangeContext>()))\r\n                .Returns<IState>(null)", span="81-83"];
m18_87 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs", label="var scheduler = CreateScheduler()", span="85-85"];
m18_88 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs", label="scheduler.Execute(_context.Object)", span="87-87"];
m18_89 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs", label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="89-89"];
m18_90 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs", label="_transaction.Verify(x => x.Commit())", span="90-90"];
m18_91 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", file="StateHandlerCollection.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_RemovesAJobIdentifierFromTheSet_WhenStateChangeFails()", span="79-79"];
m18_13 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="StateHandlerCollection.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m18_18 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs", label="return _handlers[stateName].ToArray();", span="47-47"];
m18_44 [cluster="Unk.Equal", file="StateHandlerCollection.cs", label="Entry Unk.Equal", span=""];
m18_49 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", span="50-50"];
m18_50 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs", label="var scheduler = CreateScheduler()", span="52-52"];
m18_51 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs", label="scheduler.Execute(_context.Object)", span="54-54"];
m18_52 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs", label="_process.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName }))))", span="56-59"];
m18_53 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs", label="_connection.Verify(x => x.Dispose())", span="61-61"];
m18_54 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="StateHandlerCollection.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", span="50-50"];
m18_0 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", span="19-19"];
m18_6 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", color=green, community=0, file="StateHandlerCollection.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", prediction=4, span="28-28"];
m18_7 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="29-29"];
m18_1 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", label="_context = new BackgroundProcessContextMock()", span="21-21"];
m18_2 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", label="_context.CancellationTokenSource.Cancel()", span="22-22"];
m18_8 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", label="_distributedLock = new Mock<IDisposable>()", span="31-31"];
m18_11 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="StateHandlerCollection.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", span="19-19"];
m18_31 [cluster="Unk.>", file="StateHandlerCollection.cs", label="Entry Unk.>", span=""];
m18_40 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", span="41-41"];
m18_42 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="StateHandlerCollection.cs", label="Assert.Equal(''process'', exception.ParamName)", span="46-46"];
m18_43 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="StateHandlerCollection.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", span="41-41"];
m18_15 [cluster="Unk.Setup", file="StateHandlerCollection.cs", label="Entry Unk.Setup", span=""];
m18_17 [cluster="Mock<IStateChangeProcess>.cstr", color=green, community=0, file="StateHandlerCollection.cs", label="Entry Mock<IStateChangeProcess>.cstr", prediction=5, span=""];
m18_16 [cluster="Unk.Returns", file="StateHandlerCollection.cs", label="Entry Unk.Returns", span=""];
m18_19 [cluster="Mock<IDisposable>.cstr", file="StateHandlerCollection.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m18_36 [cluster="Unk.GetFirstByLowestScoreFromSet", file="StateHandlerCollection.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m18_23 [cluster="Unk.GetConnection", file="StateHandlerCollection.cs", label="Entry Unk.GetConnection", span=""];
m18_103 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", span="94-94"];
m18_104 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs", label="var scheduler = CreateScheduler()", span="96-96"];
m18_105 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs", label="scheduler.Execute(_context.Object)", span="98-98"];
m18_106 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs", label="_connection.Verify(x => x.AcquireDistributedLock(It.IsAny<string>(), It.IsAny<TimeSpan>()))", span="100-100"];
m18_107 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs", label="_distributedLock.Verify(x => x.Dispose())", span="101-101"];
m18_108 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="StateHandlerCollection.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", span="94-94"];
m18_61 [cluster="Unk.ChangeState", file="StateHandlerCollection.cs", label="Entry Unk.ChangeState", span=""];
m18_55 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", span="104-104"];
m18_115 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="StateHandlerCollection.cs", label="return new Hangfire.Server.DelayedJobScheduler(Timeout.InfiniteTimeSpan, _process.Object);", span="106-106"];
m18_116 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="StateHandlerCollection.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", span="104-104"];
m18_65 [cluster="Unk.SequenceEqual", file="StateHandlerCollection.cs", label="Entry Unk.SequenceEqual", span=""];
m18_48 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IStateChangeProcess)", file="StateHandlerCollection.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IStateChangeProcess)", span="45-45"];
m18_69 [cluster="Unk.Dispose", file="StateHandlerCollection.cs", label="Entry Unk.Dispose", span=""];
m18_32 [cluster="Unk.AcquireDistributedLock", file="StateHandlerCollection.cs", label="Entry Unk.AcquireDistributedLock", span=""];
m18_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateHandlerCollection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m18_112 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="101-101"];
m18_20 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateHandlerCollection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m18_24 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="29-29"];
m18_28 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="33-33"];
m18_33 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="36-37"];
m18_22 [cluster="lambda expression", file="StateHandlerCollection.cs", label="HangFire.States.StateHandlerCollection", span=""];
m18_25 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.CreateWriteTransaction()", span="29-29"];
m18_26 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="29-29"];
m18_29 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.AcquireDistributedLock(''locks:schedulepoller'', It.IsAny<TimeSpan>())", span="33-33"];
m18_30 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="33-33"];
m18_34 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="36-37"];
m18_35 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="36-37"];
m18_37 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="37-37"];
m18_38 [cluster="lambda expression", file="StateHandlerCollection.cs", label="time > 0", span="37-37"];
m18_39 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="37-37"];
m18_45 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="44-44"];
m18_47 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="44-44"];
m18_58 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="56-59"];
m18_66 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="61-61"];
m18_59 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })))", span="56-59"];
m18_60 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="56-59"];
m18_62 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="56-59"];
m18_63 [cluster="lambda expression", file="StateHandlerCollection.cs", label="ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })", span="57-59"];
m18_64 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="56-59"];
m18_67 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.Dispose()", span="61-61"];
m18_68 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="61-61"];
m18_76 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="67-68"];
m18_82 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="74-74"];
m18_77 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="67-68"];
m18_78 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="67-68"];
m18_79 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="68-68"];
m18_80 [cluster="lambda expression", file="StateHandlerCollection.cs", label="time > 0", span="68-68"];
m18_81 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="68-68"];
m18_83 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.ChangeState(It.IsAny<StateChangeContext>())", span="74-74"];
m18_84 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="74-74"];
m18_92 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="82-82"];
m18_95 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="89-89"];
m18_99 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="90-90"];
m18_93 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.ChangeState(It.IsAny<StateChangeContext>())", span="82-82"];
m18_94 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="82-82"];
m18_96 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.RemoveFromSet(''schedule'', JobId)", span="89-89"];
m18_97 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="89-89"];
m18_100 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.Commit()", span="90-90"];
m18_101 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="90-90"];
m18_109 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Entry lambda expression", span="100-100"];
m18_110 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.AcquireDistributedLock(It.IsAny<string>(), It.IsAny<TimeSpan>())", span="100-100"];
m18_111 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="100-100"];
m18_113 [cluster="lambda expression", file="StateHandlerCollection.cs", label="x.Dispose()", span="101-101"];
m18_114 [cluster="lambda expression", file="StateHandlerCollection.cs", label="Exit lambda expression", span="101-101"];
m18_57 [cluster="Unk.Verify", file="StateHandlerCollection.cs", label="Entry Unk.Verify", span=""];
m18_102 [cluster="Unk.Commit", file="StateHandlerCollection.cs", label="Entry Unk.Commit", span=""];
m18_27 [cluster="Unk.CreateWriteTransaction", file="StateHandlerCollection.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m18_14 [cluster="Mock<IStorageConnection>.cstr", file="StateHandlerCollection.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m18_98 [cluster="Unk.RemoveFromSet", file="StateHandlerCollection.cs", label="Entry Unk.RemoveFromSet", span=""];
m18_70 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs", label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", span="65-65"];
m18_71 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="67-68"];
m18_72 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs", label="var scheduler = CreateScheduler()", span="69-69"];
m18_73 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs", label="scheduler.Execute(_context.Object)", span="71-71"];
m18_74 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs", label="_process.Verify(\r\n                x => x.ChangeState(It.IsAny<StateChangeContext>()),\r\n                Times.Never)", span="73-75"];
m18_75 [cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="StateHandlerCollection.cs", label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", span="65-65"];
m18_117 [cluster="Hangfire.Server.DelayedJobScheduler.cstr", file="StateHandlerCollection.cs", label="Entry Hangfire.Server.DelayedJobScheduler.cstr", span=""];
m18_56 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="StateHandlerCollection.cs", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="53-53"];
m18_118 [file="StateHandlerCollection.cs", label="Hangfire.Core.Tests.Server.DelayedJobScheduler", span=""];
m19_29 [cluster="int.ToString()", file="StateHandlerCollectionFacts.cs", label="Entry int.ToString()", span="0-0"];
m19_26 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateHandlerCollectionFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m19_27 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m19_0 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
m19_1 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs", label="_connection = connection", span="21-21"];
m19_2 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs", label="_queues = queues", span="22-22"];
m19_3 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
m19_25 [cluster="System.TimeSpan.FromSeconds(double)", file="StateHandlerCollectionFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m19_20 [cluster="Unk.Query", file="StateHandlerCollectionFacts.cs", label="Entry Unk.Query", span=""];
m19_28 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23"];
m19_21 [cluster="Unk.SingleOrDefault", file="StateHandlerCollectionFacts.cs", label="Entry Unk.SingleOrDefault", span=""];
m19_4 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25"];
m19_5 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="StateHandlerCollectionFacts.cs", label="Job job = null", prediction=6, span="27-27"];
m19_6 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="string queueName = null", span="28-28"];
m19_13 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="job == null", span="60-60"];
m19_16 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="job == null", span="67-67"];
m19_17 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="69-69"];
m19_18 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="StateHandlerCollectionFacts.cs", label="return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", prediction=7, span="71-74"];
m19_12 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="queueName = idAndQueue.Queue", span="57-57"];
m19_11 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="StateHandlerCollectionFacts.cs", label="job = _connection.Query<Job>(\r\n                        @''select Id, InvocationData, Arguments from HangFire.Job where Id = @id'',\r\n                        parameters)\r\n                        .SingleOrDefault()", prediction=8, span="52-55"];
m19_10 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", span="50-50"];
m19_9 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="var parameters = new DynamicParameters()", span="49-49"];
m19_14 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="62-62"];
m19_7 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="var idAndQueue = _connection.Query(@''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt is null\r\nand Queue in @queues'',\r\n                    new { queues = _queues })\r\n                    .SingleOrDefault()", span="33-40"];
m19_8 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="idAndQueue != null", span="42-42"];
m19_15 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="return null;", span="64-64"];
m19_19 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25"];
m19_22 [cluster="DynamicParameters.cstr", file="StateHandlerCollectionFacts.cs", label="Entry DynamicParameters.cstr", span=""];
m19_23 [cluster="Unk.Add", file="StateHandlerCollectionFacts.cs", label="Entry Unk.Add", span=""];
m19_30 [file="StateHandlerCollectionFacts.cs", label="HangFire.SqlServer.SqlServerFetcher", span=""];
m20_0 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs", label="Entry HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m20_1 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", color=green, community=0, file="StateHandlerProviders.cs", label="return null;", prediction=9, span="24-24"];
m20_2 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs", label="Exit HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m21_7 [cluster="System.Action.Invoke()", file="StateMachine.cs", label="Entry System.Action.Invoke()", span="0-0"];
m21_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m21_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m21_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m21_13 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="StateMachine.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29"];
m21_15 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="StateMachine.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29"];
m21_17 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="StateMachine.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m21_38 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="StateMachine.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m21_34 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="StateMachine.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m21_39 [cluster="string.Format(string, object, object)", file="StateMachine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m21_37 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="StateMachine.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m21_8 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="StateMachine.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24"];
m21_9 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="StateMachine.cs", label="Job.Add(name, JobHelper.ToJson(value))", span="26-26"];
m21_10 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="StateMachine.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24"];
m21_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8"];
m21_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs", label="Job = job", span="10-10"];
m21_2 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs", label="JobId = jobId", span="11-11"];
m21_3 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachine.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8"];
m21_33 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="StateMachine.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m21_4 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="StateMachine.cs", label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19"];
m21_5 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="StateMachine.cs", label="EnqueueAction()", span="21-21"];
m21_6 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="StateMachine.cs", label="Exit HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19"];
m21_35 [cluster="object.GetType()", file="StateMachine.cs", label="Entry object.GetType()", span="0-0"];
m21_11 [cluster="HangFire.JobHelper.ToJson(object)", file="StateMachine.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m21_18 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36"];
m21_19 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="var result = new Dictionary<string, string>()", span="38-38"];
m21_20 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="jobProperties != null", span="39-39"];
m21_21 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="TypeDescriptor.GetProperties(jobProperties)", span="41-41"];
m21_29 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="result.Add(descriptor.Name, value)", span="64-64"];
m21_30 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="return result;", span="68-68"];
m21_28 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="throw new InvalidOperationException(\r\n                                String.Format(\r\n                                    ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                    descriptor.Name,\r\n                                    descriptor.PropertyType),\r\n                                ex);", span="55-60"];
m21_23 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="string value = null", span="44-44"];
m21_24 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="propertyValue != null", span="46-46"];
m21_25 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="50-50"];
m21_26 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="value = converter.ConvertToInvariantString(propertyValue)", span="51-51"];
m21_27 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label=Exception, span="53-53"];
m21_31 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="StateMachine.cs", label="Exit HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36"];
m21_36 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="StateMachine.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m21_40 [file="StateMachine.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m22_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachineFactory.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m22_11 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Entry HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24"];
m22_12 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="connection == null", span="26-26"];
m22_14 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="return new StateMachine(connection, _handlers);", span="28-28"];
m22_13 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''connection'');", span="26-26"];
m22_15 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Exit HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24"];
m22_16 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>)", file="StateMachineFactory.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>)", span="32-32"];
m22_0 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m22_1 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs", label="Exit HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m22_10 [cluster="HangFire.JobStorage.GetStateHandlers()", file="StateMachineFactory.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m22_2 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m22_3 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="storage == null", span="18-18"];
m22_6 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(storage.GetStateHandlers())", span="21-21"];
m22_4 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="throw new ArgumentNullException(''storage'');", span="18-18"];
m22_5 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="_handlers.AddRange(GlobalStateHandlers.Handlers)", span="20-20"];
m22_7 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="StateMachineFactory.cs", label="Exit HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m22_9 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="StateMachineFactory.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m22_17 [file="StateMachineFactory.cs", label="HangFire.States.StateMachineFactory", span=""];
m23_0 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="StateMachineFacts.cs", label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15"];
m23_1 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", color=green, community=0, file="StateMachineFacts.cs", label="_transaction = transaction", prediction=10, span="17-17"];
m23_2 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="StateMachineFacts.cs", label="Exit HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15"];
m23_3 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="StateMachineFacts.cs", label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="20-20"];
m23_39 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                Prefix + key, expireIn))", span="51-52"];
m23_55 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="58-59"];
m23_47 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(Prefix + ''queue:{0}'', queue), jobId))", span="58-59"];
m23_48 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="StateMachineFacts.cs", label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="55-55"];
m23_49 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="57-57"];
m23_51 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="57-57"];
m23_54 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.EnqueueItemOnList(\r\n                String.Format(Prefix + ''queue:{0}'', queue), jobId)", span="58-59"];
m23_56 [cluster="string.Format(string, object)", file="StateMachineFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_58 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs", label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="62-62"];
m23_59 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66"];
m23_60 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70"];
m23_61 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74"];
m23_52 [cluster="Unk.AddItemToSet", file="StateMachineFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m23_53 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="58-59"];
m23_57 [cluster="Unk.EnqueueItemOnList", file="StateMachineFacts.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m23_50 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.AddItemToSet(Prefix + ''queues'', queue)", span="57-57"];
m23_62 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="StateMachineFacts.cs", label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="62-62"];
m23_63 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="64-66"];
m23_107 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="106-108"];
m23_103 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="155-157"];
m23_99 [cluster="Unk.RemoveEntry", file="StateMachineFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m23_43 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="51-52"];
m23_95 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachineFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m23_42 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.ExpireEntryIn(\r\n                Prefix + key, expireIn)", span="51-52"];
m23_106 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="StateMachineFacts.cs", label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="103-103"];
m23_124 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="StateMachineFacts.cs", label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="122-122"];
m23_125 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.TrimList(\r\n                Prefix + key, keepStartingFrom, keepEndingAt))", span="125-126"];
m23_126 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="StateMachineFacts.cs", label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="122-122"];
m23_79 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="79-80"];
m23_71 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="72-74"];
m23_30 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', state.JobId), TimeSpan.FromMinutes(1))", span="56-57"];
m23_4 [cluster="HangFire.States.JobState.Apply(IRedisTransaction)", file="StateMachineFacts.cs", label="Entry HangFire.States.JobState.Apply(IRedisTransaction)", span="21-21"];
m23_5 [cluster="HangFire.States.JobState.Apply(IRedisTransaction)", file="StateMachineFacts.cs", label="Exit HangFire.States.JobState.Apply(IRedisTransaction)", span="21-21"];
m23_44 [cluster="Unk.AcquireLock", file="StateMachineFacts.cs", label="Entry Unk.AcquireLock", span=""];
m23_10 [cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs", label="Entry HangFire.States.JobState.JobState()", span="33-33"];
m23_24 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m23_25 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="redis == null", span="50-50"];
m23_26 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="throw new ArgumentNullException(''redis'');", span="50-50"];
m23_11 [cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs", label="RegisterDescriptor(FailedState.Name, new FailedStateDescriptor())", span="35-35"];
m23_12 [cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs", label="RegisterDescriptor(ProcessingState.Name, new ProcessingStateDescriptor())", span="36-36"];
m23_13 [cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs", label="RegisterDescriptor(ScheduledState.Name, new ScheduledStateDescriptor())", span="37-37"];
m23_74 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(Prefix + ''job:{0}:history'', jobId)))", span="81-82"];
m23_45 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="StateMachineFacts.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m23_46 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m23_16 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="28-29"];
m23_9 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="22-23"];
m23_38 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="Exit HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m23_40 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="StateMachineFacts.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m23_18 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                Prefix + key, value))", span="34-35"];
m23_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m23_104 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties))", span="155-157"];
m23_105 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="155-157"];
m23_72 [cluster="Unk.AppendHistory", file="StateMachineFacts.cs", label="Entry Unk.AppendHistory", span=""];
m23_73 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(Prefix + ''job:{0}'', jobId)))", span="79-80"];
m23_75 [cluster="Unk.Commit", file="StateMachineFacts.cs", label="Entry Unk.Commit", span=""];
m23_76 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="99-100"];
m23_17 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="StateMachineFacts.cs", label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="32-32"];
m23_21 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.RemoveItemFromSortedSet(\r\n                Prefix + key, value)", span="34-35"];
m23_22 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="34-35"];
m23_41 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="51-52"];
m23_69 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="72-74"];
m23_31 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label=changingFilters, span="59-59"];
m23_32 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="var oldState = state", span="61-61"];
m23_33 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="state = filter.OnStateChanged(redis, oldState)", span="62-62"];
m23_111 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="StateMachineFacts.cs", label=properties, span=""];
m23_112 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(Prefix + key, value))", span="113-113"];
m23_113 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="StateMachineFacts.cs", label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="111-111"];
m23_97 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        })", span="139-144"];
m23_77 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="79-80"];
m23_78 [cluster="lambda expression", file="StateMachineFacts.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(Prefix + ''job:{0}'', jobId))", span="79-80"];
m23_101 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.SetRangeInHash(\r\n                String.Format(Prefix + ''job:{0}:state'', jobId),\r\n                stateProperties)", span="98-100"];
m23_96 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="95-96"];
m23_100 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="98-100"];
m23_98 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="95-96"];
m23_102 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="98-100"];
m23_7 [cluster="HangFire.States.JobState.GetProperties()", file="StateMachineFacts.cs", label="return new Dictionary<string, string>();", span="26-26"];
m23_14 [cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs", label="RegisterDescriptor(SucceededState.Name, new SucceededStateDescriptor())", span="38-38"];
m23_20 [cluster="HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", file="StateMachineFacts.cs", label="Entry HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", span="5-5"];
m23_27 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="state == null", span="51-51"];
m23_34 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="oldState != state", span="64-64"];
m23_66 [cluster="Unk.CreateTransaction", file="StateMachineFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m23_81 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="AppendHistory(transaction, state, appendToJob)", span="126-126"];
m23_84 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m23_92 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="153-153"];
m23_114 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="113-113"];
m23_120 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="118-119"];
m23_127 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="125-126"];
m23_8 [cluster="HangFire.States.JobState.GetProperties()", file="StateMachineFacts.cs", label="Exit HangFire.States.JobState.GetProperties()", span="24-24"];
m23_15 [cluster="HangFire.States.JobState.JobState()", file="StateMachineFacts.cs", label="Exit HangFire.States.JobState.JobState()", span="33-33"];
m23_28 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="throw new ArgumentNullException(''state'');", span="51-51"];
m23_29 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="53-54"];
m23_35 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="AppendHistory(redis, oldState, false)", span="66-66"];
m23_36 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateMachineFacts.cs", label="var appliedFilters = GlobalJobFilters.Filters\r\n                    .OfType<IStateAppliedFilter>().ToList()", span="70-71"];
m23_64 [cluster="Unk.GetValueFromHash", file="StateMachineFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m23_67 [cluster="Unk.IsNullOrEmpty", file="StateMachineFacts.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m23_70 [cluster="Unk.QueueCommand", file="StateMachineFacts.cs", label="Entry Unk.QueueCommand", span=""];
m23_65 [cluster="Unk.Contains", file="StateMachineFacts.cs", label="Entry Unk.Contains", span=""];
m23_68 [cluster="Unk.ContainsKey", file="StateMachineFacts.cs", label="Entry Unk.ContainsKey", span=""];
m23_82 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="transaction.Commit()", span="127-127"];
m23_85 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="var properties = state.GetProperties()", span="134-134"];
m23_83 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m23_86 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="var now = DateTime.UtcNow", span="135-135"];
m23_93 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties)))", span="155-157"];
m23_94 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m23_108 [cluster="lambda expression", file="StateMachineFacts.cs", label="HangFire.States.JobState", span=""];
m23_109 [cluster="lambda expression", file="StateMachineFacts.cs", label="HangFire.States.JobState", span=""];
m23_115 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.EnqueueItemOnList(Prefix + key, value)", span="113-113"];
m23_116 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="113-113"];
m23_121 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.RemoveItemFromList(\r\n                Prefix + key, value)", span="118-119"];
m23_122 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="118-119"];
m23_128 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.TrimList(\r\n                Prefix + key, keepStartingFrom, keepEndingAt)", span="125-126"];
m23_129 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="125-126"];
m23_37 [cluster="Unk.DecrementValue", file="StateMachineFacts.cs", label="Entry Unk.DecrementValue", span=""];
m23_123 [cluster="Unk.RemoveItemFromList", file="StateMachineFacts.cs", label="Entry Unk.RemoveItemFromList", span=""];
m23_110 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateMachineFacts.cs", label="HangFire.States.JobState", span=""];
m23_80 [cluster="Unk.Persist", file="StateMachineFacts.cs", label="Entry Unk.Persist", span=""];
m23_19 [cluster="HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", file="StateMachineFacts.cs", label="Entry HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", span="5-5"];
m23_87 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label=appendToJob, span="137-137"];
m23_88 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        }))", span="139-144"];
m23_89 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties))", span="146-148"];
m23_90 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="properties.Add(''State'', state.StateName)", span="151-151"];
m23_91 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="StateMachineFacts.cs", label="properties.Add(''Reason'', state.Reason)", span="152-152"];
m23_117 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="StateMachineFacts.cs", label="Entry HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="116-116"];
m23_118 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="StateMachineFacts.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                Prefix + key, value))", span="118-119"];
m23_119 [cluster="HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="StateMachineFacts.cs", label="Exit HangFire.Redis.RedisStoredValues.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="116-116"];
m23_130 [cluster="Unk.TrimList", file="StateMachineFacts.cs", label="Entry Unk.TrimList", span=""];
m23_6 [cluster="HangFire.States.JobState.GetProperties()", file="StateMachineFacts.cs", label="Entry HangFire.States.JobState.GetProperties()", span="24-24"];
m23_131 [file="StateMachineFacts.cs", label="HangFire.Redis.RedisStoredValues", span=""];
m23_132 [file="StateMachineFacts.cs", label=string, span=""];
m23_133 [file="StateMachineFacts.cs", label=string, span=""];
m23_134 [file="StateMachineFacts.cs", label=string, span=""];
m23_135 [file="StateMachineFacts.cs", label=string, span=""];
m23_136 [file="StateMachineFacts.cs", label=double, span=""];
m23_137 [file="StateMachineFacts.cs", label=string, span=""];
m23_138 [file="StateMachineFacts.cs", label=string, span=""];
m23_139 [file="StateMachineFacts.cs", label=string, span=""];
m23_140 [file="StateMachineFacts.cs", label=string, span=""];
m23_141 [file="StateMachineFacts.cs", label=string, span=""];
m23_142 [file="StateMachineFacts.cs", label="System.TimeSpan", span=""];
m23_143 [file="StateMachineFacts.cs", label=string, span=""];
m23_144 [file="StateMachineFacts.cs", label=string, span=""];
m23_145 [file="StateMachineFacts.cs", label=string, span=""];
m23_146 [file="StateMachineFacts.cs", label="System.TimeSpan", span=""];
m23_147 [file="StateMachineFacts.cs", label=string, span=""];
m23_148 [file="StateMachineFacts.cs", label=string, span=""];
m23_149 [file="StateMachineFacts.cs", label=string, span=""];
m23_150 [file="StateMachineFacts.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m23_151 [file="StateMachineFacts.cs", label=string, span=""];
m23_152 [file="StateMachineFacts.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m23_153 [file="StateMachineFacts.cs", label=string, span=""];
m23_154 [file="StateMachineFacts.cs", label=string, span=""];
m23_155 [file="StateMachineFacts.cs", label=string, span=""];
m23_156 [file="StateMachineFacts.cs", label=string, span=""];
m23_157 [file="StateMachineFacts.cs", label=string, span=""];
m23_158 [file="StateMachineFacts.cs", label=int, span=""];
m23_159 [file="StateMachineFacts.cs", label=int, span=""];
m24_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m24_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="57-57"];
m24_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m24_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m24_3 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44"];
m24_4 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49"];
m24_5 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44"];
m24_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m24_0 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m24_1 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="SucceededAt = DateTime.UtcNow", span="29-29"];
m24_2 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27"];
m24_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m24_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60"];
m24_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="63-63"];
m24_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60"];
m24_16 [file="SucceededState.cs", label="HangFire.States.SucceededState", span=""];
m25_21 [cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="SucceededStateHandler.cs", label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151"];
m25_29 [cluster="System.Threading.Thread.Join()", file="SucceededStateHandler.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m25_22 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SucceededStateHandler.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m25_10 [cluster="Unk.Execute", file="SucceededStateHandler.cs", label="Entry Unk.Execute", span=""];
m25_8 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SucceededStateHandler.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m25_28 [cluster="System.Threading.EventWaitHandle.Set()", file="SucceededStateHandler.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m25_23 [cluster="Unk.Fatal", file="SucceededStateHandler.cs", label="Entry Unk.Fatal", span=""];
m25_24 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="70-70"];
m25_25 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs", label="_stopped.Set()", span="72-72"];
m25_26 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs", label="thread.Join()", span="73-73"];
m25_27 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SucceededStateHandler.cs", label="Exit HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="70-70"];
m25_3 [cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", span="31-31"];
m25_4 [cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs", label="var connection = _storage.CreateAndOpenConnection()", span="33-33"];
m25_5 [cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs", label=ProcessedTables, span="35-35"];
m25_6 [cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs", label="connection.Execute(\r\n                        String.Format(@''delete from HangFire.[{0}] with (tablock) where ExpireAt < @now'', table),\r\n                        new { now = DateTime.UtcNow })", span="37-39"];
m25_7 [cluster="HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", file="SucceededStateHandler.cs", label="Exit HangFire.SqlServer.Components.ExpirationManager.RemoveExpiredRecords()", span="31-31"];
m25_0 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SucceededStateHandler.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="26-26"];
m25_1 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SucceededStateHandler.cs", label="_storage = storage", span="28-28"];
m25_2 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SucceededStateHandler.cs", label="Exit HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="26-26"];
m25_11 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", span="44-44"];
m25_12 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label="Logger.Info(''Expiration manager has been started.'')", span="48-48"];
m25_13 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label=true, span="50-50"];
m25_14 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label="JobServer.RetryOnException(\r\n                        RemoveExpiredRecords,\r\n                        _stopped)", span="52-54"];
m25_16 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label="Logger.Info(''Expiration manager has been stopped.'')", span="62-62"];
m25_15 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label="_stopped.WaitOne(CheckInterval)", span="56-56"];
m25_17 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label=Exception, span="64-64"];
m25_18 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label="Logger.Fatal(''Unexpected exception caught.'', ex)", span="66-66"];
m25_19 [cluster="HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", file="SucceededStateHandler.cs", label="Exit HangFire.SqlServer.Components.ExpirationManager.HangFire.Server.IThreadWrappable.Work()", span="44-44"];
m25_9 [cluster="string.Format(string, object)", file="SucceededStateHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_20 [cluster="Unk.Info", file="SucceededStateHandler.cs", label="Entry Unk.Info", span=""];
m25_30 [file="SucceededStateHandler.cs", label="HangFire.SqlServer.Components.ExpirationManager", span=""];
n202 -> n3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n94  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n99  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n119  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n120  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n133  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n151  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n162  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n178  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n202 -> n193  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
n203 -> n31  [color=darkseagreen4, key=1, label=context, style=dashed];
n204 -> n40  [color=darkseagreen4, key=1, label=context, style=dashed];
n205 -> n79  [color=darkseagreen4, key=1, label=context, style=dashed];
n205 -> n83  [color=darkseagreen4, key=1, label=context, style=dashed];
n206 -> n111  [color=darkseagreen4, key=1, label=context, style=dashed];
n206 -> n115  [color=darkseagreen4, key=1, label=context, style=dashed];
n207 -> n158  [color=darkseagreen4, key=1, label=context, style=dashed];
n207 -> n162  [color=darkseagreen4, key=1, label=context, style=dashed];
n208 -> n178  [color=darkseagreen4, key=1, label=context, style=dashed];
n208 -> n182  [color=darkseagreen4, key=1, label=context, style=dashed];
n1 -> n15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n3 -> n19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n23 -> n31  [color=darkseagreen4, key=1, label=context, style=dashed];
n24 -> n30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n35 -> n40  [color=darkseagreen4, key=1, label=context, style=dashed];
n36 -> n39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n43 -> n49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n44 -> n53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n58 -> n65  [color=darkseagreen4, key=1, label=context, style=dashed];
n58 -> n79  [color=darkseagreen4, key=1, label=context, style=dashed];
n58 -> n66  [color=darkseagreen4, key=1, label=context, style=dashed];
n58 -> n83  [color=darkseagreen4, key=1, label=context, style=dashed];
n58 -> n68  [color=darkseagreen4, key=1, label=context, style=dashed];
n65 -> n78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n66 -> n82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n60 -> n72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n62 -> n75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n67 -> n85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n89 -> n97  [color=darkseagreen4, key=1, label=context, style=dashed];
n89 -> n111  [color=darkseagreen4, key=1, label=context, style=dashed];
n89 -> n98  [color=darkseagreen4, key=1, label=context, style=dashed];
n89 -> n115  [color=darkseagreen4, key=1, label=context, style=dashed];
n89 -> n99  [color=darkseagreen4, key=1, label=context, style=dashed];
n97 -> n110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n98 -> n114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n91 -> n101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n93 -> n104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n96 -> n107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n118 -> n120  [color=darkseagreen4, key=1, label=context, style=dashed];
n119 -> n124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n121 -> n127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n132 -> n134  [color=darkseagreen4, key=1, label=context, style=dashed];
n133 -> n137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n135 -> n140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n145 -> n150  [color=darkseagreen4, key=1, label=context, style=dashed];
n145 -> n158  [color=darkseagreen4, key=1, label=context, style=dashed];
n145 -> n151  [color=darkseagreen4, key=1, label=context, style=dashed];
n145 -> n162  [color=darkseagreen4, key=1, label=context, style=dashed];
n145 -> n153  [color=darkseagreen4, key=1, label=context, style=dashed];
n146 -> n148  [color=darkseagreen4, key=1, label=filter1, style=dashed];
n146 -> n150  [color=darkseagreen4, key=1, label=filter1, style=dashed];
n150 -> n157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n151 -> n161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n147 -> n149  [color=darkseagreen4, key=1, label=filter2, style=dashed];
n147 -> n151  [color=darkseagreen4, key=1, label=filter2, style=dashed];
n152 -> n164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n168 -> n173  [color=darkseagreen4, key=1, label=context, style=dashed];
n168 -> n178  [color=darkseagreen4, key=1, label=context, style=dashed];
n168 -> n174  [color=darkseagreen4, key=1, label=context, style=dashed];
n168 -> n182  [color=darkseagreen4, key=1, label=context, style=dashed];
n168 -> n175  [color=darkseagreen4, key=1, label=context, style=dashed];
n169 -> n171  [color=darkseagreen4, key=1, label=filter1, style=dashed];
n169 -> n173  [color=darkseagreen4, key=1, label=filter1, style=dashed];
n173 -> n177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n174 -> n181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n170 -> n172  [color=darkseagreen4, key=1, label=filter2, style=dashed];
n170 -> n174  [color=darkseagreen4, key=1, label=filter2, style=dashed];
n185 -> n187  [color=darkseagreen4, key=1, label=context, style=dashed];
n185 -> n188  [color=darkseagreen4, key=1, label=context, style=dashed];
n191 -> n193  [color=darkseagreen4, key=1, label=connectionMock, style=dashed];
n192 -> n198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=handler, style=dashed];
m1_35 -> m1_42  [color=darkseagreen4, key=1, label=handler, style=dashed];
m1_36 -> m1_42  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_37 -> m1_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1 -> m1_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_26 -> m1_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_44 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m1_44 -> m1_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m1_44 -> m1_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m1_44 -> m1_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m1_45 -> m1_42  [color=darkseagreen4, key=1, label=handler, style=dashed];
m1_46 -> m1_42  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_18 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m9_50 -> m9_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>", style=dashed];
m9_51 -> m9_55  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_51 -> m9_56  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_52 -> m9_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_43 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_43 -> m9_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_43 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_43 -> m9_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_43 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_43 -> m9_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_43 -> m9_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_181 -> m9_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_181 -> m9_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_181 -> m9_202  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m9_178 -> m9_190  [color=darkseagreen4, key=1, label=stats, style=dashed];
m9_182 -> m9_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_146 -> m9_231  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_213 -> m9_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_213 -> m9_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_213 -> m9_215  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m9_213 -> m9_216  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m9_212 -> m9_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_212 -> m9_214  [color=darkseagreen4, key=1, label=keys, style=dashed];
m9_214 -> m9_216  [color=darkseagreen4, key=1, label=key, style=dashed];
m9_205 -> m9_209  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m9_206 -> m9_209  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_206 -> m9_219  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_206 -> m9_221  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_217 -> m9_221  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_217 -> m9_223  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_218 -> m9_221  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_218 -> m9_222  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_207 -> m9_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_211 -> m9_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_222 -> m9_222  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_152 -> m9_157  [color=darkseagreen4, key=1, label=multi, style=dashed];
m9_156 -> m9_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_156 -> m9_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_157 -> m9_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_6 -> m9_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_6 -> m9_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m9_105 -> m9_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_97 -> m9_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_24 -> m9_26  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m9_38 -> m9_46  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m9_36 -> m9_39  [color=green, key=1, label="lambda expression", style=dashed];
m9_73 -> m9_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_124 -> m9_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_87 -> m9_89  [color=darkseagreen4, key=1, label=servers, style=dashed];
m9_88 -> m9_92  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_82 -> m9_266  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_249 -> m9_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_249 -> m9_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_249 -> m9_251  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m9_249 -> m9_252  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m9_248 -> m9_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_248 -> m9_250  [color=darkseagreen4, key=1, label=keys, style=dashed];
m9_250 -> m9_252  [color=darkseagreen4, key=1, label=key, style=dashed];
m9_247 -> m9_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_247 -> m9_255  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m9_241 -> m9_244  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m9_241 -> m9_245  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m9_253 -> m9_257  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_253 -> m9_259  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_254 -> m9_257  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_254 -> m9_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_243 -> m9_245  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_243 -> m9_257  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_242 -> m9_244  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m9_258 -> m9_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_113 -> m9_115  [color=darkseagreen4, key=1, label=queues, style=dashed];
m9_114 -> m9_117  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_132 -> m9_134  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m9_133 -> m9_136  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_275 -> m9_36  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_144  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_148  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_275 -> m9_175  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m9_278 -> m9_266  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_277 -> m9_231  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_276 -> m9_202  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m11_76 -> m11_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_79 -> m11_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_69 -> m11_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_53 -> m11_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_54 -> m11_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_6 -> m11_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_7 -> m11_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_8 -> m11_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_27 -> m11_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_82 -> m11_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_92 -> m11_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_92 -> m11_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m15_97 -> m15_102  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_98 -> m15_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_58 -> m15_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_137 -> m15_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_138 -> m15_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_79 -> m15_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_123 -> m15_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_124 -> m15_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_125 -> m15_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_125 -> m15_127  [color=darkseagreen4, key=1, label=exception, style=dashed];
m15_146 -> m15_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_147 -> m15_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_157 -> m15_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_105 -> m15_110  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_106 -> m15_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_166 -> m15_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_172 -> m15_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_89 -> m15_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_66 -> m15_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_72 -> m15_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_50 -> m15_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_33 -> m15_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_43 -> m15_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_116 -> m15_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_6 -> m15_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_9 -> m15_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_184 -> m15_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_89  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_116  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_124  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_142  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_160  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_165  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_179  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_184 -> m15_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m15_185 -> m15_102  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_186 -> m15_110  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_187 -> m15_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_188 -> m15_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m15_189 -> m15_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m16_5 -> m16_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_50 -> m16_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_53 -> m16_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_36 -> m16_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_37 -> m16_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_19 -> m16_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_27 -> m16_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_64 -> m16_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_27  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_60  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m16_64 -> m16_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m18_86 -> m18_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_89 -> m18_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_90 -> m18_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_52 -> m18_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_53 -> m18_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_0 -> m18_7  [color=darkseagreen4, key=1, label="HangFire.States.IStateHandler", style=dashed];
m18_7 -> m18_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_15 -> m18_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_106 -> m18_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_107 -> m18_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_10 -> m18_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_22 -> m18_7  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m18_22 -> m18_16  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m18_22 -> m18_18  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m18_34 -> m18_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_59 -> m18_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_77 -> m18_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_71 -> m18_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_74 -> m18_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_118 -> m18_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m18_118 -> m18_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DelayedJobScheduler", style=dashed];
m19_4 -> m19_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_5 -> m19_13  [color=green, key=1, label=job, style=dashed];
m19_5 -> m19_16  [color=green, key=1, label=job, style=dashed];
m19_11 -> m19_13  [color=green, key=1, label=job, style=dashed];
m19_11 -> m19_16  [color=green, key=1, label=job, style=dashed];
m19_14 -> m19_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_7 -> m19_10  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m21_18 -> m21_20  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_18 -> m21_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_19 -> m21_29  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_19 -> m21_30  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_21 -> m21_28  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m21_21 -> m21_29  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m21_23 -> m21_29  [color=darkseagreen4, key=1, label=value, style=dashed];
m21_40 -> m21_5  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m21_40 -> m21_9  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m22_11 -> m22_14  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m22_2 -> m22_6  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m22_17 -> m22_5  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m22_17 -> m22_6  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m22_17 -> m22_14  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m23_0 -> m23_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_3 -> m23_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_39 -> m23_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_55 -> m23_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_47 -> m23_49  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m23_47 -> m23_51  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m23_47 -> m23_54  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_47 -> m23_55  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_47 -> m23_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_47 -> m23_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m23_47 -> m23_58  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_47 -> m23_59  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_47 -> m23_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m23_47 -> m23_61  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_47 -> m23_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_48 -> m23_52  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m23_48 -> m23_53  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m23_48 -> m23_54  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m23_48 -> m23_57  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m23_51 -> m23_54  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_51 -> m23_55  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_51 -> m23_57  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_51 -> m23_58  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_51 -> m23_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_51 -> m23_61  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_51 -> m23_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_58 -> m23_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_58 -> m23_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_58 -> m23_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_58 -> m23_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_58 -> m23_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_59 -> m23_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_60 -> m23_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_61 -> m23_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_124 -> m23_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_125 -> m23_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_4 -> m23_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_24 -> m23_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_24 -> m23_27  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_24 -> m23_30  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m23_24 -> m23_35  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m23_24 -> m23_37  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m23_25 -> m23_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_11 -> m23_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_12 -> m23_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_74 -> m23_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_45 -> m23_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_45 -> m23_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_45 -> m23_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_46 -> m23_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_46 -> m23_81  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_38 -> m23_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_18 -> m23_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_104 -> m23_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_105 -> m23_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_72 -> m23_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_72 -> m23_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_72 -> m23_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_72 -> m23_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_73 -> m23_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_75 -> m23_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_31 -> m23_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_32 -> m23_34  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m23_32 -> m23_35  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m23_33 -> m23_37  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_111 -> m23_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_111 -> m23_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_111 -> m23_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_112 -> m23_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_84 -> m23_87  [color=darkseagreen4, key=1, label=bool, style=dashed];
m23_84 -> m23_88  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m23_84 -> m23_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_84 -> m23_89  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m23_84 -> m23_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_84 -> m23_90  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_84 -> m23_91  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_84 -> m23_93  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m23_84 -> m23_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_29 -> m23_31  [color=darkseagreen4, key=1, label=changingFilters, style=dashed];
m23_85 -> m23_89  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_85 -> m23_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_85 -> m23_90  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_85 -> m23_91  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_85 -> m23_92  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_85 -> m23_93  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_85 -> m23_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m23_86 -> m23_92  [color=darkseagreen4, key=1, label=now, style=dashed];
m23_93 -> m23_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_108 -> m23_2  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_109 -> m23_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_110 -> m23_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_110 -> m23_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_110 -> m23_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m23_80 -> m23_82  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_87 -> m23_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_87 -> m23_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_87 -> m23_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_87 -> m23_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_87 -> m23_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_88 -> m23_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_88 -> m23_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_89 -> m23_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_89 -> m23_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_90 -> m23_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_117 -> m23_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_118 -> m23_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_131 -> m23_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_12  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_18  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_39  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_46  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_47  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_59  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_60  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_61  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_73  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_74  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_75  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_88  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_89  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_90  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_105  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_112  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_118  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_131 -> m23_125  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredValues", style=dashed];
m23_132 -> m23_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_133 -> m23_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_134 -> m23_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_135 -> m23_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_136 -> m23_15  [color=darkseagreen4, key=1, label=double, style=dashed];
m23_137 -> m23_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_138 -> m23_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_139 -> m23_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_140 -> m23_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_141 -> m23_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_142 -> m23_42  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m23_143 -> m23_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_143 -> m23_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_144 -> m23_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_145 -> m23_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_145 -> m23_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_145 -> m23_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_146 -> m23_64  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m23_146 -> m23_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m23_146 -> m23_70  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m23_147 -> m23_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_147 -> m23_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_148 -> m23_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_148 -> m23_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_148 -> m23_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_149 -> m23_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_150 -> m23_101  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m23_151 -> m23_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_152 -> m23_108  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m23_153 -> m23_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_154 -> m23_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_155 -> m23_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_156 -> m23_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_157 -> m23_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_158 -> m23_128  [color=darkseagreen4, key=1, label=int, style=dashed];
m23_159 -> m23_128  [color=darkseagreen4, key=1, label=int, style=dashed];
m24_16 -> m24_4  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m25_24 -> m25_26  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m25_30 -> m25_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Components.ExpirationManager", style=dashed];
m25_30 -> m25_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Components.ExpirationManager", style=dashed];
m25_30 -> m25_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Components.ExpirationManager", style=dashed];
}
