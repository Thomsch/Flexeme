digraph  {
n25 [label=string, span=""];
n26 [label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
n27 [label="Hangfire.JobStorage", span=""];
n0 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
n1 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43"];
n2 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
n3 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
n4 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
n5 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58"];
n6 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
n7 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
n8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75"];
n9 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
n10 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94"];
n11 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
n12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
n13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", label="app == null", span="115-115"];
n15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", label="SignatureConversions.AddConversions(app)", span="117-117"];
n16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123"];
n22 [cluster="lambda expression", label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123"];
n14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", label="throw new ArgumentNullException(''app'');", span="115-115"];
n19 [cluster="Unk.AddConversions", label="Entry Unk.AddConversions", span=""];
n17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
n18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n20 [cluster="Unk.Map", label="Entry Unk.Map", span=""];
n21 [cluster="lambda expression", label="Entry lambda expression", span="119-123"];
n23 [cluster="lambda expression", label="Exit lambda expression", span="119-123"];
n24 [cluster="Unk.>", label="Entry Unk.>", span=""];
m0_39 [cluster="string.Format(string, object, object, object)", file="InvocationDataFacts.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m0_33 [cluster="Hangfire.Dashboard.UrlHelper.Home()", file="InvocationDataFacts.cs", label="Entry Hangfire.Dashboard.UrlHelper.Home()", span="38-38"];
m0_12 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="InvocationDataFacts.cs", label="WriteLiteral(@''''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n            <div class=''''container'''' style=''''margin-bottom: 20px;''''>\r\n                '')", prediction=0, span="119-132"];
m0_13 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="InvocationDataFacts.cs", label="Write(RenderBody())", prediction=0, span="137-137"];
m0_14 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="InvocationDataFacts.cs", label="WriteLiteral(@''\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://hangfire.io/'''' target=''''_blank''''>Hangfire\r\n'')", prediction=0, span="142-151"];
m0_15 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="var version = GetType().Assembly.GetName().Version", span="157-157"];
m0_16 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="WriteLiteral(''                            '')", span="163-163"];
m0_17 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="Write(String.Format(''{0}.{1}.{2}'', version.Major, version.Minor, version.Build))", span="168-168"];
m0_18 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>'')", span="173-174"];
m0_36 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="InvocationDataFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119"];
m0_11 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="Write(AppPath)", span="114-114"];
m0_30 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="InvocationDataFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m0_19 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="Write(Storage)", span="179-179"];
m0_34 [cluster="Hangfire.Dashboard.Pages.Navigation.Navigation()", file="InvocationDataFacts.cs", label="Entry Hangfire.Dashboard.Pages.Navigation.Navigation()", span="25-25"];
m0_21 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="Write(DateTime.UtcNow)", span="189-189"];
m0_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34"];
m0_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="36-36"];
m0_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="37-37"];
m0_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", span="38-38"];
m0_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingDelay", span="39-39"];
m0_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", span="40-40"];
m0_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="41-41"];
m0_7 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", span="42-42"];
m0_8 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="FilterProvider = JobFilterProviders.Providers", span="44-44"];
m0_9 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="Activator = JobActivator.Current", span="45-45"];
m0_10 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34"];
m0_20 [cluster="Unk.Select", file="InvocationDataFacts.cs", label="Entry Unk.Select", span=""];
m0_22 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="90-90"];
m0_23 [cluster="lambda expression", file="InvocationDataFacts.cs", label="''''' + x + '''''", span="90-90"];
m0_24 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="90-90"];
m0_25 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m0_26 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="WriteLiteral(''\'\r\n                };\r\n            })(window.Hangfire = window.Hangfire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="216-217"];
m0_27 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="Write(Url.To(''/js''))", span="222-222"];
m0_28 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="227-227"];
m0_29 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", label="Exit Hangfire.Dashboard.Pages.LayoutPage.Execute()", span="40-40"];
m0_38 [cluster="System.Reflection.Assembly.GetName()", file="InvocationDataFacts.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m0_37 [cluster="object.GetType()", file="InvocationDataFacts.cs", label="Entry object.GetType()", span="0-0"];
m0_35 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="InvocationDataFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="82-82"];
m0_31 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="InvocationDataFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m0_40 [cluster="double.ToString(string)", file="InvocationDataFacts.cs", label="Entry double.ToString(string)", span="0-0"];
m0_32 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="InvocationDataFacts.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m0_41 [file="InvocationDataFacts.cs", label="Hangfire.Dashboard.Pages.LayoutPage", span=""];
m1_0 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="IRecurringJobManager.cs", label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m1_1 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="IRecurringJobManager.cs", label="Exit Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m1_4 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="IRecurringJobManager.cs", label="Entry Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m1_5 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="IRecurringJobManager.cs", label="Exit Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m1_2 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="IRecurringJobManager.cs", label="Entry Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m1_3 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="IRecurringJobManager.cs", label="Exit Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m2_66 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m2_40 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobManager.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m2_11 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", prediction=3, span="46-46"];
m2_12 [cluster="HangFire.Perform.Async(System.Type, object)", file="RecurringJobManager.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="27-27"];
m2_14 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="RecurringJobManager.cs", label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="12-12"];
m2_16 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=green, community=0, file="RecurringJobManager.cs", label="return In<TJob>(interval, null);", prediction=4, span="39-39"];
m2_23 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=green, community=0, file="RecurringJobManager.cs", label="return In(interval, jobType, null);", prediction=5, span="51-51"];
m2_26 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="RecurringJobManager.cs", label="return client.In(interval, jobType, args);", prediction=6, span="58-58"];
m2_25 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="RecurringJobManager.cs", label="var client = new JobClient()", prediction=7, span="56-56"];
m2_38 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="55-55"];
m2_67 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobManager.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m2_0 [cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager()", span="36-36"];
m2_1 [cluster="Hangfire.RecurringJobManager.RecurringJobManager()", color=green, community=0, file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager()", prediction=8, span="36-36"];
m2_2 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41"];
m2_50 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="93-93"];
m2_64 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.Trigger(string)", span="93-93"];
m2_71 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119"];
m2_79 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119"];
m2_89 [cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="RecurringJobManager.cs", label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0"];
m2_81 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m2_68 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_3 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41"];
m2_4 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", prediction=9, span="46-46"];
m2_42 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="69-69"];
m2_69 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobManager.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m2_13 [cluster="HangFire.Client.JobClient.JobClient()", file="RecurringJobManager.cs", label="Entry HangFire.Client.JobClient.JobClient()", span="7-7"];
m2_46 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m2_48 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="41-41"];
m2_41 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_47 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="51-51"];
m2_45 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobManager.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m2_65 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobManager.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m2_39 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs", label="Entry Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133"];
m2_86 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs", label="Exit Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133"];
m2_49 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m2_43 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobManager.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m2_44 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m2_80 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", file="RecurringJobManager.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", span="52-52"];
m2_87 [cluster="NCrontab.CrontabSchedule.Parse(string)", file="RecurringJobManager.cs", label="Entry NCrontab.CrontabSchedule.Parse(string)", span="93-93"];
m2_88 [cluster="NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", file="RecurringJobManager.cs", label="Entry NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", span="193-193"];
m2_70 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RecurringJobManager.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m2_90 [file="RecurringJobManager.cs", label="Hangfire.RecurringJobManager", span=""];
m3_18 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManagerExtensions.cs", label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m3_17 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", file="RecurringJobManagerExtensions.cs", label="Entry Hangfire.RecurringJobOptions.RecurringJobOptions()", span="27-27"];
m3_0 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", file="RecurringJobManagerExtensions.cs", label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", span="25-25"];
m3_2 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", file="RecurringJobManagerExtensions.cs", label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", span="25-25"];
m3_3 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManagerExtensions.cs", label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="34-34"];
m3_5 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManagerExtensions.cs", label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="34-34"];
m3_16 [cluster="Unk.nameof", file="RecurringJobManagerExtensions.cs", label="Entry Unk.nameof", span=""];
m3_6 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManagerExtensions.cs", label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="44-44"];
m3_14 [cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManagerExtensions.cs", label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="44-44"];
m4_61 [cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_150 [cluster="long.Parse(string)", file="RecurringJobOptions.cs", label="Entry long.Parse(string)", span="0-0"];
m4_201 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="318-318"];
m4_202 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                from,\r\n                from + perPage - 1)", span="321-324"];
m4_203 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'' },\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (job, jobData, state) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="326-337"];
m4_204 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="318-318"];
m4_250 [cluster="Dictionary<string, string>.cstr", file="RecurringJobOptions.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m4_219 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="421-421"];
m4_266 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var endDate = DateTime.UtcNow", span="424-424"];
m4_273 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="432-432"];
m4_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="433-433"];
m4_267 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var dates = new List<DateTime>()", span="425-425"];
m4_270 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="dates.Add(endDate)", span="428-428"];
m4_271 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="endDate = endDate.AddHours(-1)", span="429-429"];
m4_268 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var i = 0", span="426-426"];
m4_277 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="i < dates.Count", span="436-436"];
m4_281 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="result.Add(dates[i], value)", span="444-444"];
m4_269 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="i < 24", span="426-426"];
m4_272 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="i++", span="426-426"];
m4_275 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var result = new Dictionary<DateTime, long>()", span="435-435"];
m4_279 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="439-439"];
m4_276 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var i = 0", span="436-436"];
m4_283 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="return result;", span="447-447"];
m4_282 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="i++", span="436-436"];
m4_278 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="long value", span="438-438"];
m4_280 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="value = 0", span="441-441"];
m4_284 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="421-421"];
m4_94 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="450-450"];
m4_295 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var endDate = DateTime.UtcNow.Date", span="453-453"];
m4_302 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="464-464"];
m4_303 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="466-466"];
m4_296 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var startDate = endDate.AddDays(-7)", span="454-454"];
m4_298 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="startDate <= endDate", span="457-457"];
m4_299 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="dates.Add(endDate)", span="459-459"];
m4_300 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="endDate = endDate.AddDays(-1)", span="460-460"];
m4_297 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var dates = new List<DateTime>()", span="455-455"];
m4_301 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="463-463"];
m4_310 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="result.Add(dates[i], value)", span="476-476"];
m4_306 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="i < stringDates.Count", span="469-469"];
m4_304 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var result = new Dictionary<DateTime, long>()", span="468-468"];
m4_308 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="472-472"];
m4_305 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="var i = 0", span="469-469"];
m4_312 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="return result;", span="479-479"];
m4_311 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="i++", span="469-469"];
m4_307 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="long value", span="471-471"];
m4_309 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="value = 0", span="474-474"];
m4_313 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="450-450"];
m4_131 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RecurringJobOptions.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m4_208 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="340-340"];
m4_209 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                from, from + perPage - 1)", span="343-345"];
m4_210 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'', ''Fetched'' },\r\n                null,\r\n                (job, jobData, state) => new FetchedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                });", span="347-357"];
m4_211 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="340-340"];
m4_288 [cluster="Unk.TryParse", file="RecurringJobOptions.cs", label="Entry Unk.TryParse", span=""];
m4_40 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m4_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_41 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RecurringJobOptions.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m4_130 [cluster="int.Parse(string)", file="RecurringJobOptions.cs", label="Entry int.Parse(string)", span="0-0"];
m4_220 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="365-365"];
m4_221 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptions.cs", label="return GetHourlyTimelineStats(_redis, ''failed'');", span="367-367"];
m4_222 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="365-365"];
m4_369 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="544-544"];
m4_370 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="var stats = new StatisticsDto()", span="546-546"];
m4_371 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="548-548"];
m4_373 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:servers''),\r\n                    x => stats.Servers = x)", span="552-554"];
m4_374 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:queues''),\r\n                    x => stats.Queues = x)", span="556-558"];
m4_375 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                    x => stats.Scheduled = x)", span="560-562"];
m4_376 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:processing''),\r\n                    x => stats.Processing = x)", span="564-566"];
m4_377 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:succeeded''),\r\n                    x => stats.Succeeded = long.Parse(x ?? ''0''))", span="568-570"];
m4_378 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:failed''),\r\n                    x => stats.Failed = x)", span="572-574"];
m4_379 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:deleted''),\r\n                    x => stats.Deleted = long.Parse(x ?? ''0''))", span="576-578"];
m4_382 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                        x => stats.Enqueued += x)", span="583-585"];
m4_384 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="return stats;", span="591-591"];
m4_372 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="var pipeline = _redis.CreatePipeline()", span="550-550"];
m4_380 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label=queues, span="580-580"];
m4_383 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="pipeline.Flush()", span="588-588"];
m4_381 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="var queueName = queue", span="582-582"];
m4_385 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="544-544"];
m4_16 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m4_17 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptions.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="53-53"];
m4_18 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m4_34 [cluster="Unk.GetJobsWithProperties", file="RecurringJobOptions.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m4_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_360 [cluster="KeyValuePair<string, T>.cstr", file="RecurringJobOptions.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m4_66 [cluster="JobList<ScheduledJobDto>.cstr", file="RecurringJobOptions.cs", label="Entry JobList<ScheduledJobDto>.cstr", span=""];
m4_63 [cluster="Unk.CreatePipeline", file="RecurringJobOptions.cs", label="Entry Unk.CreatePipeline", span=""];
m4_443 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m4_341 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_223 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="370-370"];
m4_224 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="372-372"];
m4_228 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="var historyList = _redis.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="378-379"];
m4_225 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="job.Count == 0", span="373-373"];
m4_239 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="!job.ContainsKey(''Method'')", span="408-408"];
m4_240 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="job.Add(''Method'', null)", span="408-408"];
m4_241 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="!job.ContainsKey(''ParameterTypes'')", span="409-409"];
m4_242 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="job.Add(''ParameterTypes'', null)", span="409-409"];
m4_243 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="return new JobDetailsDto\r\n            {\r\n                Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                CreatedAt =\r\n                    job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?) null,\r\n                Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                History = stateHistory\r\n            };", span="411-418"];
m4_226 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="return null;", span="373-373"];
m4_227 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="var hiddenProperties = new[]\r\n            { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' }", span="375-376"];
m4_229 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="var history = historyList\r\n                .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                .ToList()", span="381-383"];
m4_230 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="385-385"];
m4_231 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label=history, span="386-386"];
m4_238 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="stateHistory.Add(dto)", span="404-404"];
m4_232 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="var dto = new StateHistoryDto\r\n                {\r\n                    StateName = entry[''State''],\r\n                    Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                    CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                }", span="388-393"];
m4_233 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="var stateData = new Dictionary<string, string>(entry)", span="398-398"];
m4_237 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="dto.Data = stateData", span="403-403"];
m4_234 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="stateData.Remove(''State'')", span="399-399"];
m4_235 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="stateData.Remove(''Reason'')", span="400-400"];
m4_236 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="stateData.Remove(''CreatedAt'')", span="401-401"];
m4_244 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="370-370"];
m4_248 [cluster="Unk.ContainsKey", file="RecurringJobOptions.cs", label="Entry Unk.ContainsKey", span=""];
m4_88 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m4_362 [cluster="Unk.selector", file="RecurringJobOptions.cs", label="Entry Unk.selector", span=""];
m4_366 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="539-539"];
m4_367 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptions.cs", label="return _redis.GetListCount(''hangfire:succeeded'');", span="541-541"];
m4_368 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="539-539"];
m4_346 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_386 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m4_60 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="RecurringJobOptions.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m4_129 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m4_246 [cluster="List<StateHistoryDto>.cstr", file="RecurringJobOptions.cs", label="Entry List<StateHistoryDto>.cstr", span=""];
m4_254 [cluster="Unk.Where", file="RecurringJobOptions.cs", label="Entry Unk.Where", span=""];
m4_151 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="244-244"];
m4_152 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs", label="var deletedJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:deleted'',\r\n                from,\r\n                from + count - 1)", span="246-249"];
m4_153 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                deletedJobIds,\r\n                null,\r\n                new[] { ''DeletedAt'', ''State'' },\r\n                (job, jobData, state) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="251-261"];
m4_154 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="244-244"];
m4_314 [cluster="System.DateTime.AddDays(double)", file="RecurringJobOptions.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m4_176 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="482-482"];
m4_321 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="jobIds.Count == 0", span="489-489"];
m4_323 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="491-491"];
m4_324 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="492-492"];
m4_325 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="properties = properties ?? new string[0]", span="494-494"];
m4_326 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="var pipeline = redis.CreatePipeline()", span="496-496"];
m4_327 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label=jobIds, span="498-498"];
m4_330 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="stateProperties != null", span="508-508"];
m4_331 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="510-512"];
m4_333 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="519-536"];
m4_322 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="489-489"];
m4_329 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="502-506"];
m4_332 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="pipeline.Flush()", span="516-516"];
m4_328 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="var id = jobId", span="500-500"];
m4_334 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="482-482"];
m4_361 [cluster="Unk.TrueForAll", file="RecurringJobOptions.cs", label="Entry Unk.TrueForAll", span=""];
m4_6 [cluster="Unk.Dispose", file="RecurringJobOptions.cs", label="Entry Unk.Dispose", span=""];
m4_252 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m4_87 [cluster="KeyValuePair<string, ScheduledJobDto>.cstr", file="RecurringJobOptions.cs", label="Entry KeyValuePair<string, ScheduledJobDto>.cstr", span=""];
m4_158 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m4_435 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="585-585"];
m4_37 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="83-90"];
m4_43 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="90-90"];
m4_38 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new ProcessingJobDto\r\n                {\r\n                    ServerId = state[2] ?? state[1],\r\n                    Job = job,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.StateName.Equals(\r\n                        state[3], StringComparison.OrdinalIgnoreCase),\r\n                }", span="83-90"];
m4_39 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="83-90"];
m4_44 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.Value.StartedAt", span="90-90"];
m4_45 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="90-90"];
m4_75 [cluster="lambda expression", file="RecurringJobOptions.cs", label="jobs.Add(job.Key, x)", span="118-118"];
m4_85 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new KeyValuePair<string, ScheduledJobDto>(\r\n                    job.Key,\r\n                    new ScheduledJobDto\r\n                    {\r\n                        EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                        ScheduledAt = states[job.Key].Count > 1 ? JobHelper.FromNullableStringTimestamp(states[job.Key][1]) : null,\r\n                        InScheduledState =\r\n                            ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="131-140"];
m4_82 [cluster="lambda expression", file="RecurringJobOptions.cs", label="states.Add(job.Key, x)", span="124-124"];
m4_70 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' })", span="115-117"];
m4_79 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            new [] { ''State'', ''ScheduledAt'' })", span="121-123"];
m4_69 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="115-117"];
m4_74 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="118-118"];
m4_78 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="121-123"];
m4_81 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="124-124"];
m4_84 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="131-140"];
m4_71 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="115-117"];
m4_76 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="118-118"];
m4_80 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="121-123"];
m4_83 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="124-124"];
m4_86 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="131-140"];
m4_117 [cluster="lambda expression", file="RecurringJobOptions.cs", label="servers.Add(name, x)", span="176-176"];
m4_127 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }", span="187-194"];
m4_124 [cluster="lambda expression", file="RecurringJobOptions.cs", label="queues.Add(name, x)", span="181-181"];
m4_114 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="173-175"];
m4_120 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name))", span="179-180"];
m4_113 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="173-175"];
m4_116 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="176-176"];
m4_119 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="179-180"];
m4_123 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="181-181"];
m4_126 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="187-194"];
m4_115 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="173-175"];
m4_118 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="176-176"];
m4_121 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="179-180"];
m4_125 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="181-181"];
m4_128 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="187-194"];
m4_137 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="209-218"];
m4_138 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = state[5],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                }", span="209-218"];
m4_139 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="209-218"];
m4_146 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="233-241"];
m4_147 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    TotalDuration = state[1] != null && state[2] != null\r\n                        ? (long?)long.Parse(state[1]) + (long?)long.Parse(state[2])\r\n                        : null,\r\n                    InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                }", span="233-241"];
m4_148 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="233-241"];
m4_155 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="256-261"];
m4_156 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="256-261"];
m4_157 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="256-261"];
m4_180 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="278-279"];
m4_186 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="283-283"];
m4_192 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="287-287"];
m4_179 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="278-279"];
m4_182 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="280-280"];
m4_185 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="283-283"];
m4_188 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="284-284"];
m4_191 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="287-287"];
m4_194 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="288-288"];
m4_197 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="298-304"];
m4_181 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="278-279"];
m4_183 [cluster="lambda expression", file="RecurringJobOptions.cs", label="firstJobIds = x", span="280-280"];
m4_184 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="280-280"];
m4_187 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="283-283"];
m4_189 [cluster="lambda expression", file="RecurringJobOptions.cs", label="length = x", span="284-284"];
m4_190 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="284-284"];
m4_193 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="287-287"];
m4_195 [cluster="lambda expression", file="RecurringJobOptions.cs", label="fetched = x", span="288-288"];
m4_196 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="288-288"];
m4_198 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="298-304"];
m4_199 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="298-304"];
m4_205 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="331-337"];
m4_206 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="331-337"];
m4_207 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="331-337"];
m4_212 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="352-357"];
m4_213 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new FetchedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                }", span="352-357"];
m4_214 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="352-357"];
m4_257 [cluster="lambda expression", file="RecurringJobOptions.cs", label="!hiddenProperties.Contains(x.Key)", span="416-416"];
m4_256 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="416-416"];
m4_260 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="416-416"];
m4_263 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="416-416"];
m4_258 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="416-416"];
m4_261 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.Key", span="416-416"];
m4_262 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="416-416"];
m4_264 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.Value", span="416-416"];
m4_265 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="416-416"];
m4_291 [cluster="lambda expression", file="RecurringJobOptions.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="432-432"];
m4_290 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="432-432"];
m4_292 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="432-432"];
m4_319 [cluster="lambda expression", file="RecurringJobOptions.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="464-464"];
m4_315 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="463-463"];
m4_318 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="464-464"];
m4_316 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.ToString(''yyyy-MM-dd'')", span="463-463"];
m4_317 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="463-463"];
m4_320 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="464-464"];
m4_348 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="511-511"];
m4_358 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="531-535"];
m4_343 [cluster="lambda expression", file="RecurringJobOptions.cs", label="!jobs.ContainsKey(id)", span="506-506"];
m4_344 [cluster="lambda expression", file="RecurringJobOptions.cs", label="jobs.Add(id, x)", span="506-506"];
m4_355 [cluster="lambda expression", file="RecurringJobOptions.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="520-530"];
m4_351 [cluster="lambda expression", file="RecurringJobOptions.cs", label="!states.ContainsKey(id)", span="512-512"];
m4_352 [cluster="lambda expression", file="RecurringJobOptions.cs", label="states.Add(id, x)", span="512-512"];
m4_338 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray())", span="503-505"];
m4_337 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="503-505"];
m4_342 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="506-506"];
m4_347 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="511-511"];
m4_350 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="512-512"];
m4_354 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="520-530"];
m4_357 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="531-535"];
m4_339 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="503-505"];
m4_345 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="506-506"];
m4_349 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="511-511"];
m4_353 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="512-512"];
m4_356 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="520-530"];
m4_359 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="531-535"];
m4_363 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="533-533"];
m4_364 [cluster="lambda expression", file="RecurringJobOptions.cs", label="y == null", span="533-533"];
m4_365 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="533-533"];
m4_392 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Servers = x", span="554-554"];
m4_398 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Queues = x", span="558-558"];
m4_404 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Scheduled = x", span="562-562"];
m4_410 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Processing = x", span="566-566"];
m4_417 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="570-570"];
m4_424 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Failed = x", span="574-574"];
m4_430 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Deleted = long.Parse(x ?? ''0'')", span="578-578"];
m4_436 [cluster="lambda expression", file="RecurringJobOptions.cs", label="stats.Enqueued += x", span="585-585"];
m4_387 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="553-553"];
m4_391 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="554-554"];
m4_394 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="557-557"];
m4_397 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="558-558"];
m4_400 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="561-561"];
m4_403 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="562-562"];
m4_406 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="565-565"];
m4_409 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="566-566"];
m4_412 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="569-569"];
m4_416 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="570-570"];
m4_420 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="573-573"];
m4_423 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="574-574"];
m4_426 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="577-577"];
m4_429 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="578-578"];
m4_433 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="584-584"];
m4_432 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Entry lambda expression", span="584-584"];
m4_388 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetSetCount(''hangfire:servers'')", span="553-553"];
m4_389 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="553-553"];
m4_393 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="554-554"];
m4_395 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetSetCount(''hangfire:queues'')", span="557-557"];
m4_396 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="557-557"];
m4_399 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="558-558"];
m4_401 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="561-561"];
m4_402 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="561-561"];
m4_405 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="562-562"];
m4_407 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="565-565"];
m4_408 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="565-565"];
m4_411 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="566-566"];
m4_413 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="569-569"];
m4_414 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="569-569"];
m4_418 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="570-570"];
m4_421 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="573-573"];
m4_422 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="573-573"];
m4_425 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="574-574"];
m4_427 [cluster="lambda expression", file="RecurringJobOptions.cs", label="x.GetValue(''hangfire:stats:deleted'')", span="577-577"];
m4_428 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="577-577"];
m4_431 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="578-578"];
m4_434 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="584-584"];
m4_437 [cluster="lambda expression", file="RecurringJobOptions.cs", label="Exit lambda expression", span="585-585"];
m4_32 [cluster="Unk.GetRangeFromSortedSet", file="RecurringJobOptions.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m4_177 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m4_178 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_68 [cluster="Unk.ToList", file="RecurringJobOptions.cs", label="Entry Unk.ToList", span=""];
m4_72 [cluster="Unk.Format", file="RecurringJobOptions.cs", label="Entry Unk.Format", span=""];
m4_64 [cluster="Unk.QueueCommand", file="RecurringJobOptions.cs", label="Entry Unk.QueueCommand", span=""];
m4_90 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="594-594"];
m4_438 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs", label="return new InvocationData(\r\n                    type,\r\n                    method,\r\n                    parameterTypes,\r\n                    arguments).Deserialize();", span="599-603"];
m4_439 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs", label=Exception, span="605-605"];
m4_440 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs", label="return null;", span="607-607"];
m4_441 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="594-594"];
m4_0 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", file="RecurringJobOptions.cs", label="Entry Hangfire.RecurringJobOptions.RecurringJobOptions()", span="27-27"];
m4_1 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", color=green, community=0, file="RecurringJobOptions.cs", label="TimeZone = TimeZoneInfo.Utc", prediction=10, span="29-29"];
m4_2 [cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", color=green, community=0, file="RecurringJobOptions.cs", label="QueueName = EnqueuedState.DefaultQueue", prediction=11, span="30-30"];
m4_132 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="197-197"];
m4_133 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs", label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                ''hangfire:failed'',\r\n                from,\r\n                from + count - 1)", span="199-202"];
m4_134 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                failedJobIds,\r\n                null,\r\n                new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                (job, jobData, state) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = state[5],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                });", span="204-218"];
m4_135 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="197-197"];
m4_215 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m4_293 [cluster="System.DateTime.ToString(string)", file="RecurringJobOptions.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m4_175 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RecurringJobOptions.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m4_287 [cluster="Unk.ElementAt", file="RecurringJobOptions.cs", label="Entry Unk.ElementAt", span=""];
m4_98 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="154-154"];
m4_99 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="156-156"];
m4_100 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="serverNames.Count == 0", span="158-158"];
m4_105 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label=serverNames, span="168-168"];
m4_110 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="return serverNames.Select(x => new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }).ToList();", span="187-194"];
m4_101 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="return new List<ServerDto>();", span="160-160"];
m4_102 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="var servers = new Dictionary<string, List<string>>()", span="163-163"];
m4_103 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="var queues = new Dictionary<string, List<string>>()", span="164-164"];
m4_107 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                        x => servers.Add(name, x))", span="172-176"];
m4_104 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="var pipeline = _redis.CreatePipeline()", span="166-166"];
m4_108 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name)),\r\n                        x => queues.Add(name, x))", span="178-181"];
m4_109 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="pipeline.Flush()", span="184-184"];
m4_106 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="var name = serverName", span="170-170"];
m4_111 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="154-154"];
m4_25 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="66-66"];
m4_26 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptions.cs", label="return _redis.GetListCount(''hangfire:deleted'');", span="68-68"];
m4_27 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="66-66"];
m4_145 [cluster="Unk.GetRangeFromList", file="RecurringJobOptions.cs", label="Entry Unk.GetRangeFromList", span=""];
m4_141 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="221-221"];
m4_142 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs", label="var succeededJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:succeeded'',\r\n                from,\r\n                from + count - 1)", span="223-226"];
m4_143 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                succeededJobIds,\r\n                null,\r\n                new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                (job, jobData, state) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    TotalDuration = state[1] != null && state[2] != null\r\n                        ? (long?)long.Parse(state[1]) + (long?)long.Parse(state[2])\r\n                        : null,\r\n                    InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                });", span="228-241"];
m4_144 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="221-221"];
m4_91 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="144-144"];
m4_92 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptions.cs", label="return GetTimelineStats(_redis, ''succeeded'');", span="146-146"];
m4_93 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="144-144"];
m4_65 [cluster="Unk.Flush", file="RecurringJobOptions.cs", label="Entry Unk.Flush", span=""];
m4_419 [cluster="Unk.Parse", file="RecurringJobOptions.cs", label="Entry Unk.Parse", span=""];
m4_77 [cluster="Unk.Add", file="RecurringJobOptions.cs", label="Entry Unk.Add", span=""];
m4_42 [cluster="string.Equals(string, System.StringComparison)", file="RecurringJobOptions.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m4_19 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m4_20 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptions.cs", label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="58-58"];
m4_21 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m4_285 [cluster="System.DateTime.AddHours(double)", file="RecurringJobOptions.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m4_28 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="71-71"];
m4_29 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs", label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                ''hangfire:processing'',\r\n                from,\r\n                from + count - 1)", span="74-77"];
m4_30 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs", label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                (job, jobData, state) => new ProcessingJobDto\r\n                {\r\n                    ServerId = state[2] ?? state[1],\r\n                    Job = job,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.StateName.Equals(\r\n                        state[3], StringComparison.OrdinalIgnoreCase),\r\n                }).OrderBy(x => x.Value.StartedAt).ToList());", span="79-90"];
m4_31 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="71-71"];
m4_10 [cluster="Unk.GetSortedSetCount", file="RecurringJobOptions.cs", label="Entry Unk.GetSortedSetCount", span=""];
m4_149 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m4_22 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m4_23 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptions.cs", label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="63-63"];
m4_24 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m4_340 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m4_251 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m4_336 [cluster="JobList<T>.cstr", file="RecurringJobOptions.cs", label="Entry JobList<T>.cstr", span=""];
m4_289 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_442 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m4_216 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="360-360"];
m4_217 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptions.cs", label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="362-362"];
m4_218 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="360-360"];
m4_294 [cluster="string.Format(string, object, object)", file="RecurringJobOptions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_245 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobOptions.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m4_255 [cluster="Unk.ToDictionary", file="RecurringJobOptions.cs", label="Entry Unk.ToDictionary", span=""];
m4_249 [cluster="Unk.FromStringTimestamp", file="RecurringJobOptions.cs", label="Entry Unk.FromStringTimestamp", span=""];
m4_335 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m4_390 [cluster="Unk.GetSetCount", file="RecurringJobOptions.cs", label="Entry Unk.GetSetCount", span=""];
m4_89 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="RecurringJobOptions.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m4_14 [cluster="string.Format(string, object)", file="RecurringJobOptions.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_95 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="149-149"];
m4_96 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptions.cs", label="return GetTimelineStats(_redis, ''failed'');", span="151-151"];
m4_97 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="149-149"];
m4_200 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m4_140 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m4_159 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="264-264"];
m4_160 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="266-266"];
m4_161 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="267-267"];
m4_162 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label=queues, span="269-269"];
m4_172 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue,\r\n                    FirstJobs = jobs,\r\n                    Length = length,\r\n                    Fetched = fetched\r\n                })", span="306-312"];
m4_173 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="return result;", span="315-315"];
m4_163 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="IList<string> firstJobIds = null", span="271-271"];
m4_167 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                        x => firstJobIds = x)", span="277-280"];
m4_168 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                        x => length = x)", span="282-284"];
m4_169 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                        x => fetched = x)", span="286-288"];
m4_164 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="long length = 0", span="272-272"];
m4_165 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="long fetched = 0", span="273-273"];
m4_166 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="var pipeline = _redis.CreatePipeline()", span="275-275"];
m4_170 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="pipeline.Flush()", span="290-290"];
m4_171 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="var jobs = GetJobsWithProperties(\r\n                    _redis,\r\n                    firstJobIds,\r\n                    new [] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="293-304"];
m4_174 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="264-264"];
m4_253 [cluster="Unk.TryToGetJob", file="RecurringJobOptions.cs", label="Entry Unk.TryToGetJob", span=""];
m4_15 [cluster="Unk.GetListCount", file="RecurringJobOptions.cs", label="Entry Unk.GetListCount", span=""];
m4_46 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="93-93"];
m4_47 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                ''hangfire:schedule'',\r\n                from,\r\n                from + count - 1)", span="95-98"];
m4_48 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="scheduledJobs.Count == 0", span="100-100"];
m4_53 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label=scheduledJobs, span="110-110"];
m4_58 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="return new JobList<ScheduledJobDto>(scheduledJobs\r\n                .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                    job.Key,\r\n                    new ScheduledJobDto\r\n                    {\r\n                        EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                        ScheduledAt = states[job.Key].Count > 1 ? JobHelper.FromNullableStringTimestamp(states[job.Key][1]) : null,\r\n                        InScheduledState =\r\n                            ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                    }))\r\n                .ToList());", span="130-141"];
m4_49 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());", span="102-102"];
m4_50 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="var jobs = new Dictionary<string, List<string>>()", span="105-105"];
m4_51 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="var states = new Dictionary<string, List<String>>()", span="106-106"];
m4_55 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                        x => jobs.Add(job.Key, x))", span="114-118"];
m4_52 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="var pipeline = _redis.CreatePipeline()", span="108-108"];
m4_56 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            new [] { ''State'', ''ScheduledAt'' }),\r\n                        x => states.Add(job.Key, x))", span="120-124"];
m4_57 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="pipeline.Flush()", span="127-127"];
m4_54 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="var job = scheduledJob", span="112-112"];
m4_59 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="93-93"];
m4_62 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobOptions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_33 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m4_11 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m4_12 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptions.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="48-48"];
m4_13 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m4_3 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m4_286 [cluster="Unk.GetValuesMap", file="RecurringJobOptions.cs", label="Entry Unk.GetValuesMap", span=""];
m4_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptions.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m4_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptions.cs", label="return _redis.GetSortedSetCount(''hangfire:schedule'');", span="43-43"];
m4_9 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m4_122 [cluster="Unk.GetAllItemsFromList", file="RecurringJobOptions.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m4_259 [cluster="Unk.Contains", file="RecurringJobOptions.cs", label="Entry Unk.Contains", span=""];
m4_67 [cluster="Unk.Select", file="RecurringJobOptions.cs", label="Entry Unk.Select", span=""];
m4_4 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RecurringJobOptions.cs", label="Hangfire.RecurringJobOptions", span=""];
m4_5 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RecurringJobOptions.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m4_247 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="RecurringJobOptions.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m4_112 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobOptions.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m4_136 [cluster="Unk.GetRangeFromSortedSetDesc", file="RecurringJobOptions.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m4_415 [cluster="Unk.GetValue", file="RecurringJobOptions.cs", label="Entry Unk.GetValue", span=""];
m4_73 [cluster="Unk.GetValuesFromHash", file="RecurringJobOptions.cs", label="Entry Unk.GetValuesFromHash", span=""];
m4_444 [file="RecurringJobOptions.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m4_445 [file="RecurringJobOptions.cs", label=job, span=""];
m4_446 [file="RecurringJobOptions.cs", label=jobs, span=""];
m4_447 [file="RecurringJobOptions.cs", label=states, span=""];
m4_448 [file="RecurringJobOptions.cs", label=name, span=""];
m4_449 [file="RecurringJobOptions.cs", label=servers, span=""];
m4_450 [file="RecurringJobOptions.cs", label=queues, span=""];
m4_451 [file="RecurringJobOptions.cs", label=queue, span=""];
m4_452 [file="RecurringJobOptions.cs", label=hiddenProperties, span=""];
m4_453 [file="RecurringJobOptions.cs", label=string, span=""];
m4_454 [file="RecurringJobOptions.cs", label=string, span=""];
m4_455 [file="RecurringJobOptions.cs", label="string[]", span=""];
m4_456 [file="RecurringJobOptions.cs", label=id, span=""];
m4_457 [file="RecurringJobOptions.cs", label=jobs, span=""];
m4_458 [file="RecurringJobOptions.cs", label="string[]", span=""];
m4_459 [file="RecurringJobOptions.cs", label=states, span=""];
m4_460 [file="RecurringJobOptions.cs", label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m4_461 [file="RecurringJobOptions.cs", label=stats, span=""];
m4_462 [file="RecurringJobOptions.cs", label=queueName, span=""];
m5_52 [cluster="System.Threading.Thread.Join()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m5_31 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m5_16 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.Dispose()", span="40-40"];
m5_17 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs", label="_redis.Dispose()", span="42-42"];
m5_18 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.Dispose()", span="40-40"];
m5_36 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67"];
m5_37 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label=true, span="71-71"];
m5_38 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="!EnqueueNextScheduledJob()", span="73-73"];
m5_40 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label=OperationCanceledException, span="79-79"];
m5_41 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label=ThreadInterruptedException, span="82-82"];
m5_42 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label=Exception, span="85-85"];
m5_39 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="Thread.Sleep(_pollInterval)", span="75-75"];
m5_43 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="87-90"];
m5_44 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67"];
m5_15 [cluster="Unk.EnqueueScheduledJob", file="RecurringJobsPage.generated.cs", label="Entry Unk.EnqueueScheduledJob", span=""];
m5_27 [cluster="string.Format(string, object)", file="RecurringJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_20 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45"];
m5_21 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="47-47"];
m5_24 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="52-54"];
m5_25 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="58-62"];
m5_22 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="48-48"];
m5_23 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="!String.IsNullOrEmpty(queue)", span="50-50"];
m5_26 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45"];
m5_11 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m5_29 [cluster="Unk.TryToGetQueue", file="RecurringJobsPage.generated.cs", label="Entry Unk.TryToGetQueue", span=""];
m5_33 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m5_45 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m5_51 [cluster="System.Threading.Thread.Interrupt()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.Thread.Interrupt()", span="0-0"];
m5_0 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m5_1 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="_pollInterval = pollInterval", span="19-19"];
m5_2 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m5_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobsPage.generated.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m5_30 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobsPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_19 [cluster="Unk.Dispose", file="RecurringJobsPage.generated.cs", label="Entry Unk.Dispose", span=""];
m5_47 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="94-94"];
m5_48 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="thread.Interrupt()", span="96-96"];
m5_49 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="thread.Join()", span="97-97"];
m5_50 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="94-94"];
m5_46 [cluster="Unk.Fatal", file="RecurringJobsPage.generated.cs", label="Entry Unk.Fatal", span=""];
m5_13 [cluster="Unk.FirstOrDefault", file="RecurringJobsPage.generated.cs", label="Entry Unk.FirstOrDefault", span=""];
m5_32 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m5_28 [cluster="Unk.GetValueFromHash", file="RecurringJobsPage.generated.cs", label="Entry Unk.GetValueFromHash", span=""];
m5_14 [cluster="Unk.IsNullOrEmpty", file="RecurringJobsPage.generated.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m5_35 [cluster="Unk.Format", file="RecurringJobsPage.generated.cs", label="Entry Unk.Format", span=""];
m5_12 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RecurringJobsPage.generated.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m5_3 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22"];
m5_4 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="24-24"];
m5_5 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="26-29"];
m5_6 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="String.IsNullOrEmpty(jobId)", span="31-31"];
m5_8 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="EnqueueScheduledJob(jobId)", span="36-36"];
m5_7 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="return false;", span="33-33"];
m5_9 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="return true;", span="37-37"];
m5_10 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22"];
m5_53 [file="RecurringJobsPage.generated.cs", label="HangFire.Server.SchedulePoller", span=""];
m6_11 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerStorageOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m6_12 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerStorageOptions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m6_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
m6_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="TransactionIsolationLevel = null", prediction=12, span="32-32"];
m6_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", prediction=13, span="33-33"];
m6_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", prediction=14, span="35-35"];
m6_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="JobExpirationCheckInterval = TimeSpan.FromMinutes(30)", prediction=15, span="37-37"];
m6_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", prediction=16, span="38-38"];
m6_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="PrepareSchemaIfNecessary = true", prediction=17, span="39-39"];
m6_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="DashboardJobListLimit = 10000", prediction=18, span="40-40"];
m6_8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="_schemaName = Constants.DefaultSchema", prediction=19, span="41-41"];
m6_9 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="TransactionTimeout = TimeSpan.FromMinutes(1)", prediction=20, span="42-42"];
m6_10 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
m6_13 [file="SqlServerStorageOptions.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m7_51 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="StackTraceParser.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m7_0 [cluster="Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", file="StackTraceParser.cs", label="Entry Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", span="73-73"];
m7_4 [cluster="Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", file="StackTraceParser.cs", label="Exit Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", span="73-73"];
m7_45 [cluster="Unk.Range", file="StackTraceParser.cs", label="Entry Unk.Range", span=""];
m7_27 [cluster="System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>.Invoke(T1, T2, T3, T4, T5, T6, T7)", file="StackTraceParser.cs", label="Entry System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>.Invoke(T1, T2, T3, T4, T5, T6, T7)", span="0-0"];
m7_46 [cluster="Unk.parametersSelector", file="StackTraceParser.cs", label="Entry Unk.parametersSelector", span=""];
m7_42 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="StackTraceParser.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m7_47 [cluster="System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", file="StackTraceParser.cs", label="Entry System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", span="0-0"];
m7_6 [cluster="Unk.nameof", file="StackTraceParser.cs", label="Entry Unk.nameof", span=""];
m7_44 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="StackTraceParser.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m7_24 [cluster="lambda expression", file="StackTraceParser.cs", label="Entry lambda expression", span="85-85"];
m7_8 [cluster="lambda expression", file="StackTraceParser.cs", label="Entry lambda expression", span="79-79"];
m7_11 [cluster="lambda expression", file="StackTraceParser.cs", label="Entry lambda expression", span="80-80"];
m7_14 [cluster="lambda expression", file="StackTraceParser.cs", label="Entry lambda expression", span="81-81"];
m7_18 [cluster="lambda expression", file="StackTraceParser.cs", label="Entry lambda expression", span="83-83"];
m7_21 [cluster="lambda expression", file="StackTraceParser.cs", label="Entry lambda expression", span="84-84"];
m7_10 [cluster="lambda expression", file="StackTraceParser.cs", label="Exit lambda expression", span="79-79"];
m7_13 [cluster="lambda expression", file="StackTraceParser.cs", label="Exit lambda expression", span="80-80"];
m7_16 [cluster="lambda expression", file="StackTraceParser.cs", label="Exit lambda expression", span="81-81"];
m7_20 [cluster="lambda expression", file="StackTraceParser.cs", label="Exit lambda expression", span="83-83"];
m7_23 [cluster="lambda expression", file="StackTraceParser.cs", label="Exit lambda expression", span="84-84"];
m7_26 [cluster="lambda expression", file="StackTraceParser.cs", label="Exit lambda expression", span="85-85"];
m7_48 [cluster="Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", file="StackTraceParser.cs", label="Entry Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", span="121-121"];
m7_50 [cluster="Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", file="StackTraceParser.cs", label="Exit Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", span="121-121"];
m7_43 [cluster="Unk.Token", file="StackTraceParser.cs", label="Entry Unk.Token", span=""];
m7_7 [cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", file="StackTraceParser.cs", label="Entry Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", span="88-88"];
m7_41 [cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", file="StackTraceParser.cs", label="Exit Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", span="88-88"];
m7_17 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="StackTraceParser.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m7_52 [file="StackTraceParser.cs", label="System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>", span=""];
m8_39 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="TypeExtensions.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", prediction=21, span="87-87"];
m8_46 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="TypeExtensions.cs", label="var workCount = int.Parse(command.Substring(5))", prediction=22, span="102-102"];
m8_0 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="27-27"];
m8_4 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=green, community=0, file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", prediction=23, span="27-27"];
m8_9 [cluster="string.ReplaceGenericParametersInGenericTypeName(System.Type)", color=green, community=0, file="TypeExtensions.cs", label="Entry string.ReplaceGenericParametersInGenericTypeName(System.Type)", prediction=24, span="168-168"];
m8_5 [cluster="System.Type.GetTypeInfo()", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Type.GetTypeInfo()", prediction=25, span="0-0"];
m8_43 [cluster="System.Reflection.MethodBase.GetParameters()", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Reflection.MethodBase.GetParameters()", prediction=23, span="0-0"];
m8_8 [cluster="System.Type.GetGenericTypeDefinition()", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", prediction=27, span="0-0"];
m8_10 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", prediction=27, span="41-41"];
m8_45 [cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", color=green, community=0, file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", prediction=27, span="109-109"];
m8_50 [cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", color=green, community=0, file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", prediction=30, span="104-104"];
m8_6 [cluster="System.Type.GetFullNameWithoutNamespace()", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Type.GetFullNameWithoutNamespace()", prediction=27, span="149-149"];
m8_42 [cluster="string.Equals(string, System.StringComparison)", color=green, community=0, file="TypeExtensions.cs", label="Entry string.Equals(string, System.StringComparison)", prediction=27, span="0-0"];
m8_44 [cluster="System.Reflection.MethodInfo.GetGenericArguments()", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Reflection.MethodInfo.GetGenericArguments()", prediction=27, span="0-0"];
m8_7 [cluster="string.ReplacePlusWithDotInNestedTypeName()", color=green, community=0, file="TypeExtensions.cs", label="Entry string.ReplacePlusWithDotInNestedTypeName()", prediction=34, span="163-163"];
m8_35 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", prediction=27, span="41-41"];
m8_36 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="TypeExtensions.cs", label="var workCount = int.Parse(command.Substring(5))", prediction=36, span="84-84"];
m8_41 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", prediction=27, span="0-0"];
m8_52 [cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", color=green, community=0, file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", prediction=38, span="104-104"];
m8_37 [cluster="Unk.nameof", color=green, community=0, file="TypeExtensions.cs", label="Entry Unk.nameof", prediction=39, span=""];
m8_38 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", prediction=36, span="0-0"];
m8_47 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="Entry lambda expression", prediction=41, span="56-56"];
m8_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", prediction=39, span="0-0"];
m8_49 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="Exit lambda expression", prediction=43, span="56-56"];
m8_104 [cluster="Unk.Join", file="TypeExtensions.cs", label=number, span=""];
m8_84 [cluster="System.Guid.NewGuid()", file="TypeExtensions.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m8_85 [cluster="System.Guid.ToString()", file="TypeExtensions.cs", label="Entry System.Guid.ToString()", span="0-0"];
m8_88 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="x.Random(number)", prediction=23, span="95-95"];
m8_91 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="i % 2 == 0", prediction=45, span="105-105"];
m8_80 [cluster="string.Substring(int)", file="TypeExtensions.cs", label="Entry string.Substring(int)", span="0-0"];
m8_81 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="87-87"];
m8_82 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", prediction=46, span="87-87"];
m8_83 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="87-87"];
m8_101 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="111-111"];
m8_72 [cluster="ConsoleSample.Services.Random(int)", file="TypeExtensions.cs", label="Entry ConsoleSample.Services.Random(int)", span="28-28"];
m8_92 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", prediction=47, span="107-107"];
m8_102 [cluster="ConsoleSample.Services.EmptyDefault()", file="TypeExtensions.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11"];
m8_105 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m8_79 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="78-78"];
m8_70 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="x.Random(number)", prediction=48, span="46-46"];
m8_71 [cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", span="109-109"];
m8_95 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="107-107"];
m8_96 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="x.EmptyCritical()", prediction=49, span="107-107"];
m8_100 [cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs", label="x.EmptyDefault()", prediction=50, span="111-111"];
m8_78 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=green, community=0, file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", prediction=51, span="149-149"];
m8_93 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", color=green, community=0, file="TypeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", prediction=52, span="0-0"];
m8_94 [cluster="Unk.Replace", file="TypeExtensions.cs", label="Entry Unk.Replace", span=""];
m8_103 [cluster="Unk.Select", file="TypeExtensions.cs", label=number, span=""];
m8_107 [cluster="string.Concat(string, string, string)", file="TypeExtensions.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m8_73 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="149-149"];
m8_106 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m8_108 [file="TypeExtensions.cs", label=genericArguments, span=""];
m9_36 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m9_113 [cluster="System.Collections.Generic.List<T>.List()", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_291 [cluster="Unk.TryParse", file="TypeExtensionsFacts.cs", label="Entry Unk.TryParse", span=""];
m9_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m9_133 [cluster="int.Parse(string)", file="TypeExtensionsFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m9_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m9_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m9_38 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65"];
m9_214 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m9_386 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m9_29 [cluster="Unk.GetJobsWithProperties", file="TypeExtensionsFacts.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m9_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m9_359 [cluster="KeyValuePair<string, T>.cstr", file="TypeExtensionsFacts.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m9_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m9_60 [cluster="Unk.CreatePipeline", file="TypeExtensionsFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m9_76 [cluster="Unk.GetValueFromHash", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m9_23 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m9_27 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m9_134 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m9_257 [cluster="Unk.ContainsKey", file="TypeExtensionsFacts.cs", label="Entry Unk.ContainsKey", span=""];
m9_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m9_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m9_324 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="jobIds.Count == 0", span="507-507"];
m9_326 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509"];
m9_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510"];
m9_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var pipeline = redis.CreatePipeline()", span="512-512"];
m9_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label=jobIds, span="514-514"];
m9_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520"];
m9_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="stateProperties != null", span="522-522"];
m9_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526"];
m9_335 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543"];
m9_325 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="return new List<KeyValuePair<string, T>>();", span="507-507"];
m9_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="pipeline.Flush()", span="530-530"];
m9_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var id = jobId", span="516-516"];
m9_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m9_361 [cluster="Unk.selector", file="TypeExtensionsFacts.cs", label="Entry Unk.selector", span=""];
m9_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_11 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m9_14 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m9_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m9_269 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var endDate = DateTime.UtcNow", span="442-442"];
m9_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450"];
m9_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="451-451"];
m9_270 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var dates = new List<DateTime>()", span="443-443"];
m9_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="dates.Add(endDate)", span="446-446"];
m9_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="endDate = endDate.AddHours(-1)", span="447-447"];
m9_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var i = 0", span="444-444"];
m9_280 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i < dates.Count", span="454-454"];
m9_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="result.Add(dates[i], value)", span="462-462"];
m9_272 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i < 24", span="444-444"];
m9_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i++", span="444-444"];
m9_278 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="453-453"];
m9_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457"];
m9_279 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var i = 0", span="454-454"];
m9_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="return result;", span="465-465"];
m9_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i++", span="454-454"];
m9_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="long value", span="456-456"];
m9_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="value = 0", span="459-459"];
m9_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m9_232 [cluster="Unk.TryToGetQueue", file="TypeExtensionsFacts.cs", label="Entry Unk.TryToGetQueue", span=""];
m9_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m9_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m9_258 [cluster="Unk.Where", file="TypeExtensionsFacts.cs", label="Entry Unk.Where", span=""];
m9_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m9_237 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label=Redis, span="395-395"];
m9_238 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397"];
m9_242 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="405-408"];
m9_239 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398"];
m9_240 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="String.IsNullOrEmpty(queue)", span="400-400"];
m9_241 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="return false;", span="402-402"];
m9_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m9_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m9_317 [cluster="System.DateTime.AddDays(double)", file="TypeExtensionsFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m9_360 [cluster="Unk.TrueForAll", file="TypeExtensionsFacts.cs", label="Entry Unk.TrueForAll", span=""];
m9_429 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="593-593"];
m9_32 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="66-76"];
m9_40 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="76-76"];
m9_34 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="66-76"];
m9_42 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="76-76"];
m9_64 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="104-106"];
m9_69 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="107-107"];
m9_73 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="110-112"];
m9_77 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="113-113"];
m9_80 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="120-120"];
m9_83 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="121-129"];
m9_66 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="104-106"];
m9_71 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="107-107"];
m9_75 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="110-112"];
m9_79 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="113-113"];
m9_82 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="120-120"];
m9_85 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="121-129"];
m9_116 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="170-172"];
m9_119 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="173-173"];
m9_122 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="176-177"];
m9_126 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="178-178"];
m9_129 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="184-191"];
m9_118 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="170-172"];
m9_121 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="173-173"];
m9_124 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="176-177"];
m9_128 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="178-178"];
m9_131 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="184-191"];
m9_141 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="209-219"];
m9_143 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="209-219"];
m9_151 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="237-244"];
m9_153 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="237-244"];
m9_176 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="264-265"];
m9_179 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="266-266"];
m9_182 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="269-269"];
m9_185 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="270-270"];
m9_188 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="273-273"];
m9_191 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="274-274"];
m9_194 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="284-290"];
m9_178 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="264-265"];
m9_181 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="266-266"];
m9_184 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="269-269"];
m9_187 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="270-270"];
m9_190 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="273-273"];
m9_193 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="274-274"];
m9_196 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="284-290"];
m9_203 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="320-326"];
m9_205 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="320-326"];
m9_211 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="344-352"];
m9_212 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352"];
m9_213 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="344-352"];
m9_260 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="!hiddenProperties.Contains(x.Key)", span="433-433"];
m9_259 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="433-433"];
m9_263 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="433-433"];
m9_266 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="433-433"];
m9_261 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="433-433"];
m9_264 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.Key", span="433-433"];
m9_265 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="433-433"];
m9_267 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.Value", span="433-433"];
m9_268 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="433-433"];
m9_294 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450"];
m9_293 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="450-450"];
m9_295 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="450-450"];
m9_322 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482"];
m9_318 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="481-481"];
m9_321 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="482-482"];
m9_319 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.ToString(''yyyy-MM-dd'')", span="481-481"];
m9_320 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="481-481"];
m9_323 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="482-482"];
m9_339 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519"];
m9_347 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525"];
m9_357 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542"];
m9_342 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="!jobs.ContainsKey(id)", span="520-520"];
m9_343 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="jobs.Add(id, x)", span="520-520"];
m9_354 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539"];
m9_350 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="!states.ContainsKey(id)", span="526-526"];
m9_351 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="states.Add(id, x)", span="526-526"];
m9_338 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="519-519"];
m9_341 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="520-520"];
m9_346 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="525-525"];
m9_349 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="526-526"];
m9_353 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="534-539"];
m9_356 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="540-542"];
m9_340 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="519-519"];
m9_344 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="520-520"];
m9_348 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="525-525"];
m9_352 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="526-526"];
m9_355 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="534-539"];
m9_358 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="540-542"];
m9_362 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="542-542"];
m9_363 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="y == null", span="542-542"];
m9_364 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="542-542"];
m9_392 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Servers = x", span="566-566"];
m9_398 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Queues = x", span="570-570"];
m9_404 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Scheduled = x", span="574-574"];
m9_410 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Processing = x", span="578-578"];
m9_417 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582"];
m9_424 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Failed = x", span="586-586"];
m9_430 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Enqueued += x", span="593-593"];
m9_387 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="565-565"];
m9_391 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="566-566"];
m9_394 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="569-569"];
m9_397 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="570-570"];
m9_400 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="573-573"];
m9_403 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="574-574"];
m9_406 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="577-577"];
m9_409 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="578-578"];
m9_412 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="581-581"];
m9_416 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="582-582"];
m9_420 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="585-585"];
m9_423 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="586-586"];
m9_427 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592"];
m9_426 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="592-592"];
m9_388 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSetCount(''hangfire:servers'')", span="565-565"];
m9_389 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="565-565"];
m9_393 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="566-566"];
m9_395 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSetCount(''hangfire:queues'')", span="569-569"];
m9_396 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="569-569"];
m9_399 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="570-570"];
m9_401 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573"];
m9_402 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="573-573"];
m9_405 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="574-574"];
m9_407 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577"];
m9_408 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="577-577"];
m9_411 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="578-578"];
m9_413 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581"];
m9_414 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="581-581"];
m9_418 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="582-582"];
m9_421 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585"];
m9_422 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="585-585"];
m9_425 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="586-586"];
m9_428 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="592-592"];
m9_431 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="593-593"];
m9_28 [cluster="Unk.GetRangeFromSortedSet", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m9_175 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_115 [cluster="Unk.ToList", file="TypeExtensionsFacts.cs", label="Entry Unk.ToList", span=""];
m9_67 [cluster="Unk.Format", file="TypeExtensionsFacts.cs", label="Entry Unk.Format", span=""];
m9_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m9_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label=Redis, span="366-366"];
m9_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368"];
m9_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m9_35 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5"];
m9_61 [cluster="Unk.QueueCommand", file="TypeExtensionsFacts.cs", label="Entry Unk.QueueCommand", span=""];
m9_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m9_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m9_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m9_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m9_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m9_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m9_87 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m9_296 [cluster="System.DateTime.ToString(string)", file="TypeExtensionsFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m9_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m9_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m9_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="TypeExtensionsFacts.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m9_290 [cluster="Unk.ElementAt", file="TypeExtensionsFacts.cs", label="Entry Unk.ElementAt", span=""];
m9_150 [cluster="Unk.GetRangeFromList", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeFromList", span=""];
m9_155 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="248-248"];
m9_171 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="248-248"];
m9_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m9_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m9_62 [cluster="Unk.Flush", file="TypeExtensionsFacts.cs", label="Entry Unk.Flush", span=""];
m9_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m9_419 [cluster="Unk.Parse", file="TypeExtensionsFacts.cs", label="Entry Unk.Parse", span=""];
m9_72 [cluster="Unk.Add", file="TypeExtensionsFacts.cs", label="Entry Unk.Add", span=""];
m9_97 [cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m9_111 [cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m9_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m9_370 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label=Redis, span="556-556"];
m9_371 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var stats = new StatisticsDto()", span="558-558"];
m9_372 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560"];
m9_374 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566"];
m9_375 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570"];
m9_376 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574"];
m9_377 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578"];
m9_378 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582"];
m9_379 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586"];
m9_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593"];
m9_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="return stats;", span="599-599"];
m9_373 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var pipeline = Redis.CreatePipeline()", span="562-562"];
m9_380 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label=queues, span="588-588"];
m9_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.Flush()", span="596-596"];
m9_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var queueName = queue", span="590-590"];
m9_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m9_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m9_366 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label=Redis, span="548-548"];
m9_367 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550"];
m9_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m9_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m9_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label=Redis, span="358-358"];
m9_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360"];
m9_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m9_39 [cluster="string.Equals(string, System.StringComparison)", file="TypeExtensionsFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m9_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="TypeExtensionsFacts.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m9_288 [cluster="System.DateTime.AddHours(double)", file="TypeExtensionsFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m9_92 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m9_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var endDate = DateTime.UtcNow.Date", span="471-471"];
m9_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482"];
m9_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="484-484"];
m9_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var startDate = endDate.AddDays(-7)", span="472-472"];
m9_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="startDate <= endDate", span="475-475"];
m9_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="dates.Add(endDate)", span="477-477"];
m9_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="endDate = endDate.AddDays(-1)", span="478-478"];
m9_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var dates = new List<DateTime>()", span="473-473"];
m9_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481"];
m9_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="result.Add(dates[i], value)", span="494-494"];
m9_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i < stringDates.Count", span="487-487"];
m9_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="486-486"];
m9_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490"];
m9_308 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var i = 0", span="487-487"];
m9_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="return result;", span="497-497"];
m9_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i++", span="487-487"];
m9_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="long value", span="489-489"];
m9_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="value = 0", span="492-492"];
m9_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m9_4 [cluster="Unk.GetSortedSetCount", file="TypeExtensionsFacts.cs", label="Entry Unk.GetSortedSetCount", span=""];
m9_15 [cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m9_18 [cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m9_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m9_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m9_245 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label=Redis, span="414-414"];
m9_246 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416"];
m9_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422"];
m9_247 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="job.Count == 0", span="417-417"];
m9_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435"];
m9_248 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="return null;", span="417-417"];
m9_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419"];
m9_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426"];
m9_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m9_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m9_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m9_8 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m9_297 [cluster="string.Format(string, object, object)", file="TypeExtensionsFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_254 [cluster="Unk.GetAllEntriesFromHash", file="TypeExtensionsFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m9_63 [cluster="Unk.ToDictionary", file="TypeExtensionsFacts.cs", label="Entry Unk.ToDictionary", span=""];
m9_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m9_390 [cluster="Unk.GetSetCount", file="TypeExtensionsFacts.cs", label="Entry Unk.GetSetCount", span=""];
m9_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m9_207 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label=Redis, span="333-333"];
m9_208 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337"];
m9_209 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352"];
m9_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m9_9 [cluster="string.Format(string, object)", file="TypeExtensionsFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m9_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m9_10 [cluster="Unk.GetListCount", file="TypeExtensionsFacts.cs", label="Entry Unk.GetListCount", span=""];
m9_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m9_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_233 [cluster="string.IsNullOrEmpty(string)", file="TypeExtensionsFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_289 [cluster="Unk.GetValuesMap", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValuesMap", span=""];
m9_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m9_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m9_125 [cluster="Unk.GetAllItemsFromList", file="TypeExtensionsFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m9_262 [cluster="Unk.Contains", file="TypeExtensionsFacts.cs", label="Entry Unk.Contains", span=""];
m9_114 [cluster="Unk.Select", file="TypeExtensionsFacts.cs", label="Entry Unk.Select", span=""];
m9_112 [cluster="Unk.GetAllItemsFromSet", file="TypeExtensionsFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m9_140 [cluster="Unk.GetRangeFromSortedSetDesc", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m9_415 [cluster="Unk.GetValue", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValue", span=""];
m9_68 [cluster="Unk.GetValuesFromHash", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m9_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m9_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label=Redis, span="374-374"];
m9_226 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376"];
m9_230 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-389"];
m9_227 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378"];
m9_228 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="String.IsNullOrEmpty(queue)", span="379-379"];
m9_229 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="return false;", span="381-381"];
m9_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m9_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m9_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m9_432 [file="TypeExtensionsFacts.cs", label=job, span=""];
m9_433 [file="TypeExtensionsFacts.cs", label=jobs, span=""];
m9_434 [file="TypeExtensionsFacts.cs", label=states, span=""];
m9_435 [file="TypeExtensionsFacts.cs", label=name, span=""];
m9_436 [file="TypeExtensionsFacts.cs", label=servers, span=""];
m9_437 [file="TypeExtensionsFacts.cs", label=queues, span=""];
m9_438 [file="TypeExtensionsFacts.cs", label=queue, span=""];
m9_439 [file="TypeExtensionsFacts.cs", label=hiddenProperties, span=""];
m9_440 [file="TypeExtensionsFacts.cs", label=string, span=""];
m9_441 [file="TypeExtensionsFacts.cs", label=string, span=""];
m9_442 [file="TypeExtensionsFacts.cs", label="string[]", span=""];
m9_443 [file="TypeExtensionsFacts.cs", label=id, span=""];
m9_444 [file="TypeExtensionsFacts.cs", label=jobs, span=""];
m9_445 [file="TypeExtensionsFacts.cs", label="string[]", span=""];
m9_446 [file="TypeExtensionsFacts.cs", label=states, span=""];
m9_447 [file="TypeExtensionsFacts.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m9_448 [file="TypeExtensionsFacts.cs", label=stats, span=""];
m9_449 [file="TypeExtensionsFacts.cs", label=queueName, span=""];
n25 -> n22  [color=darkseagreen4, key=1, label=string, style=dashed];
n26 -> n22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
n27 -> n22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n12 -> n15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n12 -> n16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n12 -> n22  [color=darkseagreen4, key=1, label=string, style=dashed];
n16 -> n21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m0_12 -> m0_16  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m0_12 -> m0_17  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m0_15 -> m0_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_15 -> m0_17  [color=darkseagreen4, key=1, label=version, style=dashed];
m0_25 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_25 -> m0_16  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_25 -> m0_17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m0_41 -> m0_12  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_13  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_14  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m0_41 -> m0_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m4_203 -> m4_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_219 -> m4_291  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_266 -> m4_270  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_273 -> m4_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_274 -> m4_279  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_267 -> m4_270  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_267 -> m4_277  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_267 -> m4_281  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_268 -> m4_272  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_272 -> m4_272  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_275 -> m4_281  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_275 -> m4_283  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_276 -> m4_279  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_276 -> m4_281  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_276 -> m4_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_282 -> m4_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_94 -> m4_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_295 -> m4_298  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_295 -> m4_299  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_302 -> m4_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_303 -> m4_308  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_296 -> m4_298  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m4_297 -> m4_299  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_297 -> m4_310  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_301 -> m4_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_301 -> m4_306  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m4_304 -> m4_310  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_304 -> m4_312  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_305 -> m4_308  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_305 -> m4_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_305 -> m4_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_311 -> m4_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_210 -> m4_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_370 -> m4_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m4_371 -> m4_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m4_373 -> m4_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_373 -> m4_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_374 -> m4_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_374 -> m4_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_375 -> m4_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_375 -> m4_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_376 -> m4_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_376 -> m4_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_377 -> m4_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_377 -> m4_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_378 -> m4_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_378 -> m4_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_379 -> m4_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_379 -> m4_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_382 -> m4_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_382 -> m4_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_372 -> m4_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_381 -> m4_433  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m4_224 -> m4_239  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_224 -> m4_240  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_224 -> m4_241  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_224 -> m4_242  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_243 -> m4_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_243 -> m4_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_243 -> m4_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_227 -> m4_257  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m4_229 -> m4_231  [color=darkseagreen4, key=1, label=history, style=dashed];
m4_230 -> m4_238  [color=darkseagreen4, key=1, label=stateHistory, style=dashed];
m4_232 -> m4_238  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_233 -> m4_235  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m4_233 -> m4_236  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m4_153 -> m4_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_176 -> m4_327  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m4_176 -> m4_330  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_176 -> m4_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_176 -> m4_348  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_176 -> m4_358  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m4_323 -> m4_329  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_323 -> m4_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_323 -> m4_344  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_324 -> m4_331  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_324 -> m4_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_324 -> m4_352  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_325 -> m4_329  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_325 -> m4_338  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_326 -> m4_329  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_326 -> m4_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_326 -> m4_332  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_331 -> m4_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_331 -> m4_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_333 -> m4_354  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_333 -> m4_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_329 -> m4_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_329 -> m4_342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_328 -> m4_338  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_328 -> m4_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_328 -> m4_344  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_328 -> m4_331  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_328 -> m4_348  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_328 -> m4_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_328 -> m4_352  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_44 -> m4_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m4_358 -> m4_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_342 -> m4_344  [color=darkseagreen4, key=1, label="?", style=dashed];
m4_350 -> m4_352  [color=darkseagreen4, key=1, label="?", style=dashed];
m4_134 -> m4_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_105  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m4_110 -> m4_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_102 -> m4_107  [color=darkseagreen4, key=1, label=servers, style=dashed];
m4_102 -> m4_117  [color=darkseagreen4, key=1, label=servers, style=dashed];
m4_103 -> m4_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m4_103 -> m4_124  [color=darkseagreen4, key=1, label=queues, style=dashed];
m4_107 -> m4_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_107 -> m4_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_104 -> m4_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_104 -> m4_108  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_104 -> m4_109  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_108 -> m4_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_108 -> m4_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_106 -> m4_114  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_106 -> m4_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_106 -> m4_108  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_106 -> m4_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_106 -> m4_124  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_143 -> m4_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_30 -> m4_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_30 -> m4_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_160 -> m4_162  [color=darkseagreen4, key=1, label=queues, style=dashed];
m4_161 -> m4_173  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_162 -> m4_180  [color=darkseagreen4, key=1, label=queue, style=dashed];
m4_162 -> m4_186  [color=darkseagreen4, key=1, label=queue, style=dashed];
m4_162 -> m4_192  [color=darkseagreen4, key=1, label=queue, style=dashed];
m4_167 -> m4_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_167 -> m4_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_168 -> m4_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_168 -> m4_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_169 -> m4_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_169 -> m4_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_166 -> m4_170  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_171 -> m4_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_53  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m4_58 -> m4_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_50 -> m4_55  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_50 -> m4_75  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_51 -> m4_56  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_51 -> m4_82  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_55 -> m4_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_55 -> m4_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_52 -> m4_55  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_52 -> m4_56  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_52 -> m4_57  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m4_56 -> m4_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_56 -> m4_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_54 -> m4_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_54 -> m4_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_54 -> m4_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_54 -> m4_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_54 -> m4_82  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_444 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_12  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_92  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_96  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_217  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_221  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_444 -> m4_367  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m4_445 -> m4_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_445 -> m4_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_445 -> m4_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_445 -> m4_82  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_446 -> m4_75  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_447 -> m4_82  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_448 -> m4_114  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_448 -> m4_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_448 -> m4_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_448 -> m4_124  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_449 -> m4_117  [color=darkseagreen4, key=1, label=servers, style=dashed];
m4_450 -> m4_124  [color=darkseagreen4, key=1, label=queues, style=dashed];
m4_451 -> m4_180  [color=darkseagreen4, key=1, label=queue, style=dashed];
m4_451 -> m4_186  [color=darkseagreen4, key=1, label=queue, style=dashed];
m4_451 -> m4_192  [color=darkseagreen4, key=1, label=queue, style=dashed];
m4_452 -> m4_257  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m4_453 -> m4_291  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_454 -> m4_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_455 -> m4_338  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_456 -> m4_338  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_456 -> m4_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_456 -> m4_344  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_456 -> m4_348  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_456 -> m4_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_456 -> m4_352  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_457 -> m4_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_457 -> m4_344  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_458 -> m4_348  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_459 -> m4_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_459 -> m4_352  [color=darkseagreen4, key=1, label=states, style=dashed];
m4_460 -> m4_358  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m4_462 -> m4_433  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m5_20 -> m5_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_21 -> m5_25  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m5_22 -> m5_24  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_47 -> m5_49  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m5_5 -> m5_8  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_53 -> m5_8  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m5_53 -> m5_17  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m5_53 -> m5_24  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m5_53 -> m5_25  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m5_53 -> m5_38  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m5_53 -> m5_39  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m5_53 -> m5_43  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m8_39 -> m8_81  [color=green, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_43  [color=green, key=1, label=count, style=dashed];
m8_43 -> m8_43  [color=green, key=1, label=count, style=dashed];
m8_43 -> m8_88  [color=green, key=1, label=number, style=dashed];
m8_6 -> m8_8  [color=green, key=1, label=command, style=dashed];
m8_6 -> m8_10  [color=green, key=1, label=command, style=dashed];
m8_6 -> m8_35  [color=green, key=1, label=command, style=dashed];
m8_6 -> m8_41  [color=green, key=1, label=command, style=dashed];
m8_6 -> m8_42  [color=green, key=1, label=command, style=dashed];
m8_6 -> m8_45  [color=green, key=1, label=command, style=dashed];
m8_42 -> m8_44  [color=green, key=1, label=seconds, style=dashed];
m8_36 -> m8_38  [color=green, key=1, label=workCount, style=dashed];
m8_37 -> m8_40  [color=green, key=1, label=i, style=dashed];
m8_40 -> m8_40  [color=green, key=1, label=i, style=dashed];
m8_104 -> m8_88  [color=green, key=1, label=number, style=dashed];
m8_92 -> m8_95  [color=green, key=1, label="lambda expression", style=dashed];
m8_103 -> m8_70  [color=green, key=1, label=number, style=dashed];
m9_173 -> m9_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m9_173 -> m9_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_173 -> m9_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_173 -> m9_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_173 -> m9_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_173 -> m9_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_173 -> m9_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m9_326 -> m9_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m9_326 -> m9_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m9_326 -> m9_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m9_327 -> m9_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m9_327 -> m9_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m9_327 -> m9_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m9_328 -> m9_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m9_328 -> m9_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m9_328 -> m9_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m9_331 -> m9_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_331 -> m9_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_333 -> m9_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_333 -> m9_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_335 -> m9_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_335 -> m9_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_330 -> m9_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_330 -> m9_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_330 -> m9_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_330 -> m9_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_330 -> m9_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_330 -> m9_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_330 -> m9_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_219 -> m9_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_269 -> m9_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m9_276 -> m9_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_277 -> m9_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m9_270 -> m9_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_270 -> m9_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_270 -> m9_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_271 -> m9_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_275 -> m9_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_278 -> m9_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_278 -> m9_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_279 -> m9_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_279 -> m9_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_279 -> m9_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_285 -> m9_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_236 -> m9_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_239 -> m9_242  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_357 -> m9_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_341 -> m9_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m9_349 -> m9_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m9_371 -> m9_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m9_372 -> m9_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m9_374 -> m9_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_374 -> m9_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_375 -> m9_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_375 -> m9_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_376 -> m9_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_376 -> m9_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_377 -> m9_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_377 -> m9_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_378 -> m9_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_378 -> m9_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_379 -> m9_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_379 -> m9_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_382 -> m9_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_382 -> m9_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_373 -> m9_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m9_381 -> m9_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m9_92 -> m9_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_298 -> m9_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m9_298 -> m9_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m9_305 -> m9_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_306 -> m9_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m9_299 -> m9_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m9_300 -> m9_302  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_300 -> m9_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m9_304 -> m9_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_304 -> m9_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m9_307 -> m9_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_307 -> m9_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_308 -> m9_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_308 -> m9_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_308 -> m9_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_314 -> m9_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_252 -> m9_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_252 -> m9_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_252 -> m9_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_249 -> m9_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m9_209 -> m9_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_224 -> m9_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_227 -> m9_230  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_439 -> m9_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m9_440 -> m9_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_441 -> m9_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_442 -> m9_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_443 -> m9_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_443 -> m9_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_443 -> m9_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_443 -> m9_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_443 -> m9_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_443 -> m9_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m9_444 -> m9_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m9_444 -> m9_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m9_445 -> m9_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_446 -> m9_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m9_446 -> m9_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m9_447 -> m9_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m9_449 -> m9_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
}
