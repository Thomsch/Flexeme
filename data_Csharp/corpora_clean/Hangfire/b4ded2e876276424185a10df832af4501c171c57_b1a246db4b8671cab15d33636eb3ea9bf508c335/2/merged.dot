digraph  {
n25 [label=string, span=""];
n26 [label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
n27 [label="Hangfire.JobStorage", span=""];
n0 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)"];
n1 [label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)"];
n2 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)"];
n3 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)"];
n4 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)"];
n5 [label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)"];
n6 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)"];
n7 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)"];
n8 [label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)"];
n9 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)"];
n10 [label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)"];
n11 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)"];
n12 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)"];
n13 [label="app == null", span="115-115", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)"];
n15 [label="SignatureConversions.AddConversions(app)", span="117-117", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)"];
n16 [label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)"];
n22 [label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123", cluster="lambda expression"];
n14 [label="throw new ArgumentNullException(''app'');", span="115-115", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)"];
n19 [label="Entry Unk.AddConversions", span="", cluster="Unk.AddConversions"];
n17 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)"];
n18 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n20 [label="Entry Unk.Map", span="", cluster="Unk.Map"];
n21 [label="Entry lambda expression", span="119-123", cluster="lambda expression"];
n23 [label="Exit lambda expression", span="119-123", cluster="lambda expression"];
n24 [label="Entry Unk.>", span="", cluster="Unk.>"];
m0_39 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="InvocationDataFacts.cs"];
m0_33 [label="Entry Hangfire.Dashboard.UrlHelper.Home()", span="38-38", cluster="Hangfire.Dashboard.UrlHelper.Home()", file="InvocationDataFacts.cs"];
m0_12 [label="WriteLiteral(@''''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n            <div class=''''container'''' style=''''margin-bottom: 20px;''''>\r\n                '')", span="119-132", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", color=green, community=0];
m0_13 [label="Write(RenderBody())", span="137-137", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", color=green, community=0];
m0_14 [label="WriteLiteral(@''\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://hangfire.io/'''' target=''''_blank''''>Hangfire\r\n'')", span="142-151", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs", color=green, community=0];
m0_15 [label="var version = GetType().Assembly.GetName().Version", span="157-157", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_16 [label="WriteLiteral(''                            '')", span="163-163", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_17 [label="Write(String.Format(''{0}.{1}.{2}'', version.Major, version.Minor, version.Build))", span="168-168", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_18 [label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>'')", span="173-174", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_36 [label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119", cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="InvocationDataFacts.cs"];
m0_11 [label="Write(AppPath)", span="114-114", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_30 [label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="InvocationDataFacts.cs"];
m0_19 [label="Write(Storage)", span="179-179", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_34 [label="Entry Hangfire.Dashboard.Pages.Navigation.Navigation()", span="25-25", cluster="Hangfire.Dashboard.Pages.Navigation.Navigation()", file="InvocationDataFacts.cs"];
m0_21 [label="Write(DateTime.UtcNow)", span="189-189", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_0 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_1 [label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="36-36", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_2 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="37-37", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_3 [label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", span="38-38", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_4 [label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingDelay", span="39-39", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_5 [label="HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", span="40-40", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_6 [label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="41-41", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_7 [label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", span="42-42", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_8 [label="FilterProvider = JobFilterProviders.Providers", span="44-44", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_9 [label="Activator = JobActivator.Current", span="45-45", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_10 [label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="InvocationDataFacts.cs"];
m0_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InvocationDataFacts.cs"];
m0_22 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="InvocationDataFacts.cs"];
m0_23 [label="''''' + x + '''''", span="90-90", cluster="lambda expression", file="InvocationDataFacts.cs"];
m0_24 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="InvocationDataFacts.cs"];
m0_25 [label="Hangfire.BackgroundJobServerOptions", span="", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_26 [label="WriteLiteral(''\'\r\n                };\r\n            })(window.Hangfire = window.Hangfire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="216-217", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_27 [label="Write(Url.To(''/js''))", span="222-222", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_28 [label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="227-227", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_29 [label="Exit Hangfire.Dashboard.Pages.LayoutPage.Execute()", span="40-40", cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="InvocationDataFacts.cs"];
m0_38 [label="Entry System.Reflection.Assembly.GetName()", span="0-0", cluster="System.Reflection.Assembly.GetName()", file="InvocationDataFacts.cs"];
m0_37 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="InvocationDataFacts.cs"];
m0_35 [label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="82-82", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="InvocationDataFacts.cs"];
m0_31 [label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="InvocationDataFacts.cs"];
m0_40 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="InvocationDataFacts.cs"];
m0_32 [label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33", cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="InvocationDataFacts.cs"];
m0_41 [label="Hangfire.Dashboard.Pages.LayoutPage", span="", file="InvocationDataFacts.cs"];
m1_0 [label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23", cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="IRecurringJobManager.cs"];
m1_1 [label="Exit Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23", cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="IRecurringJobManager.cs"];
m1_4 [label="Entry Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30", cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="IRecurringJobManager.cs"];
m1_5 [label="Exit Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30", cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="IRecurringJobManager.cs"];
m1_2 [label="Entry Hangfire.IRecurringJobManager.Trigger(string)", span="29-29", cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="IRecurringJobManager.cs"];
m1_3 [label="Exit Hangfire.IRecurringJobManager.Trigger(string)", span="29-29", cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="IRecurringJobManager.cs"];
m2_66 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobManager.cs"];
m2_18 [label="throw new ArgumentNullException(nameof(job));", span="58-58", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", color=red, community=0];
m2_19 [label="cronExpression == null", span="59-59", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_20 [label="throw new ArgumentNullException(nameof(cronExpression));", span="59-59", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs", color=red, community=0];
m2_40 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobManager.cs"];
m2_6 [label="throw new ArgumentNullException(nameof(storage));", span="48-48", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs", color=red, community=0];
m2_10 [label="_factory = factory", span="52-52", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=red, community=0, file="RecurringJobManager.cs"];
m2_11 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs"];
m2_12 [label="Exit HangFire.Perform.Async(System.Type, object)", span="27-27", cluster="HangFire.Perform.Async(System.Type, object)", file="RecurringJobManager.cs"];
m2_14 [label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="12-12", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="RecurringJobManager.cs"];
m2_15 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=red, community=0, file="RecurringJobManager.cs"];
m2_16 [label="return In<TJob>(interval, null);", span="39-39", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=green, community=0, file="RecurringJobManager.cs"];
m2_17 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=red, community=0, file="RecurringJobManager.cs"];
m2_21 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="RecurringJobManager.cs"];
m2_22 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=red, community=0, file="RecurringJobManager.cs"];
m2_23 [label="return In(interval, jobType, null);", span="51-51", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=green, community=0, file="RecurringJobManager.cs"];
m2_26 [label="return client.In(interval, jobType, args);", span="58-58", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="RecurringJobManager.cs"];
m2_28 [label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="RecurringJobManager.cs"];
m2_29 [label="recurringJob[''TimeZoneId''] = options.TimeZone.Id", span="71-71", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_30 [label="recurringJob[''Queue''] = options.QueueName", span="72-72", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_31 [label="var existingJob = connection.GetAllEntriesFromHash($''recurring-job:{recurringJobId}'')", span="74-74", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_35 [label="transaction.SetRangeInHash(\r\n                        $''recurring-job:{recurringJobId}'',\r\n                        recurringJob)", span="82-84", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=1, file="RecurringJobManager.cs"];
m2_36 [label="transaction.AddToSet(''recurring-jobs'', recurringJobId)", span="86-86", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_24 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=red, community=0, file="RecurringJobManager.cs"];
m2_25 [label="var client = new JobClient()", span="56-56", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="RecurringJobManager.cs"];
m2_34 [label="var transaction = connection.CreateWriteTransaction()", span="80-80", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_27 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="RecurringJobManager.cs"];
m2_33 [label="recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(DateTime.UtcNow)", span="77-77", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_32 [label="existingJob == null", span="75-75", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_37 [label="transaction.Commit()", span="88-88", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", color=red, community=0, file="RecurringJobManager.cs"];
m2_38 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="55-55", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManager.cs"];
m2_67 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobManager.cs"];
m2_0 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager()", span="36-36", cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs"];
m2_1 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager()", span="36-36", cluster="Hangfire.RecurringJobManager.RecurringJobManager()", color=green, community=0, file="RecurringJobManager.cs"];
m2_2 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs"];
m2_50 [label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="93-93", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m2_51 [label="recurringJobId == null", span="95-95", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_52 [label="throw new ArgumentNullException(nameof(recurringJobId));", span="95-95", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_54 [label="var hash = connection.GetAllEntriesFromHash($''recurring-job:{recurringJobId}'')", span="99-99", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_62 [label="context.Parameters[''RecurringJobId''] = recurringJobId", span="114-114", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_53 [label="var connection = _storage.GetConnection()", span="97-97", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_61 [label="var context = new CreateContext(_storage, connection, job, state)", span="113-113", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_55 [label="hash == null", span="100-100", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_57 [label="var job = JobHelper.FromJson<InvocationData>(hash[''Job'']).Deserialize()", span="105-105", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_59 [label="hash.ContainsKey(''Queue'')", span="108-108", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_60 [label="state.Queue = hash[''Queue'']", span="110-110", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_56 [label="return;", span="102-102", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_58 [label="var state = new EnqueuedState { Reason = ''Triggered using recurring job manager'' }", span="106-106", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_63 [label="_factory.Create(context)", span="115-115", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_64 [label="Exit Hangfire.RecurringJobManager.Trigger(string)", span="93-93", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m2_71 [label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m2_72 [label="recurringJobId == null", span="121-121", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_73 [label="throw new ArgumentNullException(nameof(recurringJobId));", span="121-121", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_76 [label="transaction.RemoveHash($''recurring-job:{recurringJobId}'')", span="126-126", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_77 [label="transaction.RemoveFromSet(''recurring-jobs'', recurringJobId)", span="127-127", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_74 [label="var connection = _storage.GetConnection()", span="123-123", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_75 [label="var transaction = connection.CreateWriteTransaction()", span="124-124", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_78 [label="transaction.Commit()", span="129-129", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_79 [label="Exit Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m2_89 [label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="RecurringJobManager.cs"];
m2_81 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="RecurringJobManager.cs"];
m2_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobManager.cs"];
m2_3 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs"];
m2_4 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs"];
m2_5 [label="storage == null", span="48-48", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs", color=red, community=0];
m2_42 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="69-69", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobManager.cs"];
m2_69 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobManager.cs"];
m2_13 [label="Entry HangFire.Client.JobClient.JobClient()", span="7-7", cluster="HangFire.Client.JobClient.JobClient()", file="RecurringJobManager.cs"];
m2_46 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobManager.cs"];
m2_48 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="41-41", cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="RecurringJobManager.cs"];
m2_41 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs"];
m2_47 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="51-51", cluster="Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobManager.cs"];
m2_45 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobManager.cs"];
m2_65 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobManager.cs"];
m2_39 [label="Entry Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m2_82 [label="var schedule = CrontabSchedule.Parse(cronExpression)", span="137-137", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_85 [label="throw new ArgumentException(''CRON expression is invalid. Please see the inner exception for details.'', nameof(cronExpression), ex);", span="142-142", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_83 [label="schedule.GetNextOccurrence(DateTime.UtcNow)", span="138-138", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_84 [label=Exception, span="140-140", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", color=red, community=0, file="RecurringJobManager.cs"];
m2_86 [label="Exit Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m2_49 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobManager.cs"];
m2_43 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobManager.cs"];
m2_7 [label="factory == null", span="49-49", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs", color=red, community=0];
m2_8 [label="throw new ArgumentNullException(nameof(factory));", span="49-49", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=red, community=0, file="RecurringJobManager.cs"];
m2_9 [label="_storage = storage", span="51-51", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs", color=red, community=0];
m2_44 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobManager.cs"];
m2_80 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", span="52-52", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", file="RecurringJobManager.cs"];
m2_87 [label="Entry NCrontab.CrontabSchedule.Parse(string)", span="93-93", cluster="NCrontab.CrontabSchedule.Parse(string)", file="RecurringJobManager.cs"];
m2_88 [label="Entry NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", span="193-193", cluster="NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", file="RecurringJobManager.cs"];
m2_70 [label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31", cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RecurringJobManager.cs"];
m2_90 [label="Hangfire.RecurringJobManager", span="", file="RecurringJobManager.cs"];
m3_18 [label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23", cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RecurringJobManagerExtensions.cs"];
m3_17 [label="Entry Hangfire.RecurringJobOptions.RecurringJobOptions()", span="27-27", cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", file="RecurringJobManagerExtensions.cs"];
m3_0 [label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", span="25-25", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", file="RecurringJobManagerExtensions.cs"];
m3_1 [label="AddOrUpdate(manager, recurringJobId, job, cronExpression, TimeZoneInfo.Utc)", span="31-31", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_2 [label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", span="25-25", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string)", file="RecurringJobManagerExtensions.cs"];
m3_3 [label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="34-34", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManagerExtensions.cs"];
m3_4 [label="AddOrUpdate(manager, recurringJobId, job, cronExpression, timeZone, EnqueuedState.DefaultQueue)", span="41-41", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_5 [label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="34-34", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManagerExtensions.cs"];
m3_16 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="RecurringJobManagerExtensions.cs"];
m3_6 [label="Entry Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="44-44", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManagerExtensions.cs"];
m3_7 [label="manager == null", span="52-52", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_8 [label="throw new ArgumentNullException(nameof(manager));", span="52-52", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_9 [label="timeZone == null", span="53-53", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_10 [label="throw new ArgumentNullException(nameof(timeZone));", span="53-53", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_11 [label="queue == null", span="54-54", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_12 [label="throw new ArgumentNullException(nameof(queue));", span="54-54", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", color=red, community=0, file="RecurringJobManagerExtensions.cs"];
m3_13 [label="manager.AddOrUpdate(\r\n                recurringJobId,\r\n                job,\r\n                cronExpression,\r\n                new RecurringJobOptions { QueueName = queue, TimeZone = timeZone })", span="56-60", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", color=red, community=1, file="RecurringJobManagerExtensions.cs"];
m3_14 [label="Exit Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="44-44", cluster="Hangfire.RecurringJobManagerExtensions.AddOrUpdate(Hangfire.IRecurringJobManager, string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManagerExtensions.cs"];
m4_61 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobOptions.cs"];
m4_150 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="RecurringJobOptions.cs"];
m4_201 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="318-318", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_202 [label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                from,\r\n                from + perPage - 1)", span="321-324", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_203 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'' },\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (job, jobData, state) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="326-337", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_204 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="318-318", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_250 [label="Entry Dictionary<string, string>.cstr", span="", cluster="Dictionary<string, string>.cstr", file="RecurringJobOptions.cs"];
m4_219 [label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="421-421", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_266 [label="var endDate = DateTime.UtcNow", span="424-424", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_273 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="432-432", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_274 [label="var valuesMap = redis.GetValuesMap(keys)", span="433-433", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_267 [label="var dates = new List<DateTime>()", span="425-425", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_270 [label="dates.Add(endDate)", span="428-428", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_271 [label="endDate = endDate.AddHours(-1)", span="429-429", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_268 [label="var i = 0", span="426-426", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_277 [label="i < dates.Count", span="436-436", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_281 [label="result.Add(dates[i], value)", span="444-444", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_269 [label="i < 24", span="426-426", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_272 [label="i++", span="426-426", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_275 [label="var result = new Dictionary<DateTime, long>()", span="435-435", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_279 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="439-439", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_276 [label="var i = 0", span="436-436", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_283 [label="return result;", span="447-447", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_282 [label="i++", span="436-436", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_278 [label="long value", span="438-438", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_280 [label="value = 0", span="441-441", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_284 [label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="421-421", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_94 [label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="450-450", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_295 [label="var endDate = DateTime.UtcNow.Date", span="453-453", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_302 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="464-464", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_303 [label="var valuesMap = redis.GetValuesMap(keys)", span="466-466", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_296 [label="var startDate = endDate.AddDays(-7)", span="454-454", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_298 [label="startDate <= endDate", span="457-457", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_299 [label="dates.Add(endDate)", span="459-459", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_300 [label="endDate = endDate.AddDays(-1)", span="460-460", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_297 [label="var dates = new List<DateTime>()", span="455-455", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_301 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="463-463", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_310 [label="result.Add(dates[i], value)", span="476-476", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_306 [label="i < stringDates.Count", span="469-469", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_304 [label="var result = new Dictionary<DateTime, long>()", span="468-468", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_308 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="472-472", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_305 [label="var i = 0", span="469-469", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_312 [label="return result;", span="479-479", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_311 [label="i++", span="469-469", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_307 [label="long value", span="471-471", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_309 [label="value = 0", span="474-474", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_313 [label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="450-450", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="RecurringJobOptions.cs"];
m4_131 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="RecurringJobOptions.cs"];
m4_208 [label="Entry HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="340-340", cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_209 [label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                from, from + perPage - 1)", span="343-345", cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_210 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'', ''Fetched'' },\r\n                null,\r\n                (job, jobData, state) => new FetchedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                });", span="347-357", cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_211 [label="Exit HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="340-340", cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="RecurringJobOptions.cs"];
m4_288 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="RecurringJobOptions.cs"];
m4_40 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="RecurringJobOptions.cs"];
m4_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RecurringJobOptions.cs"];
m4_41 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RecurringJobOptions.cs"];
m4_130 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="RecurringJobOptions.cs"];
m4_220 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="365-365", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptions.cs"];
m4_221 [label="return GetHourlyTimelineStats(_redis, ''failed'');", span="367-367", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptions.cs"];
m4_222 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="365-365", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="RecurringJobOptions.cs"];
m4_369 [label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="544-544", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_370 [label="var stats = new StatisticsDto()", span="546-546", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_371 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="548-548", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_373 [label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:servers''),\r\n                    x => stats.Servers = x)", span="552-554", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_374 [label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:queues''),\r\n                    x => stats.Queues = x)", span="556-558", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_375 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                    x => stats.Scheduled = x)", span="560-562", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_376 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:processing''),\r\n                    x => stats.Processing = x)", span="564-566", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_377 [label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:succeeded''),\r\n                    x => stats.Succeeded = long.Parse(x ?? ''0''))", span="568-570", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_378 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:failed''),\r\n                    x => stats.Failed = x)", span="572-574", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_379 [label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:deleted''),\r\n                    x => stats.Deleted = long.Parse(x ?? ''0''))", span="576-578", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_382 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                        x => stats.Enqueued += x)", span="583-585", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_384 [label="return stats;", span="591-591", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_372 [label="var pipeline = _redis.CreatePipeline()", span="550-550", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_380 [label=queues, span="580-580", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_383 [label="pipeline.Flush()", span="588-588", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_381 [label="var queueName = queue", span="582-582", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_385 [label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="544-544", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RecurringJobOptions.cs"];
m4_16 [label="Entry HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptions.cs"];
m4_17 [label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="53-53", cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptions.cs"];
m4_18 [label="Exit HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="RecurringJobOptions.cs"];
m4_34 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="RecurringJobOptions.cs"];
m4_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RecurringJobOptions.cs"];
m4_360 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="RecurringJobOptions.cs"];
m4_66 [label="Entry JobList<ScheduledJobDto>.cstr", span="", cluster="JobList<ScheduledJobDto>.cstr", file="RecurringJobOptions.cs"];
m4_63 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="RecurringJobOptions.cs"];
m4_443 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobOptions.cs"];
m4_341 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RecurringJobOptions.cs"];
m4_223 [label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="370-370", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_224 [label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="372-372", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_228 [label="var historyList = _redis.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="378-379", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_225 [label="job.Count == 0", span="373-373", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_239 [label="!job.ContainsKey(''Method'')", span="408-408", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_240 [label="job.Add(''Method'', null)", span="408-408", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_241 [label="!job.ContainsKey(''ParameterTypes'')", span="409-409", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_242 [label="job.Add(''ParameterTypes'', null)", span="409-409", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_243 [label="return new JobDetailsDto\r\n            {\r\n                Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                CreatedAt =\r\n                    job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?) null,\r\n                Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                History = stateHistory\r\n            };", span="411-418", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_226 [label="return null;", span="373-373", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_227 [label="var hiddenProperties = new[]\r\n            { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' }", span="375-376", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_229 [label="var history = historyList\r\n                .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                .ToList()", span="381-383", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_230 [label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="385-385", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_231 [label=history, span="386-386", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_238 [label="stateHistory.Add(dto)", span="404-404", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_232 [label="var dto = new StateHistoryDto\r\n                {\r\n                    StateName = entry[''State''],\r\n                    Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                    CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                }", span="388-393", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_233 [label="var stateData = new Dictionary<string, string>(entry)", span="398-398", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_237 [label="dto.Data = stateData", span="403-403", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_234 [label="stateData.Remove(''State'')", span="399-399", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_235 [label="stateData.Remove(''Reason'')", span="400-400", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_236 [label="stateData.Remove(''CreatedAt'')", span="401-401", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_244 [label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="370-370", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="RecurringJobOptions.cs"];
m4_248 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="RecurringJobOptions.cs"];
m4_88 [label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="RecurringJobOptions.cs"];
m4_362 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="RecurringJobOptions.cs"];
m4_366 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="539-539", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptions.cs"];
m4_367 [label="return _redis.GetListCount(''hangfire:succeeded'');", span="541-541", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptions.cs"];
m4_368 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="539-539", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="RecurringJobOptions.cs"];
m4_346 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobOptions.cs"];
m4_386 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RecurringJobOptions.cs"];
m4_60 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="RecurringJobOptions.cs"];
m4_129 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="RecurringJobOptions.cs"];
m4_246 [label="Entry List<StateHistoryDto>.cstr", span="", cluster="List<StateHistoryDto>.cstr", file="RecurringJobOptions.cs"];
m4_254 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="RecurringJobOptions.cs"];
m4_151 [label="Entry HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="244-244", cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_152 [label="var deletedJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:deleted'',\r\n                from,\r\n                from + count - 1)", span="246-249", cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_153 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                deletedJobIds,\r\n                null,\r\n                new[] { ''DeletedAt'', ''State'' },\r\n                (job, jobData, state) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="251-261", cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_154 [label="Exit HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="244-244", cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_314 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="RecurringJobOptions.cs"];
m4_176 [label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="482-482", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_321 [label="jobIds.Count == 0", span="489-489", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_323 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="491-491", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_324 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="492-492", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_325 [label="properties = properties ?? new string[0]", span="494-494", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_326 [label="var pipeline = redis.CreatePipeline()", span="496-496", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_327 [label=jobIds, span="498-498", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_330 [label="stateProperties != null", span="508-508", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_331 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="510-512", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_333 [label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="519-536", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_322 [label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="489-489", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_329 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="502-506", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_332 [label="pipeline.Flush()", span="516-516", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_328 [label="var id = jobId", span="500-500", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_334 [label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="482-482", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RecurringJobOptions.cs"];
m4_361 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="RecurringJobOptions.cs"];
m4_6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RecurringJobOptions.cs"];
m4_252 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="RecurringJobOptions.cs"];
m4_87 [label="Entry KeyValuePair<string, ScheduledJobDto>.cstr", span="", cluster="KeyValuePair<string, ScheduledJobDto>.cstr", file="RecurringJobOptions.cs"];
m4_158 [label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="RecurringJobOptions.cs"];
m4_435 [label="Entry lambda expression", span="585-585", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_37 [label="Entry lambda expression", span="83-90", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_43 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_38 [label="new ProcessingJobDto\r\n                {\r\n                    ServerId = state[2] ?? state[1],\r\n                    Job = job,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.StateName.Equals(\r\n                        state[3], StringComparison.OrdinalIgnoreCase),\r\n                }", span="83-90", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_39 [label="Exit lambda expression", span="83-90", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_44 [label="x.Value.StartedAt", span="90-90", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_45 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_75 [label="jobs.Add(job.Key, x)", span="118-118", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_85 [label="new KeyValuePair<string, ScheduledJobDto>(\r\n                    job.Key,\r\n                    new ScheduledJobDto\r\n                    {\r\n                        EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                        ScheduledAt = states[job.Key].Count > 1 ? JobHelper.FromNullableStringTimestamp(states[job.Key][1]) : null,\r\n                        InScheduledState =\r\n                            ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="131-140", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_82 [label="states.Add(job.Key, x)", span="124-124", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_70 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' })", span="115-117", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_79 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            new [] { ''State'', ''ScheduledAt'' })", span="121-123", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_69 [label="Entry lambda expression", span="115-117", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_74 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_78 [label="Entry lambda expression", span="121-123", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_81 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_84 [label="Entry lambda expression", span="131-140", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_71 [label="Exit lambda expression", span="115-117", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_76 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_80 [label="Exit lambda expression", span="121-123", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_83 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_86 [label="Exit lambda expression", span="131-140", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_117 [label="servers.Add(name, x)", span="176-176", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_127 [label="new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }", span="187-194", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_124 [label="queues.Add(name, x)", span="181-181", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_114 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="173-175", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_120 [label="x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name))", span="179-180", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_113 [label="Entry lambda expression", span="173-175", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_116 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_119 [label="Entry lambda expression", span="179-180", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_123 [label="Entry lambda expression", span="181-181", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_126 [label="Entry lambda expression", span="187-194", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_115 [label="Exit lambda expression", span="173-175", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_118 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_121 [label="Exit lambda expression", span="179-180", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_125 [label="Exit lambda expression", span="181-181", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_128 [label="Exit lambda expression", span="187-194", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_137 [label="Entry lambda expression", span="209-218", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_138 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = state[5],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                }", span="209-218", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_139 [label="Exit lambda expression", span="209-218", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_146 [label="Entry lambda expression", span="233-241", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_147 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    TotalDuration = state[1] != null && state[2] != null\r\n                        ? (long?)long.Parse(state[1]) + (long?)long.Parse(state[2])\r\n                        : null,\r\n                    InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                }", span="233-241", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_148 [label="Exit lambda expression", span="233-241", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_155 [label="Entry lambda expression", span="256-261", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_156 [label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="256-261", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_157 [label="Exit lambda expression", span="256-261", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_180 [label="x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="278-279", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_186 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="283-283", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_192 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="287-287", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_179 [label="Entry lambda expression", span="278-279", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_182 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_185 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_188 [label="Entry lambda expression", span="284-284", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_191 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_194 [label="Entry lambda expression", span="288-288", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_197 [label="Entry lambda expression", span="298-304", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_181 [label="Exit lambda expression", span="278-279", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_183 [label="firstJobIds = x", span="280-280", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_184 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_187 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_189 [label="length = x", span="284-284", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_190 [label="Exit lambda expression", span="284-284", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_193 [label="Exit lambda expression", span="287-287", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_195 [label="fetched = x", span="288-288", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_196 [label="Exit lambda expression", span="288-288", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_198 [label="new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="298-304", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_199 [label="Exit lambda expression", span="298-304", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_205 [label="Entry lambda expression", span="331-337", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_206 [label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="331-337", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_207 [label="Exit lambda expression", span="331-337", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_212 [label="Entry lambda expression", span="352-357", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_213 [label="new FetchedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = jobData[0],\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                }", span="352-357", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_214 [label="Exit lambda expression", span="352-357", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_257 [label="!hiddenProperties.Contains(x.Key)", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_256 [label="Entry lambda expression", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_260 [label="Entry lambda expression", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_263 [label="Entry lambda expression", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_258 [label="Exit lambda expression", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_261 [label="x.Key", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_262 [label="Exit lambda expression", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_264 [label="x.Value", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_265 [label="Exit lambda expression", span="416-416", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_291 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="432-432", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_290 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_292 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_319 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="464-464", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_315 [label="Entry lambda expression", span="463-463", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_318 [label="Entry lambda expression", span="464-464", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_316 [label="x.ToString(''yyyy-MM-dd'')", span="463-463", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_317 [label="Exit lambda expression", span="463-463", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_320 [label="Exit lambda expression", span="464-464", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_348 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="511-511", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_358 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="531-535", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_343 [label="!jobs.ContainsKey(id)", span="506-506", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_344 [label="jobs.Add(id, x)", span="506-506", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_355 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="520-530", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_351 [label="!states.ContainsKey(id)", span="512-512", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_352 [label="states.Add(id, x)", span="512-512", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_338 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray())", span="503-505", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_337 [label="Entry lambda expression", span="503-505", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_342 [label="Entry lambda expression", span="506-506", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_347 [label="Entry lambda expression", span="511-511", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_350 [label="Entry lambda expression", span="512-512", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_354 [label="Entry lambda expression", span="520-530", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_357 [label="Entry lambda expression", span="531-535", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_339 [label="Exit lambda expression", span="503-505", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_345 [label="Exit lambda expression", span="506-506", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_349 [label="Exit lambda expression", span="511-511", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_353 [label="Exit lambda expression", span="512-512", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_356 [label="Exit lambda expression", span="520-530", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_359 [label="Exit lambda expression", span="531-535", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_363 [label="Entry lambda expression", span="533-533", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_364 [label="y == null", span="533-533", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_365 [label="Exit lambda expression", span="533-533", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_392 [label="stats.Servers = x", span="554-554", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_398 [label="stats.Queues = x", span="558-558", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_404 [label="stats.Scheduled = x", span="562-562", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_410 [label="stats.Processing = x", span="566-566", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_417 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="570-570", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_424 [label="stats.Failed = x", span="574-574", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_430 [label="stats.Deleted = long.Parse(x ?? ''0'')", span="578-578", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_436 [label="stats.Enqueued += x", span="585-585", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_387 [label="Entry lambda expression", span="553-553", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_391 [label="Entry lambda expression", span="554-554", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_394 [label="Entry lambda expression", span="557-557", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_397 [label="Entry lambda expression", span="558-558", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_400 [label="Entry lambda expression", span="561-561", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_403 [label="Entry lambda expression", span="562-562", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_406 [label="Entry lambda expression", span="565-565", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_409 [label="Entry lambda expression", span="566-566", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_412 [label="Entry lambda expression", span="569-569", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_416 [label="Entry lambda expression", span="570-570", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_420 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_423 [label="Entry lambda expression", span="574-574", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_426 [label="Entry lambda expression", span="577-577", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_429 [label="Entry lambda expression", span="578-578", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_433 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="584-584", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_432 [label="Entry lambda expression", span="584-584", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_388 [label="x.GetSetCount(''hangfire:servers'')", span="553-553", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_389 [label="Exit lambda expression", span="553-553", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_393 [label="Exit lambda expression", span="554-554", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_395 [label="x.GetSetCount(''hangfire:queues'')", span="557-557", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_396 [label="Exit lambda expression", span="557-557", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_399 [label="Exit lambda expression", span="558-558", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_401 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="561-561", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_402 [label="Exit lambda expression", span="561-561", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_405 [label="Exit lambda expression", span="562-562", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_407 [label="x.GetSortedSetCount(''hangfire:processing'')", span="565-565", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_408 [label="Exit lambda expression", span="565-565", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_411 [label="Exit lambda expression", span="566-566", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_413 [label="x.GetValue(''hangfire:stats:succeeded'')", span="569-569", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_414 [label="Exit lambda expression", span="569-569", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_418 [label="Exit lambda expression", span="570-570", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_421 [label="x.GetSortedSetCount(''hangfire:failed'')", span="573-573", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_422 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_425 [label="Exit lambda expression", span="574-574", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_427 [label="x.GetValue(''hangfire:stats:deleted'')", span="577-577", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_428 [label="Exit lambda expression", span="577-577", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_431 [label="Exit lambda expression", span="578-578", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_434 [label="Exit lambda expression", span="584-584", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_437 [label="Exit lambda expression", span="585-585", cluster="lambda expression", file="RecurringJobOptions.cs"];
m4_32 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="RecurringJobOptions.cs"];
m4_177 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RecurringJobOptions.cs"];
m4_178 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobOptions.cs"];
m4_68 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="RecurringJobOptions.cs"];
m4_72 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RecurringJobOptions.cs"];
m4_64 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RecurringJobOptions.cs"];
m4_90 [label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="594-594", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs"];
m4_438 [label="return new InvocationData(\r\n                    type,\r\n                    method,\r\n                    parameterTypes,\r\n                    arguments).Deserialize();", span="599-603", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs"];
m4_439 [label=Exception, span="605-605", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs"];
m4_440 [label="return null;", span="607-607", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs"];
m4_441 [label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="594-594", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RecurringJobOptions.cs"];
m4_0 [label="Entry Hangfire.RecurringJobOptions.RecurringJobOptions()", span="27-27", cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", file="RecurringJobOptions.cs"];
m4_1 [label="TimeZone = TimeZoneInfo.Utc", span="29-29", cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", file="RecurringJobOptions.cs", color=green, community=0];
m4_2 [label="QueueName = EnqueuedState.DefaultQueue", span="30-30", cluster="Hangfire.RecurringJobOptions.RecurringJobOptions()", file="RecurringJobOptions.cs", color=green, community=0];
m4_132 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="197-197", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_133 [label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                ''hangfire:failed'',\r\n                from,\r\n                from + count - 1)", span="199-202", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_134 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                failedJobIds,\r\n                null,\r\n                new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                (job, jobData, state) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = state[5],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                });", span="204-218", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_135 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="197-197", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="RecurringJobOptions.cs"];
m4_215 [label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="RecurringJobOptions.cs"];
m4_293 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="RecurringJobOptions.cs"];
m4_175 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RecurringJobOptions.cs"];
m4_287 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="RecurringJobOptions.cs"];
m4_98 [label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="154-154", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_99 [label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="156-156", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_100 [label="serverNames.Count == 0", span="158-158", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_105 [label=serverNames, span="168-168", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_110 [label="return serverNames.Select(x => new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }).ToList();", span="187-194", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_101 [label="return new List<ServerDto>();", span="160-160", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_102 [label="var servers = new Dictionary<string, List<string>>()", span="163-163", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_103 [label="var queues = new Dictionary<string, List<string>>()", span="164-164", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_107 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                        x => servers.Add(name, x))", span="172-176", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_104 [label="var pipeline = _redis.CreatePipeline()", span="166-166", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_108 [label="pipeline.QueueCommand(\r\n                        x => x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name)),\r\n                        x => queues.Add(name, x))", span="178-181", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_109 [label="pipeline.Flush()", span="184-184", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_106 [label="var name = serverName", span="170-170", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_111 [label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="154-154", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RecurringJobOptions.cs"];
m4_25 [label="Entry HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="66-66", cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptions.cs"];
m4_26 [label="return _redis.GetListCount(''hangfire:deleted'');", span="68-68", cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptions.cs"];
m4_27 [label="Exit HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="66-66", cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RecurringJobOptions.cs"];
m4_145 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="RecurringJobOptions.cs"];
m4_141 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="221-221", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs"];
m4_142 [label="var succeededJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:succeeded'',\r\n                from,\r\n                from + count - 1)", span="223-226", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs"];
m4_143 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                succeededJobIds,\r\n                null,\r\n                new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                (job, jobData, state) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    TotalDuration = state[1] != null && state[2] != null\r\n                        ? (long?)long.Parse(state[1]) + (long?)long.Parse(state[2])\r\n                        : null,\r\n                    InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                });", span="228-241", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs"];
m4_144 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="221-221", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RecurringJobOptions.cs"];
m4_91 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="144-144", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptions.cs"];
m4_92 [label="return GetTimelineStats(_redis, ''succeeded'');", span="146-146", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptions.cs"];
m4_93 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="144-144", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RecurringJobOptions.cs"];
m4_65 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="RecurringJobOptions.cs"];
m4_419 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="RecurringJobOptions.cs"];
m4_77 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="RecurringJobOptions.cs"];
m4_42 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="RecurringJobOptions.cs"];
m4_19 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptions.cs"];
m4_20 [label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="58-58", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptions.cs"];
m4_21 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RecurringJobOptions.cs"];
m4_285 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="RecurringJobOptions.cs"];
m4_28 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="71-71", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs"];
m4_29 [label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                ''hangfire:processing'',\r\n                from,\r\n                from + count - 1)", span="74-77", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs"];
m4_30 [label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                (job, jobData, state) => new ProcessingJobDto\r\n                {\r\n                    ServerId = state[2] ?? state[1],\r\n                    Job = job,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.StateName.Equals(\r\n                        state[3], StringComparison.OrdinalIgnoreCase),\r\n                }).OrderBy(x => x.Value.StartedAt).ToList());", span="79-90", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs"];
m4_31 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="71-71", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RecurringJobOptions.cs"];
m4_10 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="RecurringJobOptions.cs"];
m4_149 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="RecurringJobOptions.cs"];
m4_22 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptions.cs"];
m4_23 [label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="63-63", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptions.cs"];
m4_24 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RecurringJobOptions.cs"];
m4_340 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RecurringJobOptions.cs"];
m4_251 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobOptions.cs"];
m4_336 [label="Entry JobList<T>.cstr", span="", cluster="JobList<T>.cstr", file="RecurringJobOptions.cs"];
m4_289 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobOptions.cs"];
m4_442 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobOptions.cs"];
m4_216 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="360-360", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptions.cs"];
m4_217 [label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="362-362", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptions.cs"];
m4_218 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="360-360", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RecurringJobOptions.cs"];
m4_294 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RecurringJobOptions.cs"];
m4_245 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RecurringJobOptions.cs"];
m4_255 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="RecurringJobOptions.cs"];
m4_249 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="RecurringJobOptions.cs"];
m4_335 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RecurringJobOptions.cs"];
m4_390 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="RecurringJobOptions.cs"];
m4_89 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="RecurringJobOptions.cs"];
m4_14 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobOptions.cs"];
m4_95 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="149-149", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptions.cs"];
m4_96 [label="return GetTimelineStats(_redis, ''failed'');", span="151-151", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptions.cs"];
m4_97 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="149-149", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="RecurringJobOptions.cs"];
m4_200 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="RecurringJobOptions.cs"];
m4_140 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RecurringJobOptions.cs"];
m4_159 [label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="264-264", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_160 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="266-266", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_161 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="267-267", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_162 [label=queues, span="269-269", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_172 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue,\r\n                    FirstJobs = jobs,\r\n                    Length = length,\r\n                    Fetched = fetched\r\n                })", span="306-312", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_173 [label="return result;", span="315-315", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_163 [label="IList<string> firstJobIds = null", span="271-271", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_167 [label="pipeline.QueueCommand(\r\n                        x => x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                        x => firstJobIds = x)", span="277-280", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_168 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                        x => length = x)", span="282-284", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_169 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                        x => fetched = x)", span="286-288", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_164 [label="long length = 0", span="272-272", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_165 [label="long fetched = 0", span="273-273", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_166 [label="var pipeline = _redis.CreatePipeline()", span="275-275", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_170 [label="pipeline.Flush()", span="290-290", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_171 [label="var jobs = GetJobsWithProperties(\r\n                    _redis,\r\n                    firstJobIds,\r\n                    new [] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="293-304", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_174 [label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="264-264", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="RecurringJobOptions.cs"];
m4_253 [label="Entry Unk.TryToGetJob", span="", cluster="Unk.TryToGetJob", file="RecurringJobOptions.cs"];
m4_15 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="RecurringJobOptions.cs"];
m4_46 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="93-93", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_47 [label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                ''hangfire:schedule'',\r\n                from,\r\n                from + count - 1)", span="95-98", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_48 [label="scheduledJobs.Count == 0", span="100-100", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_53 [label=scheduledJobs, span="110-110", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_58 [label="return new JobList<ScheduledJobDto>(scheduledJobs\r\n                .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                    job.Key,\r\n                    new ScheduledJobDto\r\n                    {\r\n                        EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                        ScheduledAt = states[job.Key].Count > 1 ? JobHelper.FromNullableStringTimestamp(states[job.Key][1]) : null,\r\n                        InScheduledState =\r\n                            ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                    }))\r\n                .ToList());", span="130-141", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_49 [label="return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());", span="102-102", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_50 [label="var jobs = new Dictionary<string, List<string>>()", span="105-105", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_51 [label="var states = new Dictionary<string, List<String>>()", span="106-106", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_55 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                        x => jobs.Add(job.Key, x))", span="114-118", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_52 [label="var pipeline = _redis.CreatePipeline()", span="108-108", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_56 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            new [] { ''State'', ''ScheduledAt'' }),\r\n                        x => states.Add(job.Key, x))", span="120-124", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_57 [label="pipeline.Flush()", span="127-127", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_54 [label="var job = scheduledJob", span="112-112", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_59 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="93-93", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RecurringJobOptions.cs"];
m4_62 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobOptions.cs"];
m4_33 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="RecurringJobOptions.cs"];
m4_11 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptions.cs"];
m4_12 [label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="48-48", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptions.cs"];
m4_13 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RecurringJobOptions.cs"];
m4_3 [label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RecurringJobOptions.cs"];
m4_286 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="RecurringJobOptions.cs"];
m4_7 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptions.cs"];
m4_8 [label="return _redis.GetSortedSetCount(''hangfire:schedule'');", span="43-43", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptions.cs"];
m4_9 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RecurringJobOptions.cs"];
m4_122 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="RecurringJobOptions.cs"];
m4_259 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="RecurringJobOptions.cs"];
m4_67 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RecurringJobOptions.cs"];
m4_4 [label="Hangfire.RecurringJobOptions", span="", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RecurringJobOptions.cs"];
m4_5 [label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="RecurringJobOptions.cs"];
m4_247 [label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="RecurringJobOptions.cs"];
m4_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="RecurringJobOptions.cs"];
m4_136 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="RecurringJobOptions.cs"];
m4_415 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="RecurringJobOptions.cs"];
m4_73 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="RecurringJobOptions.cs"];
m4_444 [label="HangFire.Redis.RedisMonitoringApi", span="", file="RecurringJobOptions.cs"];
m4_445 [label=job, span="", file="RecurringJobOptions.cs"];
m4_446 [label=jobs, span="", file="RecurringJobOptions.cs"];
m4_447 [label=states, span="", file="RecurringJobOptions.cs"];
m4_448 [label=name, span="", file="RecurringJobOptions.cs"];
m4_449 [label=servers, span="", file="RecurringJobOptions.cs"];
m4_450 [label=queues, span="", file="RecurringJobOptions.cs"];
m4_451 [label=queue, span="", file="RecurringJobOptions.cs"];
m4_452 [label=hiddenProperties, span="", file="RecurringJobOptions.cs"];
m4_453 [label=string, span="", file="RecurringJobOptions.cs"];
m4_454 [label=string, span="", file="RecurringJobOptions.cs"];
m4_455 [label="string[]", span="", file="RecurringJobOptions.cs"];
m4_456 [label=id, span="", file="RecurringJobOptions.cs"];
m4_457 [label=jobs, span="", file="RecurringJobOptions.cs"];
m4_458 [label="string[]", span="", file="RecurringJobOptions.cs"];
m4_459 [label=states, span="", file="RecurringJobOptions.cs"];
m4_460 [label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="RecurringJobOptions.cs"];
m4_461 [label=stats, span="", file="RecurringJobOptions.cs"];
m4_462 [label=queueName, span="", file="RecurringJobOptions.cs"];
m5_52 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="RecurringJobsPage.generated.cs"];
m5_31 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RecurringJobsPage.generated.cs"];
m5_16 [label="Entry HangFire.Server.SchedulePoller.Dispose()", span="40-40", cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs"];
m5_17 [label="_redis.Dispose()", span="42-42", cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs"];
m5_18 [label="Exit HangFire.Server.SchedulePoller.Dispose()", span="40-40", cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs"];
m5_36 [label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_37 [label=true, span="71-71", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_38 [label="!EnqueueNextScheduledJob()", span="73-73", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_40 [label=OperationCanceledException, span="79-79", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_41 [label=ThreadInterruptedException, span="82-82", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_42 [label=Exception, span="85-85", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_39 [label="Thread.Sleep(_pollInterval)", span="75-75", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_43 [label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="87-90", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_44 [label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m5_15 [label="Entry Unk.EnqueueScheduledJob", span="", cluster="Unk.EnqueueScheduledJob", file="RecurringJobsPage.generated.cs"];
m5_27 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobsPage.generated.cs"];
m5_20 [label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m5_21 [label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="47-47", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m5_24 [label="JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="52-54", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m5_25 [label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="58-62", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m5_22 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="48-48", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m5_23 [label="!String.IsNullOrEmpty(queue)", span="50-50", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m5_26 [label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m5_11 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="RecurringJobsPage.generated.cs"];
m5_29 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="RecurringJobsPage.generated.cs"];
m5_33 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="RecurringJobsPage.generated.cs"];
m5_45 [label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0", cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m5_51 [label="Entry System.Threading.Thread.Interrupt()", span="0-0", cluster="System.Threading.Thread.Interrupt()", file="RecurringJobsPage.generated.cs"];
m5_0 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m5_1 [label="_pollInterval = pollInterval", span="19-19", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m5_2 [label="Exit HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m5_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobsPage.generated.cs"];
m5_30 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RecurringJobsPage.generated.cs"];
m5_19 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RecurringJobsPage.generated.cs"];
m5_47 [label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="94-94", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m5_48 [label="thread.Interrupt()", span="96-96", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m5_49 [label="thread.Join()", span="97-97", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m5_50 [label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="94-94", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m5_46 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="RecurringJobsPage.generated.cs"];
m5_13 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="RecurringJobsPage.generated.cs"];
m5_32 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="RecurringJobsPage.generated.cs"];
m5_28 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="RecurringJobsPage.generated.cs"];
m5_14 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="RecurringJobsPage.generated.cs"];
m5_35 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RecurringJobsPage.generated.cs"];
m5_12 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RecurringJobsPage.generated.cs"];
m5_3 [label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_4 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="24-24", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_5 [label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="26-29", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_6 [label="String.IsNullOrEmpty(jobId)", span="31-31", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_8 [label="EnqueueScheduledJob(jobId)", span="36-36", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_7 [label="return false;", span="33-33", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_9 [label="return true;", span="37-37", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_10 [label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m5_53 [label="HangFire.Server.SchedulePoller", span="", file="RecurringJobsPage.generated.cs"];
m6_11 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerStorageOptions.cs"];
m6_12 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerStorageOptions.cs"];
m6_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m6_1 [label="TransactionIsolationLevel = null", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="33-33", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="35-35", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_4 [label="JobExpirationCheckInterval = TimeSpan.FromMinutes(30)", span="37-37", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="38-38", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_6 [label="PrepareSchemaIfNecessary = true", span="39-39", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_7 [label="DashboardJobListLimit = 10000", span="40-40", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_8 [label="_schemaName = Constants.DefaultSchema", span="41-41", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_9 [label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="42-42", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs"];
m6_10 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m6_13 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", file="SqlServerStorageOptions.cs"];
m7_51 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="StackTraceParser.cs"];
m7_0 [label="Entry Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", span="73-73", cluster="Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", file="StackTraceParser.cs"];
m7_1 [label="selector == null", span="77-77", cluster="Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", color=red, community=0, file="StackTraceParser.cs"];
m7_2 [label="throw new ArgumentNullException(nameof(selector));", span="77-77", cluster="Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", color=red, community=0, file="StackTraceParser.cs"];
m7_3 [label="return Parse(text, (idx, len, txt) => txt,\r\n                               (t, m) => new { Type = t, Method = m },\r\n                               (pt, pn) => new KeyValuePair<string, string>(pt, pn),\r\n                               // ReSharper disable once PossibleMultipleEnumeration\r\n                               (pl, ps) => new { List = pl, Items = ps },\r\n                               (fn, ln) => new { File = fn, Line = ln },\r\n                               (f, tm, p, fl) => selector(f, tm.Type, tm.Method, p.List, p.Items, fl.File, fl.Line));", span="79-85", cluster="Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", color=red, community=1, file="StackTraceParser.cs"];
m7_4 [label="Exit Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", span="73-73", cluster="Hangfire.StackTraceParser.Parse<T>(string, System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>)", file="StackTraceParser.cs"];
m7_45 [label="Entry Unk.Range", span="", cluster="Unk.Range", file="StackTraceParser.cs"];
m7_27 [label="Entry System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>.Invoke(T1, T2, T3, T4, T5, T6, T7)", span="0-0", cluster="System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>.Invoke(T1, T2, T3, T4, T5, T6, T7)", file="StackTraceParser.cs"];
m7_46 [label="Entry Unk.parametersSelector", span="", cluster="Unk.parametersSelector", file="StackTraceParser.cs"];
m7_42 [label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="StackTraceParser.cs"];
m7_47 [label="Entry System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", span="0-0", cluster="System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", file="StackTraceParser.cs"];
m7_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="StackTraceParser.cs"];
m7_44 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="StackTraceParser.cs"];
m7_24 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="StackTraceParser.cs"];
m7_25 [label="selector(f, tm.Type, tm.Method, p.List, p.Items, fl.File, fl.Line)", span="85-85", cluster="lambda expression", color=red, community=0, file="StackTraceParser.cs"];
m7_8 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="StackTraceParser.cs"];
m7_11 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="StackTraceParser.cs"];
m7_14 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="StackTraceParser.cs"];
m7_18 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="StackTraceParser.cs"];
m7_21 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="StackTraceParser.cs"];
m7_9 [label=txt, span="79-79", cluster="lambda expression", color=red, community=0, file="StackTraceParser.cs"];
m7_10 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="StackTraceParser.cs"];
m7_12 [label="new { Type = t, Method = m }", span="80-80", cluster="lambda expression", color=red, community=0, file="StackTraceParser.cs"];
m7_13 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="StackTraceParser.cs"];
m7_15 [label="new KeyValuePair<string, string>(pt, pn)", span="81-81", cluster="lambda expression", color=red, community=0, file="StackTraceParser.cs"];
m7_16 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="StackTraceParser.cs"];
m7_19 [label="new { List = pl, Items = ps }", span="83-83", cluster="lambda expression", color=red, community=0, file="StackTraceParser.cs"];
m7_20 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="StackTraceParser.cs"];
m7_22 [label="new { File = fn, Line = ln }", span="84-84", cluster="lambda expression", color=red, community=0, file="StackTraceParser.cs"];
m7_23 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="StackTraceParser.cs"];
m7_26 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="StackTraceParser.cs"];
m7_48 [label="Entry Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", span="121-121", cluster="Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", file="StackTraceParser.cs"];
m7_49 [label="return tokenSelector(capture.Index, capture.Length, capture.Value);", span="123-123", cluster="Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", color=red, community=0, file="StackTraceParser.cs"];
m7_50 [label="Exit Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", span="121-121", cluster="Hangfire.StackTraceParser.Token<T>(System.Text.RegularExpressions.Capture, System.Func<int, int, string, T>)", file="StackTraceParser.cs"];
m7_43 [label="Entry Unk.Token", span="", cluster="Unk.Token", file="StackTraceParser.cs"];
m7_7 [label="Entry Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", span="88-88", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", file="StackTraceParser.cs"];
m7_28 [label="tokenSelector == null", span="97-97", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_29 [label="throw new ArgumentNullException(nameof(tokenSelector));", span="97-97", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_30 [label="methodSelector == null", span="98-98", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_31 [label="throw new ArgumentNullException(nameof(methodSelector));", span="98-98", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_32 [label="parameterSelector == null", span="99-99", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_33 [label="throw new ArgumentNullException(nameof(parameterSelector));", span="99-99", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_34 [label="parametersSelector == null", span="100-100", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_35 [label="throw new ArgumentNullException(nameof(parametersSelector));", span="100-100", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_36 [label="sourceLocationSelector == null", span="101-101", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_37 [label="throw new ArgumentNullException(nameof(sourceLocationSelector));", span="101-101", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_38 [label="selector == null", span="102-102", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_39 [label="throw new ArgumentNullException(nameof(selector));", span="102-102", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=0, file="StackTraceParser.cs"];
m7_40 [label="return from Match m in Regex.Matches(text)\r\n                   select m.Groups into groups\r\n                   let pt = groups[''pt''].Captures\r\n                   let pn = groups[''pn''].Captures\r\n                   select selector(Token(groups[''frame''], tokenSelector),\r\n                                   methodSelector(\r\n                                       Token(groups[''type''], tokenSelector),\r\n                                       Token(groups[''method''], tokenSelector)),\r\n                                   parametersSelector(\r\n                                       Token(groups[''params''], tokenSelector),\r\n                                       from i in Enumerable.Range(0, pt.Count)\r\n                                       select parameterSelector(Token(pt[i], tokenSelector),\r\n                                                                Token(pn[i], tokenSelector))),\r\n                                   sourceLocationSelector(Token(groups[''file''], tokenSelector),\r\n                                                          Token(groups[''line''], tokenSelector)));", span="104-118", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", color=red, community=1, file="StackTraceParser.cs"];
m7_41 [label="Exit Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", span="88-88", cluster="Hangfire.StackTraceParser.Parse<TToken, TMethod, TParameters, TParameter, TSourceLocation, TFrame>(string, System.Func<int, int, string, TToken>, System.Func<TToken, TToken, TMethod>, System.Func<TToken, TToken, TParameter>, System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>, System.Func<TToken, TToken, TSourceLocation>, System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>)", file="StackTraceParser.cs"];
m7_17 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="StackTraceParser.cs"];
m7_52 [label="System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>", span="", file="StackTraceParser.cs"];
m8_39 [label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="87-87", cluster="ConsoleSample.Program.Main()", file="TypeExtensions.cs", color=green, community=0];
m8_76 [label="int dotLength = 1", span="156-156", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="TypeExtensions.cs", color=red, community=0];
m8_46 [label="var workCount = int.Parse(command.Substring(5))", span="102-102", cluster="ConsoleSample.Program.Main()", file="TypeExtensions.cs", color=green, community=0];
m8_0 [label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="27-27", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs"];
m8_1 [label="!type.GetTypeInfo().IsGenericType", span="29-29", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=red, community=0, file="TypeExtensions.cs"];
m8_2 [label="return type.GetFullNameWithoutNamespace()\r\n                        .ReplacePlusWithDotInNestedTypeName();", span="31-32", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=red, community=1, file="TypeExtensions.cs"];
m8_3 [label="return type.GetGenericTypeDefinition()\r\n                    .GetFullNameWithoutNamespace()\r\n                    .ReplacePlusWithDotInNestedTypeName()\r\n                    .ReplaceGenericParametersInGenericTypeName(type);", span="35-38", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=red, community=1, file="TypeExtensions.cs"];
m8_4 [label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="27-27", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=green, community=0, file="TypeExtensions.cs"];
m8_9 [label="Entry string.ReplaceGenericParametersInGenericTypeName(System.Type)", span="168-168", cluster="string.ReplaceGenericParametersInGenericTypeName(System.Type)", color=green, community=0, file="TypeExtensions.cs"];
m8_5 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", color=green, community=0, file="TypeExtensions.cs"];
m8_43 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", color=green, community=0, file="TypeExtensions.cs"];
m8_8 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", color=green, community=0, file="TypeExtensions.cs"];
m8_10 [label="Entry Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="41-41", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, file="TypeExtensions.cs"];
m8_45 [label="Entry Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", span="109-109", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", color=green, community=0, file="TypeExtensions.cs"];
m8_48 [label="x.GetRuntimeMethods()", span="56-56", cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs"];
m8_50 [label="Entry Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", span="104-104", cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", color=green, community=0, file="TypeExtensions.cs"];
m8_6 [label="Entry System.Type.GetFullNameWithoutNamespace()", span="149-149", cluster="System.Type.GetFullNameWithoutNamespace()", color=green, community=0, file="TypeExtensions.cs"];
m8_51 [label="return type.GenericTypeArguments.Length > 0 ? type.GenericTypeArguments : type.GenericTypeParameters;", span="106-106", cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", color=red, community=0, file="TypeExtensions.cs"];
m8_42 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", color=green, community=0, file="TypeExtensions.cs"];
m8_44 [label="Entry System.Reflection.MethodInfo.GetGenericArguments()", span="0-0", cluster="System.Reflection.MethodInfo.GetGenericArguments()", color=green, community=0, file="TypeExtensions.cs"];
m8_7 [label="Entry string.ReplacePlusWithDotInNestedTypeName()", span="163-163", cluster="string.ReplacePlusWithDotInNestedTypeName()", color=green, community=0, file="TypeExtensions.cs"];
m8_11 [label="type == null", span="46-46", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_20 [label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="61-61", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_21 [label="var parameters = methodCandidate.GetParameters()", span="66-66", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_29 [label="!TypesMatchRecursive(parameterType, actualType, genericArguments)", span="85-85", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_30 [label="parameterTypesMatched = false", span="87-87", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_35 [label="Exit Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="41-41", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, file="TypeExtensions.cs"];
m8_36 [label="var workCount = int.Parse(command.Substring(5))", span="84-84", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="TypeExtensions.cs"];
m8_41 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="TypeExtensions.cs"];
m8_52 [label="Exit Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", span="104-104", cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", color=green, community=0, file="TypeExtensions.cs"];
m8_12 [label="throw new ArgumentNullException(nameof(type));", span="46-46", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_13 [label="name == null", span="47-47", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_17 [label="type.GetTypeInfo().IsInterface", span="53-53", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_19 [label=methodCandidates, span="59-59", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_22 [label="parameters.Length != parameterTypes.Length", span="67-67", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_23 [label="var parameterTypesMatched = true", span="72-72", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_26 [label="i < parameters.Length", span="80-80", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_28 [label="var actualType = parameterTypes[i].GetTypeInfo()", span="83-83", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_31 [label="i++", span="80-80", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_32 [label=parameterTypesMatched, span="92-92", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_37 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", color=green, community=0, file="TypeExtensions.cs"];
m8_38 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="TypeExtensions.cs"];
m8_47 [label="Entry lambda expression", span="56-56", cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs"];
m8_14 [label="throw new ArgumentNullException(nameof(name));", span="47-47", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_16 [label="var methodCandidates = new List<MethodInfo>(type.GetRuntimeMethods())", span="51-51", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_15 [label="parameterTypes = parameterTypes ?? new Type[0]", span="49-49", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_18 [label="methodCandidates.AddRange(type.GetTypeInfo()\r\n                    .ImplementedInterfaces.SelectMany(x => x.GetRuntimeMethods()))", span="55-56", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=1, file="TypeExtensions.cs"];
m8_25 [label="var i = 0", span="80-80", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_24 [label="var genericArguments = methodCandidate.ContainsGenericParameters\r\n                    ? new Type[methodCandidate.GetGenericArguments().Length]\r\n                    : null", span="74-76", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=1, file="TypeExtensions.cs"];
m8_27 [label="var parameterType = parameters[i].ParameterType.GetTypeInfo()", span="82-82", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_34 [label="return null;", span="101-101", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=0, file="TypeExtensions.cs"];
m8_33 [label="return genericArguments != null\r\n                        ? methodCandidate.MakeGenericMethod(genericArguments)\r\n                        : methodCandidate;", span="95-97", cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=red, community=1, file="TypeExtensions.cs"];
m8_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", color=green, community=0, file="TypeExtensions.cs"];
m8_49 [label="Exit lambda expression", span="56-56", cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs"];
m8_53 [label="parameterType.IsGenericParameter", span="111-111", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_54 [label="var position = parameterType.GenericParameterPosition", span="113-113", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_104 [label=number, span="", cluster="Unk.Join", file="TypeExtensions.cs"];
m8_67 [label="return false;", span="139-139", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_98 [label="genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray()", span="180-180", cluster="lambda expression", file="TypeExtensions.cs", color=red, community=0];
m8_84 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="TypeExtensions.cs"];
m8_85 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="TypeExtensions.cs"];
m8_86 [label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="45-45", cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", color=red, community=0, file="TypeExtensions.cs"];
m8_89 [label="Exit lambda expression", span="95-95", cluster="lambda expression", color=red, community=1, file="TypeExtensions.cs"];
m8_87 [label="Entry lambda expression", span="95-95", cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs"];
m8_88 [label="x.Random(number)", span="95-95", cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs"];
m8_90 [label="Entry lambda expression", span="103-113", cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs"];
m8_91 [label="i % 2 == 0", span="105-105", cluster="lambda expression", file="TypeExtensions.cs", color=green, community=0];
m8_80 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="TypeExtensions.cs"];
m8_81 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="TypeExtensions.cs"];
m8_82 [label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="87-87", cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs"];
m8_83 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="TypeExtensions.cs"];
m8_101 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="TypeExtensions.cs"];
m8_66 [label="!TypesMatchRecursive(parameterGenericArgument.GetTypeInfo(), actualGenericArgument.GetTypeInfo(), genericArguments)", span="137-137", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_56 [label="return false;", span="118-118", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_72 [label="Entry ConsoleSample.Services.Random(int)", span="28-28", cluster="ConsoleSample.Services.Random(int)", file="TypeExtensions.cs"];
m8_92 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="107-107", cluster="lambda expression", file="TypeExtensions.cs", color=green, community=0];
m8_60 [label="!actualType.IsGenericType || parameterType.GetGenericTypeDefinition() != actualType.GetGenericTypeDefinition()", span="127-127", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_102 [label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11", cluster="ConsoleSample.Services.EmptyDefault()", file="TypeExtensions.cs"];
m8_105 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="TypeExtensions.cs"];
m8_79 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="TypeExtensions.cs"];
m8_57 [label="genericArguments[position] = actualType.AsType()", span="121-121", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_63 [label="i < parameterType.GenericTypeArguments.Length", span="132-132", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs", color=red, community=0];
m8_55 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="30-30", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", color=red, community=0, file="TypeExtensions.cs"];
m8_59 [label="Entry HangFire.BackgroundJobServer.Start()", span="66-66", cluster="HangFire.BackgroundJobServer.Start()", color=red, community=0, file="TypeExtensions.cs"];
m8_64 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", color=red, community=0, file="TypeExtensions.cs"];
m8_65 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="59-59", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="TypeExtensions.cs"];
m8_70 [label="x.Random(number)", span="46-46", cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs"];
m8_58 [label="return true;", span="122-122", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", color=red, community=0, file="TypeExtensions.cs"];
m8_61 [label="return false;", span="129-129", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", color=red, community=0, file="TypeExtensions.cs"];
m8_62 [label="var i = 0", span="132-132", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", color=red, community=0, file="TypeExtensions.cs"];
m8_68 [label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0", cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", color=red, community=0, file="TypeExtensions.cs"];
m8_69 [label="return true;", span="143-143", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", color=red, community=0, file="TypeExtensions.cs"];
m8_71 [label="Exit Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", span="109-109", cluster="Hangfire.Common.TypeExtensions.TypesMatchRecursive(System.Reflection.TypeInfo, System.Reflection.TypeInfo, System.Collections.Generic.IList<System.Type>)", file="TypeExtensions.cs"];
m8_99 [label="return string.Concat(''<'', currentArguments, ''>'');", span="181-181", cluster="lambda expression", file="TypeExtensions.cs", color=red, community=0];
m8_95 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="TypeExtensions.cs"];
m8_97 [label="Exit lambda expression", span="107-107", cluster="lambda expression", color=red, community=0, file="TypeExtensions.cs"];
m8_96 [label="x.EmptyCritical()", span="107-107", cluster="lambda expression", color=green, community=0, file="TypeExtensions.cs"];
m8_100 [label="x.EmptyDefault()", span="111-111", cluster="lambda expression", file="TypeExtensions.cs", color=green, community=0];
m8_77 [label="return !String.IsNullOrEmpty(type.Namespace)\r\n                ? type.FullName.Substring(type.Namespace.Length + dotLength)\r\n                : type.FullName;", span="158-160", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="TypeExtensions.cs", color=red, community=1];
m8_74 [label="type.IsGenericParameter", span="151-151", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=red, community=0, file="TypeExtensions.cs"];
m8_78 [label="Exit Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="149-149", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=green, community=0, file="TypeExtensions.cs"];
m8_93 [label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string)", color=green, community=0, file="TypeExtensions.cs"];
m8_94 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="TypeExtensions.cs"];
m8_103 [label=number, span="", cluster="Unk.Select", file="TypeExtensions.cs"];
m8_107 [label="Entry string.Concat(string, string, string)", span="0-0", cluster="string.Concat(string, string, string)", file="TypeExtensions.cs"];
m8_73 [label="Entry Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="149-149", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="TypeExtensions.cs"];
m8_75 [label="return type.Name;", span="153-153", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=red, community=0, file="TypeExtensions.cs"];
m8_106 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TypeExtensions.cs"];
m8_108 [label=genericArguments, span="", file="TypeExtensions.cs"];
m9_36 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37", cluster="HangFire.JobHelper.FromJson<T>(string)", file="TypeExtensionsFacts.cs"];
m9_113 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TypeExtensionsFacts.cs"];
m9_291 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="TypeExtensionsFacts.cs"];
m9_30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="TypeExtensionsFacts.cs"];
m9_133 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="TypeExtensionsFacts.cs"];
m9_43 [label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_44 [label=Redis, span="82-82", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_45 [label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_46 [label="scheduledJobs.Count == 0", span="89-89", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_51 [label=scheduledJobs, span="99-99", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_56 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_47 [label="return new Dictionary<string, ScheduleDto>();", span="91-91", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_48 [label="var jobs = new Dictionary<string, List<string>>()", span="94-94", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_49 [label="var states = new Dictionary<string, string>()", span="95-95", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_53 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_50 [label="var pipeline = Redis.CreatePipeline()", span="97-97", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_54 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_55 [label="pipeline.Flush()", span="116-116", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_52 [label="var job = scheduledJob", span="101-101", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_57 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_38 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="TypeExtensionsFacts.cs"];
m9_214 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="TypeExtensionsFacts.cs"];
m9_386 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="TypeExtensionsFacts.cs"];
m9_29 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="TypeExtensionsFacts.cs"];
m9_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TypeExtensionsFacts.cs"];
m9_359 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="TypeExtensionsFacts.cs"];
m9_197 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="TypeExtensionsFacts.cs"];
m9_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="TypeExtensionsFacts.cs"];
m9_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="TypeExtensionsFacts.cs"];
m9_23 [label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_24 [label=Redis, span="55-55", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_25 [label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_26 [label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-76", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_27 [label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_134 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="TypeExtensionsFacts.cs"];
m9_257 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="TypeExtensionsFacts.cs"];
m9_234 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="TypeExtensionsFacts.cs"];
m9_173 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_324 [label="jobIds.Count == 0", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_326 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_327 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_328 [label="var pipeline = redis.CreatePipeline()", span="512-512", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_329 [label=jobIds, span="514-514", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_331 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_332 [label="stateProperties != null", span="522-522", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_333 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_335 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_325 [label="return new List<KeyValuePair<string, T>>();", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_334 [label="pipeline.Flush()", span="530-530", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_330 [label="var id = jobId", span="516-516", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_336 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs"];
m9_361 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="TypeExtensionsFacts.cs"];
m9_345 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TypeExtensionsFacts.cs"];
m9_11 [label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="TypeExtensionsFacts.cs"];
m9_12 [label=Redis, span="30-30", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_13 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_14 [label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="TypeExtensionsFacts.cs"];
m9_219 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_269 [label="var endDate = DateTime.UtcNow", span="442-442", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_276 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_277 [label="var valuesMap = redis.GetValuesMap(keys)", span="451-451", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_270 [label="var dates = new List<DateTime>()", span="443-443", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_273 [label="dates.Add(endDate)", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_274 [label="endDate = endDate.AddHours(-1)", span="447-447", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_271 [label="var i = 0", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_280 [label="i < dates.Count", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_284 [label="result.Add(dates[i], value)", span="462-462", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_272 [label="i < 24", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_275 [label="i++", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_278 [label="var result = new Dictionary<DateTime, long>()", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_282 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_279 [label="var i = 0", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_286 [label="return result;", span="465-465", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_285 [label="i++", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_281 [label="long value", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_283 [label="value = 0", span="459-459", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_287 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_232 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="TypeExtensionsFacts.cs"];
m9_58 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="TypeExtensionsFacts.cs"];
m9_132 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="TypeExtensionsFacts.cs"];
m9_258 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="TypeExtensionsFacts.cs"];
m9_236 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_237 [label=Redis, span="395-395", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_238 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_242 [label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="405-408", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_239 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_240 [label="String.IsNullOrEmpty(queue)", span="400-400", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_241 [label="return false;", span="402-402", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_243 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs"];
m9_174 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="TypeExtensionsFacts.cs"];
m9_317 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="TypeExtensionsFacts.cs"];
m9_360 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="TypeExtensionsFacts.cs"];
m9_429 [label="Entry lambda expression", span="593-593", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_32 [label="Entry lambda expression", span="66-76", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_40 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_33 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_34 [label="Exit lambda expression", span="66-76", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_41 [label="x.Value.StartedAt", span="76-76", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_42 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_70 [label="jobs.Add(job.Key, x)", span="107-107", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_84 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_78 [label="states.Add(job.Key, x)", span="113-113", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_65 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_74 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_64 [label="Entry lambda expression", span="104-106", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_69 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_73 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_77 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_80 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_83 [label="Entry lambda expression", span="121-129", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_66 [label="Exit lambda expression", span="104-106", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_71 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_75 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_79 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_81 [label="job.Key", span="120-120", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_82 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_85 [label="Exit lambda expression", span="121-129", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_120 [label="servers.Add(name, x)", span="173-173", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_130 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_127 [label="queues.Add(name, x)", span="178-178", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_117 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_123 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_116 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_119 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_122 [label="Entry lambda expression", span="176-177", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_126 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_129 [label="Entry lambda expression", span="184-191", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_118 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_121 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_124 [label="Exit lambda expression", span="176-177", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_128 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_131 [label="Exit lambda expression", span="184-191", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_141 [label="Entry lambda expression", span="209-219", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_142 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_143 [label="Exit lambda expression", span="209-219", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_151 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_152 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_153 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_177 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_183 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_189 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_176 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_179 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_182 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_185 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_188 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_191 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_194 [label="Entry lambda expression", span="284-290", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_178 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_180 [label="firstJobIds = x", span="266-266", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_181 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_184 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_186 [label="length = x", span="270-270", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_187 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_190 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_192 [label="dequeued = x", span="274-274", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_193 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_195 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_196 [label="Exit lambda expression", span="284-290", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_203 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_204 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326", cluster="lambda expression", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_205 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_211 [label="Entry lambda expression", span="344-352", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_212 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_213 [label="Exit lambda expression", span="344-352", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_260 [label="!hiddenProperties.Contains(x.Key)", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_259 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_263 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_266 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_261 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_264 [label="x.Key", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_265 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_267 [label="x.Value", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_268 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_294 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_293 [label="Entry lambda expression", span="450-450", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_295 [label="Exit lambda expression", span="450-450", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_322 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_318 [label="Entry lambda expression", span="481-481", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_321 [label="Entry lambda expression", span="482-482", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_319 [label="x.ToString(''yyyy-MM-dd'')", span="481-481", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_320 [label="Exit lambda expression", span="481-481", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_323 [label="Exit lambda expression", span="482-482", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_339 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_347 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_357 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_342 [label="!jobs.ContainsKey(id)", span="520-520", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_343 [label="jobs.Add(id, x)", span="520-520", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_354 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_350 [label="!states.ContainsKey(id)", span="526-526", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_351 [label="states.Add(id, x)", span="526-526", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_338 [label="Entry lambda expression", span="519-519", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_341 [label="Entry lambda expression", span="520-520", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_346 [label="Entry lambda expression", span="525-525", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_349 [label="Entry lambda expression", span="526-526", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_353 [label="Entry lambda expression", span="534-539", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_356 [label="Entry lambda expression", span="540-542", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_340 [label="Exit lambda expression", span="519-519", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_344 [label="Exit lambda expression", span="520-520", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_348 [label="Exit lambda expression", span="525-525", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_352 [label="Exit lambda expression", span="526-526", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_355 [label="Exit lambda expression", span="534-539", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_358 [label="Exit lambda expression", span="540-542", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_362 [label="Entry lambda expression", span="542-542", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_363 [label="y == null", span="542-542", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_364 [label="Exit lambda expression", span="542-542", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_392 [label="stats.Servers = x", span="566-566", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_398 [label="stats.Queues = x", span="570-570", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_404 [label="stats.Scheduled = x", span="574-574", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_410 [label="stats.Processing = x", span="578-578", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_417 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_424 [label="stats.Failed = x", span="586-586", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_430 [label="stats.Enqueued += x", span="593-593", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_387 [label="Entry lambda expression", span="565-565", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_391 [label="Entry lambda expression", span="566-566", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_394 [label="Entry lambda expression", span="569-569", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_397 [label="Entry lambda expression", span="570-570", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_400 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_403 [label="Entry lambda expression", span="574-574", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_406 [label="Entry lambda expression", span="577-577", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_409 [label="Entry lambda expression", span="578-578", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_412 [label="Entry lambda expression", span="581-581", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_416 [label="Entry lambda expression", span="582-582", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_420 [label="Entry lambda expression", span="585-585", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_423 [label="Entry lambda expression", span="586-586", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_427 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_426 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_388 [label="x.GetSetCount(''hangfire:servers'')", span="565-565", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_389 [label="Exit lambda expression", span="565-565", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_393 [label="Exit lambda expression", span="566-566", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_395 [label="x.GetSetCount(''hangfire:queues'')", span="569-569", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_396 [label="Exit lambda expression", span="569-569", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_399 [label="Exit lambda expression", span="570-570", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_401 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_402 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_405 [label="Exit lambda expression", span="574-574", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_407 [label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_408 [label="Exit lambda expression", span="577-577", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_411 [label="Exit lambda expression", span="578-578", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_413 [label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_414 [label="Exit lambda expression", span="581-581", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_418 [label="Exit lambda expression", span="582-582", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_421 [label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_422 [label="Exit lambda expression", span="585-585", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_425 [label="Exit lambda expression", span="586-586", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_428 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_431 [label="Exit lambda expression", span="593-593", cluster="lambda expression", file="TypeExtensionsFacts.cs"];
m9_28 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="TypeExtensionsFacts.cs"];
m9_175 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeExtensionsFacts.cs"];
m9_115 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="TypeExtensionsFacts.cs"];
m9_67 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="TypeExtensionsFacts.cs"];
m9_220 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs"];
m9_221 [label=Redis, span="366-366", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs"];
m9_222 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs"];
m9_223 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs"];
m9_35 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="TypeExtensionsFacts.cs"];
m9_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="TypeExtensionsFacts.cs"];
m9_135 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_136 [label=Redis, span="197-197", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_137 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_138 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_139 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_0 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs"];
m9_1 [label=Redis, span="14-14", cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_2 [label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16", cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_3 [label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs"];
m9_37 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="TypeExtensionsFacts.cs"];
m9_144 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="TypeExtensionsFacts.cs"];
m9_87 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50", cluster="HangFire.JobHelper.FromTimestamp(long)", file="TypeExtensionsFacts.cs"];
m9_296 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="TypeExtensionsFacts.cs"];
m9_145 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_146 [label=Redis, span="225-225", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_147 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_148 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_149 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs"];
m9_172 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="TypeExtensionsFacts.cs"];
m9_290 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="TypeExtensionsFacts.cs"];
m9_150 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="TypeExtensionsFacts.cs"];
m9_155 [label="Entry HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs"];
m9_156 [label=Redis, span="250-250", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_157 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_158 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_159 [label=queues, span="255-255", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_169 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_170 [label="return result;", span="301-301", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_160 [label="IList<string> firstJobIds = null", span="257-257", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_164 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_165 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_166 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_161 [label="long length = 0", span="258-258", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_162 [label="long dequeued = 0", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_163 [label="var pipeline = Redis.CreatePipeline()", span="261-261", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_167 [label="pipeline.Flush()", span="276-276", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_168 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290", cluster="HangFire.Web.JobStorage.Queues()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_171 [label="Exit HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs"];
m9_88 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="TypeExtensionsFacts.cs"];
m9_89 [label=Redis, span="135-135", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_90 [label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_91 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="TypeExtensionsFacts.cs"];
m9_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="TypeExtensionsFacts.cs"];
m9_154 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="TypeExtensionsFacts.cs"];
m9_419 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="TypeExtensionsFacts.cs"];
m9_72 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="TypeExtensionsFacts.cs"];
m9_97 [label="Entry HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs"];
m9_98 [label=Redis, span="151-151", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_99 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_100 [label="serverNames.Count == 0", span="155-155", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_105 [label=serverNames, span="165-165", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_110 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_101 [label="return new List<ServerDto>();", span="157-157", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_102 [label="var servers = new Dictionary<string, List<string>>()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_103 [label="var queues = new Dictionary<string, List<string>>()", span="161-161", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_107 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_104 [label="var pipeline = Redis.CreatePipeline()", span="163-163", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_108 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_109 [label="pipeline.Flush()", span="181-181", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_106 [label="var name = serverName", span="167-167", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_111 [label="Exit HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs"];
m9_369 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_370 [label=Redis, span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_371 [label="var stats = new StatisticsDto()", span="558-558", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_372 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_374 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_375 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_376 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_377 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_378 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_379 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_382 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_384 [label="return stats;", span="599-599", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_373 [label="var pipeline = Redis.CreatePipeline()", span="562-562", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_380 [label=queues, span="588-588", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_383 [label="pipeline.Flush()", span="596-596", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_381 [label="var queueName = queue", span="590-590", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_385 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs"];
m9_365 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs"];
m9_366 [label=Redis, span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs"];
m9_367 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs"];
m9_368 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs"];
m9_215 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs"];
m9_216 [label=Redis, span="358-358", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs"];
m9_217 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs"];
m9_218 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs"];
m9_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="TypeExtensionsFacts.cs"];
m9_235 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="TypeExtensionsFacts.cs"];
m9_288 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="TypeExtensionsFacts.cs"];
m9_92 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_298 [label="var endDate = DateTime.UtcNow.Date", span="471-471", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_305 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_306 [label="var valuesMap = redis.GetValuesMap(keys)", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_299 [label="var startDate = endDate.AddDays(-7)", span="472-472", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_301 [label="startDate <= endDate", span="475-475", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_302 [label="dates.Add(endDate)", span="477-477", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_303 [label="endDate = endDate.AddDays(-1)", span="478-478", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_300 [label="var dates = new List<DateTime>()", span="473-473", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_304 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_313 [label="result.Add(dates[i], value)", span="494-494", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_309 [label="i < stringDates.Count", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_307 [label="var result = new Dictionary<DateTime, long>()", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_311 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_308 [label="var i = 0", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_315 [label="return result;", span="497-497", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_314 [label="i++", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_310 [label="long value", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_312 [label="value = 0", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_316 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs"];
m9_4 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="TypeExtensionsFacts.cs"];
m9_15 [label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36", cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs"];
m9_16 [label=Redis, span="38-38", cluster="HangFire.Web.JobStorage.FailedCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_17 [label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40", cluster="HangFire.Web.JobStorage.FailedCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_18 [label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36", cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs"];
m9_255 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="TypeExtensionsFacts.cs"];
m9_244 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_245 [label=Redis, span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_246 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_250 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_247 [label="job.Count == 0", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_252 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_248 [label="return null;", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_249 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_251 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_253 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs"];
m9_292 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TypeExtensionsFacts.cs"];
m9_5 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs"];
m9_6 [label=Redis, span="22-22", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_7 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_8 [label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs"];
m9_297 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="TypeExtensionsFacts.cs"];
m9_254 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="TypeExtensionsFacts.cs"];
m9_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="TypeExtensionsFacts.cs"];
m9_337 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="TypeExtensionsFacts.cs"];
m9_390 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="TypeExtensionsFacts.cs"];
m9_206 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs"];
m9_207 [label=Redis, span="333-333", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs"];
m9_208 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs"];
m9_209 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs"];
m9_210 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs"];
m9_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="TypeExtensionsFacts.cs"];
m9_93 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="TypeExtensionsFacts.cs"];
m9_94 [label=Redis, span="143-143", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_95 [label="return GetTimelineStats(Redis, ''failed'');", span="145-145", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_96 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="TypeExtensionsFacts.cs"];
m9_10 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="TypeExtensionsFacts.cs"];
m9_86 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="TypeExtensionsFacts.cs"];
m9_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TypeExtensionsFacts.cs"];
m9_233 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="TypeExtensionsFacts.cs"];
m9_289 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="TypeExtensionsFacts.cs"];
m9_19 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="TypeExtensionsFacts.cs"];
m9_20 [label=Redis, span="46-46", cluster="HangFire.Web.JobStorage.ProcessingCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_21 [label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48", cluster="HangFire.Web.JobStorage.ProcessingCount()", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_22 [label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="TypeExtensionsFacts.cs"];
m9_125 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="TypeExtensionsFacts.cs"];
m9_262 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="TypeExtensionsFacts.cs"];
m9_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TypeExtensionsFacts.cs"];
m9_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="TypeExtensionsFacts.cs"];
m9_140 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="TypeExtensionsFacts.cs"];
m9_415 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="TypeExtensionsFacts.cs"];
m9_68 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="TypeExtensionsFacts.cs"];
m9_224 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_225 [label=Redis, span="374-374", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_226 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_230 [label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-389", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_227 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_228 [label="String.IsNullOrEmpty(queue)", span="379-379", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_229 [label="return false;", span="381-381", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_231 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs"];
m9_198 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs"];
m9_199 [label=Redis, span="308-308", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_200 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_201 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", color=red, community=0, file="TypeExtensionsFacts.cs"];
m9_202 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs"];
m9_432 [label=job, span="", file="TypeExtensionsFacts.cs"];
m9_433 [label=jobs, span="", file="TypeExtensionsFacts.cs"];
m9_434 [label=states, span="", file="TypeExtensionsFacts.cs"];
m9_435 [label=name, span="", file="TypeExtensionsFacts.cs"];
m9_436 [label=servers, span="", file="TypeExtensionsFacts.cs"];
m9_437 [label=queues, span="", file="TypeExtensionsFacts.cs"];
m9_438 [label=queue, span="", file="TypeExtensionsFacts.cs"];
m9_439 [label=hiddenProperties, span="", file="TypeExtensionsFacts.cs"];
m9_440 [label=string, span="", file="TypeExtensionsFacts.cs"];
m9_441 [label=string, span="", file="TypeExtensionsFacts.cs"];
m9_442 [label="string[]", span="", file="TypeExtensionsFacts.cs"];
m9_443 [label=id, span="", file="TypeExtensionsFacts.cs"];
m9_444 [label=jobs, span="", file="TypeExtensionsFacts.cs"];
m9_445 [label="string[]", span="", file="TypeExtensionsFacts.cs"];
m9_446 [label=states, span="", file="TypeExtensionsFacts.cs"];
m9_447 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="TypeExtensionsFacts.cs"];
m9_448 [label=stats, span="", file="TypeExtensionsFacts.cs"];
m9_449 [label=queueName, span="", file="TypeExtensionsFacts.cs"];
n25 -> n22  [key=1, style=dashed, color=darkseagreen4, label=string];
n26 -> n22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>"];
n27 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n8  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n6 -> n4  [key=0, style=bold, color=blue];
n7 -> n10  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n7  [key=2, style=dotted];
n9 -> n3  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=2, style=dotted];
n11 -> n7  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n12 -> n16  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n12 -> n22  [key=1, style=dashed, color=darkseagreen4, label=string];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n19  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n20  [key=2, style=dotted];
n16 -> n21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n16 -> n16  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n14 -> n17  [key=0, style=solid];
n14 -> n18  [key=2, style=dotted];
n17 -> n12  [key=0, style=bold, color=blue];
n21 -> n22  [key=0, style=solid];
n23 -> n21  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_12 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_12 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_12 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m0_12 -> m0_30  [key=2, style=dotted, color=green];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_19  [key=2, style=dotted];
m0_13 -> m0_36  [key=2, style=dotted, color=green];
m0_13 -> m0_31  [key=2, style=dotted, color=green];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_14 -> m0_19  [key=2, style=dotted];
m0_14 -> m0_30  [key=2, style=dotted, color=green];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_20  [key=2, style=dotted];
m0_15 -> m0_21  [key=2, style=dotted];
m0_15 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_15 -> m0_37  [key=2, style=dotted];
m0_15 -> m0_38  [key=2, style=dotted];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [key=2, style=dotted];
m0_16 -> m0_30  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_31  [key=2, style=dotted];
m0_17 -> m0_39  [key=2, style=dotted];
m0_18 -> m0_12  [key=0, style=bold, color=blue];
m0_18 -> m0_30  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_11 -> m0_31  [key=2, style=dotted];
m0_19 -> m0_31  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_21 -> m0_31  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_30  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_30  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_31  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_30  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_31  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_32  [key=2, style=dotted];
m0_6 -> m0_30  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_31  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_33  [key=2, style=dotted];
m0_8 -> m0_30  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_31  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_34  [key=2, style=dotted];
m0_9 -> m0_35  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_30  [key=2, style=dotted];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m0_20 -> m0_30  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_22 -> m0_30  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_31  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_40  [key=2, style=dotted];
m0_24 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_25 -> m0_31  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_25 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_31  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_32  [key=2, style=dotted];
m0_28 -> m0_30  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_0  [key=0, style=bold, color=blue];
m0_41 -> m0_12  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_13  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_14  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m0_41 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m2_18 -> m2_1  [key=3, color=green, style=bold, label="Parameter variable object args"];
m2_18 -> m2_19  [key=0, style=solid, color=green];
m2_18 -> m2_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan interval"];
m2_18 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m2_18 -> m2_38  [key=0, style=solid, color=red];
m2_18 -> n18  [key=2, style=dotted, color=red];
m2_18 -> m2_13  [key=2, style=dotted, color=red];
m2_19 -> m2_20  [key=0, style=solid, color=red];
m2_19 -> m2_21  [key=2, style=dotted, color=green];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_20 -> m2_38  [key=0, style=solid, color=red];
m2_20 -> n18  [key=2, style=dotted, color=red];
m2_20 -> m2_13  [key=2, style=dotted, color=red];
m2_6 -> m2_1  [key=3, color=green, style=bold, label="Parameter variable object args"];
m2_6 -> m2_10  [key=0, style=solid, color=green];
m2_6 -> m2_11  [key=1, style=dashed, color=green, label="System.Type"];
m2_6 -> m2_3  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m2_6 -> m2_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type jobType"];
m2_6 -> n18  [key=2, style=dotted, color=red];
m2_6 -> m2_13  [key=2, style=dotted, color=red];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_10 -> m2_13  [key=2, style=dotted, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_11 -> m2_14  [key=2, style=dotted, color=green];
m2_11 -> m2_4  [key=0, style=bold, color=blue];
m2_12 -> m2_6  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid, color=red];
m2_14 -> m2_16  [key=1, style=dashed, color=red, label=string];
m2_14 -> m2_17  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m2_14 -> m2_18  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m2_14 -> m2_19  [key=1, style=dashed, color=red, label=string];
m2_14 -> m2_20  [key=1, style=dashed, color=red, label=string];
m2_14 -> m2_21  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobOptions"];
m2_14 -> m2_22  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobOptions"];
m2_14 -> m2_23  [key=1, style=dashed, color=red, label=string];
m2_14 -> m2_26  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m2_14 -> m2_28  [key=1, style=dashed, color=red, label=string];
m2_14 -> m2_29  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobOptions"];
m2_14 -> m2_30  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobOptions"];
m2_14 -> m2_31  [key=1, style=dashed, color=red, label=string];
m2_14 -> m2_35  [key=1, style=dashed, color=red, label=string];
m2_14 -> m2_36  [key=1, style=dashed, color=red, label=string];
m2_15 -> m2_16  [key=0, style=solid, color=green];
m2_15 -> m2_17  [key=0, style=solid, color=red];
m2_15 -> m2_18  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m2_16 -> m2_38  [key=0, style=solid, color=red];
m2_16 -> n18  [key=2, style=dotted, color=red];
m2_16 -> m2_13  [key=2, style=dotted, color=red];
m2_16 -> m2_17  [key=0, style=solid, color=green];
m2_16 -> m2_18  [key=2, style=dotted, color=green];
m2_17 -> m2_18  [key=0, style=solid, color=red];
m2_17 -> m2_19  [key=0, style=solid, color=red];
m2_17 -> m2_15  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid, color=red];
m2_21 -> m2_23  [key=0, style=solid, color=red];
m2_21 -> m2_1  [key=3, color=green, style=bold, label="Parameter variable object args"];
m2_21 -> m2_25  [key=0, style=solid, color=green];
m2_21 -> m2_26  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m2_21 -> m2_18  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m2_22 -> m2_38  [key=0, style=solid, color=red];
m2_22 -> n18  [key=2, style=dotted, color=red];
m2_22 -> m2_13  [key=2, style=dotted, color=red];
m2_22 -> m2_23  [key=0, style=solid, color=green];
m2_22 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m2_23 -> m2_24  [key=0, style=solid, color=green];
m2_23 -> m2_39  [key=2, style=dotted, color=red];
m2_23 -> m2_21  [key=2, style=dotted, color=green];
m2_26 -> m2_27  [key=0, style=solid, color=green];
m2_26 -> m2_42  [key=2, style=dotted, color=red];
m2_26 -> m2_28  [key=2, style=dotted, color=green];
m2_28 -> m2_29  [key=0, style=solid, color=red];
m2_29 -> m2_30  [key=0, style=solid, color=red];
m2_30 -> m2_31  [key=0, style=solid, color=red];
m2_31 -> m2_32  [key=0, style=solid, color=red];
m2_31 -> m2_44  [key=2, style=dotted, color=red];
m2_35 -> m2_36  [key=0, style=solid, color=red];
m2_35 -> m2_47  [key=2, style=dotted, color=red];
m2_36 -> m2_37  [key=0, style=solid, color=red];
m2_36 -> m2_48  [key=2, style=dotted, color=red];
m2_24 -> m2_25  [key=0, style=solid, color=red];
m2_24 -> m2_40  [key=2, style=dotted, color=red];
m2_24 -> m2_31  [key=1, style=dashed, color=red, label=connection];
m2_24 -> m2_34  [key=1, style=dashed, color=red, label=connection];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid, color=green];
m2_25 -> m2_41  [key=2, style=dotted, color=red];
m2_25 -> m2_27  [key=1, style=dashed, color=red, label=recurringJob];
m2_25 -> m2_28  [key=1, style=dashed, color=red, label=recurringJob];
m2_25 -> m2_29  [key=1, style=dashed, color=red, label=recurringJob];
m2_25 -> m2_30  [key=1, style=dashed, color=red, label=recurringJob];
m2_25 -> m2_33  [key=1, style=dashed, color=red, label=recurringJob];
m2_25 -> m2_35  [key=1, style=dashed, color=red, label=recurringJob];
m2_25 -> m2_13  [key=2, style=dotted, color=green];
m2_34 -> m2_35  [key=0, style=solid, color=red];
m2_34 -> m2_46  [key=2, style=dotted, color=red];
m2_34 -> m2_36  [key=1, style=dashed, color=red, label=transaction];
m2_34 -> m2_37  [key=1, style=dashed, color=red, label=transaction];
m2_27 -> m2_28  [key=0, style=solid, color=red];
m2_27 -> m2_43  [key=2, style=dotted, color=red];
m2_27 -> m2_21  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid, color=red];
m2_33 -> m2_45  [key=2, style=dotted, color=red];
m2_32 -> m2_33  [key=0, style=solid, color=red];
m2_32 -> m2_34  [key=0, style=solid, color=red];
m2_37 -> m2_38  [key=0, style=solid, color=red];
m2_37 -> m2_49  [key=2, style=dotted, color=red];
m2_38 -> m2_14  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_3  [key=2, style=dotted, color=green];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid, color=red];
m2_50 -> m2_52  [key=1, style=dashed, color=red, label=string];
m2_50 -> m2_54  [key=1, style=dashed, color=red, label=string];
m2_50 -> m2_62  [key=1, style=dashed, color=red, label=string];
m2_51 -> m2_52  [key=0, style=solid, color=red];
m2_51 -> m2_53  [key=0, style=solid, color=red];
m2_52 -> m2_64  [key=0, style=solid, color=red];
m2_52 -> n18  [key=2, style=dotted, color=red];
m2_52 -> m2_13  [key=2, style=dotted, color=red];
m2_54 -> m2_55  [key=0, style=solid, color=red];
m2_54 -> m2_44  [key=2, style=dotted, color=red];
m2_54 -> m2_57  [key=1, style=dashed, color=red, label=hash];
m2_54 -> m2_59  [key=1, style=dashed, color=red, label=hash];
m2_54 -> m2_60  [key=1, style=dashed, color=red, label=hash];
m2_62 -> m2_63  [key=0, style=solid, color=red];
m2_53 -> m2_54  [key=0, style=solid, color=red];
m2_53 -> m2_40  [key=2, style=dotted, color=red];
m2_53 -> m2_61  [key=1, style=dashed, color=red, label=connection];
m2_61 -> m2_62  [key=0, style=solid, color=red];
m2_61 -> m2_69  [key=2, style=dotted, color=red];
m2_61 -> m2_63  [key=1, style=dashed, color=red, label=context];
m2_55 -> m2_56  [key=0, style=solid, color=red];
m2_55 -> m2_57  [key=0, style=solid, color=red];
m2_57 -> m2_58  [key=0, style=solid, color=red];
m2_57 -> m2_65  [key=2, style=dotted, color=red];
m2_57 -> m2_66  [key=2, style=dotted, color=red];
m2_57 -> m2_61  [key=1, style=dashed, color=red, label=job];
m2_59 -> m2_60  [key=0, style=solid, color=red];
m2_59 -> m2_61  [key=0, style=solid, color=red];
m2_59 -> m2_68  [key=2, style=dotted, color=red];
m2_60 -> m2_61  [key=0, style=solid, color=red];
m2_56 -> m2_64  [key=0, style=solid, color=red];
m2_58 -> m2_59  [key=0, style=solid, color=red];
m2_58 -> m2_67  [key=2, style=dotted, color=red];
m2_58 -> m2_60  [key=1, style=dashed, color=red, label=state];
m2_58 -> m2_61  [key=1, style=dashed, color=red, label=state];
m2_63 -> m2_64  [key=0, style=solid, color=red];
m2_63 -> m2_70  [key=2, style=dotted, color=red];
m2_64 -> m2_50  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid, color=red];
m2_71 -> m2_73  [key=1, style=dashed, color=red, label=string];
m2_71 -> m2_76  [key=1, style=dashed, color=red, label=string];
m2_71 -> m2_77  [key=1, style=dashed, color=red, label=string];
m2_72 -> m2_73  [key=0, style=solid, color=red];
m2_72 -> m2_74  [key=0, style=solid, color=red];
m2_73 -> m2_79  [key=0, style=solid, color=red];
m2_73 -> n18  [key=2, style=dotted, color=red];
m2_73 -> m2_13  [key=2, style=dotted, color=red];
m2_76 -> m2_77  [key=0, style=solid, color=red];
m2_76 -> m2_80  [key=2, style=dotted, color=red];
m2_77 -> m2_78  [key=0, style=solid, color=red];
m2_77 -> m2_81  [key=2, style=dotted, color=red];
m2_74 -> m2_75  [key=0, style=solid, color=red];
m2_74 -> m2_40  [key=2, style=dotted, color=red];
m2_75 -> m2_76  [key=0, style=solid, color=red];
m2_75 -> m2_46  [key=2, style=dotted, color=red];
m2_75 -> m2_77  [key=1, style=dashed, color=red, label=transaction];
m2_75 -> m2_78  [key=1, style=dashed, color=red, label=transaction];
m2_78 -> m2_79  [key=0, style=solid, color=red];
m2_78 -> m2_49  [key=2, style=dotted, color=red];
m2_79 -> m2_71  [key=0, style=bold, color=blue];
m2_3 -> m2_1  [key=3, color=green, style=bold, label="Parameter variable object args"];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m2_3 -> m2_2  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_4 -> m2_6  [key=2, style=dotted, color=green];
m2_4 -> m2_7  [key=1, style=dashed, color=red, label="Hangfire.Client.IBackgroundJobFactory"];
m2_4 -> m2_8  [key=1, style=dashed, color=red, label="Hangfire.Client.IBackgroundJobFactory"];
m2_4 -> m2_9  [key=1, style=dashed, color=red, label="Hangfire.JobStorage"];
m2_4 -> m2_10  [key=1, style=dashed, color=red, label="Hangfire.Client.IBackgroundJobFactory"];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid, color=red];
m2_5 -> m2_7  [key=0, style=solid, color=red];
m2_39 -> m2_82  [key=0, style=solid, color=red];
m2_39 -> m2_85  [key=1, style=dashed, color=red, label=string];
m2_39 -> m2_14  [key=3, color=darkorchid, style=bold, label="Parameter variable string cronExpression"];
m2_82 -> m2_83  [key=0, style=solid, color=red];
m2_82 -> m2_87  [key=2, style=dotted, color=red];
m2_85 -> m2_86  [key=0, style=solid, color=red];
m2_85 -> m2_89  [key=2, style=dotted, color=red];
m2_85 -> m2_13  [key=2, style=dotted, color=red];
m2_83 -> m2_84  [key=0, style=solid, color=red];
m2_83 -> m2_86  [key=0, style=solid, color=red];
m2_83 -> m2_88  [key=2, style=dotted, color=red];
m2_84 -> m2_85  [key=0, style=solid, color=red];
m2_86 -> m2_39  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_7 -> m2_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m2_7 -> m2_9  [key=0, style=solid, color=red];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_8 -> m2_6  [key=2, style=dotted, color=green];
m2_8 -> m2_11  [key=0, style=solid, color=red];
m2_8 -> n18  [key=2, style=dotted, color=red];
m2_8 -> m2_13  [key=2, style=dotted, color=red];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid, color=red];
m2_90 -> m2_9  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m2_90 -> m2_10  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m2_90 -> m2_24  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m2_90 -> m2_53  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m2_90 -> m2_61  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m2_90 -> m2_63  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m2_90 -> m2_74  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m3_0 -> m3_1  [key=0, style=solid, color=red];
m3_1 -> m3_2  [key=0, style=solid, color=red];
m3_1 -> m3_3  [key=2, style=dotted, color=red];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid, color=red];
m3_4 -> m3_5  [key=0, style=solid, color=red];
m3_4 -> m3_6  [key=2, style=dotted, color=red];
m3_5 -> m3_3  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid, color=red];
m3_6 -> m3_8  [key=1, style=dashed, color=red, label="Hangfire.IRecurringJobManager"];
m3_6 -> m3_9  [key=1, style=dashed, color=red, label="System.TimeZoneInfo"];
m3_6 -> m3_10  [key=1, style=dashed, color=red, label="System.TimeZoneInfo"];
m3_6 -> m3_11  [key=1, style=dashed, color=red, label=string];
m3_6 -> m3_12  [key=1, style=dashed, color=red, label=string];
m3_6 -> m3_13  [key=1, style=dashed, color=red, label="Hangfire.IRecurringJobManager"];
m3_7 -> m3_8  [key=0, style=solid, color=red];
m3_7 -> m3_9  [key=0, style=solid, color=red];
m3_8 -> m3_14  [key=0, style=solid, color=red];
m3_8 -> n18  [key=2, style=dotted, color=red];
m3_8 -> m3_16  [key=2, style=dotted, color=red];
m3_9 -> m3_10  [key=0, style=solid, color=red];
m3_9 -> m3_11  [key=0, style=solid, color=red];
m3_10 -> m3_14  [key=0, style=solid, color=red];
m3_10 -> n18  [key=2, style=dotted, color=red];
m3_10 -> m3_16  [key=2, style=dotted, color=red];
m3_11 -> m3_12  [key=0, style=solid, color=red];
m3_11 -> m3_13  [key=0, style=solid, color=red];
m3_12 -> m3_14  [key=0, style=solid, color=red];
m3_12 -> n18  [key=2, style=dotted, color=red];
m3_12 -> m3_16  [key=2, style=dotted, color=red];
m3_13 -> m3_14  [key=0, style=solid, color=red];
m3_13 -> m3_17  [key=2, style=dotted, color=red];
m3_13 -> m3_18  [key=2, style=dotted, color=red];
m3_14 -> m3_6  [key=0, style=bold, color=blue];
m4_201 -> m4_202  [key=0, style=solid];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_14  [key=2, style=dotted];
m4_202 -> m4_145  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_34  [key=2, style=dotted];
m4_203 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_204 -> m4_201  [key=0, style=bold, color=blue];
m4_219 -> m4_266  [key=0, style=solid];
m4_219 -> m4_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_219 -> m4_291  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_219 -> m4_274  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_266 -> m4_271  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_67  [key=2, style=dotted];
m4_273 -> m4_68  [key=2, style=dotted];
m4_273 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_286  [key=2, style=dotted];
m4_274 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_61  [key=2, style=dotted];
m4_267 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_267 -> m4_273  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_267 -> m4_277  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_267 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_178  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_285  [key=2, style=dotted];
m4_271 -> m4_271  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_283  [key=0, style=solid];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_289  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_273  [key=0, style=solid];
m4_272 -> m4_269  [key=0, style=solid];
m4_272 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_62  [key=2, style=dotted];
m4_275 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_275 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_281  [key=0, style=solid];
m4_279 -> m4_287  [key=2, style=dotted];
m4_279 -> m4_288  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_276 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_276 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_283 -> m4_284  [key=0, style=solid];
m4_282 -> m4_277  [key=0, style=solid];
m4_282 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_278 -> m4_279  [key=0, style=solid];
m4_280 -> m4_281  [key=0, style=solid];
m4_284 -> m4_219  [key=0, style=bold, color=blue];
m4_94 -> m4_295  [key=0, style=solid];
m4_94 -> m4_302  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_94 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_94 -> m4_303  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_295 -> m4_299  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_295 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_67  [key=2, style=dotted];
m4_302 -> m4_68  [key=2, style=dotted];
m4_302 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_286  [key=2, style=dotted];
m4_303 -> m4_308  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_314  [key=2, style=dotted];
m4_296 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_301  [key=0, style=solid];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_178  [key=2, style=dotted];
m4_300 -> m4_298  [key=0, style=solid];
m4_300 -> m4_314  [key=2, style=dotted];
m4_300 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_61  [key=2, style=dotted];
m4_297 -> m4_299  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_297 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_297 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_67  [key=2, style=dotted];
m4_301 -> m4_68  [key=2, style=dotted];
m4_301 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_301 -> m4_306  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_289  [key=2, style=dotted];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_312  [key=0, style=solid];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_62  [key=2, style=dotted];
m4_304 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_304 -> m4_312  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_310  [key=0, style=solid];
m4_308 -> m4_287  [key=2, style=dotted];
m4_308 -> m4_288  [key=2, style=dotted];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_305 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_305 -> m4_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_312 -> m4_313  [key=0, style=solid];
m4_311 -> m4_306  [key=0, style=solid];
m4_311 -> m4_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_307 -> m4_308  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid];
m4_313 -> m4_94  [key=0, style=bold, color=blue];
m4_208 -> m4_209  [key=0, style=solid];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_14  [key=2, style=dotted];
m4_209 -> m4_145  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_34  [key=2, style=dotted];
m4_210 -> m4_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_211 -> m4_208  [key=0, style=bold, color=blue];
m4_220 -> m4_221  [key=0, style=solid];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_219  [key=2, style=dotted];
m4_222 -> m4_220  [key=0, style=bold, color=blue];
m4_369 -> m4_370  [key=0, style=solid];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_386  [key=2, style=dotted];
m4_370 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_375  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_378  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_436  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_370 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_112  [key=2, style=dotted];
m4_371 -> m4_380  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_373 -> m4_374  [key=0, style=solid];
m4_373 -> m4_64  [key=2, style=dotted];
m4_373 -> m4_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_373 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_64  [key=2, style=dotted];
m4_374 -> m4_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_374 -> m4_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_64  [key=2, style=dotted];
m4_375 -> m4_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_375 -> m4_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_64  [key=2, style=dotted];
m4_376 -> m4_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_376 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_377 -> m4_378  [key=0, style=solid];
m4_377 -> m4_64  [key=2, style=dotted];
m4_377 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_377 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_378 -> m4_379  [key=0, style=solid];
m4_378 -> m4_64  [key=2, style=dotted];
m4_378 -> m4_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_378 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_64  [key=2, style=dotted];
m4_379 -> m4_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_379 -> m4_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_382 -> m4_380  [key=0, style=solid];
m4_382 -> m4_64  [key=2, style=dotted];
m4_382 -> m4_432  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_382 -> m4_435  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_384 -> m4_385  [key=0, style=solid];
m4_372 -> m4_373  [key=0, style=solid];
m4_372 -> m4_63  [key=2, style=dotted];
m4_372 -> m4_374  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_372 -> m4_375  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_372 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_372 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_372 -> m4_378  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_372 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_372 -> m4_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_372 -> m4_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_380 -> m4_381  [key=0, style=solid];
m4_380 -> m4_383  [key=0, style=solid];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_65  [key=2, style=dotted];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_433  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m4_385 -> m4_369  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_14  [key=2, style=dotted];
m4_17 -> m4_15  [key=2, style=dotted];
m4_18 -> m4_16  [key=0, style=bold, color=blue];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_224 -> m4_225  [key=0, style=solid];
m4_224 -> m4_14  [key=2, style=dotted];
m4_224 -> m4_245  [key=2, style=dotted];
m4_224 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_224 -> m4_240  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_224 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_224 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_224 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_14  [key=2, style=dotted];
m4_228 -> m4_122  [key=2, style=dotted];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_227  [key=0, style=solid];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_241  [key=0, style=solid];
m4_239 -> m4_248  [key=2, style=dotted];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> m4_77  [key=2, style=dotted];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_243  [key=0, style=solid];
m4_241 -> m4_248  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_77  [key=2, style=dotted];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_252  [key=2, style=dotted];
m4_243 -> m4_253  [key=2, style=dotted];
m4_243 -> m4_248  [key=2, style=dotted];
m4_243 -> m4_249  [key=2, style=dotted];
m4_243 -> m4_254  [key=2, style=dotted];
m4_243 -> m4_255  [key=2, style=dotted];
m4_243 -> m4_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_243 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_243 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_226 -> m4_244  [key=0, style=solid];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m4_227 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_67  [key=2, style=dotted];
m4_229 -> m4_68  [key=2, style=dotted];
m4_229 -> m4_231  [key=1, style=dashed, color=darkseagreen4, label=history];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_246  [key=2, style=dotted];
m4_230 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=stateHistory];
m4_230 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=stateHistory];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_239  [key=0, style=solid];
m4_231 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_238 -> m4_231  [key=0, style=solid];
m4_238 -> m4_178  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_247  [key=2, style=dotted];
m4_232 -> m4_248  [key=2, style=dotted];
m4_232 -> m4_249  [key=2, style=dotted];
m4_232 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_232 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_250  [key=2, style=dotted];
m4_233 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m4_233 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m4_233 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m4_237 -> m4_238  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_251  [key=2, style=dotted];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_251  [key=2, style=dotted];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_251  [key=2, style=dotted];
m4_244 -> m4_223  [key=0, style=bold, color=blue];
m4_366 -> m4_367  [key=0, style=solid];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_15  [key=2, style=dotted];
m4_368 -> m4_366  [key=0, style=bold, color=blue];
m4_151 -> m4_152  [key=0, style=solid];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_145  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_34  [key=2, style=dotted];
m4_153 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_154 -> m4_151  [key=0, style=bold, color=blue];
m4_176 -> m4_321  [key=0, style=solid];
m4_176 -> m4_323  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_176 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_176 -> m4_325  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_176 -> m4_326  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m4_176 -> m4_327  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_176 -> m4_330  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_176 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_176 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_176 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_176 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_323  [key=0, style=solid];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_335  [key=2, style=dotted];
m4_323 -> m4_329  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_323 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_323 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_323 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_323 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_335  [key=2, style=dotted];
m4_324 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_324 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_324 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_324 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_324 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_325  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_325 -> m4_329  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_325 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_325 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_325 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_326 -> m4_327  [key=0, style=solid];
m4_326 -> m4_63  [key=2, style=dotted];
m4_326 -> m4_329  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_326 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_326 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_332  [key=0, style=solid];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_327  [key=0, style=solid];
m4_331 -> m4_327  [key=0, style=solid];
m4_331 -> m4_64  [key=2, style=dotted];
m4_331 -> m4_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_331 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_336  [key=2, style=dotted];
m4_333 -> m4_67  [key=2, style=dotted];
m4_333 -> m4_68  [key=2, style=dotted];
m4_333 -> m4_354  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_333 -> m4_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_322 -> m4_334  [key=0, style=solid];
m4_322 -> m4_33  [key=2, style=dotted];
m4_322 -> m4_61  [key=2, style=dotted];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_64  [key=2, style=dotted];
m4_329 -> m4_337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_329 -> m4_342  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_65  [key=2, style=dotted];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_328 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_328 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_328 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_328 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_328 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_328 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_334 -> m4_176  [key=0, style=bold, color=blue];
m4_435 -> m4_436  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [key=2, style=dotted];
m4_38 -> m4_41  [key=2, style=dotted];
m4_38 -> m4_42  [key=2, style=dotted];
m4_39 -> m4_37  [key=0, style=bold, color=blue];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>"];
m4_45 -> m4_43  [key=0, style=bold, color=blue];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_87  [key=2, style=dotted];
m4_85 -> m4_88  [key=2, style=dotted];
m4_85 -> m4_89  [key=2, style=dotted];
m4_85 -> m4_90  [key=2, style=dotted];
m4_85 -> m4_41  [key=2, style=dotted];
m4_85 -> m4_42  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_77  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=2, style=dotted];
m4_70 -> m4_73  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_72  [key=2, style=dotted];
m4_79 -> m4_73  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_81 -> m4_82  [key=0, style=solid];
m4_84 -> m4_85  [key=0, style=solid];
m4_71 -> m4_69  [key=0, style=bold, color=blue];
m4_76 -> m4_74  [key=0, style=bold, color=blue];
m4_80 -> m4_78  [key=0, style=bold, color=blue];
m4_83 -> m4_81  [key=0, style=bold, color=blue];
m4_86 -> m4_84  [key=0, style=bold, color=blue];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_77  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_129  [key=2, style=dotted];
m4_127 -> m4_130  [key=2, style=dotted];
m4_127 -> m4_131  [key=2, style=dotted];
m4_127 -> m4_41  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_77  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_72  [key=2, style=dotted];
m4_114 -> m4_73  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_72  [key=2, style=dotted];
m4_120 -> m4_122  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_126 -> m4_127  [key=0, style=solid];
m4_115 -> m4_113  [key=0, style=bold, color=blue];
m4_118 -> m4_116  [key=0, style=bold, color=blue];
m4_121 -> m4_119  [key=0, style=bold, color=blue];
m4_125 -> m4_123  [key=0, style=bold, color=blue];
m4_128 -> m4_126  [key=0, style=bold, color=blue];
m4_137 -> m4_138  [key=0, style=solid];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_140  [key=2, style=dotted];
m4_138 -> m4_41  [key=2, style=dotted];
m4_138 -> m4_42  [key=2, style=dotted];
m4_139 -> m4_137  [key=0, style=bold, color=blue];
m4_146 -> m4_147  [key=0, style=solid];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_149  [key=2, style=dotted];
m4_147 -> m4_41  [key=2, style=dotted];
m4_147 -> m4_150  [key=2, style=dotted];
m4_147 -> m4_42  [key=2, style=dotted];
m4_148 -> m4_146  [key=0, style=bold, color=blue];
m4_155 -> m4_156  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_158  [key=2, style=dotted];
m4_156 -> m4_41  [key=2, style=dotted];
m4_156 -> m4_42  [key=2, style=dotted];
m4_157 -> m4_155  [key=0, style=bold, color=blue];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_72  [key=2, style=dotted];
m4_180 -> m4_145  [key=2, style=dotted];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_72  [key=2, style=dotted];
m4_186 -> m4_15  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_72  [key=2, style=dotted];
m4_192 -> m4_15  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_182 -> m4_183  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_188 -> m4_189  [key=0, style=solid];
m4_191 -> m4_192  [key=0, style=solid];
m4_194 -> m4_195  [key=0, style=solid];
m4_197 -> m4_198  [key=0, style=solid];
m4_181 -> m4_179  [key=0, style=bold, color=blue];
m4_183 -> m4_184  [key=0, style=solid];
m4_184 -> m4_182  [key=0, style=bold, color=blue];
m4_187 -> m4_185  [key=0, style=bold, color=blue];
m4_189 -> m4_190  [key=0, style=solid];
m4_190 -> m4_188  [key=0, style=bold, color=blue];
m4_193 -> m4_191  [key=0, style=bold, color=blue];
m4_195 -> m4_196  [key=0, style=solid];
m4_196 -> m4_194  [key=0, style=bold, color=blue];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_200  [key=2, style=dotted];
m4_198 -> m4_41  [key=2, style=dotted];
m4_198 -> m4_42  [key=2, style=dotted];
m4_199 -> m4_197  [key=0, style=bold, color=blue];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_200  [key=2, style=dotted];
m4_206 -> m4_41  [key=2, style=dotted];
m4_206 -> m4_42  [key=2, style=dotted];
m4_207 -> m4_205  [key=0, style=bold, color=blue];
m4_212 -> m4_213  [key=0, style=solid];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_215  [key=2, style=dotted];
m4_213 -> m4_41  [key=2, style=dotted];
m4_214 -> m4_212  [key=0, style=bold, color=blue];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_259  [key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_260 -> m4_261  [key=0, style=solid];
m4_263 -> m4_264  [key=0, style=solid];
m4_258 -> m4_256  [key=0, style=bold, color=blue];
m4_261 -> m4_262  [key=0, style=solid];
m4_262 -> m4_260  [key=0, style=bold, color=blue];
m4_264 -> m4_265  [key=0, style=solid];
m4_265 -> m4_263  [key=0, style=bold, color=blue];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_293  [key=2, style=dotted];
m4_291 -> m4_294  [key=2, style=dotted];
m4_290 -> m4_291  [key=0, style=solid];
m4_292 -> m4_290  [key=0, style=bold, color=blue];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_72  [key=2, style=dotted];
m4_315 -> m4_316  [key=0, style=solid];
m4_318 -> m4_319  [key=0, style=solid];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_293  [key=2, style=dotted];
m4_317 -> m4_315  [key=0, style=bold, color=blue];
m4_320 -> m4_318  [key=0, style=bold, color=blue];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_14  [key=2, style=dotted];
m4_348 -> m4_73  [key=2, style=dotted];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_360  [key=2, style=dotted];
m4_358 -> m4_361  [key=2, style=dotted];
m4_358 -> m4_362  [key=2, style=dotted];
m4_358 -> m4_363  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_345  [key=0, style=solid];
m4_343 -> m4_346  [key=2, style=dotted];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_77  [key=2, style=dotted];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_90  [key=2, style=dotted];
m4_355 -> m4_346  [key=2, style=dotted];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_353  [key=0, style=solid];
m4_351 -> m4_346  [key=2, style=dotted];
m4_352 -> m4_353  [key=0, style=solid];
m4_352 -> m4_77  [key=2, style=dotted];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_14  [key=2, style=dotted];
m4_338 -> m4_340  [key=2, style=dotted];
m4_338 -> m4_341  [key=2, style=dotted];
m4_338 -> m4_73  [key=2, style=dotted];
m4_337 -> m4_338  [key=0, style=solid];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label="?"];
m4_347 -> m4_348  [key=0, style=solid];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label="?"];
m4_354 -> m4_355  [key=0, style=solid];
m4_357 -> m4_358  [key=0, style=solid];
m4_339 -> m4_337  [key=0, style=bold, color=blue];
m4_345 -> m4_342  [key=0, style=bold, color=blue];
m4_349 -> m4_347  [key=0, style=bold, color=blue];
m4_353 -> m4_350  [key=0, style=bold, color=blue];
m4_356 -> m4_354  [key=0, style=bold, color=blue];
m4_359 -> m4_357  [key=0, style=bold, color=blue];
m4_363 -> m4_364  [key=0, style=solid];
m4_364 -> m4_365  [key=0, style=solid];
m4_365 -> m4_363  [key=0, style=bold, color=blue];
m4_392 -> m4_393  [key=0, style=solid];
m4_398 -> m4_399  [key=0, style=solid];
m4_404 -> m4_405  [key=0, style=solid];
m4_410 -> m4_411  [key=0, style=solid];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_419  [key=2, style=dotted];
m4_424 -> m4_425  [key=0, style=solid];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_419  [key=2, style=dotted];
m4_436 -> m4_437  [key=0, style=solid];
m4_387 -> m4_388  [key=0, style=solid];
m4_391 -> m4_392  [key=0, style=solid];
m4_394 -> m4_395  [key=0, style=solid];
m4_397 -> m4_398  [key=0, style=solid];
m4_400 -> m4_401  [key=0, style=solid];
m4_403 -> m4_404  [key=0, style=solid];
m4_406 -> m4_407  [key=0, style=solid];
m4_409 -> m4_410  [key=0, style=solid];
m4_412 -> m4_413  [key=0, style=solid];
m4_416 -> m4_417  [key=0, style=solid];
m4_420 -> m4_421  [key=0, style=solid];
m4_423 -> m4_424  [key=0, style=solid];
m4_426 -> m4_427  [key=0, style=solid];
m4_429 -> m4_430  [key=0, style=solid];
m4_433 -> m4_434  [key=0, style=solid];
m4_433 -> m4_72  [key=2, style=dotted];
m4_433 -> m4_15  [key=2, style=dotted];
m4_432 -> m4_433  [key=0, style=solid];
m4_388 -> m4_389  [key=0, style=solid];
m4_388 -> m4_390  [key=2, style=dotted];
m4_389 -> m4_387  [key=0, style=bold, color=blue];
m4_393 -> m4_391  [key=0, style=bold, color=blue];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_390  [key=2, style=dotted];
m4_396 -> m4_394  [key=0, style=bold, color=blue];
m4_399 -> m4_397  [key=0, style=bold, color=blue];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_10  [key=2, style=dotted];
m4_402 -> m4_400  [key=0, style=bold, color=blue];
m4_405 -> m4_403  [key=0, style=bold, color=blue];
m4_407 -> m4_408  [key=0, style=solid];
m4_407 -> m4_10  [key=2, style=dotted];
m4_408 -> m4_406  [key=0, style=bold, color=blue];
m4_411 -> m4_409  [key=0, style=bold, color=blue];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_415  [key=2, style=dotted];
m4_414 -> m4_412  [key=0, style=bold, color=blue];
m4_418 -> m4_416  [key=0, style=bold, color=blue];
m4_421 -> m4_422  [key=0, style=solid];
m4_421 -> m4_10  [key=2, style=dotted];
m4_422 -> m4_420  [key=0, style=bold, color=blue];
m4_425 -> m4_423  [key=0, style=bold, color=blue];
m4_427 -> m4_428  [key=0, style=solid];
m4_427 -> m4_415  [key=2, style=dotted];
m4_428 -> m4_426  [key=0, style=bold, color=blue];
m4_431 -> m4_429  [key=0, style=bold, color=blue];
m4_434 -> m4_432  [key=0, style=bold, color=blue];
m4_437 -> m4_435  [key=0, style=bold, color=blue];
m4_90 -> m4_438  [key=0, style=solid];
m4_438 -> m4_441  [key=0, style=solid];
m4_438 -> m4_442  [key=2, style=dotted];
m4_438 -> m4_443  [key=2, style=dotted];
m4_439 -> m4_440  [key=0, style=solid];
m4_440 -> m4_441  [key=0, style=solid];
m4_441 -> m4_90  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid, color=green];
m4_132 -> m4_133  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_136  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_34  [key=2, style=dotted];
m4_134 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_135 -> m4_132  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_112  [key=2, style=dotted];
m4_99 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m4_99 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_102  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_109  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_67  [key=2, style=dotted];
m4_110 -> m4_68  [key=2, style=dotted];
m4_110 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_101 -> m4_111  [key=0, style=solid];
m4_101 -> m4_61  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_62  [key=2, style=dotted];
m4_102 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_102 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_102 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_102 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_62  [key=2, style=dotted];
m4_103 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_103 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_103 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_103 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_64  [key=2, style=dotted];
m4_107 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_107 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_63  [key=2, style=dotted];
m4_104 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_104 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_104 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_108 -> m4_105  [key=0, style=solid];
m4_108 -> m4_64  [key=2, style=dotted];
m4_108 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_108 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_65  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_106 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_106 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_106 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_106 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_111 -> m4_98  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_15  [key=2, style=dotted];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_141 -> m4_142  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_145  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_34  [key=2, style=dotted];
m4_143 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_144 -> m4_141  [key=0, style=bold, color=blue];
m4_91 -> m4_92  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_94  [key=2, style=dotted];
m4_93 -> m4_91  [key=0, style=bold, color=blue];
m4_19 -> m4_20  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_10  [key=2, style=dotted];
m4_21 -> m4_19  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_32  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_33  [key=2, style=dotted];
m4_30 -> m4_34  [key=2, style=dotted];
m4_30 -> m4_35  [key=2, style=dotted];
m4_30 -> m4_36  [key=2, style=dotted];
m4_30 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_30 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_31 -> m4_28  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_10  [key=2, style=dotted];
m4_24 -> m4_22  [key=0, style=bold, color=blue];
m4_216 -> m4_217  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_219  [key=2, style=dotted];
m4_218 -> m4_216  [key=0, style=bold, color=blue];
m4_95 -> m4_96  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_94  [key=2, style=dotted];
m4_97 -> m4_95  [key=0, style=bold, color=blue];
m4_159 -> m4_160  [key=0, style=solid];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_112  [key=2, style=dotted];
m4_160 -> m4_162  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_175  [key=2, style=dotted];
m4_161 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_161 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_173  [key=0, style=solid];
m4_162 -> m4_167  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_162 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_162 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_162 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_162 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_162 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_162 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_172 -> m4_162  [key=0, style=solid];
m4_172 -> m4_177  [key=2, style=dotted];
m4_172 -> m4_178  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_163 -> m4_164  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_64  [key=2, style=dotted];
m4_167 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_167 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_167 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_64  [key=2, style=dotted];
m4_168 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_168 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_168 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label=length];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_64  [key=2, style=dotted];
m4_169 -> m4_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_169 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_169 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label=fetched];
m4_164 -> m4_165  [key=0, style=solid];
m4_165 -> m4_166  [key=0, style=solid];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_63  [key=2, style=dotted];
m4_166 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_166 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_166 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_65  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_176  [key=2, style=dotted];
m4_171 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_174 -> m4_159  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_60  [key=2, style=dotted];
m4_47 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m4_47 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_57  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_66  [key=2, style=dotted];
m4_58 -> m4_67  [key=2, style=dotted];
m4_58 -> m4_68  [key=2, style=dotted];
m4_58 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_49 -> m4_59  [key=0, style=solid];
m4_49 -> m4_33  [key=2, style=dotted];
m4_49 -> m4_61  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_62  [key=2, style=dotted];
m4_50 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_50 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_50 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_50 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_62  [key=2, style=dotted];
m4_51 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_51 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_51 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_51 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_64  [key=2, style=dotted];
m4_55 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_55 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_63  [key=2, style=dotted];
m4_52 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_52 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_52 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m4_56 -> m4_53  [key=0, style=solid];
m4_56 -> m4_64  [key=2, style=dotted];
m4_56 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_56 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_65  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_54 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_54 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_54 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_54 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_59 -> m4_46  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [key=2, style=dotted];
m4_12 -> m4_15  [key=2, style=dotted];
m4_13 -> m4_11  [key=0, style=bold, color=blue];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=2, style=dotted];
m4_9 -> m4_7  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_1  [key=1, style=dashed, color=green, label="Hangfire.RecurringJobOptions"];
m4_4 -> m4_2  [key=1, style=dashed, color=green, label="Hangfire.RecurringJobOptions"];
m4_5 -> m4_3  [key=0, style=bold, color=blue];
m4_444 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_221  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_224  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_444 -> m4_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m4_445 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_445 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_445 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_445 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_446 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_446 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_447 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_447 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_448 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_448 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_448 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_448 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_449 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_449 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label=servers];
m4_450 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_450 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m4_451 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_451 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_451 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=queue];
m4_452 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m4_453 -> m4_291  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_454 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_455 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_455 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_456 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_456 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_456 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_456 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_456 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_456 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_457 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_457 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_457 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_458 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_459 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_459 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_459 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=states];
m4_460 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m4_461 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_461 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_461 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_461 -> m4_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_461 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_461 -> m4_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_461 -> m4_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_461 -> m4_436  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_462 -> m4_433  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=2, style=dotted];
m5_18 -> m5_16  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_40  [key=0, style=solid];
m5_37 -> m5_41  [key=0, style=solid];
m5_37 -> m5_42  [key=0, style=solid];
m5_37 -> m5_44  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_37  [key=0, style=solid];
m5_38 -> m5_3  [key=2, style=dotted];
m5_40 -> m5_44  [key=0, style=solid];
m5_41 -> m5_44  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_39 -> m5_37  [key=0, style=solid];
m5_39 -> m5_45  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_46  [key=2, style=dotted];
m5_44 -> m5_36  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_20 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_27  [key=2, style=dotted];
m5_21 -> m5_28  [key=2, style=dotted];
m5_21 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=jobType];
m5_24 -> m5_26  [key=0, style=solid];
m5_24 -> m5_31  [key=2, style=dotted];
m5_24 -> m5_32  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_33  [key=2, style=dotted];
m5_25 -> m5_34  [key=2, style=dotted];
m5_25 -> m5_35  [key=2, style=dotted];
m5_25 -> m5_32  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_29  [key=2, style=dotted];
m5_22 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=queue];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [key=0, style=solid];
m5_23 -> m5_30  [key=2, style=dotted];
m5_26 -> m5_20  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_51  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_52  [key=2, style=dotted];
m5_50 -> m5_47  [key=0, style=bold, color=blue];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m5_3 -> m5_9  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_11  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_13  [key=2, style=dotted];
m5_5 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=0, style=solid];
m5_6 -> m5_14  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_15  [key=2, style=dotted];
m5_7 -> m5_10  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_3  [key=0, style=bold, color=blue];
m5_53 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m5_53 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_2 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> m6_11  [key=2, style=dotted, color=green];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_3 -> m6_12  [key=2, style=dotted, color=green];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_4 -> m6_12  [key=2, style=dotted, color=green];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_12  [key=2, style=dotted, color=green];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_7 -> m6_8  [key=0, style=solid, color=green];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_12  [key=2, style=dotted, color=green];
m6_10 -> m6_0  [key=0, style=bold, color=blue];
m6_13 -> m6_1  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_2  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_4  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_6  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_7  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_8  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m6_13 -> m6_9  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m7_0 -> m7_1  [key=0, style=solid, color=red];
m7_0 -> m7_2  [key=1, style=dashed, color=red, label="System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>"];
m7_0 -> m7_3  [key=1, style=dashed, color=red, label=string];
m7_0 -> m7_25  [key=1, style=dashed, color=red, label="System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>"];
m7_0 -> m7_7  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<T> Parse"];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_3  [key=0, style=solid, color=red];
m7_2 -> m7_4  [key=0, style=solid, color=red];
m7_2 -> n18  [key=2, style=dotted, color=red];
m7_2 -> m7_6  [key=2, style=dotted, color=red];
m7_3 -> m7_4  [key=0, style=solid, color=red];
m7_3 -> m7_7  [key=2, style=dotted, color=red];
m7_3 -> m7_8  [key=1, style=dashed, color=red, label="lambda expression"];
m7_3 -> m7_11  [key=1, style=dashed, color=red, label="lambda expression"];
m7_3 -> m7_14  [key=1, style=dashed, color=red, label="lambda expression"];
m7_3 -> m7_18  [key=1, style=dashed, color=red, label="lambda expression"];
m7_3 -> m7_21  [key=1, style=dashed, color=red, label="lambda expression"];
m7_3 -> m7_24  [key=1, style=dashed, color=red, label="lambda expression"];
m7_4 -> m7_0  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid, color=red];
m7_25 -> m7_26  [key=0, style=solid, color=red];
m7_25 -> m7_27  [key=2, style=dotted, color=red];
m7_8 -> m7_9  [key=0, style=solid, color=red];
m7_11 -> m7_12  [key=0, style=solid, color=red];
m7_14 -> m7_15  [key=0, style=solid, color=red];
m7_18 -> m7_19  [key=0, style=solid, color=red];
m7_21 -> m7_22  [key=0, style=solid, color=red];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid, color=red];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid, color=red];
m7_15 -> m7_17  [key=2, style=dotted, color=red];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid, color=red];
m7_20 -> m7_18  [key=0, style=bold, color=blue];
m7_22 -> m7_23  [key=0, style=solid, color=red];
m7_23 -> m7_21  [key=0, style=bold, color=blue];
m7_26 -> m7_24  [key=0, style=bold, color=blue];
m7_48 -> m7_49  [key=0, style=solid, color=red];
m7_49 -> m7_50  [key=0, style=solid, color=red];
m7_49 -> m7_51  [key=2, style=dotted, color=red];
m7_50 -> m7_48  [key=0, style=bold, color=blue];
m7_7 -> m7_28  [key=0, style=solid, color=red];
m7_7 -> m7_29  [key=1, style=dashed, color=red, label="System.Func<int, int, string, TToken>"];
m7_7 -> m7_30  [key=1, style=dashed, color=red, label="System.Func<TToken, TToken, TMethod>"];
m7_7 -> m7_31  [key=1, style=dashed, color=red, label="System.Func<TToken, TToken, TMethod>"];
m7_7 -> m7_32  [key=1, style=dashed, color=red, label="System.Func<TToken, TToken, TParameter>"];
m7_7 -> m7_33  [key=1, style=dashed, color=red, label="System.Func<TToken, TToken, TParameter>"];
m7_7 -> m7_34  [key=1, style=dashed, color=red, label="System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>"];
m7_7 -> m7_35  [key=1, style=dashed, color=red, label="System.Func<TToken, System.Collections.Generic.IEnumerable<TParameter>, TParameters>"];
m7_7 -> m7_36  [key=1, style=dashed, color=red, label="System.Func<TToken, TToken, TSourceLocation>"];
m7_7 -> m7_37  [key=1, style=dashed, color=red, label="System.Func<TToken, TToken, TSourceLocation>"];
m7_7 -> m7_38  [key=1, style=dashed, color=red, label="System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>"];
m7_7 -> m7_39  [key=1, style=dashed, color=red, label="System.Func<TToken, TMethod, TParameters, TSourceLocation, TFrame>"];
m7_7 -> m7_40  [key=1, style=dashed, color=red, label=string];
m7_28 -> m7_29  [key=0, style=solid, color=red];
m7_28 -> m7_30  [key=0, style=solid, color=red];
m7_29 -> m7_41  [key=0, style=solid, color=red];
m7_29 -> n18  [key=2, style=dotted, color=red];
m7_29 -> m7_6  [key=2, style=dotted, color=red];
m7_30 -> m7_31  [key=0, style=solid, color=red];
m7_30 -> m7_32  [key=0, style=solid, color=red];
m7_31 -> m7_41  [key=0, style=solid, color=red];
m7_31 -> n18  [key=2, style=dotted, color=red];
m7_31 -> m7_6  [key=2, style=dotted, color=red];
m7_32 -> m7_33  [key=0, style=solid, color=red];
m7_32 -> m7_34  [key=0, style=solid, color=red];
m7_33 -> m7_41  [key=0, style=solid, color=red];
m7_33 -> n18  [key=2, style=dotted, color=red];
m7_33 -> m7_6  [key=2, style=dotted, color=red];
m7_34 -> m7_35  [key=0, style=solid, color=red];
m7_34 -> m7_36  [key=0, style=solid, color=red];
m7_35 -> m7_41  [key=0, style=solid, color=red];
m7_35 -> n18  [key=2, style=dotted, color=red];
m7_35 -> m7_6  [key=2, style=dotted, color=red];
m7_36 -> m7_37  [key=0, style=solid, color=red];
m7_36 -> m7_38  [key=0, style=solid, color=red];
m7_37 -> m7_41  [key=0, style=solid, color=red];
m7_37 -> n18  [key=2, style=dotted, color=red];
m7_37 -> m7_6  [key=2, style=dotted, color=red];
m7_38 -> m7_39  [key=0, style=solid, color=red];
m7_38 -> m7_40  [key=0, style=solid, color=red];
m7_39 -> m7_41  [key=0, style=solid, color=red];
m7_39 -> n18  [key=2, style=dotted, color=red];
m7_39 -> m7_6  [key=2, style=dotted, color=red];
m7_40 -> m7_41  [key=0, style=solid, color=red];
m7_40 -> m7_42  [key=2, style=dotted, color=red];
m7_40 -> m7_43  [key=2, style=dotted, color=red];
m7_40 -> m7_44  [key=2, style=dotted, color=red];
m7_40 -> m7_45  [key=2, style=dotted, color=red];
m7_40 -> m7_46  [key=2, style=dotted, color=red];
m7_40 -> m7_47  [key=2, style=dotted, color=red];
m7_40 -> m7_40  [key=1, style=dashed, color=red, label=m];
m7_41 -> m7_7  [key=0, style=bold, color=blue];
m7_52 -> m7_25  [key=1, style=dashed, color=red, label="System.Func<string, string, string, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string, T>"];
m8_39 -> m8_40  [key=0, style=solid, color=green];
m8_39 -> m8_63  [key=2, style=dotted, color=green];
m8_39 -> m8_81  [key=1, style=dashed, color=green, label="lambda expression"];
m8_76 -> m8_77  [key=0, style=solid, color=red];
m8_76 -> m8_76  [key=3, color=red, style=bold, label="Local variable int dotLength"];
m8_46 -> m8_47  [key=0, style=solid, color=green];
m8_46 -> m8_80  [key=2, style=dotted, color=green];
m8_46 -> m8_101  [key=2, style=dotted, color=green];
m8_0 -> m8_1  [key=0, style=solid, color=red];
m8_0 -> m8_2  [key=1, style=dashed, color=red, label="System.Type"];
m8_0 -> m8_3  [key=1, style=dashed, color=red, label="System.Type"];
m8_0 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToGenericTypeString"];
m8_0 -> m8_9  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToGenericTypeString"];
m8_1 -> m8_2  [key=0, style=solid, color=red];
m8_1 -> m8_54  [key=2, style=dotted, color=green];
m8_1 -> m8_3  [key=0, style=solid, color=red];
m8_1 -> m8_5  [key=2, style=dotted, color=red];
m8_2 -> m8_3  [key=0, style=solid, color=green];
m8_2 -> m8_55  [key=2, style=dotted, color=green];
m8_2 -> m8_4  [key=0, style=solid, color=red];
m8_2 -> m8_6  [key=2, style=dotted, color=red];
m8_2 -> m8_7  [key=2, style=dotted, color=red];
m8_3 -> m8_4  [key=0, style=solid, color=red];
m8_3 -> m8_56  [key=2, style=dotted, color=green];
m8_3 -> m8_9  [key=1, style=dashed, color=green, label=server];
m8_3 -> m8_8  [key=2, style=dotted, color=red];
m8_3 -> m8_6  [key=2, style=dotted, color=red];
m8_3 -> m8_7  [key=2, style=dotted, color=red];
m8_4 -> m8_5  [key=0, style=solid, color=green];
m8_4 -> m8_43  [key=1, style=dashed, color=green, label=count];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid, color=green];
m8_9 -> m8_59  [key=2, style=dotted, color=green];
m8_9 -> m8_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m8_9 -> m8_9  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReplaceGenericParametersInGenericTypeName"];
m8_5 -> m8_6  [key=0, style=solid, color=green];
m8_5 -> m8_51  [key=0, style=solid, color=green];
m8_43 -> m8_43  [key=1, style=dashed, color=green, label=count];
m8_43 -> m8_44  [key=0, style=solid, color=green];
m8_43 -> m8_88  [key=1, style=dashed, color=green, label=number];
m8_8 -> m8_9  [key=0, style=solid, color=green];
m8_8 -> m8_10  [key=0, style=solid, color=green];
m8_8 -> m8_42  [key=2, style=dotted, color=green];
m8_10 -> m8_11  [key=0, style=solid, color=red];
m8_10 -> m8_20  [key=0, style=solid, color=green];
m8_10 -> m8_60  [key=2, style=dotted, color=green];
m8_10 -> m8_12  [key=1, style=dashed, color=red, label="System.Type"];
m8_10 -> m8_13  [key=1, style=dashed, color=red, label=string];
m8_10 -> m8_14  [key=1, style=dashed, color=red, label=string];
m8_10 -> m8_15  [key=1, style=dashed, color=red, label="System.Type[]"];
m8_10 -> m8_16  [key=1, style=dashed, color=red, label="System.Type"];
m8_10 -> m8_17  [key=1, style=dashed, color=red, label="System.Type"];
m8_10 -> m8_18  [key=1, style=dashed, color=red, label="System.Type"];
m8_10 -> m8_34  [key=3, color=red, style=bold, label="method methodReturn System.Reflection.MethodInfo GetNonOpenMatchingMethod"];
m8_45 -> m8_5  [key=0, style=solid, color=green];
m8_45 -> m8_46  [key=0, style=solid, color=green];
m8_45 -> m8_60  [key=2, style=dotted, color=green];
m8_45 -> m8_53  [key=0, style=solid, color=red];
m8_45 -> m8_54  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_55  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_57  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_59  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_63  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_64  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_65  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_66  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<System.Type>"];
m8_45 -> m8_70  [key=1, style=dashed, color=red, label="System.Reflection.TypeInfo"];
m8_45 -> m8_27  [key=3, color=red, style=bold, label="Parameter variable System.Reflection.TypeInfo parameterType"];
m8_45 -> m8_28  [key=3, color=red, style=bold, label="Parameter variable System.Reflection.TypeInfo actualType"];
m8_45 -> m8_24  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<System.Type> genericArguments"];
m8_45 -> m8_45  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<System.Type> genericArguments"];
m8_45 -> m8_56  [key=3, color=red, style=bold, label="method methodReturn bool TypesMatchRecursive"];
m8_45 -> m8_23  [key=3, color=red, style=bold, label="method methodReturn bool TypesMatchRecursive"];
m8_48 -> m8_5  [key=0, style=solid, color=green];
m8_48 -> m8_49  [key=0, style=solid, color=red];
m8_48 -> m8_64  [key=2, style=dotted, color=green];
m8_48 -> m8_39  [key=2, style=dotted, color=red];
m8_50 -> m8_5  [key=0, style=solid, color=green];
m8_50 -> m8_64  [key=2, style=dotted, color=green];
m8_50 -> m8_51  [key=0, style=solid, color=red];
m8_6 -> m8_7  [key=0, style=solid, color=green];
m8_6 -> m8_57  [key=2, style=dotted, color=green];
m8_6 -> m8_8  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_10  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_11  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_20  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_21  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_29  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_30  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_35  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_36  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_41  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_42  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_45  [key=1, style=dashed, color=green, label=command];
m8_6 -> m8_46  [key=1, style=dashed, color=green, label=command];
m8_51 -> m8_52  [key=0, style=solid, color=red];
m8_51 -> m8_64  [key=2, style=dotted, color=green];
m8_42 -> m8_43  [key=0, style=solid, color=green];
m8_42 -> m8_80  [key=2, style=dotted, color=green];
m8_42 -> m8_101  [key=2, style=dotted, color=green];
m8_42 -> m8_44  [key=1, style=dashed, color=green, label=seconds];
m8_44 -> m8_45  [key=0, style=solid, color=green];
m8_44 -> m8_66  [key=2, style=dotted, color=green];
m8_44 -> m8_67  [key=2, style=dotted, color=green];
m8_44 -> m8_87  [key=1, style=dashed, color=green, label="lambda expression"];
m8_7 -> m8_51  [key=0, style=solid, color=green];
m8_7 -> m8_8  [key=0, style=solid, color=green];
m8_7 -> m8_42  [key=2, style=dotted, color=green];
m8_11 -> m8_12  [key=0, style=solid, color=red];
m8_11 -> m8_80  [key=2, style=dotted, color=green];
m8_11 -> m8_101  [key=2, style=dotted, color=green];
m8_11 -> m8_13  [key=1, style=dashed, color=green, label=workCount];
m8_20 -> m8_21  [key=0, style=solid, color=red];
m8_20 -> m8_29  [key=0, style=solid, color=green];
m8_20 -> m8_60  [key=2, style=dotted, color=green];
m8_20 -> m8_19  [key=0, style=solid, color=red];
m8_20 -> m8_42  [key=2, style=dotted, color=red];
m8_21 -> m8_22  [key=0, style=solid, color=red];
m8_21 -> m8_80  [key=2, style=dotted, color=green];
m8_21 -> m8_101  [key=2, style=dotted, color=green];
m8_21 -> m8_23  [key=1, style=dashed, color=green, label=workCount];
m8_21 -> m8_43  [key=2, style=dotted, color=red];
m8_21 -> m8_26  [key=1, style=dashed, color=red, label=parameters];
m8_21 -> m8_27  [key=1, style=dashed, color=red, label=parameters];
m8_29 -> m8_30  [key=0, style=solid, color=red];
m8_29 -> m8_35  [key=0, style=solid, color=green];
m8_29 -> m8_60  [key=2, style=dotted, color=green];
m8_29 -> m8_31  [key=0, style=solid, color=red];
m8_29 -> m8_45  [key=2, style=dotted, color=red];
m8_30 -> m8_31  [key=0, style=solid, color=green];
m8_30 -> m8_80  [key=2, style=dotted, color=green];
m8_30 -> m8_101  [key=2, style=dotted, color=green];
m8_30 -> m8_32  [key=1, style=dashed, color=green, label=workCount];
m8_35 -> m8_36  [key=0, style=solid, color=green];
m8_35 -> m8_41  [key=0, style=solid, color=green];
m8_35 -> m8_60  [key=2, style=dotted, color=green];
m8_35 -> m8_10  [key=0, style=bold, color=blue];
m8_36 -> m8_37  [key=0, style=solid, color=green];
m8_36 -> m8_80  [key=2, style=dotted, color=green];
m8_36 -> m8_101  [key=2, style=dotted, color=green];
m8_36 -> m8_38  [key=1, style=dashed, color=green, label=workCount];
m8_41 -> m8_42  [key=0, style=solid, color=green];
m8_41 -> m8_45  [key=0, style=solid, color=green];
m8_41 -> m8_60  [key=2, style=dotted, color=green];
m8_52 -> m8_53  [key=0, style=solid, color=green];
m8_52 -> m8_57  [key=2, style=dotted, color=green];
m8_52 -> m8_50  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid, color=green];
m8_12 -> m8_14  [key=1, style=dashed, color=green, label=i];
m8_12 -> m8_16  [key=1, style=dashed, color=green, label=i];
m8_12 -> m8_35  [key=0, style=solid, color=red];
m8_12 -> n18  [key=2, style=dotted, color=red];
m8_12 -> m8_37  [key=2, style=dotted, color=red];
m8_13 -> m8_14  [key=0, style=solid, color=red];
m8_13 -> m8_17  [key=0, style=solid, color=green];
m8_13 -> m8_15  [key=0, style=solid, color=red];
m8_17 -> m8_20  [key=0, style=solid, color=green];
m8_17 -> m8_18  [key=0, style=solid, color=red];
m8_17 -> m8_64  [key=2, style=dotted, color=green];
m8_17 -> m8_19  [key=0, style=solid, color=red];
m8_17 -> m8_5  [key=2, style=dotted, color=red];
m8_19 -> m8_20  [key=0, style=solid, color=red];
m8_19 -> m8_64  [key=2, style=dotted, color=green];
m8_19 -> m8_34  [key=0, style=solid, color=red];
m8_19 -> m8_21  [key=1, style=dashed, color=red, label=methodCandidate];
m8_19 -> m8_24  [key=1, style=dashed, color=red, label=methodCandidate];
m8_19 -> m8_33  [key=1, style=dashed, color=red, label=methodCandidate];
m8_22 -> m8_23  [key=0, style=solid, color=red];
m8_22 -> m8_25  [key=1, style=dashed, color=green, label=i];
m8_22 -> m8_19  [key=0, style=solid, color=red];
m8_23 -> m8_24  [key=0, style=solid, color=red];
m8_23 -> m8_26  [key=0, style=solid, color=green];
m8_23 -> m8_32  [key=1, style=dashed, color=red, label=parameterTypesMatched];
m8_23 -> m8_23  [key=3, color=red, style=bold, label="Local variable bool parameterTypesMatched"];
m8_26 -> m8_29  [key=0, style=solid, color=green];
m8_26 -> m8_27  [key=0, style=solid, color=red];
m8_26 -> m8_64  [key=2, style=dotted, color=green];
m8_26 -> m8_32  [key=0, style=solid, color=red];
m8_26 -> m8_26  [key=3, color=red, style=bold, label="Local variable int i"];
m8_28 -> m8_29  [key=0, style=solid, color=red];
m8_28 -> m8_64  [key=2, style=dotted, color=green];
m8_28 -> m8_5  [key=2, style=dotted, color=red];
m8_31 -> m8_32  [key=0, style=solid, color=green];
m8_31 -> m8_34  [key=1, style=dashed, color=green, label=i];
m8_31 -> m8_26  [key=0, style=solid, color=red];
m8_31 -> m8_31  [key=1, style=dashed, color=red, label=i];
m8_32 -> m8_35  [key=0, style=solid, color=green];
m8_32 -> m8_33  [key=0, style=solid, color=red];
m8_32 -> m8_19  [key=0, style=solid, color=red];
m8_37 -> m8_38  [key=0, style=solid, color=green];
m8_37 -> m8_40  [key=1, style=dashed, color=green, label=i];
m8_38 -> m8_41  [key=0, style=solid, color=green];
m8_38 -> m8_39  [key=0, style=solid, color=green];
m8_47 -> m8_48  [key=0, style=solid, color=red];
m8_47 -> m8_68  [key=2, style=dotted, color=green];
m8_47 -> m8_90  [key=1, style=dashed, color=green, label="lambda expression"];
m8_47 -> m8_70  [key=0, style=solid, color=green];
m8_14 -> m8_15  [key=0, style=solid, color=green];
m8_14 -> m8_70  [key=1, style=dashed, color=green, label=number];
m8_14 -> m8_35  [key=0, style=solid, color=red];
m8_14 -> n18  [key=2, style=dotted, color=red];
m8_14 -> m8_37  [key=2, style=dotted, color=red];
m8_16 -> m8_13  [key=0, style=solid, color=green];
m8_16 -> m8_16  [key=1, style=dashed, color=green, label=i];
m8_16 -> m8_17  [key=0, style=solid, color=red];
m8_16 -> m8_38  [key=2, style=dotted, color=red];
m8_16 -> m8_39  [key=2, style=dotted, color=red];
m8_16 -> m8_18  [key=1, style=dashed, color=red, label=methodCandidates];
m8_16 -> m8_19  [key=1, style=dashed, color=red, label=methodCandidates];
m8_15 -> m8_16  [key=0, style=solid, color=red];
m8_15 -> m8_63  [key=2, style=dotted, color=green];
m8_15 -> m8_47  [key=1, style=dashed, color=green, label="lambda expression"];
m8_15 -> m8_15  [key=1, style=dashed, color=red, label="System.Type[]"];
m8_15 -> m8_22  [key=1, style=dashed, color=red, label="System.Type[]"];
m8_15 -> m8_28  [key=1, style=dashed, color=red, label="System.Type[]"];
m8_18 -> m8_19  [key=0, style=solid, color=red];
m8_18 -> m8_5  [key=2, style=dotted, color=red];
m8_18 -> m8_40  [key=2, style=dotted, color=red];
m8_18 -> m8_41  [key=2, style=dotted, color=red];
m8_18 -> m8_47  [key=1, style=dashed, color=red, label="lambda expression"];
m8_25 -> m8_23  [key=0, style=solid, color=green];
m8_25 -> m8_25  [key=1, style=dashed, color=green, label=i];
m8_25 -> m8_26  [key=0, style=solid, color=red];
m8_25 -> m8_27  [key=1, style=dashed, color=red, label=i];
m8_25 -> m8_28  [key=1, style=dashed, color=red, label=i];
m8_25 -> m8_31  [key=1, style=dashed, color=red, label=i];
m8_24 -> m8_25  [key=0, style=solid, color=red];
m8_24 -> m8_65  [key=2, style=dotted, color=green];
m8_24 -> m8_95  [key=1, style=dashed, color=green, label="lambda expression"];
m8_24 -> m8_44  [key=2, style=dotted, color=red];
m8_24 -> m8_29  [key=1, style=dashed, color=red, label=genericArguments];
m8_24 -> m8_33  [key=1, style=dashed, color=red, label=genericArguments];
m8_27 -> m8_28  [key=0, style=solid, color=red];
m8_27 -> m8_5  [key=2, style=dotted, color=red];
m8_27 -> m8_29  [key=1, style=dashed, color=red, label=parameterType];
m8_34 -> m8_32  [key=0, style=solid, color=green];
m8_34 -> m8_34  [key=1, style=dashed, color=green, label=i];
m8_34 -> m8_35  [key=0, style=solid, color=red];
m8_33 -> m8_34  [key=0, style=solid, color=green];
m8_33 -> m8_63  [key=2, style=dotted, color=green];
m8_33 -> m8_77  [key=1, style=dashed, color=green, label="lambda expression"];
m8_33 -> m8_35  [key=0, style=solid, color=red];
m8_33 -> m8_46  [key=2, style=dotted, color=red];
m8_40 -> m8_38  [key=0, style=solid, color=green];
m8_40 -> m8_40  [key=1, style=dashed, color=green, label=i];
m8_49 -> m8_50  [key=0, style=solid, color=green];
m8_49 -> m8_47  [key=0, style=bold, color=blue];
m8_53 -> m8_0  [key=0, style=bold, color=blue];
m8_53 -> m8_54  [key=0, style=solid, color=red];
m8_53 -> m8_59  [key=0, style=solid, color=red];
m8_54 -> m8_55  [key=0, style=solid, color=red];
m8_54 -> m8_57  [key=1, style=dashed, color=red, label=position];
m8_104 -> m8_88  [key=1, style=dashed, color=green, label=number];
m8_67 -> m8_71  [key=0, style=solid, color=red];
m8_98 -> m8_99  [key=0, style=solid, color=red];
m8_98 -> m8_105  [key=2, style=dotted, color=red];
m8_98 -> m8_106  [key=2, style=dotted, color=red];
m8_98 -> m8_98  [key=1, style=dashed, color=red, label=genericArguments];
m8_85 -> m8_86  [key=0, style=solid, color=red];
m8_85 -> m8_89  [key=1, style=dashed, color=red, label=string];
m8_86 -> m8_87  [key=0, style=solid, color=red];
m8_86 -> m8_5  [key=2, style=dotted, color=red];
m8_86 -> m8_92  [key=2, style=dotted, color=red];
m8_86 -> m8_89  [key=1, style=dashed, color=red, label=genericArguments];
m8_86 -> m8_50  [key=3, color=red, style=bold, label="Local variable System.Type[] genericArguments"];
m8_89 -> m8_90  [key=0, style=solid, color=red];
m8_89 -> m8_94  [key=2, style=dotted, color=red];
m8_89 -> m8_89  [key=1, style=dashed, color=red, label=string];
m8_89 -> m8_95  [key=1, style=dashed, color=red, label="lambda expression"];
m8_89 -> m8_97  [key=1, style=dashed, color=red, label=genericArguments];
m8_89 -> m8_98  [key=1, style=dashed, color=red, label=genericArguments];
m8_89 -> m8_87  [key=0, style=bold, color=blue];
m8_87 -> m8_88  [key=0, style=solid, color=green];
m8_87 -> m8_87  [key=3, color=red, style=bold, label="Local variable string regexForGenericArguments"];
m8_88 -> m8_89  [key=0, style=solid, color=green];
m8_88 -> m8_93  [key=2, style=dotted, color=red];
m8_88 -> m8_72  [key=2, style=dotted, color=green];
m8_90 -> m8_91  [key=0, style=solid, color=green];
m8_91 -> m8_85  [key=0, style=bold, color=blue];
m8_91 -> m8_92  [key=0, style=solid, color=green];
m8_91 -> m8_93  [key=0, style=solid, color=green];
m8_81 -> m8_82  [key=0, style=solid, color=green];
m8_82 -> m8_83  [key=0, style=solid, color=green];
m8_82 -> m8_84  [key=2, style=dotted, color=green];
m8_82 -> m8_85  [key=2, style=dotted, color=green];
m8_82 -> m8_86  [key=2, style=dotted, color=green];
m8_83 -> m8_81  [key=0, style=bold, color=blue];
m8_101 -> m8_99  [key=0, style=bold, color=blue];
m8_66 -> m8_67  [key=0, style=solid, color=red];
m8_66 -> m8_68  [key=0, style=solid, color=red];
m8_66 -> m8_5  [key=2, style=dotted, color=red];
m8_66 -> m8_45  [key=2, style=dotted, color=red];
m8_56 -> m8_71  [key=0, style=solid, color=red];
m8_92 -> m8_94  [key=0, style=solid, color=green];
m8_92 -> m8_63  [key=2, style=dotted, color=green];
m8_92 -> m8_95  [key=1, style=dashed, color=green, label="lambda expression"];
m8_60 -> m8_61  [key=0, style=solid, color=red];
m8_60 -> m8_62  [key=0, style=solid, color=red];
m8_60 -> m8_8  [key=2, style=dotted, color=red];
m8_79 -> m8_77  [key=0, style=bold, color=blue];
m8_57 -> m8_58  [key=0, style=solid, color=red];
m8_57 -> m8_72  [key=2, style=dotted, color=red];
m8_63 -> m8_64  [key=0, style=solid, color=red];
m8_63 -> m8_69  [key=0, style=solid, color=red];
m8_63 -> m8_26  [key=3, color=red, style=bold, label="Local variable int i"];
m8_55 -> m8_56  [key=0, style=solid, color=red];
m8_55 -> m8_57  [key=0, style=solid, color=red];
m8_55 -> m8_5  [key=2, style=dotted, color=red];
m8_59 -> m8_60  [key=0, style=solid, color=red];
m8_59 -> m8_70  [key=0, style=solid, color=red];
m8_64 -> m8_65  [key=0, style=solid, color=red];
m8_64 -> m8_66  [key=1, style=dashed, color=red, label=parameterGenericArgument];
m8_65 -> m8_66  [key=0, style=solid, color=red];
m8_70 -> m8_71  [key=0, style=solid, color=red];
m8_70 -> m8_49  [key=0, style=solid, color=green];
m8_70 -> m8_72  [key=2, style=dotted, color=green];
m8_58 -> m8_71  [key=0, style=solid, color=red];
m8_61 -> m8_71  [key=0, style=solid, color=red];
m8_62 -> m8_63  [key=0, style=solid, color=red];
m8_62 -> m8_64  [key=1, style=dashed, color=red, label=i];
m8_62 -> m8_65  [key=1, style=dashed, color=red, label=i];
m8_62 -> m8_68  [key=1, style=dashed, color=red, label=i];
m8_68 -> m8_63  [key=0, style=solid, color=red];
m8_68 -> m8_68  [key=1, style=dashed, color=red, label=i];
m8_69 -> m8_71  [key=0, style=solid, color=red];
m8_71 -> m8_45  [key=0, style=bold, color=blue];
m8_99 -> m8_100  [key=0, style=solid, color=red];
m8_99 -> m8_107  [key=2, style=dotted, color=red];
m8_95 -> m8_96  [key=0, style=solid, color=green];
m8_95 -> m8_74  [key=0, style=solid, color=green];
m8_97 -> m8_98  [key=0, style=solid, color=red];
m8_97 -> m8_102  [key=2, style=dotted, color=red];
m8_97 -> m8_103  [key=2, style=dotted, color=red];
m8_97 -> m8_104  [key=2, style=dotted, color=red];
m8_97 -> m8_99  [key=1, style=dashed, color=red, label=currentArguments];
m8_97 -> m8_95  [key=0, style=bold, color=blue];
m8_96 -> m8_97  [key=0, style=solid, color=green];
m8_96 -> m8_80  [key=2, style=dotted, color=red];
m8_96 -> m8_101  [key=2, style=dotted, color=red];
m8_96 -> m8_98  [key=1, style=dashed, color=red, label=currentGenericArgumentNumbers];
m8_100 -> m8_95  [key=0, style=bold, color=blue];
m8_100 -> m8_101  [key=0, style=solid, color=green];
m8_100 -> m8_102  [key=2, style=dotted, color=green];
m8_77 -> m8_78  [key=0, style=solid, color=red];
m8_77 -> m8_79  [key=2, style=dotted, color=red];
m8_77 -> m8_80  [key=2, style=dotted, color=red];
m8_74 -> m8_100  [key=0, style=solid, color=green];
m8_74 -> m8_76  [key=2, style=dotted, color=green];
m8_74 -> m8_75  [key=0, style=solid, color=red];
m8_78 -> m8_79  [key=0, style=solid, color=green];
m8_78 -> m8_80  [key=2, style=dotted, color=green];
m8_78 -> m8_73  [key=0, style=bold, color=blue];
m8_93 -> m8_94  [key=0, style=solid, color=green];
m8_93 -> m8_63  [key=2, style=dotted, color=green];
m8_93 -> m8_99  [key=1, style=dashed, color=green, label="lambda expression"];
m8_94 -> m8_90  [key=0, style=bold, color=blue];
m8_103 -> m8_70  [key=1, style=dashed, color=green, label=number];
m8_73 -> m8_74  [key=0, style=solid, color=red];
m8_73 -> m8_75  [key=1, style=dashed, color=red, label="System.Type"];
m8_73 -> m8_77  [key=1, style=dashed, color=red, label="System.Type"];
m8_75 -> m8_78  [key=0, style=solid, color=red];
m8_108 -> m8_97  [key=1, style=dashed, color=red, label=genericArguments];
m8_108 -> m8_98  [key=1, style=dashed, color=red, label=genericArguments];
m9_43 -> m9_44  [key=0, style=solid, color=red];
m9_43 -> m9_45  [key=1, style=dashed, color=red, label=int];
m9_44 -> m9_45  [key=0, style=solid, color=red];
m9_45 -> m9_46  [key=0, style=solid, color=red];
m9_45 -> m9_58  [key=2, style=dotted, color=red];
m9_45 -> m9_51  [key=1, style=dashed, color=red, label=scheduledJobs];
m9_45 -> m9_56  [key=1, style=dashed, color=red, label=scheduledJobs];
m9_46 -> m9_47  [key=0, style=solid, color=red];
m9_46 -> m9_48  [key=0, style=solid, color=red];
m9_51 -> m9_52  [key=0, style=solid, color=red];
m9_51 -> m9_55  [key=0, style=solid, color=red];
m9_56 -> m9_57  [key=0, style=solid, color=red];
m9_56 -> m9_63  [key=2, style=dotted, color=red];
m9_56 -> m9_80  [key=1, style=dashed, color=red, label="lambda expression"];
m9_56 -> m9_83  [key=1, style=dashed, color=red, label="lambda expression"];
m9_47 -> m9_57  [key=0, style=solid, color=red];
m9_47 -> m9_59  [key=2, style=dotted, color=red];
m9_48 -> m9_49  [key=0, style=solid, color=red];
m9_48 -> m9_59  [key=2, style=dotted, color=red];
m9_48 -> m9_53  [key=1, style=dashed, color=red, label=jobs];
m9_48 -> m9_70  [key=1, style=dashed, color=red, label=jobs];
m9_48 -> m9_56  [key=1, style=dashed, color=red, label=jobs];
m9_48 -> m9_84  [key=1, style=dashed, color=red, label=jobs];
m9_49 -> m9_50  [key=0, style=solid, color=red];
m9_49 -> m9_59  [key=2, style=dotted, color=red];
m9_49 -> m9_54  [key=1, style=dashed, color=red, label=states];
m9_49 -> m9_78  [key=1, style=dashed, color=red, label=states];
m9_49 -> m9_56  [key=1, style=dashed, color=red, label=states];
m9_49 -> m9_84  [key=1, style=dashed, color=red, label=states];
m9_53 -> m9_54  [key=0, style=solid, color=red];
m9_53 -> m9_61  [key=2, style=dotted, color=red];
m9_53 -> m9_64  [key=1, style=dashed, color=red, label="lambda expression"];
m9_53 -> m9_69  [key=1, style=dashed, color=red, label="lambda expression"];
m9_50 -> m9_51  [key=0, style=solid, color=red];
m9_50 -> m9_60  [key=2, style=dotted, color=red];
m9_50 -> m9_53  [key=1, style=dashed, color=red, label=pipeline];
m9_50 -> m9_54  [key=1, style=dashed, color=red, label=pipeline];
m9_50 -> m9_55  [key=1, style=dashed, color=red, label=pipeline];
m9_54 -> m9_51  [key=0, style=solid, color=red];
m9_54 -> m9_61  [key=2, style=dotted, color=red];
m9_54 -> m9_73  [key=1, style=dashed, color=red, label="lambda expression"];
m9_54 -> m9_77  [key=1, style=dashed, color=red, label="lambda expression"];
m9_55 -> m9_56  [key=0, style=solid, color=red];
m9_55 -> m9_62  [key=2, style=dotted, color=red];
m9_52 -> m9_53  [key=0, style=solid, color=red];
m9_52 -> m9_65  [key=1, style=dashed, color=red, label=job];
m9_52 -> m9_70  [key=1, style=dashed, color=red, label=job];
m9_52 -> m9_54  [key=1, style=dashed, color=red, label=job];
m9_52 -> m9_74  [key=1, style=dashed, color=red, label=job];
m9_52 -> m9_78  [key=1, style=dashed, color=red, label=job];
m9_57 -> m9_43  [key=0, style=bold, color=blue];
m9_23 -> m9_24  [key=0, style=solid, color=red];
m9_23 -> m9_25  [key=1, style=dashed, color=red, label=int];
m9_24 -> m9_25  [key=0, style=solid, color=red];
m9_25 -> m9_26  [key=0, style=solid, color=red];
m9_25 -> m9_28  [key=2, style=dotted, color=red];
m9_26 -> m9_27  [key=0, style=solid, color=red];
m9_26 -> m9_29  [key=2, style=dotted, color=red];
m9_26 -> m9_30  [key=2, style=dotted, color=red];
m9_26 -> m9_31  [key=2, style=dotted, color=red];
m9_26 -> m9_32  [key=1, style=dashed, color=red, label="lambda expression"];
m9_26 -> m9_40  [key=1, style=dashed, color=red, label="lambda expression"];
m9_27 -> m9_23  [key=0, style=bold, color=blue];
m9_173 -> m9_324  [key=0, style=solid];
m9_173 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_327  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_173 -> m9_329  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_331  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_332  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_173 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m9_173 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m9_324 -> m9_325  [key=0, style=solid];
m9_324 -> m9_326  [key=0, style=solid];
m9_326 -> m9_327  [key=0, style=solid];
m9_326 -> m9_337  [key=2, style=dotted];
m9_326 -> m9_331  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_326 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_327 -> m9_328  [key=0, style=solid];
m9_327 -> m9_337  [key=2, style=dotted];
m9_327 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_327 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_328 -> m9_329  [key=0, style=solid];
m9_328 -> m9_60  [key=2, style=dotted];
m9_328 -> m9_331  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_328 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_328 -> m9_334  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_329 -> m9_330  [key=0, style=solid];
m9_329 -> m9_334  [key=0, style=solid];
m9_331 -> m9_332  [key=0, style=solid];
m9_331 -> m9_61  [key=2, style=dotted];
m9_331 -> m9_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_331 -> m9_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_332 -> m9_333  [key=0, style=solid];
m9_332 -> m9_329  [key=0, style=solid];
m9_333 -> m9_329  [key=0, style=solid];
m9_333 -> m9_61  [key=2, style=dotted];
m9_333 -> m9_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_333 -> m9_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_335 -> m9_336  [key=0, style=solid];
m9_335 -> m9_114  [key=2, style=dotted];
m9_335 -> m9_115  [key=2, style=dotted];
m9_335 -> m9_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_335 -> m9_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_325 -> m9_336  [key=0, style=solid];
m9_325 -> m9_113  [key=2, style=dotted];
m9_334 -> m9_335  [key=0, style=solid];
m9_334 -> m9_62  [key=2, style=dotted];
m9_330 -> m9_331  [key=0, style=solid];
m9_330 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_330 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_336 -> m9_173  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid, color=red];
m9_11 -> m9_13  [key=1, style=dashed, color=red, label=string];
m9_12 -> m9_13  [key=0, style=solid, color=red];
m9_13 -> m9_14  [key=0, style=solid, color=red];
m9_13 -> m9_9  [key=2, style=dotted, color=red];
m9_13 -> m9_10  [key=2, style=dotted, color=red];
m9_14 -> m9_11  [key=0, style=bold, color=blue];
m9_219 -> m9_269  [key=0, style=solid];
m9_219 -> m9_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_219 -> m9_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_219 -> m9_277  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_269 -> m9_270  [key=0, style=solid];
m9_269 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_269 -> m9_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_276 -> m9_277  [key=0, style=solid];
m9_276 -> m9_114  [key=2, style=dotted];
m9_276 -> m9_115  [key=2, style=dotted];
m9_276 -> m9_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_277 -> m9_278  [key=0, style=solid];
m9_277 -> m9_289  [key=2, style=dotted];
m9_277 -> m9_282  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_270 -> m9_271  [key=0, style=solid];
m9_270 -> m9_113  [key=2, style=dotted];
m9_270 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_270 -> m9_276  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_270 -> m9_280  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_270 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_273 -> m9_274  [key=0, style=solid];
m9_273 -> m9_175  [key=2, style=dotted];
m9_274 -> m9_275  [key=0, style=solid];
m9_274 -> m9_288  [key=2, style=dotted];
m9_274 -> m9_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_271 -> m9_272  [key=0, style=solid];
m9_271 -> m9_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_280 -> m9_281  [key=0, style=solid];
m9_280 -> m9_286  [key=0, style=solid];
m9_284 -> m9_285  [key=0, style=solid];
m9_284 -> m9_292  [key=2, style=dotted];
m9_272 -> m9_273  [key=0, style=solid];
m9_272 -> m9_276  [key=0, style=solid];
m9_275 -> m9_272  [key=0, style=solid];
m9_275 -> m9_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_278 -> m9_279  [key=0, style=solid];
m9_278 -> m9_59  [key=2, style=dotted];
m9_278 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_278 -> m9_286  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_282 -> m9_283  [key=0, style=solid];
m9_282 -> m9_284  [key=0, style=solid];
m9_282 -> m9_290  [key=2, style=dotted];
m9_282 -> m9_291  [key=2, style=dotted];
m9_279 -> m9_280  [key=0, style=solid];
m9_279 -> m9_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_279 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_279 -> m9_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_286 -> m9_287  [key=0, style=solid];
m9_285 -> m9_280  [key=0, style=solid];
m9_285 -> m9_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_281 -> m9_282  [key=0, style=solid];
m9_283 -> m9_284  [key=0, style=solid];
m9_287 -> m9_219  [key=0, style=bold, color=blue];
m9_236 -> m9_237  [key=0, style=solid];
m9_236 -> m9_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_236 -> m9_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_237 -> m9_238  [key=0, style=solid];
m9_238 -> m9_239  [key=0, style=solid];
m9_238 -> m9_9  [key=2, style=dotted];
m9_238 -> m9_76  [key=2, style=dotted];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_234  [key=2, style=dotted];
m9_242 -> m9_235  [key=2, style=dotted];
m9_239 -> m9_240  [key=0, style=solid];
m9_239 -> m9_232  [key=2, style=dotted];
m9_239 -> m9_242  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_240 -> m9_241  [key=0, style=solid];
m9_240 -> m9_242  [key=0, style=solid];
m9_240 -> m9_233  [key=2, style=dotted];
m9_241 -> m9_243  [key=0, style=solid];
m9_243 -> m9_236  [key=0, style=bold, color=blue];
m9_429 -> m9_430  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid, color=red];
m9_40 -> m9_41  [key=0, style=solid, color=red];
m9_33 -> m9_34  [key=0, style=solid, color=red];
m9_33 -> m9_35  [key=2, style=dotted, color=red];
m9_33 -> m9_36  [key=2, style=dotted, color=red];
m9_33 -> m9_37  [key=2, style=dotted, color=red];
m9_33 -> m9_38  [key=2, style=dotted, color=red];
m9_33 -> m9_39  [key=2, style=dotted, color=red];
m9_34 -> m9_32  [key=0, style=bold, color=blue];
m9_41 -> m9_42  [key=0, style=solid, color=red];
m9_41 -> m9_41  [key=1, style=dashed, color=red, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m9_42 -> m9_40  [key=0, style=bold, color=blue];
m9_70 -> m9_71  [key=0, style=solid, color=red];
m9_70 -> m9_72  [key=2, style=dotted, color=red];
m9_84 -> m9_85  [key=0, style=solid, color=red];
m9_84 -> m9_86  [key=2, style=dotted, color=red];
m9_84 -> m9_87  [key=2, style=dotted, color=red];
m9_84 -> m9_36  [key=2, style=dotted, color=red];
m9_84 -> m9_37  [key=2, style=dotted, color=red];
m9_84 -> m9_39  [key=2, style=dotted, color=red];
m9_78 -> m9_79  [key=0, style=solid, color=red];
m9_78 -> m9_72  [key=2, style=dotted, color=red];
m9_65 -> m9_66  [key=0, style=solid, color=red];
m9_65 -> m9_67  [key=2, style=dotted, color=red];
m9_65 -> m9_68  [key=2, style=dotted, color=red];
m9_74 -> m9_75  [key=0, style=solid, color=red];
m9_74 -> m9_67  [key=2, style=dotted, color=red];
m9_74 -> m9_76  [key=2, style=dotted, color=red];
m9_64 -> m9_65  [key=0, style=solid, color=red];
m9_69 -> m9_70  [key=0, style=solid, color=red];
m9_73 -> m9_74  [key=0, style=solid, color=red];
m9_77 -> m9_78  [key=0, style=solid, color=red];
m9_80 -> m9_81  [key=0, style=solid, color=red];
m9_83 -> m9_84  [key=0, style=solid, color=red];
m9_66 -> m9_64  [key=0, style=bold, color=blue];
m9_71 -> m9_69  [key=0, style=bold, color=blue];
m9_75 -> m9_73  [key=0, style=bold, color=blue];
m9_79 -> m9_77  [key=0, style=bold, color=blue];
m9_81 -> m9_82  [key=0, style=solid, color=red];
m9_82 -> m9_80  [key=0, style=bold, color=blue];
m9_85 -> m9_83  [key=0, style=bold, color=blue];
m9_120 -> m9_121  [key=0, style=solid, color=red];
m9_120 -> m9_72  [key=2, style=dotted, color=red];
m9_130 -> m9_131  [key=0, style=solid, color=red];
m9_130 -> m9_132  [key=2, style=dotted, color=red];
m9_130 -> m9_133  [key=2, style=dotted, color=red];
m9_130 -> m9_134  [key=2, style=dotted, color=red];
m9_130 -> m9_38  [key=2, style=dotted, color=red];
m9_127 -> m9_128  [key=0, style=solid, color=red];
m9_127 -> m9_72  [key=2, style=dotted, color=red];
m9_117 -> m9_118  [key=0, style=solid, color=red];
m9_117 -> m9_67  [key=2, style=dotted, color=red];
m9_117 -> m9_68  [key=2, style=dotted, color=red];
m9_123 -> m9_124  [key=0, style=solid, color=red];
m9_123 -> m9_67  [key=2, style=dotted, color=red];
m9_123 -> m9_125  [key=2, style=dotted, color=red];
m9_116 -> m9_117  [key=0, style=solid, color=red];
m9_119 -> m9_120  [key=0, style=solid, color=red];
m9_122 -> m9_123  [key=0, style=solid, color=red];
m9_126 -> m9_127  [key=0, style=solid, color=red];
m9_129 -> m9_130  [key=0, style=solid, color=red];
m9_118 -> m9_116  [key=0, style=bold, color=blue];
m9_121 -> m9_119  [key=0, style=bold, color=blue];
m9_124 -> m9_122  [key=0, style=bold, color=blue];
m9_128 -> m9_126  [key=0, style=bold, color=blue];
m9_131 -> m9_129  [key=0, style=bold, color=blue];
m9_141 -> m9_142  [key=0, style=solid, color=red];
m9_142 -> m9_143  [key=0, style=solid, color=red];
m9_142 -> m9_144  [key=2, style=dotted, color=red];
m9_142 -> m9_37  [key=2, style=dotted, color=red];
m9_142 -> m9_36  [key=2, style=dotted, color=red];
m9_142 -> m9_38  [key=2, style=dotted, color=red];
m9_142 -> m9_39  [key=2, style=dotted, color=red];
m9_143 -> m9_141  [key=0, style=bold, color=blue];
m9_151 -> m9_152  [key=0, style=solid, color=red];
m9_152 -> m9_153  [key=0, style=solid, color=red];
m9_152 -> m9_154  [key=2, style=dotted, color=red];
m9_152 -> m9_37  [key=2, style=dotted, color=red];
m9_152 -> m9_36  [key=2, style=dotted, color=red];
m9_152 -> m9_38  [key=2, style=dotted, color=red];
m9_152 -> m9_39  [key=2, style=dotted, color=red];
m9_153 -> m9_151  [key=0, style=bold, color=blue];
m9_177 -> m9_178  [key=0, style=solid, color=red];
m9_177 -> m9_67  [key=2, style=dotted, color=red];
m9_177 -> m9_150  [key=2, style=dotted, color=red];
m9_183 -> m9_184  [key=0, style=solid, color=red];
m9_183 -> m9_67  [key=2, style=dotted, color=red];
m9_183 -> m9_10  [key=2, style=dotted, color=red];
m9_189 -> m9_190  [key=0, style=solid, color=red];
m9_189 -> m9_67  [key=2, style=dotted, color=red];
m9_189 -> m9_10  [key=2, style=dotted, color=red];
m9_176 -> m9_177  [key=0, style=solid, color=red];
m9_179 -> m9_180  [key=0, style=solid, color=red];
m9_182 -> m9_183  [key=0, style=solid, color=red];
m9_185 -> m9_186  [key=0, style=solid, color=red];
m9_188 -> m9_189  [key=0, style=solid, color=red];
m9_191 -> m9_192  [key=0, style=solid, color=red];
m9_194 -> m9_195  [key=0, style=solid, color=red];
m9_178 -> m9_176  [key=0, style=bold, color=blue];
m9_180 -> m9_181  [key=0, style=solid, color=red];
m9_181 -> m9_179  [key=0, style=bold, color=blue];
m9_184 -> m9_182  [key=0, style=bold, color=blue];
m9_186 -> m9_187  [key=0, style=solid, color=red];
m9_187 -> m9_185  [key=0, style=bold, color=blue];
m9_190 -> m9_188  [key=0, style=bold, color=blue];
m9_192 -> m9_193  [key=0, style=solid, color=red];
m9_193 -> m9_191  [key=0, style=bold, color=blue];
m9_195 -> m9_196  [key=0, style=solid, color=red];
m9_195 -> m9_197  [key=2, style=dotted, color=red];
m9_195 -> m9_36  [key=2, style=dotted, color=red];
m9_195 -> m9_38  [key=2, style=dotted, color=red];
m9_195 -> m9_39  [key=2, style=dotted, color=red];
m9_196 -> m9_194  [key=0, style=bold, color=blue];
m9_203 -> m9_204  [key=0, style=solid, color=red];
m9_204 -> m9_205  [key=0, style=solid, color=red];
m9_204 -> m9_197  [key=2, style=dotted, color=red];
m9_204 -> m9_36  [key=2, style=dotted, color=red];
m9_204 -> m9_38  [key=2, style=dotted, color=red];
m9_204 -> m9_39  [key=2, style=dotted, color=red];
m9_205 -> m9_203  [key=0, style=bold, color=blue];
m9_211 -> m9_212  [key=0, style=solid];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> m9_214  [key=2, style=dotted];
m9_212 -> m9_36  [key=2, style=dotted];
m9_212 -> m9_38  [key=2, style=dotted];
m9_213 -> m9_211  [key=0, style=bold, color=blue];
m9_260 -> m9_261  [key=0, style=solid];
m9_260 -> m9_262  [key=2, style=dotted];
m9_259 -> m9_260  [key=0, style=solid];
m9_263 -> m9_264  [key=0, style=solid];
m9_266 -> m9_267  [key=0, style=solid];
m9_261 -> m9_259  [key=0, style=bold, color=blue];
m9_264 -> m9_265  [key=0, style=solid];
m9_265 -> m9_263  [key=0, style=bold, color=blue];
m9_267 -> m9_268  [key=0, style=solid];
m9_268 -> m9_266  [key=0, style=bold, color=blue];
m9_294 -> m9_295  [key=0, style=solid];
m9_294 -> m9_296  [key=2, style=dotted];
m9_294 -> m9_297  [key=2, style=dotted];
m9_293 -> m9_294  [key=0, style=solid];
m9_295 -> m9_293  [key=0, style=bold, color=blue];
m9_322 -> m9_323  [key=0, style=solid];
m9_322 -> m9_67  [key=2, style=dotted];
m9_318 -> m9_319  [key=0, style=solid];
m9_321 -> m9_322  [key=0, style=solid];
m9_319 -> m9_320  [key=0, style=solid];
m9_319 -> m9_296  [key=2, style=dotted];
m9_320 -> m9_318  [key=0, style=bold, color=blue];
m9_323 -> m9_321  [key=0, style=bold, color=blue];
m9_339 -> m9_340  [key=0, style=solid];
m9_339 -> m9_9  [key=2, style=dotted];
m9_339 -> m9_68  [key=2, style=dotted];
m9_347 -> m9_348  [key=0, style=solid];
m9_347 -> m9_9  [key=2, style=dotted];
m9_347 -> m9_68  [key=2, style=dotted];
m9_357 -> m9_358  [key=0, style=solid];
m9_357 -> m9_359  [key=2, style=dotted];
m9_357 -> m9_360  [key=2, style=dotted];
m9_357 -> m9_361  [key=2, style=dotted];
m9_357 -> m9_362  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_342 -> m9_343  [key=0, style=solid];
m9_342 -> m9_344  [key=0, style=solid];
m9_342 -> m9_345  [key=2, style=dotted];
m9_343 -> m9_344  [key=0, style=solid];
m9_343 -> m9_72  [key=2, style=dotted];
m9_354 -> m9_355  [key=0, style=solid];
m9_354 -> m9_345  [key=2, style=dotted];
m9_350 -> m9_351  [key=0, style=solid];
m9_350 -> m9_352  [key=0, style=solid];
m9_350 -> m9_345  [key=2, style=dotted];
m9_351 -> m9_352  [key=0, style=solid];
m9_351 -> m9_72  [key=2, style=dotted];
m9_338 -> m9_339  [key=0, style=solid];
m9_341 -> m9_342  [key=0, style=solid];
m9_341 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label="?"];
m9_346 -> m9_347  [key=0, style=solid];
m9_349 -> m9_350  [key=0, style=solid];
m9_349 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label="?"];
m9_353 -> m9_354  [key=0, style=solid];
m9_356 -> m9_357  [key=0, style=solid];
m9_340 -> m9_338  [key=0, style=bold, color=blue];
m9_344 -> m9_341  [key=0, style=bold, color=blue];
m9_348 -> m9_346  [key=0, style=bold, color=blue];
m9_352 -> m9_349  [key=0, style=bold, color=blue];
m9_355 -> m9_353  [key=0, style=bold, color=blue];
m9_358 -> m9_356  [key=0, style=bold, color=blue];
m9_362 -> m9_363  [key=0, style=solid];
m9_363 -> m9_364  [key=0, style=solid];
m9_364 -> m9_362  [key=0, style=bold, color=blue];
m9_392 -> m9_393  [key=0, style=solid];
m9_398 -> m9_399  [key=0, style=solid];
m9_404 -> m9_405  [key=0, style=solid];
m9_410 -> m9_411  [key=0, style=solid];
m9_417 -> m9_418  [key=0, style=solid];
m9_417 -> m9_419  [key=2, style=dotted];
m9_424 -> m9_425  [key=0, style=solid];
m9_430 -> m9_431  [key=0, style=solid];
m9_387 -> m9_388  [key=0, style=solid];
m9_391 -> m9_392  [key=0, style=solid];
m9_394 -> m9_395  [key=0, style=solid];
m9_397 -> m9_398  [key=0, style=solid];
m9_400 -> m9_401  [key=0, style=solid];
m9_403 -> m9_404  [key=0, style=solid];
m9_406 -> m9_407  [key=0, style=solid];
m9_409 -> m9_410  [key=0, style=solid];
m9_412 -> m9_413  [key=0, style=solid];
m9_416 -> m9_417  [key=0, style=solid];
m9_420 -> m9_421  [key=0, style=solid];
m9_423 -> m9_424  [key=0, style=solid];
m9_427 -> m9_428  [key=0, style=solid];
m9_427 -> m9_67  [key=2, style=dotted];
m9_427 -> m9_10  [key=2, style=dotted];
m9_426 -> m9_427  [key=0, style=solid];
m9_388 -> m9_389  [key=0, style=solid];
m9_388 -> m9_390  [key=2, style=dotted];
m9_389 -> m9_387  [key=0, style=bold, color=blue];
m9_393 -> m9_391  [key=0, style=bold, color=blue];
m9_395 -> m9_396  [key=0, style=solid];
m9_395 -> m9_390  [key=2, style=dotted];
m9_396 -> m9_394  [key=0, style=bold, color=blue];
m9_399 -> m9_397  [key=0, style=bold, color=blue];
m9_401 -> m9_402  [key=0, style=solid];
m9_401 -> m9_4  [key=2, style=dotted];
m9_402 -> m9_400  [key=0, style=bold, color=blue];
m9_405 -> m9_403  [key=0, style=bold, color=blue];
m9_407 -> m9_408  [key=0, style=solid];
m9_407 -> m9_4  [key=2, style=dotted];
m9_408 -> m9_406  [key=0, style=bold, color=blue];
m9_411 -> m9_409  [key=0, style=bold, color=blue];
m9_413 -> m9_414  [key=0, style=solid];
m9_413 -> m9_415  [key=2, style=dotted];
m9_414 -> m9_412  [key=0, style=bold, color=blue];
m9_418 -> m9_416  [key=0, style=bold, color=blue];
m9_421 -> m9_422  [key=0, style=solid];
m9_421 -> m9_4  [key=2, style=dotted];
m9_422 -> m9_420  [key=0, style=bold, color=blue];
m9_425 -> m9_423  [key=0, style=bold, color=blue];
m9_428 -> m9_426  [key=0, style=bold, color=blue];
m9_431 -> m9_429  [key=0, style=bold, color=blue];
m9_220 -> m9_221  [key=0, style=solid];
m9_221 -> m9_222  [key=0, style=solid];
m9_222 -> m9_223  [key=0, style=solid];
m9_222 -> m9_219  [key=2, style=dotted];
m9_223 -> m9_220  [key=0, style=bold, color=blue];
m9_135 -> m9_136  [key=0, style=solid, color=red];
m9_135 -> m9_137  [key=1, style=dashed, color=red, label=int];
m9_136 -> m9_137  [key=0, style=solid, color=red];
m9_137 -> m9_138  [key=0, style=solid, color=red];
m9_137 -> m9_140  [key=2, style=dotted, color=red];
m9_138 -> m9_139  [key=0, style=solid, color=red];
m9_138 -> m9_29  [key=2, style=dotted, color=red];
m9_138 -> m9_141  [key=1, style=dashed, color=red, label="lambda expression"];
m9_139 -> m9_135  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid, color=red];
m9_1 -> m9_2  [key=0, style=solid, color=red];
m9_2 -> m9_3  [key=0, style=solid, color=red];
m9_2 -> m9_4  [key=2, style=dotted, color=red];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_145 -> m9_146  [key=0, style=solid, color=red];
m9_145 -> m9_147  [key=1, style=dashed, color=red, label=int];
m9_146 -> m9_147  [key=0, style=solid, color=red];
m9_147 -> m9_148  [key=0, style=solid, color=red];
m9_147 -> m9_150  [key=2, style=dotted, color=red];
m9_148 -> m9_149  [key=0, style=solid, color=red];
m9_148 -> m9_29  [key=2, style=dotted, color=red];
m9_148 -> m9_151  [key=1, style=dashed, color=red, label="lambda expression"];
m9_149 -> m9_145  [key=0, style=bold, color=blue];
m9_155 -> m9_156  [key=0, style=solid, color=red];
m9_156 -> m9_157  [key=0, style=solid, color=red];
m9_157 -> m9_158  [key=0, style=solid, color=red];
m9_157 -> m9_112  [key=2, style=dotted, color=red];
m9_157 -> m9_159  [key=1, style=dashed, color=red, label=queues];
m9_158 -> m9_159  [key=0, style=solid, color=red];
m9_158 -> m9_172  [key=2, style=dotted, color=red];
m9_158 -> m9_169  [key=1, style=dashed, color=red, label=result];
m9_158 -> m9_170  [key=1, style=dashed, color=red, label=result];
m9_159 -> m9_160  [key=0, style=solid, color=red];
m9_159 -> m9_170  [key=0, style=solid, color=red];
m9_159 -> m9_164  [key=1, style=dashed, color=red, label=queue];
m9_159 -> m9_177  [key=1, style=dashed, color=red, label=queue];
m9_159 -> m9_165  [key=1, style=dashed, color=red, label=queue];
m9_159 -> m9_183  [key=1, style=dashed, color=red, label=queue];
m9_159 -> m9_166  [key=1, style=dashed, color=red, label=queue];
m9_159 -> m9_189  [key=1, style=dashed, color=red, label=queue];
m9_159 -> m9_169  [key=1, style=dashed, color=red, label=queue];
m9_169 -> m9_159  [key=0, style=solid, color=red];
m9_169 -> m9_174  [key=2, style=dotted, color=red];
m9_169 -> m9_175  [key=2, style=dotted, color=red];
m9_170 -> m9_171  [key=0, style=solid, color=red];
m9_160 -> m9_161  [key=0, style=solid, color=red];
m9_164 -> m9_165  [key=0, style=solid, color=red];
m9_164 -> m9_61  [key=2, style=dotted, color=red];
m9_164 -> m9_176  [key=1, style=dashed, color=red, label="lambda expression"];
m9_164 -> m9_179  [key=1, style=dashed, color=red, label="lambda expression"];
m9_164 -> m9_168  [key=1, style=dashed, color=red, label=firstJobIds];
m9_165 -> m9_166  [key=0, style=solid, color=red];
m9_165 -> m9_61  [key=2, style=dotted, color=red];
m9_165 -> m9_182  [key=1, style=dashed, color=red, label="lambda expression"];
m9_165 -> m9_185  [key=1, style=dashed, color=red, label="lambda expression"];
m9_165 -> m9_169  [key=1, style=dashed, color=red, label=length];
m9_166 -> m9_167  [key=0, style=solid, color=red];
m9_166 -> m9_61  [key=2, style=dotted, color=red];
m9_166 -> m9_188  [key=1, style=dashed, color=red, label="lambda expression"];
m9_166 -> m9_191  [key=1, style=dashed, color=red, label="lambda expression"];
m9_166 -> m9_169  [key=1, style=dashed, color=red, label=dequeued];
m9_161 -> m9_162  [key=0, style=solid, color=red];
m9_162 -> m9_163  [key=0, style=solid, color=red];
m9_163 -> m9_164  [key=0, style=solid, color=red];
m9_163 -> m9_60  [key=2, style=dotted, color=red];
m9_163 -> m9_165  [key=1, style=dashed, color=red, label=pipeline];
m9_163 -> m9_166  [key=1, style=dashed, color=red, label=pipeline];
m9_163 -> m9_167  [key=1, style=dashed, color=red, label=pipeline];
m9_167 -> m9_168  [key=0, style=solid, color=red];
m9_167 -> m9_62  [key=2, style=dotted, color=red];
m9_168 -> m9_169  [key=0, style=solid, color=red];
m9_168 -> m9_173  [key=2, style=dotted, color=red];
m9_168 -> m9_194  [key=1, style=dashed, color=red, label="lambda expression"];
m9_171 -> m9_155  [key=0, style=bold, color=blue];
m9_88 -> m9_89  [key=0, style=solid, color=red];
m9_89 -> m9_90  [key=0, style=solid, color=red];
m9_90 -> m9_91  [key=0, style=solid, color=red];
m9_90 -> m9_92  [key=2, style=dotted, color=red];
m9_91 -> m9_88  [key=0, style=bold, color=blue];
m9_97 -> m9_98  [key=0, style=solid, color=red];
m9_98 -> m9_99  [key=0, style=solid, color=red];
m9_99 -> m9_100  [key=0, style=solid, color=red];
m9_99 -> m9_112  [key=2, style=dotted, color=red];
m9_99 -> m9_105  [key=1, style=dashed, color=red, label=serverNames];
m9_99 -> m9_110  [key=1, style=dashed, color=red, label=serverNames];
m9_100 -> m9_101  [key=0, style=solid, color=red];
m9_100 -> m9_102  [key=0, style=solid, color=red];
m9_105 -> m9_106  [key=0, style=solid, color=red];
m9_105 -> m9_109  [key=0, style=solid, color=red];
m9_110 -> m9_111  [key=0, style=solid, color=red];
m9_110 -> m9_114  [key=2, style=dotted, color=red];
m9_110 -> m9_115  [key=2, style=dotted, color=red];
m9_110 -> m9_129  [key=1, style=dashed, color=red, label="lambda expression"];
m9_101 -> m9_111  [key=0, style=solid, color=red];
m9_101 -> m9_113  [key=2, style=dotted, color=red];
m9_102 -> m9_103  [key=0, style=solid, color=red];
m9_102 -> m9_59  [key=2, style=dotted, color=red];
m9_102 -> m9_107  [key=1, style=dashed, color=red, label=servers];
m9_102 -> m9_120  [key=1, style=dashed, color=red, label=servers];
m9_102 -> m9_110  [key=1, style=dashed, color=red, label=servers];
m9_102 -> m9_130  [key=1, style=dashed, color=red, label=servers];
m9_103 -> m9_104  [key=0, style=solid, color=red];
m9_103 -> m9_59  [key=2, style=dotted, color=red];
m9_103 -> m9_108  [key=1, style=dashed, color=red, label=queues];
m9_103 -> m9_127  [key=1, style=dashed, color=red, label=queues];
m9_103 -> m9_110  [key=1, style=dashed, color=red, label=queues];
m9_103 -> m9_130  [key=1, style=dashed, color=red, label=queues];
m9_107 -> m9_108  [key=0, style=solid, color=red];
m9_107 -> m9_61  [key=2, style=dotted, color=red];
m9_107 -> m9_116  [key=1, style=dashed, color=red, label="lambda expression"];
m9_107 -> m9_119  [key=1, style=dashed, color=red, label="lambda expression"];
m9_104 -> m9_105  [key=0, style=solid, color=red];
m9_104 -> m9_60  [key=2, style=dotted, color=red];
m9_104 -> m9_107  [key=1, style=dashed, color=red, label=pipeline];
m9_104 -> m9_108  [key=1, style=dashed, color=red, label=pipeline];
m9_104 -> m9_109  [key=1, style=dashed, color=red, label=pipeline];
m9_108 -> m9_105  [key=0, style=solid, color=red];
m9_108 -> m9_61  [key=2, style=dotted, color=red];
m9_108 -> m9_122  [key=1, style=dashed, color=red, label="lambda expression"];
m9_108 -> m9_126  [key=1, style=dashed, color=red, label="lambda expression"];
m9_109 -> m9_110  [key=0, style=solid, color=red];
m9_109 -> m9_62  [key=2, style=dotted, color=red];
m9_106 -> m9_107  [key=0, style=solid, color=red];
m9_106 -> m9_117  [key=1, style=dashed, color=red, label=name];
m9_106 -> m9_120  [key=1, style=dashed, color=red, label=name];
m9_106 -> m9_108  [key=1, style=dashed, color=red, label=name];
m9_106 -> m9_123  [key=1, style=dashed, color=red, label=name];
m9_106 -> m9_127  [key=1, style=dashed, color=red, label=name];
m9_111 -> m9_97  [key=0, style=bold, color=blue];
m9_369 -> m9_370  [key=0, style=solid];
m9_370 -> m9_371  [key=0, style=solid];
m9_371 -> m9_372  [key=0, style=solid];
m9_371 -> m9_386  [key=2, style=dotted];
m9_371 -> m9_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_375  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_376  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_377  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_378  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_371 -> m9_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_372 -> m9_373  [key=0, style=solid];
m9_372 -> m9_112  [key=2, style=dotted];
m9_372 -> m9_380  [key=1, style=dashed, color=darkseagreen4, label=queues];
m9_374 -> m9_375  [key=0, style=solid];
m9_374 -> m9_61  [key=2, style=dotted];
m9_374 -> m9_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_374 -> m9_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_375 -> m9_376  [key=0, style=solid];
m9_375 -> m9_61  [key=2, style=dotted];
m9_375 -> m9_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_375 -> m9_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_376 -> m9_377  [key=0, style=solid];
m9_376 -> m9_61  [key=2, style=dotted];
m9_376 -> m9_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_376 -> m9_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_377 -> m9_378  [key=0, style=solid];
m9_377 -> m9_61  [key=2, style=dotted];
m9_377 -> m9_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_377 -> m9_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_378 -> m9_379  [key=0, style=solid];
m9_378 -> m9_61  [key=2, style=dotted];
m9_378 -> m9_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_378 -> m9_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_379 -> m9_380  [key=0, style=solid];
m9_379 -> m9_61  [key=2, style=dotted];
m9_379 -> m9_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_379 -> m9_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_382 -> m9_380  [key=0, style=solid];
m9_382 -> m9_61  [key=2, style=dotted];
m9_382 -> m9_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_382 -> m9_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_384 -> m9_385  [key=0, style=solid];
m9_373 -> m9_374  [key=0, style=solid];
m9_373 -> m9_60  [key=2, style=dotted];
m9_373 -> m9_375  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_376  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_377  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_378  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_379  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_373 -> m9_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_380 -> m9_381  [key=0, style=solid];
m9_380 -> m9_383  [key=0, style=solid];
m9_383 -> m9_384  [key=0, style=solid];
m9_383 -> m9_62  [key=2, style=dotted];
m9_381 -> m9_382  [key=0, style=solid];
m9_381 -> m9_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m9_385 -> m9_369  [key=0, style=bold, color=blue];
m9_365 -> m9_366  [key=0, style=solid];
m9_366 -> m9_367  [key=0, style=solid];
m9_367 -> m9_368  [key=0, style=solid];
m9_367 -> m9_10  [key=2, style=dotted];
m9_368 -> m9_365  [key=0, style=bold, color=blue];
m9_215 -> m9_216  [key=0, style=solid];
m9_216 -> m9_217  [key=0, style=solid];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_219  [key=2, style=dotted];
m9_218 -> m9_215  [key=0, style=bold, color=blue];
m9_92 -> m9_298  [key=0, style=solid];
m9_92 -> m9_305  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_92 -> m9_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_92 -> m9_306  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_298 -> m9_299  [key=0, style=solid];
m9_298 -> m9_301  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_298 -> m9_302  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_298 -> m9_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_305 -> m9_306  [key=0, style=solid];
m9_305 -> m9_114  [key=2, style=dotted];
m9_305 -> m9_115  [key=2, style=dotted];
m9_305 -> m9_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_306 -> m9_307  [key=0, style=solid];
m9_306 -> m9_289  [key=2, style=dotted];
m9_306 -> m9_311  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m9_299 -> m9_300  [key=0, style=solid];
m9_299 -> m9_317  [key=2, style=dotted];
m9_299 -> m9_301  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m9_301 -> m9_302  [key=0, style=solid];
m9_301 -> m9_304  [key=0, style=solid];
m9_302 -> m9_303  [key=0, style=solid];
m9_302 -> m9_175  [key=2, style=dotted];
m9_303 -> m9_301  [key=0, style=solid];
m9_303 -> m9_317  [key=2, style=dotted];
m9_303 -> m9_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m9_300 -> m9_301  [key=0, style=solid];
m9_300 -> m9_113  [key=2, style=dotted];
m9_300 -> m9_302  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_300 -> m9_304  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_300 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_304 -> m9_305  [key=0, style=solid];
m9_304 -> m9_114  [key=2, style=dotted];
m9_304 -> m9_115  [key=2, style=dotted];
m9_304 -> m9_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_304 -> m9_309  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m9_313 -> m9_314  [key=0, style=solid];
m9_313 -> m9_292  [key=2, style=dotted];
m9_309 -> m9_310  [key=0, style=solid];
m9_309 -> m9_315  [key=0, style=solid];
m9_307 -> m9_308  [key=0, style=solid];
m9_307 -> m9_59  [key=2, style=dotted];
m9_307 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_307 -> m9_315  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_311 -> m9_312  [key=0, style=solid];
m9_311 -> m9_313  [key=0, style=solid];
m9_311 -> m9_290  [key=2, style=dotted];
m9_311 -> m9_291  [key=2, style=dotted];
m9_308 -> m9_309  [key=0, style=solid];
m9_308 -> m9_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_308 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_308 -> m9_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_315 -> m9_316  [key=0, style=solid];
m9_314 -> m9_309  [key=0, style=solid];
m9_314 -> m9_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_310 -> m9_311  [key=0, style=solid];
m9_312 -> m9_313  [key=0, style=solid];
m9_316 -> m9_92  [key=0, style=bold, color=blue];
m9_15 -> m9_16  [key=0, style=solid, color=red];
m9_16 -> m9_17  [key=0, style=solid, color=red];
m9_17 -> m9_18  [key=0, style=solid, color=red];
m9_17 -> m9_4  [key=2, style=dotted, color=red];
m9_18 -> m9_15  [key=0, style=bold, color=blue];
m9_244 -> m9_245  [key=0, style=solid];
m9_244 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_244 -> m9_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_245 -> m9_246  [key=0, style=solid];
m9_246 -> m9_247  [key=0, style=solid];
m9_246 -> m9_9  [key=2, style=dotted];
m9_246 -> m9_254  [key=2, style=dotted];
m9_246 -> m9_252  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_250 -> m9_251  [key=0, style=solid];
m9_250 -> m9_9  [key=2, style=dotted];
m9_250 -> m9_125  [key=2, style=dotted];
m9_247 -> m9_248  [key=0, style=solid];
m9_247 -> m9_249  [key=0, style=solid];
m9_252 -> m9_253  [key=0, style=solid];
m9_252 -> m9_255  [key=2, style=dotted];
m9_252 -> n24  [key=2, style=dotted];
m9_252 -> m9_257  [key=2, style=dotted];
m9_252 -> m9_258  [key=2, style=dotted];
m9_252 -> m9_63  [key=2, style=dotted];
m9_252 -> m9_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_252 -> m9_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_252 -> m9_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_248 -> m9_253  [key=0, style=solid];
m9_249 -> m9_250  [key=0, style=solid];
m9_249 -> m9_252  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m9_249 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m9_251 -> m9_252  [key=0, style=solid];
m9_251 -> m9_114  [key=2, style=dotted];
m9_251 -> m9_115  [key=2, style=dotted];
m9_253 -> m9_244  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid, color=red];
m9_5 -> m9_7  [key=1, style=dashed, color=red, label=string];
m9_6 -> m9_7  [key=0, style=solid, color=red];
m9_7 -> m9_8  [key=0, style=solid, color=red];
m9_7 -> m9_9  [key=2, style=dotted, color=red];
m9_7 -> m9_10  [key=2, style=dotted, color=red];
m9_8 -> m9_5  [key=0, style=bold, color=blue];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_207 -> m9_208  [key=0, style=solid];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_9  [key=2, style=dotted];
m9_208 -> m9_150  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_29  [key=2, style=dotted];
m9_209 -> m9_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_210 -> m9_206  [key=0, style=bold, color=blue];
m9_93 -> m9_94  [key=0, style=solid, color=red];
m9_94 -> m9_95  [key=0, style=solid, color=red];
m9_95 -> m9_96  [key=0, style=solid, color=red];
m9_95 -> m9_92  [key=2, style=dotted, color=red];
m9_96 -> m9_93  [key=0, style=bold, color=blue];
m9_19 -> m9_20  [key=0, style=solid, color=red];
m9_20 -> m9_21  [key=0, style=solid, color=red];
m9_21 -> m9_22  [key=0, style=solid, color=red];
m9_21 -> m9_4  [key=2, style=dotted, color=red];
m9_22 -> m9_19  [key=0, style=bold, color=blue];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_224 -> m9_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_225 -> m9_226  [key=0, style=solid];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_9  [key=2, style=dotted];
m9_226 -> m9_76  [key=2, style=dotted];
m9_230 -> m9_231  [key=0, style=solid];
m9_230 -> m9_234  [key=2, style=dotted];
m9_230 -> m9_235  [key=2, style=dotted];
m9_227 -> m9_228  [key=0, style=solid];
m9_227 -> m9_232  [key=2, style=dotted];
m9_227 -> m9_230  [key=1, style=dashed, color=darkseagreen4, label=queue];
m9_228 -> m9_229  [key=0, style=solid];
m9_228 -> m9_230  [key=0, style=solid];
m9_228 -> m9_233  [key=2, style=dotted];
m9_229 -> m9_231  [key=0, style=solid];
m9_231 -> m9_224  [key=0, style=bold, color=blue];
m9_198 -> m9_199  [key=0, style=solid, color=red];
m9_198 -> m9_200  [key=1, style=dashed, color=red, label=string];
m9_199 -> m9_200  [key=0, style=solid, color=red];
m9_200 -> m9_201  [key=0, style=solid, color=red];
m9_200 -> m9_9  [key=2, style=dotted, color=red];
m9_200 -> m9_150  [key=2, style=dotted, color=red];
m9_201 -> m9_202  [key=0, style=solid, color=red];
m9_201 -> m9_29  [key=2, style=dotted, color=red];
m9_201 -> m9_203  [key=1, style=dashed, color=red, label="lambda expression"];
m9_202 -> m9_198  [key=0, style=bold, color=blue];
m9_432 -> m9_65  [key=1, style=dashed, color=red, label=job];
m9_432 -> m9_70  [key=1, style=dashed, color=red, label=job];
m9_432 -> m9_74  [key=1, style=dashed, color=red, label=job];
m9_432 -> m9_78  [key=1, style=dashed, color=red, label=job];
m9_433 -> m9_70  [key=1, style=dashed, color=red, label=jobs];
m9_433 -> m9_84  [key=1, style=dashed, color=red, label=jobs];
m9_434 -> m9_78  [key=1, style=dashed, color=red, label=states];
m9_434 -> m9_84  [key=1, style=dashed, color=red, label=states];
m9_435 -> m9_117  [key=1, style=dashed, color=red, label=name];
m9_435 -> m9_120  [key=1, style=dashed, color=red, label=name];
m9_435 -> m9_123  [key=1, style=dashed, color=red, label=name];
m9_435 -> m9_127  [key=1, style=dashed, color=red, label=name];
m9_436 -> m9_120  [key=1, style=dashed, color=red, label=servers];
m9_436 -> m9_130  [key=1, style=dashed, color=red, label=servers];
m9_437 -> m9_127  [key=1, style=dashed, color=red, label=queues];
m9_437 -> m9_130  [key=1, style=dashed, color=red, label=queues];
m9_438 -> m9_177  [key=1, style=dashed, color=red, label=queue];
m9_438 -> m9_183  [key=1, style=dashed, color=red, label=queue];
m9_438 -> m9_189  [key=1, style=dashed, color=red, label=queue];
m9_439 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m9_440 -> m9_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_441 -> m9_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_442 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_443 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_443 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_444 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_444 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_444 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m9_445 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_446 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_446 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_446 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m9_447 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m9_448 -> m9_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_448 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m9_449 -> m9_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
}
