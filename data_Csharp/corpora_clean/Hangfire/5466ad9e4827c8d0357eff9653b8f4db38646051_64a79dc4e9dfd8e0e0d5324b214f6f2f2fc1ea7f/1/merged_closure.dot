digraph  {
n0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
n1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
n2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
n3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
n4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
n5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
n6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
n7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
n8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
n9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
n10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
n11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
n12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
n13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
n14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
n15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m2_0 [cluster="Hangfire.Sample.Highlighter.Models.HighlighterDbContext.HighlighterDbContext()", file="ServerWatchdog.cs", label="Entry Hangfire.Sample.Highlighter.Models.HighlighterDbContext.HighlighterDbContext()", span="7-7"];
m2_1 [cluster="Hangfire.Sample.Highlighter.Models.HighlighterDbContext.HighlighterDbContext()", file="ServerWatchdog.cs", label="Exit Hangfire.Sample.Highlighter.Models.HighlighterDbContext.HighlighterDbContext()", span="7-7"];
m2_5 [cluster="Unk.>", file="ServerWatchdog.cs", label="Entry Unk.>", span=""];
m2_2 [cluster="Hangfire.Sample.Highlighter.Models.HighlighterDbContext.OnModelCreating(DbModelBuilder)", file="ServerWatchdog.cs", label="Entry Hangfire.Sample.Highlighter.Models.HighlighterDbContext.OnModelCreating(DbModelBuilder)", span="14-14"];
m2_3 [cluster="Hangfire.Sample.Highlighter.Models.HighlighterDbContext.OnModelCreating(DbModelBuilder)", file="ServerWatchdog.cs", label="modelBuilder.Conventions.Remove<PluralizingTableNameConvention>()", span="16-16"];
m2_4 [cluster="Hangfire.Sample.Highlighter.Models.HighlighterDbContext.OnModelCreating(DbModelBuilder)", file="ServerWatchdog.cs", label="Exit Hangfire.Sample.Highlighter.Models.HighlighterDbContext.OnModelCreating(DbModelBuilder)", span="14-14"];
m3_24 [cluster="Unk.>", file="SqlServerFetcher.cs", label="Entry Unk.>", span=""];
m3_6 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="string queueName = null", span="28-28"];
m3_29 [cluster="int.ToString()", file="SqlServerFetcher.cs", label="Entry int.ToString()", span="0-0"];
m3_27 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerFetcher.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m3_0 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerFetcher.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
m3_1 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerFetcher.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
m3_2 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="SqlServerFetcher.cs", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24"];
m3_3 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="SqlServerFetcher.cs", label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="26-26"];
m3_26 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerFetcher.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m3_25 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerFetcher.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_20 [cluster="Unk.Query", file="SqlServerFetcher.cs", label="Entry Unk.Query", span=""];
m3_22 [cluster="DynamicParameters.cstr", file="SqlServerFetcher.cs", label="Entry DynamicParameters.cstr", span=""];
m3_28 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="SqlServerFetcher.cs", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23"];
m3_21 [cluster="Unk.SingleOrDefault", file="SqlServerFetcher.cs", label="Entry Unk.SingleOrDefault", span=""];
m3_4 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="SqlServerFetcher.cs", label="return (other != null)\r\n                   && this.Equals(other);", span="27-28"];
m3_18 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs", label="return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", prediction=0, span="71-74"];
m3_5 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="SqlServerFetcher.cs", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24"];
m3_17 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="69-69"];
m3_12 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="queueName = idAndQueue.Queue", span="57-57"];
m3_11 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs", label="job = _connection.Query<Job>(\r\n                        @''select Id, InvocationData, Arguments from HangFire.Job where Id = @id'',\r\n                        parameters)\r\n                        .SingleOrDefault()", prediction=1, span="52-55"];
m3_7 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs", label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", prediction=2, span=""];
m3_8 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs", label="idAndQueue != null", prediction=3, span="42-42"];
m3_10 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs", label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", prediction=2, span="50-50"];
m3_9 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="SqlServerFetcher.cs", label="var parameters = new DynamicParameters()", prediction=5, span="49-49"];
m3_13 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="job == null", span="60-60"];
m3_16 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="job == null", span="67-67"];
m3_15 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="return null;", span="64-64"];
m3_14 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="62-62"];
m3_19 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="25-25"];
m3_23 [cluster="Unk.Add", file="SqlServerFetcher.cs", label="Entry Unk.Add", span=""];
m3_30 [file="SqlServerFetcher.cs", label="HangFire.SqlServer.SqlServerFetcher", span=""];
m5_6 [cluster="HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStoredJobs.SqlStoredJobs(SqlConnection)", span="15-15"];
m5_48 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", span="112-112"];
m5_49 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="114-116"];
m5_50 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", span="112-112"];
m5_23 [cluster="HangFire.SqlServer.SqlJobLock.SqlJobLock(string, SqlConnection)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlJobLock.SqlJobLock(string, SqlConnection)", span="28-28"];
m5_16 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m5_17 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="return new SqlServerFetcher(_connection, queueNames);", span="36-36"];
m5_18 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m5_19 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
m5_46 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4"];
m5_54 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="126-126"];
m5_55 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=1, file="SqlStorageConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) })", prediction=6, span="128-130"];
m5_56 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="126-126"];
m5_0 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="SqlStorageConnection.cs", label="Entry Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25"];
m5_1 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="SqlStorageConnection.cs", label="Filters = new GlobalJobFilterCollection()", span="27-27"];
m5_2 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="SqlStorageConnection.cs", label="Filters.Add(new CaptureCultureAttribute())", span="28-28"];
m5_3 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="SqlStorageConnection.cs", label="Filters.Add(new AutomaticRetryAttribute())", span="29-29"];
m5_4 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="SqlStorageConnection.cs", label="Filters.Add(new StatisticsHistoryAttribute())", span="30-30"];
m5_5 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="SqlStorageConnection.cs", label="Exit Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25"];
m5_15 [cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19"];
m5_51 [cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", span="119-119"];
m5_52 [cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="121-123"];
m5_53 [cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", span="119-119"];
m5_57 [cluster="System.TimeSpan.Negate()", file="SqlStorageConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m5_38 [cluster="Unk.>", file="SqlStorageConnection.cs", label="Entry Unk.>", span=""];
m5_7 [cluster="Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", file="SqlStorageConnection.cs", label="Entry Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", span="25-25"];
m5_9 [cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs", label="_connection.Dispose()", span="26-26"];
m5_40 [cluster="Unk.ToString", file="SqlStorageConnection.cs", label="Entry Unk.ToString", span=""];
m5_37 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlStorageConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m5_24 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="48-48"];
m5_26 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    state = ''Created'',\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="59-68"];
m5_33 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="88-88"];
m5_25 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (State, InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@state, @invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="54-57"];
m5_27 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="parameters.Count > 0", span="70-70"];
m5_31 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="76-81"];
m5_34 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="return jobId;", span="91-91"];
m5_28 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="var parameterArray = new object[parameters.Count]", span="72-72"];
m5_32 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="84-86"];
m5_30 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label=parameters, span="74-74"];
m5_29 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="int parameterIndex = 0", span="73-73"];
m5_35 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="48-48"];
m5_8 [cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.Dispose()", span="24-24"];
m5_42 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="94-94"];
m5_44 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="103-109"];
m5_43 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="96-101"];
m5_45 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="94-94"];
m5_10 [cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.Dispose()", span="24-24"];
m5_11 [cluster="Unk.Dispose", file="SqlStorageConnection.cs", label="Entry Unk.Dispose", span=""];
m5_36 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlStorageConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m5_39 [cluster="Unk.Single", file="SqlStorageConnection.cs", label="Entry Unk.Single", span=""];
m5_41 [cluster="Unk.Execute", file="SqlStorageConnection.cs", label="Entry Unk.Execute", span=""];
m5_20 [cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", span="39-39"];
m5_21 [cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs", label="return new SqlJobLock(jobId, _connection);", span="41-41"];
m5_22 [cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", span="39-39"];
m5_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlStorageConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m5_12 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", span="29-29"];
m5_13 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs", label="return new SqlWriteTransaction(_connection);", span="31-31"];
m5_14 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", span="29-29"];
m5_58 [file="SqlStorageConnection.cs", label="HangFire.SqlServer.SqlStorageConnection", span=""];
m6_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlWriteTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_5 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="SqlWriteTransaction.cs", label="Entry Hangfire.Client.CreatedContext.SetJobParameter(string, object)", span="70-70"];
m6_6 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="SqlWriteTransaction.cs", label="String.IsNullOrWhiteSpace(name)", span="72-72"];
m6_7 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="SqlWriteTransaction.cs", label="throw new ArgumentNullException(''name'');", span="72-72"];
m6_8 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="SqlWriteTransaction.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="74-74"];
m6_9 [cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="SqlWriteTransaction.cs", label="Exit Hangfire.Client.CreatedContext.SetJobParameter(string, object)", span="70-70"];
m6_10 [cluster="string.IsNullOrWhiteSpace(string)", file="SqlWriteTransaction.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m6_0 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="SqlWriteTransaction.cs", label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="29-29"];
m6_1 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="SqlWriteTransaction.cs", label="JobId = jobId", span="36-36"];
m6_2 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="SqlWriteTransaction.cs", label="Canceled = canceled", span="37-37"];
m6_3 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="SqlWriteTransaction.cs", label="Exception = exception", span="38-38"];
m6_4 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="SqlWriteTransaction.cs", label="Exit Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="29-29"];
m6_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlWriteTransaction.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m6_13 [file="SqlWriteTransaction.cs", label="Hangfire.Client.CreatedContext", span=""];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_4 -> m3_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_5 -> m3_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_5 -> m3_16  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_11 -> m3_13  [color=green, key=1, label=job, style=dashed];
m3_11 -> m3_16  [color=green, key=1, label=job, style=dashed];
m3_7 -> m3_10  [color=green, key=1, label=idAndQueue, style=dashed];
m3_7 -> m3_4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", style=dashed];
m3_14 -> m3_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m3_30 -> m3_7  [color=green, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m3_30 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m3_30 -> m3_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerFetcher", style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m5_24 -> m5_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m5_24 -> m5_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m5_26 -> m5_34  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_28 -> m5_33  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m5_58 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m5_58 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m5_58 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m5_58 -> m5_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m5_58 -> m5_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m5_58 -> m5_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m5_58 -> m5_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m5_58 -> m5_33  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
}
