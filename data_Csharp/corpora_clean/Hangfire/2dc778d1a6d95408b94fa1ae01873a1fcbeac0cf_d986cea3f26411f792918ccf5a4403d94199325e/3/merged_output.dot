digraph  {
m0_97 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m0_252 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ClientJobDescriptor.cs", label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="343-343"];
m0_253 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m0_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ClientJobDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_101 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m0_103 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="177-177"];
m0_104 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="178-180"];
m0_102 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="175-175"];
m0_105 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m0_235 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m0_237 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="322-322"];
m0_239 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="327-327"];
m0_240 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="328-328"];
m0_236 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="key == null", span="322-322"];
m0_238 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="324-325"];
m0_241 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m0_6 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m0_7 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="ClientJobDescriptor.cs", label="0: _storage.UseTransaction(connection =>\r\n            {\r\n                connection.EnlistTransaction(Transaction.Current);\r\n\r\n                if (_lockedResources.Count > 0)\r\n                {\r\n                    connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }));\r\n                }\r\n\r\n                foreach (var command in _commandQueue)\r\n                {\r\n                    command(connection);\r\n                }\r\n            })", span="46-62"];
m0_8 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m0_225 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m0_227 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="311-311"];
m0_229 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="316-316"];
m0_230 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="317-317"];
m0_226 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="key == null", span="311-311"];
m0_228 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="313-314"];
m0_231 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m0_65 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m0_66 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129"];
m0_67 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m0_59 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m0_250 [cluster="string.Format(string, params object[])", file="ClientJobDescriptor.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m0_77 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m0_78 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143"];
m0_79 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m0_45 [cluster="Hangfire.States.IState.SerializeData()", file="ClientJobDescriptor.cs", label="Entry Hangfire.States.IState.SerializeData()", span="202-202"];
m0_251 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m0_256 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ClientJobDescriptor.cs", label="_lockedResources.Add(resource)", span="353-353"];
m0_257 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m0_195 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m0_197 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="278-278"];
m0_199 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="283-283"];
m0_200 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="284-284"];
m0_196 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="key == null", span="278-278"];
m0_198 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="280-281"];
m0_201 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m0_60 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20"];
m0_141 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m0_254 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ClientJobDescriptor.cs", label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="348-348"];
m0_255 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m0_247 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m0_38 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m0_40 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="86-96"];
m0_39 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="81-84"];
m0_41 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m0_205 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m0_207 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="289-289"];
m0_209 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="294-294"];
m0_210 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="295-295"];
m0_206 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="key == null", span="289-289"];
m0_208 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="291-292"];
m0_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m0_47 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m0_49 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="105-114"];
m0_48 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="101-103"];
m0_50 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m0_83 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m0_84 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150"];
m0_85 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m0_175 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m0_177 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m0_179 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="261-261"];
m0_180 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="262-262"];
m0_176 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="key == null", span="257-257"];
m0_178 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="259-259"];
m0_181 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m0_89 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m0_90 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ClientJobDescriptor.cs", label="AddToSet(key, value, 0.0)", span="155-155"];
m0_91 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m0_27 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m0_245 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientJobDescriptor.cs", label="_commandQueue.Enqueue(action)", span="333-333"];
m0_246 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m0_54 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m0_55 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="var provider = _storage.QueueProviders.GetProvider(queue)", span="119-119"];
m0_57 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => persistentQueue.Enqueue(x, queue, jobId))", span="122-122"];
m0_56 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="var persistentQueue = provider.GetJobQueue()", span="120-120"];
m0_58 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m0_9 [cluster="Unk.UseTransaction", file="ClientJobDescriptor.cs", label="Entry Unk.UseTransaction", span=""];
m0_17 [cluster="Unk.EnlistTransaction", file="ClientJobDescriptor.cs", label="Entry Unk.EnlistTransaction", span=""];
m0_20 [cluster="System.Action<T>.Invoke(T)", file="ClientJobDescriptor.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_132 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m0_134 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="216-216"];
m0_136 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="217-217"];
m0_138 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="226-226"];
m0_139 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="227-229"];
m0_133 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="key == null", span="216-216"];
m0_135 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="keyValuePairs == null", span="217-217"];
m0_137 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="219-224"];
m0_140 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m0_71 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m0_72 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136"];
m0_73 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m0_149 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m0_151 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="234-234"];
m0_153 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="238-238"];
m0_154 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key }))", span="239-239"];
m0_150 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="key == null", span="234-234"];
m0_152 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="236-236"];
m0_155 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m0_92 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m0_94 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="167-167"];
m0_95 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="168-170"];
m0_93 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165"];
m0_96 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m0_64 [cluster="Unk.Enqueue", file="ClientJobDescriptor.cs", label="Entry Unk.Enqueue", span=""];
m0_31 [cluster="System.DateTime.Add(System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m0_32 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m0_33 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76"];
m0_34 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m0_0 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m0_1 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="ClientJobDescriptor.cs", label="1: storage == null", span="39-39"];
m0_2 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="ClientJobDescriptor.cs", label="0: throw new ArgumentNullException(''storage'');", span="39-39"];
m0_3 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ClientJobDescriptor.cs", label="_storage = storage", span="41-41"];
m0_4 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m0_185 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m0_187 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="267-267"];
m0_189 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="272-272"];
m0_190 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="273-273"];
m0_186 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="key == null", span="267-267"];
m0_188 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="269-270"];
m0_191 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m0_46 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m0_24 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m0_25 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69"];
m0_26 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m0_172 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="252-252"];
m0_10 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="46-62"];
m0_11 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="1: connection.EnlistTransaction(Transaction.Current)", span="48-48"];
m0_12 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="_lockedResources.Count > 0", span="50-50"];
m0_13 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="0: connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="52-55"];
m0_14 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="1: _commandQueue", span="58-58"];
m0_21 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="55-55"];
m0_15 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="0: command(connection)", span="60-60"];
m0_16 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="46-62"];
m0_22 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="0: new { resource = x }", span="55-55"];
m0_23 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="55-55"];
m0_144 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="227-229"];
m0_169 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="252-252"];
m0_29 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69"];
m0_36 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76"];
m0_43 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="86-96"];
m0_52 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="105-114"];
m0_69 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129"];
m0_75 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136"];
m0_81 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143"];
m0_87 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150"];
m0_99 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="168-170"];
m0_107 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                query,\r\n                new { key, value })", span="178-180"];
m0_115 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="186-188"];
m0_122 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="194-196"];
m0_130 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="209-211"];
m0_157 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key })", span="239-239"];
m0_183 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="262-262"];
m0_193 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="273-273"];
m0_203 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="284-284"];
m0_213 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="295-295"];
m0_223 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="306-306"];
m0_233 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="317-317"];
m0_243 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="328-328"];
m0_28 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="67-69"];
m0_35 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="74-76"];
m0_42 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="86-96"];
m0_51 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="105-114"];
m0_61 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="122-122"];
m0_68 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="127-129"];
m0_74 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="134-136"];
m0_80 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="141-143"];
m0_86 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="148-150"];
m0_98 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="168-170"];
m0_106 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="178-180"];
m0_114 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="186-188"];
m0_121 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="194-196"];
m0_129 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="209-211"];
m0_143 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="227-229"];
m0_156 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="239-239"];
m0_168 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="252-252"];
m0_182 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="262-262"];
m0_192 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="273-273"];
m0_202 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="284-284"];
m0_212 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="295-295"];
m0_222 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="306-306"];
m0_232 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="317-317"];
m0_242 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="328-328"];
m0_145 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="227-229"];
m0_146 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="229-229"];
m0_170 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="252-252"];
m0_30 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="67-69"];
m0_37 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="74-76"];
m0_44 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="86-96"];
m0_53 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="105-114"];
m0_70 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="127-129"];
m0_76 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="134-136"];
m0_82 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="141-143"];
m0_88 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="148-150"];
m0_100 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="168-170"];
m0_108 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="178-180"];
m0_116 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="186-188"];
m0_123 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="194-196"];
m0_131 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="209-211"];
m0_158 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="239-239"];
m0_184 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="262-262"];
m0_194 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="273-273"];
m0_204 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="284-284"];
m0_214 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="295-295"];
m0_224 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="306-306"];
m0_234 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="317-317"];
m0_244 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="328-328"];
m0_62 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="persistentQueue.Enqueue(x, queue, jobId)", span="122-122"];
m0_63 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="122-122"];
m0_147 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="new { key = key, field = y.Key, value = y.Value }", span="229-229"];
m0_173 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="new { key = key, value = value }", span="252-252"];
m0_148 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="229-229"];
m0_174 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="252-252"];
m0_159 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m0_161 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="244-244"];
m0_163 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''items'');", span="245-245"];
m0_165 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="251-251"];
m0_166 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="252-252"];
m0_160 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="key == null", span="244-244"];
m0_162 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="items == null", span="245-245"];
m0_164 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="247-249"];
m0_167 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m0_18 [cluster="Unk.Select", file="ClientJobDescriptor.cs", label="Entry Unk.Select", span=""];
m0_258 [cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0"];
m0_171 [cluster="Unk.ToList", file="ClientJobDescriptor.cs", label="Entry Unk.ToList", span=""];
m0_19 [cluster="Unk.Execute", file="ClientJobDescriptor.cs", label="Entry Unk.Execute", span=""];
m0_142 [cluster="Unk.QueueCommand", file="ClientJobDescriptor.cs", label="Entry Unk.QueueCommand", span=""];
m0_117 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m0_118 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="193-193"];
m0_119 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="194-196"];
m0_120 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m0_113 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m0_248 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ClientJobDescriptor.cs", label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="338-338"];
m0_249 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m0_215 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m0_217 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="300-300"];
m0_219 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="305-305"];
m0_220 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="306-306"];
m0_216 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="key == null", span="300-300"];
m0_218 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="302-303"];
m0_221 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m0_109 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m0_110 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="185-185"];
m0_111 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="186-188"];
m0_112 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m0_124 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m0_126 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="208-208"];
m0_127 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="209-211"];
m0_125 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="201-206"];
m0_128 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m0_259 [file="ClientJobDescriptor.cs", label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m0_293 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_294 [file="ClientJobDescriptor.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m0_295 [file="ClientJobDescriptor.cs", label=sql, span=""];
m0_298 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_299 [file="ClientJobDescriptor.cs", label="System.Collections.Generic.IList<string>", span=""];
m0_300 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_260 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_261 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_262 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_263 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_264 [file="ClientJobDescriptor.cs", label="Hangfire.States.IState", span=""];
m0_265 [file="ClientJobDescriptor.cs", label=addAndSetStateSql, span=""];
m0_266 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_267 [file="ClientJobDescriptor.cs", label="Hangfire.States.IState", span=""];
m0_268 [file="ClientJobDescriptor.cs", label=addStateSql, span=""];
m0_272 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_273 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_274 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_275 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_276 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_277 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_278 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_279 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_280 [file="ClientJobDescriptor.cs", label=double, span=""];
m0_281 [file="ClientJobDescriptor.cs", label=addSql, span=""];
m0_282 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_283 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_284 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_285 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_286 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_287 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_288 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_289 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_290 [file="ClientJobDescriptor.cs", label=int, span=""];
m0_291 [file="ClientJobDescriptor.cs", label=int, span=""];
m0_292 [file="ClientJobDescriptor.cs", label=trimSql, span=""];
m0_296 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_297 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_301 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_302 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_303 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_304 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_305 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_306 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_307 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_308 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_309 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_310 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_311 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_312 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_313 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_314 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_315 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_316 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_317 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_269 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_270 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_271 [file="ClientJobDescriptor.cs", label=persistentQueue, span=""];
m2_60 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m2_27 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95"];
m2_59 [cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64"];
m2_26 [cluster="string.Format(string, object, object)", file="DequeuedJobsWatcher.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_32 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="77-77"];
m2_33 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext)", span="79-79"];
m2_34 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext.Items)", span="80-80"];
m2_35 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="82-83"];
m2_38 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="89-89"];
m2_41 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Assert.AreEqual(\r\n                        parameter.Value,\r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="97-99"];
m2_43 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="filterContext.ExceptionHandled = true", span="105-105"];
m2_36 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="_setOnPostMethodParameters != null", span="85-85"];
m2_37 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label=_setOnPostMethodParameters, span="87-87"];
m2_39 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="_readParameters != null", span="93-93"];
m2_40 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label=_readParameters, span="95-95"];
m2_42 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label=_handlesException, span="103-103"];
m2_44 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="77-77"];
m2_29 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128"];
m2_30 [cluster="Unk.AreEqual", file="DequeuedJobsWatcher.cs", label="Entry Unk.AreEqual", span=""];
m2_31 [cluster="System.Exception.Exception()", file="DequeuedJobsWatcher.cs", label="Entry System.Exception.Exception()", span="0-0"];
m2_0 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="21-21"];
m2_1 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_name = name", span="31-31"];
m2_2 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_results = results", span="32-32"];
m2_3 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_throwException = throwException", span="33-33"];
m2_4 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_cancelsTheCreation = cancelsTheCreation", span="34-34"];
m2_5 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_handlesException = handlesException", span="35-35"];
m2_6 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_setOnPreMethodParameters = setOnPreMethodParameters", span="36-36"];
m2_7 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_readParameters = readParameters", span="37-37"];
m2_8 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_setOnPostMethodParameters = setOnPostMethodParameters", span="38-38"];
m2_9 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="21-21"];
m2_45 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", span="109-109"];
m2_46 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="2: Assert.IsNotNull(filterContext)", span="111-111"];
m2_48 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="filterContext.Canceled = true", span="115-115"];
m2_52 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="2: filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="124-124"];
m2_55 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="Assert.AreEqual(\r\n                        parameter.Value,\r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="132-134"];
m2_47 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="2: _cancelsTheCreation", span="113-113"];
m2_49 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="0: _results.Add(String.Format(''{0}::{1}'', _name, ''OnPerforming''))", span="118-118"];
m2_50 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="0: _setOnPreMethodParameters != null", span="120-120"];
m2_51 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="0: _setOnPreMethodParameters", span="122-122"];
m2_53 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="_readParameters != null", span="128-128"];
m2_54 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label=_readParameters, span="130-130"];
m2_56 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label=_throwException, span="138-138"];
m2_57 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="throw new Exception();", span="140-140"];
m2_58 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", span="109-109"];
m2_61 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", span="144-144"];
m2_62 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext)", span="146-146"];
m2_63 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnPerformed'')\r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="148-149"];
m2_65 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="filterContext.ExceptionHandled = true", span="153-153"];
m2_64 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label=_handlesException, span="151-151"];
m2_66 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", span="144-144"];
m2_25 [cluster="Unk.IsNotNull", file="DequeuedJobsWatcher.cs", label="Entry Unk.IsNotNull", span=""];
m2_10 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="41-41"];
m2_11 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext)", span="43-43"];
m2_12 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext.Items)", span="44-44"];
m2_14 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="filterContext.Canceled = true", span="48-48"];
m2_18 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="57-57"];
m2_21 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Assert.AreEqual(\r\n                        parameter.Value, \r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="65-67"];
m2_13 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_cancelsTheCreation, span="46-46"];
m2_15 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="51-51"];
m2_16 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="_setOnPreMethodParameters != null", span="53-53"];
m2_17 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_setOnPreMethodParameters, span="55-55"];
m2_19 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="_readParameters != null", span="61-61"];
m2_20 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_readParameters, span="63-63"];
m2_22 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_throwException, span="71-71"];
m2_23 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="throw new Exception();", span="73-73"];
m2_24 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="41-41"];
m2_67 [file="DequeuedJobsWatcher.cs", label="HangFire.Tests.TestFilter", span=""];
m3_6 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m3_7 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="DictionaryAssert.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreBackgroundJobPerformer(null))", span="28-30"];
m3_8 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="DictionaryAssert.cs", label="0: Assert.Equal(''activator'', exception.ParamName)", span="32-32"];
m3_9 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m3_190 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m3_191 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227"];
m3_192 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228"];
m3_193 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="229-229"];
m3_194 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => performer.Perform(_context.Object))", span="232-233"];
m3_195 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m3_90 [cluster="System.DateTime.ToString(string)", file="DictionaryAssert.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_77 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="DictionaryAssert.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m3_53 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254"];
m3_219 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="256-256"];
m3_220 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254"];
m3_11 [cluster="Unk.Equal", file="DictionaryAssert.cs", label="Entry Unk.Equal", span=""];
m3_101 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294"];
m3_240 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="Assert.Equal(SomeDateTime, argument)", span="298-298"];
m3_239 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="_methodInvoked = true", span="296-296"];
m3_241 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294"];
m3_157 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144"];
m3_24 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319"];
m3_251 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="DictionaryAssert.cs", label="return new CoreBackgroundJobPerformer(_activator.Object);", span="321-321"];
m3_252 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319"];
m3_0 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19"];
m3_1 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", color=green, community=0, file="DictionaryAssert.cs", label="1: _activator = new Mock<JobActivator>() { CallBase = true }", span="21-21"];
m3_2 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", color=green, community=0, file="DictionaryAssert.cs", label="0: _context = new PerformContextMock()", span="22-22"];
m3_3 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19"];
m3_38 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="286-286"];
m3_91 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m3_93 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132"];
m3_94 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="133-133"];
m3_95 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="136-136"];
m3_96 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="139-139"];
m3_92 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="131-131"];
m3_97 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m3_78 [cluster="System.Type.GetMethod(string)", file="DictionaryAssert.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m3_79 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m3_207 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m3_208 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239"];
m3_209 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="240-240"];
m3_210 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="var result = performer.Perform(_context.Object)", span="242-242"];
m3_211 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="Assert.Equal(''Return value'', result)", span="244-244"];
m3_212 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m3_120 [cluster="System.InvalidOperationException.InvalidOperationException()", file="DictionaryAssert.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m3_186 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314"];
m3_248 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="DictionaryAssert.cs", label="throw new InvalidOperationException(''exception'');", span="316-316"];
m3_249 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314"];
m3_10 [cluster="Unk.>", file="DictionaryAssert.cs", label="Entry Unk.>", span=""];
m3_102 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m3_104 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147"];
m3_105 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="149-149"];
m3_106 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="151-151"];
m3_107 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="154-154"];
m3_103 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="146-146"];
m3_108 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m3_203 [cluster="Unk.ThrowIfCancellationRequested", file="DictionaryAssert.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m3_54 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m3_56 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76"];
m3_57 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="77-77"];
m3_58 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="80-80"];
m3_59 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="83-83"];
m3_55 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="75-75"];
m3_60 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m3_15 [cluster="Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", file="DictionaryAssert.cs", label="Entry Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", span="35-35"];
m3_64 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306"];
m3_245 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Assert.Equal(''hello'', stringArg)", span="310-310"];
m3_246 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Assert.Equal(5, intArg)", span="311-311"];
m3_244 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="_methodInvoked = true", span="308-308"];
m3_247 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306"];
m3_250 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DictionaryAssert.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_65 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m3_71 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="97-97"];
m3_72 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="98-98"];
m3_73 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="101-101"];
m3_74 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="104-104"];
m3_68 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92"];
m3_69 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="94-94"];
m3_70 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95"];
m3_67 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var typeConverter = TypeDescriptor.GetConverter(typeof(DateTime))", span="91-91"];
m3_66 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="90-90"];
m3_75 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m3_76 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="DictionaryAssert.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m3_25 [cluster="Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="DictionaryAssert.cs", label="Entry Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="41-41"];
m3_158 [cluster="Unk.NotNull", file="DictionaryAssert.cs", label="Entry Unk.NotNull", span=""];
m3_162 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198"];
m3_164 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201"];
m3_165 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="202-202"];
m3_166 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="204-205"];
m3_167 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="207-207"];
m3_163 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="200-200"];
m3_168 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198"];
m3_16 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36"];
m3_17 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="2: _methodInvoked = false", span="38-38"];
m3_18 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="2: _context.BackgroundJob.Job = Job.FromExpression(() => StaticMethod())", span="39-39"];
m3_19 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="0: var performer = CreatePerformer()", span="40-40"];
m3_20 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="1: performer.Perform(_context.Object)", span="42-42"];
m3_21 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="0: Assert.True(_methodInvoked)", span="44-44"];
m3_22 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36"];
m3_121 [cluster="Unk.Setup", file="DictionaryAssert.cs", label="Entry Unk.Setup", span=""];
m3_113 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158"];
m3_115 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="162-162"];
m3_116 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="164-164"];
m3_117 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="165-165"];
m3_118 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="168-169"];
m3_114 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="var exception = new InvalidOperationException()", span="161-161"];
m3_119 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158"];
m3_122 [cluster="Unk.Throws", file="DictionaryAssert.cs", label="Entry Unk.Throws", span=""];
m3_235 [cluster="Unk.Null", file="DictionaryAssert.cs", label="Entry Unk.Null", span=""];
m3_149 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m3_152 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188"];
m3_153 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="189-189"];
m3_154 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="191-192"];
m3_150 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var type = typeof(JobFacts)", span="186-186"];
m3_151 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187"];
m3_155 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="Assert.NotNull(exception.InnerException)", span="194-194"];
m3_156 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m3_253 [cluster="CoreBackgroundJobPerformer.cstr", file="DictionaryAssert.cs", label="Entry CoreBackgroundJobPerformer.cstr", span=""];
m3_43 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m3_45 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63"];
m3_46 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="64-64"];
m3_47 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="66-66"];
m3_48 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="Assert.True(_disposed)", span="68-68"];
m3_44 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="_disposed = false", span="62-62"];
m3_49 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m3_133 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m3_134 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175"];
m3_135 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176"];
m3_136 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="177-177"];
m3_137 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="179-180"];
m3_138 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m3_213 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="239-239"];
m3_12 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="30-30"];
m3_13 [cluster="lambda expression", color=green, community=0, file="DictionaryAssert.cs", label="2: new CoreBackgroundJobPerformer(null)", span="30-30"];
m3_14 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="30-30"];
m3_27 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="39-39"];
m3_28 [cluster="lambda expression", color=green, community=0, file="DictionaryAssert.cs", label="0: StaticMethod()", span="39-39"];
m3_29 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="39-39"];
m3_62 [cluster="lambda expression", file="DictionaryAssert.cs", label="MethodWithArguments(''hello'', 5)", span="76-76"];
m3_99 [cluster="lambda expression", file="DictionaryAssert.cs", label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132"];
m3_128 [cluster="lambda expression", file="DictionaryAssert.cs", label="InstanceMethod()", span="164-164"];
m3_131 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="169-169"];
m3_144 [cluster="lambda expression", file="DictionaryAssert.cs", label="InstanceMethod()", span="176-176"];
m3_147 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="180-180"];
m3_160 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="192-192"];
m3_174 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="205-205"];
m3_188 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="217-217"];
m3_205 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="233-233"];
m3_124 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ActivateJob(It.IsAny<Type>())", span="162-162"];
m3_141 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ActivateJob(It.IsNotNull<Type>())", span="175-175"];
m3_39 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="51-51"];
m3_50 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="63-63"];
m3_61 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="76-76"];
m3_63 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="76-76"];
m3_98 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="132-132"];
m3_100 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="132-132"];
m3_109 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="147-147"];
m3_123 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="162-162"];
m3_127 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="164-164"];
m3_129 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="164-164"];
m3_130 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="169-169"];
m3_132 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="169-169"];
m3_140 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="175-175"];
m3_143 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="176-176"];
m3_145 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="176-176"];
m3_146 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="180-180"];
m3_148 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="180-180"];
m3_159 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="192-192"];
m3_161 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="192-192"];
m3_169 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="201-201"];
m3_173 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="205-205"];
m3_175 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="205-205"];
m3_183 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="213-213"];
m3_187 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="217-217"];
m3_189 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="217-217"];
m3_196 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="227-227"];
m3_200 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="228-228"];
m3_204 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="233-233"];
m3_206 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="233-233"];
m3_125 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="162-162"];
m3_142 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="175-175"];
m3_41 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="51-51"];
m3_40 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.InstanceMethod()", span="51-51"];
m3_52 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="63-63"];
m3_51 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.Method()", span="63-63"];
m3_110 [cluster="lambda expression", file="DictionaryAssert.cs", label="NullArgumentMethod(null)", span="147-147"];
m3_111 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="147-147"];
m3_171 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="201-201"];
m3_170 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.Method()", span="201-201"];
m3_185 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="213-213"];
m3_184 [cluster="lambda expression", file="DictionaryAssert.cs", label="ExceptionMethod()", span="213-213"];
m3_198 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="227-227"];
m3_197 [cluster="lambda expression", file="DictionaryAssert.cs", label="CancelableJob(JobCancellationToken.Null)", span="227-227"];
m3_202 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="228-228"];
m3_201 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ThrowIfCancellationRequested()", span="228-228"];
m3_214 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.FunctionReturningValue()", span="239-239"];
m3_215 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="239-239"];
m3_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571"];
m3_126 [cluster="Unk.ActivateJob", file="DictionaryAssert.cs", label="Entry Unk.ActivateJob", span=""];
m3_80 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m3_85 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117"];
m3_86 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="118-118"];
m3_87 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="121-121"];
m3_88 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="124-124"];
m3_82 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112"];
m3_83 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="114-114"];
m3_84 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115"];
m3_81 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="111-111"];
m3_89 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m3_4 [cluster="Mock<JobActivator>.cstr", file="DictionaryAssert.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m3_172 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267"];
m3_224 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="269-269"];
m3_225 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267"];
m3_238 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="DictionaryAssert.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m3_31 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m3_33 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<CoreBackgroundJobPerformerFacts>(x => x.InstanceMethod())", span="51-51"];
m3_34 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="52-52"];
m3_35 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="54-54"];
m3_36 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="56-56"];
m3_32 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="50-50"];
m3_37 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m3_26 [cluster="Unk.True", file="DictionaryAssert.cs", label="Entry Unk.True", span=""];
m3_176 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211"];
m3_177 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => ExceptionMethod())", span="213-213"];
m3_178 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="214-214"];
m3_179 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="216-217"];
m3_180 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219"];
m3_181 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220"];
m3_182 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211"];
m3_30 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301"];
m3_242 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="303-303"];
m3_243 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301"];
m3_139 [cluster="Unk.Returns", file="DictionaryAssert.cs", label="Entry Unk.Returns", span=""];
m3_112 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283"];
m3_232 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="_methodInvoked = true", span="285-285"];
m3_233 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="Assert.Null(argument)", span="286-286"];
m3_234 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283"];
m3_199 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m3_236 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="DictionaryAssert.cs", label="token.ThrowIfCancellationRequested()", span="291-291"];
m3_237 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m3_5 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m3_226 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272"];
m3_227 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="DictionaryAssert.cs", label="throw new InvalidOperationException();", span="274-274"];
m3_228 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272"];
m3_42 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247"];
m3_217 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="249-249"];
m3_218 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247"];
m3_23 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="232-232"];
m3_254 [file="DictionaryAssert.cs", label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", span=""];
m3_255 [file="DictionaryAssert.cs", label=performer, span=""];
m3_256 [file="DictionaryAssert.cs", label=performer, span=""];
m3_257 [file="DictionaryAssert.cs", label=performer, span=""];
m3_258 [file="DictionaryAssert.cs", label=performer, span=""];
m3_259 [file="DictionaryAssert.cs", label=performer, span=""];
m3_260 [file="DictionaryAssert.cs", label=performer, span=""];
m4_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnqueuedState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_24 [cluster="Unk.EnqueueItemOnList", file="EnqueuedState.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m4_8 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Apply(IRedisTransaction)", span="29-29"];
m4_9 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="transaction == null", span="31-31"];
m4_11 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="transaction.QueueCommand(x => x.AddItemToSet(''hangfire:queues'', Queue))", span="33-33"];
m4_12 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", color=green, community=0, file="EnqueuedState.cs", label="1: transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), JobId))", span="34-35"];
m4_10 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="throw new ArgumentNullException(''transaction'');", span="31-31"];
m4_13 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Apply(IRedisTransaction)", span="29-29"];
m4_23 [cluster="string.Format(string, object)", file="EnqueuedState.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_0 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m4_1 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="EnqueuedState.cs", label="Queue = queue", span="13-13"];
m4_2 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m4_15 [cluster="Unk.QueueCommand", file="EnqueuedState.cs", label="Entry Unk.QueueCommand", span=""];
m4_3 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.GetProperties()", span="20-20"];
m4_4 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="EnqueuedState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', Queue }\r\n                };", span="22-26"];
m4_5 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.GetProperties()", span="20-20"];
m4_19 [cluster="Unk.AddItemToSet", file="EnqueuedState.cs", label="Entry Unk.AddItemToSet", span=""];
m4_20 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="34-35"];
m4_16 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="33-33"];
m4_17 [cluster="lambda expression", file="EnqueuedState.cs", label="x.AddItemToSet(''hangfire:queues'', Queue)", span="33-33"];
m4_18 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="33-33"];
m4_21 [cluster="lambda expression", color=green, community=0, file="EnqueuedState.cs", label="0: x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), JobId)", span="34-35"];
m4_22 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="34-35"];
m4_7 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m4_25 [file="EnqueuedState.cs", label="HangFire.States.EnqueuedState", span=""];
m5_14 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46"];
m5_15 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Enqueued state''))", span="48-49"];
m5_16 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(null)", span="51-51"];
m5_17 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46"];
m5_57 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129"];
m5_58 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should enqueue the job to the given queue'', ((string[])(null)))", span="131-131"];
m5_59 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="133-133"];
m5_60 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.FeatureBackground()", span="135-135"];
m5_61 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137"];
m5_62 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.Then(''the \'test\' queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139"];
m5_63 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.And(''the \'test\' queue was added to the queues set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141"];
m5_64 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.ScenarioCleanup()", span="143-143"];
m5_65 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129"];
m5_25 [cluster="Unk.OnScenarioStart", file="EnqueuedState.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m5_29 [cluster="Unk.CollectScenarioErrors", file="EnqueuedState.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m5_21 [cluster="Unk.OnScenarioEnd", file="EnqueuedState.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m5_26 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66"];
m5_27 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.CollectScenarioErrors()", span="68-68"];
m5_28 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66"];
m5_9 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39"];
m5_10 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.OnFeatureEnd()", span="41-41"];
m5_11 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner = null", span="42-42"];
m5_12 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39"];
m5_35 [cluster="Unk.And", file="EnqueuedState.feature.cs", label="Entry Unk.And", span=""];
m5_67 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150"];
m5_68 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should not remove the job from the queue'', ((string[])(null)))", span="152-152"];
m5_69 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.ScenarioSetup(scenarioInfo)", span="154-154"];
m5_70 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.FeatureBackground()", span="156-156"];
m5_71 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158"];
m5_72 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160"];
m5_73 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.Then(''the \'test\' queue still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162"];
m5_74 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.ScenarioCleanup()", span="164-164"];
m5_75 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150"];
m5_5 [cluster="Unk.GetTestRunner", file="EnqueuedState.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m5_36 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85"];
m5_37 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name is \'Enqueued\''', ((string[])(null)))", span="87-87"];
m5_38 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="89-89"];
m5_39 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.FeatureBackground()", span="91-91"];
m5_40 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.Then(''the state name is equal to \'Enqueued\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m5_41 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.ScenarioCleanup()", span="95-95"];
m5_42 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85"];
m5_45 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102"];
m5_46 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It has the correct properties set'', ((string[])(null)))", span="104-104"];
m5_47 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="106-106"];
m5_48 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.FeatureBackground()", span="108-108"];
m5_49 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=1, file="EnqueuedState.feature.cs", label="0: TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112"];
m5_50 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=1, file="EnqueuedState.feature.cs", label="0: table1.AddRow(new string[] {\r\n                        ''EnqueuedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115"];
m5_51 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=1, file="EnqueuedState.feature.cs", label="1: table1.AddRow(new string[] {\r\n                        ''Queue'',\r\n                        ''test''})", span="116-118"];
m5_52 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.Then(''properties table contains the following items:'', ((string)(null)), table1, ''Then '')", span="120-120"];
m5_53 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: this.ScenarioCleanup()", span="122-122"];
m5_54 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102"];
m5_13 [cluster="Unk.OnFeatureEnd", file="EnqueuedState.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m5_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="EnqueuedState.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m5_66 [cluster="Unk.When", file="EnqueuedState.feature.cs", label="Entry Unk.When", span=""];
m5_56 [cluster="Unk.AddRow", file="EnqueuedState.feature.cs", label="Entry Unk.AddRow", span=""];
m5_18 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56"];
m5_19 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.OnScenarioEnd()", span="58-58"];
m5_20 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56"];
m5_22 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m5_23 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m5_24 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m5_43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="EnqueuedState.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m5_44 [cluster="Unk.Then", file="EnqueuedState.feature.cs", label="Entry Unk.Then", span=""];
m5_34 [cluster="Unk.Given", file="EnqueuedState.feature.cs", label="Entry Unk.Given", span=""];
m5_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="EnqueuedState.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m5_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="EnqueuedState.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m5_30 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71"];
m5_31 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m5_32 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.And(''the Enqueued state with the \'test\' value for the \'queue\' argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m5_33 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71"];
m5_8 [cluster="Unk.OnFeatureStart", file="EnqueuedState.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m5_0 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m5_1 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m5_2 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=1, file="EnqueuedState.feature.cs", label="1: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Enqueued state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m5_3 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m5_4 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m5_76 [file="EnqueuedState.feature.cs", label="HangFire.Tests.States.EnqueuedStateFeature", span=""];
m6_3 [cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs", label="Entry HangFire.States.FailedState.GetProperties()", span="20-20"];
m6_4 [cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', Exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', Exception.Message },\r\n                    { ''ExceptionDetails'', Exception.ToString() }\r\n                };", span="22-28"];
m6_5 [cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs", label="Exit HangFire.States.FailedState.GetProperties()", span="20-20"];
m6_20 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m6_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_10 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="Entry HangFire.States.FailedState.Apply(IRedisTransaction)", span="31-31"];
m6_13 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", color=green, community=0, file="FailedState.cs", label="0: transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        JobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow)))", span="35-38"];
m6_11 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="transaction == null", span="33-33"];
m6_12 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="throw new ArgumentNullException(''transaction'');", span="33-33"];
m6_14 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="Exit HangFire.States.FailedState.Apply(IRedisTransaction)", span="31-31"];
m6_9 [cluster="System.Exception.ToString()", file="FailedState.cs", label="Entry System.Exception.ToString()", span="0-0"];
m6_16 [cluster="Unk.QueueCommand", file="FailedState.cs", label="Entry Unk.QueueCommand", span=""];
m6_21 [cluster="Unk.AddItemToSortedSet", file="FailedState.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m6_0 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m6_1 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs", label="Exception = exception", span="13-13"];
m6_2 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs", label="Exit HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m6_8 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m6_27 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="47-47"];
m6_17 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="35-38"];
m6_18 [cluster="lambda expression", color=green, community=0, file="FailedState.cs", label="2: x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        JobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow))", span="35-38"];
m6_19 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="35-38"];
m6_28 [cluster="lambda expression", file="FailedState.cs", label="x.RemoveItemFromSortedSet(''hangfire:failed'', jobId)", span="47-47"];
m6_29 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="47-47"];
m6_22 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="Entry HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", span="43-43"];
m6_25 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:failed'', jobId))", span="47-47"];
m6_23 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="transaction == null", span="45-45"];
m6_24 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="throw new ArgumentNullException(''transaction'');", span="45-45"];
m6_26 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="Exit HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", span="43-43"];
m6_7 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m6_30 [cluster="Unk.RemoveItemFromSortedSet", file="FailedState.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m6_31 [file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m6_32 [file="FailedState.cs", label=string, span=""];
m7_12 [cluster="System.Collections.Generic.List<T>.List()", file="FailedState.feature.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_36 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m7_37 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _components))", span="52-53"];
m7_38 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="FailedState.feature.cs", label="1: Assert.Equal(''storage'', exception.ParamName)", span="55-55"];
m7_39 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m7_63 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m7_64 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="80-80"];
m7_65 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="0: server.Execute(_cts.Token)", span="82-82"];
m7_66 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="0: _storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="84-84"];
m7_67 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="0: _connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="85-85"];
m7_68 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m7_19 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32"];
m7_20 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null, _context, _storage.Object, _components))", span="34-35"];
m7_21 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="FailedState.feature.cs", label="1: Assert.Equal(''serverId'', exception.ParamName)", span="37-37"];
m7_22 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32"];
m7_24 [cluster="Unk.Equal", file="FailedState.feature.cs", label="Entry Unk.Equal", span=""];
m7_0 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m7_1 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="0: _context = new ServerContext()", span="22-22"];
m7_2 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="1: _storage = new Mock<JobStorage>()", span="23-23"];
m7_3 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="0: _connection = new Mock<IStorageConnection>()", span="24-24"];
m7_4 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="1: _cts = new CancellationTokenSource()", span="25-25"];
m7_5 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="0: _components = new List<IServerComponent>()", span="26-26"];
m7_6 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="1: _storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="28-28"];
m7_7 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m7_77 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m7_78 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="1: var component1 = CreateComponentMock()", span="92-92"];
m7_79 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="0: component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(100))", span="93-93"];
m7_83 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="1: component1.Verify(x => x.Execute(_cts.Token))", span="102-102"];
m7_80 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="1: var component2 = CreateComponentMock()", span="95-95"];
m7_82 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="0: server.Execute(_cts.Token)", span="99-99"];
m7_84 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="0: component2.Verify(x => x.Execute(_cts.Token))", span="103-103"];
m7_81 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="96-96"];
m7_85 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m7_95 [cluster="System.Threading.Thread.Sleep(int)", file="FailedState.feature.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_23 [cluster="Unk.>", file="FailedState.feature.cs", label="Entry Unk.>", span=""];
m7_57 [cluster="Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="FailedState.feature.cs", label="Entry Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="53-53"];
m7_56 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m7_111 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=green, community=0, file="FailedState.feature.cs", label="0: return new ServerBootstrapper(ServerId, _context, _storage.Object, _components);", span="118-118"];
m7_112 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m7_18 [cluster="Unk.GetConnection", file="FailedState.feature.cs", label="Entry Unk.GetConnection", span=""];
m7_86 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m7_113 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="FailedState.feature.cs", label="1: var mock = new Mock<IServerComponent>()", span="123-123"];
m7_114 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="FailedState.feature.cs", label="1: _components.Add(mock.Object)", span="124-124"];
m7_115 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="FailedState.feature.cs", label="2: return mock;", span="126-126"];
m7_116 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m7_118 [cluster="Unk.Add", file="FailedState.feature.cs", label="Entry Unk.Add", span=""];
m7_8 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="FailedState.feature.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m7_102 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m7_103 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="109-109"];
m7_104 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="FailedState.feature.cs", label="0: server.Execute(_cts.Token)", span="111-111"];
m7_105 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="FailedState.feature.cs", label="0: _connection.Verify(x => x.RemoveServer(ServerId))", span="113-113"];
m7_106 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m7_29 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m7_30 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _components))", span="43-44"];
m7_31 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: Assert.Equal(''context'', exception.ParamName)", span="46-46"];
m7_32 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m7_13 [cluster="Unk.Setup", file="FailedState.feature.cs", label="Entry Unk.Setup", span=""];
m7_76 [cluster="Unk.Dispose", file="FailedState.feature.cs", label="Entry Unk.Dispose", span=""];
m7_51 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m7_52 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="70-70"];
m7_53 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="FailedState.feature.cs", label="0: server.Execute(_cts.Token)", span="72-72"];
m7_54 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="FailedState.feature.cs", label="0: _connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="74-74"];
m7_55 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m7_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="FailedState.feature.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m7_28 [cluster="ServerBootstrapper.cstr", file="FailedState.feature.cs", label="Entry ServerBootstrapper.cstr", span=""];
m7_117 [cluster="Mock<IServerComponent>.cstr", file="FailedState.feature.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m7_44 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m7_45 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="61-62"];
m7_46 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=green, community=0, file="FailedState.feature.cs", label="1: Assert.Equal(''components'', exception.ParamName)", span="64-64"];
m7_47 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m7_107 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="113-113"];
m7_15 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="28-28"];
m7_16 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: x.GetConnection()", span="28-28"];
m7_17 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="28-28"];
m7_25 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="35-35"];
m7_26 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: new ServerBootstrapper(null, _context, _storage.Object, _components)", span="35-35"];
m7_27 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="35-35"];
m7_33 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="44-44"];
m7_34 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: new ServerBootstrapper(ServerId, null, _storage.Object, _components)", span="44-44"];
m7_35 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="44-44"];
m7_40 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="53-53"];
m7_41 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: new ServerBootstrapper(ServerId, _context, null, _components)", span="53-53"];
m7_42 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="53-53"];
m7_48 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="62-62"];
m7_49 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="62-62"];
m7_50 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="62-62"];
m7_59 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="74-74"];
m7_60 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.AnnounceServer(ServerId, _context)", span="74-74"];
m7_61 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="74-74"];
m7_70 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="84-84"];
m7_73 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="85-85"];
m7_71 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.GetConnection()", span="84-84"];
m7_72 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="84-84"];
m7_74 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.Dispose()", span="85-85"];
m7_75 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="85-85"];
m7_88 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="93-93"];
m7_92 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="93-93"];
m7_96 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="102-102"];
m7_99 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="103-103"];
m7_89 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.Execute(It.IsAny<CancellationToken>())", span="93-93"];
m7_90 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="93-93"];
m7_93 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: Thread.Sleep(100)", span="93-93"];
m7_94 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="93-93"];
m7_97 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.Execute(_cts.Token)", span="102-102"];
m7_98 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="102-102"];
m7_100 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.Execute(_cts.Token)", span="103-103"];
m7_101 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="103-103"];
m7_108 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.RemoveServer(ServerId)", span="113-113"];
m7_109 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="113-113"];
m7_62 [cluster="Unk.AnnounceServer", file="FailedState.feature.cs", label="Entry Unk.AnnounceServer", span=""];
m7_69 [cluster="Unk.Exactly", file="FailedState.feature.cs", label="Entry Unk.Exactly", span=""];
m7_58 [cluster="Unk.Verify", file="FailedState.feature.cs", label="Entry Unk.Verify", span=""];
m7_43 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", file="FailedState.feature.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", span="36-36"];
m7_110 [cluster="Unk.RemoveServer", file="FailedState.feature.cs", label="Entry Unk.RemoveServer", span=""];
m7_91 [cluster="Unk.Execute", file="FailedState.feature.cs", label="Entry Unk.Execute", span=""];
m7_87 [cluster="Unk.Callback", file="FailedState.feature.cs", label="Entry Unk.Callback", span=""];
m7_14 [cluster="Unk.Returns", file="FailedState.feature.cs", label="Entry Unk.Returns", span=""];
m7_10 [cluster="Mock<IStorageConnection>.cstr", file="FailedState.feature.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_9 [cluster="Mock<JobStorage>.cstr", file="FailedState.feature.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m7_119 [file="FailedState.feature.cs", label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m8_20 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HistoryStatisticsFilter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_29 [cluster="Unk.IncrementValue", file="HistoryStatisticsFilter.cs", label="Entry Unk.IncrementValue", span=""];
m8_25 [cluster="Unk.Commit", file="HistoryStatisticsFilter.cs", label="Entry Unk.Commit", span=""];
m8_23 [cluster="System.DateTime.ToString(string)", file="HistoryStatisticsFilter.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_24 [cluster="string.Format(string, object)", file="HistoryStatisticsFilter.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_22 [cluster="Unk.QueueCommand", file="HistoryStatisticsFilter.cs", label="Entry Unk.QueueCommand", span=""];
m8_37 [cluster="Unk.ExpireEntryIn", file="HistoryStatisticsFilter.cs", label="Entry Unk.ExpireEntryIn", span=""];
m8_16 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1)))", span="38-38"];
m8_0 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m8_1 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="redis == null", span="10-10"];
m8_3 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="state == null", span="11-11"];
m8_5 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="var transaction = redis.CreateTransaction()", span="13-13"];
m8_6 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="state.StateName == SucceededState.Name", span="15-15"];
m8_11 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="state.StateName == FailedState.Name", span="26-26"];
m8_18 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="return state;", span="44-44"];
m8_2 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="throw new ArgumentNullException(''redis'');", span="10-10"];
m8_4 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="throw new ArgumentNullException(''state'');", span="11-11"];
m8_7 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="17-18"];
m8_9 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(hourlySucceededKey))", span="23-23"];
m8_10 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1)))", span="24-24"];
m8_12 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="28-29"];
m8_13 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm''))))", span="31-32"];
m8_15 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(hourlyFailedKey))", span="37-37"];
m8_17 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.Commit()", span="41-41"];
m8_8 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="var hourlySucceededKey = String.Format(\r\n                        ''hangfire:stats:succeeded:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="20-22"];
m8_14 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="var hourlyFailedKey = String.Format(\r\n                        ''hangfire:stats:failed:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="34-36"];
m8_19 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m8_36 [cluster="System.TimeSpan.FromDays(double)", file="HistoryStatisticsFilter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m8_33 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="24-24"];
m8_26 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="17-18"];
m8_31 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(hourlySucceededKey)", span="23-23"];
m8_34 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1))", span="24-24"];
m8_30 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="23-23"];
m8_38 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="28-29"];
m8_41 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="31-32"];
m8_45 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(hourlyFailedKey)", span="37-37"];
m8_48 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1))", span="38-38"];
m8_44 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="37-37"];
m8_47 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="38-38"];
m8_27 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="17-18"];
m8_28 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="17-18"];
m8_32 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="23-23"];
m8_35 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="24-24"];
m8_39 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="28-29"];
m8_40 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="28-29"];
m8_42 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm'')))", span="31-32"];
m8_43 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="31-32"];
m8_46 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="37-37"];
m8_49 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="38-38"];
m8_21 [cluster="Unk.CreateTransaction", file="HistoryStatisticsFilter.cs", label="Entry Unk.CreateTransaction", span=""];
m8_50 [file="HistoryStatisticsFilter.cs", label=hourlySucceededKey, span=""];
m8_51 [file="HistoryStatisticsFilter.cs", label=hourlyFailedKey, span=""];
m9_2 [cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IStateAppliedFilter.cs", label="Entry HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m9_3 [cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IStateAppliedFilter.cs", label="Exit HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m9_0 [cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IStateAppliedFilter.cs", label="Entry HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m9_1 [cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IStateAppliedFilter.cs", label="Exit HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m10_0 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IStateChangedFilter.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m10_1 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IStateChangedFilter.cs", label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m11_17 [cluster="Mock<IJobCreationProcess>.cstr", file="JobClient.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m11_16 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.Async(System.Type, object)", span="17-17"];
m11_18 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobClient.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m11_96 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m11_97 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="102-102"];
m11_98 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="104-105"];
m11_99 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="Assert.Equal(''job'', exception.ParamName)", span="107-107"];
m11_100 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m11_23 [cluster="Unk.GetConnection", file="JobClient.cs", label="Entry Unk.GetConnection", span=""];
m11_20 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="24-24"];
m11_56 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="92-92"];
m11_58 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", color=green, community=0, file="JobClient.cs", label="0: Exit HangFire.Client.JobClient.CreateJob(System.Type, object)", span="86-86"];
m11_57 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="return job;", span="94-94"];
m11_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_136 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m11_137 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="148-148"];
m11_138 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151"];
m11_139 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="153-153"];
m11_140 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m11_46 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="49-49"];
m11_22 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="24-24"];
m11_63 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="0: Exit lambda expression", span="67-67"];
m11_64 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39"];
m11_49 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m11_50 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", color=green, community=0, file="JobClient.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58"];
m11_51 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="JobClient.cs", label="Assert.Equal(''process'', exception.ParamName)", span="60-60"];
m11_37 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="1: var jobId = GenerateId()", span="68-68"];
m11_77 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m11_78 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=green, community=0, file="JobClient.cs", label="0: CreateClient()", span="86-86"];
m11_79 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=green, community=0, file="JobClient.cs", label="1: _storage.Verify(x => x.GetConnection())", span="87-87"];
m11_80 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m11_11 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var state = new EnqueuedState(jobId, ''Enqueued by the Сlient'', queue)", span="34-34"];
m11_61 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="67-67"];
m11_60 [cluster="Unk.DoesNotThrow", file="JobClient.cs", label="Entry Unk.DoesNotThrow", span=""];
m11_62 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="0: new BackgroundJobClient()", span="67-67"];
m11_122 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m11_123 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="var client = CreateClient()", span="134-134"];
m11_124 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136"];
m11_125 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139"];
m11_127 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142"];
m11_126 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Assert.NotNull(exception.InnerException)", span="141-141"];
m11_128 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m11_145 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m11_146 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="159-159"];
m11_147 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162"];
m11_148 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Assert.Equal(''state'', exception.ParamName)", span="164-164"];
m11_149 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m11_112 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81"];
m11_154 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m11_155 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="var client = CreateClient()", span="170-170"];
m11_156 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="172-172"];
m11_157 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177"];
m11_158 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m11_121 [cluster="Unk.Run", file="JobClient.cs", label="Entry Unk.Run", span=""];
m11_36 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="0: return Async(jobType, args);", span="65-65"];
m11_26 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="29-29"];
m11_104 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m11_105 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="113-113"];
m11_106 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="115-116"];
m11_107 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Assert.Equal(''state'', exception.ParamName)", span="118-118"];
m11_108 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m11_21 [cluster="lambda expression", file="JobClient.cs", label="x.GetConnection()", span="24-24"];
m11_45 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m11_163 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m11_164 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="var client = CreateClient()", span="183-183"];
m11_165 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="185-185"];
m11_166 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="187-190"];
m11_167 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m11_91 [cluster="HangFire.BackgroundJobClient.Dispose()", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113"];
m11_4 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="0: _stateMachine = new Mock<IStateMachine>()", span="26-26"];
m11_5 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="JobClient.cs", label="2: _stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m11_7 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="0: _process = new Mock<IJobCreationProcess>()", span="31-31"];
m11_8 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="2: _state = new Mock<IState>()", span="32-32"];
m11_9 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="0: _job = Job.FromExpression(() => Method())", span="33-33"];
m11_12 [cluster="Mock<JobStorage>.cstr", color=red, community=0, file="JobClient.cs", label="1: Entry Mock<JobStorage>.cstr", span=""];
m11_6 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="0: _stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29"];
m11_10 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="JobClient.cs", label="1: Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m11_13 [cluster="Unk.Setup", color=red, community=2, file="JobClient.cs", label="2: Entry Unk.Setup", span=""];
m11_15 [cluster="Mock<IStateMachine>.cstr", color=red, community=0, file="JobClient.cs", label="0: Entry Mock<IStateMachine>.cstr", span=""];
m11_14 [cluster="Unk.Returns", color=red, community=0, file="JobClient.cs", label="1: Entry Unk.Returns", span=""];
m11_171 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m11_172 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="196-197"];
m11_173 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="var client = CreateClient()", span="198-198"];
m11_174 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="200-200"];
m11_175 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="Assert.True(result)", span="202-202"];
m11_176 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m11_0 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m11_1 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="JobClient.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m11_2 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="1: _storage = new Mock<JobStorage>()", span="23-23"];
m11_66 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", color=green, community=0, file="JobClient.cs", label="0: Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73"];
m11_144 [cluster="Unk.ChangeState", file="JobClient.cs", label="Entry Unk.ChangeState", span=""];
m11_48 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="49-49"];
m11_3 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="JobClient.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24"];
m11_86 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m11_87 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=green, community=0, file="JobClient.cs", label="1: var client = CreateClient()", span="93-93"];
m11_88 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=green, community=0, file="JobClient.cs", label="0: client.Dispose()", span="94-94"];
m11_89 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=green, community=0, file="JobClient.cs", label="1: _connection.Verify(x => x.Dispose())", span="96-96"];
m11_90 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m11_129 [cluster="Unk.NotNull", file="JobClient.cs", label="Entry Unk.NotNull", span=""];
m11_28 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="33-33"];
m11_29 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="0: Method()", span="33-33"];
m11_31 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m11_32 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m11_33 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="JobClient.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40"];
m11_39 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="1: new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40"];
m11_30 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="0: Exit lambda expression", span="33-33"];
m11_34 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="JobClient.cs", label="0: Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m11_35 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="JobClient.cs", label="0: Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m11_38 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="1: Entry lambda expression", span="40-40"];
m11_40 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="0: Exit lambda expression", span="40-40"];
m11_42 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m11_41 [cluster="BackgroundJobClient.cstr", file="JobClient.cs", label="Entry BackgroundJobClient.cstr", span=""];
m11_43 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49"];
m11_52 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m11_27 [cluster="Unk.Create", file="JobClient.cs", label="Entry Unk.Create", span=""];
m11_65 [cluster="System.Guid.NewGuid()", file="JobClient.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m11_67 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="JobClient.cs", label="HangFire.Client.JobClient", span=""];
m11_81 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m11_182 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="JobClient.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211"];
m11_183 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m11_24 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="29-29"];
m11_53 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="58-58"];
m11_54 [cluster="lambda expression", file="JobClient.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58"];
m11_55 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="2: Exit lambda expression", span="58-58"];
m11_44 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51"];
m11_71 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m11_72 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", color=green, community=0, file="JobClient.cs", label="0: Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80"];
m11_73 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m11_153 [cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="100-100"];
m11_162 [cluster="Unk.TryToChangeState", file="JobClient.cs", label="Entry Unk.TryToChangeState", span=""];
m11_150 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="162-162"];
m11_25 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", color=green, community=0, file="JobClient.cs", label="1: Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m11_68 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="73-73"];
m11_69 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="0: new BackgroundJobClient(_storage.Object)", span="73-73"];
m11_70 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="73-73"];
m11_74 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="80-80"];
m11_75 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="1: new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80"];
m11_76 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="80-80"];
m11_83 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="87-87"];
m11_84 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="0: x.GetConnection()", span="87-87"];
m11_85 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="87-87"];
m11_92 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="96-96"];
m11_93 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="2: x.Dispose()", span="96-96"];
m11_94 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="96-96"];
m11_47 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="JobClient.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m11_102 [cluster="lambda expression", file="JobClient.cs", label="client.Create(null, _state.Object)", span="105-105"];
m11_110 [cluster="lambda expression", file="JobClient.cs", label="client.Create(_job, null)", span="116-116"];
m11_134 [cluster="lambda expression", file="JobClient.cs", label="client.Create(_job, _state.Object)", span="139-139"];
m11_142 [cluster="lambda expression", file="JobClient.cs", label="client.ChangeState(null, _state.Object, null)", span="151-151"];
m11_160 [cluster="lambda expression", file="JobClient.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="174-177"];
m11_169 [cluster="lambda expression", file="JobClient.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="187-190"];
m11_179 [cluster="lambda expression", file="JobClient.cs", label="x.TryToChangeState(''job-id'', _state.Object, null)", span="196-196"];
m11_119 [cluster="lambda expression", file="JobClient.cs", label="x.Run(It.IsNotNull<CreateContext>())", span="128-128"];
m11_131 [cluster="lambda expression", file="JobClient.cs", label="x.Run(It.IsAny<CreateContext>())", span="135-135"];
m11_101 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="105-105"];
m11_103 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="105-105"];
m11_109 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="116-116"];
m11_111 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="116-116"];
m11_118 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="128-128"];
m11_130 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="135-135"];
m11_133 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="139-139"];
m11_135 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="139-139"];
m11_141 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="151-151"];
m11_143 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="151-151"];
m11_151 [cluster="lambda expression", file="JobClient.cs", label="client.ChangeState(''jobId'', null, null)", span="162-162"];
m11_159 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="174-177"];
m11_161 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="174-177"];
m11_168 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="187-190"];
m11_170 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="187-190"];
m11_178 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="196-196"];
m11_180 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="196-196"];
m11_120 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="128-128"];
m11_132 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="135-135"];
m11_152 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="162-162"];
m11_19 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobClient.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m11_181 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m11_113 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m11_114 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="var client = CreateClient()", span="124-124"];
m11_115 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="client.Create(_job, _state.Object)", span="126-126"];
m11_116 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128"];
m11_117 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m11_177 [cluster="Unk.True", file="JobClient.cs", label="Entry Unk.True", span=""];
m11_82 [cluster="Unk.Verify", file="JobClient.cs", label="Entry Unk.Verify", span=""];
m11_184 [file="JobClient.cs", label="HangFire.Core.Tests.BackgroundJobClientFacts", span=""];
m11_185 [file="JobClient.cs", label=client, span=""];
m11_186 [file="JobClient.cs", label=client, span=""];
m11_187 [file="JobClient.cs", label=client, span=""];
m11_188 [file="JobClient.cs", label=client, span=""];
m11_189 [file="JobClient.cs", label=client, span=""];
m12_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobCreator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_23 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="109-109"];
m12_64 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filters.Reverse()", span="112-112"];
m12_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filter.OnClientException(context)", span="114-114"];
m12_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="109-109"];
m12_63 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m12_22 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m12_44 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="69-69"];
m12_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreating(preContext)", span="74-74"];
m12_46 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="preContext.Canceled", span="75-75"];
m12_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="77-78"];
m12_50 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = continuation()", span="85-85"];
m12_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="90-91"];
m12_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="93-93"];
m12_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="103-103"];
m12_48 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="var wasError = false", span="81-81"];
m12_49 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="CreatedContext postContext", span="82-82"];
m12_51 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label=Exception, span="87-87"];
m12_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!wasError", span="101-101"];
m12_52 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="wasError = true", span="89-89"];
m12_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!postContext.ExceptionHandled", span="95-95"];
m12_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return postContext;", span="106-106"];
m12_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="throw;", span="97-97"];
m12_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="69-69"];
m12_67 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m12_13 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m12_14 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="CreateWithFilters(context, context.JobDescriptor, _clientFilters)", span="37-37"];
m12_16 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="41-41"];
m12_15 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label=Exception, span="39-39"];
m12_17 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="InvokeExceptionFilters(exceptionContext, _clientExceptionFilters)", span="43-43"];
m12_18 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="!exceptionContext.ExceptionHandled", span="44-44"];
m12_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="throw;", span="46-46"];
m12_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m12_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m12_32 [cluster="Unk.thunk", file="JobCreator.cs", label="Entry Unk.thunk", span=""];
m12_29 [cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6"];
m12_38 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m12_37 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="JobCreator.cs", label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="28-28"];
m12_3 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m12_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientFilters == null", span="26-26"];
m12_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientExceptionFilters == null", span="27-27"];
m12_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientFilters = clientFilters", span="29-29"];
m12_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientExceptionFilters = clientExceptionFilters", span="30-30"];
m12_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientFilters'');", span="26-26"];
m12_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="27-27"];
m12_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m12_4 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobCreator.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m12_41 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="64-64"];
m12_34 [cluster="lambda expression", color=red, community=0, file="JobCreator.cs", label="1: jobDescriptor.Enqueue()", span="59-59"];
m12_35 [cluster="lambda expression", file="JobCreator.cs", label="return new CreatedContext(createContext, false, null);", span="60-60"];
m12_42 [cluster="lambda expression", file="JobCreator.cs", label="InvokeClientFilter(filter, preContext, next)", span="64-64"];
m12_39 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="64-64"];
m12_33 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="57-61"];
m12_36 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="57-61"];
m12_40 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="64-64"];
m12_43 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="64-64"];
m12_61 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m12_31 [cluster="Unk.Aggregate", file="JobCreator.cs", label="Entry Unk.Aggregate", span=""];
m12_62 [cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m12_21 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="51-51"];
m12_24 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var preContext = new CreatingContext(createContext)", span="56-56"];
m12_25 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", color=red, community=0, file="JobCreator.cs", label="2: Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Enqueue();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="57-61"];
m12_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="63-64"];
m12_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="thunk()", span="66-66"];
m12_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="51-51"];
m12_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m12_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Current = new JobCreator(\r\n                GlobalJobFilters.Filters.OfType<IClientFilter>(),\r\n                GlobalJobFilters.Filters.OfType<IClientExceptionFilter>())", span="14-16"];
m12_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m12_68 [file="JobCreator.cs", label="HangFire.Client.JobCreator", span=""];
m12_69 [file="JobCreator.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m12_70 [file="JobCreator.cs", label="HangFire.Client.CreateContext", span=""];
m12_71 [file="JobCreator.cs", label=preContext, span=""];
m12_72 [file="JobCreator.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m12_73 [file="JobCreator.cs", label="HangFire.Filters.IClientFilter", span=""];
m14_46 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="71-71"];
m14_47 [cluster="Unk.IsNull", file="JobFetcherSteps.cs", label="Entry Unk.IsNull", span=""];
m14_48 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="77-77"];
m14_49 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label=_queues, span="79-79"];
m14_35 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="50-50"];
m14_39 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=green, community=0, file="JobFetcherSteps.cs", label="2: Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59"];
m14_40 [cluster="Unk.AreEqual", file="JobFetcherSteps.cs", label="Entry Unk.AreEqual", span=""];
m14_20 [cluster="Unk.Select", file="JobFetcherSteps.cs", label="Entry Unk.Select", span=""];
m14_21 [cluster="Unk.ToList", color=green, community=0, file="JobFetcherSteps.cs", label="0: Entry Unk.ToList", span=""];
m14_22 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="40-40"];
m14_44 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="JobFetcherSteps.cs", label="_server.Dispose()", span="95-95"];
m14_45 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", color=red, community=0, file="JobFetcherSteps.cs", label="0: Exit HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="92-92"];
m14_29 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="JobFetcherSteps.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m14_30 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="50-50"];
m14_31 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="var i = 0", span="52-52"];
m14_50 [cluster="Unk.GetAllItemsFromList", file="JobFetcherSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m14_51 [cluster="Unk.Contains", file="JobFetcherSteps.cs", label="Entry Unk.Contains", span=""];
m14_76 [cluster="Unk.GetAllEntriesFromHash", file="JobFetcherSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m14_5 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="24-24"];
m14_6 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="_fetcher = new JobFetcher(RedisFactory.BasicManager, queue, TimeSpan.FromSeconds(1))", span="26-26"];
m14_7 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="24-24"];
m14_8 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="JobFetcherSteps.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m14_9 [cluster="System.TimeSpan.FromSeconds(double)", file="JobFetcherSteps.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m14_66 [cluster="Unk.IsTrue", file="JobFetcherSteps.cs", label="Entry Unk.IsTrue", span=""];
m14_88 [cluster="Unk.ContainsKey", file="JobFetcherSteps.cs", label="Entry Unk.ContainsKey", span=""];
m14_27 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="44-44"];
m14_15 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="i++", span="34-34"];
m14_3 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="_server = null", span="24-24"];
m14_36 [cluster="Unk.When", file="JobFetcherSteps.cs", label="Entry Unk.When", span=""];
m14_37 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59"];
m14_38 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="61-61"];
m14_10 [cluster="Unk.Given", file="JobFetcherSteps.cs", label="Entry Unk.Given", span=""];
m14_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m14_16 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m14_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="38-38"];
m14_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Given(''the job was dequeued'')", span="39-39"];
m14_14 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m14_17 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="JobFetcherSteps.cs", label="Given(''a job'')", span="45-45"];
m14_60 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m14_61 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", span="127-127"];
m14_62 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="128-128"];
m14_63 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m14_52 [cluster="Unk.Then", file="JobFetcherSteps.cs", label="Entry Unk.Then", span=""];
m14_53 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="JobFetcherSteps.cs", label="HangFire.Tests.JobFetcherSteps", span=""];
m14_54 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="110-110"];
m14_78 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m14_79 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="var registeredQueues = Redis.Client.GetAllItemsFromList(String.Format(''hangfire:server:{0}:queues'', name))", span="148-148"];
m14_80 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(2, registeredQueues.Count)", span="150-150"];
m14_81 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(queue1, registeredQueues[0])", span="151-151"];
m14_82 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(queue2, registeredQueues[1])", span="152-152"];
m14_83 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m14_41 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="65-65"];
m14_0 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m14_1 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="_server != null", span="21-21"];
m14_2 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="_server.Dispose()", span="23-23"];
m14_84 [cluster="Unk.AreEqual", file="JobFetcherSteps.cs", label="Entry Unk.AreEqual", span=""];
m14_71 [cluster="Unk.IsFalse", file="JobFetcherSteps.cs", label="Entry Unk.IsFalse", span=""];
m14_64 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="JobFetcherSteps.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m14_42 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(jobId, _payload.Id)", span="67-67"];
m14_43 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="65-65"];
m14_18 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="JobFetcherSteps.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="46-46"];
m14_55 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m14_56 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="118-119"];
m14_57 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="CollectionAssert.DoesNotContain(jobIds, jobId)", span="121-121"];
m14_58 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m14_4 [cluster="Unk.Given", file="JobFetcherSteps.cs", label="Entry Unk.Given", span=""];
m14_28 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobFetcherSteps.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m14_19 [cluster="Unk.Format", file="JobFetcherSteps.cs", label="Entry Unk.Format", span=""];
m14_72 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m14_73 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="var properties = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:server:{0}'', name))", span="141-141"];
m14_74 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, properties)", span="142-142"];
m14_75 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m14_25 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=green, community=0, file="JobFetcherSteps.cs", label="0: Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="59-61"];
m14_26 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=red, community=0, file="JobFetcherSteps.cs", label="1: Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m14_23 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m14_24 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=green, community=0, file="JobFetcherSteps.cs", label="0: Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="58-58"];
m14_65 [cluster="Unk.SetContainsItem", file="JobFetcherSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m14_91 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m14_90 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="JobFetcherSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}:queues'', name)))", span="164-164"];
m14_89 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m14_32 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m14_34 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m14_33 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="JobFetcherSteps.cs", label="CreateServer(name, workers, new [] { ''critical'' })", span="73-73"];
m14_59 [cluster="Unk.DoesNotContain", file="JobFetcherSteps.cs", label="Entry Unk.DoesNotContain", span=""];
m14_87 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m14_86 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="JobFetcherSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="158-158"];
m14_85 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m14_77 [cluster="Unk.ContainsFollowingItems", file="JobFetcherSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m14_67 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m14_68 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", span="134-134"];
m14_69 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="135-135"];
m14_70 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m14_92 [file="JobFetcherSteps.cs", label="HangFire.Tests.ServerSteps", span=""];
m16_64 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobSteps.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m16_58 [cluster="Unk.TryParse", file="JobSteps.cs", label="Entry Unk.TryParse", span=""];
m16_56 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobSteps.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m16_63 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="JobSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m16_59 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobSteps.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m16_57 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m16_65 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="JobSteps.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m16_67 [cluster="Unk.Write", file="JobSteps.cs", label="Entry Unk.Write", span=""];
m16_62 [cluster="HttpRequestBase.LinkTo(string)", file="JobSteps.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m16_61 [cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="JobSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m16_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="JobSteps.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m16_71 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobSteps.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m16_0 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m16_1 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\r\n'')", span="57-57"];
m16_2 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Layout = new LayoutPage { Title = ''Deleted Jobs'' }", span="69-69"];
m16_3 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="int from, perPage", span="71-71"];
m16_4 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="73-73"];
m16_5 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="74-74"];
m16_9 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="pager = new Pager(from, perPage, monitor.DeletedListCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/deleted'')\r\n        }", span="81-84"];
m16_6 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Pager pager", span="76-76"];
m16_7 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="JobList<DeletedJobDto> jobs", span="77-77"];
m16_8 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="79-79"];
m16_10 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="jobs = monitor.DeletedJobs(pager.FromRecord, pager.RecordsPerPage)", span="86-86"];
m16_12 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="pager.TotalPageCount == 0", span="98-98"];
m16_17 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="135-135"];
m16_54 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(RenderPartial(new Paginator(pager)))", span="381-381"];
m16_11 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\r\n'')", span="93-93"];
m16_19 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label=jobs, span="159-159"];
m16_13 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No deleted jobs found.\r\n    </div>\r\n'')", span="104-104"];
m16_14 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="116-118"];
m16_15 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(Request.LinkTo(''/deleted/requeue''))", span="123-123"];
m16_16 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\''\r\n                    data-loading-text=\''Enqueueing...\''>\r\n                <span '' +\r\n''class=\''glyphicon glyphicon-repeat\''></span>\r\n                Requeue jobs\r\n      '' +\r\n''      </button>\r\n            '')", span="128-130"];
m16_18 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(@''\r\n        </div>\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Deleted</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="140-154"];
m16_20 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="165-165"];
m16_53 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="370-370"];
m16_21 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="170-170"];
m16_22 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral('' '')", span="175-175"];
m16_23 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="180-180"];
m16_24 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="185-185"];
m16_25 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="job.Value != null && job.Value.InDeletedState", span="190-190"];
m16_26 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="196-197"];
m16_29 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <a href=\'''')", span="217-218"];
m16_27 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(job.Key)", span="202-202"];
m16_30 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="223-223"];
m16_28 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\'' />\r\n'')", span="207-207"];
m16_31 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\''>\r\n                                '')", span="228-228"];
m16_32 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(HtmlHelper.JobId(job.Key))", span="233-233"];
m16_33 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="238-238"];
m16_34 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="job.Value != null && !job.Value.InDeletedState", span="243-243"];
m16_35 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="249-250"];
m16_36 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                        </td>\r\n\r\n'')", span="260-260"];
m16_37 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="job.Value == null", span="265-265"];
m16_38 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                            <td colspan=\''2\''>\r\n                                <em'' +\r\n''>Job was expired.</em>\r\n                            </td>\r\n'')", span="271-272"];
m16_39 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                            <td>\r\n                                <a class=\''job-m'' +\r\n''ethod\'' href=\'''')", span="284-285"];
m16_40 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="290-290"];
m16_41 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="295-295"];
m16_42 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="300-300"];
m16_43 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\r\n                                </a>\r\n                            </td>\r\n'')", span="305-305"];
m16_45 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="job.Value.DeletedAt.HasValue", span="314-314"];
m16_44 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                            <td class=\''align-right\''>\r\n'')", span="309-309"];
m16_46 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                                    <span data-moment=\'''')", span="320-320"];
m16_51 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                            </td>\r\n'')", span="350-350"];
m16_47 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.DeletedAt.Value))", span="325-325"];
m16_48 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\''>\r\n                                        '')", span="330-330"];
m16_49 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Write(job.Value.DeletedAt)", span="335-335"];
m16_50 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\r\n                                    </span>\r\n'')", span="340-340"];
m16_52 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''                    </tr>\r\n'')", span="360-360"];
m16_55 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Exit HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m16_66 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="JobSteps.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m16_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m16_60 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="JobSteps.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m16_68 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobSteps.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m16_72 [file="JobSteps.cs", label="HangFire.Web.Pages.DeletedJobsPage", span=""];
m18_18 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="Perform.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="29-29"];
m18_19 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", color=red, community=0, file="Perform.cs", label="2: var options = CreateOptions()", span="31-31"];
m18_20 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="Perform.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = 0)", span="33-34"];
m18_6 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="Perform.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m18_11 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", color=green, community=0, file="Perform.cs", label="2: var options = CreateOptions()", span="22-22"];
m18_10 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="Perform.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", span="20-20"];
m18_12 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="Perform.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => options.ServerName = null)", span="24-25"];
m18_8 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="return Async(jobType, null);", span="24-24"];
m18_7 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type)", span="22-22"];
m18_46 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="Perform.cs", label="return new BackgroundJobServerOptions();", span="66-66"];
m18_47 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="Perform.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="64-64"];
m18_0 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="Perform.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m18_1 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="Perform.cs", label="var options = CreateOptions()", span="11-11"];
m18_2 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="Perform.cs", label="Assert.Equal(Environment.ProcessorCount * 5, options.WorkerCount)", span="13-13"];
m18_14 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="Perform.cs", label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="17-17"];
m18_3 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="Perform.cs", label="Assert.Equal(Environment.MachineName, options.ServerName)", span="14-14"];
m18_4 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="Perform.cs", label="Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="15-15"];
m18_5 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="Perform.cs", label="Assert.True(options.ShutdownTimeout > TimeSpan.Zero)", span="16-16"];
m18_22 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="34-34"];
m18_23 [cluster="lambda expression", file="Perform.cs", label="options.WorkerCount = 0", span="34-34"];
m18_24 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="34-34"];
m18_21 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="Perform.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="29-29"];
m18_25 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="Perform.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="38-38"];
m18_26 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="Perform.cs", label="var options = CreateOptions()", span="40-40"];
m18_27 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="Perform.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = -1)", span="42-43"];
m18_13 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="Perform.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", span="20-20"];
m18_15 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="25-25"];
m18_16 [cluster="lambda expression", color=green, community=0, file="Perform.cs", label="2: options.ServerName = null", span="25-25"];
m18_17 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="25-25"];
m18_28 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="Perform.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="38-38"];
m18_32 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="Perform.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="47-47"];
m18_33 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="Perform.cs", label="var options = CreateOptions()", span="49-49"];
m18_34 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="Perform.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => options.Queues = null)", span="51-52"];
m18_35 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="Perform.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="47-47"];
m18_9 [cluster="Unk.True", file="Perform.cs", label="Entry Unk.True", span=""];
m18_43 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="61-61"];
m18_30 [cluster="lambda expression", file="Perform.cs", label="options.WorkerCount = -1", span="43-43"];
m18_29 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="43-43"];
m18_31 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="43-43"];
m18_37 [cluster="lambda expression", file="Perform.cs", label="options.Queues = null", span="52-52"];
m18_36 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="52-52"];
m18_38 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="52-52"];
m18_44 [cluster="lambda expression", file="Perform.cs", label="options.Queues = new string[0]", span="61-61"];
m18_45 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="61-61"];
m18_39 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="Perform.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="56-56"];
m18_40 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", color=red, community=0, file="Perform.cs", label="2: var options = CreateOptions()", span="58-58"];
m18_41 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="Perform.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="60-61"];
m18_42 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="Perform.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="56-56"];
m18_48 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="Perform.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m18_49 [file="Perform.cs", label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", span=""];
m18_50 [file="Perform.cs", label=options, span=""];
m18_51 [file="Perform.cs", label=options, span=""];
m18_52 [file="Perform.cs", label=options, span=""];
m18_53 [file="Perform.cs", label=options, span=""];
m18_54 [file="Perform.cs", label=options, span=""];
m19_84 [cluster="HangFire.Web.RazorPage.Write(object)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m19_33 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''\'' />\r\n'')", span="249-249"];
m19_92 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m19_18 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="146-153"];
m19_44 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="job.Value.FailedAt.HasValue", span="317-317"];
m19_8 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78"];
m19_17 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Write(Request.LinkTo(''/failed/delete''))", span="141-141"];
m19_0 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25"];
m19_1 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_innerFetcher = innerFetcher", span="27-27"];
m19_2 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_count = count", span="28-28"];
m19_3 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_prefetchThread = new Thread(Prefetch)\r\n                {\r\n                    Name = String.Format(''HangFire.Prefetch.{0}'', ''queue''),\r\n                    IsBackground = true\r\n                }", span="30-34"];
m19_4 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_prefetchThread.Start()", span="35-35"];
m19_5 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25"];
m19_9 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48"];
m19_6 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m19_7 [cluster="string.Format(string, object)", file="PrefetchJobFetcher.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_10 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="var payload = _items.Take(cancellationToken)", span="50-50"];
m19_12 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="_items.Count == 0", span="54-54"];
m19_19 [cluster="System.Threading.Monitor.Pulse(object)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Monitor.Pulse(object)", span="0-0"];
m19_74 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Write(RenderPartial(new Paginator(pager)))", span="506-506"];
m19_11 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label=_items, span="52-52"];
m19_22 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts.Cancel()", span="69-69"];
m19_13 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="_jobIsReady.Reset()", span="56-56"];
m19_14 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Monitor.Pulse(_items)", span="59-59"];
m19_15 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="return payload;", span="62-62"];
m19_16 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48"];
m19_20 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65"];
m19_21 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts != null", span="67-67"];
m19_62 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m19_23 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label=_items, span="71-71"];
m19_73 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="494-494"];
m19_24 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="Monitor.Pulse(_items)", span="73-73"];
m19_25 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_prefetchThread.Join()", span="76-76"];
m19_26 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="RequeuePrefetched()", span="78-78"];
m19_27 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_innerFetcher.Dispose()", span="80-80"];
m19_28 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_jobIsReady.Dispose()", span="82-82"];
m19_29 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts.Dispose()", span="83-83"];
m19_30 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts = null", span="84-84"];
m19_31 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65"];
m19_34 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88"];
m19_32 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m19_35 [cluster="HangFire.Server.JobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.Dispose()", span="81-81"];
m19_36 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m19_37 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m19_38 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", color=green, community=0, file="PrefetchJobFetcher.cs", label="2: _items", span="92-92"];
m19_39 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", color=green, community=0, file="PrefetchJobFetcher.cs", label="0: JobState.Apply(\r\n                        _innerFetcher.Redis,\r\n                        new EnqueuedState(payload.Id, ''Re-queue prefetched job.'', _innerFetcher.Queue))", span="94-96"];
m19_40 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="JobFetcher.RemoveFromFetchedQueue(_innerFetcher.Redis, payload.Id, _innerFetcher.Queue)", span="98-98"];
m19_41 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label=Exception, span="101-101"];
m19_42 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="_logger.Error(''An exception occured while trying to re-queue prefetched jobs. Some prefetched jobs may remain in the dequeue list.'', ex)", span="103-103"];
m19_43 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88"];
m19_45 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="PrefetchJobFetcher.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m19_50 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=_items, span="113-113"];
m19_46 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m19_51 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_items.Count >= _count && !_cts.Token.IsCancellationRequested", span="115-115"];
m19_47 [cluster="Unk.Error", file="PrefetchJobFetcher.cs", label="Entry Unk.Error", span=""];
m19_48 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Prefetch()", span="107-107"];
m19_49 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=true, span="111-111"];
m19_52 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Monitor.Wait(_items)", span="117-117"];
m19_53 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="var payload = _innerFetcher.DequeueJob(_cts.Token)", span="121-121"];
m19_54 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=_items, span="123-123"];
m19_55 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_items.Add(payload)", span="125-125"];
m19_56 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_jobIsReady.Set()", span="127-127"];
m19_59 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_logger.Fatal(''Unexpected exception caught. Jobs will not be fetched.'', ex)", span="136-136"];
m19_57 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=OperationCanceledException, span="131-131"];
m19_60 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Prefetch()", span="107-107"];
m19_58 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=Exception, span="134-134"];
m19_61 [cluster="System.Threading.Monitor.Wait(object)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Monitor.Wait(object)", span="0-0"];
m19_64 [cluster="System.Threading.ManualResetEventSlim.Set()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m19_63 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m19_65 [cluster="Unk.Fatal", file="PrefetchJobFetcher.cs", label="Entry Unk.Fatal", span=""];
m19_66 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="HangFire.Server.PrefetchJobFetcher", span=""];
m19_67 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''\r\n                                    </p>\r\n\r\n'')", span="451-451"];
m19_68 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="456-456"];
m19_69 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''                                        <pre class=\''stack-trace\''>'')", span="462-462"];
m19_72 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''                                </div>\r\n                            </td>\r\n      '' +\r\n''                  </tr>\r\n'')", span="482-483"];
m19_70 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="467-467"];
m19_71 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''</pre>\r\n'')", span="472-472"];
m19_75 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52"];
m19_83 [cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35"];
m19_80 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m19_78 [cluster="Unk.TryParse", file="PrefetchJobFetcher.cs", label="Entry Unk.TryParse", span=""];
m19_76 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m19_86 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m19_91 [cluster="string.IsNullOrEmpty(string)", file="PrefetchJobFetcher.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m19_81 [cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41"];
m19_85 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m19_89 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m19_87 [cluster="Unk.Write", file="PrefetchJobFetcher.cs", label="Entry Unk.Write", span=""];
m19_88 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m19_79 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="PrefetchJobFetcher.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m19_77 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m19_82 [cluster="HttpRequestBase.LinkTo(string)", file="PrefetchJobFetcher.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m19_90 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m19_93 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m19_94 [file="PrefetchJobFetcher.cs", label="HangFire.Web.Pages.FailedJobsPage", span=""];
m20_26 [cluster="string.Split(params char[])", file="ProcessingState.cs", label="Entry string.Split(params char[])", span="0-0"];
m20_20 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="ProcessingState.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m20_0 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m20_1 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ProcessingState.cs", label="0: expected", span="11-11"];
m20_4 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="Assert.True(actual.ContainsKey(name))", span="16-16"];
m20_6 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="var timestamp = JobHelper.FromStringTimestamp(actual[name])", span="19-19"];
m20_9 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="var timestamp = JobHelper.FromStringTimestamp(actual[name])", span="27-27"];
m20_12 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ProcessingState.cs", label="2: Assert.False(String.IsNullOrEmpty(actual[name]))", span="34-34"];
m20_15 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="Assert.Equal(Type.GetType(splitted[1]).AssemblyQualifiedName, actual[name])", span="39-39"];
m20_16 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="Assert.Equal(value, actual[name])", span="43-43"];
m20_2 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="var name = row.Key", span="13-13"];
m20_3 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="var value = row.Value", span="14-14"];
m20_5 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="value == ''<UtcNow timestamp>''", span="17-17"];
m20_8 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="value == ''<Tomorrow timestamp>''", span="25-25"];
m20_11 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="value == ''<Non-empty>''", span="32-32"];
m20_13 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="value.StartsWith(''<Assembly qualified name of '')", span="36-36"];
m20_14 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="var splitted = value.Split('\'')", span="38-38"];
m20_7 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="Assert.True(\r\n                        (timestamp > DateTime.UtcNow.AddSeconds(-1))\r\n                        && (timestamp < DateTime.UtcNow.AddSeconds(1)))", span="21-23"];
m20_10 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ProcessingState.cs", label="2: Assert.True(\r\n                        timestamp >= DateTime.UtcNow.Date.AddDays(1)\r\n                        && timestamp < DateTime.UtcNow.Date.AddDays(2))", span="28-30"];
m20_17 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingState.cs", label="Exit HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m20_19 [cluster="Unk.True", file="ProcessingState.cs", label="Entry Unk.True", span=""];
m20_25 [cluster="string.StartsWith(string)", file="ProcessingState.cs", label="Entry string.StartsWith(string)", span="0-0"];
m20_23 [cluster="string.IsNullOrEmpty(string)", file="ProcessingState.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m20_24 [cluster="Unk.False", file="ProcessingState.cs", label="Entry Unk.False", span=""];
m20_21 [cluster="System.DateTime.AddSeconds(double)", file="ProcessingState.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m20_28 [cluster="Unk.Equal", file="ProcessingState.cs", label="Entry Unk.Equal", span=""];
m20_18 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ProcessingState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_27 [cluster="System.Type.GetType(string)", file="ProcessingState.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m20_22 [cluster="System.DateTime.AddDays(double)", file="ProcessingState.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m23_72 [cluster="Unk.OnClientException", file="RecurringJobsFilter.cs", label="Entry Unk.OnClientException", span=""];
m23_11 [cluster="Mock<IStateMachineFactory>.cstr", file="RecurringJobsFilter.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m23_12 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="RecurringJobsFilter.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", span="33-33"];
m23_22 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m23_0 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="RecurringJobsFilter.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="12-12"];
m23_2 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", color=green, community=0, file="RecurringJobsFilter.cs", label="0: Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17"];
m23_1 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="12-12"];
m23_3 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="RecurringJobsFilter.cs", label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", span="19-19"];
m23_6 [cluster="Unk.Given", file="RecurringJobsFilter.cs", label="Entry Unk.Given", span=""];
m23_5 [cluster="string.Format(string, object)", file="RecurringJobsFilter.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_4 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17"];
m23_7 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="RecurringJobsFilter.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", span="23-23"];
m23_23 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m23_24 [cluster="Unk.>", file="RecurringJobsFilter.cs", label="Entry Unk.>", span=""];
m23_25 [cluster="Unk.Equal", file="RecurringJobsFilter.cs", label="Entry Unk.Equal", span=""];
m23_26 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="35-35"];
m23_8 [cluster="Mock<IStorageConnection>.cstr", file="RecurringJobsFilter.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m23_9 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobsFilter.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m23_10 [cluster="Mock<State>.cstr", file="RecurringJobsFilter.cs", label="Entry Mock<State>.cstr", span=""];
m23_13 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="RecurringJobsFilter.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', DefaultQueue),\r\n                jobId)", span="35-37"];
m23_97 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m23_98 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104"];
m23_101 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="_filters.Add(filter.Object)", span="109-109"];
m23_102 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="111-111"];
m23_103 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114"];
m23_99 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="105-105"];
m23_100 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107"];
m23_104 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m23_106 [cluster="Unk.DoesNotThrow", file="RecurringJobsFilter.cs", label="Entry Unk.DoesNotThrow", span=""];
m23_41 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="RecurringJobsFilter.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="91-92"];
m23_42 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="RecurringJobsFilter.cs", label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="94-94"];
m23_43 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="89-89"];
m23_44 [cluster="Unk.DoesNotContain", file="RecurringJobsFilter.cs", label="Entry Unk.DoesNotContain", span=""];
m23_45 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="RecurringJobsFilter.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="98-98"];
m23_251 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m23_254 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="_filters.Add(outerFilter.Object)", span="250-250"];
m23_255 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="_filters.Add(innerFilter.Object)", span="251-251"];
m23_257 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254"];
m23_258 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="256-256"];
m23_259 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260"];
m23_252 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="var outerFilter = new Mock<IClientFilter>()", span="247-247"];
m23_253 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="var innerFilter = new Mock<IClientFilter>()", span="248-248"];
m23_256 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m23_260 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262"];
m23_261 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m23_35 [cluster="Unk.GetAllItemsFromList", file="RecurringJobsFilter.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m23_237 [cluster="System.InvalidOperationException.InvalidOperationException()", file="RecurringJobsFilter.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m23_53 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="RecurringJobsFilter.cs", label="Assert.AreEqual(length, actualLength)", span="110-110"];
m23_55 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="RecurringJobsFilter.cs", label="_filters.Add(filter.Object)", span="64-64"];
m23_56 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66"];
m23_57 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="67-67"];
m23_58 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="RecurringJobsFilter.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70"];
m23_54 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="106-106"];
m23_59 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="RecurringJobsFilter.cs", label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73"];
m23_60 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m23_61 [cluster="Mock<IClientExceptionFilter>.cstr", file="RecurringJobsFilter.cs", label="Entry Mock<IClientExceptionFilter>.cstr", span=""];
m23_29 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="67-67"];
m23_119 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m23_121 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="_filters.Add(filter.Object)", span="122-122"];
m23_123 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125"];
m23_125 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="128-128"];
m23_126 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="131-131"];
m23_120 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="var filter = new Mock<IClientFilter>()", span="121-121"];
m23_122 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124"];
m23_124 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126"];
m23_127 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m23_18 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="41-41"];
m23_19 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="RecurringJobsFilter.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="51-51"];
m23_20 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="RecurringJobsFilter.cs", label="Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", span="53-53"];
m23_21 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="51-51"];
m23_164 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m23_166 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="_filters.Add(filter.Object)", span="164-164"];
m23_168 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="169-169"];
m23_169 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="172-172"];
m23_170 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175"];
m23_165 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="var filter = new Mock<IClientFilter>()", span="163-163"];
m23_167 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167"];
m23_171 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176"];
m23_172 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m23_50 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="57-57"];
m23_328 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="RecurringJobsFilter.cs", label="return new JobCreationProcess(_filters);", span="314-314"];
m23_329 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m23_49 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="53-53"];
m23_139 [cluster="Unk.OnCreated", file="RecurringJobsFilter.cs", label="Entry Unk.OnCreated", span=""];
m23_228 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m23_230 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="_filters.Add(filter.Object)", span="227-227"];
m23_232 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230"];
m23_233 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="232-232"];
m23_234 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236"];
m23_229 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="var filter = new Mock<IClientFilter>()", span="226-226"];
m23_231 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="var exception = new InvalidOperationException()", span="229-229"];
m23_235 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240"];
m23_236 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m23_40 [cluster="Unk.CreateJob", file="RecurringJobsFilter.cs", label="Entry Unk.CreateJob", span=""];
m23_62 [cluster="Unk.Add", file="RecurringJobsFilter.cs", label="Entry Unk.Add", span=""];
m23_84 [cluster="Unk.InSequence", file="RecurringJobsFilter.cs", label="Entry Unk.InSequence", span=""];
m23_330 [cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="RecurringJobsFilter.cs", label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m23_185 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m23_188 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="_filters.Add(outerFilter.Object)", span="186-186"];
m23_189 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="_filters.Add(innerFilter.Object)", span="187-187"];
m23_191 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="192-192"];
m23_192 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="195-195"];
m23_186 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="var outerFilter = new Mock<IClientFilter>()", span="183-183"];
m23_187 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="var innerFilter = new Mock<IClientFilter>()", span="184-184"];
m23_190 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190"];
m23_193 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198"];
m23_194 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m23_46 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="RecurringJobsFilter.cs", label="var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="100-101"];
m23_238 [cluster="Unk.Throws", file="RecurringJobsFilter.cs", label="Entry Unk.Throws", span=""];
m23_15 [cluster="lambda expression", color=green, community=0, file="RecurringJobsFilter.cs", label="0: TestMethod()", span="20-20"];
m23_16 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="20-20"];
m23_17 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m23_37 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="47-47"];
m23_38 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="47-47"];
m23_39 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="47-47"];
m23_14 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="20-20"];
m23_73 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m23_78 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="_filters.Add(filter1.Object)", span="86-86"];
m23_79 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="_filters.Add(filter2.Object)", span="87-87"];
m23_80 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89"];
m23_81 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="91-91"];
m23_82 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95"];
m23_74 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80"];
m23_77 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84"];
m23_75 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81"];
m23_76 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83"];
m23_83 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m23_31 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="43-43"];
m23_32 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="45-45"];
m23_33 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="RecurringJobsFilter.cs", label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47"];
m23_34 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m23_324 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="305-305"];
m23_51 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="RecurringJobsFilter.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="106-106"];
m23_67 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="70-70"];
m23_95 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="95-95"];
m23_117 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="114-114"];
m23_220 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="215-215"];
m23_243 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="236-236"];
m23_266 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="260-260"];
m23_296 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="281-281"];
m23_319 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="302-302"];
m23_27 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="RecurringJobsFilter.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="67-67"];
m23_47 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="RecurringJobsFilter.cs", label="Assert.AreEqual(0, length)", span="102-102"];
m23_52 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="RecurringJobsFilter.cs", label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="108-109"];
m23_63 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="66-66"];
m23_66 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="70-70"];
m23_68 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="70-70"];
m23_91 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="89-89"];
m23_94 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="95-95"];
m23_96 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="95-95"];
m23_107 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="104-104"];
m23_116 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="114-114"];
m23_118 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="114-114"];
m23_133 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="125-125"];
m23_179 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="175-175"];
m23_219 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="215-215"];
m23_221 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="215-215"];
m23_222 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="218-218"];
m23_239 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="230-230"];
m23_242 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="236-236"];
m23_244 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="236-236"];
m23_262 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="254-254"];
m23_265 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="260-260"];
m23_267 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="260-260"];
m23_283 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="273-273"];
m23_295 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="281-281"];
m23_297 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="281-281"];
m23_309 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="294-294"];
m23_318 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="302-302"];
m23_320 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="302-302"];
m23_28 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="RecurringJobsFilter.cs", label="Then(String.Format(''the '{0}' queue should contain the job'', DefaultQueue))", span="69-69"];
m23_70 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73"];
m23_86 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83"];
m23_89 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84"];
m23_111 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106"];
m23_130 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124"];
m23_137 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126"];
m23_153 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146"];
m23_156 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147"];
m23_159 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148"];
m23_162 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149"];
m23_174 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166"];
m23_183 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176"];
m23_196 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189"];
m23_202 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198"];
m23_217 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208"];
m23_226 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219"];
m23_246 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240"];
m23_269 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262"];
m23_287 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275"];
m23_313 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296"];
m23_322 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305"];
m23_48 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="RecurringJobsFilter.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="98-98"];
m23_65 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="66-66"];
m23_64 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="66-66"];
m23_69 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="72-73"];
m23_88 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="84-84"];
m23_93 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="89-89"];
m23_92 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="89-89"];
m23_109 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="104-104"];
m23_108 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="104-104"];
m23_110 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="106-106"];
m23_113 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="107-107"];
m23_129 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="124-124"];
m23_136 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="126-126"];
m23_135 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="125-125"];
m23_134 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="125-125"];
m23_152 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="146-146"];
m23_161 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="149-149"];
m23_173 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="166-166"];
m23_176 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="167-167"];
m23_182 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="176-176"];
m23_181 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="175-175"];
m23_180 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="175-175"];
m23_195 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="189-189"];
m23_198 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="190-190"];
m23_201 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="198-198"];
m23_216 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="208-208"];
m23_225 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="219-219"];
m23_224 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="218-218"];
m23_223 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="218-218"];
m23_249 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="context.Exception == exception", span="240-240"];
m23_241 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="230-230"];
m23_240 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="230-230"];
m23_245 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="239-240"];
m23_272 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="context.Exception == exception", span="262-262"];
m23_264 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="254-254"];
m23_263 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="254-254"];
m23_268 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="262-262"];
m23_290 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="context.Exception == exception", span="275-275"];
m23_286 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="275-275"];
m23_292 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="276-276"];
m23_285 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="273-273"];
m23_284 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="273-273"];
m23_312 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="296-296"];
m23_315 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="297-297"];
m23_311 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="294-294"];
m23_310 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.CreateJob()", span="294-294"];
m23_321 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="305-305"];
m23_85 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="83-83"];
m23_155 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="147-147"];
m23_158 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="148-148"];
m23_71 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="72-73"];
m23_87 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="83-83"];
m23_90 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="84-84"];
m23_112 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="106-106"];
m23_131 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="124-124"];
m23_138 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="126-126"];
m23_154 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="146-146"];
m23_157 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="147-147"];
m23_160 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="148-148"];
m23_163 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="149-149"];
m23_175 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="166-166"];
m23_184 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="176-176"];
m23_197 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="189-189"];
m23_203 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="198-198"];
m23_204 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="198-198"];
m23_218 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="208-208"];
m23_227 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="219-219"];
m23_247 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="239-240"];
m23_248 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="240-240"];
m23_270 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="262-262"];
m23_271 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="262-262"];
m23_288 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="275-275"];
m23_289 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="275-275"];
m23_314 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="296-296"];
m23_323 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="305-305"];
m23_115 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="107-107"];
m23_114 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.ExceptionHandled = true", span="107-107"];
m23_178 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="167-167"];
m23_177 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.Canceled = true", span="167-167"];
m23_200 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="190-190"];
m23_199 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="context.Canceled = true", span="190-190"];
m23_250 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="240-240"];
m23_273 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="262-262"];
m23_291 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="275-275"];
m23_294 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="276-276"];
m23_293 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.ExceptionHandled = true", span="276-276"];
m23_317 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="297-297"];
m23_316 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="x.ExceptionHandled = true", span="297-297"];
m23_206 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="198-198"];
m23_205 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="context.Canceled", span="198-198"];
m23_325 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="context.Exception != null", span="305-305"];
m23_326 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="305-305"];
m23_30 [cluster="Unk.Then", file="RecurringJobsFilter.cs", label="Entry Unk.Then", span=""];
m23_36 [cluster="Unk.Verify", file="RecurringJobsFilter.cs", label="Entry Unk.Verify", span=""];
m23_207 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m23_209 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="_filters.Add(filter.Object)", span="206-206"];
m23_211 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="211-211"];
m23_212 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215"];
m23_213 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218"];
m23_208 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="var filter = new Mock<IClientFilter>()", span="205-205"];
m23_210 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209"];
m23_214 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219"];
m23_215 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m23_298 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m23_301 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="_filters.Add(outerFilter.Object)", span="291-291"];
m23_302 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="_filters.Add(innerFilter.Object)", span="292-292"];
m23_303 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294"];
m23_305 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="299-299"];
m23_306 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302"];
m23_299 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="var outerFilter = new Mock<IClientFilter>()", span="288-288"];
m23_300 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="var innerFilter = new Mock<IClientFilter>()", span="289-289"];
m23_304 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297"];
m23_307 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305"];
m23_308 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m23_132 [cluster="Unk.OnCreating", file="RecurringJobsFilter.cs", label="Entry Unk.OnCreating", span=""];
m23_274 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m23_276 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="_filters.Add(filter.Object)", span="270-270"];
m23_278 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273"];
m23_280 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="278-278"];
m23_281 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281"];
m23_275 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="var filter = new Mock<IClientFilter>()", span="269-269"];
m23_277 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="var exception = new InvalidOperationException()", span="272-272"];
m23_279 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276"];
m23_282 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m23_105 [cluster="Unk.Callback", file="RecurringJobsFilter.cs", label="Entry Unk.Callback", span=""];
m23_327 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m23_128 [cluster="Mock<IClientFilter>.cstr", file="RecurringJobsFilter.cs", label="Entry Mock<IClientFilter>.cstr", span=""];
m23_140 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m23_143 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="_filters.Add(outerFilter.Object)", span="143-143"];
m23_144 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="_filters.Add(innerFilter.Object)", span="144-144"];
m23_149 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="var process = CreateProcess()", span="151-151"];
m23_150 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="process.Run(_context.Object)", span="154-154"];
m23_141 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="var outerFilter = new Mock<IClientFilter>()", span="140-140"];
m23_142 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="var innerFilter = new Mock<IClientFilter>()", span="141-141"];
m23_145 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146"];
m23_148 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149"];
m23_146 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147"];
m23_147 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148"];
m23_151 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m23_331 [file="RecurringJobsFilter.cs", label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span=""];
m23_333 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_334 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_335 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_336 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_337 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_338 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_340 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_343 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_344 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_332 [file="RecurringJobsFilter.cs", label=process, span=""];
m23_339 [file="RecurringJobsFilter.cs", label=exception, span=""];
m23_341 [file="RecurringJobsFilter.cs", label=exception, span=""];
m23_342 [file="RecurringJobsFilter.cs", label=exception, span=""];
m24_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RetryJobsFilter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m24_18 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="RetryJobsFilter.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m24_16 [cluster="Unk.SecondsToDelay", file="RetryJobsFilter.cs", label="Entry Unk.SecondsToDelay", span=""];
m24_0 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="Entry HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10"];
m24_1 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="redis == null", span="12-12"];
m24_3 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="state == null", span="13-13"];
m24_5 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="state.StateName != FailedState.Name", span="15-15"];
m24_6 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="return state;", span="18-18"];
m24_7 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", color=red, community=0, file="RetryJobsFilter.cs", label="2: var retryCount = redis.IncrementValueInHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId),\r\n                ''RetryCount'',\r\n                1)", span="21-24"];
m24_10 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", color=red, community=0, file="RetryJobsFilter.cs", label="2: return new ScheduledState(\r\n                    state.JobId, \r\n                    String.Format(''Retry attempt {0} of {1}.'', retryCount, MaxRetryAttempts), \r\n                    delay);", span="32-35"];
m24_11 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="return state;", span="40-40"];
m24_2 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="throw new ArgumentNullException(''redis'');", span="12-12"];
m24_4 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="throw new ArgumentNullException(''state'');", span="13-13"];
m24_8 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="retryCount <= MaxRetryAttempts", span="26-26"];
m24_9 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="28-28"];
m24_12 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="Exit HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10"];
m24_17 [cluster="System.DateTime.AddSeconds(double)", file="RetryJobsFilter.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m24_19 [cluster="Unk.Format", file="RetryJobsFilter.cs", label="Entry Unk.Format", span=""];
m24_20 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="Entry HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44"];
m24_21 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="var random = new Random()", span="46-46"];
m24_22 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="47-48"];
m24_23 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="Exit HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44"];
m24_24 [cluster="System.Random.Random()", file="RetryJobsFilter.cs", label="Entry System.Random.Random()", span="0-0"];
m24_26 [cluster="System.Random.Next(int)", file="RetryJobsFilter.cs", label="Entry System.Random.Next(int)", span="0-0"];
m24_27 [cluster="System.Math.Round(double)", file="RetryJobsFilter.cs", label="Entry System.Math.Round(double)", span="0-0"];
m24_15 [cluster="Unk.IncrementValueInHash", file="RetryJobsFilter.cs", label="Entry Unk.IncrementValueInHash", span=""];
m24_14 [cluster="string.Format(string, object)", file="RetryJobsFilter.cs", label="Entry string.Format(string, object)", span="0-0"];
m24_25 [cluster="System.Math.Pow(double, double)", file="RetryJobsFilter.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m24_28 [file="RetryJobsFilter.cs", label="HangFire.RetryJobsFilter", span=""];
m25_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25"];
m25_1 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="serverId == null", span="31-31"];
m25_3 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="storage == null", span="32-32"];
m25_5 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="properties == null", span="33-33"];
m25_7 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="ServerId = serverId", span="35-35"];
m25_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=red, community=0, file="ScheduledState.cs", label="2: Storage = storage", span="36-36"];
m25_9 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="Properties = new Dictionary<string, object>(properties, StringComparer.OrdinalIgnoreCase)", span="37-37"];
m25_10 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="CancellationToken = cancellationToken", span="38-38"];
m25_2 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="throw new ArgumentNullException(''serverId'');", span="31-31"];
m25_4 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="throw new ArgumentNullException(''storage'');", span="32-32"];
m25_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="throw new ArgumentNullException(''properties'');", span="33-33"];
m25_11 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ScheduledState.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25"];
m25_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="ScheduledState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m25_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ScheduledState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m25_14 [file="ScheduledState.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m26_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ScheduledState.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m26_31 [cluster="Unk.Acquire", file="ScheduledState.feature.cs", label="Entry Unk.Acquire", span=""];
m26_25 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ScheduledState.feature.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m26_32 [cluster="string.Format(string, object)", file="ScheduledState.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m26_33 [cluster="Unk.Execute", file="ScheduledState.feature.cs", label="Entry Unk.Execute", span=""];
m26_23 [cluster="string.Format(string, object, object)", file="ScheduledState.feature.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m26_24 [cluster="Hangfire.Logging.ILog.Trace(string)", file="ScheduledState.feature.cs", label="Entry Hangfire.Logging.ILog.Trace(string)", span="232-232"];
m26_35 [cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ScheduledState.feature.cs", label="Entry Hangfire.SqlServer.ExpirationManager.ToString()", span="100-100"];
m26_36 [cluster="Hangfire.SqlServer.ExpirationManager.ToString()", color=green, community=0, file="ScheduledState.feature.cs", label="0: return GetType().ToString();", span="102-102"];
m26_37 [cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ScheduledState.feature.cs", label="Exit Hangfire.SqlServer.ExpirationManager.ToString()", span="100-100"];
m26_26 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ScheduledState.feature.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m26_21 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ScheduledState.feature.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m26_34 [cluster="Unk.Release", file="ScheduledState.feature.cs", label="Entry Unk.Release", span=""];
m26_39 [cluster="System.Type.ToString()", file="ScheduledState.feature.cs", label="Entry System.Type.ToString()", span="0-0"];
m26_38 [cluster="object.GetType()", file="ScheduledState.feature.cs", label="Entry object.GetType()", span="0-0"];
m26_22 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ScheduledState.feature.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m26_2 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ScheduledState.feature.cs", label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50"];
m26_3 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", color=green, community=0, file="ScheduledState.feature.cs", label="0: storage == null", span="52-52"];
m26_4 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", color=green, community=0, file="ScheduledState.feature.cs", label="1: throw new ArgumentNullException(''storage'');", span="52-52"];
m26_5 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", color=green, community=0, file="ScheduledState.feature.cs", label="0: _storage = storage", span="54-54"];
m26_6 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", color=green, community=0, file="ScheduledState.feature.cs", label="1: _checkInterval = checkInterval", span="55-55"];
m26_7 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ScheduledState.feature.cs", label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50"];
m26_27 [cluster="lambda expression", file="ScheduledState.feature.cs", label="Entry lambda expression", span="68-84"];
m26_29 [cluster="lambda expression", color=green, community=0, file="ScheduledState.feature.cs", label="0: removedCount = connection.Execute(\r\n                                String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                                new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="74-78"];
m26_28 [cluster="lambda expression", color=green, community=0, file="ScheduledState.feature.cs", label="1: SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout)", span="70-70"];
m26_30 [cluster="lambda expression", file="ScheduledState.feature.cs", label="Exit lambda expression", span="68-84"];
m26_9 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ScheduledState.feature.cs", label="Entry Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="58-58"];
m26_10 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="0: ProcessedTables", span="60-60"];
m26_18 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: removedCount != 0", span="94-94"];
m26_11 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="62-62"];
m26_19 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="97-97"];
m26_13 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: _storage.UseConnection(connection =>\r\n                    {\r\n                        SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout);\r\n\r\n                        try\r\n                        {\r\n                            removedCount = connection.Execute(\r\n                                String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                                new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                        }\r\n                        finally\r\n                        {\r\n                            SqlServerDistributedLock.Release(connection, DistributedLockKey);\r\n                        }\r\n                    })", span="68-84"];
m26_15 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="1: Logger.Trace(String.Format(''Removed {0} outdated record(s) from '{1}' table.'', removedCount,\r\n                            table))", span="88-89"];
m26_16 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="91-91"];
m26_17 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: cancellationToken.ThrowIfCancellationRequested()", span="92-92"];
m26_12 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: int removedCount = 0", span="64-64"];
m26_14 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ScheduledState.feature.cs", label="2: removedCount > 0", span="86-86"];
m26_20 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ScheduledState.feature.cs", label="Exit Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="58-58"];
m26_40 [file="ScheduledState.feature.cs", label="Hangfire.SqlServer.ExpirationManager", span=""];
m26_41 [file="ScheduledState.feature.cs", label=table, span=""];
m27_55 [cluster="System.Threading.Thread.Join()", file="SchedulePoller.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m27_33 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="SchedulePoller.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m27_18 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.Dispose()", span="44-44"];
m27_19 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="SchedulePoller.cs", label="_redis.Dispose()", span="46-46"];
m27_20 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.Dispose()", span="44-44"];
m27_38 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71"];
m27_39 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=true, span="75-75"];
m27_40 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="var wasEnqueued = EnqueueNextScheduledJob()", span="77-77"];
m27_43 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=Exception, span="88-88"];
m27_41 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="wasEnqueued && !_cts.IsCancellationRequested", span="79-79"];
m27_42 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="_stopped.WaitOne(_pollInterval)", span="82-82"];
m27_44 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="90-93"];
m27_45 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71"];
m27_17 [cluster="Unk.EnqueueScheduledJob", file="SchedulePoller.cs", label="Entry Unk.EnqueueScheduledJob", span=""];
m27_29 [cluster="string.Format(string, object)", file="SchedulePoller.cs", label="Entry string.Format(string, object)", span="0-0"];
m27_22 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49"];
m27_23 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="51-51"];
m27_26 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", color=green, community=0, file="SchedulePoller.cs", label="0: JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="56-58"];
m27_27 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", color=green, community=0, file="SchedulePoller.cs", label="0: JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="62-66"];
m27_24 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="52-52"];
m27_25 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="!String.IsNullOrEmpty(queue)", span="54-54"];
m27_28 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49"];
m27_53 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="SchedulePoller.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m27_0 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="20-20"];
m27_1 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="SchedulePoller.cs", label="_redis = redisManager.GetClient()", span="22-22"];
m27_2 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="SchedulePoller.cs", label="_pollInterval = pollInterval", span="23-23"];
m27_3 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="20-20"];
m27_13 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m27_31 [cluster="Unk.TryToGetQueue", file="SchedulePoller.cs", label="Entry Unk.TryToGetQueue", span=""];
m27_54 [cluster="System.Threading.EventWaitHandle.Set()", file="SchedulePoller.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m27_35 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="SchedulePoller.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m27_36 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SchedulePoller.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m27_4 [cluster="Unk.GetClient", file="SchedulePoller.cs", label="Entry Unk.GetClient", span=""];
m27_32 [cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m27_21 [cluster="Unk.Dispose", file="SchedulePoller.cs", label="Entry Unk.Dispose", span=""];
m27_48 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97"];
m27_49 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="_cts.Cancel()", span="99-99"];
m27_51 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="thread.Join()", span="101-101"];
m27_50 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="_stopped.Set()", span="100-100"];
m27_52 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97"];
m27_47 [cluster="Unk.Fatal", file="SchedulePoller.cs", label="Entry Unk.Fatal", span=""];
m27_15 [cluster="Unk.FirstOrDefault", file="SchedulePoller.cs", label="Entry Unk.FirstOrDefault", span=""];
m27_34 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SchedulePoller.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m27_30 [cluster="Unk.GetValueFromHash", file="SchedulePoller.cs", label="Entry Unk.GetValueFromHash", span=""];
m27_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m27_16 [cluster="Unk.IsNullOrEmpty", file="SchedulePoller.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m27_37 [cluster="Unk.Format", file="SchedulePoller.cs", label="Entry Unk.Format", span=""];
m27_14 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="SchedulePoller.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m27_5 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26"];
m27_6 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="28-28"];
m27_7 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="30-33"];
m27_8 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="String.IsNullOrEmpty(jobId)", span="35-35"];
m27_10 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="EnqueueScheduledJob(jobId)", span="40-40"];
m27_9 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return false;", span="37-37"];
m27_11 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return true;", span="41-41"];
m27_12 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26"];
m27_56 [file="SchedulePoller.cs", label="HangFire.Server.SchedulePoller", span=""];
m28_44 [cluster="Unk.Then", file="SchedulePoller.feature.cs", label="Entry Unk.Then", span=""];
m28_58 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", span="125-125"];
m28_62 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="133-133"];
m28_61 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="131-131"];
m28_63 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="135-135"];
m28_64 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="137-137"];
m28_65 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="139-139"];
m28_66 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="this.ScenarioCleanup()", span="141-141"];
m28_60 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="129-129"];
m28_59 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller will enqueue only jobs in the Scheduled state'', ((string[])(null)))", span="127-127"];
m28_67 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.PollerWillEnqueueOnlyJobsInTheScheduledState()", span="125-125"];
m28_42 [cluster="Unk.Given", file="SchedulePoller.feature.cs", label="Entry Unk.Given", span=""];
m28_43 [cluster="Unk.When", file="SchedulePoller.feature.cs", label="Entry Unk.When", span=""];
m28_47 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", span="100-100"];
m28_51 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="108-108"];
m28_50 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", file="SchedulePoller.feature.cs", label="testRunner.Given(''a future job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="106-106"];
m28_52 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.Then(''the job remains to be in the Scheduled state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="110-110"];
m28_53 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''the schedule contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="112-112"];
m28_54 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="114-114"];
m28_55 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''schedule poller returns \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="116-116"];
m28_56 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", file="SchedulePoller.feature.cs", label="this.ScenarioCleanup()", span="118-118"];
m28_49 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", file="SchedulePoller.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="104-104"];
m28_48 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", file="SchedulePoller.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Future jobs are not being enqueued'', ((string[])(null)))", span="102-102"];
m28_57 [cluster="HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.FutureJobsAreNotBeingEnqueued()", span="100-100"];
m28_68 [cluster="HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", span="148-148"];
m28_72 [cluster="HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.Then(''schedule poller returns \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="156-156"];
m28_71 [cluster="HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", file="SchedulePoller.feature.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="154-154"];
m28_73 [cluster="HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", file="SchedulePoller.feature.cs", label="this.ScenarioCleanup()", span="158-158"];
m28_70 [cluster="HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", file="SchedulePoller.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="152-152"];
m28_69 [cluster="HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", file="SchedulePoller.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Returns false when there are no jobs in the schedule'', ((string[])(null)))", span="150-150"];
m28_74 [cluster="HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.ReturnsFalseWhenThereAreNoJobsInTheSchedule()", span="148-148"];
m28_29 [cluster="Unk.CollectScenarioErrors", file="SchedulePoller.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m28_25 [cluster="Unk.OnScenarioStart", file="SchedulePoller.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m28_83 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="184-184"];
m28_87 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="192-192"];
m28_86 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="190-190"];
m28_88 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="194-194"];
m28_89 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="196-196"];
m28_90 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="this.ScenarioCleanup()", span="198-198"];
m28_85 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="188-188"];
m28_84 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller will fail only jobs in the Scheduled state'', ((string[])(null)))", span="186-186"];
m28_91 [cluster="HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="184-184"];
m28_11 [cluster="System.TimeSpan.FromMinutes(double)", file="SchedulePoller.feature.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m28_26 [cluster="HangFire.Tests.SchedulePollerFeature.ScenarioCleanup()", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.ScenarioCleanup()", span="66-66"];
m28_27 [cluster="HangFire.Tests.SchedulePollerFeature.ScenarioCleanup()", file="SchedulePoller.feature.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m28_28 [cluster="HangFire.Tests.SchedulePollerFeature.ScenarioCleanup()", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.ScenarioCleanup()", span="66-66"];
m28_10 [cluster="System.TimeSpan.FromSeconds(double)", file="SchedulePoller.feature.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m28_12 [cluster="System.TimeSpan.FromHours(double)", file="SchedulePoller.feature.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m28_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m28_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="TransactionIsolationLevel = null", span="27-27"];
m28_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28"];
m28_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29"];
m28_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30"];
m28_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31"];
m28_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="PrepareSchemaIfNecessary = true", span="32-32"];
m28_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="DashboardJobListLimit = 50000", span="33-33"];
m28_8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="34-34"];
m28_9 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SchedulePoller.feature.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m28_22 [cluster="HangFire.Tests.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m28_23 [cluster="HangFire.Tests.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SchedulePoller.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m28_24 [cluster="HangFire.Tests.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m28_75 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", span="165-165"];
m28_79 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", color=green, community=0, file="SchedulePoller.feature.cs", label="2: testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="173-173"];
m28_78 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", file="SchedulePoller.feature.cs", label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="171-171"];
m28_80 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.Then(''the job moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="175-175"];
m28_81 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", file="SchedulePoller.feature.cs", label="this.ScenarioCleanup()", span="177-177"];
m28_77 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", file="SchedulePoller.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="169-169"];
m28_76 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", file="SchedulePoller.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller move the job to the Failed state when it could not find it\'s type'', ((string[])(null)))", span="167-167"];
m28_82 [cluster="HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItSType()", span="165-165"];
m28_41 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SchedulePoller.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m28_45 [cluster="Unk.And", file="SchedulePoller.feature.cs", label="Entry Unk.And", span=""];
m28_46 [cluster="Unk.But", file="SchedulePoller.feature.cs", label="Entry Unk.But", span=""];
m28_30 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", file="SchedulePoller.feature.cs", label="Entry HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", span="75-75"];
m28_34 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="83-83"];
m28_33 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", file="SchedulePoller.feature.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m28_35 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.Then(''the job becomes Enqueued'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="85-85"];
m28_36 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''the schedule does not contain it anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="87-87"];
m28_37 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", color=green, community=0, file="SchedulePoller.feature.cs", label="1: testRunner.But(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="89-89"];
m28_38 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", color=green, community=0, file="SchedulePoller.feature.cs", label="0: testRunner.And(''schedule poller returns \'true\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="91-91"];
m28_39 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", file="SchedulePoller.feature.cs", label="this.ScenarioCleanup()", span="93-93"];
m28_32 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", file="SchedulePoller.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m28_31 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", file="SchedulePoller.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Scheduled jobs are being enqueued on their actual queues'', ((string[])(null)))", span="77-77"];
m28_40 [cluster="HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", file="SchedulePoller.feature.cs", label="Exit HangFire.Tests.SchedulePollerFeature.ScheduledJobsAreBeingEnqueuedOnTheirActualQueues()", span="75-75"];
m28_13 [file="SchedulePoller.feature.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m28_92 [file="SchedulePoller.feature.cs", label="HangFire.Tests.SchedulePollerFeature", span=""];
m29_9 [cluster="Mock<IStorageConnection>.cstr", file="ServerJobDescriptor.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m29_13 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="ExecuteWithAutomaticRetry(cancellationToken)", span="54-54"];
m29_64 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="73-73"];
m29_60 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="67-67"];
m29_89 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="96-96"];
m29_90 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerJobDescriptor.cs", label="var client = CreateClient()", span="98-98"];
m29_91 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerJobDescriptor.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="100-101"];
m29_92 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerJobDescriptor.cs", label="Assert.Equal(''job'', exception.ParamName)", span="103-103"];
m29_93 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="96-96"];
m29_49 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ServerJobDescriptor.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", span="95-95"];
m29_50 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ServerJobDescriptor.cs", label="return LogLevel.Error;", span="107-107"];
m29_51 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="ServerJobDescriptor.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110"];
m29_52 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="ServerJobDescriptor.cs", label="return _innerComponent.ToString();", span="112-112"];
m29_41 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="45-45"];
m29_30 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="i++", span="59-59"];
m29_70 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="80-80"];
m29_71 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=green, community=0, file="ServerJobDescriptor.cs", label="1: CreateClient()", span="82-82"];
m29_72 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=green, community=0, file="ServerJobDescriptor.cs", label="0: _storage.Verify(x => x.GetConnection())", span="83-83"];
m29_73 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="80-80"];
m29_10 [cluster="Mock<JobStorage>.cstr", file="ServerJobDescriptor.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m29_63 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="69-69"];
m29_116 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="128-128"];
m29_117 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerJobDescriptor.cs", label="var client = CreateClient()", span="130-130"];
m29_118 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerJobDescriptor.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="131-132"];
m29_119 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerJobDescriptor.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="134-135"];
m29_120 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerJobDescriptor.cs", label="Assert.NotNull(exception.InnerException)", span="137-137"];
m29_121 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerJobDescriptor.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="138-138"];
m29_122 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="128-128"];
m29_14 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="52-52"];
m29_53 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="ServerJobDescriptor.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110"];
m29_115 [cluster="Unk.Run", file="ServerJobDescriptor.cs", label="Entry Unk.Run", span=""];
m29_57 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ServerJobDescriptor.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="119-120"];
m29_32 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="36-36"];
m29_106 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="ServerJobDescriptor.cs", label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="81-81"];
m29_98 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="107-107"];
m29_99 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerJobDescriptor.cs", label="var client = CreateClient()", span="109-109"];
m29_100 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerJobDescriptor.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="111-112"];
m29_101 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerJobDescriptor.cs", label="Assert.Equal(''state'', exception.ParamName)", span="114-114"];
m29_102 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="107-107"];
m29_29 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="90-90"];
m29_33 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="36-36"];
m29_34 [cluster="BackgroundJobClient.cstr", file="ServerJobDescriptor.cs", label="Entry BackgroundJobClient.cstr", span=""];
m29_42 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="51-51"];
m29_43 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerJobDescriptor.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="53-54"];
m29_45 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="51-51"];
m29_47 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="54-54"];
m29_44 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerJobDescriptor.cs", label="Assert.Equal(''process'', exception.ParamName)", span="56-56"];
m29_46 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="54-54"];
m29_48 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="54-54"];
m29_84 [cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerJobDescriptor.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="103-103"];
m29_66 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="73-73"];
m29_12 [cluster="Unk.Returns", file="ServerJobDescriptor.cs", label="Entry Unk.Returns", span=""];
m29_20 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=red, community=0, file="ServerJobDescriptor.cs", label="0: OperationCanceledException", span="66-66"];
m29_0 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="19-19"];
m29_1 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="_connection = new Mock<IStorageConnection>()", span="21-21"];
m29_3 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="23-23"];
m29_2 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="_storage = new Mock<JobStorage>()", span="22-22"];
m29_4 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25"];
m29_5 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="_process = new Mock<IJobCreationProcess>()", span="27-27"];
m29_6 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="_state = new Mock<State>()", span="28-28"];
m29_7 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="_job = Job.FromExpression(() => Method())", span="29-29"];
m29_8 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="19-19"];
m29_37 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerJobDescriptor.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="47-47"];
m29_79 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="87-87"];
m29_82 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=green, community=0, file="ServerJobDescriptor.cs", label="0: _connection.Verify(x => x.Dispose())", span="92-92"];
m29_81 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerJobDescriptor.cs", label="client.Dispose()", span="90-90"];
m29_80 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerJobDescriptor.cs", label="var client = CreateClient()", span="89-89"];
m29_83 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="87-87"];
m29_123 [cluster="Unk.NotNull", file="ServerJobDescriptor.cs", label="Entry Unk.NotNull", span=""];
m29_35 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="42-42"];
m29_15 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="57-57"];
m29_11 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="ServerJobDescriptor.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m29_88 [cluster="Unk.Dispose", file="ServerJobDescriptor.cs", label="Entry Unk.Dispose", span=""];
m29_16 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerJobDescriptor.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m29_18 [cluster="lambda expression", color=red, community=0, file="ServerJobDescriptor.cs", label="0: x.GetConnection()", span="23-23"];
m29_28 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="33-33"];
m29_17 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="i <= MaxRetryAttempts", span="59-59"];
m29_23 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="29-29"];
m29_25 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="33-33"];
m29_26 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerJobDescriptor.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="35-36"];
m29_27 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerJobDescriptor.cs", label="0: Assert.Equal(''storage'', exception.ParamName)", span="38-38"];
m29_19 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=red, community=0, file="ServerJobDescriptor.cs", label="0: return;", span="64-64"];
m29_21 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="29-29"];
m29_22 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Method()", span="29-29"];
m29_24 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="141-141"];
m29_31 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="36-36"];
m29_74 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="145-145"];
m29_131 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerJobDescriptor.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="147-147"];
m29_132 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="145-145"];
m29_58 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ServerJobDescriptor.cs", label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="122-122"];
m29_59 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ServerJobDescriptor.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115"];
m29_65 [cluster="System.Math.Min(double, double)", file="ServerJobDescriptor.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m29_54 [cluster="object.ToString()", file="ServerJobDescriptor.cs", label="Entry object.ToString()", span="0-0"];
m29_39 [cluster="lambda expression", color=red, community=0, file="ServerJobDescriptor.cs", label="0: Entry lambda expression", span="45-45"];
m29_38 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="42-42"];
m29_40 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="45-45"];
m29_76 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="83-83"];
m29_77 [cluster="lambda expression", color=green, community=0, file="ServerJobDescriptor.cs", label="0: x.GetConnection()", span="83-83"];
m29_78 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="83-83"];
m29_85 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="92-92"];
m29_86 [cluster="lambda expression", color=green, community=0, file="ServerJobDescriptor.cs", label="0: x.Dispose()", span="92-92"];
m29_87 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="92-92"];
m29_62 [cluster="System.Guid.GetHashCode()", file="ServerJobDescriptor.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m29_68 [cluster="lambda expression", file="ServerJobDescriptor.cs", label=i, span=""];
m29_95 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="client.Create(null, _state.Object)", span="101-101"];
m29_104 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="client.Create(_job, null)", span="112-112"];
m29_128 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="client.Create(_job, _state.Object)", span="135-135"];
m29_61 [cluster="System.Guid.NewGuid()", file="ServerJobDescriptor.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m29_67 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Hangfire.Server.AutomaticRetryServerComponentWrapper", span=""];
m29_69 [cluster="lambda expression", file="ServerJobDescriptor.cs", label=nextTry, span=""];
m29_94 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="101-101"];
m29_96 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="101-101"];
m29_103 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="112-112"];
m29_105 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="112-112"];
m29_112 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="124-124"];
m29_124 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="131-131"];
m29_127 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Entry lambda expression", span="135-135"];
m29_129 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="135-135"];
m29_113 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="x.Run(It.IsNotNull<CreateContext>())", span="124-124"];
m29_125 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="x.Run(It.IsAny<CreateContext>())", span="131-131"];
m29_114 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="124-124"];
m29_126 [cluster="lambda expression", file="ServerJobDescriptor.cs", label="Exit lambda expression", span="131-131"];
m29_55 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ServerJobDescriptor.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115"];
m29_56 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ServerJobDescriptor.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="118-118"];
m29_36 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerJobDescriptor.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="44-45"];
m29_130 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="141-141"];
m29_97 [cluster="Unk.Create", file="ServerJobDescriptor.cs", label="Entry Unk.Create", span=""];
m29_107 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerJobDescriptor.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="118-118"];
m29_108 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerJobDescriptor.cs", label="var client = CreateClient()", span="120-120"];
m29_109 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerJobDescriptor.cs", label="client.Create(_job, _state.Object)", span="122-122"];
m29_110 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerJobDescriptor.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="124-124"];
m29_111 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerJobDescriptor.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="118-118"];
m29_75 [cluster="Unk.Verify", file="ServerJobDescriptor.cs", label="Entry Unk.Verify", span=""];
m29_133 [file="ServerJobDescriptor.cs", label="HangFire.Core.Tests.BackgroundJobClientFacts", span=""];
m29_134 [file="ServerJobDescriptor.cs", label=client, span=""];
m29_135 [file="ServerJobDescriptor.cs", label=client, span=""];
m29_136 [file="ServerJobDescriptor.cs", label=client, span=""];
m31_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="States.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m31_31 [cluster="Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", span="72-72"];
m31_32 [cluster="Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", color=green, community=0, file="States.feature.cs", label="0: _supervisors.Add(item)", span="74-74"];
m31_33 [cluster="Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", span="72-72"];
m31_26 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="States.feature.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m31_6 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="States.feature.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m31_47 [cluster="Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", span="92-92"];
m31_48 [cluster="Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", color=green, community=0, file="States.feature.cs", label="0: return _supervisors.Remove(item);", span="94-94"];
m31_49 [cluster="Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", span="92-92"];
m31_50 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="States.feature.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m31_43 [cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87"];
m31_44 [cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", color=green, community=0, file="States.feature.cs", label="1: _supervisors.CopyTo(array, arrayIndex)", span="89-89"];
m31_45 [cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87"];
m31_30 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="States.feature.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m31_23 [cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", span="62-62"];
m31_24 [cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", color=green, community=0, file="States.feature.cs", label="0: return _supervisors.GetEnumerator();", span="64-64"];
m31_25 [cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", span="62-62"];
m31_42 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="States.feature.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m31_12 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Stop()", span="44-44"];
m31_13 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", color=green, community=0, file="States.feature.cs", label="1: _supervisors", span="46-46"];
m31_14 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", color=green, community=0, file="States.feature.cs", label="1: supervisor.Stop()", span="48-48"];
m31_15 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Stop()", span="44-44"];
m31_0 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26"];
m31_1 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", color=green, community=0, file="States.feature.cs", label="0: supervisors == null", span="28-28"];
m31_2 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", color=green, community=0, file="States.feature.cs", label="1: throw new ArgumentNullException(''supervisors'');", span="28-28"];
m31_3 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", color=green, community=0, file="States.feature.cs", label="1: _supervisors = new List<IServerSupervisor>(supervisors)", span="30-30"];
m31_4 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26"];
m31_17 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52"];
m31_18 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", color=green, community=0, file="States.feature.cs", label="1: Stop()", span="54-54"];
m31_19 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", color=green, community=0, file="States.feature.cs", label="0: _supervisors", span="56-56"];
m31_20 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", color=green, community=0, file="States.feature.cs", label="1: supervisor.Dispose()", span="58-58"];
m31_21 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52"];
m31_7 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36"];
m31_8 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", color=green, community=0, file="States.feature.cs", label="1: _supervisors", span="38-38"];
m31_9 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", color=green, community=0, file="States.feature.cs", label="0: supervisor.Start()", span="40-40"];
m31_10 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36"];
m31_27 [cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67"];
m31_28 [cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", color=green, community=0, file="States.feature.cs", label="1: return ((IEnumerable) _supervisors).GetEnumerator();", span="69-69"];
m31_29 [cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67"];
m31_11 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="States.feature.cs", label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m31_34 [cluster="System.Collections.Generic.List<T>.Add(T)", file="States.feature.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m31_39 [cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", span="82-82"];
m31_40 [cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", color=green, community=0, file="States.feature.cs", label="2: return _supervisors.Contains(item);", span="84-84"];
m31_41 [cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", span="82-82"];
m31_16 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="States.feature.cs", label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m31_22 [cluster="System.IDisposable.Dispose()", file="States.feature.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m31_46 [cluster="System.Collections.Generic.List<T>.CopyTo(T[], int)", file="States.feature.cs", label="Entry System.Collections.Generic.List<T>.CopyTo(T[], int)", span="0-0"];
m31_38 [cluster="System.Collections.Generic.List<T>.Clear()", file="States.feature.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m31_35 [cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="States.feature.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77"];
m31_36 [cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", color=green, community=0, file="States.feature.cs", label="2: _supervisors.Clear()", span="79-79"];
m31_37 [cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="States.feature.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77"];
m31_51 [file="States.feature.cs", label="Hangfire.Server.ServerSupervisorCollection", span=""];
m32_90 [cluster="Unk.GetTimeToLive", file="StateSteps.cs", label="Entry Unk.GetTimeToLive", span=""];
m32_103 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="143-143"];
m32_104 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", color=green, community=1, file="StateSteps.cs", label="0: var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="145-150"];
m32_105 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", color=green, community=1, file="StateSteps.cs", label="1: keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="152-158"];
m32_106 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="143-143"];
m32_142 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="StateSteps.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m32_124 [cluster="Unk.SortedSetContainsItem", file="StateSteps.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m32_22 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="StateSteps.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m32_62 [cluster="Unk.Apply", file="StateSteps.cs", label="Entry Unk.Apply", span=""];
m32_95 [cluster="string.Format(string, params object[])", file="StateSteps.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m32_143 [cluster="System.DateTime.AddSeconds(double)", file="StateSteps.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m32_40 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="62-62"];
m32_41 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", color=green, community=0, file="StateSteps.cs", label="1: Given(String.Format(''a '{0}' state'', state))", span="64-64"];
m32_42 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", color=green, community=1, file="StateSteps.cs", label="0: _stateMock.Setup(x => x.GetProperties()).Returns(\r\n                table.Rows.ToDictionary(x => x[''Name''], x => x[''Value'']))", span="65-66"];
m32_43 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="62-62"];
m32_46 [cluster="Unk.ToDictionary", file="StateSteps.cs", label="Entry Unk.ToDictionary", span=""];
m32_81 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="108-108"];
m32_82 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", color=green, community=1, file="StateSteps.cs", label="0: var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="110-115"];
m32_83 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", color=green, community=1, file="StateSteps.cs", label="1: keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="117-123"];
m32_84 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="108-108"];
m32_91 [cluster="Unk.IsTrue", file="StateSteps.cs", label="Entry Unk.IsTrue", span=""];
m32_102 [cluster="Unk.PopItemFromList", file="StateSteps.cs", label="Entry Unk.PopItemFromList", span=""];
m32_158 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="232-232"];
m32_159 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", color=green, community=0, file="StateSteps.cs", label="1: var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="234-234"];
m32_160 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", color=green, community=0, file="StateSteps.cs", label="1: Assert.AreEqual(state, job[''State''])", span="235-235"];
m32_161 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="232-232"];
m32_162 [cluster="Unk.GetAllEntriesFromHash", file="StateSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m32_175 [cluster="Unk.RemoveStartFromList", file="StateSteps.cs", label="Entry Unk.RemoveStartFromList", span=""];
m32_4 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="27-27"];
m32_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", color=green, community=0, file="StateSteps.cs", label="0: _failedException = new InvalidOperationException(''Hello'')", span="29-29"];
m32_6 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", color=green, community=0, file="StateSteps.cs", label="1: _state = new FailedState(JobSteps.DefaultJobId, ''SomeReason'', _failedException)", span="30-30"];
m32_7 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="27-27"];
m32_135 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="199-199"];
m32_136 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", color=green, community=0, file="StateSteps.cs", label="0: var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="201-201"];
m32_137 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", color=green, community=0, file="StateSteps.cs", label="0: var timestamp = JobHelper.FromTimestamp((long)score)", span="202-202"];
m32_138 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", color=green, community=0, file="StateSteps.cs", label="2: Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="204-204"];
m32_139 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", color=green, community=0, file="StateSteps.cs", label="1: Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="205-205"];
m32_140 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="199-199"];
m32_44 [cluster="string.Format(string, object)", file="StateSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_29 [cluster="Mock<JobState>.cstr", file="StateSteps.cs", label="Entry Mock<JobState>.cstr", span=""];
m32_174 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="247-247"];
m32_169 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="1: var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="249-250"];
m32_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="247-247"];
m32_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="0: Assert.IsNotNull(entry)", span="251-251"];
m32_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="1: var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="253-253"];
m32_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="0: Assert.IsNotNull(history, entry)", span="254-254"];
m32_173 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="0: DictionaryAssert.ContainsFollowingItems(table, history)", span="256-256"];
m32_178 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="260-260"];
m32_179 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", color=green, community=1, file="StateSteps.cs", label="2: _stateMock.Verify(\r\n                x => x.Apply(It.Is<IRedisTransaction>(y => y != null)), \r\n                Times.Once)", span="262-264"];
m32_180 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="260-260"];
m32_119 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="174-174"];
m32_120 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", color=green, community=0, file="StateSteps.cs", label="1: Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="176-176"];
m32_121 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", color=green, community=0, file="StateSteps.cs", label="2: Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="177-177"];
m32_122 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="174-174"];
m32_92 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="127-127"];
m32_93 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", color=green, community=1, file="StateSteps.cs", label="1: Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="129-131"];
m32_94 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="127-127"];
m32_177 [cluster="Unk.>", file="StateSteps.cs", label="Entry Unk.>", span=""];
m32_141 [cluster="Unk.GetItemScoreInSortedSet", file="StateSteps.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m32_77 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="102-102"];
m32_78 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", color=green, community=0, file="StateSteps.cs", label="2: Assert.AreEqual(name, _state.StateName)", span="104-104"];
m32_79 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="102-102"];
m32_144 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="209-209"];
m32_145 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", color=green, community=0, file="StateSteps.cs", label="0: Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="211-211"];
m32_146 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", color=green, community=0, file="StateSteps.cs", label="1: var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="212-212"];
m32_147 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", color=green, community=0, file="StateSteps.cs", label="0: var timestamp = JobHelper.FromTimestamp((long) score)", span="213-213"];
m32_148 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", color=green, community=0, file="StateSteps.cs", label="0: Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="215-215"];
m32_149 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", color=green, community=0, file="StateSteps.cs", label="1: Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="216-216"];
m32_150 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="209-209"];
m32_80 [cluster="Unk.AreEqual", file="StateSteps.cs", label="Entry Unk.AreEqual", span=""];
m32_9 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="StateSteps.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m32_10 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="34-34"];
m32_11 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", color=green, community=0, file="StateSteps.cs", label="1: _state = new ProcessingState(JobSteps.DefaultJobId, ''SomeReason'', ''TestServer'')", span="36-36"];
m32_12 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="34-34"];
m32_101 [cluster="Unk.GetListCount", file="StateSteps.cs", label="Entry Unk.GetListCount", span=""];
m32_134 [cluster="Unk.IsFalse", file="StateSteps.cs", label="Entry Unk.IsFalse", span=""];
m32_118 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="StateSteps.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m32_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="239-239"];
m32_164 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="1: var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="241-242"];
m32_163 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="239-239"];
m32_165 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="2: DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="243-243"];
m32_19 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="46-46"];
m32_20 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", color=green, community=0, file="StateSteps.cs", label="0: _state = new EnqueuedState(JobSteps.DefaultJobId, ''SomeReason'', ''test'')", span="48-48"];
m32_21 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="46-46"];
m32_71 [cluster="Unk.GetDescriptor", file="StateSteps.cs", label="Entry Unk.GetDescriptor", span=""];
m32_18 [cluster="System.DateTime.AddDays(double)", file="StateSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m32_8 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StateSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m32_23 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="52-52"];
m32_24 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", color=green, community=0, file="StateSteps.cs", label="2: _stateMock = new Mock<JobState>(JobSteps.DefaultJobId, ''SomeReason'')", span="54-54"];
m32_25 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", color=green, community=0, file="StateSteps.cs", label="1: _stateMock.Setup(x => x.StateName).Returns(state)", span="55-55"];
m32_26 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", color=green, community=0, file="StateSteps.cs", label="2: _stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="56-56"];
m32_27 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", color=green, community=0, file="StateSteps.cs", label="2: _state = _stateMock.Object", span="58-58"];
m32_28 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="52-52"];
m32_39 [cluster="Unk.GetProperties", file="StateSteps.cs", label="Entry Unk.GetProperties", span=""];
m32_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="21-21"];
m32_1 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", color=green, community=0, file="StateSteps.cs", label="0: _state = new SucceededState(JobSteps.DefaultJobId, ''Some reason'')", span="23-23"];
m32_2 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="21-21"];
m32_13 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="StateSteps.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
m32_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m32_30 [cluster="Unk.Setup", file="StateSteps.cs", label="Entry Unk.Setup", span=""];
m32_14 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="40-40"];
m32_15 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", color=green, community=0, file="StateSteps.cs", label="1: _state = new ScheduledState(JobSteps.DefaultJobId, ''SomeReason'', DateTime.UtcNow.AddDays(1))", span="42-42"];
m32_16 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="40-40"];
m32_111 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="162-162"];
m32_112 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", color=green, community=0, file="StateSteps.cs", label="1: Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="164-164"];
m32_113 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="162-162"];
m32_72 [cluster="Unk.Unapply", file="StateSteps.cs", label="Entry Unk.Unapply", span=""];
m32_56 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70"];
m32_57 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", color=green, community=0, file="StateSteps.cs", label="1: var transaction = Redis.Client.CreateTransaction()", span="72-72"];
m32_58 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", color=green, community=0, file="StateSteps.cs", label="0: _state.Apply(transaction)", span="74-74"];
m32_59 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", color=green, community=0, file="StateSteps.cs", label="1: transaction.Commit()", span="75-75"];
m32_60 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70"];
m32_85 [cluster="Unk.ForEach", file="StateSteps.cs", label="Entry Unk.ForEach", span=""];
m32_114 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="168-168"];
m32_115 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", color=green, community=0, file="StateSteps.cs", label="0: DictionaryAssert.ContainsFollowingItems(table, _state.GetProperties())", span="170-170"];
m32_116 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="168-168"];
m32_3 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="StateSteps.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m32_185 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="263-263"];
m32_33 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="55-55"];
m32_36 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="56-56"];
m32_34 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="2: x.StateName", span="55-55"];
m32_35 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="55-55"];
m32_37 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: x.GetProperties()", span="56-56"];
m32_38 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="56-56"];
m32_47 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="65-65"];
m32_50 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="66-66"];
m32_53 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="66-66"];
m32_48 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="0: x.GetProperties()", span="65-65"];
m32_49 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="65-65"];
m32_51 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: x[''Name'']", span="66-66"];
m32_52 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="66-66"];
m32_54 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: x[''Value'']", span="66-66"];
m32_55 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="66-66"];
m32_86 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="117-123"];
m32_87 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: var ttl = Redis.Client.GetTimeToLive(x)", span="119-119"];
m32_88 [cluster="lambda expression", color=green, community=1, file="StateSteps.cs", label="0: Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="120-122"];
m32_89 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="117-123"];
m32_107 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="152-158"];
m32_108 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: var ttl = Redis.Client.GetTimeToLive(x)", span="154-154"];
m32_109 [cluster="lambda expression", color=green, community=1, file="StateSteps.cs", label="0: Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="155-157"];
m32_110 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="152-158"];
m32_182 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="263-263"];
m32_183 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="0: x.Apply(It.Is<IRedisTransaction>(y => y != null))", span="263-263"];
m32_184 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="263-263"];
m32_186 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="0: y != null", span="263-263"];
m32_187 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="263-263"];
m32_157 [cluster="Unk.SetContainsItem", file="StateSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m32_176 [cluster="Unk.IsNotNull", file="StateSteps.cs", label="Entry Unk.IsNotNull", span=""];
m32_76 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StateSteps.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m32_45 [cluster="Unk.Given", file="StateSteps.cs", label="Entry Unk.Given", span=""];
m32_73 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96"];
m32_74 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", color=green, community=0, file="StateSteps.cs", label="0: JobState.Apply(Redis.Client, _state)", span="98-98"];
m32_75 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96"];
m32_17 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="StateSteps.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m32_63 [cluster="Unk.Commit", file="StateSteps.cs", label="Entry Unk.Commit", span=""];
m32_123 [cluster="Unk.GetSortedSetCount", file="StateSteps.cs", label="Entry Unk.GetSortedSetCount", span=""];
m32_128 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="187-187"];
m32_129 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", color=green, community=0, file="StateSteps.cs", label="2: Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="189-189"];
m32_130 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="187-187"];
m32_96 [cluster="Unk.GetValue", file="StateSteps.cs", label="Entry Unk.GetValue", span=""];
m32_154 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="226-226"];
m32_155 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", color=green, community=0, file="StateSteps.cs", label="0: Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="228-228"];
m32_156 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="226-226"];
m32_151 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="220-220"];
m32_152 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", color=green, community=0, file="StateSteps.cs", label="2: Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="222-222"];
m32_153 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="220-220"];
m32_64 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80"];
m32_65 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", color=green, community=0, file="StateSteps.cs", label="2: var transaction = Redis.Client.CreateTransaction()", span="82-82"];
m32_66 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", color=green, community=0, file="StateSteps.cs", label="2: var descriptor = JobState.GetDescriptor(_state.StateName)", span="84-84"];
m32_68 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", color=green, community=0, file="StateSteps.cs", label="0: descriptor.Unapply(transaction, JobSteps.DefaultJobId)", span="88-88"];
m32_69 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", color=green, community=0, file="StateSteps.cs", label="0: transaction.Commit()", span="91-91"];
m32_67 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", color=green, community=0, file="StateSteps.cs", label="2: descriptor != null", span="86-86"];
m32_70 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80"];
m32_131 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="193-193"];
m32_132 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", color=green, community=0, file="StateSteps.cs", label="2: Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="195-195"];
m32_133 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="193-193"];
m32_167 [cluster="Unk.ContainsFollowingItems", file="StateSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m32_31 [cluster="Unk.Returns", file="StateSteps.cs", label="Entry Unk.Returns", span=""];
m32_181 [cluster="Unk.Verify", file="StateSteps.cs", label="Entry Unk.Verify", span=""];
m32_97 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="135-135"];
m32_98 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", color=green, community=0, file="StateSteps.cs", label="0: Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="137-137"];
m32_99 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", color=green, community=0, file="StateSteps.cs", label="1: Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="138-139"];
m32_100 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="135-135"];
m32_125 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="181-181"];
m32_126 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", color=green, community=0, file="StateSteps.cs", label="2: Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="183-183"];
m32_127 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="181-181"];
m32_61 [cluster="Unk.CreateTransaction", file="StateSteps.cs", label="Entry Unk.CreateTransaction", span=""];
m32_117 [cluster="HangFire.States.JobState.GetProperties()", file="StateSteps.cs", label="Entry HangFire.States.JobState.GetProperties()", span="24-24"];
m32_188 [file="StateSteps.cs", label="HangFire.Tests.States.StateSteps", span=""];
m33_10 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SucceededState.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m33_11 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m33_12 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Assert.IsNotNull(context)", span="29-29"];
m33_13 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", span="31-31"];
m33_14 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m33_0 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SucceededState.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m33_1 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededState.cs", label="2: WorkerCount = Environment.ProcessorCount * 5", span="13-13"];
m33_2 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SucceededState.cs", label="ServerName = Environment.MachineName", span="14-14"];
m33_3 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SucceededState.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="15-15"];
m33_9 [cluster="string.Format(string, object, object)", file="SucceededState.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m33_4 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m33_5 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Assert.IsNotNull(context)", span="22-22"];
m33_6 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24"];
m33_8 [cluster="Unk.IsNotNull", file="SucceededState.cs", label="Entry Unk.IsNotNull", span=""];
m33_7 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="HangFire.BackgroundJobServerOptions", span=""];
m33_15 [file="SucceededState.cs", label="HangFire.Tests.TestStateChangedFilter", span=""];
m35_22 [cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m35_23 [cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Worker.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m35_24 [cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m35_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Worker.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m35_26 [cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66"];
m35_27 [cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="Worker.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m35_28 [cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66"];
m35_25 [cluster="Unk.OnScenarioStart", file="Worker.cs", label="Entry Unk.OnScenarioStart", span=""];
m35_29 [cluster="Unk.CollectScenarioErrors", file="Worker.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m35_100 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", span="230-230"];
m35_102 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="234-234"];
m35_107 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="this.ScenarioCleanup()", span="244-244"];
m35_101 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the state should be changed to the Failed state when it could not find its type'', ((string[])(null)))", span="232-232"];
m35_103 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="testRunner.Given(''a job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="236-236"];
m35_106 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="testRunner.Then(''the job should be moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="242-242"];
m35_104 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="238-238"];
m35_105 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="240-240"];
m35_108 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", span="230-230"];
m35_109 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", span="252-252"];
m35_111 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="257-257"];
m35_118 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="this.ScenarioCleanup()", span="272-272"];
m35_110 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the state should not be changed if allowed current states array does not contain '' +\r\n                    ''the current state'', ((string[])(null)))", span="254-255"];
m35_112 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="259-259"];
m35_117 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="testRunner.And(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="270-270"];
m35_115 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="testRunner.Then(''the job should be in the Old state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="266-266"];
m35_113 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="261-261"];
m35_116 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="testRunner.And(''the old state should not be unapplied'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="268-268"];
m35_114 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\' allowing only transition from the \'En'' +\r\n                    ''queued\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="263-264"];
m35_119 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", span="252-252"];
m35_120 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="279-279"];
m35_122 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="283-283"];
m35_132 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="this.ScenarioCleanup()", span="304-304"];
m35_121 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State changing filters should be executed in the order they were defined'', ((string[])(null)))", span="281-281"];
m35_129 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="table4.AddRow(new string[] {\r\n                        ''first''})", span="297-298"];
m35_130 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="table4.AddRow(new string[] {\r\n                        ''second''})", span="299-300"];
m35_123 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="285-285"];
m35_131 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.Then(''changing filters should be executed in the following order:'', ((string)(null)), table4, ''Then '')", span="302-302"];
m35_128 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="295-296"];
m35_124 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="287-287"];
m35_125 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="289-289"];
m35_126 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.And(''a state changing filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="291-291"];
m35_127 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="293-293"];
m35_133 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="279-279"];
m35_164 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="381-381"];
m35_166 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="385-385"];
m35_170 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="this.ScenarioCleanup()", span="393-393"];
m35_165 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the unexisting job should not be changed'', ((string[])(null)))", span="383-383"];
m35_167 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="387-387"];
m35_169 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="testRunner.Then(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="391-391"];
m35_168 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="389-389"];
m35_171 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="381-381"];
m35_207 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", span="483-483"];
m35_209 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="487-487"];
m35_217 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="this.ScenarioCleanup()", span="504-504"];
m35_208 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''OnStateUnapplied method should not be called when the state is empty'', ((string[])(null)))", span="485-485"];
m35_215 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="table8.AddRow(new string[] {\r\n                        ''first::OnStateApplied''})", span="499-500"];
m35_210 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="489-489"];
m35_216 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="testRunner.Then(''state applied filter methods should be executed in the following order:'', ((string)(null)), table8, ''Then '')", span="502-502"];
m35_214 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="497-498"];
m35_211 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="testRunner.And(''a job with empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="491-491"];
m35_212 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="testRunner.And(''a state applied filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="493-493"];
m35_213 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="495-495"];
m35_218 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", span="483-483"];
m35_41 [cluster="Unk.And", file="Worker.cs", label="Entry Unk.And", span=""];
m35_191 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="447-447"];
m35_193 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="451-451"];
m35_205 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="this.ScenarioCleanup()", span="476-476"];
m35_192 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State applied filters should be executed in the order they were defined'', ((string[])(null)))", span="449-449"];
m35_200 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="table7.AddRow(new string[] {\r\n                        ''first::OnStateUnapplied''})", span="465-466"];
m35_201 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="table7.AddRow(new string[] {\r\n                        ''second::OnStateUnapplied''})", span="467-468"];
m35_202 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="table7.AddRow(new string[] {\r\n                        ''first::OnStateApplied''})", span="469-470"];
m35_203 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="table7.AddRow(new string[] {\r\n                        ''second::OnStateApplied''})", span="471-472"];
m35_194 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="453-453"];
m35_204 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.Then(''state applied filter methods should be executed in the following order:'', ((string)(null)), table7, ''Then '')", span="474-474"];
m35_199 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="463-464"];
m35_195 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="455-455"];
m35_196 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.And(''a state applied filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="457-457"];
m35_197 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.And(''a state applied filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="459-459"];
m35_198 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="461-461"];
m35_206 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="447-447"];
m35_172 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", span="400-400"];
m35_174 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="404-404"];
m35_179 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="this.ScenarioCleanup()", span="414-414"];
m35_173 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Changing filters are should not be executed for unexisting job'', ((string[])(null)))", span="402-402"];
m35_175 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="406-406"];
m35_178 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="testRunner.Then(''changing filters should not be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="412-412"];
m35_176 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="408-408"];
m35_177 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="410-410"];
m35_180 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", span="400-400"];
m35_134 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", span="311-311"];
m35_136 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="315-315"];
m35_147 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="this.ScenarioCleanup()", span="340-340"];
m35_135 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state changing filters should be able to modify the state'', ((string[])(null)))", span="313-313"];
m35_145 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="table5.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''AnotherTest''})", span="334-336"];
m35_137 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="317-317"];
m35_146 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.And(''the job\'s state entry should contain the following items:'', ((string)(null)), table5, ''And '')", span="338-338"];
m35_144 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="331-333"];
m35_141 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.Then(''the job state should be changed to \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="325-325"];
m35_138 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="319-319"];
m35_139 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.And(''a state changing filter \'first\' that changes the state to the \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="321-321"];
m35_142 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.And(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="327-327"];
m35_143 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.And(''the \'AnotherTest\' state should be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="329-329"];
m35_140 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="323-323"];
m35_148 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", span="311-311"];
m35_0 [cluster="Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", file="Worker.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", span="22-22"];
m35_1 [cluster="Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", file="Worker.cs", label="Exit Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", span="22-22"];
m35_2 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m35_3 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="serverId == null", span="29-29"];
m35_5 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="queues == null", span="30-30"];
m35_7 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="ServerId = serverId", span="32-32"];
m35_8 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="Queues = queues", span="33-33"];
m35_9 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="WorkerNumber = workerNumber", span="34-34"];
m35_4 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="throw new ArgumentNullException(''serverId'');", span="29-29"];
m35_6 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="throw new ArgumentNullException(''queues'');", span="30-30"];
m35_10 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", file="Worker.cs", label="Exit Hangfire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m35_44 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", span="96-96"];
m35_46 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m35_51 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="this.ScenarioCleanup()", span="110-110"];
m35_45 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The new state should be applied'', ((string[])(null)))", span="98-98"];
m35_47 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m35_50 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="testRunner.Then(''the \'Test\' state should be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m35_48 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m35_49 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m35_52 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", span="96-96"];
m35_42 [cluster="Unk.When", file="Worker.cs", label="Entry Unk.When", span=""];
m35_75 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", span="166-166"];
m35_82 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", color=green, community=0, file="Worker.cs", label="0: table2.AddRow(new string[] {\r\n                        ''CreatedAt'',\r\n                        ''<UtcNow timestamp>''})", span="181-183"];
m35_81 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="178-180"];
m35_83 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", color=green, community=0, file="Worker.cs", label="0: table2.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="184-186"];
m35_84 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="testRunner.Then(''the last history entry should contain the following items:'', ((string)(null)), table2, ''Then '')", span="188-188"];
m35_77 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="170-170"];
m35_85 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="this.ScenarioCleanup()", span="190-190"];
m35_76 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job history should be appended'', ((string[])(null)))", span="168-168"];
m35_80 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176"];
m35_78 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="172-172"];
m35_79 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174"];
m35_86 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", span="166-166"];
m35_74 [cluster="Unk.AddRow", file="Worker.cs", label="Entry Unk.AddRow", span=""];
m35_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="Worker.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m35_149 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", span="347-347"];
m35_151 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="351-351"];
m35_162 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="this.ScenarioCleanup()", span="374-374"];
m35_150 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job history should contain every changed state'', ((string[])(null)))", span="349-349"];
m35_158 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="table6.AddRow(new string[] {\r\n                        ''YetAnotherTest''})", span="365-366"];
m35_159 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="table6.AddRow(new string[] {\r\n                        ''AnotherTest''})", span="367-368"];
m35_160 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="table6.AddRow(new string[] {\r\n                        ''Test''})", span="369-370"];
m35_152 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="353-353"];
m35_161 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="testRunner.Then(''the history for the following states should be added:'', ((string)(null)), table6, ''Then '')", span="372-372"];
m35_157 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''State''})", span="363-364"];
m35_153 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="355-355"];
m35_154 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="testRunner.And(''a state changing filter \'first\' that changes the state to the \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="357-357"];
m35_155 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="testRunner.And(''a state changing filter \'second\' that changes the state to the \'YetAnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="359-359"];
m35_156 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="361-361"];
m35_163 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", span="347-347"];
m35_43 [cluster="Unk.Then", file="Worker.cs", label="Entry Unk.Then", span=""];
m35_40 [cluster="Unk.Given", file="Worker.cs", label="Entry Unk.Given", span=""];
m35_87 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", span="197-197"];
m35_89 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="201-201"];
m35_98 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="this.ScenarioCleanup()", span="223-223"];
m35_88 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the job history record and the state entry should contain the state properties'', ((string[])(null)))", span="199-199"];
m35_91 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="table3.AddRow(new string[] {\r\n                        ''Server'',\r\n                        ''TestServer''})", span="206-208"];
m35_92 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="table3.AddRow(new string[] {\r\n                        ''Worker'',\r\n                        ''#3''})", span="209-211"];
m35_90 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="203-205"];
m35_97 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="testRunner.And(''the state entry should contain all of the above properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="221-221"];
m35_99 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", span="197-197"];
m35_93 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state with the following properties:'', ((string)(null)), table3, ''Given '')", span="213-213"];
m35_96 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="testRunner.Then(''the last history entry should contain all of the above properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="219-219"];
m35_94 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="215-215"];
m35_95 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="217-217"];
m35_73 [cluster="TechTalk.SpecFlow.Table.cstr", file="Worker.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m35_72 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", span="138-138"];
m35_64 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="Worker.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="142-142"];
m35_63 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state entry should contain the state name'', ((string[])(null)))", span="140-140"];
m35_65 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="144-144"];
m35_71 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="this.ScenarioCleanup()", span="159-159"];
m35_62 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", span="138-138"];
m35_66 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="146-146"];
m35_69 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="table1.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="153-155"];
m35_70 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="testRunner.Then(''the job\'s state entry should contain the following items:'', ((string)(null)), table1, ''Then '')", span="157-157"];
m35_67 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="148-148"];
m35_68 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="Worker.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="150-152"];
m35_181 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", span="422-422"];
m35_183 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="427-427"];
m35_189 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="this.ScenarioCleanup()", span="440-440"];
m35_182 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Changing filters should not be executed if the transition is not allowed for the '' +\r\n                    ''current state'', ((string[])(null)))", span="424-425"];
m35_184 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="429-429"];
m35_188 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="testRunner.Then(''changing filters should not be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="438-438"];
m35_185 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="431-431"];
m35_187 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\' allowing only transition from the \'En'' +\r\n                    ''queued\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="435-436"];
m35_186 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="433-433"];
m35_190 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", span="422-422"];
m35_30 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", span="75-75"];
m35_32 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m35_37 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="this.ScenarioCleanup()", span="89-89"];
m35_31 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the job should be changed'', ((string[])(null)))", span="77-77"];
m35_33 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m35_36 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="testRunner.Then(''the job state should be changed to \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m35_34 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m35_35 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m35_38 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", span="75-75"];
m35_53 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="Entry HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117"];
m35_55 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="121-121"];
m35_60 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="this.ScenarioCleanup()", span="131-131"];
m35_54 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''An old state should be unapplied'', ((string[])(null)))", span="119-119"];
m35_56 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="123-123"];
m35_59 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="testRunner.Then(''the old state should be unapplied'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="129-129"];
m35_57 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="125-125"];
m35_58 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="127-127"];
m35_61 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="Worker.cs", label="Exit HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117"];
m35_12 [file="Worker.cs", label="Hangfire.Server.WorkerContext", span=""];
m35_219 [file="Worker.cs", label="HangFire.Tests.StateMachineFeature", span=""];
m0_97 -> m0_252  [key=0, style=solid];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_250  [key=2, style=dotted];
m0_252 -> m0_251  [key=2, style=dotted];
m0_253 -> m0_97  [color=blue, key=0, style=bold];
m0_101 -> m0_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_101 -> m0_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_101 -> m0_102  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_97  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_27  [key=2, style=dotted];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_102 -> m0_107  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_105 -> m0_101  [color=blue, key=0, style=bold];
m0_235 -> m0_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_235 -> m0_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_235 -> m0_236  [key=0, style=solid];
m0_237 -> m0_5  [key=2, style=dotted];
m0_237 -> m0_241  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_113  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_27  [key=2, style=dotted];
m0_240 -> m0_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_238  [key=0, style=solid];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_238 -> m0_243  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_241 -> m0_235  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_7 -> m0_7  [color=green, key=3, label="method methodReturn System.Collections.Generic.IDictionary<string, string> SerializeProperties", style=bold];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_9  [color=green, key=2, style=dotted];
m0_7 -> m0_10  [color=green, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_225 -> m0_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_225 -> m0_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_225 -> m0_226  [key=0, style=solid];
m0_227 -> m0_5  [key=2, style=dotted];
m0_227 -> m0_231  [key=0, style=solid];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_97  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_27  [key=2, style=dotted];
m0_230 -> m0_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_228  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_230  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_228 -> m0_233  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_231 -> m0_225  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_27  [key=2, style=dotted];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_67 -> m0_65  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_27  [key=2, style=dotted];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_251 -> m0_256  [key=0, style=solid];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_258  [key=2, style=dotted];
m0_257 -> m0_251  [color=blue, key=0, style=bold];
m0_195 -> m0_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_195 -> m0_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_195 -> m0_196  [key=0, style=solid];
m0_197 -> m0_5  [key=2, style=dotted];
m0_197 -> m0_201  [key=0, style=solid];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_97  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_27  [key=2, style=dotted];
m0_200 -> m0_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_198  [key=0, style=solid];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_200  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_198 -> m0_203  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_201 -> m0_195  [color=blue, key=0, style=bold];
m0_141 -> m0_254  [key=0, style=solid];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_250  [key=2, style=dotted];
m0_254 -> m0_251  [key=2, style=dotted];
m0_255 -> m0_141  [color=blue, key=0, style=bold];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_38 -> m0_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_27  [key=2, style=dotted];
m0_40 -> m0_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m0_41 -> m0_38  [color=blue, key=0, style=bold];
m0_205 -> m0_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_205 -> m0_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_205 -> m0_206  [key=0, style=solid];
m0_207 -> m0_5  [key=2, style=dotted];
m0_207 -> m0_211  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_113  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_27  [key=2, style=dotted];
m0_210 -> m0_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_208  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_210  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_208 -> m0_213  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_211 -> m0_205  [color=blue, key=0, style=bold];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_47 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_47 -> m0_48  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_27  [key=2, style=dotted];
m0_49 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_52  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m0_50 -> m0_47  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_27  [key=2, style=dotted];
m0_84 -> m0_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_85 -> m0_83  [color=blue, key=0, style=bold];
m0_175 -> m0_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_175 -> m0_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_175 -> m0_176  [key=0, style=solid];
m0_177 -> m0_5  [key=2, style=dotted];
m0_177 -> m0_181  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_97  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_27  [key=2, style=dotted];
m0_180 -> m0_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_178  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_180  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_178 -> m0_183  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_181 -> m0_175  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_92  [key=2, style=dotted];
m0_91 -> m0_89  [color=blue, key=0, style=bold];
m0_27 -> m0_245  [key=0, style=solid];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_247  [key=2, style=dotted];
m0_246 -> m0_27  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_54 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_59  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_27  [key=2, style=dotted];
m0_57 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m0_58 -> m0_54  [color=blue, key=0, style=bold];
m0_132 -> m0_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_132 -> m0_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_135  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m0_132 -> m0_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_134 -> m0_5  [key=2, style=dotted];
m0_134 -> m0_140  [key=0, style=solid];
m0_136 -> m0_5  [key=2, style=dotted];
m0_136 -> m0_140  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_141  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_142  [key=2, style=dotted];
m0_139 -> m0_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [key=0, style=solid];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_139  [color=darkseagreen4, key=1, label=sql, style=dashed];
m0_137 -> m0_144  [color=darkseagreen4, key=1, label=sql, style=dashed];
m0_140 -> m0_132  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_27  [key=2, style=dotted];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_71  [color=blue, key=0, style=bold];
m0_149 -> m0_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_149 -> m0_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_149 -> m0_150  [key=0, style=solid];
m0_151 -> m0_5  [key=2, style=dotted];
m0_151 -> m0_155  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_141  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_27  [key=2, style=dotted];
m0_154 -> m0_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_152  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_154  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_152 -> m0_157  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_155 -> m0_149  [color=blue, key=0, style=bold];
m0_92 -> m0_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_92 -> m0_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_97  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_27  [key=2, style=dotted];
m0_95 -> m0_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m0_93 -> m0_99  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m0_96 -> m0_92  [color=blue, key=0, style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_27  [key=2, style=dotted];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_32  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=0, style=solid];
m0_2 -> m0_5  [color=green, key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_185 -> m0_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_185 -> m0_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_185 -> m0_186  [key=0, style=solid];
m0_187 -> m0_5  [key=2, style=dotted];
m0_187 -> m0_191  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_141  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_27  [key=2, style=dotted];
m0_190 -> m0_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_188  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_190  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_188 -> m0_193  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_191 -> m0_185  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_24  [color=blue, key=0, style=bold];
m0_172 -> m0_173  [key=0, style=solid];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_10 -> m0_13  [color=green, key=1, label=SqlConnection, style=dashed];
m0_10 -> m0_15  [color=green, key=1, label=SqlConnection, style=dashed];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_17  [color=green, key=2, style=dotted];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_12 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_18  [color=green, key=2, style=dotted];
m0_13 -> m0_19  [color=green, key=2, style=dotted];
m0_13 -> m0_21  [color=green, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_16  [color=green, key=0, style=solid];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_15 -> m0_14  [color=green, key=0, style=solid];
m0_15 -> m0_20  [color=green, key=2, style=dotted];
m0_16 -> m0_10  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m0_144 -> m0_18  [key=2, style=dotted];
m0_144 -> m0_19  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_169 -> m0_18  [key=2, style=dotted];
m0_169 -> m0_19  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_171  [key=2, style=dotted];
m0_169 -> m0_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_19  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_36 -> m0_19  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_43 -> m0_19  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_46  [key=2, style=dotted];
m0_52 -> m0_19  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_45  [key=2, style=dotted];
m0_52 -> m0_46  [key=2, style=dotted];
m0_69 -> m0_19  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_75 -> m0_19  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_31  [key=2, style=dotted];
m0_81 -> m0_19  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_87 -> m0_19  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_31  [key=2, style=dotted];
m0_99 -> m0_19  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_107 -> m0_19  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_115 -> m0_19  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_122 -> m0_19  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_130 -> m0_19  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_157 -> m0_19  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_183 -> m0_19  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_193 -> m0_19  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_31  [key=2, style=dotted];
m0_203 -> m0_19  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_31  [key=2, style=dotted];
m0_213 -> m0_19  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_31  [key=2, style=dotted];
m0_223 -> m0_19  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_233 -> m0_19  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_243 -> m0_19  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_212 -> m0_213  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_232 -> m0_233  [key=0, style=solid];
m0_242 -> m0_243  [key=0, style=solid];
m0_145 -> m0_143  [color=blue, key=0, style=bold];
m0_146 -> m0_147  [key=0, style=solid];
m0_170 -> m0_168  [color=blue, key=0, style=bold];
m0_30 -> m0_28  [color=blue, key=0, style=bold];
m0_37 -> m0_35  [color=blue, key=0, style=bold];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_53 -> m0_51  [color=blue, key=0, style=bold];
m0_70 -> m0_68  [color=blue, key=0, style=bold];
m0_76 -> m0_74  [color=blue, key=0, style=bold];
m0_82 -> m0_80  [color=blue, key=0, style=bold];
m0_88 -> m0_86  [color=blue, key=0, style=bold];
m0_100 -> m0_98  [color=blue, key=0, style=bold];
m0_108 -> m0_106  [color=blue, key=0, style=bold];
m0_116 -> m0_114  [color=blue, key=0, style=bold];
m0_123 -> m0_121  [color=blue, key=0, style=bold];
m0_131 -> m0_129  [color=blue, key=0, style=bold];
m0_158 -> m0_156  [color=blue, key=0, style=bold];
m0_184 -> m0_182  [color=blue, key=0, style=bold];
m0_194 -> m0_192  [color=blue, key=0, style=bold];
m0_204 -> m0_202  [color=blue, key=0, style=bold];
m0_214 -> m0_212  [color=blue, key=0, style=bold];
m0_224 -> m0_222  [color=blue, key=0, style=bold];
m0_234 -> m0_232  [color=blue, key=0, style=bold];
m0_244 -> m0_242  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=2, style=dotted];
m0_63 -> m0_61  [color=blue, key=0, style=bold];
m0_147 -> m0_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m0_147 -> m0_148  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_148 -> m0_146  [color=blue, key=0, style=bold];
m0_174 -> m0_172  [color=blue, key=0, style=bold];
m0_159 -> m0_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_159 -> m0_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_162  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_159 -> m0_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_161 -> m0_5  [key=2, style=dotted];
m0_161 -> m0_167  [key=0, style=solid];
m0_163 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_167  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_97  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_142  [key=2, style=dotted];
m0_166 -> m0_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_162  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_164  [key=0, style=solid];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_166  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_164 -> m0_169  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_167 -> m0_159  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_117 -> m0_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_113  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_27  [key=2, style=dotted];
m0_119 -> m0_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_120 -> m0_117  [color=blue, key=0, style=bold];
m0_113 -> m0_248  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_250  [key=2, style=dotted];
m0_248 -> m0_251  [key=2, style=dotted];
m0_249 -> m0_113  [color=blue, key=0, style=bold];
m0_215 -> m0_220  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_215 -> m0_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_215 -> m0_216  [key=0, style=solid];
m0_217 -> m0_5  [key=2, style=dotted];
m0_217 -> m0_221  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_141  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_27  [key=2, style=dotted];
m0_220 -> m0_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_218  [key=0, style=solid];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_220  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_218 -> m0_223  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_221 -> m0_215  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_109 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_113  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_27  [key=2, style=dotted];
m0_111 -> m0_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_112 -> m0_109  [color=blue, key=0, style=bold];
m0_124 -> m0_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_124 -> m0_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_124 -> m0_125  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_113  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_27  [key=2, style=dotted];
m0_127 -> m0_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m0_125 -> m0_130  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m0_128 -> m0_124  [color=blue, key=0, style=bold];
m0_259 -> m0_7  [color=green, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_13  [color=green, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_14  [color=green, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_55  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_57  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_66  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_72  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_78  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_84  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_90  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_95  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_104  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_110  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_111  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_118  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_119  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_126  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_127  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_138  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_153  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_154  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_165  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_166  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_190  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_199  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_200  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_209  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_219  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_229  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_230  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_239  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_245  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_248  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_254  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_293 -> m0_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_293 -> m0_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_294 -> m0_144  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m0_295 -> m0_144  [color=darkseagreen4, key=1, label=sql, style=dashed];
m0_298 -> m0_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_298 -> m0_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_299 -> m0_169  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_300 -> m0_169  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_260 -> m0_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_261 -> m0_29  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_262 -> m0_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_263 -> m0_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_264 -> m0_43  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m0_265 -> m0_43  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m0_266 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_267 -> m0_52  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m0_268 -> m0_52  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m0_272 -> m0_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_273 -> m0_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_274 -> m0_75  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_275 -> m0_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_276 -> m0_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_277 -> m0_87  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_278 -> m0_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_279 -> m0_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_280 -> m0_99  [color=darkseagreen4, key=1, label=double, style=dashed];
m0_281 -> m0_99  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m0_282 -> m0_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_283 -> m0_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_284 -> m0_107  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_285 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_286 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_287 -> m0_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_288 -> m0_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_289 -> m0_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_290 -> m0_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_291 -> m0_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_292 -> m0_130  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m0_296 -> m0_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_297 -> m0_157  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_301 -> m0_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_302 -> m0_183  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_303 -> m0_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_304 -> m0_193  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_305 -> m0_193  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_306 -> m0_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_307 -> m0_203  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_308 -> m0_203  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_309 -> m0_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_310 -> m0_213  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_311 -> m0_213  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_312 -> m0_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_313 -> m0_223  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_314 -> m0_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_315 -> m0_233  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_316 -> m0_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_317 -> m0_243  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_269 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_270 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_271 -> m0_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_35  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_38  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_41  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_43  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_25  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_25  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_26  [key=2, style=dotted];
m2_35 -> m2_27  [key=2, style=dotted];
m2_38 -> m2_37  [key=0, style=solid];
m2_38 -> m2_28  [key=2, style=dotted];
m2_38 -> m2_38  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_41 -> m2_40  [key=0, style=solid];
m2_41 -> m2_29  [key=2, style=dotted];
m2_41 -> m2_30  [key=2, style=dotted];
m2_41 -> m2_41  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_43 -> m2_44  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_39  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_42  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=0, style=solid];
m2_44 -> m2_32  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_0 -> m2_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_0  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [color=red, key=0, style=solid];
m2_45 -> m2_48  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m2_45 -> m2_52  [color=red, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m2_45 -> m2_55  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m2_46 -> m2_47  [color=red, key=0, style=solid];
m2_46 -> m2_25  [color=red, key=2, style=dotted];
m2_48 -> m2_49  [color=red, key=0, style=solid];
m2_52 -> m2_51  [color=red, key=0, style=solid];
m2_52 -> m2_59  [color=red, key=2, style=dotted];
m2_52 -> m2_52  [color=red, key=1, label=parameter, style=dashed];
m2_55 -> m2_54  [key=0, style=solid];
m2_55 -> m2_60  [key=2, style=dotted];
m2_55 -> m2_30  [key=2, style=dotted];
m2_55 -> m2_55  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_47 -> m2_48  [color=red, key=0, style=solid];
m2_47 -> m2_49  [color=red, key=0, style=solid];
m2_49 -> m2_50  [color=red, key=0, style=solid];
m2_49 -> m2_26  [color=red, key=2, style=dotted];
m2_49 -> m2_27  [color=red, key=2, style=dotted];
m2_50 -> m2_51  [color=red, key=0, style=solid];
m2_50 -> m2_53  [color=red, key=0, style=solid];
m2_51 -> m2_52  [color=red, key=0, style=solid];
m2_51 -> m2_53  [color=red, key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_56  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_31  [key=2, style=dotted];
m2_58 -> m2_45  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_63  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformedContext", style=dashed];
m2_61 -> m2_65  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformedContext", style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_25  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_26  [key=2, style=dotted];
m2_63 -> m2_27  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_66 -> m2_61  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_10 -> m2_14  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_10 -> m2_18  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_10 -> m2_21  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_25  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_25  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_18 -> m2_17  [key=0, style=solid];
m2_18 -> m2_28  [key=2, style=dotted];
m2_18 -> m2_18  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_21 -> m2_20  [key=0, style=solid];
m2_21 -> m2_29  [key=2, style=dotted];
m2_21 -> m2_30  [key=2, style=dotted];
m2_21 -> m2_21  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_26  [key=2, style=dotted];
m2_15 -> m2_27  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_19  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_31  [key=2, style=dotted];
m2_24 -> m2_10  [color=blue, key=0, style=bold];
m2_67 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_4  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_5  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_6  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_7  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_13  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_15  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_16  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_17  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_19  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_20  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_22  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_35  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_36  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_37  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_40  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_42  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_47  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_49  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_50  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_51  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_53  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_54  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_56  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_63  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_64  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_10  [color=green, key=2, style=dotted];
m3_7 -> m3_12  [color=green, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_11  [color=green, key=2, style=dotted];
m3_9 -> m3_6  [color=blue, key=0, style=bold];
m3_190 -> m3_191  [key=0, style=solid];
m3_191 -> m3_23  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_192 -> m3_10  [key=2, style=dotted];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_121  [key=2, style=dotted];
m3_192 -> m3_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_193 -> m3_24  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_205  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_194 -> m3_10  [key=2, style=dotted];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_195 -> m3_190  [color=blue, key=0, style=bold];
m3_53 -> m3_219  [key=0, style=solid];
m3_219 -> m3_220  [key=0, style=solid];
m3_220 -> m3_53  [color=blue, key=0, style=bold];
m3_101 -> m3_240  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_101 -> m3_239  [key=0, style=solid];
m3_240 -> m3_11  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_239 -> m3_240  [key=0, style=solid];
m3_241 -> m3_101  [color=blue, key=0, style=bold];
m3_24 -> m3_251  [key=0, style=solid];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_253  [key=2, style=dotted];
m3_252 -> m3_24  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_4  [color=green, key=2, style=dotted];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_5  [color=green, key=2, style=dotted];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_91 -> m3_92  [key=0, style=solid];
m3_93 -> m3_23  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_94 -> m3_24  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_25  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_26  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_97 -> m3_91  [color=blue, key=0, style=bold];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_38  [key=2, style=dotted];
m3_208 -> m3_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_209 -> m3_24  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_210 -> m3_25  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_211 -> m3_11  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_212 -> m3_207  [color=blue, key=0, style=bold];
m3_186 -> m3_248  [key=0, style=solid];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_250  [key=2, style=dotted];
m3_249 -> m3_186  [color=blue, key=0, style=bold];
m3_102 -> m3_103  [key=0, style=solid];
m3_104 -> m3_23  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_105 -> m3_24  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_25  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_107 -> m3_26  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_108 -> m3_102  [color=blue, key=0, style=bold];
m3_54 -> m3_55  [key=0, style=solid];
m3_56 -> m3_23  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_57 -> m3_24  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_25  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_26  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_60 -> m3_54  [color=blue, key=0, style=bold];
m3_64 -> m3_56  [color=darkorchid, key=3, label="Parameter variable int intArg", style=bold];
m3_64 -> m3_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_64 -> m3_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_64 -> m3_244  [key=0, style=solid];
m3_245 -> m3_11  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_246 -> m3_11  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_244 -> m3_245  [key=0, style=solid];
m3_247 -> m3_64  [color=blue, key=0, style=bold];
m3_65 -> m3_66  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_79  [key=2, style=dotted];
m3_72 -> m3_24  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_25  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_26  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_68 -> m3_71  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_77  [key=2, style=dotted];
m3_69 -> m3_71  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_78  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_76  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_75 -> m3_65  [color=blue, key=0, style=bold];
m3_162 -> m3_163  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_38  [key=2, style=dotted];
m3_164 -> m3_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_165 -> m3_24  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_174  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_166 -> m3_10  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_167 -> m3_26  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_163 -> m3_164  [key=0, style=solid];
m3_168 -> m3_162  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [color=green, key=0, style=solid];
m3_17 -> m3_18  [color=green, key=0, style=solid];
m3_18 -> m3_19  [color=green, key=0, style=solid];
m3_18 -> m3_23  [color=green, key=2, style=dotted];
m3_18 -> m3_27  [color=green, key=1, label="lambda expression", style=dashed];
m3_19 -> m3_20  [color=green, key=0, style=solid];
m3_19 -> m3_24  [color=green, key=2, style=dotted];
m3_20 -> m3_21  [color=green, key=0, style=solid];
m3_20 -> m3_25  [color=green, key=2, style=dotted];
m3_21 -> m3_22  [color=green, key=0, style=solid];
m3_21 -> m3_26  [color=green, key=2, style=dotted];
m3_22 -> m3_16  [color=blue, key=0, style=bold];
m3_113 -> m3_114  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_121  [key=2, style=dotted];
m3_115 -> m3_122  [key=2, style=dotted];
m3_115 -> m3_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_116 -> m3_23  [key=2, style=dotted];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_117 -> m3_24  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_131  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_118 -> m3_10  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_120  [key=2, style=dotted];
m3_119 -> m3_113  [color=blue, key=0, style=bold];
m3_149 -> m3_150  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_157  [key=2, style=dotted];
m3_153 -> m3_24  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_160  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_154 -> m3_10  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_150 -> m3_152  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_150 -> m3_151  [key=0, style=solid];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_78  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_158  [key=2, style=dotted];
m3_156 -> m3_149  [color=blue, key=0, style=bold];
m3_43 -> m3_44  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_38  [key=2, style=dotted];
m3_45 -> m3_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_46 -> m3_24  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_25  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_26  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_49 -> m3_43  [color=blue, key=0, style=bold];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_121  [key=2, style=dotted];
m3_134 -> m3_139  [key=2, style=dotted];
m3_134 -> m3_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_135 -> m3_23  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_136 -> m3_24  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_147  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_137 -> m3_10  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_138 -> m3_133  [color=blue, key=0, style=bold];
m3_213 -> m3_214  [key=0, style=solid];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_13 -> m3_14  [color=green, key=0, style=solid];
m3_13 -> m3_15  [color=green, key=2, style=dotted];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [color=green, key=0, style=solid];
m3_28 -> m3_29  [color=green, key=0, style=solid];
m3_28 -> m3_30  [color=green, key=2, style=dotted];
m3_29 -> m3_27  [color=blue, key=0, style=bold];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_64  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_101  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_42  [key=2, style=dotted];
m3_131 -> m3_25  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_42  [key=2, style=dotted];
m3_147 -> m3_25  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_160 -> m3_25  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_174 -> m3_25  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_188 -> m3_25  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_205 -> m3_25  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_124 -> m3_10  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_126  [key=2, style=dotted];
m3_141 -> m3_10  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_126  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_63 -> m3_61  [color=blue, key=0, style=bold];
m3_98 -> m3_99  [key=0, style=solid];
m3_100 -> m3_98  [color=blue, key=0, style=bold];
m3_109 -> m3_110  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_129 -> m3_127  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_132 -> m3_130  [color=blue, key=0, style=bold];
m3_140 -> m3_141  [key=0, style=solid];
m3_143 -> m3_144  [key=0, style=solid];
m3_145 -> m3_143  [color=blue, key=0, style=bold];
m3_146 -> m3_147  [key=0, style=solid];
m3_148 -> m3_146  [color=blue, key=0, style=bold];
m3_159 -> m3_160  [key=0, style=solid];
m3_161 -> m3_159  [color=blue, key=0, style=bold];
m3_169 -> m3_170  [key=0, style=solid];
m3_173 -> m3_174  [key=0, style=solid];
m3_175 -> m3_173  [color=blue, key=0, style=bold];
m3_183 -> m3_184  [key=0, style=solid];
m3_187 -> m3_188  [key=0, style=solid];
m3_189 -> m3_187  [color=blue, key=0, style=bold];
m3_196 -> m3_197  [key=0, style=solid];
m3_200 -> m3_201  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_206 -> m3_204  [color=blue, key=0, style=bold];
m3_125 -> m3_123  [color=blue, key=0, style=bold];
m3_142 -> m3_140  [color=blue, key=0, style=bold];
m3_41 -> m3_39  [color=blue, key=0, style=bold];
m3_40 -> m3_42  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_52 -> m3_50  [color=blue, key=0, style=bold];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_53  [key=2, style=dotted];
m3_110 -> m3_112  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_111 -> m3_109  [color=blue, key=0, style=bold];
m3_171 -> m3_169  [color=blue, key=0, style=bold];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_172  [key=2, style=dotted];
m3_185 -> m3_183  [color=blue, key=0, style=bold];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_186  [key=2, style=dotted];
m3_198 -> m3_196  [color=blue, key=0, style=bold];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_199  [key=2, style=dotted];
m3_202 -> m3_200  [color=blue, key=0, style=bold];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_203  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_216  [key=2, style=dotted];
m3_215 -> m3_213  [color=blue, key=0, style=bold];
m3_80 -> m3_81  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_79  [key=2, style=dotted];
m3_86 -> m3_24  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_25  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_88 -> m3_26  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_82 -> m3_85  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_90  [key=2, style=dotted];
m3_83 -> m3_85  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_78  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_89 -> m3_80  [color=blue, key=0, style=bold];
m3_172 -> m3_224  [key=0, style=solid];
m3_224 -> m3_225  [key=0, style=solid];
m3_225 -> m3_172  [color=blue, key=0, style=bold];
m3_31 -> m3_32  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_38  [key=2, style=dotted];
m3_33 -> m3_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_34 -> m3_24  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_25  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_26  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_37 -> m3_31  [color=blue, key=0, style=bold];
m3_176 -> m3_177  [key=0, style=solid];
m3_177 -> m3_23  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_178 -> m3_24  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_188  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_179 -> m3_10  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_179 -> m3_181  [color=darkseagreen4, key=1, label=thrownException, style=dashed];
m3_180 -> m3_10  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_11  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_182 -> m3_176  [color=blue, key=0, style=bold];
m3_30 -> m3_242  [key=0, style=solid];
m3_242 -> m3_243  [key=0, style=solid];
m3_243 -> m3_30  [color=blue, key=0, style=bold];
m3_112 -> m3_104  [color=darkorchid, key=3, label="Parameter variable string[] argument", style=bold];
m3_112 -> m3_232  [key=0, style=solid];
m3_112 -> m3_233  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_232 -> m3_233  [key=0, style=solid];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_235  [key=2, style=dotted];
m3_234 -> m3_112  [color=blue, key=0, style=bold];
m3_199 -> m3_236  [key=0, style=solid];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_238  [key=2, style=dotted];
m3_237 -> m3_199  [color=blue, key=0, style=bold];
m3_226 -> m3_227  [key=0, style=solid];
m3_227 -> m3_120  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_228 -> m3_226  [color=blue, key=0, style=bold];
m3_42 -> m3_217  [key=0, style=solid];
m3_217 -> m3_218  [key=0, style=solid];
m3_218 -> m3_42  [color=blue, key=0, style=bold];
m3_254 -> m3_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_18  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_19  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_99  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_128  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_147  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_191  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_205  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_208  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_210  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_251  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_255 -> m3_131  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_256 -> m3_147  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_257 -> m3_160  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_258 -> m3_174  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_259 -> m3_188  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_260 -> m3_205  [color=darkseagreen4, key=1, label=performer, style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m4_8 -> m4_12  [color=green, key=1, label=IRedisTransaction, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [color=green, key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_13  [color=green, key=0, style=solid];
m4_12 -> m4_15  [color=green, key=2, style=dotted];
m4_12 -> m4_20  [color=green, key=1, label="lambda expression", style=dashed];
m4_10 -> m4_13  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_13 -> m4_8  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_3  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_16  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_21 -> m4_23  [color=green, key=2, style=dotted];
m4_21 -> m4_24  [color=green, key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_25 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_12  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_21  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m5_14 -> m5_15  [color=green, key=0, style=solid];
m5_15 -> m5_16  [color=green, key=0, style=solid];
m5_15 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_0  [color=green, key=2, style=dotted];
m5_17 -> m5_14  [color=blue, key=0, style=bold];
m5_57 -> m5_58  [color=green, key=0, style=solid];
m5_58 -> m5_59  [color=green, key=0, style=solid];
m5_58 -> m5_43  [color=green, key=2, style=dotted];
m5_59 -> m5_60  [color=green, key=0, style=solid];
m5_59 -> m5_22  [color=green, key=2, style=dotted];
m5_60 -> m5_61  [color=green, key=0, style=solid];
m5_60 -> m5_30  [color=green, key=2, style=dotted];
m5_61 -> m5_62  [color=green, key=0, style=solid];
m5_61 -> m5_66  [color=green, key=2, style=dotted];
m5_62 -> m5_63  [color=green, key=0, style=solid];
m5_62 -> m5_44  [color=green, key=2, style=dotted];
m5_63 -> m5_64  [color=green, key=0, style=solid];
m5_63 -> m5_35  [color=green, key=2, style=dotted];
m5_64 -> m5_65  [color=green, key=0, style=solid];
m5_64 -> m5_26  [color=green, key=2, style=dotted];
m5_65 -> m5_57  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [color=green, key=0, style=solid];
m5_27 -> m5_28  [color=green, key=0, style=solid];
m5_27 -> m5_29  [color=green, key=2, style=dotted];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_10 -> m5_11  [color=green, key=0, style=solid];
m5_10 -> m5_13  [color=green, key=2, style=dotted];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_12 -> m5_9  [color=blue, key=0, style=bold];
m5_67 -> m5_68  [color=green, key=0, style=solid];
m5_68 -> m5_69  [color=green, key=0, style=solid];
m5_68 -> m5_43  [color=green, key=2, style=dotted];
m5_69 -> m5_70  [color=green, key=0, style=solid];
m5_69 -> m5_22  [color=green, key=2, style=dotted];
m5_70 -> m5_71  [color=green, key=0, style=solid];
m5_70 -> m5_30  [color=green, key=2, style=dotted];
m5_71 -> m5_72  [color=green, key=0, style=solid];
m5_71 -> m5_66  [color=green, key=2, style=dotted];
m5_72 -> m5_73  [color=green, key=0, style=solid];
m5_72 -> m5_35  [color=green, key=2, style=dotted];
m5_73 -> m5_74  [color=green, key=0, style=solid];
m5_73 -> m5_44  [color=green, key=2, style=dotted];
m5_74 -> m5_75  [color=green, key=0, style=solid];
m5_74 -> m5_26  [color=green, key=2, style=dotted];
m5_75 -> m5_67  [color=blue, key=0, style=bold];
m5_36 -> m5_37  [color=green, key=0, style=solid];
m5_37 -> m5_38  [color=green, key=0, style=solid];
m5_37 -> m5_43  [color=green, key=2, style=dotted];
m5_38 -> m5_39  [color=green, key=0, style=solid];
m5_38 -> m5_22  [color=green, key=2, style=dotted];
m5_39 -> m5_40  [color=green, key=0, style=solid];
m5_39 -> m5_30  [color=green, key=2, style=dotted];
m5_40 -> m5_41  [color=green, key=0, style=solid];
m5_40 -> m5_44  [color=green, key=2, style=dotted];
m5_41 -> m5_42  [color=green, key=0, style=solid];
m5_41 -> m5_26  [color=green, key=2, style=dotted];
m5_42 -> m5_36  [color=blue, key=0, style=bold];
m5_45 -> m5_46  [color=green, key=0, style=solid];
m5_46 -> m5_47  [color=green, key=0, style=solid];
m5_46 -> m5_43  [color=green, key=2, style=dotted];
m5_47 -> m5_48  [color=green, key=0, style=solid];
m5_47 -> m5_22  [color=green, key=2, style=dotted];
m5_48 -> m5_49  [color=green, key=0, style=solid];
m5_48 -> m5_30  [color=green, key=2, style=dotted];
m5_49 -> m5_50  [color=green, key=0, style=solid];
m5_49 -> m5_55  [color=green, key=2, style=dotted];
m5_49 -> m5_51  [color=green, key=1, label=table1, style=dashed];
m5_49 -> m5_52  [color=green, key=1, label=table1, style=dashed];
m5_50 -> m5_51  [color=green, key=0, style=solid];
m5_50 -> m5_56  [color=green, key=2, style=dotted];
m5_51 -> m5_52  [color=green, key=0, style=solid];
m5_51 -> m5_56  [color=green, key=2, style=dotted];
m5_52 -> m5_53  [color=green, key=0, style=solid];
m5_52 -> m5_44  [color=green, key=2, style=dotted];
m5_53 -> m5_54  [color=green, key=0, style=solid];
m5_53 -> m5_26  [color=green, key=2, style=dotted];
m5_54 -> m5_45  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [color=green, key=0, style=solid];
m5_19 -> m5_20  [color=green, key=0, style=solid];
m5_19 -> m5_21  [color=green, key=2, style=dotted];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [color=green, key=0, style=solid];
m5_22 -> m5_37  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_22 -> m5_46  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_22 -> m5_58  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_22 -> m5_68  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_23 -> m5_25  [color=green, key=2, style=dotted];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [color=green, key=0, style=solid];
m5_31 -> m5_32  [color=green, key=0, style=solid];
m5_31 -> m5_34  [color=green, key=2, style=dotted];
m5_32 -> m5_33  [color=green, key=0, style=solid];
m5_32 -> m5_35  [color=green, key=2, style=dotted];
m5_33 -> m5_30  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_0 -> m5_16  [color=green, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_5  [color=green, key=2, style=dotted];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_2 -> m5_6  [color=green, key=2, style=dotted];
m5_2 -> m5_7  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_3 -> m5_8  [color=green, key=2, style=dotted];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_76 -> m5_38  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_39  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_41  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_47  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_48  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_53  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_59  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_60  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_64  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_69  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_70  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_74  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=2, style=dotted];
m6_4 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_8  [key=2, style=dotted];
m6_4 -> m6_9  [key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_10 -> m6_13  [color=green, key=1, label=IRedisTransaction, style=dashed];
m6_10 -> m6_11  [key=0, style=solid];
m6_13 -> m6_14  [color=green, key=0, style=solid];
m6_13 -> m6_16  [color=green, key=2, style=dotted];
m6_13 -> m6_17  [color=green, key=1, label="lambda expression", style=dashed];
m6_11 -> m6_13  [color=green, key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid];
m6_12 -> m6_15  [key=2, style=dotted];
m6_14 -> m6_10  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_17 -> m6_18  [color=green, key=0, style=solid];
m6_18 -> m6_19  [color=green, key=0, style=solid];
m6_18 -> m6_20  [color=green, key=2, style=dotted];
m6_18 -> m6_21  [color=green, key=2, style=dotted];
m6_19 -> m6_17  [color=blue, key=0, style=bold];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=2, style=dotted];
m6_29 -> m6_27  [color=blue, key=0, style=bold];
m6_22 -> m6_25  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_25 -> m6_16  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_23 -> m6_25  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_15  [key=2, style=dotted];
m6_24 -> m6_26  [key=0, style=solid];
m6_26 -> m6_22  [color=blue, key=0, style=bold];
m6_31 -> m6_13  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m6_31 -> m6_18  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m6_31 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m6_31 -> m6_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m6_32 -> m6_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_36 -> m7_37  [color=green, key=0, style=solid];
m7_37 -> m7_38  [color=green, key=0, style=solid];
m7_37 -> m7_23  [color=green, key=2, style=dotted];
m7_37 -> m7_40  [color=green, key=1, label="lambda expression", style=dashed];
m7_38 -> m7_39  [color=green, key=0, style=solid];
m7_38 -> m7_24  [color=green, key=2, style=dotted];
m7_39 -> m7_36  [color=blue, key=0, style=bold];
m7_63 -> m7_64  [color=green, key=0, style=solid];
m7_64 -> m7_65  [color=green, key=0, style=solid];
m7_64 -> m7_56  [color=green, key=2, style=dotted];
m7_65 -> m7_66  [color=green, key=0, style=solid];
m7_65 -> m7_57  [color=green, key=2, style=dotted];
m7_66 -> m7_67  [color=green, key=0, style=solid];
m7_66 -> m7_69  [color=green, key=2, style=dotted];
m7_66 -> m7_58  [color=green, key=2, style=dotted];
m7_66 -> m7_70  [color=green, key=1, label="lambda expression", style=dashed];
m7_67 -> m7_68  [color=green, key=0, style=solid];
m7_67 -> m7_69  [color=green, key=2, style=dotted];
m7_67 -> m7_58  [color=green, key=2, style=dotted];
m7_67 -> m7_73  [color=green, key=1, label="lambda expression", style=dashed];
m7_68 -> m7_63  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_23  [color=green, key=2, style=dotted];
m7_20 -> m7_25  [color=green, key=1, label="lambda expression", style=dashed];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_24  [color=green, key=2, style=dotted];
m7_22 -> m7_19  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_8  [color=green, key=2, style=dotted];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_9  [color=green, key=2, style=dotted];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_10  [color=green, key=2, style=dotted];
m7_4 -> m7_5  [color=green, key=0, style=solid];
m7_4 -> m7_11  [color=green, key=2, style=dotted];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_12  [color=green, key=2, style=dotted];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_13  [color=green, key=2, style=dotted];
m7_6 -> m7_14  [color=green, key=2, style=dotted];
m7_6 -> m7_15  [color=green, key=1, label="lambda expression", style=dashed];
m7_7 -> m7_0  [color=blue, key=0, style=bold];
m7_77 -> m7_78  [color=green, key=0, style=solid];
m7_78 -> m7_79  [color=green, key=0, style=solid];
m7_78 -> m7_86  [color=green, key=2, style=dotted];
m7_78 -> m7_83  [color=green, key=1, label=component1, style=dashed];
m7_79 -> m7_80  [color=green, key=0, style=solid];
m7_79 -> m7_13  [color=green, key=2, style=dotted];
m7_79 -> m7_87  [color=green, key=2, style=dotted];
m7_79 -> m7_88  [color=green, key=1, label="lambda expression", style=dashed];
m7_79 -> m7_92  [color=green, key=1, label="lambda expression", style=dashed];
m7_83 -> m7_84  [color=green, key=0, style=solid];
m7_83 -> m7_58  [color=green, key=2, style=dotted];
m7_83 -> m7_96  [color=green, key=1, label="lambda expression", style=dashed];
m7_80 -> m7_81  [color=green, key=0, style=solid];
m7_80 -> m7_86  [color=green, key=2, style=dotted];
m7_80 -> m7_84  [color=green, key=1, label=component2, style=dashed];
m7_82 -> m7_83  [color=green, key=0, style=solid];
m7_82 -> m7_57  [color=green, key=2, style=dotted];
m7_84 -> m7_85  [color=green, key=0, style=solid];
m7_84 -> m7_58  [color=green, key=2, style=dotted];
m7_84 -> m7_99  [color=green, key=1, label="lambda expression", style=dashed];
m7_81 -> m7_82  [color=green, key=0, style=solid];
m7_81 -> m7_56  [color=green, key=2, style=dotted];
m7_85 -> m7_77  [color=blue, key=0, style=bold];
m7_56 -> m7_111  [color=green, key=0, style=solid];
m7_111 -> m7_112  [color=green, key=0, style=solid];
m7_111 -> m7_28  [color=green, key=2, style=dotted];
m7_112 -> m7_56  [color=blue, key=0, style=bold];
m7_86 -> m7_113  [color=green, key=0, style=solid];
m7_113 -> m7_114  [color=green, key=0, style=solid];
m7_113 -> m7_117  [color=green, key=2, style=dotted];
m7_113 -> m7_115  [color=green, key=1, label=mock, style=dashed];
m7_114 -> m7_115  [color=green, key=0, style=solid];
m7_114 -> m7_118  [color=green, key=2, style=dotted];
m7_115 -> m7_116  [color=green, key=0, style=solid];
m7_116 -> m7_86  [color=blue, key=0, style=bold];
m7_102 -> m7_103  [color=green, key=0, style=solid];
m7_103 -> m7_104  [color=green, key=0, style=solid];
m7_103 -> m7_56  [color=green, key=2, style=dotted];
m7_104 -> m7_105  [color=green, key=0, style=solid];
m7_104 -> m7_57  [color=green, key=2, style=dotted];
m7_105 -> m7_106  [color=green, key=0, style=solid];
m7_105 -> m7_58  [color=green, key=2, style=dotted];
m7_105 -> m7_107  [color=green, key=1, label="lambda expression", style=dashed];
m7_106 -> m7_102  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_30 -> m7_23  [color=green, key=2, style=dotted];
m7_30 -> m7_33  [color=green, key=1, label="lambda expression", style=dashed];
m7_31 -> m7_32  [color=green, key=0, style=solid];
m7_31 -> m7_24  [color=green, key=2, style=dotted];
m7_32 -> m7_29  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [color=green, key=0, style=solid];
m7_52 -> m7_53  [color=green, key=0, style=solid];
m7_52 -> m7_56  [color=green, key=2, style=dotted];
m7_53 -> m7_54  [color=green, key=0, style=solid];
m7_53 -> m7_57  [color=green, key=2, style=dotted];
m7_54 -> m7_55  [color=green, key=0, style=solid];
m7_54 -> m7_58  [color=green, key=2, style=dotted];
m7_54 -> m7_59  [color=green, key=1, label="lambda expression", style=dashed];
m7_55 -> m7_51  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [color=green, key=0, style=solid];
m7_45 -> m7_46  [color=green, key=0, style=solid];
m7_45 -> m7_23  [color=green, key=2, style=dotted];
m7_45 -> m7_48  [color=green, key=1, label="lambda expression", style=dashed];
m7_46 -> m7_47  [color=green, key=0, style=solid];
m7_46 -> m7_24  [color=green, key=2, style=dotted];
m7_47 -> m7_44  [color=blue, key=0, style=bold];
m7_107 -> m7_108  [color=green, key=0, style=solid];
m7_15 -> m7_16  [color=green, key=0, style=solid];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_16 -> m7_18  [color=green, key=2, style=dotted];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_28  [color=green, key=2, style=dotted];
m7_27 -> m7_25  [color=blue, key=0, style=bold];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_34 -> m7_35  [color=green, key=0, style=solid];
m7_34 -> m7_28  [color=green, key=2, style=dotted];
m7_35 -> m7_33  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [color=green, key=0, style=solid];
m7_41 -> m7_42  [color=green, key=0, style=solid];
m7_41 -> m7_43  [color=green, key=2, style=dotted];
m7_42 -> m7_40  [color=blue, key=0, style=bold];
m7_48 -> m7_49  [color=green, key=0, style=solid];
m7_49 -> m7_50  [color=green, key=0, style=solid];
m7_49 -> m7_28  [color=green, key=2, style=dotted];
m7_50 -> m7_48  [color=blue, key=0, style=bold];
m7_59 -> m7_60  [color=green, key=0, style=solid];
m7_60 -> m7_61  [color=green, key=0, style=solid];
m7_60 -> m7_62  [color=green, key=2, style=dotted];
m7_61 -> m7_59  [color=blue, key=0, style=bold];
m7_70 -> m7_71  [color=green, key=0, style=solid];
m7_73 -> m7_74  [color=green, key=0, style=solid];
m7_71 -> m7_72  [color=green, key=0, style=solid];
m7_71 -> m7_18  [color=green, key=2, style=dotted];
m7_72 -> m7_70  [color=blue, key=0, style=bold];
m7_74 -> m7_75  [color=green, key=0, style=solid];
m7_74 -> m7_76  [color=green, key=2, style=dotted];
m7_75 -> m7_73  [color=blue, key=0, style=bold];
m7_88 -> m7_89  [color=green, key=0, style=solid];
m7_92 -> m7_93  [color=green, key=0, style=solid];
m7_96 -> m7_97  [color=green, key=0, style=solid];
m7_99 -> m7_100  [color=green, key=0, style=solid];
m7_89 -> m7_90  [color=green, key=0, style=solid];
m7_89 -> m7_23  [color=green, key=2, style=dotted];
m7_89 -> m7_91  [color=green, key=2, style=dotted];
m7_90 -> m7_88  [color=blue, key=0, style=bold];
m7_93 -> m7_94  [color=green, key=0, style=solid];
m7_93 -> m7_95  [color=green, key=2, style=dotted];
m7_94 -> m7_92  [color=blue, key=0, style=bold];
m7_97 -> m7_98  [color=green, key=0, style=solid];
m7_97 -> m7_91  [color=green, key=2, style=dotted];
m7_98 -> m7_96  [color=blue, key=0, style=bold];
m7_100 -> m7_101  [color=green, key=0, style=solid];
m7_100 -> m7_91  [color=green, key=2, style=dotted];
m7_101 -> m7_99  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [color=green, key=0, style=solid];
m7_108 -> m7_110  [color=green, key=2, style=dotted];
m7_109 -> m7_107  [color=blue, key=0, style=bold];
m7_119 -> m7_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_3  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_4  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_5  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_6  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_30  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_34  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_37  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_41  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_45  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_49  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_52  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_53  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_54  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_60  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_64  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_65  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_66  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_67  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_78  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_83  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_80  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_81  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_84  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_82  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_97  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_100  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_103  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_104  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_105  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_111  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_114  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m8_0 -> m8_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_0  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_21  [key=2, style=dotted];
m8_5 -> m8_7  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_9  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_12  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_15  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_16  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_17  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_17  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_2 -> m8_19  [key=0, style=solid];
m8_2 -> m8_20  [key=2, style=dotted];
m8_4 -> m8_19  [key=0, style=solid];
m8_4 -> m8_20  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_22  [key=2, style=dotted];
m8_7 -> m8_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_22  [key=2, style=dotted];
m8_9 -> m8_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_10 -> m8_17  [key=0, style=solid];
m8_10 -> m8_22  [key=2, style=dotted];
m8_10 -> m8_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_22  [key=2, style=dotted];
m8_12 -> m8_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_22  [key=2, style=dotted];
m8_13 -> m8_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_22  [key=2, style=dotted];
m8_15 -> m8_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_25  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_23  [key=2, style=dotted];
m8_8 -> m8_24  [key=2, style=dotted];
m8_8 -> m8_31  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_8 -> m8_10  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_8 -> m8_34  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_23  [key=2, style=dotted];
m8_14 -> m8_24  [key=2, style=dotted];
m8_14 -> m8_45  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_14 -> m8_16  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_14 -> m8_48  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_19 -> m8_0  [color=blue, key=0, style=bold];
m8_33 -> m8_34  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_29  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [key=2, style=dotted];
m8_34 -> m8_37  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_29  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_36  [key=2, style=dotted];
m8_48 -> m8_37  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_23  [key=2, style=dotted];
m8_27 -> m8_24  [key=2, style=dotted];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_32 -> m8_30  [color=blue, key=0, style=bold];
m8_35 -> m8_33  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_23  [key=2, style=dotted];
m8_39 -> m8_24  [key=2, style=dotted];
m8_39 -> m8_29  [key=2, style=dotted];
m8_40 -> m8_38  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_23  [key=2, style=dotted];
m8_42 -> m8_24  [key=2, style=dotted];
m8_42 -> m8_29  [key=2, style=dotted];
m8_43 -> m8_41  [color=blue, key=0, style=bold];
m8_46 -> m8_44  [color=blue, key=0, style=bold];
m8_49 -> m8_47  [color=blue, key=0, style=bold];
m8_50 -> m8_31  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_50 -> m8_34  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_51 -> m8_45  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_51 -> m8_48  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m11_16 -> m11_4  [color=blue, key=0, style=bold];
m11_96 -> m11_97  [key=0, style=solid];
m11_97 -> m11_81  [key=2, style=dotted];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_102  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_98 -> m11_36  [key=2, style=dotted];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_99 -> m11_37  [key=2, style=dotted];
m11_99 -> m11_100  [key=0, style=solid];
m11_100 -> m11_96  [color=blue, key=0, style=bold];
m11_20 -> m11_21  [key=0, style=solid];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_62  [key=2, style=dotted];
m11_58 -> m11_59  [color=green, key=0, style=solid];
m11_58 -> m11_60  [color=green, key=2, style=dotted];
m11_58 -> m11_61  [color=green, key=1, label="lambda expression", style=dashed];
m11_58 -> m11_24  [color=blue, key=0, style=bold];
m11_57 -> m11_58  [color=green, key=0, style=solid];
m11_57 -> m11_12  [key=2, style=dotted];
m11_59 -> m11_56  [color=blue, key=0, style=bold];
m11_136 -> m11_137  [key=0, style=solid];
m11_137 -> m11_81  [key=2, style=dotted];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_138 -> m11_36  [key=2, style=dotted];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_139 -> m11_37  [key=2, style=dotted];
m11_139 -> m11_140  [key=0, style=solid];
m11_140 -> m11_136  [color=blue, key=0, style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_22 -> m11_63  [color=red, key=0, style=solid];
m11_22 -> m11_20  [color=blue, key=0, style=bold];
m11_63 -> m11_64  [color=red, key=0, style=solid];
m11_63 -> m11_65  [color=red, key=2, style=dotted];
m11_63 -> m11_66  [color=red, key=2, style=dotted];
m11_63 -> m11_61  [color=blue, key=0, style=bold];
m11_64 -> m11_22  [color=blue, key=0, style=bold];
m11_49 -> m11_50  [color=green, key=0, style=solid];
m11_50 -> m11_51  [color=green, key=0, style=solid];
m11_50 -> m11_52  [key=2, style=dotted];
m11_50 -> m11_36  [color=green, key=2, style=dotted];
m11_50 -> m11_53  [color=green, key=1, label="lambda expression", style=dashed];
m11_51 -> m11_49  [color=blue, key=0, style=bold];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_37  [key=2, style=dotted];
m11_37 -> m11_38  [color=red, key=0, style=solid];
m11_37 -> m11_22  [color=red, key=2, style=dotted];
m11_37 -> m11_40  [color=red, key=1, label=jobId, style=dashed];
m11_37 -> m11_42  [color=red, key=1, label=jobId, style=dashed];
m11_77 -> m11_78  [color=green, key=0, style=solid];
m11_78 -> m11_79  [color=green, key=0, style=solid];
m11_78 -> m11_81  [color=green, key=2, style=dotted];
m11_79 -> m11_80  [color=green, key=0, style=solid];
m11_79 -> m11_82  [color=green, key=2, style=dotted];
m11_79 -> m11_83  [color=green, key=1, label="lambda expression", style=dashed];
m11_80 -> m11_77  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [color=red, key=0, style=solid];
m11_11 -> m11_23  [color=red, key=2, style=dotted];
m11_11 -> m11_13  [color=red, key=1, label=state, style=dashed];
m11_61 -> m11_62  [color=green, key=0, style=solid];
m11_62 -> m11_63  [color=green, key=0, style=solid];
m11_62 -> m11_64  [color=green, key=2, style=dotted];
m11_122 -> m11_123  [key=0, style=solid];
m11_123 -> m11_81  [key=2, style=dotted];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_125  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_123 -> m11_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_124 -> m11_13  [key=2, style=dotted];
m11_124 -> m11_36  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_125 -> m11_36  [key=2, style=dotted];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_125 -> m11_127  [color=darkseagreen4, key=1, label=exception, style=dashed];
m11_127 -> m11_36  [key=2, style=dotted];
m11_127 -> m11_128  [key=0, style=solid];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_129  [key=2, style=dotted];
m11_128 -> m11_122  [color=blue, key=0, style=bold];
m11_145 -> m11_146  [key=0, style=solid];
m11_146 -> m11_81  [key=2, style=dotted];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_147 -> m11_36  [key=2, style=dotted];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_148 -> m11_37  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_149 -> m11_145  [color=blue, key=0, style=bold];
m11_154 -> m11_155  [key=0, style=solid];
m11_155 -> m11_81  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_144  [key=2, style=dotted];
m11_157 -> m11_82  [key=2, style=dotted];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_158 -> m11_154  [color=blue, key=0, style=bold];
m11_36 -> m11_43  [color=red, key=0, style=solid];
m11_36 -> m11_4  [color=red, key=2, style=dotted];
m11_26 -> m11_24  [color=blue, key=0, style=bold];
m11_104 -> m11_105  [key=0, style=solid];
m11_105 -> m11_81  [key=2, style=dotted];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_110  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_106 -> m11_36  [key=2, style=dotted];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_107 -> m11_37  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_108 -> m11_104  [color=blue, key=0, style=bold];
m11_21 -> m11_23  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_45 -> m11_42  [color=blue, key=0, style=bold];
m11_163 -> m11_164  [key=0, style=solid];
m11_164 -> m11_81  [key=2, style=dotted];
m11_164 -> m11_165  [key=0, style=solid];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_144  [key=2, style=dotted];
m11_166 -> m11_82  [key=2, style=dotted];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_167 -> m11_163  [color=blue, key=0, style=bold];
m11_4 -> m11_5  [color=green, key=0, style=solid];
m11_4 -> m11_7  [color=red, key=1, label="System.Type", style=dashed];
m11_4 -> m11_8  [color=red, key=1, label="System.Type", style=dashed];
m11_4 -> m11_9  [color=red, key=1, label="System.Type", style=dashed];
m11_4 -> m11_12  [color=red, key=1, label="System.Type", style=dashed];
m11_4 -> m11_10  [color=red, key=3, label="method methodReturn string Async", style=bold];
m11_4 -> m11_28  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m11_4 -> m11_15  [color=green, key=2, style=dotted];
m11_5 -> m11_6  [color=green, key=0, style=solid];
m11_5 -> m11_7  [color=red, key=0, style=solid];
m11_5 -> m11_16  [key=2, style=dotted];
m11_7 -> m11_8  [color=green, key=0, style=solid];
m11_7 -> m11_9  [color=red, key=0, style=solid];
m11_7 -> m11_18  [color=red, key=2, style=dotted];
m11_7 -> m11_17  [color=green, key=2, style=dotted];
m11_8 -> m11_16  [color=red, key=0, style=solid];
m11_8 -> m11_19  [color=red, key=2, style=dotted];
m11_8 -> m11_20  [color=red, key=2, style=dotted];
m11_8 -> m11_9  [color=green, key=0, style=solid];
m11_8 -> m11_18  [color=green, key=2, style=dotted];
m11_9 -> m11_10  [color=green, key=0, style=solid];
m11_9 -> m11_21  [color=red, key=2, style=dotted];
m11_9 -> m11_11  [color=red, key=1, label=queue, style=dashed];
m11_9 -> m11_19  [color=green, key=2, style=dotted];
m11_9 -> m11_28  [color=green, key=1, label="lambda expression", style=dashed];
m11_12 -> m11_13  [color=red, key=0, style=solid];
m11_12 -> m11_24  [color=red, key=2, style=dotted];
m11_6 -> m11_16  [color=red, key=0, style=solid];
m11_6 -> m11_17  [color=red, key=2, style=dotted];
m11_6 -> m11_7  [color=green, key=0, style=solid];
m11_6 -> m11_13  [color=green, key=2, style=dotted];
m11_6 -> m11_14  [color=green, key=2, style=dotted];
m11_6 -> m11_24  [color=green, key=1, label="lambda expression", style=dashed];
m11_10 -> m11_11  [color=red, key=0, style=solid];
m11_10 -> m11_22  [color=red, key=2, style=dotted];
m11_10 -> m11_13  [color=red, key=1, label=jobId, style=dashed];
m11_10 -> m11_15  [color=red, key=1, label=jobId, style=dashed];
m11_10 -> m11_0  [color=blue, key=0, style=bold];
m11_13 -> m11_14  [color=red, key=0, style=solid];
m11_13 -> m11_25  [color=red, key=2, style=dotted];
m11_13 -> m11_26  [color=red, key=2, style=dotted];
m11_15 -> m11_16  [color=red, key=0, style=solid];
m11_14 -> m11_15  [color=red, key=0, style=solid];
m11_14 -> m11_27  [color=red, key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_172 -> m11_13  [key=2, style=dotted];
m11_172 -> m11_14  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_173 -> m11_81  [key=2, style=dotted];
m11_173 -> m11_174  [key=0, style=solid];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_144  [key=2, style=dotted];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_177  [key=2, style=dotted];
m11_176 -> m11_171  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_1 -> m11_11  [key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [color=green, key=0, style=solid];
m11_2 -> m11_12  [color=green, key=2, style=dotted];
m11_66 -> m11_67  [color=green, key=0, style=solid];
m11_66 -> m11_60  [color=green, key=2, style=dotted];
m11_66 -> m11_68  [color=green, key=1, label="lambda expression", style=dashed];
m11_48 -> m11_46  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [color=green, key=0, style=solid];
m11_3 -> m11_13  [key=2, style=dotted];
m11_3 -> m11_14  [key=2, style=dotted];
m11_3 -> m11_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_86 -> m11_87  [color=green, key=0, style=solid];
m11_87 -> m11_88  [color=green, key=0, style=solid];
m11_87 -> m11_81  [color=green, key=2, style=dotted];
m11_88 -> m11_89  [color=green, key=0, style=solid];
m11_88 -> m11_91  [color=green, key=2, style=dotted];
m11_89 -> m11_90  [color=green, key=0, style=solid];
m11_89 -> m11_82  [color=green, key=2, style=dotted];
m11_89 -> m11_92  [color=green, key=1, label="lambda expression", style=dashed];
m11_90 -> m11_86  [color=blue, key=0, style=bold];
m11_28 -> m11_29  [color=green, key=0, style=solid];
m11_28 -> m11_31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_28 -> m11_32  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_28 -> m11_33  [color=red, key=1, label="System.TimeSpan", style=dashed];
m11_28 -> m11_36  [color=red, key=1, label="System.Type", style=dashed];
m11_28 -> m11_39  [color=red, key=1, label="System.Type", style=dashed];
m11_28 -> m11_4  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m11_28 -> m11_37  [color=red, key=3, label="method methodReturn string In", style=bold];
m11_29 -> m11_30  [color=green, key=0, style=solid];
m11_29 -> m11_31  [color=red, key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_33  [color=red, key=0, style=solid];
m11_31 -> m11_18  [key=2, style=dotted];
m11_31 -> m11_181  [key=0, style=solid];
m11_32 -> m11_43  [key=0, style=solid];
m11_32 -> m11_19  [key=2, style=dotted];
m11_32 -> m11_20  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_33 -> m11_34  [color=red, key=0, style=solid];
m11_33 -> m11_35  [color=red, key=0, style=solid];
m11_33 -> m11_44  [color=red, key=2, style=dotted];
m11_33 -> m11_33  [color=red, key=1, label="System.TimeSpan", style=dashed];
m11_33 -> m11_36  [key=2, style=dotted];
m11_33 -> m11_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_39 -> m11_40  [color=red, key=0, style=solid];
m11_39 -> m11_24  [color=red, key=2, style=dotted];
m11_39 -> m11_41  [key=2, style=dotted];
m11_30 -> m11_43  [color=red, key=0, style=solid];
m11_30 -> m11_17  [color=red, key=2, style=dotted];
m11_30 -> m11_28  [color=blue, key=0, style=bold];
m11_34 -> m11_43  [color=red, key=0, style=solid];
m11_34 -> m11_45  [color=red, key=2, style=dotted];
m11_34 -> m11_37  [key=2, style=dotted];
m11_34 -> m11_35  [key=0, style=solid];
m11_35 -> m11_36  [color=red, key=0, style=solid];
m11_35 -> m11_37  [color=red, key=0, style=solid];
m11_35 -> m11_46  [color=red, key=2, style=dotted];
m11_35 -> m11_35  [color=red, key=1, label="System.TimeSpan", style=dashed];
m11_35 -> m11_38  [color=red, key=1, label="System.TimeSpan", style=dashed];
m11_35 -> m11_32  [color=blue, key=0, style=bold];
m11_38 -> m11_39  [color=red, key=0, style=solid];
m11_38 -> m11_47  [color=red, key=2, style=dotted];
m11_38 -> m11_48  [color=red, key=2, style=dotted];
m11_38 -> m11_40  [color=red, key=1, label=state, style=dashed];
m11_40 -> m11_41  [color=red, key=0, style=solid];
m11_40 -> m11_25  [color=red, key=2, style=dotted];
m11_40 -> m11_26  [color=red, key=2, style=dotted];
m11_40 -> m11_38  [color=blue, key=0, style=bold];
m11_42 -> m11_43  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_27  [key=2, style=dotted];
m11_43 -> m11_28  [color=blue, key=0, style=bold];
m11_43 -> m11_36  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_52 -> m11_49  [color=blue, key=0, style=bold];
m11_65 -> m11_66  [color=green, key=0, style=solid];
m11_65 -> m11_78  [color=green, key=3, label="Local variable System.Collections.Generic.Dictionary<string, string> job", style=bold];
m11_67 -> m11_65  [color=blue, key=0, style=bold];
m11_67 -> m11_1  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_67 -> m11_13  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_67 -> m11_14  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_67 -> m11_36  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_67 -> m11_40  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_67 -> m11_41  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_67 -> m11_50  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_81 -> m11_182  [key=0, style=solid];
m11_182 -> m11_41  [key=2, style=dotted];
m11_182 -> m11_183  [key=0, style=solid];
m11_183 -> m11_81  [color=blue, key=0, style=bold];
m11_24 -> m11_53  [key=0, style=solid];
m11_24 -> m11_54  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_24 -> m11_55  [color=red, key=1, label=object, style=dashed];
m11_24 -> m11_25  [color=green, key=0, style=solid];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_59  [key=2, style=dotted];
m11_53 -> m11_55  [color=red, key=1, label=job, style=dashed];
m11_53 -> m11_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_53 -> m11_57  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_54 -> m11_55  [color=red, key=0, style=solid];
m11_54 -> m11_41  [key=2, style=dotted];
m11_55 -> m11_56  [color=red, key=0, style=solid];
m11_55 -> m11_60  [color=red, key=2, style=dotted];
m11_55 -> m11_61  [color=red, key=2, style=dotted];
m11_55 -> m11_53  [color=blue, key=0, style=bold];
m11_44 -> m11_37  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_71 -> m11_72  [color=green, key=0, style=solid];
m11_72 -> m11_73  [color=green, key=0, style=solid];
m11_72 -> m11_60  [color=green, key=2, style=dotted];
m11_72 -> m11_74  [color=green, key=1, label="lambda expression", style=dashed];
m11_73 -> m11_71  [color=blue, key=0, style=bold];
m11_150 -> m11_151  [key=0, style=solid];
m11_25 -> m11_26  [color=green, key=0, style=solid];
m11_25 -> m11_27  [color=green, key=2, style=dotted];
m11_68 -> m11_69  [color=green, key=0, style=solid];
m11_69 -> m11_70  [color=green, key=0, style=solid];
m11_69 -> m11_41  [color=green, key=2, style=dotted];
m11_70 -> m11_68  [color=blue, key=0, style=bold];
m11_74 -> m11_75  [color=green, key=0, style=solid];
m11_75 -> m11_76  [color=green, key=0, style=solid];
m11_75 -> m11_41  [color=green, key=2, style=dotted];
m11_76 -> m11_74  [color=blue, key=0, style=bold];
m11_83 -> m11_84  [color=green, key=0, style=solid];
m11_84 -> m11_85  [color=green, key=0, style=solid];
m11_84 -> m11_23  [color=green, key=2, style=dotted];
m11_85 -> m11_83  [color=blue, key=0, style=bold];
m11_92 -> m11_93  [color=green, key=0, style=solid];
m11_93 -> m11_94  [color=green, key=0, style=solid];
m11_93 -> m11_52  [color=green, key=2, style=dotted];
m11_94 -> m11_92  [color=blue, key=0, style=bold];
m11_47 -> m11_41  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_102 -> m11_27  [key=2, style=dotted];
m11_102 -> m11_103  [key=0, style=solid];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_112  [key=2, style=dotted];
m11_134 -> m11_27  [key=2, style=dotted];
m11_134 -> m11_135  [key=0, style=solid];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_144  [key=2, style=dotted];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_162  [key=2, style=dotted];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_162  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_162  [key=2, style=dotted];
m11_119 -> m11_36  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_121  [key=2, style=dotted];
m11_131 -> m11_36  [key=2, style=dotted];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_121  [key=2, style=dotted];
m11_101 -> m11_102  [key=0, style=solid];
m11_103 -> m11_101  [color=blue, key=0, style=bold];
m11_109 -> m11_110  [key=0, style=solid];
m11_111 -> m11_109  [color=blue, key=0, style=bold];
m11_118 -> m11_119  [key=0, style=solid];
m11_130 -> m11_131  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_135 -> m11_133  [color=blue, key=0, style=bold];
m11_141 -> m11_142  [key=0, style=solid];
m11_143 -> m11_141  [color=blue, key=0, style=bold];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_153  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_161 -> m11_159  [color=blue, key=0, style=bold];
m11_168 -> m11_169  [key=0, style=solid];
m11_170 -> m11_168  [color=blue, key=0, style=bold];
m11_178 -> m11_179  [key=0, style=solid];
m11_180 -> m11_178  [color=blue, key=0, style=bold];
m11_120 -> m11_118  [color=blue, key=0, style=bold];
m11_132 -> m11_130  [color=blue, key=0, style=bold];
m11_152 -> m11_150  [color=blue, key=0, style=bold];
m11_181 -> m11_31  [color=blue, key=0, style=bold];
m11_113 -> m11_114  [key=0, style=solid];
m11_114 -> m11_81  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_115 -> m11_27  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_116 -> m11_82  [key=2, style=dotted];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_117 -> m11_113  [color=blue, key=0, style=bold];
m11_184 -> m11_2  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_4  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_6  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_7  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_8  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_9  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_25  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_50  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_66  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_69  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_72  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_75  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_78  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_79  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_87  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_89  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_105  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_106  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_116  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_124  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_137  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_138  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_142  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_146  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_160  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_164  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_165  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_179  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_184 -> m11_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m11_185 -> m11_102  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_186 -> m11_110  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_187 -> m11_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_188 -> m11_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m11_189 -> m11_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m12_23 -> m12_64  [key=0, style=solid];
m12_23 -> m12_65  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_66  [key=0, style=solid];
m12_64 -> m12_30  [key=2, style=dotted];
m12_65 -> m12_64  [key=0, style=solid];
m12_65 -> m12_67  [key=2, style=dotted];
m12_66 -> m12_23  [color=blue, key=0, style=bold];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m12_44 -> m12_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m12_44 -> m12_50  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m12_44 -> m12_53  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m12_44 -> m12_54  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m12_44 -> m12_58  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m12_44 -> m12_49  [color=darkorchid, key=3, label="method methodReturn HangFire.Filters.CreatedContext InvokeClientFilter", style=bold];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_61  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_48  [key=0, style=solid];
m12_47 -> m12_60  [key=0, style=solid];
m12_47 -> m12_38  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_57  [key=0, style=solid];
m12_50 -> m12_62  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_38  [key=2, style=dotted];
m12_53 -> m12_55  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m12_53 -> m12_58  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m12_53 -> m12_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_63  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_63  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_48  [color=darkorchid, key=3, label="Local variable bool wasError", style=bold];
m12_49 -> m12_50  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_59  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_57  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_57  [key=0, style=solid];
m12_59 -> m12_60  [key=0, style=solid];
m12_56 -> m12_60  [key=0, style=solid];
m12_60 -> m12_44  [color=blue, key=0, style=bold];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_16  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_20  [key=0, style=solid];
m12_14 -> m12_21  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_22  [key=2, style=dotted];
m12_16 -> m12_18  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m12_15 -> m12_16  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_23  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_20  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_20 -> m12_13  [color=blue, key=0, style=bold];
m12_3 -> m12_5  [key=0, style=solid];
m12_3 -> m12_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m12_3 -> m12_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m12_3 -> m12_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_6 -> m12_11  [key=0, style=solid];
m12_6 -> m12_12  [key=2, style=dotted];
m12_8 -> m12_11  [key=0, style=solid];
m12_8 -> m12_12  [key=2, style=dotted];
m12_11 -> m12_3  [color=blue, key=0, style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_34 -> m12_35  [color=red, key=0, style=solid];
m12_34 -> m12_37  [color=red, key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_38  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_44  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_26  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m12_39 -> m12_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m12_33 -> m12_34  [color=red, key=0, style=solid];
m12_36 -> m12_33  [color=blue, key=0, style=bold];
m12_40 -> m12_39  [color=blue, key=0, style=bold];
m12_43 -> m12_41  [color=blue, key=0, style=bold];
m12_21 -> m12_24  [key=0, style=solid];
m12_21 -> m12_25  [color=red, key=1, label="HangFire.Client.CreateContext", style=dashed];
m12_21 -> m12_34  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m12_21 -> m12_35  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m12_21 -> m12_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m12_24 -> m12_25  [color=red, key=0, style=solid];
m12_24 -> m12_29  [key=2, style=dotted];
m12_24 -> m12_26  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m12_24 -> m12_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m12_25 -> m12_26  [color=red, key=0, style=solid];
m12_25 -> m12_25  [color=red, key=3, label="Local variable System.Func<HangFire.Filters.CreatedContext> continuation", style=bold];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_30  [key=2, style=dotted];
m12_26 -> m12_31  [key=2, style=dotted];
m12_26 -> m12_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_32  [key=2, style=dotted];
m12_28 -> m12_21  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_68 -> m12_9  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m12_68 -> m12_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m12_68 -> m12_14  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m12_68 -> m12_17  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m12_69 -> m12_34  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m12_70 -> m12_35  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m12_71 -> m12_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m12_72 -> m12_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m12_73 -> m12_42  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_44  [color=blue, key=0, style=bold];
m14_47 -> m14_15  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_50  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_51  [key=2, style=dotted];
m14_49 -> m14_46  [color=blue, key=0, style=bold];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_51  [key=0, style=solid];
m14_35 -> m14_39  [color=green, key=0, style=solid];
m14_35 -> m14_30  [color=blue, key=0, style=bold];
m14_39 -> m14_40  [color=green, key=0, style=solid];
m14_39 -> m14_41  [color=green, key=2, style=dotted];
m14_39 -> m14_37  [color=blue, key=0, style=bold];
m14_40 -> m14_35  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [color=green, key=0, style=solid];
m14_21 -> m14_22  [color=green, key=0, style=solid];
m14_21 -> m14_15  [color=green, key=2, style=dotted];
m14_21 -> m14_10  [color=green, key=2, style=dotted];
m14_22 -> m14_20  [color=blue, key=0, style=bold];
m14_22 -> m14_23  [key=0, style=solid];
m14_44 -> m14_45  [color=red, key=0, style=solid];
m14_44 -> m14_5  [key=2, style=dotted];
m14_45 -> m14_46  [color=red, key=0, style=solid];
m14_45 -> m14_47  [color=red, key=2, style=dotted];
m14_45 -> m14_42  [color=blue, key=0, style=bold];
m14_29 -> m14_30  [key=0, style=solid];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_32  [key=2, style=dotted];
m14_31 -> m14_29  [color=blue, key=0, style=bold];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_31 -> m14_12  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m14_50 -> m14_49  [key=0, style=solid];
m14_50 -> m14_3  [key=2, style=dotted];
m14_50 -> m14_52  [key=2, style=dotted];
m14_51 -> m14_48  [color=blue, key=0, style=bold];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_8  [key=2, style=dotted];
m14_6 -> m14_9  [key=2, style=dotted];
m14_7 -> m14_10  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_5  [color=blue, key=0, style=bold];
m14_8 -> m14_10  [key=2, style=dotted];
m14_8 -> m14_9  [key=0, style=solid];
m14_9 -> m14_6  [color=blue, key=0, style=bold];
m14_27 -> m14_25  [color=blue, key=0, style=bold];
m14_15 -> m14_13  [key=0, style=solid];
m14_15 -> m14_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_3 -> m14_4  [key=0, style=solid];
m14_36 -> m14_37  [key=0, style=solid];
m14_37 -> m14_35  [key=2, style=dotted];
m14_37 -> m14_38  [key=0, style=solid];
m14_38 -> m14_36  [color=blue, key=0, style=bold];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_40  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_16  [color=darkseagreen4, key=1, label=Table, style=dashed];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_16  [key=0, style=solid];
m14_11 -> m14_13  [color=darkseagreen4, key=1, label=row, style=dashed];
m14_11 -> m14_14  [color=darkseagreen4, key=1, label=row, style=dashed];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_20  [key=2, style=dotted];
m14_16 -> m14_21  [key=2, style=dotted];
m14_16 -> m14_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_16 -> m14_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_12 -> m14_12  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m14_12 -> m14_10  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_11  [key=0, style=solid];
m14_13 -> m14_18  [key=2, style=dotted];
m14_13 -> m14_10  [key=2, style=dotted];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_19  [key=2, style=dotted];
m14_14 -> m14_4  [key=2, style=dotted];
m14_14 -> m14_11  [color=blue, key=0, style=bold];
m14_17 -> m14_10  [color=blue, key=0, style=bold];
m14_17 -> m14_18  [key=0, style=solid];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_64  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_65  [key=2, style=dotted];
m14_62 -> m14_66  [key=2, style=dotted];
m14_63 -> m14_60  [color=blue, key=0, style=bold];
m14_52 -> m14_53  [key=0, style=solid];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_55  [key=2, style=dotted];
m14_53 -> m14_6  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m14_53 -> m14_16  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m14_53 -> m14_26  [color=red, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m14_53 -> m14_38  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m14_53 -> m14_42  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m14_53 -> m14_45  [color=red, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m14_53 -> m14_49  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m14_54 -> m14_52  [color=blue, key=0, style=bold];
m14_78 -> m14_79  [key=0, style=solid];
m14_78 -> m14_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_78 -> m14_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_79 -> m14_15  [key=2, style=dotted];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_50  [key=2, style=dotted];
m14_79 -> m14_81  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m14_79 -> m14_82  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_84  [key=2, style=dotted];
m14_81 -> m14_82  [key=0, style=solid];
m14_81 -> m14_84  [key=2, style=dotted];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_84  [key=2, style=dotted];
m14_83 -> m14_78  [color=blue, key=0, style=bold];
m14_41 -> m14_42  [key=0, style=solid];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_25  [color=green, key=3, label="Field variable System.Exception _exception", style=bold];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_1 -> m14_4  [key=2, style=dotted];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_40  [key=2, style=dotted];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_29  [key=2, style=dotted];
m14_43 -> m14_41  [color=blue, key=0, style=bold];
m14_18 -> m14_15  [key=2, style=dotted];
m14_18 -> m14_10  [key=2, style=dotted];
m14_18 -> m14_19  [key=0, style=solid];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_56 -> m14_15  [key=2, style=dotted];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_50  [key=2, style=dotted];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_59  [key=2, style=dotted];
m14_58 -> m14_55  [color=blue, key=0, style=bold];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_19 -> m14_16  [color=blue, key=0, style=bold];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_74  [color=darkseagreen4, key=1, label=Table, style=dashed];
m14_73 -> m14_15  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_76  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_77  [key=2, style=dotted];
m14_75 -> m14_72  [color=blue, key=0, style=bold];
m14_25 -> m14_26  [color=green, key=0, style=solid];
m14_25 -> m14_15  [color=green, key=2, style=dotted];
m14_25 -> m14_28  [color=green, key=2, style=dotted];
m14_26 -> m14_27  [color=red, key=0, style=solid];
m14_26 -> m14_28  [color=red, key=2, style=dotted];
m14_26 -> m14_29  [color=red, key=2, style=dotted];
m14_26 -> m14_23  [color=blue, key=0, style=bold];
m14_23 -> m14_24  [color=green, key=0, style=solid];
m14_23 -> m14_25  [color=green, key=1, label=string, style=dashed];
m14_24 -> m14_22  [color=blue, key=0, style=bold];
m14_24 -> m14_25  [color=green, key=0, style=solid];
m14_24 -> m14_27  [color=green, key=2, style=dotted];
m14_91 -> m14_89  [color=blue, key=0, style=bold];
m14_90 -> m14_15  [key=2, style=dotted];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_88  [key=2, style=dotted];
m14_90 -> m14_71  [key=2, style=dotted];
m14_89 -> m14_90  [key=0, style=solid];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_35  [key=0, style=solid];
m14_34 -> m14_32  [color=blue, key=0, style=bold];
m14_34 -> m14_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_36  [key=2, style=dotted];
m14_33 -> m14_35  [key=2, style=dotted];
m14_87 -> m14_85  [color=blue, key=0, style=bold];
m14_86 -> m14_15  [key=2, style=dotted];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_88  [key=2, style=dotted];
m14_86 -> m14_71  [key=2, style=dotted];
m14_85 -> m14_86  [key=0, style=solid];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_64  [key=2, style=dotted];
m14_69 -> m14_71  [key=2, style=dotted];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_65  [key=2, style=dotted];
m14_70 -> m14_67  [color=blue, key=0, style=bold];
m14_92 -> m14_39  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_1  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_2  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_3  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_30  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_33  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_43  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_44  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_53  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m14_92 -> m14_68  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_56  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_57  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_58  [key=2, style=dotted];
m16_4 -> m16_9  [color=darkseagreen4, key=1, label=from, style=dashed];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_58  [key=2, style=dotted];
m16_5 -> m16_9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_60  [key=2, style=dotted];
m16_9 -> m16_61  [key=2, style=dotted];
m16_9 -> m16_62  [key=2, style=dotted];
m16_9 -> m16_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_9 -> m16_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_9 -> m16_54  [color=darkseagreen4, key=1, label=pager, style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_59  [key=2, style=dotted];
m16_8 -> m16_10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_63  [key=2, style=dotted];
m16_10 -> m16_19  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_14  [key=0, style=solid];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_65  [key=2, style=dotted];
m16_17 -> m16_66  [key=2, style=dotted];
m16_17 -> m16_67  [key=2, style=dotted];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_71  [key=2, style=dotted];
m16_54 -> m16_66  [key=2, style=dotted];
m16_54 -> m16_67  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_56  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_53  [key=0, style=solid];
m16_19 -> m16_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_13 -> m16_55  [key=0, style=solid];
m16_13 -> m16_56  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_56  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_62  [key=2, style=dotted];
m16_15 -> m16_64  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_56  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_56  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_56  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_56  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_64  [key=2, style=dotted];
m16_21 -> m16_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_21 -> m16_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_56  [key=2, style=dotted];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_64  [key=2, style=dotted];
m16_23 -> m16_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_23 -> m16_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_56  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_29  [key=0, style=solid];
m16_25 -> m16_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_25 -> m16_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_25 -> m16_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_56  [key=2, style=dotted];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_56  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_64  [key=2, style=dotted];
m16_27 -> m16_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_27 -> m16_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_62  [key=2, style=dotted];
m16_30 -> m16_64  [key=2, style=dotted];
m16_30 -> m16_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_30 -> m16_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_56  [key=2, style=dotted];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_56  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_68  [key=2, style=dotted];
m16_32 -> m16_67  [key=2, style=dotted];
m16_32 -> m16_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_32 -> m16_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_56  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_36  [key=0, style=solid];
m16_34 -> m16_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_34 -> m16_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_56  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_56  [key=2, style=dotted];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_39  [key=0, style=solid];
m16_37 -> m16_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_37 -> m16_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_38 -> m16_52  [key=0, style=solid];
m16_38 -> m16_56  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_56  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_62  [key=2, style=dotted];
m16_40 -> m16_64  [key=2, style=dotted];
m16_40 -> m16_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_40 -> m16_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_56  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_69  [key=2, style=dotted];
m16_42 -> m16_67  [key=2, style=dotted];
m16_42 -> m16_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_42 -> m16_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_56  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_51  [key=0, style=solid];
m16_45 -> m16_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_45 -> m16_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_56  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_56  [key=2, style=dotted];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_56  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_70  [key=2, style=dotted];
m16_47 -> m16_64  [key=2, style=dotted];
m16_47 -> m16_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_47 -> m16_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_56  [key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_64  [key=2, style=dotted];
m16_49 -> m16_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_56  [key=2, style=dotted];
m16_52 -> m16_19  [key=0, style=solid];
m16_52 -> m16_56  [key=2, style=dotted];
m16_55 -> m16_0  [color=blue, key=0, style=bold];
m16_72 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m16_72 -> m16_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m18_18 -> m18_15  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan interval", style=bold];
m18_18 -> m18_19  [color=red, key=0, style=solid];
m18_18 -> m18_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m18_18 -> m18_21  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m18_19 -> m18_20  [color=red, key=0, style=solid];
m18_19 -> m18_21  [key=2, style=dotted];
m18_19 -> m18_7  [color=red, key=2, style=dotted];
m18_19 -> m18_23  [color=red, key=1, label=options, style=dashed];
m18_20 -> m18_18  [color=blue, key=0, style=bold];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_14  [key=2, style=dotted];
m18_20 -> m18_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_6 -> m18_11  [color=green, key=1, label="System.Type", style=dashed];
m18_6 -> m18_10  [key=0, style=solid];
m18_6 -> m18_3  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m18_6 -> m18_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m18_6 -> m18_7  [color=darkorchid, key=3, label="Parameter variable System.Type jobType", style=bold];
m18_6 -> m18_0  [color=blue, key=0, style=bold];
m18_11 -> m18_12  [color=green, key=0, style=solid];
m18_11 -> m18_14  [color=green, key=2, style=dotted];
m18_11 -> m18_7  [key=2, style=dotted];
m18_11 -> m18_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_10 -> m18_11  [color=green, key=0, style=solid];
m18_10 -> m18_13  [key=2, style=dotted];
m18_12 -> m18_6  [color=blue, key=0, style=bold];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_14  [key=2, style=dotted];
m18_12 -> m18_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_8 -> m18_6  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_7 -> m18_46  [key=0, style=solid];
m18_7 -> m18_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m18_7 -> m18_8  [key=0, style=solid];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_48  [key=2, style=dotted];
m18_47 -> m18_7  [color=blue, key=0, style=bold];
m18_0 -> m18_3  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_7  [key=2, style=dotted];
m18_1 -> m18_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_1 -> m18_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_8  [key=2, style=dotted];
m18_3 -> m18_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m18_3 -> m18_8  [key=2, style=dotted];
m18_4 -> m18_6  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_8  [key=2, style=dotted];
m18_5 -> m18_3  [color=blue, key=0, style=bold];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_9  [key=2, style=dotted];
m18_22 -> m18_21  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m18_22 -> m18_23  [key=0, style=solid];
m18_23 -> m18_21  [key=2, style=dotted];
m18_23 -> m18_24  [key=0, style=solid];
m18_24 -> m18_22  [color=blue, key=0, style=bold];
m18_21 -> m18_18  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m18_21 -> m18_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m18_21 -> m18_25  [key=0, style=solid];
m18_21 -> m18_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m18_21 -> m18_22  [color=darkorchid, key=3, label="Parameter variable System.Type jobType", style=bold];
m18_25 -> m18_13  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_28  [key=2, style=dotted];
m18_26 -> m18_7  [key=2, style=dotted];
m18_26 -> m18_30  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_27 -> m18_21  [color=blue, key=0, style=bold];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_14  [key=2, style=dotted];
m18_27 -> m18_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_13 -> m18_10  [color=blue, key=0, style=bold];
m18_15 -> m18_16  [color=green, key=0, style=solid];
m18_15 -> m18_18  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m18_16 -> m18_17  [color=green, key=0, style=solid];
m18_16 -> m18_18  [color=green, key=2, style=dotted];
m18_17 -> m18_15  [color=blue, key=0, style=bold];
m18_28 -> m18_25  [color=blue, key=0, style=bold];
m18_32 -> m18_33  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_7  [key=2, style=dotted];
m18_33 -> m18_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_14  [key=2, style=dotted];
m18_34 -> m18_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_35 -> m18_32  [color=blue, key=0, style=bold];
m18_9 -> m18_7  [color=blue, key=0, style=bold];
m18_43 -> m18_44  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_29 -> m18_30  [key=0, style=solid];
m18_31 -> m18_29  [color=blue, key=0, style=bold];
m18_37 -> m18_38  [key=0, style=solid];
m18_36 -> m18_37  [key=0, style=solid];
m18_38 -> m18_36  [color=blue, key=0, style=bold];
m18_44 -> m18_45  [key=0, style=solid];
m18_45 -> m18_43  [color=blue, key=0, style=bold];
m18_39 -> m18_40  [color=red, key=0, style=solid];
m18_40 -> m18_41  [color=red, key=0, style=solid];
m18_40 -> m18_7  [color=red, key=2, style=dotted];
m18_40 -> m18_44  [color=red, key=1, label=options, style=dashed];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_14  [key=2, style=dotted];
m18_41 -> m18_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_42 -> m18_39  [color=blue, key=0, style=bold];
m18_49 -> m18_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m18_49 -> m18_11  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m18_49 -> m18_19  [color=red, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m18_49 -> m18_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m18_49 -> m18_33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m18_49 -> m18_40  [color=red, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m18_50 -> m18_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_51 -> m18_23  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_52 -> m18_30  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_53 -> m18_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_54 -> m18_44  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_76  [key=2, style=dotted];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_76  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_50  [key=0, style=solid];
m19_44 -> m19_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_44 -> m19_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_44 -> m19_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_79  [key=2, style=dotted];
m19_8 -> m19_10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_82  [key=2, style=dotted];
m19_17 -> m19_84  [key=2, style=dotted];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_76  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_77  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_6  [key=2, style=dotted];
m19_3 -> m19_7  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_78  [key=2, style=dotted];
m19_4 -> m19_9  [color=darkseagreen4, key=1, label=from, style=dashed];
m19_4 -> m19_8  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_78  [key=2, style=dotted];
m19_5 -> m19_9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m19_5 -> m19_0  [color=blue, key=0, style=bold];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_80  [key=2, style=dotted];
m19_9 -> m19_81  [key=2, style=dotted];
m19_9 -> m19_82  [key=2, style=dotted];
m19_9 -> m19_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m19_9 -> m19_19  [color=darkseagreen4, key=1, label=pager, style=dashed];
m19_9 -> m19_74  [color=darkseagreen4, key=1, label=pager, style=dashed];
m19_6 -> m19_7  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_83  [key=2, style=dotted];
m19_10 -> m19_22  [color=darkseagreen4, key=1, label=failedJobs, style=dashed];
m19_10 -> m19_17  [key=2, style=dotted];
m19_10 -> m19_15  [color=darkseagreen4, key=1, label=payload, style=dashed];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_14  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_85  [key=2, style=dotted];
m19_19 -> m19_86  [key=2, style=dotted];
m19_19 -> m19_87  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_93  [key=2, style=dotted];
m19_74 -> m19_86  [key=2, style=dotted];
m19_74 -> m19_87  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_76  [key=2, style=dotted];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_73  [key=0, style=solid];
m19_22 -> m19_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_22 -> m19_32  [key=2, style=dotted];
m19_13 -> m19_75  [key=0, style=solid];
m19_13 -> m19_76  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_18  [key=2, style=dotted];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_76  [key=2, style=dotted];
m19_14 -> m19_19  [key=2, style=dotted];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_82  [key=2, style=dotted];
m19_15 -> m19_84  [key=2, style=dotted];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_76  [key=2, style=dotted];
m19_16 -> m19_9  [color=blue, key=0, style=bold];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_76  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_62  [color=darkseagreen4, key=1, label=index, style=dashed];
m19_21 -> m19_31  [key=0, style=solid];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_84  [key=2, style=dotted];
m19_62 -> m19_62  [color=darkseagreen4, key=1, label=index, style=dashed];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_76  [key=2, style=dotted];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_76  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_84  [key=2, style=dotted];
m19_24 -> m19_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_24 -> m19_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_24 -> m19_19  [key=2, style=dotted];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_76  [key=2, style=dotted];
m19_25 -> m19_33  [key=2, style=dotted];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_84  [key=2, style=dotted];
m19_26 -> m19_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_26 -> m19_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_26 -> m19_34  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_76  [key=2, style=dotted];
m19_27 -> m19_35  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_84  [key=2, style=dotted];
m19_28 -> m19_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_28 -> m19_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_28 -> m19_36  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_76  [key=2, style=dotted];
m19_29 -> m19_37  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_34  [key=0, style=solid];
m19_30 -> m19_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_76  [key=2, style=dotted];
m19_31 -> m19_20  [color=blue, key=0, style=bold];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_76  [key=2, style=dotted];
m19_34 -> m19_38  [color=green, key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_84  [key=2, style=dotted];
m19_32 -> m19_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_32 -> m19_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_84  [key=2, style=dotted];
m19_35 -> m19_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_35 -> m19_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_76  [key=2, style=dotted];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_82  [key=2, style=dotted];
m19_37 -> m19_84  [key=2, style=dotted];
m19_37 -> m19_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_37 -> m19_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_38 -> m19_39  [color=green, key=0, style=solid];
m19_38 -> m19_76  [key=2, style=dotted];
m19_38 -> m19_41  [color=green, key=0, style=solid];
m19_38 -> m19_43  [color=green, key=0, style=solid];
m19_38 -> m19_40  [color=green, key=1, label=payload, style=dashed];
m19_39 -> m19_40  [color=green, key=0, style=solid];
m19_39 -> m19_88  [key=2, style=dotted];
m19_39 -> m19_87  [key=2, style=dotted];
m19_39 -> m19_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_39 -> m19_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_39 -> m19_44  [color=green, key=2, style=dotted];
m19_39 -> m19_45  [color=green, key=2, style=dotted];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_76  [key=2, style=dotted];
m19_40 -> m19_38  [color=green, key=0, style=solid];
m19_40 -> m19_46  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_43  [key=0, style=solid];
m19_41 -> m19_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_41 -> m19_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_76  [key=2, style=dotted];
m19_42 -> m19_47  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_76  [key=2, style=dotted];
m19_43 -> m19_34  [color=blue, key=0, style=bold];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_76  [key=2, style=dotted];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_76  [key=2, style=dotted];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_89  [key=2, style=dotted];
m19_46 -> m19_84  [key=2, style=dotted];
m19_46 -> m19_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_46 -> m19_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_82  [key=2, style=dotted];
m19_51 -> m19_84  [key=2, style=dotted];
m19_51 -> m19_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_51 -> m19_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_76  [key=2, style=dotted];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_84  [key=2, style=dotted];
m19_48 -> m19_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_48 -> m19_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_76  [key=2, style=dotted];
m19_49 -> m19_57  [key=0, style=solid];
m19_49 -> m19_58  [key=0, style=solid];
m19_49 -> m19_60  [key=0, style=solid];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_76  [key=2, style=dotted];
m19_52 -> m19_51  [key=0, style=solid];
m19_52 -> m19_61  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_90  [key=2, style=dotted];
m19_53 -> m19_87  [key=2, style=dotted];
m19_53 -> m19_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_53 -> m19_55  [color=darkseagreen4, key=1, label=payload, style=dashed];
m19_53 -> m19_62  [key=2, style=dotted];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_76  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_59  [key=0, style=solid];
m19_55 -> m19_91  [key=2, style=dotted];
m19_55 -> m19_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_55 -> m19_57  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_55 -> m19_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_55 -> m19_63  [key=2, style=dotted];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_76  [key=2, style=dotted];
m19_56 -> m19_49  [key=0, style=solid];
m19_56 -> m19_64  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_76  [key=2, style=dotted];
m19_59 -> m19_65  [key=2, style=dotted];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_84  [key=2, style=dotted];
m19_57 -> m19_57  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_57 -> m19_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_22  [key=0, style=solid];
m19_60 -> m19_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_60 -> m19_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_60 -> m19_48  [color=blue, key=0, style=bold];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_76  [key=2, style=dotted];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_76  [key=2, style=dotted];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_84  [key=2, style=dotted];
m19_64 -> m19_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_64 -> m19_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_76  [key=2, style=dotted];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_76  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_84  [key=2, style=dotted];
m19_66 -> m19_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_66 -> m19_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_66 -> m19_38  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_39  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_1  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_2  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_3  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_4  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_10  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_12  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_13  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_14  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_21  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_22  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_23  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_24  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_25  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_26  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_27  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_28  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_29  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_30  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_40  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_42  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_50  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_51  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_52  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_53  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_54  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_55  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_56  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_66 -> m19_59  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_76  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_72  [key=0, style=solid];
m19_68 -> m19_91  [key=2, style=dotted];
m19_68 -> m19_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_68 -> m19_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_69 -> m19_70  [key=0, style=solid];
m19_69 -> m19_76  [key=2, style=dotted];
m19_72 -> m19_22  [key=0, style=solid];
m19_72 -> m19_76  [key=2, style=dotted];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_92  [key=2, style=dotted];
m19_70 -> m19_87  [key=2, style=dotted];
m19_70 -> m19_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_76  [key=2, style=dotted];
m19_75 -> m19_0  [color=blue, key=0, style=bold];
m19_94 -> m19_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m19_94 -> m19_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m20_0 -> m20_1  [color=red, key=0, style=solid];
m20_0 -> m20_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_0 -> m20_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_0 -> m20_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_0 -> m20_12  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_0 -> m20_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_0 -> m20_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_1 -> m20_2  [color=red, key=0, style=solid];
m20_1 -> m20_17  [color=red, key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_18  [key=2, style=dotted];
m20_4 -> m20_19  [key=2, style=dotted];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_20  [key=2, style=dotted];
m20_9 -> m20_10  [color=red, key=0, style=solid];
m20_9 -> m20_20  [key=2, style=dotted];
m20_12 -> m20_1  [color=red, key=0, style=solid];
m20_12 -> m20_23  [color=red, key=2, style=dotted];
m20_12 -> m20_24  [color=red, key=2, style=dotted];
m20_15 -> m20_1  [color=red, key=0, style=solid];
m20_15 -> m20_27  [key=2, style=dotted];
m20_15 -> m20_28  [key=2, style=dotted];
m20_16 -> m20_1  [color=red, key=0, style=solid];
m20_16 -> m20_28  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_2  [color=darkseagreen4, key=1, label=row, style=dashed];
m20_2 -> m20_4  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_2 -> m20_6  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_2 -> m20_9  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_2 -> m20_12  [color=red, key=1, label=name, style=dashed];
m20_2 -> m20_15  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_2 -> m20_16  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_3  [color=darkseagreen4, key=1, label=row, style=dashed];
m20_3 -> m20_5  [color=darkseagreen4, key=1, label=value, style=dashed];
m20_3 -> m20_8  [color=darkseagreen4, key=1, label=value, style=dashed];
m20_3 -> m20_11  [color=darkseagreen4, key=1, label=value, style=dashed];
m20_3 -> m20_13  [color=darkseagreen4, key=1, label=value, style=dashed];
m20_3 -> m20_14  [color=darkseagreen4, key=1, label=value, style=dashed];
m20_3 -> m20_16  [color=darkseagreen4, key=1, label=value, style=dashed];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_8  [key=0, style=solid];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_11  [key=0, style=solid];
m20_11 -> m20_12  [color=red, key=0, style=solid];
m20_11 -> m20_13  [key=0, style=solid];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_16  [key=0, style=solid];
m20_13 -> m20_25  [key=2, style=dotted];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_26  [key=2, style=dotted];
m20_7 -> m20_1  [color=red, key=0, style=solid];
m20_7 -> m20_21  [key=2, style=dotted];
m20_7 -> m20_19  [key=2, style=dotted];
m20_10 -> m20_1  [color=red, key=0, style=solid];
m20_10 -> m20_22  [color=red, key=2, style=dotted];
m20_10 -> m20_19  [color=red, key=2, style=dotted];
m20_17 -> m20_0  [color=blue, key=0, style=bold];
m23_12 -> m23_13  [key=0, style=solid];
m23_22 -> m23_18  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_2 -> m23_2  [color=green, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m23_2 -> m23_3  [color=green, key=0, style=solid];
m23_2 -> m23_9  [color=green, key=2, style=dotted];
m23_2 -> m23_14  [color=green, key=1, label="lambda expression", style=dashed];
m23_2 -> m23_6  [color=green, key=1, label=job, style=dashed];
m23_1 -> m23_2  [color=green, key=0, style=solid];
m23_1 -> m23_8  [key=2, style=dotted];
m23_1 -> m23_6  [color=darkseagreen4, key=1, label=connection, style=dashed];
m23_1 -> m23_0  [color=blue, key=0, style=bold];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_10  [key=2, style=dotted];
m23_3 -> m23_6  [color=darkseagreen4, key=1, label=state, style=dashed];
m23_3 -> m23_5  [key=2, style=dotted];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_13  [key=2, style=dotted];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_12  [key=2, style=dotted];
m23_4 -> m23_6  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_11  [key=2, style=dotted];
m23_4 -> m23_2  [color=blue, key=0, style=bold];
m23_7 -> m23_0  [color=blue, key=0, style=bold];
m23_7 -> m23_8  [key=0, style=solid];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_23 -> m23_328  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_5  [key=2, style=dotted];
m23_24 -> m23_6  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_5  [key=2, style=dotted];
m23_25 -> m23_11  [key=2, style=dotted];
m23_26 -> m23_23  [color=blue, key=0, style=bold];
m23_26 -> m23_27  [key=0, style=solid];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_5  [key=2, style=dotted];
m23_8 -> m23_6  [key=2, style=dotted];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_5  [key=2, style=dotted];
m23_9 -> m23_11  [key=2, style=dotted];
m23_10 -> m23_7  [color=blue, key=0, style=bold];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_5  [key=2, style=dotted];
m23_13 -> m23_11  [key=2, style=dotted];
m23_97 -> m23_98  [key=0, style=solid];
m23_98 -> m23_99  [key=0, style=solid];
m23_98 -> m23_46  [key=2, style=dotted];
m23_98 -> m23_24  [key=2, style=dotted];
m23_98 -> m23_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_101 -> m23_102  [key=0, style=solid];
m23_101 -> m23_62  [key=2, style=dotted];
m23_102 -> m23_103  [key=0, style=solid];
m23_102 -> m23_23  [key=2, style=dotted];
m23_102 -> m23_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_103 -> m23_104  [key=0, style=solid];
m23_103 -> m23_106  [key=2, style=dotted];
m23_103 -> m23_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_99 -> m23_101  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_99 -> m23_100  [key=0, style=solid];
m23_99 -> m23_61  [key=2, style=dotted];
m23_100 -> m23_101  [key=0, style=solid];
m23_100 -> m23_46  [key=2, style=dotted];
m23_100 -> m23_105  [key=2, style=dotted];
m23_100 -> m23_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_100 -> m23_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_104 -> m23_97  [color=blue, key=0, style=bold];
m23_41 -> m23_42  [key=0, style=solid];
m23_41 -> m23_5  [key=2, style=dotted];
m23_41 -> m23_35  [key=2, style=dotted];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_46  [key=2, style=dotted];
m23_42 -> m23_24  [key=2, style=dotted];
m23_42 -> m23_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_42 -> m23_44  [key=2, style=dotted];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_23  [key=2, style=dotted];
m23_43 -> m23_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_43 -> m23_40  [color=blue, key=0, style=bold];
m23_44 -> m23_45  [key=0, style=solid];
m23_44 -> m23_24  [key=2, style=dotted];
m23_44 -> m23_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_45 -> m23_41  [color=blue, key=0, style=bold];
m23_45 -> m23_46  [key=0, style=solid];
m23_251 -> m23_252  [key=0, style=solid];
m23_254 -> m23_255  [key=0, style=solid];
m23_254 -> m23_62  [key=2, style=dotted];
m23_255 -> m23_256  [key=0, style=solid];
m23_255 -> m23_62  [key=2, style=dotted];
m23_257 -> m23_258  [key=0, style=solid];
m23_257 -> m23_46  [key=2, style=dotted];
m23_257 -> m23_238  [key=2, style=dotted];
m23_257 -> m23_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_258 -> m23_259  [key=0, style=solid];
m23_258 -> m23_23  [key=2, style=dotted];
m23_258 -> m23_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_259 -> m23_260  [key=0, style=solid];
m23_259 -> m23_24  [key=2, style=dotted];
m23_259 -> m23_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_252 -> m23_254  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_252 -> m23_253  [key=0, style=solid];
m23_252 -> m23_128  [key=2, style=dotted];
m23_252 -> m23_260  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_253 -> m23_254  [key=0, style=solid];
m23_253 -> m23_255  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_253 -> m23_128  [key=2, style=dotted];
m23_256 -> m23_257  [key=0, style=solid];
m23_256 -> m23_237  [key=2, style=dotted];
m23_256 -> m23_260  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_256 -> m23_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_256 -> m23_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_260 -> m23_36  [key=2, style=dotted];
m23_260 -> m23_261  [key=0, style=solid];
m23_260 -> m23_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_261 -> m23_251  [color=blue, key=0, style=bold];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_50  [key=2, style=dotted];
m23_55 -> m23_56  [key=0, style=solid];
m23_55 -> m23_62  [key=2, style=dotted];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_46  [key=2, style=dotted];
m23_56 -> m23_24  [key=2, style=dotted];
m23_56 -> m23_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_23  [key=2, style=dotted];
m23_57 -> m23_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_24  [key=2, style=dotted];
m23_58 -> m23_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_61  [key=2, style=dotted];
m23_54 -> m23_59  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_54 -> m23_51  [color=blue, key=0, style=bold];
m23_59 -> m23_36  [key=2, style=dotted];
m23_59 -> m23_60  [key=0, style=solid];
m23_59 -> m23_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_60 -> m23_53  [color=blue, key=0, style=bold];
m23_29 -> m23_29  [color=darkorchid, key=3, label="Local variable object instance", style=bold];
m23_29 -> m23_27  [color=blue, key=0, style=bold];
m23_119 -> m23_120  [key=0, style=solid];
m23_121 -> m23_122  [key=0, style=solid];
m23_121 -> m23_62  [key=2, style=dotted];
m23_123 -> m23_124  [key=0, style=solid];
m23_123 -> m23_46  [key=2, style=dotted];
m23_123 -> m23_84  [key=2, style=dotted];
m23_123 -> m23_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_125 -> m23_126  [key=0, style=solid];
m23_125 -> m23_23  [key=2, style=dotted];
m23_126 -> m23_127  [key=0, style=solid];
m23_126 -> m23_35  [key=2, style=dotted];
m23_120 -> m23_121  [key=0, style=solid];
m23_120 -> m23_128  [key=2, style=dotted];
m23_120 -> m23_122  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_120 -> m23_124  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_122 -> m23_123  [key=0, style=solid];
m23_122 -> m23_46  [key=2, style=dotted];
m23_122 -> m23_84  [key=2, style=dotted];
m23_122 -> m23_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_124 -> m23_125  [key=0, style=solid];
m23_124 -> m23_46  [key=2, style=dotted];
m23_124 -> m23_84  [key=2, style=dotted];
m23_124 -> m23_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_127 -> m23_119  [color=blue, key=0, style=bold];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_15  [color=blue, key=0, style=bold];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_23  [key=2, style=dotted];
m23_19 -> m23_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_24  [key=2, style=dotted];
m23_20 -> m23_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_20 -> m23_22  [key=2, style=dotted];
m23_20 -> m23_6  [key=2, style=dotted];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_25  [key=2, style=dotted];
m23_21 -> m23_19  [color=blue, key=0, style=bold];
m23_164 -> m23_165  [key=0, style=solid];
m23_166 -> m23_167  [key=0, style=solid];
m23_166 -> m23_62  [key=2, style=dotted];
m23_168 -> m23_169  [key=0, style=solid];
m23_168 -> m23_23  [key=2, style=dotted];
m23_169 -> m23_170  [key=0, style=solid];
m23_169 -> m23_35  [key=2, style=dotted];
m23_170 -> m23_171  [key=0, style=solid];
m23_170 -> m23_36  [key=2, style=dotted];
m23_170 -> m23_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_165 -> m23_166  [key=0, style=solid];
m23_165 -> m23_128  [key=2, style=dotted];
m23_165 -> m23_167  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_165 -> m23_171  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_167 -> m23_168  [key=0, style=solid];
m23_167 -> m23_46  [key=2, style=dotted];
m23_167 -> m23_105  [key=2, style=dotted];
m23_167 -> m23_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_167 -> m23_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_171 -> m23_36  [key=2, style=dotted];
m23_171 -> m23_172  [key=0, style=solid];
m23_171 -> m23_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_172 -> m23_164  [color=blue, key=0, style=bold];
m23_50 -> m23_51  [key=0, style=solid];
m23_328 -> m23_329  [key=0, style=solid];
m23_328 -> m23_330  [key=2, style=dotted];
m23_329 -> m23_23  [color=blue, key=0, style=bold];
m23_49 -> m23_47  [color=blue, key=0, style=bold];
m23_228 -> m23_229  [key=0, style=solid];
m23_230 -> m23_231  [key=0, style=solid];
m23_230 -> m23_62  [key=2, style=dotted];
m23_232 -> m23_233  [key=0, style=solid];
m23_232 -> m23_46  [key=2, style=dotted];
m23_232 -> m23_238  [key=2, style=dotted];
m23_232 -> m23_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_233 -> m23_234  [key=0, style=solid];
m23_233 -> m23_23  [key=2, style=dotted];
m23_233 -> m23_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_234 -> m23_235  [key=0, style=solid];
m23_234 -> m23_24  [key=2, style=dotted];
m23_234 -> m23_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_229 -> m23_230  [key=0, style=solid];
m23_229 -> m23_128  [key=2, style=dotted];
m23_229 -> m23_235  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_231 -> m23_232  [key=0, style=solid];
m23_231 -> m23_237  [key=2, style=dotted];
m23_231 -> m23_235  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_231 -> m23_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_231 -> m23_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_235 -> m23_36  [key=2, style=dotted];
m23_235 -> m23_236  [key=0, style=solid];
m23_235 -> m23_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_236 -> m23_228  [color=blue, key=0, style=bold];
m23_40 -> m23_41  [key=0, style=solid];
m23_185 -> m23_186  [key=0, style=solid];
m23_188 -> m23_189  [key=0, style=solid];
m23_188 -> m23_62  [key=2, style=dotted];
m23_189 -> m23_190  [key=0, style=solid];
m23_189 -> m23_62  [key=2, style=dotted];
m23_191 -> m23_192  [key=0, style=solid];
m23_191 -> m23_23  [key=2, style=dotted];
m23_192 -> m23_193  [key=0, style=solid];
m23_192 -> m23_35  [key=2, style=dotted];
m23_186 -> m23_188  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_186 -> m23_187  [key=0, style=solid];
m23_186 -> m23_128  [key=2, style=dotted];
m23_186 -> m23_193  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_187 -> m23_188  [key=0, style=solid];
m23_187 -> m23_189  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_187 -> m23_128  [key=2, style=dotted];
m23_187 -> m23_190  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_190 -> m23_191  [key=0, style=solid];
m23_190 -> m23_46  [key=2, style=dotted];
m23_190 -> m23_105  [key=2, style=dotted];
m23_190 -> m23_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_190 -> m23_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_193 -> m23_36  [key=2, style=dotted];
m23_193 -> m23_194  [key=0, style=solid];
m23_193 -> m23_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_194 -> m23_185  [color=blue, key=0, style=bold];
m23_46 -> m23_47  [key=0, style=solid];
m23_46 -> m23_5  [key=2, style=dotted];
m23_46 -> m23_49  [key=2, style=dotted];
m23_15 -> m23_16  [color=green, key=0, style=solid];
m23_15 -> m23_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_6  [key=2, style=dotted];
m23_16 -> m23_14  [color=blue, key=0, style=bold];
m23_17 -> m23_18  [key=0, style=solid];
m23_17 -> m23_5  [key=2, style=dotted];
m23_17 -> m23_11  [key=2, style=dotted];
m23_17 -> m23_327  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_5  [key=2, style=dotted];
m23_38 -> m23_30  [key=2, style=dotted];
m23_38 -> m23_40  [key=2, style=dotted];
m23_39 -> m23_37  [color=blue, key=0, style=bold];
m23_14 -> m23_12  [color=blue, key=0, style=bold];
m23_14 -> m23_15  [color=green, key=0, style=solid];
m23_73 -> m23_74  [key=0, style=solid];
m23_78 -> m23_79  [key=0, style=solid];
m23_78 -> m23_62  [key=2, style=dotted];
m23_79 -> m23_80  [key=0, style=solid];
m23_79 -> m23_62  [key=2, style=dotted];
m23_80 -> m23_81  [key=0, style=solid];
m23_80 -> m23_46  [key=2, style=dotted];
m23_80 -> m23_24  [key=2, style=dotted];
m23_80 -> m23_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_81 -> m23_82  [key=0, style=solid];
m23_81 -> m23_23  [key=2, style=dotted];
m23_81 -> m23_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_24  [key=2, style=dotted];
m23_82 -> m23_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_74 -> m23_78  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_61  [key=2, style=dotted];
m23_74 -> m23_77  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m23_77 -> m23_78  [key=0, style=solid];
m23_77 -> m23_46  [key=2, style=dotted];
m23_77 -> m23_84  [key=2, style=dotted];
m23_77 -> m23_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_75 -> m23_79  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m23_75 -> m23_76  [key=0, style=solid];
m23_75 -> m23_61  [key=2, style=dotted];
m23_76 -> m23_46  [key=2, style=dotted];
m23_76 -> m23_77  [key=0, style=solid];
m23_76 -> m23_84  [key=2, style=dotted];
m23_76 -> m23_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_83 -> m23_73  [color=blue, key=0, style=bold];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_23  [key=2, style=dotted];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_5  [key=2, style=dotted];
m23_32 -> m23_35  [key=2, style=dotted];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_36  [key=2, style=dotted];
m23_33 -> m23_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_34 -> m23_31  [color=blue, key=0, style=bold];
m23_34 -> m23_30  [color=blue, key=0, style=bold];
m23_324 -> m23_325  [key=0, style=solid];
m23_51 -> m23_52  [key=0, style=solid];
m23_51 -> m23_35  [key=2, style=dotted];
m23_51 -> m23_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_35  [key=2, style=dotted];
m23_95 -> m23_96  [key=0, style=solid];
m23_95 -> m23_35  [key=2, style=dotted];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_35  [key=2, style=dotted];
m23_220 -> m23_221  [key=0, style=solid];
m23_220 -> m23_35  [key=2, style=dotted];
m23_243 -> m23_244  [key=0, style=solid];
m23_243 -> m23_35  [key=2, style=dotted];
m23_266 -> m23_267  [key=0, style=solid];
m23_266 -> m23_35  [key=2, style=dotted];
m23_296 -> m23_297  [key=0, style=solid];
m23_296 -> m23_35  [key=2, style=dotted];
m23_319 -> m23_320  [key=0, style=solid];
m23_319 -> m23_35  [key=2, style=dotted];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_29  [key=2, style=dotted];
m23_47 -> m23_48  [key=0, style=solid];
m23_47 -> m23_50  [key=2, style=dotted];
m23_52 -> m23_50  [color=blue, key=0, style=bold];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_5  [key=2, style=dotted];
m23_52 -> m23_49  [key=2, style=dotted];
m23_63 -> m23_64  [key=0, style=solid];
m23_66 -> m23_67  [key=0, style=solid];
m23_68 -> m23_66  [color=blue, key=0, style=bold];
m23_91 -> m23_92  [key=0, style=solid];
m23_94 -> m23_95  [key=0, style=solid];
m23_96 -> m23_94  [color=blue, key=0, style=bold];
m23_107 -> m23_108  [key=0, style=solid];
m23_116 -> m23_117  [key=0, style=solid];
m23_118 -> m23_116  [color=blue, key=0, style=bold];
m23_133 -> m23_134  [key=0, style=solid];
m23_179 -> m23_180  [key=0, style=solid];
m23_219 -> m23_220  [key=0, style=solid];
m23_221 -> m23_219  [color=blue, key=0, style=bold];
m23_222 -> m23_223  [key=0, style=solid];
m23_239 -> m23_240  [key=0, style=solid];
m23_242 -> m23_243  [key=0, style=solid];
m23_244 -> m23_242  [color=blue, key=0, style=bold];
m23_262 -> m23_263  [key=0, style=solid];
m23_265 -> m23_266  [key=0, style=solid];
m23_267 -> m23_265  [color=blue, key=0, style=bold];
m23_283 -> m23_284  [key=0, style=solid];
m23_295 -> m23_296  [key=0, style=solid];
m23_297 -> m23_295  [color=blue, key=0, style=bold];
m23_309 -> m23_310  [key=0, style=solid];
m23_318 -> m23_319  [key=0, style=solid];
m23_320 -> m23_318  [color=blue, key=0, style=bold];
m23_28 -> m23_26  [color=blue, key=0, style=bold];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_5  [key=2, style=dotted];
m23_28 -> m23_30  [key=2, style=dotted];
m23_70 -> m23_24  [key=2, style=dotted];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_72  [key=2, style=dotted];
m23_86 -> m23_24  [key=2, style=dotted];
m23_86 -> m23_87  [key=0, style=solid];
m23_86 -> m23_72  [key=2, style=dotted];
m23_89 -> m23_24  [key=2, style=dotted];
m23_89 -> m23_90  [key=0, style=solid];
m23_89 -> m23_72  [key=2, style=dotted];
m23_111 -> m23_24  [key=2, style=dotted];
m23_111 -> m23_112  [key=0, style=solid];
m23_111 -> m23_72  [key=2, style=dotted];
m23_130 -> m23_24  [key=2, style=dotted];
m23_130 -> m23_131  [key=0, style=solid];
m23_130 -> m23_132  [key=2, style=dotted];
m23_137 -> m23_24  [key=2, style=dotted];
m23_137 -> m23_138  [key=0, style=solid];
m23_137 -> m23_139  [key=2, style=dotted];
m23_153 -> m23_24  [key=2, style=dotted];
m23_153 -> m23_154  [key=0, style=solid];
m23_153 -> m23_132  [key=2, style=dotted];
m23_156 -> m23_24  [key=2, style=dotted];
m23_156 -> m23_157  [key=0, style=solid];
m23_156 -> m23_132  [key=2, style=dotted];
m23_159 -> m23_24  [key=2, style=dotted];
m23_159 -> m23_160  [key=0, style=solid];
m23_159 -> m23_139  [key=2, style=dotted];
m23_162 -> m23_24  [key=2, style=dotted];
m23_162 -> m23_163  [key=0, style=solid];
m23_162 -> m23_139  [key=2, style=dotted];
m23_174 -> m23_24  [key=2, style=dotted];
m23_174 -> m23_175  [key=0, style=solid];
m23_174 -> m23_132  [key=2, style=dotted];
m23_183 -> m23_24  [key=2, style=dotted];
m23_183 -> m23_184  [key=0, style=solid];
m23_183 -> m23_139  [key=2, style=dotted];
m23_196 -> m23_24  [key=2, style=dotted];
m23_196 -> m23_197  [key=0, style=solid];
m23_196 -> m23_132  [key=2, style=dotted];
m23_202 -> m23_24  [key=2, style=dotted];
m23_202 -> m23_203  [key=0, style=solid];
m23_202 -> m23_139  [key=2, style=dotted];
m23_202 -> m23_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_217 -> m23_24  [key=2, style=dotted];
m23_217 -> m23_218  [key=0, style=solid];
m23_217 -> m23_132  [key=2, style=dotted];
m23_226 -> m23_24  [key=2, style=dotted];
m23_226 -> m23_227  [key=0, style=solid];
m23_226 -> m23_139  [key=2, style=dotted];
m23_246 -> m23_24  [key=2, style=dotted];
m23_246 -> m23_247  [key=0, style=solid];
m23_246 -> m23_139  [key=2, style=dotted];
m23_246 -> m23_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_269 -> m23_24  [key=2, style=dotted];
m23_269 -> m23_270  [key=0, style=solid];
m23_269 -> m23_139  [key=2, style=dotted];
m23_269 -> m23_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_287 -> m23_24  [key=2, style=dotted];
m23_287 -> m23_288  [key=0, style=solid];
m23_287 -> m23_139  [key=2, style=dotted];
m23_287 -> m23_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_313 -> m23_24  [key=2, style=dotted];
m23_313 -> m23_314  [key=0, style=solid];
m23_313 -> m23_139  [key=2, style=dotted];
m23_322 -> m23_24  [key=2, style=dotted];
m23_322 -> m23_323  [key=0, style=solid];
m23_322 -> m23_139  [key=2, style=dotted];
m23_322 -> m23_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_48 -> m23_49  [key=0, style=solid];
m23_48 -> m23_40  [key=2, style=dotted];
m23_48 -> m23_45  [color=blue, key=0, style=bold];
m23_65 -> m23_63  [color=blue, key=0, style=bold];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_40  [key=2, style=dotted];
m23_69 -> m23_70  [key=0, style=solid];
m23_88 -> m23_89  [key=0, style=solid];
m23_93 -> m23_91  [color=blue, key=0, style=bold];
m23_92 -> m23_93  [key=0, style=solid];
m23_92 -> m23_40  [key=2, style=dotted];
m23_109 -> m23_107  [color=blue, key=0, style=bold];
m23_108 -> m23_109  [key=0, style=solid];
m23_108 -> m23_40  [key=2, style=dotted];
m23_110 -> m23_111  [key=0, style=solid];
m23_113 -> m23_114  [key=0, style=solid];
m23_129 -> m23_130  [key=0, style=solid];
m23_136 -> m23_137  [key=0, style=solid];
m23_135 -> m23_133  [color=blue, key=0, style=bold];
m23_134 -> m23_135  [key=0, style=solid];
m23_134 -> m23_40  [key=2, style=dotted];
m23_152 -> m23_153  [key=0, style=solid];
m23_161 -> m23_162  [key=0, style=solid];
m23_173 -> m23_174  [key=0, style=solid];
m23_176 -> m23_177  [key=0, style=solid];
m23_182 -> m23_183  [key=0, style=solid];
m23_181 -> m23_179  [color=blue, key=0, style=bold];
m23_180 -> m23_181  [key=0, style=solid];
m23_180 -> m23_40  [key=2, style=dotted];
m23_195 -> m23_196  [key=0, style=solid];
m23_198 -> m23_199  [key=0, style=solid];
m23_201 -> m23_202  [key=0, style=solid];
m23_216 -> m23_217  [key=0, style=solid];
m23_225 -> m23_226  [key=0, style=solid];
m23_224 -> m23_222  [color=blue, key=0, style=bold];
m23_223 -> m23_224  [key=0, style=solid];
m23_223 -> m23_40  [key=2, style=dotted];
m23_249 -> m23_250  [key=0, style=solid];
m23_241 -> m23_239  [color=blue, key=0, style=bold];
m23_240 -> m23_241  [key=0, style=solid];
m23_240 -> m23_40  [key=2, style=dotted];
m23_245 -> m23_246  [key=0, style=solid];
m23_272 -> m23_273  [key=0, style=solid];
m23_264 -> m23_262  [color=blue, key=0, style=bold];
m23_263 -> m23_264  [key=0, style=solid];
m23_263 -> m23_40  [key=2, style=dotted];
m23_268 -> m23_269  [key=0, style=solid];
m23_290 -> m23_291  [key=0, style=solid];
m23_286 -> m23_287  [key=0, style=solid];
m23_292 -> m23_293  [key=0, style=solid];
m23_285 -> m23_283  [color=blue, key=0, style=bold];
m23_284 -> m23_285  [key=0, style=solid];
m23_284 -> m23_40  [key=2, style=dotted];
m23_312 -> m23_313  [key=0, style=solid];
m23_315 -> m23_316  [key=0, style=solid];
m23_311 -> m23_309  [color=blue, key=0, style=bold];
m23_310 -> m23_311  [key=0, style=solid];
m23_310 -> m23_40  [key=2, style=dotted];
m23_321 -> m23_322  [key=0, style=solid];
m23_85 -> m23_86  [key=0, style=solid];
m23_155 -> m23_156  [key=0, style=solid];
m23_158 -> m23_159  [key=0, style=solid];
m23_71 -> m23_69  [color=blue, key=0, style=bold];
m23_87 -> m23_85  [color=blue, key=0, style=bold];
m23_90 -> m23_88  [color=blue, key=0, style=bold];
m23_112 -> m23_110  [color=blue, key=0, style=bold];
m23_131 -> m23_129  [color=blue, key=0, style=bold];
m23_138 -> m23_136  [color=blue, key=0, style=bold];
m23_154 -> m23_152  [color=blue, key=0, style=bold];
m23_157 -> m23_155  [color=blue, key=0, style=bold];
m23_160 -> m23_158  [color=blue, key=0, style=bold];
m23_163 -> m23_161  [color=blue, key=0, style=bold];
m23_175 -> m23_173  [color=blue, key=0, style=bold];
m23_184 -> m23_182  [color=blue, key=0, style=bold];
m23_197 -> m23_195  [color=blue, key=0, style=bold];
m23_203 -> m23_201  [color=blue, key=0, style=bold];
m23_204 -> m23_205  [key=0, style=solid];
m23_218 -> m23_216  [color=blue, key=0, style=bold];
m23_227 -> m23_225  [color=blue, key=0, style=bold];
m23_247 -> m23_245  [color=blue, key=0, style=bold];
m23_248 -> m23_249  [key=0, style=solid];
m23_270 -> m23_268  [color=blue, key=0, style=bold];
m23_271 -> m23_272  [key=0, style=solid];
m23_288 -> m23_286  [color=blue, key=0, style=bold];
m23_289 -> m23_290  [key=0, style=solid];
m23_314 -> m23_312  [color=blue, key=0, style=bold];
m23_323 -> m23_321  [color=blue, key=0, style=bold];
m23_115 -> m23_113  [color=blue, key=0, style=bold];
m23_114 -> m23_115  [key=0, style=solid];
m23_178 -> m23_176  [color=blue, key=0, style=bold];
m23_177 -> m23_178  [key=0, style=solid];
m23_200 -> m23_198  [color=blue, key=0, style=bold];
m23_199 -> m23_200  [key=0, style=solid];
m23_250 -> m23_248  [color=blue, key=0, style=bold];
m23_273 -> m23_271  [color=blue, key=0, style=bold];
m23_291 -> m23_289  [color=blue, key=0, style=bold];
m23_294 -> m23_292  [color=blue, key=0, style=bold];
m23_293 -> m23_294  [key=0, style=solid];
m23_317 -> m23_315  [color=blue, key=0, style=bold];
m23_316 -> m23_317  [key=0, style=solid];
m23_206 -> m23_204  [color=blue, key=0, style=bold];
m23_205 -> m23_206  [key=0, style=solid];
m23_325 -> m23_326  [key=0, style=solid];
m23_326 -> m23_324  [color=blue, key=0, style=bold];
m23_30 -> m23_31  [key=0, style=solid];
m23_207 -> m23_208  [key=0, style=solid];
m23_209 -> m23_210  [key=0, style=solid];
m23_209 -> m23_62  [key=2, style=dotted];
m23_211 -> m23_212  [key=0, style=solid];
m23_211 -> m23_23  [key=2, style=dotted];
m23_211 -> m23_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_212 -> m23_213  [key=0, style=solid];
m23_212 -> m23_24  [key=2, style=dotted];
m23_212 -> m23_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_213 -> m23_214  [key=0, style=solid];
m23_213 -> m23_36  [key=2, style=dotted];
m23_213 -> m23_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_208 -> m23_209  [key=0, style=solid];
m23_208 -> m23_128  [key=2, style=dotted];
m23_208 -> m23_210  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_208 -> m23_214  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_210 -> m23_211  [key=0, style=solid];
m23_210 -> m23_46  [key=2, style=dotted];
m23_210 -> m23_24  [key=2, style=dotted];
m23_210 -> m23_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_214 -> m23_36  [key=2, style=dotted];
m23_214 -> m23_215  [key=0, style=solid];
m23_214 -> m23_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_215 -> m23_207  [color=blue, key=0, style=bold];
m23_298 -> m23_299  [key=0, style=solid];
m23_301 -> m23_302  [key=0, style=solid];
m23_301 -> m23_62  [key=2, style=dotted];
m23_302 -> m23_303  [key=0, style=solid];
m23_302 -> m23_62  [key=2, style=dotted];
m23_303 -> m23_304  [key=0, style=solid];
m23_303 -> m23_46  [key=2, style=dotted];
m23_303 -> m23_24  [key=2, style=dotted];
m23_303 -> m23_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_305 -> m23_306  [key=0, style=solid];
m23_305 -> m23_23  [key=2, style=dotted];
m23_305 -> m23_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_306 -> m23_307  [key=0, style=solid];
m23_306 -> m23_106  [key=2, style=dotted];
m23_306 -> m23_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_299 -> m23_301  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_299 -> m23_300  [key=0, style=solid];
m23_299 -> m23_128  [key=2, style=dotted];
m23_299 -> m23_307  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_300 -> m23_301  [key=0, style=solid];
m23_300 -> m23_302  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_300 -> m23_128  [key=2, style=dotted];
m23_300 -> m23_304  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_304 -> m23_305  [key=0, style=solid];
m23_304 -> m23_46  [key=2, style=dotted];
m23_304 -> m23_105  [key=2, style=dotted];
m23_304 -> m23_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_304 -> m23_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_307 -> m23_36  [key=2, style=dotted];
m23_307 -> m23_308  [key=0, style=solid];
m23_307 -> m23_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_308 -> m23_298  [color=blue, key=0, style=bold];
m23_274 -> m23_275  [key=0, style=solid];
m23_276 -> m23_277  [key=0, style=solid];
m23_276 -> m23_62  [key=2, style=dotted];
m23_278 -> m23_279  [key=0, style=solid];
m23_278 -> m23_46  [key=2, style=dotted];
m23_278 -> m23_238  [key=2, style=dotted];
m23_278 -> m23_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_280 -> m23_281  [key=0, style=solid];
m23_280 -> m23_23  [key=2, style=dotted];
m23_280 -> m23_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_281 -> m23_282  [key=0, style=solid];
m23_281 -> m23_106  [key=2, style=dotted];
m23_281 -> m23_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_275 -> m23_276  [key=0, style=solid];
m23_275 -> m23_128  [key=2, style=dotted];
m23_275 -> m23_279  [color=darkseagreen4, key=1, label=filter, style=dashed];
m23_277 -> m23_278  [key=0, style=solid];
m23_277 -> m23_237  [key=2, style=dotted];
m23_277 -> m23_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_277 -> m23_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_277 -> m23_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_279 -> m23_280  [key=0, style=solid];
m23_279 -> m23_46  [key=2, style=dotted];
m23_279 -> m23_105  [key=2, style=dotted];
m23_279 -> m23_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_279 -> m23_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_282 -> m23_274  [color=blue, key=0, style=bold];
m23_327 -> m23_17  [color=blue, key=0, style=bold];
m23_140 -> m23_141  [key=0, style=solid];
m23_143 -> m23_144  [key=0, style=solid];
m23_143 -> m23_62  [key=2, style=dotted];
m23_144 -> m23_145  [key=0, style=solid];
m23_144 -> m23_62  [key=2, style=dotted];
m23_149 -> m23_150  [key=0, style=solid];
m23_149 -> m23_23  [key=2, style=dotted];
m23_150 -> m23_151  [key=0, style=solid];
m23_150 -> m23_35  [key=2, style=dotted];
m23_141 -> m23_143  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_141 -> m23_142  [key=0, style=solid];
m23_141 -> m23_128  [key=2, style=dotted];
m23_141 -> m23_145  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_141 -> m23_148  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m23_142 -> m23_143  [key=0, style=solid];
m23_142 -> m23_144  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_142 -> m23_128  [key=2, style=dotted];
m23_142 -> m23_146  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_142 -> m23_147  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m23_145 -> m23_46  [key=2, style=dotted];
m23_145 -> m23_84  [key=2, style=dotted];
m23_145 -> m23_146  [key=0, style=solid];
m23_145 -> m23_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_148 -> m23_149  [key=0, style=solid];
m23_148 -> m23_46  [key=2, style=dotted];
m23_148 -> m23_84  [key=2, style=dotted];
m23_148 -> m23_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_146 -> m23_46  [key=2, style=dotted];
m23_146 -> m23_84  [key=2, style=dotted];
m23_146 -> m23_147  [key=0, style=solid];
m23_146 -> m23_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_147 -> m23_46  [key=2, style=dotted];
m23_147 -> m23_84  [key=2, style=dotted];
m23_147 -> m23_148  [key=0, style=solid];
m23_147 -> m23_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_151 -> m23_140  [color=blue, key=0, style=bold];
m23_331 -> m23_2  [color=green, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_15  [color=green, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_56  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_80  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_81  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_126  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_143  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_144  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_170  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_189  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_191  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_209  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_211  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_220  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_213  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_230  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_232  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_233  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_234  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_243  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_254  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_255  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_257  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_258  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_266  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_276  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_278  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_280  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_281  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_296  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_301  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_302  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_305  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_306  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_319  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_331 -> m23_328  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m23_333 -> m23_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_334 -> m23_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_335 -> m23_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_336 -> m23_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_337 -> m23_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_338 -> m23_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_340 -> m23_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_343 -> m23_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_344 -> m23_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_332 -> m23_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m23_339 -> m23_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_339 -> m23_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_341 -> m23_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_341 -> m23_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_342 -> m23_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_342 -> m23_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m24_0 -> m24_5  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m24_0 -> m24_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m24_0 -> m24_7  [color=red, key=1, label=IRedisClient, style=dashed];
m24_0 -> m24_10  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m24_0 -> m24_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m24_0 -> m24_0  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [color=red, key=0, style=solid];
m24_6 -> m24_12  [key=0, style=solid];
m24_7 -> m24_8  [color=red, key=0, style=solid];
m24_7 -> m24_14  [color=red, key=2, style=dotted];
m24_7 -> m24_15  [color=red, key=2, style=dotted];
m24_7 -> m24_9  [color=red, key=1, label=retryCount, style=dashed];
m24_7 -> m24_10  [color=red, key=1, label=retryCount, style=dashed];
m24_10 -> m24_12  [color=red, key=0, style=solid];
m24_10 -> m24_18  [color=red, key=2, style=dotted];
m24_10 -> m24_19  [color=red, key=2, style=dotted];
m24_11 -> m24_12  [key=0, style=solid];
m24_2 -> m24_12  [key=0, style=solid];
m24_2 -> m24_13  [key=2, style=dotted];
m24_4 -> m24_12  [key=0, style=solid];
m24_4 -> m24_13  [key=2, style=dotted];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_11  [key=0, style=solid];
m24_9 -> m24_10  [color=red, key=0, style=solid];
m24_9 -> m24_16  [key=2, style=dotted];
m24_9 -> m24_17  [key=2, style=dotted];
m24_12 -> m24_0  [color=blue, key=0, style=bold];
m24_20 -> m24_21  [key=0, style=solid];
m24_20 -> m24_22  [color=darkseagreen4, key=1, label=long, style=dashed];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_24  [key=2, style=dotted];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_25  [key=2, style=dotted];
m24_22 -> m24_26  [key=2, style=dotted];
m24_22 -> m24_27  [key=2, style=dotted];
m24_23 -> m24_20  [color=blue, key=0, style=bold];
m24_28 -> m24_9  [color=darkseagreen4, key=1, label="HangFire.RetryJobsFilter", style=dashed];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m25_0 -> m25_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m25_0 -> m25_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_0 -> m25_8  [color=red, key=1, label="Hangfire.JobStorage", style=dashed];
m25_0 -> m25_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m25_0 -> m25_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=0, style=solid];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_7  [key=0, style=solid];
m25_7 -> m25_8  [color=red, key=0, style=solid];
m25_8 -> m25_9  [color=red, key=0, style=solid];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_13  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_2 -> m25_11  [key=0, style=solid];
m25_2 -> m25_12  [key=2, style=dotted];
m25_4 -> m25_11  [key=0, style=solid];
m25_4 -> m25_12  [key=2, style=dotted];
m25_6 -> m25_11  [key=0, style=solid];
m25_6 -> m25_12  [key=2, style=dotted];
m25_11 -> m25_0  [color=blue, key=0, style=bold];
m25_14 -> m25_7  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m25_14 -> m25_8  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m25_14 -> m25_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m25_14 -> m25_10  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m26_35 -> m26_36  [color=green, key=0, style=solid];
m26_36 -> m26_37  [color=green, key=0, style=solid];
m26_36 -> m26_38  [color=green, key=2, style=dotted];
m26_36 -> m26_39  [color=green, key=2, style=dotted];
m26_37 -> m26_35  [color=blue, key=0, style=bold];
m26_2 -> m26_3  [color=green, key=0, style=solid];
m26_2 -> m26_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m26_2 -> m26_6  [color=green, key=1, label="System.TimeSpan", style=dashed];
m26_3 -> m26_4  [color=green, key=0, style=solid];
m26_3 -> m26_5  [color=green, key=0, style=solid];
m26_4 -> m26_7  [color=green, key=0, style=solid];
m26_4 -> m26_8  [color=green, key=2, style=dotted];
m26_5 -> m26_6  [color=green, key=0, style=solid];
m26_6 -> m26_7  [color=green, key=0, style=solid];
m26_7 -> m26_2  [color=blue, key=0, style=bold];
m26_27 -> m26_13  [color=green, key=1, label=SqlConnection, style=dashed];
m26_27 -> m26_29  [color=green, key=1, label=SqlConnection, style=dashed];
m26_27 -> m26_28  [color=green, key=0, style=solid];
m26_29 -> m26_30  [color=green, key=0, style=solid];
m26_29 -> m26_32  [color=green, key=2, style=dotted];
m26_29 -> m26_33  [color=green, key=2, style=dotted];
m26_28 -> m26_29  [color=green, key=0, style=solid];
m26_28 -> m26_31  [color=green, key=2, style=dotted];
m26_30 -> m26_27  [color=blue, key=0, style=bold];
m26_9 -> m26_10  [color=green, key=0, style=solid];
m26_9 -> m26_16  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_9 -> m26_19  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_10 -> m26_11  [color=green, key=0, style=solid];
m26_10 -> m26_19  [color=green, key=0, style=solid];
m26_10 -> m26_13  [color=green, key=1, label=table, style=dashed];
m26_10 -> m26_29  [color=green, key=1, label=table, style=dashed];
m26_10 -> m26_15  [color=green, key=1, label=table, style=dashed];
m26_18 -> m26_10  [color=green, key=0, style=solid];
m26_18 -> m26_12  [color=green, key=0, style=solid];
m26_11 -> m26_12  [color=green, key=0, style=solid];
m26_11 -> m26_21  [color=green, key=2, style=dotted];
m26_19 -> m26_19  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_19 -> m26_20  [color=green, key=0, style=solid];
m26_19 -> m26_25  [color=green, key=2, style=dotted];
m26_13 -> m26_14  [color=green, key=0, style=solid];
m26_13 -> m26_22  [color=green, key=2, style=dotted];
m26_13 -> m26_34  [color=green, key=2, style=dotted];
m26_13 -> m26_27  [color=green, key=1, label="lambda expression", style=dashed];
m26_13 -> m26_15  [color=green, key=1, label=removedCount, style=dashed];
m26_13 -> m26_18  [color=green, key=1, label=removedCount, style=dashed];
m26_15 -> m26_16  [color=green, key=0, style=solid];
m26_15 -> m26_23  [color=green, key=2, style=dotted];
m26_15 -> m26_24  [color=green, key=2, style=dotted];
m26_16 -> m26_16  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_16 -> m26_17  [color=green, key=0, style=solid];
m26_16 -> m26_25  [color=green, key=2, style=dotted];
m26_17 -> m26_19  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_17 -> m26_18  [color=green, key=0, style=solid];
m26_17 -> m26_17  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_17 -> m26_26  [color=green, key=2, style=dotted];
m26_12 -> m26_13  [color=green, key=0, style=solid];
m26_12 -> m26_12  [color=green, key=3, label="Local variable int removedCount", style=bold];
m26_14 -> m26_15  [color=green, key=0, style=solid];
m26_14 -> m26_18  [color=green, key=0, style=solid];
m26_20 -> m26_9  [color=blue, key=0, style=bold];
m26_40 -> m26_5  [color=green, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m26_40 -> m26_6  [color=green, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m26_40 -> m26_19  [color=green, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m26_40 -> m26_13  [color=green, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m26_40 -> m26_36  [color=green, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
m26_41 -> m26_29  [color=green, key=1, label=table, style=dashed];
m27_18 -> m27_19  [key=0, style=solid];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_21  [key=2, style=dotted];
m27_20 -> m27_18  [color=blue, key=0, style=bold];
m27_38 -> m27_39  [key=0, style=solid];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_43  [key=0, style=solid];
m27_39 -> m27_45  [key=0, style=solid];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_5  [key=2, style=dotted];
m27_43 -> m27_44  [key=0, style=solid];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_39  [key=0, style=solid];
m27_42 -> m27_39  [key=0, style=solid];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_45  [key=0, style=solid];
m27_42 -> m27_46  [key=2, style=dotted];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_47  [key=2, style=dotted];
m27_45 -> m27_38  [color=blue, key=0, style=bold];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_26  [color=green, key=1, label=string, style=dashed];
m27_22 -> m27_27  [color=green, key=1, label=string, style=dashed];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_29  [key=2, style=dotted];
m27_23 -> m27_30  [key=2, style=dotted];
m27_23 -> m27_27  [color=green, key=1, label=jobType, style=dashed];
m27_26 -> m27_28  [color=green, key=0, style=solid];
m27_26 -> m27_33  [color=green, key=2, style=dotted];
m27_26 -> m27_34  [color=green, key=2, style=dotted];
m27_27 -> m27_28  [color=green, key=0, style=solid];
m27_27 -> m27_35  [color=green, key=2, style=dotted];
m27_27 -> m27_36  [color=green, key=2, style=dotted];
m27_27 -> m27_37  [color=green, key=2, style=dotted];
m27_27 -> m27_34  [color=green, key=2, style=dotted];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_31  [key=2, style=dotted];
m27_24 -> m27_26  [color=green, key=1, label=queue, style=dashed];
m27_25 -> m27_26  [color=green, key=0, style=solid];
m27_25 -> m27_27  [color=green, key=0, style=solid];
m27_25 -> m27_32  [key=2, style=dotted];
m27_28 -> m27_22  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_4  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_0  [color=blue, key=0, style=bold];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_51  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m27_49 -> m27_50  [key=0, style=solid];
m27_49 -> m27_53  [key=2, style=dotted];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_55  [key=2, style=dotted];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_54  [key=2, style=dotted];
m27_52 -> m27_48  [color=blue, key=0, style=bold];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_9  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m27_5 -> m27_11  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_13  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_14  [key=2, style=dotted];
m27_7 -> m27_15  [key=2, style=dotted];
m27_7 -> m27_10  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_10  [key=0, style=solid];
m27_8 -> m27_16  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_17  [key=2, style=dotted];
m27_9 -> m27_12  [key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_12 -> m27_5  [color=blue, key=0, style=bold];
m27_56 -> m27_1  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_7  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_10  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_19  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_23  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_26  [color=green, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_27  [color=green, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_40  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_41  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_42  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_44  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_49  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_56 -> m27_50  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m28_58 -> m28_59  [key=0, style=solid];
m28_62 -> m28_63  [color=green, key=0, style=solid];
m28_62 -> m28_45  [color=green, key=2, style=dotted];
m28_61 -> m28_62  [color=green, key=0, style=solid];
m28_61 -> m28_42  [key=2, style=dotted];
m28_63 -> m28_64  [color=green, key=0, style=solid];
m28_63 -> m28_43  [color=green, key=2, style=dotted];
m28_64 -> m28_65  [color=green, key=0, style=solid];
m28_64 -> m28_44  [color=green, key=2, style=dotted];
m28_65 -> m28_66  [color=green, key=0, style=solid];
m28_65 -> m28_45  [color=green, key=2, style=dotted];
m28_66 -> m28_67  [key=0, style=solid];
m28_66 -> m28_26  [key=2, style=dotted];
m28_60 -> m28_61  [key=0, style=solid];
m28_60 -> m28_22  [key=2, style=dotted];
m28_59 -> m28_60  [key=0, style=solid];
m28_59 -> m28_41  [key=2, style=dotted];
m28_67 -> m28_58  [color=blue, key=0, style=bold];
m28_47 -> m28_48  [key=0, style=solid];
m28_51 -> m28_52  [color=green, key=0, style=solid];
m28_51 -> m28_43  [color=green, key=2, style=dotted];
m28_50 -> m28_51  [color=green, key=0, style=solid];
m28_50 -> m28_42  [key=2, style=dotted];
m28_52 -> m28_53  [color=green, key=0, style=solid];
m28_52 -> m28_44  [color=green, key=2, style=dotted];
m28_53 -> m28_54  [color=green, key=0, style=solid];
m28_53 -> m28_45  [color=green, key=2, style=dotted];
m28_54 -> m28_55  [color=green, key=0, style=solid];
m28_54 -> m28_45  [color=green, key=2, style=dotted];
m28_55 -> m28_56  [color=green, key=0, style=solid];
m28_55 -> m28_45  [color=green, key=2, style=dotted];
m28_56 -> m28_57  [key=0, style=solid];
m28_56 -> m28_26  [key=2, style=dotted];
m28_49 -> m28_50  [key=0, style=solid];
m28_49 -> m28_22  [key=2, style=dotted];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_41  [key=2, style=dotted];
m28_57 -> m28_47  [color=blue, key=0, style=bold];
m28_68 -> m28_69  [key=0, style=solid];
m28_72 -> m28_73  [color=green, key=0, style=solid];
m28_72 -> m28_44  [color=green, key=2, style=dotted];
m28_71 -> m28_72  [color=green, key=0, style=solid];
m28_71 -> m28_43  [key=2, style=dotted];
m28_73 -> m28_74  [key=0, style=solid];
m28_73 -> m28_26  [key=2, style=dotted];
m28_70 -> m28_71  [key=0, style=solid];
m28_70 -> m28_22  [key=2, style=dotted];
m28_69 -> m28_70  [key=0, style=solid];
m28_69 -> m28_41  [key=2, style=dotted];
m28_74 -> m28_68  [color=blue, key=0, style=bold];
m28_83 -> m28_84  [key=0, style=solid];
m28_87 -> m28_88  [color=green, key=0, style=solid];
m28_87 -> m28_45  [color=green, key=2, style=dotted];
m28_86 -> m28_87  [color=green, key=0, style=solid];
m28_86 -> m28_42  [key=2, style=dotted];
m28_88 -> m28_89  [color=green, key=0, style=solid];
m28_88 -> m28_43  [color=green, key=2, style=dotted];
m28_89 -> m28_90  [color=green, key=0, style=solid];
m28_89 -> m28_44  [color=green, key=2, style=dotted];
m28_90 -> m28_91  [key=0, style=solid];
m28_90 -> m28_26  [key=2, style=dotted];
m28_85 -> m28_86  [key=0, style=solid];
m28_85 -> m28_22  [key=2, style=dotted];
m28_84 -> m28_85  [key=0, style=solid];
m28_84 -> m28_41  [key=2, style=dotted];
m28_91 -> m28_83  [color=blue, key=0, style=bold];
m28_26 -> m28_27  [key=0, style=solid];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_29  [key=2, style=dotted];
m28_28 -> m28_26  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_10  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_11  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_12  [key=2, style=dotted];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_11  [key=2, style=dotted];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_11  [key=2, style=dotted];
m28_9 -> m28_0  [color=blue, key=0, style=bold];
m28_22 -> m28_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_48  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m28_22 -> m28_59  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m28_22 -> m28_69  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m28_22 -> m28_76  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m28_22 -> m28_84  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m28_23 -> m28_24  [key=0, style=solid];
m28_23 -> m28_25  [key=2, style=dotted];
m28_24 -> m28_22  [color=blue, key=0, style=bold];
m28_75 -> m28_76  [key=0, style=solid];
m28_79 -> m28_80  [color=green, key=0, style=solid];
m28_79 -> m28_43  [color=green, key=2, style=dotted];
m28_78 -> m28_79  [color=green, key=0, style=solid];
m28_78 -> m28_42  [key=2, style=dotted];
m28_80 -> m28_81  [color=green, key=0, style=solid];
m28_80 -> m28_44  [color=green, key=2, style=dotted];
m28_81 -> m28_82  [key=0, style=solid];
m28_81 -> m28_26  [key=2, style=dotted];
m28_77 -> m28_78  [key=0, style=solid];
m28_77 -> m28_22  [key=2, style=dotted];
m28_76 -> m28_77  [key=0, style=solid];
m28_76 -> m28_41  [key=2, style=dotted];
m28_82 -> m28_75  [color=blue, key=0, style=bold];
m28_30 -> m28_31  [key=0, style=solid];
m28_34 -> m28_35  [color=green, key=0, style=solid];
m28_34 -> m28_43  [color=green, key=2, style=dotted];
m28_33 -> m28_34  [color=green, key=0, style=solid];
m28_33 -> m28_42  [key=2, style=dotted];
m28_35 -> m28_36  [color=green, key=0, style=solid];
m28_35 -> m28_44  [color=green, key=2, style=dotted];
m28_36 -> m28_37  [color=green, key=0, style=solid];
m28_36 -> m28_45  [color=green, key=2, style=dotted];
m28_37 -> m28_38  [color=green, key=0, style=solid];
m28_37 -> m28_46  [color=green, key=2, style=dotted];
m28_38 -> m28_39  [color=green, key=0, style=solid];
m28_38 -> m28_45  [color=green, key=2, style=dotted];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_26  [key=2, style=dotted];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_22  [key=2, style=dotted];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_41  [key=2, style=dotted];
m28_40 -> m28_30  [color=blue, key=0, style=bold];
m28_13 -> m28_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_13 -> m28_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_13 -> m28_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_13 -> m28_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_13 -> m28_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_13 -> m28_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_13 -> m28_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_13 -> m28_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_92 -> m28_39  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_56  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_66  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_73  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_81  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_90  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_32  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_49  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_60  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_70  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_77  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m28_92 -> m28_85  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerFeature", style=dashed];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_15  [key=2, style=dotted];
m29_64 -> m29_65  [key=0, style=solid];
m29_60 -> m29_58  [color=blue, key=0, style=bold];
m29_89 -> m29_90  [key=0, style=solid];
m29_90 -> m29_74  [key=2, style=dotted];
m29_90 -> m29_91  [key=0, style=solid];
m29_90 -> m29_95  [color=darkseagreen4, key=1, label=client, style=dashed];
m29_91 -> m29_92  [key=0, style=solid];
m29_91 -> m29_29  [key=2, style=dotted];
m29_91 -> m29_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_92 -> m29_93  [key=0, style=solid];
m29_92 -> m29_30  [key=2, style=dotted];
m29_93 -> m29_89  [color=blue, key=0, style=bold];
m29_49 -> m29_50  [key=0, style=solid];
m29_49 -> m29_34  [color=blue, key=0, style=bold];
m29_50 -> m29_10  [key=2, style=dotted];
m29_50 -> m29_51  [key=0, style=solid];
m29_50 -> m29_49  [key=0, style=solid];
m29_51 -> m29_53  [key=2, style=dotted];
m29_51 -> m29_52  [key=0, style=solid];
m29_51 -> m29_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_52 -> m29_49  [color=blue, key=0, style=bold];
m29_52 -> m29_53  [key=0, style=solid];
m29_52 -> m29_54  [key=2, style=dotted];
m29_41 -> m29_39  [color=blue, key=0, style=bold];
m29_30 -> m29_17  [key=0, style=solid];
m29_30 -> m29_30  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_70 -> m29_71  [color=green, key=0, style=solid];
m29_71 -> m29_72  [color=green, key=0, style=solid];
m29_71 -> m29_74  [color=green, key=2, style=dotted];
m29_72 -> m29_73  [color=green, key=0, style=solid];
m29_72 -> m29_75  [color=green, key=2, style=dotted];
m29_72 -> m29_76  [color=green, key=1, label="lambda expression", style=dashed];
m29_73 -> m29_70  [color=blue, key=0, style=bold];
m29_63 -> m29_61  [color=blue, key=0, style=bold];
m29_116 -> m29_117  [key=0, style=solid];
m29_117 -> m29_74  [key=2, style=dotted];
m29_117 -> m29_118  [key=0, style=solid];
m29_117 -> m29_119  [color=darkseagreen4, key=1, label=client, style=dashed];
m29_117 -> m29_128  [color=darkseagreen4, key=1, label=client, style=dashed];
m29_118 -> m29_119  [key=0, style=solid];
m29_118 -> m29_11  [key=2, style=dotted];
m29_118 -> m29_29  [key=2, style=dotted];
m29_118 -> m29_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_119 -> m29_120  [key=0, style=solid];
m29_119 -> m29_29  [key=2, style=dotted];
m29_119 -> m29_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_119 -> m29_121  [color=darkseagreen4, key=1, label=exception, style=dashed];
m29_120 -> m29_121  [key=0, style=solid];
m29_120 -> m29_123  [key=2, style=dotted];
m29_121 -> m29_29  [key=2, style=dotted];
m29_121 -> m29_122  [key=0, style=solid];
m29_122 -> m29_116  [color=blue, key=0, style=bold];
m29_14 -> m29_12  [color=blue, key=0, style=bold];
m29_53 -> m29_51  [color=blue, key=0, style=bold];
m29_57 -> m29_58  [key=0, style=solid];
m29_57 -> m29_63  [key=2, style=dotted];
m29_57 -> m29_64  [key=2, style=dotted];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_34  [key=2, style=dotted];
m29_98 -> m29_99  [key=0, style=solid];
m29_99 -> m29_74  [key=2, style=dotted];
m29_99 -> m29_100  [key=0, style=solid];
m29_99 -> m29_104  [color=darkseagreen4, key=1, label=client, style=dashed];
m29_100 -> m29_101  [key=0, style=solid];
m29_100 -> m29_29  [key=2, style=dotted];
m29_100 -> m29_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_101 -> m29_102  [key=0, style=solid];
m29_101 -> m29_30  [key=2, style=dotted];
m29_102 -> m29_98  [color=blue, key=0, style=bold];
m29_29 -> m29_30  [key=0, style=solid];
m29_29 -> m29_37  [key=2, style=dotted];
m29_29 -> m29_29  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m29_33 -> m29_31  [color=blue, key=0, style=bold];
m29_34 -> m29_42  [key=0, style=solid];
m29_42 -> m29_43  [key=0, style=solid];
m29_42 -> m29_45  [key=0, style=solid];
m29_42 -> m29_47  [key=0, style=solid];
m29_43 -> m29_44  [key=0, style=solid];
m29_43 -> m29_29  [key=2, style=dotted];
m29_43 -> m29_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_45 -> m29_46  [key=0, style=solid];
m29_45 -> m29_42  [color=blue, key=0, style=bold];
m29_47 -> m29_48  [key=0, style=solid];
m29_47 -> m29_34  [key=2, style=dotted];
m29_44 -> m29_49  [key=0, style=solid];
m29_44 -> m29_45  [key=0, style=solid];
m29_44 -> m29_30  [key=2, style=dotted];
m29_46 -> m29_49  [key=0, style=solid];
m29_46 -> m29_47  [key=0, style=solid];
m29_48 -> m29_49  [key=0, style=solid];
m29_48 -> m29_46  [color=blue, key=0, style=bold];
m29_66 -> m29_64  [color=blue, key=0, style=bold];
m29_12 -> m29_13  [key=0, style=solid];
m29_20 -> m29_21  [color=red, key=0, style=solid];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_3  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=0, style=solid];
m29_1 -> m29_9  [key=2, style=dotted];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_11  [key=2, style=dotted];
m29_3 -> m29_12  [key=2, style=dotted];
m29_3 -> m29_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_2 -> m29_8  [key=0, style=solid];
m29_2 -> m29_9  [key=2, style=dotted];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_10  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_10  [key=2, style=dotted];
m29_4 -> m29_11  [key=2, style=dotted];
m29_4 -> m29_13  [key=2, style=dotted];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_14  [key=2, style=dotted];
m29_6 -> m29_7  [key=0, style=solid];
m29_6 -> m29_15  [key=2, style=dotted];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_16  [key=2, style=dotted];
m29_7 -> m29_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_8 -> m29_0  [color=blue, key=0, style=bold];
m29_37 -> m29_38  [key=0, style=solid];
m29_37 -> m29_30  [key=2, style=dotted];
m29_79 -> m29_80  [key=0, style=solid];
m29_82 -> m29_83  [color=green, key=0, style=solid];
m29_82 -> m29_75  [color=green, key=2, style=dotted];
m29_82 -> m29_85  [color=green, key=1, label="lambda expression", style=dashed];
m29_81 -> m29_82  [color=green, key=0, style=solid];
m29_81 -> m29_84  [key=2, style=dotted];
m29_80 -> m29_74  [key=2, style=dotted];
m29_80 -> m29_81  [key=0, style=solid];
m29_83 -> m29_79  [color=blue, key=0, style=bold];
m29_35 -> m29_36  [key=0, style=solid];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_18  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m29_15 -> m29_28  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m29_16 -> m29_17  [key=0, style=solid];
m29_16 -> m29_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_16 -> m29_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_16 -> m29_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_16 -> m29_27  [color=red, key=1, label=i, style=dashed];
m29_16 -> m29_39  [color=red, key=1, label=i, style=dashed];
m29_16 -> m29_30  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_18 -> m29_19  [color=red, key=0, style=solid];
m29_18 -> m29_32  [color=red, key=2, style=dotted];
m29_18 -> m29_20  [key=2, style=dotted];
m29_18 -> m29_40  [key=0, style=solid];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_36  [key=2, style=dotted];
m29_28 -> m29_28  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m29_28 -> m29_25  [color=blue, key=0, style=bold];
m29_17 -> m29_18  [color=red, key=0, style=solid];
m29_17 -> m29_31  [key=0, style=solid];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_25  [key=0, style=solid];
m29_23 -> m29_21  [color=blue, key=0, style=bold];
m29_25 -> m29_26  [key=0, style=solid];
m29_25 -> m29_33  [key=2, style=dotted];
m29_25 -> m29_27  [color=red, key=1, label=nextTry, style=dashed];
m29_25 -> m29_39  [color=red, key=1, label=nextTry, style=dashed];
m29_25 -> m29_28  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m29_26 -> m29_27  [color=red, key=0, style=solid];
m29_26 -> m29_34  [key=2, style=dotted];
m29_26 -> m29_29  [key=2, style=dotted];
m29_26 -> m29_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_27 -> m29_28  [color=red, key=0, style=solid];
m29_27 -> m29_35  [color=red, key=2, style=dotted];
m29_27 -> m29_38  [color=red, key=1, label="lambda expression", style=dashed];
m29_27 -> m29_30  [key=2, style=dotted];
m29_19 -> m29_31  [color=red, key=0, style=solid];
m29_21 -> m29_31  [key=0, style=solid];
m29_21 -> m29_22  [key=0, style=solid];
m29_22 -> m29_23  [key=0, style=solid];
m29_22 -> m29_24  [key=2, style=dotted];
m29_24 -> m29_31  [key=0, style=solid];
m29_24 -> m29_130  [key=0, style=solid];
m29_31 -> m29_15  [color=blue, key=0, style=bold];
m29_31 -> m29_32  [key=0, style=solid];
m29_74 -> m29_131  [key=0, style=solid];
m29_131 -> m29_132  [key=0, style=solid];
m29_131 -> m29_34  [key=2, style=dotted];
m29_132 -> m29_74  [color=blue, key=0, style=bold];
m29_58 -> m29_59  [key=0, style=solid];
m29_58 -> m29_65  [key=2, style=dotted];
m29_58 -> m29_66  [key=2, style=dotted];
m29_59 -> m29_60  [key=0, style=solid];
m29_59 -> m29_53  [key=2, style=dotted];
m29_59 -> m29_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_59 -> m29_55  [color=blue, key=0, style=bold];
m29_65 -> m29_66  [key=0, style=solid];
m29_65 -> m29_53  [key=2, style=dotted];
m29_65 -> m29_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_54 -> m29_55  [key=0, style=solid];
m29_39 -> m29_40  [color=red, key=0, style=solid];
m29_39 -> m29_41  [color=red, key=2, style=dotted];
m29_38 -> m29_39  [color=red, key=0, style=solid];
m29_38 -> m29_18  [key=0, style=solid];
m29_38 -> m29_35  [color=blue, key=0, style=bold];
m29_40 -> m29_38  [color=blue, key=0, style=bold];
m29_40 -> m29_41  [key=0, style=solid];
m29_40 -> m29_34  [key=2, style=dotted];
m29_76 -> m29_77  [color=green, key=0, style=solid];
m29_77 -> m29_78  [color=green, key=0, style=solid];
m29_77 -> m29_20  [color=green, key=2, style=dotted];
m29_78 -> m29_76  [color=blue, key=0, style=bold];
m29_85 -> m29_86  [color=green, key=0, style=solid];
m29_86 -> m29_87  [color=green, key=0, style=solid];
m29_86 -> m29_88  [color=green, key=2, style=dotted];
m29_87 -> m29_85  [color=blue, key=0, style=bold];
m29_62 -> m29_63  [key=0, style=solid];
m29_62 -> m29_34  [key=2, style=dotted];
m29_68 -> m29_69  [key=0, style=solid];
m29_68 -> m29_34  [key=2, style=dotted];
m29_68 -> m29_39  [color=red, key=1, label=i, style=dashed];
m29_95 -> m29_96  [key=0, style=solid];
m29_95 -> m29_97  [key=2, style=dotted];
m29_104 -> m29_105  [key=0, style=solid];
m29_104 -> m29_106  [key=2, style=dotted];
m29_128 -> m29_129  [key=0, style=solid];
m29_128 -> m29_97  [key=2, style=dotted];
m29_61 -> m29_62  [key=0, style=solid];
m29_67 -> m29_68  [key=0, style=solid];
m29_67 -> m29_3  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_4  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_5  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_6  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_7  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_13  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_17  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_18  [color=red, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_23  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_25  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_27  [color=red, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_39  [color=red, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_52  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_67 -> m29_58  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m29_69 -> m29_67  [color=blue, key=0, style=bold];
m29_69 -> m29_39  [color=red, key=1, label=nextTry, style=dashed];
m29_94 -> m29_95  [key=0, style=solid];
m29_96 -> m29_94  [color=blue, key=0, style=bold];
m29_103 -> m29_104  [key=0, style=solid];
m29_105 -> m29_103  [color=blue, key=0, style=bold];
m29_112 -> m29_113  [key=0, style=solid];
m29_124 -> m29_125  [key=0, style=solid];
m29_127 -> m29_128  [key=0, style=solid];
m29_129 -> m29_127  [color=blue, key=0, style=bold];
m29_113 -> m29_29  [key=2, style=dotted];
m29_113 -> m29_114  [key=0, style=solid];
m29_113 -> m29_115  [key=2, style=dotted];
m29_125 -> m29_29  [key=2, style=dotted];
m29_125 -> m29_126  [key=0, style=solid];
m29_125 -> m29_115  [key=2, style=dotted];
m29_114 -> m29_112  [color=blue, key=0, style=bold];
m29_126 -> m29_124  [color=blue, key=0, style=bold];
m29_55 -> m29_56  [key=0, style=solid];
m29_55 -> m29_57  [key=2, style=dotted];
m29_56 -> m29_54  [color=blue, key=0, style=bold];
m29_56 -> m29_57  [key=0, style=solid];
m29_56 -> m29_60  [key=2, style=dotted];
m29_56 -> m29_61  [key=2, style=dotted];
m29_56 -> m29_62  [key=2, style=dotted];
m29_36 -> m29_37  [key=0, style=solid];
m29_36 -> m29_29  [key=2, style=dotted];
m29_36 -> m29_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_130 -> m29_24  [color=blue, key=0, style=bold];
m29_107 -> m29_108  [key=0, style=solid];
m29_108 -> m29_74  [key=2, style=dotted];
m29_108 -> m29_109  [key=0, style=solid];
m29_109 -> m29_110  [key=0, style=solid];
m29_109 -> m29_97  [key=2, style=dotted];
m29_110 -> m29_75  [key=2, style=dotted];
m29_110 -> m29_111  [key=0, style=solid];
m29_110 -> m29_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_111 -> m29_107  [color=blue, key=0, style=bold];
m29_133 -> m29_71  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_72  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_82  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_59  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_80  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_90  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_91  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_99  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_100  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_104  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_118  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_119  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_128  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_133 -> m29_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m29_134 -> m29_95  [color=darkseagreen4, key=1, label=client, style=dashed];
m29_135 -> m29_104  [color=darkseagreen4, key=1, label=client, style=dashed];
m29_136 -> m29_128  [color=darkseagreen4, key=1, label=client, style=dashed];
m31_31 -> m31_32  [color=green, key=0, style=solid];
m31_32 -> m31_33  [color=green, key=0, style=solid];
m31_32 -> m31_34  [color=green, key=2, style=dotted];
m31_33 -> m31_31  [color=blue, key=0, style=bold];
m31_47 -> m31_48  [color=green, key=0, style=solid];
m31_48 -> m31_49  [color=green, key=0, style=solid];
m31_48 -> m31_50  [color=green, key=2, style=dotted];
m31_49 -> m31_47  [color=blue, key=0, style=bold];
m31_43 -> m31_44  [color=green, key=0, style=solid];
m31_44 -> m31_45  [color=green, key=0, style=solid];
m31_44 -> m31_46  [color=green, key=2, style=dotted];
m31_45 -> m31_43  [color=blue, key=0, style=bold];
m31_23 -> m31_24  [color=green, key=0, style=solid];
m31_24 -> m31_25  [color=green, key=0, style=solid];
m31_24 -> m31_26  [color=green, key=2, style=dotted];
m31_25 -> m31_23  [color=blue, key=0, style=bold];
m31_12 -> m31_13  [color=green, key=0, style=solid];
m31_13 -> m31_14  [color=green, key=0, style=solid];
m31_13 -> m31_15  [color=green, key=0, style=solid];
m31_14 -> m31_13  [color=green, key=0, style=solid];
m31_14 -> m31_16  [color=green, key=2, style=dotted];
m31_15 -> m31_12  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_0 -> m31_3  [color=green, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>", style=dashed];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_1 -> m31_3  [color=green, key=0, style=solid];
m31_2 -> m31_4  [color=green, key=0, style=solid];
m31_2 -> m31_5  [color=green, key=2, style=dotted];
m31_3 -> m31_4  [color=green, key=0, style=solid];
m31_3 -> m31_6  [color=green, key=2, style=dotted];
m31_4 -> m31_0  [color=blue, key=0, style=bold];
m31_17 -> m31_18  [color=green, key=0, style=solid];
m31_18 -> m31_19  [color=green, key=0, style=solid];
m31_18 -> m31_12  [color=green, key=2, style=dotted];
m31_19 -> m31_20  [color=green, key=0, style=solid];
m31_19 -> m31_21  [color=green, key=0, style=solid];
m31_20 -> m31_19  [color=green, key=0, style=solid];
m31_20 -> m31_22  [color=green, key=2, style=dotted];
m31_21 -> m31_17  [color=blue, key=0, style=bold];
m31_7 -> m31_8  [color=green, key=0, style=solid];
m31_8 -> m31_9  [color=green, key=0, style=solid];
m31_8 -> m31_10  [color=green, key=0, style=solid];
m31_9 -> m31_8  [color=green, key=0, style=solid];
m31_9 -> m31_11  [color=green, key=2, style=dotted];
m31_10 -> m31_7  [color=blue, key=0, style=bold];
m31_27 -> m31_28  [color=green, key=0, style=solid];
m31_28 -> m31_29  [color=green, key=0, style=solid];
m31_28 -> m31_30  [color=green, key=2, style=dotted];
m31_29 -> m31_27  [color=blue, key=0, style=bold];
m31_39 -> m31_40  [color=green, key=0, style=solid];
m31_40 -> m31_41  [color=green, key=0, style=solid];
m31_40 -> m31_42  [color=green, key=2, style=dotted];
m31_41 -> m31_39  [color=blue, key=0, style=bold];
m31_35 -> m31_36  [color=green, key=0, style=solid];
m31_36 -> m31_37  [color=green, key=0, style=solid];
m31_36 -> m31_38  [color=green, key=2, style=dotted];
m31_37 -> m31_35  [color=blue, key=0, style=bold];
m31_51 -> m31_3  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_8  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_13  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_18  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_19  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_24  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_28  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_32  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_36  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_40  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_44  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m31_51 -> m31_48  [color=green, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m32_103 -> m32_104  [color=green, key=0, style=solid];
m32_104 -> m32_105  [color=green, key=0, style=solid];
m32_104 -> m32_44  [color=green, key=2, style=dotted];
m32_105 -> m32_106  [color=green, key=0, style=solid];
m32_105 -> m32_85  [color=green, key=2, style=dotted];
m32_105 -> m32_107  [color=green, key=1, label="lambda expression", style=dashed];
m32_106 -> m32_103  [color=blue, key=0, style=bold];
m32_40 -> m32_41  [color=green, key=0, style=solid];
m32_40 -> m32_42  [color=green, key=1, label=Table, style=dashed];
m32_41 -> m32_42  [color=green, key=0, style=solid];
m32_41 -> m32_44  [color=green, key=2, style=dotted];
m32_41 -> m32_45  [color=green, key=2, style=dotted];
m32_42 -> m32_43  [color=green, key=0, style=solid];
m32_42 -> m32_30  [color=green, key=2, style=dotted];
m32_42 -> m32_46  [color=green, key=2, style=dotted];
m32_42 -> m32_31  [color=green, key=2, style=dotted];
m32_42 -> m32_47  [color=green, key=1, label="lambda expression", style=dashed];
m32_42 -> m32_50  [color=green, key=1, label="lambda expression", style=dashed];
m32_42 -> m32_53  [color=green, key=1, label="lambda expression", style=dashed];
m32_43 -> m32_40  [color=blue, key=0, style=bold];
m32_81 -> m32_82  [color=green, key=0, style=solid];
m32_82 -> m32_83  [color=green, key=0, style=solid];
m32_82 -> m32_44  [color=green, key=2, style=dotted];
m32_83 -> m32_84  [color=green, key=0, style=solid];
m32_83 -> m32_85  [color=green, key=2, style=dotted];
m32_83 -> m32_86  [color=green, key=1, label="lambda expression", style=dashed];
m32_84 -> m32_81  [color=blue, key=0, style=bold];
m32_158 -> m32_159  [color=green, key=0, style=solid];
m32_158 -> m32_160  [color=green, key=1, label=string, style=dashed];
m32_159 -> m32_160  [color=green, key=0, style=solid];
m32_159 -> m32_44  [color=green, key=2, style=dotted];
m32_159 -> m32_162  [color=green, key=2, style=dotted];
m32_160 -> m32_161  [color=green, key=0, style=solid];
m32_160 -> m32_80  [color=green, key=2, style=dotted];
m32_161 -> m32_158  [color=blue, key=0, style=bold];
m32_4 -> m32_5  [color=green, key=0, style=solid];
m32_5 -> m32_6  [color=green, key=0, style=solid];
m32_5 -> m32_8  [color=green, key=2, style=dotted];
m32_6 -> m32_7  [color=green, key=0, style=solid];
m32_6 -> m32_9  [color=green, key=2, style=dotted];
m32_7 -> m32_4  [color=blue, key=0, style=bold];
m32_135 -> m32_136  [color=green, key=0, style=solid];
m32_136 -> m32_137  [color=green, key=0, style=solid];
m32_136 -> m32_141  [color=green, key=2, style=dotted];
m32_137 -> m32_138  [color=green, key=0, style=solid];
m32_137 -> m32_142  [color=green, key=2, style=dotted];
m32_137 -> m32_139  [color=green, key=1, label=timestamp, style=dashed];
m32_138 -> m32_139  [color=green, key=0, style=solid];
m32_138 -> m32_143  [color=green, key=2, style=dotted];
m32_138 -> m32_91  [color=green, key=2, style=dotted];
m32_139 -> m32_140  [color=green, key=0, style=solid];
m32_139 -> m32_143  [color=green, key=2, style=dotted];
m32_139 -> m32_91  [color=green, key=2, style=dotted];
m32_140 -> m32_135  [color=blue, key=0, style=bold];
m32_174 -> m32_168  [color=blue, key=0, style=bold];
m32_169 -> m32_170  [color=green, key=0, style=solid];
m32_169 -> m32_44  [color=green, key=2, style=dotted];
m32_169 -> m32_175  [color=green, key=2, style=dotted];
m32_169 -> m32_171  [color=green, key=1, label=entry, style=dashed];
m32_169 -> m32_172  [color=green, key=1, label=entry, style=dashed];
m32_168 -> m32_169  [color=green, key=0, style=solid];
m32_168 -> m32_173  [color=green, key=1, label=Table, style=dashed];
m32_170 -> m32_171  [color=green, key=0, style=solid];
m32_170 -> m32_176  [color=green, key=2, style=dotted];
m32_171 -> m32_173  [color=green, key=1, label=history, style=dashed];
m32_171 -> m32_172  [color=green, key=0, style=solid];
m32_171 -> m32_177  [color=green, key=2, style=dotted];
m32_172 -> m32_173  [color=green, key=0, style=solid];
m32_172 -> m32_176  [color=green, key=2, style=dotted];
m32_173 -> m32_174  [color=green, key=0, style=solid];
m32_173 -> m32_118  [color=green, key=2, style=dotted];
m32_178 -> m32_179  [color=green, key=0, style=solid];
m32_179 -> m32_180  [color=green, key=0, style=solid];
m32_179 -> m32_181  [color=green, key=2, style=dotted];
m32_179 -> m32_182  [color=green, key=1, label="lambda expression", style=dashed];
m32_180 -> m32_178  [color=blue, key=0, style=bold];
m32_119 -> m32_120  [color=green, key=0, style=solid];
m32_120 -> m32_121  [color=green, key=0, style=solid];
m32_120 -> m32_123  [color=green, key=2, style=dotted];
m32_120 -> m32_80  [color=green, key=2, style=dotted];
m32_121 -> m32_122  [color=green, key=0, style=solid];
m32_121 -> m32_124  [color=green, key=2, style=dotted];
m32_121 -> m32_91  [color=green, key=2, style=dotted];
m32_122 -> m32_119  [color=blue, key=0, style=bold];
m32_92 -> m32_93  [color=green, key=0, style=solid];
m32_93 -> m32_94  [color=green, key=0, style=solid];
m32_93 -> m32_95  [color=green, key=2, style=dotted];
m32_93 -> m32_96  [color=green, key=2, style=dotted];
m32_93 -> m32_80  [color=green, key=2, style=dotted];
m32_94 -> m32_92  [color=blue, key=0, style=bold];
m32_77 -> m32_78  [color=green, key=0, style=solid];
m32_78 -> m32_79  [color=green, key=0, style=solid];
m32_78 -> m32_80  [color=green, key=2, style=dotted];
m32_79 -> m32_77  [color=blue, key=0, style=bold];
m32_144 -> m32_145  [color=green, key=0, style=solid];
m32_145 -> m32_146  [color=green, key=0, style=solid];
m32_145 -> m32_124  [color=green, key=2, style=dotted];
m32_145 -> m32_91  [color=green, key=2, style=dotted];
m32_146 -> m32_147  [color=green, key=0, style=solid];
m32_146 -> m32_141  [color=green, key=2, style=dotted];
m32_147 -> m32_148  [color=green, key=0, style=solid];
m32_147 -> m32_142  [color=green, key=2, style=dotted];
m32_147 -> m32_149  [color=green, key=1, label=timestamp, style=dashed];
m32_148 -> m32_149  [color=green, key=0, style=solid];
m32_148 -> m32_18  [color=green, key=2, style=dotted];
m32_148 -> m32_91  [color=green, key=2, style=dotted];
m32_149 -> m32_150  [color=green, key=0, style=solid];
m32_149 -> m32_18  [color=green, key=2, style=dotted];
m32_149 -> m32_91  [color=green, key=2, style=dotted];
m32_150 -> m32_144  [color=blue, key=0, style=bold];
m32_10 -> m32_11  [color=green, key=0, style=solid];
m32_11 -> m32_12  [color=green, key=0, style=solid];
m32_11 -> m32_13  [color=green, key=2, style=dotted];
m32_12 -> m32_10  [color=blue, key=0, style=bold];
m32_166 -> m32_163  [color=blue, key=0, style=bold];
m32_164 -> m32_165  [color=green, key=0, style=solid];
m32_164 -> m32_44  [color=green, key=2, style=dotted];
m32_164 -> m32_162  [color=green, key=2, style=dotted];
m32_163 -> m32_164  [color=green, key=0, style=solid];
m32_163 -> m32_165  [color=green, key=1, label=Table, style=dashed];
m32_165 -> m32_166  [color=green, key=0, style=solid];
m32_165 -> m32_167  [color=green, key=2, style=dotted];
m32_19 -> m32_20  [color=green, key=0, style=solid];
m32_20 -> m32_21  [color=green, key=0, style=solid];
m32_20 -> m32_22  [color=green, key=2, style=dotted];
m32_21 -> m32_19  [color=blue, key=0, style=bold];
m32_23 -> m32_24  [color=green, key=0, style=solid];
m32_23 -> m32_25  [color=green, key=1, label=string, style=dashed];
m32_24 -> m32_25  [color=green, key=0, style=solid];
m32_24 -> m32_29  [color=green, key=2, style=dotted];
m32_25 -> m32_26  [color=green, key=0, style=solid];
m32_25 -> m32_30  [color=green, key=2, style=dotted];
m32_25 -> m32_31  [color=green, key=2, style=dotted];
m32_25 -> m32_33  [color=green, key=1, label="lambda expression", style=dashed];
m32_26 -> m32_27  [color=green, key=0, style=solid];
m32_26 -> m32_30  [color=green, key=2, style=dotted];
m32_26 -> m32_32  [color=green, key=2, style=dotted];
m32_26 -> m32_31  [color=green, key=2, style=dotted];
m32_26 -> m32_36  [color=green, key=1, label="lambda expression", style=dashed];
m32_27 -> m32_28  [color=green, key=0, style=solid];
m32_28 -> m32_23  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [color=green, key=0, style=solid];
m32_1 -> m32_2  [color=green, key=0, style=solid];
m32_1 -> m32_3  [color=green, key=2, style=dotted];
m32_2 -> m32_0  [color=blue, key=0, style=bold];
m32_14 -> m32_15  [color=green, key=0, style=solid];
m32_15 -> m32_16  [color=green, key=0, style=solid];
m32_15 -> m32_17  [color=green, key=2, style=dotted];
m32_15 -> m32_18  [color=green, key=2, style=dotted];
m32_16 -> m32_14  [color=blue, key=0, style=bold];
m32_111 -> m32_112  [color=green, key=0, style=solid];
m32_112 -> m32_113  [color=green, key=0, style=solid];
m32_112 -> m32_101  [color=green, key=2, style=dotted];
m32_112 -> m32_80  [color=green, key=2, style=dotted];
m32_113 -> m32_111  [color=blue, key=0, style=bold];
m32_56 -> m32_57  [color=green, key=0, style=solid];
m32_57 -> m32_58  [color=green, key=0, style=solid];
m32_57 -> m32_61  [color=green, key=2, style=dotted];
m32_57 -> m32_59  [color=green, key=1, label=transaction, style=dashed];
m32_58 -> m32_59  [color=green, key=0, style=solid];
m32_58 -> m32_62  [color=green, key=2, style=dotted];
m32_59 -> m32_60  [color=green, key=0, style=solid];
m32_59 -> m32_63  [color=green, key=2, style=dotted];
m32_60 -> m32_56  [color=blue, key=0, style=bold];
m32_114 -> m32_115  [color=green, key=0, style=solid];
m32_115 -> m32_116  [color=green, key=0, style=solid];
m32_115 -> m32_117  [color=green, key=2, style=dotted];
m32_115 -> m32_118  [color=green, key=2, style=dotted];
m32_116 -> m32_114  [color=blue, key=0, style=bold];
m32_185 -> m32_186  [color=green, key=0, style=solid];
m32_33 -> m32_34  [color=green, key=0, style=solid];
m32_36 -> m32_37  [color=green, key=0, style=solid];
m32_34 -> m32_35  [color=green, key=0, style=solid];
m32_35 -> m32_33  [color=blue, key=0, style=bold];
m32_37 -> m32_38  [color=green, key=0, style=solid];
m32_37 -> m32_39  [color=green, key=2, style=dotted];
m32_38 -> m32_36  [color=blue, key=0, style=bold];
m32_47 -> m32_48  [color=green, key=0, style=solid];
m32_50 -> m32_51  [color=green, key=0, style=solid];
m32_53 -> m32_54  [color=green, key=0, style=solid];
m32_48 -> m32_49  [color=green, key=0, style=solid];
m32_48 -> m32_39  [color=green, key=2, style=dotted];
m32_49 -> m32_47  [color=blue, key=0, style=bold];
m32_51 -> m32_52  [color=green, key=0, style=solid];
m32_52 -> m32_50  [color=blue, key=0, style=bold];
m32_54 -> m32_55  [color=green, key=0, style=solid];
m32_55 -> m32_53  [color=blue, key=0, style=bold];
m32_86 -> m32_87  [color=green, key=0, style=solid];
m32_86 -> m32_88  [color=green, key=1, label="?", style=dashed];
m32_87 -> m32_88  [color=green, key=0, style=solid];
m32_87 -> m32_90  [color=green, key=2, style=dotted];
m32_88 -> m32_89  [color=green, key=0, style=solid];
m32_88 -> m32_91  [color=green, key=2, style=dotted];
m32_89 -> m32_86  [color=blue, key=0, style=bold];
m32_107 -> m32_108  [color=green, key=0, style=solid];
m32_107 -> m32_109  [color=green, key=1, label="?", style=dashed];
m32_108 -> m32_109  [color=green, key=0, style=solid];
m32_108 -> m32_90  [color=green, key=2, style=dotted];
m32_109 -> m32_110  [color=green, key=0, style=solid];
m32_109 -> m32_91  [color=green, key=2, style=dotted];
m32_110 -> m32_107  [color=blue, key=0, style=bold];
m32_182 -> m32_183  [color=green, key=0, style=solid];
m32_183 -> m32_184  [color=green, key=0, style=solid];
m32_183 -> m32_177  [color=green, key=2, style=dotted];
m32_183 -> m32_62  [color=green, key=2, style=dotted];
m32_183 -> m32_185  [color=green, key=1, label="lambda expression", style=dashed];
m32_184 -> m32_182  [color=blue, key=0, style=bold];
m32_186 -> m32_187  [color=green, key=0, style=solid];
m32_187 -> m32_185  [color=blue, key=0, style=bold];
m32_73 -> m32_74  [color=green, key=0, style=solid];
m32_74 -> m32_75  [color=green, key=0, style=solid];
m32_74 -> m32_76  [color=green, key=2, style=dotted];
m32_75 -> m32_73  [color=blue, key=0, style=bold];
m32_128 -> m32_129  [color=green, key=0, style=solid];
m32_129 -> m32_130  [color=green, key=0, style=solid];
m32_129 -> m32_124  [color=green, key=2, style=dotted];
m32_129 -> m32_91  [color=green, key=2, style=dotted];
m32_130 -> m32_128  [color=blue, key=0, style=bold];
m32_154 -> m32_155  [color=green, key=0, style=solid];
m32_155 -> m32_156  [color=green, key=0, style=solid];
m32_155 -> m32_157  [color=green, key=2, style=dotted];
m32_155 -> m32_91  [color=green, key=2, style=dotted];
m32_156 -> m32_154  [color=blue, key=0, style=bold];
m32_151 -> m32_152  [color=green, key=0, style=solid];
m32_152 -> m32_153  [color=green, key=0, style=solid];
m32_152 -> m32_124  [color=green, key=2, style=dotted];
m32_152 -> m32_134  [color=green, key=2, style=dotted];
m32_153 -> m32_151  [color=blue, key=0, style=bold];
m32_64 -> m32_65  [color=green, key=0, style=solid];
m32_65 -> m32_66  [color=green, key=0, style=solid];
m32_65 -> m32_61  [color=green, key=2, style=dotted];
m32_65 -> m32_68  [color=green, key=1, label=transaction, style=dashed];
m32_65 -> m32_69  [color=green, key=1, label=transaction, style=dashed];
m32_66 -> m32_67  [color=green, key=0, style=solid];
m32_66 -> m32_71  [color=green, key=2, style=dotted];
m32_66 -> m32_68  [color=green, key=1, label=descriptor, style=dashed];
m32_68 -> m32_69  [color=green, key=0, style=solid];
m32_68 -> m32_72  [color=green, key=2, style=dotted];
m32_69 -> m32_70  [color=green, key=0, style=solid];
m32_69 -> m32_63  [color=green, key=2, style=dotted];
m32_67 -> m32_68  [color=green, key=0, style=solid];
m32_67 -> m32_69  [color=green, key=0, style=solid];
m32_70 -> m32_64  [color=blue, key=0, style=bold];
m32_131 -> m32_132  [color=green, key=0, style=solid];
m32_132 -> m32_133  [color=green, key=0, style=solid];
m32_132 -> m32_124  [color=green, key=2, style=dotted];
m32_132 -> m32_134  [color=green, key=2, style=dotted];
m32_133 -> m32_131  [color=blue, key=0, style=bold];
m32_97 -> m32_98  [color=green, key=0, style=solid];
m32_98 -> m32_99  [color=green, key=0, style=solid];
m32_98 -> m32_101  [color=green, key=2, style=dotted];
m32_98 -> m32_80  [color=green, key=2, style=dotted];
m32_99 -> m32_100  [color=green, key=0, style=solid];
m32_99 -> m32_102  [color=green, key=2, style=dotted];
m32_99 -> m32_80  [color=green, key=2, style=dotted];
m32_100 -> m32_97  [color=blue, key=0, style=bold];
m32_125 -> m32_126  [color=green, key=0, style=solid];
m32_126 -> m32_127  [color=green, key=0, style=solid];
m32_126 -> m32_123  [color=green, key=2, style=dotted];
m32_126 -> m32_80  [color=green, key=2, style=dotted];
m32_127 -> m32_125  [color=blue, key=0, style=bold];
m32_188 -> m32_1  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_5  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_6  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_11  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_15  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_20  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_24  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_25  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_26  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_27  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_42  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_58  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_66  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_74  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_78  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_115  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m32_188 -> m32_179  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m33_11 -> m33_12  [key=0, style=solid];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_8  [key=2, style=dotted];
m33_13 -> m33_14  [key=0, style=solid];
m33_13 -> m33_9  [key=2, style=dotted];
m33_13 -> m33_10  [key=2, style=dotted];
m33_14 -> m33_11  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [color=green, key=0, style=solid];
m33_0 -> m33_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m33_1 -> m33_2  [color=green, key=0, style=solid];
m33_2 -> m33_3  [key=0, style=solid];
m33_3 -> m33_0  [color=blue, key=0, style=bold];
m33_3 -> m33_4  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_6  [key=2, style=dotted];
m33_5 -> m33_0  [color=blue, key=0, style=bold];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_8  [key=2, style=dotted];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_9  [key=2, style=dotted];
m33_6 -> m33_10  [key=2, style=dotted];
m33_7 -> m33_4  [color=blue, key=0, style=bold];
m33_7 -> m33_1  [color=green, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m33_7 -> m33_2  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m33_7 -> m33_3  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m33_15 -> m33_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m33_15 -> m33_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m33_15 -> m33_6  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m33_15 -> m33_13  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m35_22 -> m35_63  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_54  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_76  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_88  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_101  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_110  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_121  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_135  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_150  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_165  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_173  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_182  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_192  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_22 -> m35_208  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_25  [key=2, style=dotted];
m35_24 -> m35_22  [color=blue, key=0, style=bold];
m35_26 -> m35_27  [key=0, style=solid];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_29  [key=2, style=dotted];
m35_28 -> m35_26  [color=blue, key=0, style=bold];
m35_100 -> m35_101  [key=0, style=solid];
m35_102 -> m35_22  [key=2, style=dotted];
m35_102 -> m35_103  [key=0, style=solid];
m35_107 -> m35_108  [key=0, style=solid];
m35_107 -> m35_26  [key=2, style=dotted];
m35_101 -> m35_102  [key=0, style=solid];
m35_101 -> m35_39  [key=2, style=dotted];
m35_103 -> m35_40  [key=2, style=dotted];
m35_103 -> m35_104  [key=0, style=solid];
m35_106 -> m35_107  [key=0, style=solid];
m35_106 -> m35_43  [key=2, style=dotted];
m35_104 -> m35_41  [key=2, style=dotted];
m35_104 -> m35_105  [key=0, style=solid];
m35_105 -> m35_106  [key=0, style=solid];
m35_105 -> m35_42  [key=2, style=dotted];
m35_108 -> m35_100  [color=blue, key=0, style=bold];
m35_109 -> m35_110  [key=0, style=solid];
m35_111 -> m35_22  [key=2, style=dotted];
m35_111 -> m35_112  [key=0, style=solid];
m35_118 -> m35_119  [key=0, style=solid];
m35_118 -> m35_26  [key=2, style=dotted];
m35_110 -> m35_111  [key=0, style=solid];
m35_110 -> m35_39  [key=2, style=dotted];
m35_112 -> m35_40  [key=2, style=dotted];
m35_112 -> m35_113  [key=0, style=solid];
m35_117 -> m35_118  [key=0, style=solid];
m35_117 -> m35_41  [key=2, style=dotted];
m35_115 -> m35_43  [key=2, style=dotted];
m35_115 -> m35_116  [key=0, style=solid];
m35_113 -> m35_41  [key=2, style=dotted];
m35_113 -> m35_114  [key=0, style=solid];
m35_116 -> m35_117  [key=0, style=solid];
m35_116 -> m35_41  [key=2, style=dotted];
m35_114 -> m35_42  [key=2, style=dotted];
m35_114 -> m35_115  [key=0, style=solid];
m35_119 -> m35_109  [color=blue, key=0, style=bold];
m35_120 -> m35_121  [key=0, style=solid];
m35_122 -> m35_22  [key=2, style=dotted];
m35_122 -> m35_123  [key=0, style=solid];
m35_132 -> m35_133  [key=0, style=solid];
m35_132 -> m35_26  [key=2, style=dotted];
m35_121 -> m35_122  [key=0, style=solid];
m35_121 -> m35_39  [key=2, style=dotted];
m35_129 -> m35_74  [key=2, style=dotted];
m35_129 -> m35_130  [key=0, style=solid];
m35_130 -> m35_74  [key=2, style=dotted];
m35_130 -> m35_131  [key=0, style=solid];
m35_123 -> m35_40  [key=2, style=dotted];
m35_123 -> m35_124  [key=0, style=solid];
m35_131 -> m35_132  [key=0, style=solid];
m35_131 -> m35_43  [key=2, style=dotted];
m35_128 -> m35_73  [key=2, style=dotted];
m35_128 -> m35_129  [key=0, style=solid];
m35_128 -> m35_130  [color=darkseagreen4, key=1, label=table4, style=dashed];
m35_128 -> m35_131  [color=darkseagreen4, key=1, label=table4, style=dashed];
m35_124 -> m35_41  [key=2, style=dotted];
m35_124 -> m35_125  [key=0, style=solid];
m35_125 -> m35_41  [key=2, style=dotted];
m35_125 -> m35_126  [key=0, style=solid];
m35_126 -> m35_41  [key=2, style=dotted];
m35_126 -> m35_127  [key=0, style=solid];
m35_127 -> m35_42  [key=2, style=dotted];
m35_127 -> m35_128  [key=0, style=solid];
m35_133 -> m35_120  [color=blue, key=0, style=bold];
m35_164 -> m35_165  [key=0, style=solid];
m35_166 -> m35_22  [key=2, style=dotted];
m35_166 -> m35_167  [key=0, style=solid];
m35_170 -> m35_171  [key=0, style=solid];
m35_170 -> m35_26  [key=2, style=dotted];
m35_165 -> m35_166  [key=0, style=solid];
m35_165 -> m35_39  [key=2, style=dotted];
m35_167 -> m35_40  [key=2, style=dotted];
m35_167 -> m35_168  [key=0, style=solid];
m35_169 -> m35_170  [key=0, style=solid];
m35_169 -> m35_43  [key=2, style=dotted];
m35_168 -> m35_169  [key=0, style=solid];
m35_168 -> m35_42  [key=2, style=dotted];
m35_171 -> m35_164  [color=blue, key=0, style=bold];
m35_207 -> m35_208  [key=0, style=solid];
m35_209 -> m35_22  [key=2, style=dotted];
m35_209 -> m35_210  [key=0, style=solid];
m35_217 -> m35_218  [key=0, style=solid];
m35_217 -> m35_26  [key=2, style=dotted];
m35_208 -> m35_209  [key=0, style=solid];
m35_208 -> m35_39  [key=2, style=dotted];
m35_215 -> m35_74  [key=2, style=dotted];
m35_215 -> m35_216  [key=0, style=solid];
m35_210 -> m35_40  [key=2, style=dotted];
m35_210 -> m35_211  [key=0, style=solid];
m35_216 -> m35_217  [key=0, style=solid];
m35_216 -> m35_43  [key=2, style=dotted];
m35_214 -> m35_73  [key=2, style=dotted];
m35_214 -> m35_215  [key=0, style=solid];
m35_214 -> m35_216  [color=darkseagreen4, key=1, label=table8, style=dashed];
m35_211 -> m35_41  [key=2, style=dotted];
m35_211 -> m35_212  [key=0, style=solid];
m35_212 -> m35_41  [key=2, style=dotted];
m35_212 -> m35_213  [key=0, style=solid];
m35_213 -> m35_42  [key=2, style=dotted];
m35_213 -> m35_214  [key=0, style=solid];
m35_218 -> m35_207  [color=blue, key=0, style=bold];
m35_191 -> m35_192  [key=0, style=solid];
m35_193 -> m35_22  [key=2, style=dotted];
m35_193 -> m35_194  [key=0, style=solid];
m35_205 -> m35_206  [key=0, style=solid];
m35_205 -> m35_26  [key=2, style=dotted];
m35_192 -> m35_193  [key=0, style=solid];
m35_192 -> m35_39  [key=2, style=dotted];
m35_200 -> m35_74  [key=2, style=dotted];
m35_200 -> m35_201  [key=0, style=solid];
m35_201 -> m35_74  [key=2, style=dotted];
m35_201 -> m35_202  [key=0, style=solid];
m35_202 -> m35_74  [key=2, style=dotted];
m35_202 -> m35_203  [key=0, style=solid];
m35_203 -> m35_74  [key=2, style=dotted];
m35_203 -> m35_204  [key=0, style=solid];
m35_194 -> m35_40  [key=2, style=dotted];
m35_194 -> m35_195  [key=0, style=solid];
m35_204 -> m35_205  [key=0, style=solid];
m35_204 -> m35_43  [key=2, style=dotted];
m35_199 -> m35_73  [key=2, style=dotted];
m35_199 -> m35_200  [key=0, style=solid];
m35_199 -> m35_201  [color=darkseagreen4, key=1, label=table7, style=dashed];
m35_199 -> m35_202  [color=darkseagreen4, key=1, label=table7, style=dashed];
m35_199 -> m35_203  [color=darkseagreen4, key=1, label=table7, style=dashed];
m35_199 -> m35_204  [color=darkseagreen4, key=1, label=table7, style=dashed];
m35_195 -> m35_41  [key=2, style=dotted];
m35_195 -> m35_196  [key=0, style=solid];
m35_196 -> m35_41  [key=2, style=dotted];
m35_196 -> m35_197  [key=0, style=solid];
m35_197 -> m35_41  [key=2, style=dotted];
m35_197 -> m35_198  [key=0, style=solid];
m35_198 -> m35_42  [key=2, style=dotted];
m35_198 -> m35_199  [key=0, style=solid];
m35_206 -> m35_191  [color=blue, key=0, style=bold];
m35_172 -> m35_173  [key=0, style=solid];
m35_174 -> m35_22  [key=2, style=dotted];
m35_174 -> m35_175  [key=0, style=solid];
m35_179 -> m35_180  [key=0, style=solid];
m35_179 -> m35_26  [key=2, style=dotted];
m35_173 -> m35_174  [key=0, style=solid];
m35_173 -> m35_39  [key=2, style=dotted];
m35_175 -> m35_40  [key=2, style=dotted];
m35_175 -> m35_176  [key=0, style=solid];
m35_178 -> m35_179  [key=0, style=solid];
m35_178 -> m35_43  [key=2, style=dotted];
m35_176 -> m35_41  [key=2, style=dotted];
m35_176 -> m35_177  [key=0, style=solid];
m35_177 -> m35_178  [key=0, style=solid];
m35_177 -> m35_42  [key=2, style=dotted];
m35_180 -> m35_172  [color=blue, key=0, style=bold];
m35_134 -> m35_135  [key=0, style=solid];
m35_136 -> m35_22  [key=2, style=dotted];
m35_136 -> m35_137  [key=0, style=solid];
m35_147 -> m35_148  [key=0, style=solid];
m35_147 -> m35_26  [key=2, style=dotted];
m35_135 -> m35_136  [key=0, style=solid];
m35_135 -> m35_39  [key=2, style=dotted];
m35_145 -> m35_74  [key=2, style=dotted];
m35_145 -> m35_146  [key=0, style=solid];
m35_137 -> m35_40  [key=2, style=dotted];
m35_137 -> m35_138  [key=0, style=solid];
m35_146 -> m35_147  [key=0, style=solid];
m35_146 -> m35_41  [key=2, style=dotted];
m35_144 -> m35_73  [key=2, style=dotted];
m35_144 -> m35_145  [key=0, style=solid];
m35_144 -> m35_146  [color=darkseagreen4, key=1, label=table5, style=dashed];
m35_141 -> m35_43  [key=2, style=dotted];
m35_141 -> m35_142  [key=0, style=solid];
m35_138 -> m35_41  [key=2, style=dotted];
m35_138 -> m35_139  [key=0, style=solid];
m35_139 -> m35_41  [key=2, style=dotted];
m35_139 -> m35_140  [key=0, style=solid];
m35_142 -> m35_41  [key=2, style=dotted];
m35_142 -> m35_143  [key=0, style=solid];
m35_143 -> m35_41  [key=2, style=dotted];
m35_143 -> m35_144  [key=0, style=solid];
m35_140 -> m35_42  [key=2, style=dotted];
m35_140 -> m35_141  [key=0, style=solid];
m35_148 -> m35_134  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [color=blue, key=0, style=bold];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_5  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m35_2 -> m35_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_2 -> m35_8  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m35_2 -> m35_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_5  [key=0, style=solid];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_7  [key=0, style=solid];
m35_7 -> m35_8  [key=0, style=solid];
m35_8 -> m35_9  [key=0, style=solid];
m35_9 -> m35_10  [key=0, style=solid];
m35_4 -> m35_10  [key=0, style=solid];
m35_4 -> m35_11  [key=2, style=dotted];
m35_6 -> m35_10  [key=0, style=solid];
m35_6 -> m35_11  [key=2, style=dotted];
m35_10 -> m35_2  [color=blue, key=0, style=bold];
m35_44 -> m35_45  [key=0, style=solid];
m35_46 -> m35_22  [key=2, style=dotted];
m35_46 -> m35_47  [key=0, style=solid];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_26  [key=2, style=dotted];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_39  [key=2, style=dotted];
m35_47 -> m35_40  [key=2, style=dotted];
m35_47 -> m35_48  [key=0, style=solid];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_43  [key=2, style=dotted];
m35_48 -> m35_41  [key=2, style=dotted];
m35_48 -> m35_49  [key=0, style=solid];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_42  [key=2, style=dotted];
m35_52 -> m35_44  [color=blue, key=0, style=bold];
m35_75 -> m35_76  [key=0, style=solid];
m35_82 -> m35_83  [color=green, key=0, style=solid];
m35_82 -> m35_74  [color=green, key=2, style=dotted];
m35_81 -> m35_82  [color=green, key=0, style=solid];
m35_81 -> m35_83  [color=green, key=1, label=table2, style=dashed];
m35_81 -> m35_73  [key=2, style=dotted];
m35_81 -> m35_84  [color=darkseagreen4, key=1, label=table2, style=dashed];
m35_83 -> m35_84  [color=green, key=0, style=solid];
m35_83 -> m35_74  [color=green, key=2, style=dotted];
m35_84 -> m35_85  [key=0, style=solid];
m35_84 -> m35_43  [key=2, style=dotted];
m35_77 -> m35_22  [key=2, style=dotted];
m35_77 -> m35_78  [key=0, style=solid];
m35_85 -> m35_86  [key=0, style=solid];
m35_85 -> m35_26  [key=2, style=dotted];
m35_76 -> m35_77  [key=0, style=solid];
m35_76 -> m35_39  [key=2, style=dotted];
m35_80 -> m35_81  [key=0, style=solid];
m35_80 -> m35_42  [key=2, style=dotted];
m35_78 -> m35_40  [key=2, style=dotted];
m35_78 -> m35_79  [key=0, style=solid];
m35_79 -> m35_80  [key=0, style=solid];
m35_79 -> m35_41  [key=2, style=dotted];
m35_86 -> m35_75  [color=blue, key=0, style=bold];
m35_149 -> m35_150  [key=0, style=solid];
m35_151 -> m35_22  [key=2, style=dotted];
m35_151 -> m35_152  [key=0, style=solid];
m35_162 -> m35_163  [key=0, style=solid];
m35_162 -> m35_26  [key=2, style=dotted];
m35_150 -> m35_151  [key=0, style=solid];
m35_150 -> m35_39  [key=2, style=dotted];
m35_158 -> m35_74  [key=2, style=dotted];
m35_158 -> m35_159  [key=0, style=solid];
m35_159 -> m35_74  [key=2, style=dotted];
m35_159 -> m35_160  [key=0, style=solid];
m35_160 -> m35_74  [key=2, style=dotted];
m35_160 -> m35_161  [key=0, style=solid];
m35_152 -> m35_40  [key=2, style=dotted];
m35_152 -> m35_153  [key=0, style=solid];
m35_161 -> m35_162  [key=0, style=solid];
m35_161 -> m35_43  [key=2, style=dotted];
m35_157 -> m35_73  [key=2, style=dotted];
m35_157 -> m35_158  [key=0, style=solid];
m35_157 -> m35_159  [color=darkseagreen4, key=1, label=table6, style=dashed];
m35_157 -> m35_160  [color=darkseagreen4, key=1, label=table6, style=dashed];
m35_157 -> m35_161  [color=darkseagreen4, key=1, label=table6, style=dashed];
m35_153 -> m35_41  [key=2, style=dotted];
m35_153 -> m35_154  [key=0, style=solid];
m35_154 -> m35_41  [key=2, style=dotted];
m35_154 -> m35_155  [key=0, style=solid];
m35_155 -> m35_41  [key=2, style=dotted];
m35_155 -> m35_156  [key=0, style=solid];
m35_156 -> m35_42  [key=2, style=dotted];
m35_156 -> m35_157  [key=0, style=solid];
m35_163 -> m35_149  [color=blue, key=0, style=bold];
m35_87 -> m35_88  [key=0, style=solid];
m35_89 -> m35_22  [key=2, style=dotted];
m35_89 -> m35_90  [key=0, style=solid];
m35_98 -> m35_99  [key=0, style=solid];
m35_98 -> m35_26  [key=2, style=dotted];
m35_88 -> m35_89  [key=0, style=solid];
m35_88 -> m35_39  [key=2, style=dotted];
m35_91 -> m35_74  [key=2, style=dotted];
m35_91 -> m35_92  [key=0, style=solid];
m35_92 -> m35_74  [key=2, style=dotted];
m35_92 -> m35_93  [key=0, style=solid];
m35_90 -> m35_73  [key=2, style=dotted];
m35_90 -> m35_91  [key=0, style=solid];
m35_90 -> m35_92  [color=darkseagreen4, key=1, label=table3, style=dashed];
m35_90 -> m35_93  [color=darkseagreen4, key=1, label=table3, style=dashed];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> m35_41  [key=2, style=dotted];
m35_99 -> m35_87  [color=blue, key=0, style=bold];
m35_93 -> m35_40  [key=2, style=dotted];
m35_93 -> m35_94  [key=0, style=solid];
m35_96 -> m35_43  [key=2, style=dotted];
m35_96 -> m35_97  [key=0, style=solid];
m35_94 -> m35_41  [key=2, style=dotted];
m35_94 -> m35_95  [key=0, style=solid];
m35_95 -> m35_42  [key=2, style=dotted];
m35_95 -> m35_96  [key=0, style=solid];
m35_72 -> m35_62  [color=blue, key=0, style=bold];
m35_64 -> m35_65  [color=green, key=0, style=solid];
m35_64 -> m35_22  [color=green, key=2, style=dotted];
m35_63 -> m35_64  [color=green, key=0, style=solid];
m35_63 -> m35_39  [key=2, style=dotted];
m35_65 -> m35_66  [key=0, style=solid];
m35_65 -> m35_40  [key=2, style=dotted];
m35_71 -> m35_72  [key=0, style=solid];
m35_71 -> m35_26  [key=2, style=dotted];
m35_62 -> m35_63  [key=0, style=solid];
m35_66 -> m35_67  [key=0, style=solid];
m35_66 -> m35_41  [key=2, style=dotted];
m35_69 -> m35_74  [key=2, style=dotted];
m35_69 -> m35_70  [key=0, style=solid];
m35_70 -> m35_71  [key=0, style=solid];
m35_70 -> m35_43  [key=2, style=dotted];
m35_67 -> m35_68  [key=0, style=solid];
m35_67 -> m35_42  [key=2, style=dotted];
m35_68 -> m35_73  [key=2, style=dotted];
m35_68 -> m35_69  [key=0, style=solid];
m35_68 -> m35_70  [color=darkseagreen4, key=1, label=table1, style=dashed];
m35_181 -> m35_182  [key=0, style=solid];
m35_183 -> m35_22  [key=2, style=dotted];
m35_183 -> m35_184  [key=0, style=solid];
m35_189 -> m35_190  [key=0, style=solid];
m35_189 -> m35_26  [key=2, style=dotted];
m35_182 -> m35_183  [key=0, style=solid];
m35_182 -> m35_39  [key=2, style=dotted];
m35_184 -> m35_40  [key=2, style=dotted];
m35_184 -> m35_185  [key=0, style=solid];
m35_188 -> m35_189  [key=0, style=solid];
m35_188 -> m35_43  [key=2, style=dotted];
m35_185 -> m35_41  [key=2, style=dotted];
m35_185 -> m35_186  [key=0, style=solid];
m35_187 -> m35_188  [key=0, style=solid];
m35_187 -> m35_42  [key=2, style=dotted];
m35_186 -> m35_41  [key=2, style=dotted];
m35_186 -> m35_187  [key=0, style=solid];
m35_190 -> m35_181  [color=blue, key=0, style=bold];
m35_30 -> m35_31  [key=0, style=solid];
m35_32 -> m35_22  [key=2, style=dotted];
m35_32 -> m35_33  [key=0, style=solid];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_26  [key=2, style=dotted];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_39  [key=2, style=dotted];
m35_33 -> m35_40  [key=2, style=dotted];
m35_33 -> m35_34  [key=0, style=solid];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_43  [key=2, style=dotted];
m35_34 -> m35_41  [key=2, style=dotted];
m35_34 -> m35_35  [key=0, style=solid];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_42  [key=2, style=dotted];
m35_38 -> m35_30  [color=blue, key=0, style=bold];
m35_53 -> m35_54  [key=0, style=solid];
m35_55 -> m35_22  [key=2, style=dotted];
m35_55 -> m35_56  [key=0, style=solid];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_26  [key=2, style=dotted];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_39  [key=2, style=dotted];
m35_56 -> m35_40  [key=2, style=dotted];
m35_56 -> m35_57  [key=0, style=solid];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_43  [key=2, style=dotted];
m35_57 -> m35_41  [key=2, style=dotted];
m35_57 -> m35_58  [key=0, style=solid];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_42  [key=2, style=dotted];
m35_61 -> m35_53  [color=blue, key=0, style=bold];
m35_12 -> m35_7  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m35_12 -> m35_8  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m35_12 -> m35_9  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m35_219 -> m35_64  [color=green, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_32  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_37  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_46  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_51  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_55  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_60  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_71  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_77  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_85  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_89  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_98  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_102  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_107  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_111  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_118  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_122  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_132  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_136  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_147  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_151  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_162  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_166  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_170  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_174  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_179  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_183  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_189  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_193  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_205  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_209  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m35_219 -> m35_217  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
}
