digraph  {
n49 [label="HangFire.Redis.Tests.RedisConnectionFacts", span=""];
n50 [label="HangFire.Redis.RedisConnection", span=""];
n0 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10"];
n1 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="12-14"];
n2 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10"];
n3 [cluster="Unk.UseConnection", label="Entry Unk.UseConnection", span=""];
n4 [cluster="lambda expression", label="Entry lambda expression", span="13-14"];
n5 [cluster="lambda expression", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="13-14"];
n9 [cluster="lambda expression", label="connection.GetStateData(null)", span="14-14"];
n6 [cluster="lambda expression", label="Exit lambda expression", span="13-14"];
n7 [cluster="Unk.>", label="Entry Unk.>", span=""];
n8 [cluster="lambda expression", label="Entry lambda expression", span="14-14"];
n10 [cluster="lambda expression", label="Exit lambda expression", span="14-14"];
n11 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="205-205"];
n12 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18"];
n13 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''random-id'');\r\n                Assert.Null(result);\r\n            })", span="20-24"];
n14 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18"];
n15 [cluster="lambda expression", label="Entry lambda expression", span="20-24"];
n16 [cluster="lambda expression", label="var result = connection.GetStateData(''random-id'')", span="22-22"];
n17 [cluster="lambda expression", label="Assert.Null(result)", span="23-23"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="20-24"];
n19 [cluster="Unk.Null", label="Entry Unk.Null", span=""];
n20 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28"];
n21 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", label="UseConnections((redis, connection) =>\r\n            {\r\n                redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    });\r\n\r\n                var result = connection.GetStateData(''my-job'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="30-47"];
n22 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28"];
n23 [cluster="Unk.UseConnections", label="Entry Unk.UseConnections", span=""];
n24 [cluster="lambda expression", label="Entry lambda expression", span="30-47"];
n25 [cluster="lambda expression", label="redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    })", span="32-39"];
n26 [cluster="lambda expression", label="var result = connection.GetStateData(''my-job'')", span="41-41"];
n32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n33 [cluster="Unk.SetRangeInHash", label="Entry Unk.SetRangeInHash", span=""];
n27 [cluster="lambda expression", label="Assert.NotNull(result)", span="43-43"];
n28 [cluster="lambda expression", label="Assert.Equal(''Name'', result.Name)", span="44-44"];
n29 [cluster="lambda expression", label="Assert.Equal(''Reason'', result.Reason)", span="45-45"];
n30 [cluster="lambda expression", label="Assert.Equal(''Value'', result.Data[''Key''])", span="46-46"];
n34 [cluster="Unk.NotNull", label="Entry Unk.NotNull", span=""];
n35 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n31 [cluster="lambda expression", label="Exit lambda expression", span="30-47"];
n36 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="50-50"];
n37 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", label="var redis = RedisUtils.CreateClient()", span="52-52"];
n39 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", label="action(redis, connection)", span="55-55"];
n38 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", label="var connection = new RedisConnection(redis)", span="53-53"];
n41 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
n42 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
n40 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="50-50"];
n43 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
n44 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="59-59"];
n45 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", label="var connection = new RedisConnection(RedisUtils.CreateClient())", span="61-61"];
n46 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", label="action(connection)", span="63-63"];
n47 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="59-59"];
n48 [cluster="System.Action<T>.Invoke(T)", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_20 [cluster="HangFire.Tests.States.StatesFeature.ScenarioTearDown()", file="ClientJobDescriptor.cs", label="Exit HangFire.Tests.States.StatesFeature.ScenarioTearDown()", span="56-56"];
m1_30 [cluster="Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label=OperationCanceledException, span="77-77"];
m1_31 [cluster="Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label=Exception, span="80-80"];
m1_32 [cluster="Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label="logger.FatalException(\r\n                    String.Format(\r\n                        ''Fatal error occurred during execution of '{0}' component. It will be stopped. See the exception for details.'',\r\n                        process),\r\n                    ex)", span="82-86"];
m1_33 [cluster="Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label="logger.DebugFormat(''Server component '{0}' stopped.'', process)", span="89-89"];
m1_34 [cluster="Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label="Exit Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", span="61-61"];
m1_35 [cluster="object.ToString()", file="ClientJobDescriptor.cs", label="Entry object.ToString()", span="0-0"];
m1_36 [cluster="Hangfire.Server.BackgroundProcessExtensions.TrySetThreadName(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Server.BackgroundProcessExtensions.TrySetThreadName(string)", span="92-92"];
m1_37 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(string)", span="363-363"];
m1_38 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ClientJobDescriptor.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m1_25 [cluster="Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", span="61-61"];
m1_29 [cluster="Hangfire.Server.BackgroundProcessExtensions.RunProcess(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label="process.Execute(context)", span="75-75"];
m1_0 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientJobDescriptor.cs", label="Entry HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m1_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", color=green, community=0, file="ClientJobDescriptor.cs", label="0: Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m1_4 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientJobDescriptor.cs", label="Exit HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m1_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", color=green, community=0, file="ClientJobDescriptor.cs", label="0: Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_8 [cluster="Unk.OnFeatureStart", file="ClientJobDescriptor.cs", label="Entry Unk.OnFeatureStart", span=""];
m1_1 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientJobDescriptor.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m1_3 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientJobDescriptor.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m1_5 [cluster="Unk.GetTestRunner", file="ClientJobDescriptor.cs", label="Entry Unk.GetTestRunner", span=""];
m1_2 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientJobDescriptor.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''States'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m1_9 [cluster="HangFire.Tests.States.StatesFeature.FeatureTearDown()", file="ClientJobDescriptor.cs", label="Entry HangFire.Tests.States.StatesFeature.FeatureTearDown()", span="39-39"];
m1_21 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.Tasks.TaskCreationOptions)", file="ClientJobDescriptor.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.Tasks.TaskCreationOptions)", span="0-0"];
m1_10 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="ClientJobDescriptor.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m1_11 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m1_12 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m1_22 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="57-57"];
m1_23 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="RunProcess(process, context)", span="57-57"];
m1_24 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="57-57"];
m1_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ClientJobDescriptor.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m1_40 [cluster="Unk.Given", file="ClientJobDescriptor.cs", label="Entry Unk.Given", span=""];
m1_41 [cluster="Hangfire.Logging.ILog.FatalException(string, System.Exception)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Logging.ILog.FatalException(string, System.Exception)", span="188-188"];
m1_44 [cluster="Hangfire.Server.BackgroundProcessExtensions.TrySetThreadName(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.Server.BackgroundProcessExtensions.TrySetThreadName(string)", span="92-92"];
m1_45 [cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="ClientJobDescriptor.cs", label="Hangfire.Server.ILongRunningProcess", span=""];
m1_46 [cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="ClientJobDescriptor.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m1_47 [cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m1_48 [cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.When(''I apply the state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="104-104"];
m1_49 [cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.Then(''Apply method has called'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="106-106"];
m1_50 [cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="ClientJobDescriptor.cs", label="this.ScenarioCleanup()", span="108-108"];
m1_51 [cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="ClientJobDescriptor.cs", label="Exit HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", span="96-96"];
m1_67 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="Exit HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", span="116-116"];
m1_52 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="Entry HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", span="116-116"];
m1_53 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job\'s state entry should contain the corresponding values after applying the '' +\r\n                    ''state'', ((string[])(null)))", span="118-119"];
m1_54 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="this.ScenarioSetup(scenarioInfo)", span="121-121"];
m1_55 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="123-123"];
m1_56 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="125-127"];
m1_57 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table1.AddRow(new string[] {\r\n                        ''Property1'',\r\n                        ''Value1''})", span="128-130"];
m1_58 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table1.AddRow(new string[] {\r\n                        ''Property2'',\r\n                        ''Value2''})", span="131-133"];
m1_59 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.And(''a \'Test\' state with the following properties:'', ((string)(null)), table1, ''And '')", span="135-135"];
m1_60 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.When(''I apply the state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137"];
m1_61 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="139-141"];
m1_62 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table2.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="142-144"];
m1_63 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table2.AddRow(new string[] {\r\n                        ''Property1'',\r\n                        ''Value1''})", span="145-147"];
m1_64 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table2.AddRow(new string[] {\r\n                        ''Property2'',\r\n                        ''Value2''})", span="148-150"];
m1_65 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.Then(''the job\'s state entry contains the following items:'', ((string)(null)), table2, ''Then '')", span="152-152"];
m1_66 [cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="this.ScenarioCleanup()", span="154-154"];
m1_26 [cluster="HangFire.Tests.States.StatesFeature.ScenarioCleanup()", file="ClientJobDescriptor.cs", label="Entry HangFire.Tests.States.StatesFeature.ScenarioCleanup()", span="66-66"];
m1_27 [cluster="HangFire.Tests.States.StatesFeature.ScenarioCleanup()", file="ClientJobDescriptor.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m1_28 [cluster="HangFire.Tests.States.StatesFeature.ScenarioCleanup()", file="ClientJobDescriptor.cs", label="Exit HangFire.Tests.States.StatesFeature.ScenarioCleanup()", span="66-66"];
m1_13 [cluster="Hangfire.Server.BackgroundProcessExtensions.CreateTask(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Server.BackgroundProcessExtensions.CreateTask(Hangfire.Server.ILongRunningProcess, Hangfire.Server.BackgroundProcessContext)", span="48-48"];
m1_17 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="ClientJobDescriptor.cs", label="Exit HangFire.Tests.States.StatesFeature.TestInitialize()", span="46-46"];
m1_16 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="ClientJobDescriptor.cs", label="HangFire.Tests.States.StatesFeature.FeatureSetup(null)", span="51-51"];
m1_14 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="ClientJobDescriptor.cs", label="Entry HangFire.Tests.States.StatesFeature.TestInitialize()", span="46-46"];
m1_18 [cluster="HangFire.Tests.States.StatesFeature.ScenarioTearDown()", file="ClientJobDescriptor.cs", label="Entry HangFire.Tests.States.StatesFeature.ScenarioTearDown()", span="56-56"];
m1_15 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="ClientJobDescriptor.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''States''))", span="48-49"];
m1_19 [cluster="HangFire.Tests.States.StatesFeature.ScenarioTearDown()", color=red, community=0, file="ClientJobDescriptor.cs", label="0: testRunner.OnScenarioEnd()", span="58-58"];
m1_42 [cluster="Hangfire.Server.BackgroundProcessExtensions.TrySetThreadName(string)", file="ClientJobDescriptor.cs", label="Thread.CurrentThread.Name = name", span="96-96"];
m1_69 [cluster="Unk.AddRow", file="ClientJobDescriptor.cs", label="Entry Unk.AddRow", span=""];
m1_43 [cluster="Unk.Then", file="ClientJobDescriptor.cs", label="Entry Unk.Then", span=""];
m1_68 [cluster="TechTalk.SpecFlow.Table.cstr", file="ClientJobDescriptor.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m1_85 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="Exit HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", span="161-161"];
m1_70 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="Entry HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", span="161-161"];
m1_71 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job\'s history list should contain the history entry after applying the state'', ((string[])(null)))", span="163-163"];
m1_72 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="this.ScenarioSetup(scenarioInfo)", span="165-165"];
m1_73 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="167-167"];
m1_74 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="169-171"];
m1_75 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table3.AddRow(new string[] {\r\n                        ''Property'',\r\n                        ''Value''})", span="172-174"];
m1_76 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.And(''a \'Test\' state with the following properties:'', ((string)(null)), table3, ''And '')", span="176-176"];
m1_77 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.When(''I apply the state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="178-178"];
m1_78 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="180-182"];
m1_79 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table4.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="183-185"];
m1_80 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table4.AddRow(new string[] {\r\n                        ''Reason'',\r\n                        ''SomeReason''})", span="186-188"];
m1_81 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table4.AddRow(new string[] {\r\n                        ''CreatedAt'',\r\n                        ''<UtcNow timestamp>''})", span="189-191"];
m1_82 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="table4.AddRow(new string[] {\r\n                        ''Property'',\r\n                        ''Value''})", span="192-194"];
m1_83 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="testRunner.Then(''the last history entry contains the following items:'', ((string)(null)), table4, ''Then '')", span="196-196"];
m1_84 [cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="ClientJobDescriptor.cs", label="this.ScenarioCleanup()", span="198-198"];
m1_86 [file="ClientJobDescriptor.cs", label="HangFire.Tests.States.StatesFeature", span=""];
m2_49 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="ClientSteps.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m2_85 [cluster="Unk.Apply", file="ClientSteps.cs", label="Entry Unk.Apply", span=""];
m2_64 [cluster="Unk.GetAllEntriesFromHash", file="ClientSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m2_26 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", color=red, community=0, file="ClientSteps.cs", label="1: options.QueuePollInterval = TimeSpan.FromSeconds(1)", span="35-35"];
m2_59 [cluster="Unk.IsTrue", file="ClientSteps.cs", label="Entry Unk.IsTrue", span=""];
m2_34 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="49-49"];
m2_35 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", color=green, community=0, file="ClientSteps.cs", label="0: _client.CreateJob(null, typeof (TestJob), new Mock<JobState>(''1'').Object, null)", span="53-53"];
m2_36 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", color=green, community=1, file="ClientSteps.cs", label="1: Exception", span="55-55"];
m2_37 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", color=green, community=0, file="ClientSteps.cs", label="1: _exception = ex", span="57-57"];
m2_38 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="49-49"];
m2_60 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="107-107"];
m2_61 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", color=green, community=0, file="ClientSteps.cs", label="1: var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="109-109"];
m2_62 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", color=green, community=0, file="ClientSteps.cs", label="0: DictionaryAssert.ContainsFollowingItems(table, job)", span="110-110"];
m2_63 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="107-107"];
m2_22 [cluster="lambda expression", file="ClientSteps.cs", label="Exit lambda expression", span="28-28"];
m2_23 [cluster="System.TimeSpan.FromSeconds(double)", color=green, community=0, file="ClientSteps.cs", label="0: Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_24 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", color=green, community=0, file="ClientSteps.cs", label="0: Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", span="32-32"];
m2_25 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", color=red, community=0, file="ClientSteps.cs", label="0: var options = new SqlServerStorageOptions()", span="34-34"];
m2_10 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="ClientSteps.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.Zero)", span="19-20"];
m2_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_12 [cluster="Unk.Returns", file="ClientSteps.cs", label="Entry Unk.Returns", span=""];
m2_50 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="88-88"];
m2_51 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ClientSteps.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(ClientSteps), null, null)", span="92-92"];
m2_53 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ClientSteps.cs", label="_exception = ex", span="96-96"];
m2_52 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ClientSteps.cs", label=Exception, span="94-94"];
m2_54 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="88-88"];
m2_0 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="ClientSteps.cs", label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8"];
m2_1 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", color=green, community=0, file="ClientSteps.cs", label="1: var options = new SqlServerStorageOptions()", span="10-10"];
m2_2 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="ClientSteps.cs", label="Assert.NotEqual(0, options.QueuePollInterval.TotalSeconds)", span="11-11"];
m2_76 [cluster="Unk.AreEqual", file="ClientSteps.cs", label="Entry Unk.AreEqual", span=""];
m2_86 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="138-138"];
m2_87 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", color=green, community=0, file="ClientSteps.cs", label="1: Assert.IsNotNull(_exception)", span="140-140"];
m2_88 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", color=green, community=0, file="ClientSteps.cs", label="0: Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="141-141"];
m2_89 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="138-138"];
m2_16 [cluster="lambda expression", color=green, community=0, file="ClientSteps.cs", label="0: x.StateName", span="31-31"];
m2_17 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="ClientSteps.cs", label="var options = new SqlServerStorageOptions()", span="26-26"];
m2_18 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="ClientSteps.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.FromSeconds(-1))", span="27-28"];
m2_19 [cluster="lambda expression", color=green, community=0, file="ClientSteps.cs", label="1: x.GetProperties()", span="32-32"];
m2_27 [cluster="Unk.When", color=red, community=0, file="ClientSteps.cs", label="1: Entry Unk.When", span=""];
m2_28 [cluster="lambda expression", file="ClientSteps.cs", label="Entry lambda expression", span="44-44"];
m2_3 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="ClientSteps.cs", label="Assert.True(options.PrepareSchemaIfNecessary)", span="12-12"];
m2_21 [cluster="lambda expression", file="ClientSteps.cs", label="options.QueuePollInterval = TimeSpan.FromSeconds(-1)", span="28-28"];
m2_13 [cluster="lambda expression", file="ClientSteps.cs", label="Entry lambda expression", span="20-20"];
m2_66 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="114-114"];
m2_67 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs", label="1: var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="116-118"];
m2_68 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs", label="0: var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="119-119"];
m2_69 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs", label="1: Assert.AreEqual(_arguments.Count, args.Count)", span="121-121"];
m2_71 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs", label="0: Assert.IsTrue(args.ContainsKey(pair.Key))", span="124-124"];
m2_70 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs", label="0: _arguments", span="122-122"];
m2_72 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", color=green, community=0, file="ClientSteps.cs", label="1: Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="125-125"];
m2_73 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="114-114"];
m2_55 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="101-101"];
m2_56 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", color=green, community=0, file="ClientSteps.cs", label="1: Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="103-103"];
m2_57 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="101-101"];
m2_11 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="ClientSteps.cs", label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16"];
m2_6 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", color=green, community=0, file="ClientSteps.cs", label="0: _stateMock.Setup(x => x.StateName).Returns(''Test'')", span="31-31"];
m2_4 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="ClientSteps.cs", label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8"];
m2_5 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="ClientSteps.cs", label="0: Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m2_7 [cluster="Unk.True", color=green, community=0, file="ClientSteps.cs", label="1: Entry Unk.True", span=""];
m2_8 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", color=green, community=0, file="ClientSteps.cs", label="0: Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16"];
m2_9 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="ClientSteps.cs", label="var options = new SqlServerStorageOptions()", span="18-18"];
m2_92 [cluster="Unk.IsInstanceOfType", file="ClientSteps.cs", label="Entry Unk.IsInstanceOfType", span=""];
m2_39 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="62-62"];
m2_40 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", color=green, community=0, file="ClientSteps.cs", label="1: _client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="66-66"];
m2_41 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", color=green, community=0, file="ClientSteps.cs", label="0: Exception", span="68-68"];
m2_42 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ClientSteps.cs", label="_exception = ex", span="70-70"];
m2_43 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="62-62"];
m2_91 [cluster="System.Type.GetType(string, bool)", file="ClientSteps.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m2_82 [cluster="lambda expression", file="ClientSteps.cs", label="Entry lambda expression", span="133-133"];
m2_14 [cluster="Unk.CreateJob", file="ClientSteps.cs", label="Entry Unk.CreateJob", span=""];
m2_15 [cluster="lambda expression", file="ClientSteps.cs", label="Entry lambda expression", span="31-31"];
m2_20 [cluster="lambda expression", file="ClientSteps.cs", label="Exit lambda expression", span="32-32"];
m2_31 [cluster="lambda expression", file="ClientSteps.cs", label=options, span=""];
m2_29 [cluster="lambda expression", color=green, community=0, file="ClientSteps.cs", label="1: x[''Name'']", span="44-44"];
m2_30 [cluster="lambda expression", file="ClientSteps.cs", label=options, span=""];
m2_32 [cluster="lambda expression", color=green, community=0, file="ClientSteps.cs", label="0: x[''Value'']", span="44-44"];
m2_33 [cluster="lambda expression", file="ClientSteps.cs", label="Exit lambda expression", span="44-44"];
m2_83 [cluster="lambda expression", color=green, community=0, file="ClientSteps.cs", label="0: x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="133-133"];
m2_84 [cluster="lambda expression", file="ClientSteps.cs", label="Exit lambda expression", span="133-133"];
m2_90 [cluster="Unk.IsNotNull", file="ClientSteps.cs", label="Entry Unk.IsNotNull", span=""];
m2_44 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="75-75"];
m2_45 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", color=green, community=0, file="ClientSteps.cs", label="0: _client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, null)", span="79-79"];
m2_46 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", color=green, community=0, file="ClientSteps.cs", label="1: Exception", span="81-81"];
m2_47 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", color=green, community=0, file="ClientSteps.cs", label="0: _exception = ex", span="83-83"];
m2_48 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="75-75"];
m2_74 [cluster="Unk.GetValueFromHash", file="ClientSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m2_65 [cluster="Unk.ContainsFollowingItems", file="ClientSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m2_81 [cluster="Unk.Verify", file="ClientSteps.cs", label="Entry Unk.Verify", span=""];
m2_78 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="ClientSteps.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="130-130"];
m2_79 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", color=green, community=0, file="ClientSteps.cs", label="0: _stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId), \r\n                Times.Once)", span="132-134"];
m2_80 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="ClientSteps.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="130-130"];
m2_58 [cluster="Unk.ContainsKey", file="ClientSteps.cs", label="Entry Unk.ContainsKey", span=""];
m2_93 [file="ClientSteps.cs", label="HangFire.Tests.ClientSteps", span=""];
m3_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobCreator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_24 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m3_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=red, community=0, file="JobCreator.cs", label="1: filters.Reverse()", span="117-117"];
m3_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filter.OnClientException(context)", span="119-119"];
m3_67 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m3_64 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m3_23 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m3_3 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m3_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m3_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Current = new JobCreator()", span="14-14"];
m3_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m3_4 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m3_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m3_46 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreating(preContext)", span="79-79"];
m3_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="preContext.Canceled", span="80-80"];
m3_48 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="82-83"];
m3_51 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = continuation()", span="90-90"];
m3_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="95-96"];
m3_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="98-98"];
m3_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="108-108"];
m3_49 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="var wasError = false", span="86-86"];
m3_50 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="CreatedContext postContext", span="87-87"];
m3_52 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label=Exception, span="92-92"];
m3_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!wasError", span="106-106"];
m3_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="wasError = true", span="94-94"];
m3_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!postContext.ExceptionHandled", span="100-100"];
m3_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return postContext;", span="111-111"];
m3_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="throw;", span="102-102"];
m3_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m3_14 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m3_15 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="CreateWithFilters(context, context.JobDescriptor, _clientFilters)", span="42-42"];
m3_17 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="46-46"];
m3_16 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label=Exception, span="44-44"];
m3_18 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="InvokeExceptionFilters(exceptionContext, _clientExceptionFilters)", span="48-48"];
m3_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="!exceptionContext.ExceptionHandled", span="49-49"];
m3_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="throw;", span="51-51"];
m3_21 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m3_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m3_33 [cluster="Unk.thunk", file="JobCreator.cs", label="Entry Unk.thunk", span=""];
m3_30 [cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6"];
m3_38 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="JobCreator.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="52-52"];
m3_68 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m3_39 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m3_62 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m3_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m3_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientFilters == null", span="31-31"];
m3_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientExceptionFilters == null", span="32-32"];
m3_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientFilters = clientFilters", span="34-34"];
m3_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientExceptionFilters = clientExceptionFilters", span="35-35"];
m3_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientFilters'');", span="31-31"];
m3_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="32-32"];
m3_12 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m3_63 [cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m3_42 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="69-69"];
m3_35 [cluster="lambda expression", file="JobCreator.cs", label="jobDescriptor.Create()", span="64-64"];
m3_36 [cluster="lambda expression", file="JobCreator.cs", label="return new CreatedContext(createContext, false, null);", span="65-65"];
m3_43 [cluster="lambda expression", file="JobCreator.cs", label="InvokeClientFilter(filter, preContext, next)", span="69-69"];
m3_40 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="69-69"];
m3_34 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="62-66"];
m3_37 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="62-66"];
m3_41 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="69-69"];
m3_44 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="69-69"];
m3_32 [cluster="Unk.Aggregate", file="JobCreator.cs", label="Entry Unk.Aggregate", span=""];
m3_22 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m3_25 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var preContext = new CreatingContext(createContext)", span="61-61"];
m3_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Create();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="62-66"];
m3_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="68-69"];
m3_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="thunk()", span="71-71"];
m3_29 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m3_69 [file="JobCreator.cs", label="HangFire.Client.JobCreator", span=""];
m3_70 [file="JobCreator.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m3_71 [file="JobCreator.cs", label="HangFire.Client.CreateContext", span=""];
m3_72 [file="JobCreator.cs", label=preContext, span=""];
m3_73 [file="JobCreator.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m3_74 [file="JobCreator.cs", label="HangFire.Filters.IClientFilter", span=""];
m4_5 [cluster="Unk.GetTestRunner", file="States.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m4_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="States.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m4_14 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="States.feature.cs", label="Entry HangFire.Tests.States.StatesFeature.TestInitialize()", span="46-46"];
m4_15 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", color=green, community=0, file="States.feature.cs", label="1: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''States''))", span="48-49"];
m4_16 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", color=green, community=0, file="States.feature.cs", label="0: HangFire.Tests.States.StatesFeature.FeatureSetup(null)", span="51-51"];
m4_17 [cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="States.feature.cs", label="Exit HangFire.Tests.States.StatesFeature.TestInitialize()", span="46-46"];
m4_0 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="States.feature.cs", label="Entry HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m4_2 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="States.feature.cs", label="0: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''States'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m4_1 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="States.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m4_3 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="States.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m4_4 [cluster="HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="States.feature.cs", label="Exit HangFire.Tests.States.StatesFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m4_8 [cluster="Unk.OnFeatureStart", file="States.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m4_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="States.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
n49 -> n1  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
n49 -> n13  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
n49 -> n21  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
n50 -> n9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n5 -> n8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=2, style=dotted];
n6 -> n4  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n10 -> n8  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n3  [key=2, style=dotted];
n13 -> n15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n14 -> n12  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n11  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=2, style=dotted];
n18 -> n15  [color=blue, key=0, style=bold];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=2, style=dotted];
n21 -> n24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n22 -> n20  [color=blue, key=0, style=bold];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
n25 -> n26  [key=0, style=solid];
n25 -> n32  [key=2, style=dotted];
n25 -> n33  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n11  [key=2, style=dotted];
n26 -> n28  [color=darkseagreen4, key=1, label=result, style=dashed];
n26 -> n29  [color=darkseagreen4, key=1, label=result, style=dashed];
n26 -> n30  [color=darkseagreen4, key=1, label=result, style=dashed];
n27 -> n28  [key=0, style=solid];
n27 -> n34  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n35  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n35  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n35  [key=2, style=dotted];
n31 -> n24  [color=blue, key=0, style=bold];
n36 -> n37  [key=0, style=solid];
n36 -> n39  [color=darkseagreen4, key=1, label="System.Action<IRedisClient, HangFire.Redis.RedisConnection>", style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n41  [key=2, style=dotted];
n37 -> n39  [color=darkseagreen4, key=1, label=redis, style=dashed];
n39 -> n40  [key=0, style=solid];
n39 -> n43  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n42  [key=2, style=dotted];
n40 -> n36  [color=blue, key=0, style=bold];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [color=darkseagreen4, key=1, label="System.Action<HangFire.Redis.RedisConnection>", style=dashed];
n45 -> n46  [key=0, style=solid];
n45 -> n42  [key=2, style=dotted];
n45 -> n41  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=2, style=dotted];
n47 -> n44  [color=blue, key=0, style=bold];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_39  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_22  [key=2, style=dotted];
m1_32 -> m1_40  [key=2, style=dotted];
m1_32 -> m1_41  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_40  [key=2, style=dotted];
m1_33 -> m1_38  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_41  [key=2, style=dotted];
m1_34 -> m1_25  [color=blue, key=0, style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_42  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_43  [key=2, style=dotted];
m1_36 -> m1_42  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_26  [key=2, style=dotted];
m1_38 -> m1_30  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_25 -> m1_28  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_25 -> m1_32  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_25 -> m1_33  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=0, style=solid];
m1_29 -> m1_33  [key=0, style=solid];
m1_29 -> m1_39  [key=2, style=dotted];
m1_0 -> m1_6  [color=green, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m1_0 -> m1_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_8  [color=green, key=1, label=component, style=dashed];
m1_4 -> m1_6  [color=green, key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_9  [color=green, key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_12  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_16  [color=darkorchid, key=3, label="Local variable Hangfire.Server.ScheduleInstantFactory factory", style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=backgroundProcess, style=dashed];
m1_3 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_9  [key=0, style=solid];
m1_5 -> m1_11  [key=2, style=dotted];
m1_2 -> m1_9  [key=0, style=solid];
m1_2 -> m1_10  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_9 -> m1_0  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_9  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_53  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_71  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_24 -> m1_22  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_36  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_39  [key=2, style=dotted];
m1_45 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_22  [key=2, style=dotted];
m1_46 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_40  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_42  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_43  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_26  [key=2, style=dotted];
m1_51 -> m1_44  [color=blue, key=0, style=bold];
m1_67 -> m1_52  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_39  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_22  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_40  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_68  [key=2, style=dotted];
m1_56 -> m1_58  [color=darkseagreen4, key=1, label=table1, style=dashed];
m1_56 -> m1_59  [color=darkseagreen4, key=1, label=table1, style=dashed];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_69  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_69  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_41  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_42  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_68  [key=2, style=dotted];
m1_61 -> m1_63  [color=darkseagreen4, key=1, label=table2, style=dashed];
m1_61 -> m1_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m1_61 -> m1_65  [color=darkseagreen4, key=1, label=table2, style=dashed];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_69  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_69  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_69  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_43  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_26  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_35  [key=2, style=dotted];
m1_26 -> m1_36  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_35  [key=2, style=dotted];
m1_27 -> m1_37  [key=2, style=dotted];
m1_27 -> m1_32  [color=darkseagreen4, key=1, label=logger, style=dashed];
m1_27 -> m1_33  [color=darkseagreen4, key=1, label=logger, style=dashed];
m1_27 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_38  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_13 -> m1_16  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_18  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_13 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m1_17 -> m1_10  [key=2, style=dotted];
m1_17 -> m1_19  [key=0, style=solid];
m1_17 -> m1_14  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=0, style=solid];
m1_16 -> m1_0  [key=2, style=dotted];
m1_14 -> m1_16  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_18 -> m1_19  [color=red, key=0, style=solid];
m1_18 -> m1_21  [key=2, style=dotted];
m1_18 -> m1_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_15 -> m1_19  [key=0, style=solid];
m1_15 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_19 -> m1_13  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [color=red, key=0, style=solid];
m1_19 -> m1_21  [color=red, key=2, style=dotted];
m1_42 -> m1_44  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_85 -> m1_70  [color=blue, key=0, style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_39  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_22  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_40  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_68  [key=2, style=dotted];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label=table3, style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_69  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_41  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_42  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_68  [key=2, style=dotted];
m1_78 -> m1_80  [color=darkseagreen4, key=1, label=table4, style=dashed];
m1_78 -> m1_81  [color=darkseagreen4, key=1, label=table4, style=dashed];
m1_78 -> m1_82  [color=darkseagreen4, key=1, label=table4, style=dashed];
m1_78 -> m1_83  [color=darkseagreen4, key=1, label=table4, style=dashed];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_69  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_69  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_69  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_69  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_43  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_26  [key=2, style=dotted];
m1_86 -> m1_32  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m1_86 -> m1_37  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m1_86 -> m1_46  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m1_86 -> m1_50  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m1_86 -> m1_54  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m1_86 -> m1_66  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m1_86 -> m1_72  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m1_86 -> m1_84  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StatesFeature", style=dashed];
m2_26 -> m2_27  [color=red, key=0, style=solid];
m2_26 -> m2_23  [color=red, key=2, style=dotted];
m2_34 -> m2_35  [color=green, key=0, style=solid];
m2_35 -> m2_36  [color=green, key=0, style=solid];
m2_35 -> m2_38  [color=green, key=0, style=solid];
m2_35 -> m2_10  [color=green, key=2, style=dotted];
m2_35 -> m2_14  [color=green, key=2, style=dotted];
m2_36 -> m2_37  [color=green, key=0, style=solid];
m2_37 -> m2_38  [color=green, key=0, style=solid];
m2_38 -> m2_34  [color=blue, key=0, style=bold];
m2_60 -> m2_61  [color=green, key=0, style=solid];
m2_60 -> m2_62  [color=green, key=1, label=Table, style=dashed];
m2_61 -> m2_62  [color=green, key=0, style=solid];
m2_61 -> m2_64  [color=green, key=2, style=dotted];
m2_62 -> m2_63  [color=green, key=0, style=solid];
m2_62 -> m2_65  [color=green, key=2, style=dotted];
m2_63 -> m2_60  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [color=green, key=0, style=solid];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_22 -> m2_15  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [color=green, key=0, style=solid];
m2_23 -> m2_26  [color=green, key=2, style=dotted];
m2_23 -> m2_28  [color=green, key=1, label="lambda expression", style=dashed];
m2_23 -> m2_31  [color=green, key=1, label="lambda expression", style=dashed];
m2_24 -> m2_25  [color=red, key=0, style=solid];
m2_24 -> m2_27  [color=green, key=2, style=dotted];
m2_25 -> m2_22  [color=blue, key=0, style=bold];
m2_25 -> m2_26  [color=red, key=0, style=solid];
m2_25 -> m2_5  [color=red, key=2, style=dotted];
m2_25 -> m2_27  [color=red, key=1, label=options, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_49  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_54  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_54 -> m2_50  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_86 -> m2_87  [color=green, key=0, style=solid];
m2_86 -> m2_88  [color=green, key=1, label=string, style=dashed];
m2_87 -> m2_88  [color=green, key=0, style=solid];
m2_87 -> m2_90  [color=green, key=2, style=dotted];
m2_88 -> m2_89  [color=green, key=0, style=solid];
m2_88 -> m2_91  [color=green, key=2, style=dotted];
m2_88 -> m2_92  [color=green, key=2, style=dotted];
m2_89 -> m2_86  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_22  [color=green, key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_5  [key=2, style=dotted];
m2_17 -> m2_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_12  [key=2, style=dotted];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_16  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [color=green, key=0, style=solid];
m2_19 -> m2_21  [color=green, key=2, style=dotted];
m2_27 -> m2_28  [color=red, key=0, style=solid];
m2_27 -> m2_23  [color=red, key=2, style=dotted];
m2_27 -> n35  [color=red, key=2, style=dotted];
m2_28 -> m2_24  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [color=green, key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_19  [color=green, key=0, style=solid];
m2_66 -> m2_67  [color=green, key=0, style=solid];
m2_67 -> m2_68  [color=green, key=0, style=solid];
m2_67 -> m2_74  [color=green, key=2, style=dotted];
m2_68 -> m2_69  [color=green, key=0, style=solid];
m2_68 -> m2_12  [color=green, key=2, style=dotted];
m2_68 -> m2_71  [color=green, key=1, label=args, style=dashed];
m2_69 -> m2_70  [color=green, key=0, style=solid];
m2_69 -> m2_76  [color=green, key=2, style=dotted];
m2_71 -> m2_71  [color=green, key=1, label=pair, style=dashed];
m2_71 -> m2_72  [color=green, key=0, style=solid];
m2_71 -> m2_77  [color=green, key=2, style=dotted];
m2_71 -> m2_59  [color=green, key=2, style=dotted];
m2_70 -> m2_71  [color=green, key=0, style=solid];
m2_70 -> m2_73  [color=green, key=0, style=solid];
m2_72 -> m2_70  [color=green, key=0, style=solid];
m2_72 -> m2_72  [color=green, key=1, label=pair, style=dashed];
m2_72 -> m2_76  [color=green, key=2, style=dotted];
m2_73 -> m2_66  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [color=green, key=0, style=solid];
m2_56 -> m2_57  [color=green, key=0, style=solid];
m2_56 -> m2_58  [color=green, key=2, style=dotted];
m2_56 -> m2_59  [color=green, key=2, style=dotted];
m2_57 -> m2_55  [color=blue, key=0, style=bold];
m2_11 -> m2_8  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_6 -> m2_11  [color=green, key=2, style=dotted];
m2_6 -> m2_12  [color=green, key=2, style=dotted];
m2_6 -> m2_15  [color=green, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [color=green, key=0, style=solid];
m2_5 -> m2_10  [color=green, key=2, style=dotted];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_11  [color=green, key=2, style=dotted];
m2_7 -> m2_13  [color=green, key=2, style=dotted];
m2_7 -> m2_12  [color=green, key=2, style=dotted];
m2_8 -> m2_9  [color=green, key=0, style=solid];
m2_8 -> m2_14  [color=green, key=2, style=dotted];
m2_9 -> m2_4  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_5  [key=2, style=dotted];
m2_9 -> m2_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m2_39 -> m2_40  [color=green, key=0, style=solid];
m2_40 -> m2_41  [color=green, key=0, style=solid];
m2_40 -> m2_43  [color=green, key=0, style=solid];
m2_40 -> m2_10  [color=green, key=2, style=dotted];
m2_40 -> m2_14  [color=green, key=2, style=dotted];
m2_41 -> m2_42  [color=green, key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_39  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [color=green, key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [color=green, key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_13  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [color=green, key=0, style=solid];
m2_31 -> m2_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m2_29 -> m2_30  [color=green, key=0, style=solid];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_30 -> m2_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m2_32 -> m2_33  [color=green, key=0, style=solid];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [color=green, key=0, style=solid];
m2_83 -> m2_12  [color=green, key=2, style=dotted];
m2_83 -> m2_85  [color=green, key=2, style=dotted];
m2_84 -> m2_82  [color=blue, key=0, style=bold];
m2_44 -> m2_45  [color=green, key=0, style=solid];
m2_45 -> m2_46  [color=green, key=0, style=solid];
m2_45 -> m2_48  [color=green, key=0, style=solid];
m2_45 -> m2_49  [color=green, key=2, style=dotted];
m2_46 -> m2_47  [color=green, key=0, style=solid];
m2_47 -> m2_48  [color=green, key=0, style=solid];
m2_48 -> m2_44  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [color=green, key=0, style=solid];
m2_79 -> m2_80  [color=green, key=0, style=solid];
m2_79 -> m2_81  [color=green, key=2, style=dotted];
m2_79 -> m2_82  [color=green, key=1, label="lambda expression", style=dashed];
m2_80 -> m2_78  [color=blue, key=0, style=bold];
m2_93 -> m2_1  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_5  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_6  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_7  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_8  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_23  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_35  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_37  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_40  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_45  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_47  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_69  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_70  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_72  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_79  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_87  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_88  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_42  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_51  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_53  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m3_24 -> m3_65  [color=red, key=0, style=solid];
m3_24 -> m3_66  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m3_65 -> m3_66  [color=red, key=0, style=solid];
m3_65 -> m3_67  [color=red, key=0, style=solid];
m3_65 -> m3_31  [color=red, key=2, style=dotted];
m3_66 -> m3_65  [color=red, key=0, style=solid];
m3_66 -> m3_68  [key=2, style=dotted];
m3_67 -> m3_24  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_3  [color=blue, key=0, style=bold];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m3_45 -> m3_48  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m3_45 -> m3_51  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m3_45 -> m3_54  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m3_45 -> m3_55  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m3_45 -> m3_59  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m3_45 -> m3_50  [color=darkorchid, key=3, label="method methodReturn HangFire.Filters.CreatedContext InvokeClientFilter", style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_62  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=0, style=solid];
m3_48 -> m3_61  [key=0, style=solid];
m3_48 -> m3_39  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_58  [key=0, style=solid];
m3_51 -> m3_63  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_39  [key=2, style=dotted];
m3_54 -> m3_56  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m3_54 -> m3_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m3_54 -> m3_60  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_64  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_64  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_49  [color=darkorchid, key=3, label="Local variable bool wasError", style=bold];
m3_50 -> m3_51  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_58  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_58  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_57 -> m3_61  [key=0, style=solid];
m3_61 -> m3_45  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_21  [key=0, style=solid];
m3_15 -> m3_22  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_23  [key=2, style=dotted];
m3_17 -> m3_19  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_24  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_14  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m3_5 -> m3_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m3_5 -> m3_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_7 -> m3_12  [key=0, style=solid];
m3_7 -> m3_13  [key=2, style=dotted];
m3_9 -> m3_12  [key=0, style=solid];
m3_9 -> m3_13  [key=2, style=dotted];
m3_12 -> m3_5  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_39  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_45  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_27  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m3_40 -> m3_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m3_34 -> m3_35  [key=0, style=solid];
m3_37 -> m3_34  [color=blue, key=0, style=bold];
m3_41 -> m3_40  [color=blue, key=0, style=bold];
m3_44 -> m3_42  [color=blue, key=0, style=bold];
m3_22 -> m3_25  [key=0, style=solid];
m3_22 -> m3_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_22 -> m3_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m3_22 -> m3_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_30  [key=2, style=dotted];
m3_25 -> m3_27  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m3_25 -> m3_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_26  [color=darkorchid, key=3, label="Local variable System.Func<HangFire.Filters.CreatedContext> continuation", style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_31  [key=2, style=dotted];
m3_27 -> m3_32  [key=2, style=dotted];
m3_27 -> m3_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_33  [key=2, style=dotted];
m3_29 -> m3_22  [color=blue, key=0, style=bold];
m3_69 -> m3_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m3_69 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m3_69 -> m3_15  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m3_69 -> m3_18  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m3_70 -> m3_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m3_71 -> m3_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_72 -> m3_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m3_73 -> m3_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m3_74 -> m3_43  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m4_14 -> m4_15  [color=green, key=0, style=solid];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_15 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_0  [color=green, key=2, style=dotted];
m4_17 -> m4_14  [color=blue, key=0, style=bold];
m4_0 -> m4_16  [color=green, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_6  [color=green, key=2, style=dotted];
m4_2 -> m4_7  [color=green, key=2, style=dotted];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
}
