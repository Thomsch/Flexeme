digraph  {
n77 [label="Hangfire.BackgroundJobServer", span=""];
n0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
n1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
n2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
n3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
n4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
n5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
n6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
n7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
n8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
n9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage == null", span="80-80"];
n10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(nameof(storage));", span="80-80"];
n11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="options == null", span="81-81"];
n12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(nameof(options));", span="81-81"];
n13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="additionalProcesses == null", span="82-82"];
n14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(nameof(additionalProcesses));", span="82-82"];
n15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="_options = options", span="84-84"];
n18 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(additionalProcesses)", span="88-88"];
n19 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="90-94"];
n21 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''Using job storage: '{storage}''')", span="97-97"];
n22 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage.WriteOptionsToLog(Logger)", span="99-99"];
n24 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Worker count: {options.WorkerCount}'')", span="102-102"];
n25 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Listening queues: {String.Join('', '', options.Queues.Select(x => ''''' + x + '''''))}'')", span="103-103"];
n26 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Shutdown timeout: {options.ShutdownTimeout}'')", span="104-104"];
n27 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Schedule polling interval: {options.SchedulePollingInterval}'')", span="105-105"];
n28 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="_processingServer = new BackgroundProcessingServer(\r\n                storage, \r\n                processes, \r\n                properties, \r\n                GetProcessingServerOptions())", span="107-111"];
n16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var processes = new List<IBackgroundProcess>()", span="86-86"];
n17 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(GetRequiredProcesses())", span="87-87"];
n32 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n33 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="Entry Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
n34 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n20 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info(''Starting Hangfire Server'')", span="96-96"];
n35 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n36 [cluster="Hangfire.Logging.ILog.Info(string)", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
n23 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info(''Using the following options for Hangfire Server:'')", span="101-101"];
n37 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="70-70"];
n38 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n39 [cluster="Unk.Join", label="Entry Unk.Join", span=""];
n42 [cluster="lambda expression", label="Entry lambda expression", span="103-103"];
n29 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
n30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n31 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n40 [cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", span="91-91"];
n41 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="Entry Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
n43 [cluster="lambda expression", label="''''' + x + '''''", span="103-103"];
n44 [cluster="lambda expression", label="Exit lambda expression", span="103-103"];
n45 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
n46 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="_processingServer.Dispose()", span="116-116"];
n47 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Logger.Info(''Hangfire Server stopped.'')", span="117-117"];
n49 [cluster="System.IDisposable.Dispose()", label="Entry System.IDisposable.Dispose()", span="0-0"];
n48 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
n50 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var processes = new List<IBackgroundProcess>()", span="122-122"];
n51 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var filterProvider = _options.FilterProvider ?? JobFilterProviders.Providers", span="124-124"];
n57 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="processes.Add(new Worker(_options.Queues, performer, stateChanger))", span="132-132"];
n59 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="processes.Add(new DelayedJobScheduler(_options.SchedulePollingInterval, stateChanger))", span="135-135"];
n60 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="processes.Add(new RecurringJobScheduler(factory))", span="136-136"];
n61 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="return processes;", span="138-138"];
n52 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var factory = new BackgroundJobFactory(filterProvider)", span="126-126"];
n53 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var performer = new BackgroundJobPerformer(filterProvider, _options.Activator ?? JobActivator.Current)", span="127-127"];
n54 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var stateChanger = new BackgroundJobStateChanger(filterProvider)", span="128-128"];
n63 [cluster="Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", span="35-35"];
n64 [cluster="Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", label="Entry Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", span="39-39"];
n55 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var i = 0", span="130-130"];
n65 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
n56 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="i < _options.WorkerCount", span="130-130"];
n58 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="i++", span="130-130"];
n66 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60"];
n67 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n68 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
n69 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
n62 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="Exit Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
n70 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="return new BackgroundProcessingServerOptions\r\n            {\r\n                ShutdownTimeout = _options.ShutdownTimeout,\r\n                HeartbeatInterval = _options.HeartbeatInterval,\r\n#pragma warning disable 618\r\n                ServerCheckInterval = _options.ServerWatchdogOptions?.CheckInterval ?? _options.ServerCheckInterval,\r\n                ServerTimeout = _options.ServerWatchdogOptions?.ServerTimeout ?? _options.ServerTimeout,\r\n                ServerName = _options.ServerName\r\n#pragma warning restore 618\r\n            };", span="143-152"];
n71 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="Exit Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
n72 [cluster="Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", label="Entry Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", span="22-22"];
n73 [cluster="Hangfire.BackgroundJobServer.Start()", label="Entry Hangfire.BackgroundJobServer.Start()", span="156-156"];
n74 [cluster="Hangfire.BackgroundJobServer.Start()", label="Exit Hangfire.BackgroundJobServer.Start()", span="156-156"];
n75 [cluster="Hangfire.BackgroundJobServer.Stop()", label="Entry Hangfire.BackgroundJobServer.Stop()", span="161-161"];
n76 [cluster="Hangfire.BackgroundJobServer.Stop()", label="Exit Hangfire.BackgroundJobServer.Stop()", span="161-161"];
m0_42 [cluster="Unk.StartsWith", file="BackgroundJobServer.cs", label="Entry Unk.StartsWith", span=""];
m0_21 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="var workCount = int.Parse(command.Substring(4))", span="56-56"];
m0_41 [cluster="HangFire.Perform.Async<TWorker>(object)", file="BackgroundJobServer.cs", label="Entry HangFire.Perform.Async<TWorker>(object)", span="10-10"];
m0_10 [cluster="HangFire.BackgroundJobServer.Start()", color=red, community=0, file="BackgroundJobServer.cs", label="2: _server = new JobServer(MachineName, Queue, WorkersCount, PollInterval, JobActivator)", span="57-57"];
m0_15 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="_server != null", span="66-66"];
m0_14 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="64-64"];
m0_16 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="_server.Dispose()", span="68-68"];
m0_13 [cluster="HangFire.Server.JobServer.JobServer(string, string, int, System.TimeSpan, HangFire.JobActivator)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.JobServer.JobServer(string, string, int, System.TimeSpan, HangFire.JobActivator)", span="30-30"];
m0_17 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="_server = null", span="69-69"];
m0_24 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="76-76"];
m0_11 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="50-50"];
m0_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobServer.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m0_20 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="64-64"];
m0_23 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs", label="Stop()", span="78-78"];
m0_18 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="return true;", span="71-71"];
m0_26 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="64-64"];
m0_25 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="HangFire.BackgroundJobServer", span=""];
m0_19 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="return false;", span="73-73"];
m0_22 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="76-76"];
m0_27 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="var workCount = int.Parse(command.Substring(6))", span="66-66"];
m0_28 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="var i = 0", span="67-67"];
m0_29 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="i < workCount", span="67-67"];
m0_31 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="i++", span="67-67"];
m0_30 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="Perform.Async<ErrorWorker>()", span="69-69"];
m0_32 [cluster="HangFire.Hosts.Program.Main()", file="BackgroundJobServer.cs", label="Exit HangFire.Hosts.Program.Main()", span="29-29"];
m0_34 [cluster="HangFire.Manager.Manager(int)", file="BackgroundJobServer.cs", label="Entry HangFire.Manager.Manager(int)", span="15-15"];
m0_40 [cluster="int.Parse(string)", file="BackgroundJobServer.cs", label="Entry int.Parse(string)", span="0-0"];
m0_6 [cluster="HangFire.Hosts.ErrorWorker.Perform()", file="BackgroundJobServer.cs", label="Entry HangFire.Hosts.ErrorWorker.Perform()", span="21-21"];
m0_45 [cluster="HangFire.Perform.Async<TWorker>()", file="BackgroundJobServer.cs", label="Entry HangFire.Perform.Async<TWorker>()", span="4-4"];
m0_44 [cluster="Unk.Parse", file="BackgroundJobServer.cs", label="Entry Unk.Parse", span=""];
m0_38 [cluster="string.StartsWith(string, System.StringComparison)", file="BackgroundJobServer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m0_7 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, file="BackgroundJobServer.cs", label="0: Entry HangFire.BackgroundJobServer.Start()", span="50-50"];
m0_8 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_server != null", span="52-52"];
m0_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer()", span="13-13"];
m0_35 [cluster="HangFire.Manager.Start()", file="BackgroundJobServer.cs", label="Entry HangFire.Manager.Start()", span="24-24"];
m0_36 [cluster="System.Console.ReadLine()", file="BackgroundJobServer.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m0_0 [cluster="HangFire.Hosts.ConsoleWorker.Perform()", file="BackgroundJobServer.cs", label="Entry HangFire.Hosts.ConsoleWorker.Perform()", span="11-11"];
m0_1 [cluster="HangFire.Hosts.ConsoleWorker.Perform()", file="BackgroundJobServer.cs", label="Console.WriteLine(''Running task: '' + Args[''Number''])", span="13-13"];
m0_2 [cluster="HangFire.Hosts.ConsoleWorker.Perform()", color=green, community=0, file="BackgroundJobServer.cs", label="0: Interlocked.Add(ref Processed, 1)", span="14-14"];
m0_3 [cluster="HangFire.Hosts.ConsoleWorker.Perform()", color=red, community=0, file="BackgroundJobServer.cs", label="0: Exit HangFire.Hosts.ConsoleWorker.Perform()", span="11-11"];
m0_4 [cluster="System.Console.WriteLine(string)", file="BackgroundJobServer.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_43 [cluster="Unk.Substring", file="BackgroundJobServer.cs", label="Entry Unk.Substring", span=""];
m0_37 [cluster="string.Equals(string, System.StringComparison)", file="BackgroundJobServer.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m0_9 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="54-54"];
m0_33 [cluster="ConsoleLogFactory.cstr", file="BackgroundJobServer.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m0_39 [cluster="string.Substring(int)", file="BackgroundJobServer.cs", label="Entry string.Substring(int)", span="0-0"];
m0_46 [file="BackgroundJobServer.cs", label="HangFire.Hosts.ConsoleWorker", span=""];
m1_0 [cluster="HangFire.Client.ClientContext.ClientContext()", file="ClientContext.cs", label="Entry HangFire.Client.ClientContext.ClientContext()", span="6-6"];
m1_1 [cluster="HangFire.Client.ClientContext.ClientContext()", color=red, community=0, file="ClientContext.cs", label="0: Items = new Dictionary<string, object>()", span="8-8"];
m1_2 [cluster="HangFire.Client.ClientContext.ClientContext()", file="ClientContext.cs", label="Exit HangFire.Client.ClientContext.ClientContext()", span="6-6"];
m1_4 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", file="ClientContext.cs", label="Entry HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", span="11-11"];
m1_5 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", color=red, community=0, file="ClientContext.cs", label="2: Items = clientContext.Items", span="13-13"];
m1_6 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", file="ClientContext.cs", label="Exit HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", span="11-11"];
m1_7 [file="ClientContext.cs", label="HangFire.Client.ClientContext", span=""];
m2_0 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs", label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m2_1 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs", label="Exception = exception", span="11-11"];
m2_2 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs", label="Exit HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m2_3 [file="ClientJobExceptionContext.cs", label="HangFire.Filters.ClientJobExceptionContext", span=""];
m3_0 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker()", file="ClientJobInvoker.cs", label="Entry HangFire.Client.ClientJobInvoker.ClientJobInvoker()", span="12-12"];
m3_1 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker()", color=red, community=1, file="ClientJobInvoker.cs", label="0: Current = new ClientJobInvoker(\r\n                GlobalJobFilters.Filters.OfType<IClientJobFilter>(),\r\n                GlobalJobFilters.Filters.OfType<IClientJobExceptionFilter>())", span="14-16"];
m3_2 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker()", file="ClientJobInvoker.cs", label="Exit HangFire.Client.ClientJobInvoker.ClientJobInvoker()", span="12-12"];
m3_13 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="ClientJobInvoker.cs", label="Entry HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="33-33"];
m3_14 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs", label="0: EnqueueWithFilters(clientContext, jobDescriptor, _clientFilters)", span="37-37"];
m3_16 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs", label="0: var exceptionContext = InvokeClientExceptionFilters(clientContext, _clientExceptionFilters, ex)", span="41-41"];
m3_15 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs", label="2: Exception", span="39-39"];
m3_17 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs", label="2: !exceptionContext.ExceptionHandled", span="42-42"];
m3_18 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs", label="2: throw;", span="44-44"];
m3_19 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="ClientJobInvoker.cs", label="Exit HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="33-33"];
m3_20 [cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", file="ClientJobInvoker.cs", label="Entry HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", span="49-49"];
m3_22 [cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: var preContext = new JobEnqueueingContext(clientContext, jobDescriptor)", span="54-54"];
m3_23 [cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=1, file="ClientJobInvoker.cs", label="1: Func<JobEnqueuedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Enqueue();\r\n                return new JobEnqueuedContext(clientContext, jobDescriptor, false, null);\r\n            }", span="55-59"];
m3_24 [cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=1, file="ClientJobInvoker.cs", label="0: Func<JobEnqueuedContext> thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => EnqueueJobFilter(filter, preContext, next))", span="61-62"];
m3_25 [cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: return thunk();", span="64-64"];
m3_26 [cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", file="ClientJobInvoker.cs", label="Exit HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", span="49-49"];
m3_59 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="ClientJobInvoker.cs", label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4"];
m3_66 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobInvoker.cs", label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m3_3 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", file="ClientJobInvoker.cs", label="Entry HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", span="22-22"];
m3_5 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: clientFilters == null", span="26-26"];
m3_7 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: clientExceptionFilters == null", span="27-27"];
m3_9 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="2: _clientFilters = clientFilters", span="29-29"];
m3_10 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="2: _clientExceptionFilters = clientExceptionFilters", span="30-30"];
m3_6 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: throw new ArgumentNullException(''clientFilters'');", span="26-26"];
m3_8 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: throw new ArgumentNullException(''clientExceptionFilters'');", span="27-27"];
m3_11 [cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", file="ClientJobInvoker.cs", label="Exit HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", span="22-22"];
m3_29 [cluster="Unk.Aggregate", file="ClientJobInvoker.cs", label="Entry Unk.Aggregate", span=""];
m3_27 [cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="ClientJobInvoker.cs", label="Entry HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6"];
m3_36 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="ClientJobInvoker.cs", label="Entry HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", span="8-8"];
m3_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="ClientJobInvoker.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m3_42 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", file="ClientJobInvoker.cs", label="Entry HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", span="67-67"];
m3_43 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: filter.OnJobEnqueueing(preContext)", span="72-72"];
m3_44 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: preContext.Canceled", span="73-73"];
m3_45 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=1, file="ClientJobInvoker.cs", label="0: return new JobEnqueuedContext(\r\n                    preContext, preContext.JobDescriptor, true, null);", span="75-76"];
m3_48 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: postContext = continuation()", span="83-83"];
m3_51 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=1, file="ClientJobInvoker.cs", label="2: postContext = new JobEnqueuedContext(\r\n                    preContext, preContext.JobDescriptor, false, ex)", span="88-89"];
m3_52 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: filter.OnJobEnqueued(postContext)", span="91-91"];
m3_56 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: filter.OnJobEnqueued(postContext)", span="101-101"];
m3_46 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="1: var wasError = false", span="79-79"];
m3_47 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="2: JobEnqueuedContext postContext", span="80-80"];
m3_49 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="2: Exception", span="85-85"];
m3_55 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="2: !wasError", span="99-99"];
m3_50 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: wasError = true", span="87-87"];
m3_53 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="0: !postContext.ExceptionHandled", span="93-93"];
m3_57 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="2: return postContext;", span="104-104"];
m3_54 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs", label="2: throw;", span="95-95"];
m3_58 [cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", file="ClientJobInvoker.cs", label="Exit HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", span="67-67"];
m3_60 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="ClientJobInvoker.cs", label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5"];
m3_67 [cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="ClientJobInvoker.cs", label="Entry HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4"];
m3_35 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="ClientJobInvoker.cs", label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19"];
m3_4 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ClientJobInvoker.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m3_39 [cluster="lambda expression", file="ClientJobInvoker.cs", label="Entry lambda expression", span="62-62"];
m3_32 [cluster="lambda expression", color=red, community=0, file="ClientJobInvoker.cs", label="0: jobDescriptor.Enqueue()", span="57-57"];
m3_33 [cluster="lambda expression", color=red, community=0, file="ClientJobInvoker.cs", label="0: return new JobEnqueuedContext(clientContext, jobDescriptor, false, null);", span="58-58"];
m3_40 [cluster="lambda expression", color=red, community=0, file="ClientJobInvoker.cs", label="0: EnqueueJobFilter(filter, preContext, next)", span="62-62"];
m3_37 [cluster="lambda expression", file="ClientJobInvoker.cs", label="Entry lambda expression", span="62-62"];
m3_31 [cluster="lambda expression", file="ClientJobInvoker.cs", label="Entry lambda expression", span="55-59"];
m3_34 [cluster="lambda expression", file="ClientJobInvoker.cs", label="Exit lambda expression", span="55-59"];
m3_38 [cluster="lambda expression", file="ClientJobInvoker.cs", label="Exit lambda expression", span="62-62"];
m3_41 [cluster="lambda expression", file="ClientJobInvoker.cs", label="Exit lambda expression", span="62-62"];
m3_21 [cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", file="ClientJobInvoker.cs", label="Entry HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", span="107-107"];
m3_61 [cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs", label="0: var context = new ClientJobExceptionContext(clientContext, exception)", span="110-110"];
m3_62 [cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs", label="0: filters.Reverse()", span="111-111"];
m3_63 [cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs", label="0: filter.OnClientException(context)", span="113-113"];
m3_64 [cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs", label="2: return context;", span="116-116"];
m3_65 [cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", file="ClientJobInvoker.cs", label="Exit HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", span="107-107"];
m3_30 [cluster="System.Func<TResult>.Invoke()", file="ClientJobInvoker.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m3_68 [file="ClientJobInvoker.cs", label="HangFire.Client.ClientJobInvoker", span=""];
m3_69 [file="ClientJobInvoker.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m3_70 [file="ClientJobInvoker.cs", label="HangFire.Client.ClientContext", span=""];
m3_71 [file="ClientJobInvoker.cs", label=preContext, span=""];
m3_72 [file="ClientJobInvoker.cs", label="System.Func<HangFire.Filters.JobEnqueuedContext>", span=""];
m3_73 [file="ClientJobInvoker.cs", label="HangFire.Filters.IClientJobFilter", span=""];
m6_54 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="58-58"];
m6_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(Request.LinkTo(''/queues/dequeued/'' + queue.Name))", span="169-169"];
m6_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''    \r\n                        </a>\r\n                    </td>\r\n                  '' +\r\n''  <td>'')", span="187-188"];
m6_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                                    <tr class=\'''')", span="233-233"];
m6_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''\''>\r\n                                        <td>\r\n                               '' +\r\n''             <a href=\'''')", span="243-244"];
m6_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="249-249"];
m6_20 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(queue.Dequeued)", span="179-179"];
m6_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="queue.FirstJobs.Count == 0", span="195-195"];
m6_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                        <em>No jobs queued.</em>\r\n'')", span="201-201"];
m6_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(@''                        <table class=''''table table-condensed table-bordered table-inner''''>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Job type</th>\r\n                                    <th>Enqueued</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n'')", span="213-222"];
m6_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="queue.FirstJobs", span="227-227"];
m6_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="238-238"];
m6_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''\''>\r\n                            '')", span="174-174"];
m6_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''\''>'')", span="254-254"];
m6_57 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", color=green, community=0, file="DequeuedJobsWatcher.cs", label="0: var recoverFromStates = new[] { EnqueuedState.Name, ProcessingState.Name }", span="108-108"];
m6_64 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m6_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(queue.Name)", span="148-148"];
m6_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''      <td>'')", span="287-288"];
m6_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''</td>\r\n                                        <td>\r\n'')", span="298-298"];
m6_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="293-293"];
m6_39 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                                                <span data-moment=\'''')", span="309-309"];
m6_71 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="!String.IsNullOrEmpty(fetchedTimestamp)", span="140-140"];
m6_73 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="145-146"];
m6_72 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="return false;", span="142-142"];
m6_74 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="135-135"];
m6_51 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="57-57"];
m6_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="var monitor = JobStorage.Current.CreateMonitoring()", span="78-78"];
m6_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="queues = monitor.Queues()", span="80-80"];
m6_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="DequeuedJobsWatcher.cs", label="2: queues.Count == 0", span="92-92"];
m6_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="98-99"];
m6_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label=queues, span="126-126"];
m6_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''\r\n'')", span="87-87"];
m6_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121"];
m6_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133"];
m6_49 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="57-57"];
m6_63 [cluster="Unk.TryToGetQueue", file="DequeuedJobsWatcher.cs", label="Entry Unk.TryToGetQueue", span=""];
m6_66 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m6_83 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m6_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="!job.Value.InEnqueuedState", span="269-269"];
m6_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m6_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''\r\n'')", span="61-61"];
m6_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74"];
m6_67 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DequeuedJobsWatcher.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m6_75 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="149-149"];
m6_77 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="FindAndRequeueTimedOutJobs()", span="155-155"];
m6_81 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="_logger.Fatal(\r\n                    ''Unexpected exception caught in the timed out jobs thread. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="164-166"];
m6_76 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label=true, span="153-153"];
m6_78 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Thread.Sleep(SleepTimeout)", span="156-156"];
m6_80 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label=Exception, span="162-162"];
m6_79 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label=ThreadInterruptedException, span="159-159"];
m6_82 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="149-149"];
m6_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                                                <span title=\''Job\'s state has been'' +\r\n'' changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>'' +\r\n''\r\n'')", span="275-277"];
m6_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76"];
m6_40 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="314-314"];
m6_59 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", color=green, community=0, file="DequeuedJobsWatcher.cs", label="2: HangFire.Web.Pages.QueuesPage", span=""];
m6_56 [cluster="Unk.Write", file="DequeuedJobsWatcher.cs", label="Entry Unk.Write", span=""];
m6_58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m6_60 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", color=green, community=0, file="DequeuedJobsWatcher.cs", label="0: JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(\r\n                        jobId,\r\n                        ''Failed to re-queue the job.'',\r\n                        new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    recoverFromStates)", span="119-125"];
m6_55 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m6_61 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="100-100"];
m6_84 [cluster="Unk.Fatal", file="DequeuedJobsWatcher.cs", label="Entry Unk.Fatal", span=""];
m6_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(queue.Length)", span="159-159"];
m6_52 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m6_43 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''\r\n                                                </span>\r\n'')", span="329-329"];
m6_50 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m6_42 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(job.Value.EnqueuedAt)", span="324-324"];
m6_46 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="360-360"];
m6_44 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''  </tr>\r\n'')", span="339-340"];
m6_48 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m6_47 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="370-370"];
m6_53 [cluster="HttpRequestBase.LinkTo(string)", file="DequeuedJobsWatcher.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m6_65 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m6_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(HtmlHelper.JobId(job.Key))", span="259-259"];
m6_38 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="job.Value.EnqueuedAt.HasValue", span="303-303"];
m6_68 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="131-132"];
m6_69 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="129-129"];
m6_62 [cluster="Unk.GetValueFromHash", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetValueFromHash", span=""];
m6_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DequeuedJobsWatcher.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138"];
m6_13 [cluster="Unk.Format", file="DequeuedJobsWatcher.cs", label="Entry Unk.Format", span=""];
m6_15 [cluster="Unk.AcquireLock", file="DequeuedJobsWatcher.cs", label="Entry Unk.AcquireLock", span=""];
m6_17 [cluster="Unk.RequeueJobIfTimedOut", file="DequeuedJobsWatcher.cs", label="Entry Unk.RequeueJobIfTimedOut", span=""];
m6_45 [cluster="Unk.GetValue", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetValue", span=""];
m6_32 [cluster="Unk.QueueCommand", file="DequeuedJobsWatcher.cs", label="Entry Unk.QueueCommand", span=""];
m6_41 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="100-100"];
m6_70 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m6_91 [file="DequeuedJobsWatcher.cs", label="HangFire.Server.DequeuedJobsWatcher", span=""];
m6_92 [file="DequeuedJobsWatcher.cs", label=string, span=""];
m7_0 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="18-18"];
m7_1 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="var workerContext = new WorkerContext(''server'', new string[0], 1)", span="20-20"];
m7_2 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="var connection = new Mock<IStorageConnection>()", span="22-22"];
m7_3 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="string jobId = ''someId''", span="23-23"];
m7_4 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="var job = Job.FromExpression(() => Method())", span="24-24"];
m7_5 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="_context = new PerformContext(workerContext, connection.Object, jobId, job)", span="26-26"];
m7_6 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="_performer = new Mock<IJobPerformer>()", span="27-27"];
m7_7 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="_filters = new List<object>()", span="29-29"];
m7_8 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.JobPerformanceProcessFacts()", span="18-18"];
m7_9 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m7_70 [cluster="Mock<IServerExceptionFilter>.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry Mock<IServerExceptionFilter>.cstr", span=""];
m7_26 [cluster="Unk.Equal", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Equal", span=""];
m7_82 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="91-91"];
m7_83 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: var filter1 = new Mock<IServerExceptionFilter>()", span="94-94"];
m7_84 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DequeuedJobsWatcher.feature.cs", label="var filter2 = new Mock<IServerExceptionFilter>()", span="95-95"];
m7_85 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="97-97"];
m7_86 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DequeuedJobsWatcher.feature.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="98-98"];
m7_87 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DequeuedJobsWatcher.feature.cs", label="_filters.Add(filter1.Object)", span="100-100"];
m7_88 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: _filters.Add(filter2.Object)", span="101-101"];
m7_89 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: _performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="103-103"];
m7_90 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: var process = CreateProcess()", span="105-105"];
m7_91 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="108-109"];
m7_92 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="91-91"];
m7_19 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33"];
m7_20 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DequeuedJobsWatcher.feature.cs", label="var process = CreateProcess()", span="35-35"];
m7_21 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DequeuedJobsWatcher.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="37-38"];
m7_22 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DequeuedJobsWatcher.feature.cs", label="Assert.Equal(''context'', exception.ParamName)", span="40-40"];
m7_23 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="33-33"];
m7_24 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="327-327"];
m7_334 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="DequeuedJobsWatcher.feature.cs", label="return new JobPerformanceProcess(_filters);", span="329-329"];
m7_335 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.CreateProcess()", span="327-327"];
m7_31 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m7_32 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DequeuedJobsWatcher.feature.cs", label="var process = CreateProcess()", span="46-46"];
m7_33 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DequeuedJobsWatcher.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="48-49"];
m7_34 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DequeuedJobsWatcher.feature.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="51-51"];
m7_35 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="44-44"];
m7_114 [cluster="Unk.DoesNotThrow", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.DoesNotThrow", span=""];
m7_30 [cluster="Unk.Run", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Run", span=""];
m7_40 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m7_41 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DequeuedJobsWatcher.feature.cs", label="var process = CreateProcess()", span="57-57"];
m7_42 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DequeuedJobsWatcher.feature.cs", label="process.Run(_context, _performer.Object)", span="59-59"];
m7_43 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DequeuedJobsWatcher.feature.cs", label="_performer.Verify(x => x.Perform(), Times.Once)", span="61-61"];
m7_44 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="55-55"];
m7_25 [cluster="Unk.>", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.>", span=""];
m7_62 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="75-75"];
m7_63 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: var filter = new Mock<IServerExceptionFilter>()", span="77-77"];
m7_64 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: _filters.Add(filter.Object)", span="78-78"];
m7_65 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DequeuedJobsWatcher.feature.cs", label="_performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="80-80"];
m7_66 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: var process = CreateProcess()", span="81-81"];
m7_67 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="83-84"];
m7_68 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DequeuedJobsWatcher.feature.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="86-87"];
m7_69 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="75-75"];
m7_81 [cluster="Unk.OnServerException", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.OnServerException", span=""];
m7_71 [cluster="Unk.Add", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Add", span=""];
m7_93 [cluster="Unk.InSequence", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.InSequence", span=""];
m7_50 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="65-65"];
m7_51 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DequeuedJobsWatcher.feature.cs", label="_performer.Setup(x => x.Perform()).Throws<InvalidOperationException>()", span="67-67"];
m7_52 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DequeuedJobsWatcher.feature.cs", label="var process = CreateProcess()", span="68-68"];
m7_53 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DequeuedJobsWatcher.feature.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="70-71"];
m7_54 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="65-65"];
m7_13 [cluster="Mock<IJobPerformer>.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry Mock<IJobPerformer>.cstr", span=""];
m7_55 [cluster="Unk.Setup", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Setup", span=""];
m7_106 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="115-115"];
m7_107 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DequeuedJobsWatcher.feature.cs", label="var filter = new Mock<IServerExceptionFilter>()", span="118-118"];
m7_108 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="119-120"];
m7_109 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: _filters.Add(filter.Object)", span="122-122"];
m7_110 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: var process = CreateProcess()", span="124-124"];
m7_111 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DequeuedJobsWatcher.feature.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="127-127"];
m7_112 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="115-115"];
m7_49 [cluster="Unk.Perform", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Perform", span=""];
m7_121 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="127-127"];
m7_15 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="24-24"];
m7_16 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Method()", span="24-24"];
m7_17 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="24-24"];
m7_27 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="38-38"];
m7_28 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="process.Run(null, _performer.Object)", span="38-38"];
m7_29 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="38-38"];
m7_36 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="49-49"];
m7_37 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="process.Run(_context, null)", span="49-49"];
m7_38 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="49-49"];
m7_46 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="61-61"];
m7_47 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.Perform()", span="61-61"];
m7_48 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="61-61"];
m7_56 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="67-67"];
m7_57 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.Perform()", span="67-67"];
m7_58 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="67-67"];
m7_59 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="71-71"];
m7_60 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="process.Run(_context, _performer.Object)", span="71-71"];
m7_61 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="71-71"];
m7_72 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="80-80"];
m7_73 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.Perform()", span="80-80"];
m7_74 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="80-80"];
m7_75 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="84-84"];
m7_76 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="process.Run(_context, _performer.Object)", span="84-84"];
m7_77 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="84-84"];
m7_78 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="86-87"];
m7_79 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="86-87"];
m7_80 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="86-87"];
m7_94 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="97-97"];
m7_95 [cluster="lambda expression", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: x.OnServerException(It.IsAny<ServerExceptionContext>())", span="97-97"];
m7_96 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="97-97"];
m7_97 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="98-98"];
m7_98 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="98-98"];
m7_99 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="98-98"];
m7_100 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="103-103"];
m7_101 [cluster="lambda expression", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: x.Perform()", span="103-103"];
m7_102 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="103-103"];
m7_103 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="109-109"];
m7_104 [cluster="lambda expression", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: process.Run(_context, _performer.Object)", span="109-109"];
m7_105 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="109-109"];
m7_115 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="119-119"];
m7_116 [cluster="lambda expression", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: x.OnServerException(It.IsAny<ServerExceptionContext>())", span="119-119"];
m7_117 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="119-119"];
m7_118 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Entry lambda expression", span="120-120"];
m7_119 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="x.ExceptionHandled = true", span="120-120"];
m7_120 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="120-120"];
m7_122 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="process.Run(_context, _performer.Object)", span="127-127"];
m7_123 [cluster="lambda expression", file="DequeuedJobsWatcher.feature.cs", label="Exit lambda expression", span="127-127"];
m7_45 [cluster="Unk.Verify", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Verify", span=""];
m7_18 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="323-323"];
m7_333 [cluster="HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", file="DequeuedJobsWatcher.feature.cs", label="Exit HangFire.Core.Tests.Server.JobPerformanceProcessFacts.Method()", span="323-323"];
m7_113 [cluster="Unk.Callback", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Callback", span=""];
m7_11 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m7_39 [cluster="HangFire.Server.JobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="DequeuedJobsWatcher.feature.cs", label="Entry HangFire.Server.JobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="41-41"];
m7_10 [cluster="Mock<IStorageConnection>.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_12 [cluster="PerformContext.cstr", file="DequeuedJobsWatcher.feature.cs", label="Entry PerformContext.cstr", span=""];
m8_5 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", file="HangFireConfig.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", span="8-8"];
m8_0 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="Entry MvcSample.HangFireConfig.Start()", span="16-16"];
m8_1 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="RedisFactory.Db = 3", span="20-20"];
m8_2 [cluster="MvcSample.HangFireConfig.Start()", color=red, community=1, file="HangFireConfig.cs", label="0: _server = new AspNetBackgroundJobServer\r\n            {\r\n                MachineName = Environment.MachineName,\r\n                Queue = ''default'',\r\n                WorkersCount = Environment.ProcessorCount * 2\r\n            }", span="22-27"];
m8_3 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="GlobalJobFilters.Filters.Add(new PreserveCultureFilter())", span="29-29"];
m8_4 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="Exit MvcSample.HangFireConfig.Start()", span="16-16"];
m8_8 [cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs", label="Entry MvcSample.HangFireConfig.Stop()", span="34-34"];
m8_9 [cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs", label="_server.Stop()", span="36-36"];
m8_10 [cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs", label="Exit MvcSample.HangFireConfig.Stop()", span="34-34"];
m8_7 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="HangFireConfig.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m8_6 [cluster="HangFire.PreserveCultureFilter.PreserveCultureFilter()", file="HangFireConfig.cs", label="Entry HangFire.PreserveCultureFilter.PreserveCultureFilter()", span="8-8"];
m8_11 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="HangFireConfig.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="24-24"];
m9_59 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="87-87"];
m9_60 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="DayOfWeek day = DayOfWeek.Thursday", span="89-89"];
m9_61 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int hour = 5", span="90-90"];
m9_63 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="string expected = minute.ToString() + '' '' + hour.ToString() + '' * * '' + ((int)day).ToString()", span="92-92"];
m9_64 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Weekly(day, hour, minute)", span="93-93"];
m9_62 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int minute = 5", span="91-91"];
m9_65 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="94-94"];
m9_66 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="87-87"];
m9_89 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="125-125"];
m9_90 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int day = 7", span="127-127"];
m9_91 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int hour = 4", span="128-128"];
m9_93 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="string expected = minute.ToString() + '' '' + hour.ToString() + '' '' + day.ToString() + '' * *''", span="130-130"];
m9_94 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Monthly(day, hour, minute)", span="131-131"];
m9_92 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int minute = 23", span="129-129"];
m9_95 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="132-132"];
m9_96 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithDayHourMinute_ReturnsFormattedStringWithDayHourMinute()", span="125-125"];
m9_118 [cluster="Hangfire.Cron.Yearly(int, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Yearly(int, int)", span="187-187"];
m9_128 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", span="174-174"];
m9_129 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int month = 4", span="176-176"];
m9_130 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int day = 17", span="177-177"];
m9_133 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="string expected = minute.ToString() + '' '' + hour.ToString() + '' '' + day.ToString() + '' '' + month.ToString() + '' *''", span="180-180"];
m9_134 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Yearly(month, day, hour, minute)", span="181-181"];
m9_131 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int hour = 3", span="178-178"];
m9_132 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="int minute = 45", span="179-179"];
m9_135 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="182-182"];
m9_136 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithMonthDayHourMinute_ReturnsFormattedStringWithMonthDayHourMinute()", span="174-174"];
m9_24 [cluster="Hangfire.Cron.Daily()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Daily()", span="54-54"];
m9_110 [cluster="Hangfire.Cron.Yearly(int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Yearly(int)", span="176-176"];
m9_6 [cluster="Unk.Equal", file="HistoryStatisticsFilter.cs", label="Entry Unk.Equal", span=""];
m9_25 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", span="44-44"];
m9_26 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 5 * * *''", span="46-46"];
m9_27 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Daily(5)", span="47-47"];
m9_28 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="48-48"];
m9_29 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Daily_WithoutMinute_ReturnsFormattedStringWithHourAndZeroMinute()", span="44-44"];
m9_127 [cluster="Hangfire.Cron.Yearly(int, int, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Yearly(int, int, int)", span="199-199"];
m9_36 [cluster="Hangfire.Cron.Daily(int, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Daily(int, int)", span="75-75"];
m9_12 [cluster="Hangfire.Cron.Hourly()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Hourly()", span="37-37"];
m9_44 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", span="68-68"];
m9_45 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="DayOfWeek day = DayOfWeek.Thursday", span="70-70"];
m9_46 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 * * '' + ((int)day).ToString()", span="71-71"];
m9_47 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Weekly(day)", span="72-72"];
m9_48 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="73-73"];
m9_49 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithDayWithoutHourMinute_ReturnsFormattedStringWithDay()", span="68-68"];
m9_13 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", span="28-28"];
m9_14 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", file="HistoryStatisticsFilter.cs", label="string expected = ''5 * * * *''", span="30-30"];
m9_15 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Hourly(5)", span="31-31"];
m9_16 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="32-32"];
m9_17 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Hourly_WithMinute_ReturnsFormattedStringWithMinute()", span="28-28"];
m9_42 [cluster="int.ToString()", file="HistoryStatisticsFilter.cs", label="Entry int.ToString()", span="0-0"];
m9_80 [cluster="Hangfire.Cron.Monthly(int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Monthly(int)", span="135-135"];
m9_74 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", span="106-106"];
m9_75 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="int day = 6", span="108-108"];
m9_76 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 '' + day.ToString() + '' * *''", span="109-109"];
m9_77 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Monthly(day)", span="110-110"];
m9_78 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="111-111"];
m9_79 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithoutHourMinuteWithDay_ReturnsFormattedStringWithDay()", span="106-106"];
m9_0 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", span="12-12"];
m9_1 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", file="HistoryStatisticsFilter.cs", label="string expected = ''* * * * *''", span="14-14"];
m9_2 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Minutely()", span="15-15"];
m9_3 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="16-16"];
m9_4 [cluster="Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Minutely_ReturnsFormattedString()", span="12-12"];
m9_43 [cluster="Hangfire.Cron.Weekly()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Weekly()", span="83-83"];
m9_88 [cluster="Hangfire.Cron.Monthly(int, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Monthly(int, int)", span="146-146"];
m9_50 [cluster="Hangfire.Cron.Weekly(System.DayOfWeek)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Weekly(System.DayOfWeek)", span="93-93"];
m9_104 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", span="144-144"];
m9_105 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", file="HistoryStatisticsFilter.cs", label="int month = 7", span="146-146"];
m9_106 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 1 '' + month.ToString() + '' *''", span="147-147"];
m9_107 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Yearly(month)", span="148-148"];
m9_108 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="149-149"];
m9_109 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutDayHourMinuteWithMonth_ReturnsFormattedStringWithMonth()", span="144-144"];
m9_7 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", span="20-20"];
m9_8 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 * * * *''", span="22-22"];
m9_9 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Hourly()", span="23-23"];
m9_10 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="24-24"];
m9_11 [cluster="Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Hourly_WithoutMinute_ReturnsFormattedStringWithDefaults()", span="20-20"];
m9_119 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", span="163-163"];
m9_120 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="int month = 3", span="165-165"];
m9_121 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="int day = 18", span="166-166"];
m9_123 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 '' + hour.ToString() + '' '' + day.ToString() + '' '' + month.ToString() + '' *''", span="168-168"];
m9_124 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Yearly(month, day, hour)", span="169-169"];
m9_122 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="int hour = 14", span="167-167"];
m9_125 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="170-170"];
m9_126 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutMinuteWithMonthDayHour_ReturnsFormattedStringWithMonthDayHour()", span="163-163"];
m9_51 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", span="77-77"];
m9_52 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="DayOfWeek day = DayOfWeek.Thursday", span="79-79"];
m9_53 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="int hour = 5", span="80-80"];
m9_54 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 '' + hour.ToString() + '' * * '' + ((int)day).ToString()", span="81-81"];
m9_55 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Weekly(day, hour)", span="82-82"];
m9_56 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="83-83"];
m9_57 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithDayHourWithoutMinute_ReturnsFormattedStringWithDayHour()", span="77-77"];
m9_98 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", span="136-136"];
m9_99 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 1 1 *''", span="138-138"];
m9_100 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Yearly()", span="139-139"];
m9_101 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="140-140"];
m9_102 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutMonthDayHourMinute_ReturnsFormattedStringWithDefaults()", span="136-136"];
m9_19 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", span="36-36"];
m9_20 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 * * *''", span="38-38"];
m9_21 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Daily()", span="39-39"];
m9_22 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="40-40"];
m9_23 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Daily_WithoutMinuteOrHour_ReturnsFormattedStringWithDefaults()", span="36-36"];
m9_58 [cluster="Hangfire.Cron.Weekly(System.DayOfWeek, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Weekly(System.DayOfWeek, int)", span="104-104"];
m9_31 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", span="52-52"];
m9_32 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", file="HistoryStatisticsFilter.cs", label="string expected = ''5 5 * * *''", span="54-54"];
m9_33 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Daily(5, 5)", span="55-55"];
m9_34 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="56-56"];
m9_35 [cluster="Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Daily_WithMinuteAndHour_ReturnsFormattedStringWithHourAndMinute()", span="52-52"];
m9_68 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="98-98"];
m9_69 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 1 * *''", span="100-100"];
m9_70 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Monthly()", span="101-101"];
m9_71 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="102-102"];
m9_72 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="98-98"];
m9_18 [cluster="Hangfire.Cron.Hourly(int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Hourly(int)", span="46-46"];
m9_30 [cluster="Hangfire.Cron.Daily(int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Daily(int)", span="64-64"];
m9_5 [cluster="Hangfire.Cron.Minutely()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Minutely()", span="29-29"];
m9_67 [cluster="Hangfire.Cron.Weekly(System.DayOfWeek, int, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Weekly(System.DayOfWeek, int, int)", span="116-116"];
m9_103 [cluster="Hangfire.Cron.Yearly()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Yearly()", span="166-166"];
m9_137 [cluster="Hangfire.Cron.Yearly(int, int, int, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Yearly(int, int, int, int)", span="212-212"];
m9_111 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", span="153-153"];
m9_112 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", file="HistoryStatisticsFilter.cs", label="int month = 8", span="155-155"];
m9_113 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", file="HistoryStatisticsFilter.cs", label="int day = 18", span="156-156"];
m9_114 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 '' + day.ToString() + '' '' + month.ToString() + '' *''", span="157-157"];
m9_115 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Yearly(month, day)", span="158-158"];
m9_116 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="159-159"];
m9_117 [cluster="Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Yearly_WithoutHourMinuteWithMonthDay_ReturnsFormattedStringWithMonthDay()", span="153-153"];
m9_81 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", span="115-115"];
m9_82 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="int day = 7", span="117-117"];
m9_83 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="int hour = 4", span="118-118"];
m9_84 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 '' + hour.ToString() + '' '' + day.ToString() + '' * *''", span="119-119"];
m9_85 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Monthly(day, hour)", span="120-120"];
m9_86 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="121-121"];
m9_87 [cluster="Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Monthly_WithoutMinuteWithDayHour_ReturnsFormattedStringWithDayHour()", span="115-115"];
m9_37 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="60-60"];
m9_38 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string expected = ''0 0 * * '' + ((int)DayOfWeek.Monday).ToString()", span="62-62"];
m9_39 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="string actual = Cron.Weekly()", span="63-63"];
m9_40 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Assert.Equal(expected, actual)", span="64-64"];
m9_41 [cluster="Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", file="HistoryStatisticsFilter.cs", label="Exit Hangfire.Core.Tests.CronFacts.Weekly_WithoutDayHourMinute_ReturnsFormattedStringWithDefaults()", span="60-60"];
m9_73 [cluster="Hangfire.Cron.Monthly()", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Monthly()", span="125-125"];
m9_97 [cluster="Hangfire.Cron.Monthly(int, int, int)", file="HistoryStatisticsFilter.cs", label="Entry Hangfire.Cron.Monthly(int, int, int)", span="158-158"];
m12_0 [cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="IClientJobExceptionFilter.cs", label="Entry HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4"];
m12_1 [cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="IClientJobExceptionFilter.cs", label="Exit HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4"];
m13_2 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="IClientJobFilter.cs", label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5"];
m13_3 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="IClientJobFilter.cs", label="Exit HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5"];
m13_0 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="IClientJobFilter.cs", label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4"];
m13_1 [cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="IClientJobFilter.cs", label="Exit HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4"];
m14_2 [cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IJobStateAppliedFilter.cs", label="Entry HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m14_3 [cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IJobStateAppliedFilter.cs", label="Exit HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m14_0 [cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IJobStateAppliedFilter.cs", label="Entry HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m14_1 [cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IJobStateAppliedFilter.cs", label="Exit HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m15_0 [cluster="HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IJobStateChangingFilter.cs", label="Entry HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m15_1 [cluster="HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IJobStateChangingFilter.cs", label="Exit HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m18_0 [cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="IServerJobExceptionFilter.cs", label="Entry HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4"];
m18_1 [cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="IServerJobExceptionFilter.cs", label="Exit HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4"];
m19_0 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="IServerJobFilter.cs", label="Entry HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="4-4"];
m19_1 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="IServerJobFilter.cs", label="Exit HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="4-4"];
m19_2 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="IServerJobFilter.cs", label="Entry HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="5-5"];
m19_3 [cluster="HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="IServerJobFilter.cs", label="Exit HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="5-5"];
m21_9 [cluster="HangFire.JobStorage.CreateMonitoring()", file="JobCreator.cs", label="Entry HangFire.JobStorage.CreateMonitoring()", span="43-43"];
m21_12 [cluster="Unk.SerializeToString", file="JobCreator.cs", label="Entry Unk.SerializeToString", span=""];
m21_11 [cluster="Unk.With", file="JobCreator.cs", label="Entry Unk.With", span=""];
m21_0 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JobCreator.cs", label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m21_1 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JobCreator.cs", label="0: var monitoring = JobStorage.Current.CreateMonitoring()", span="26-26"];
m21_2 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JobCreator.cs", label="2: var response = monitoring.GetStatistics()", span="28-28"];
m21_3 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JobCreator.cs", label="0: JsConfig.With(emitCamelCaseNames: true)", span="30-30"];
m21_4 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JobCreator.cs", label="0: var serialized = JsonSerializer.SerializeToString(response)", span="32-32"];
m21_5 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JobCreator.cs", label="2: Response.ContentType = ''application/json''", span="33-33"];
m21_7 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JobCreator.cs", label="0: Response.Write(serialized)", span="35-35"];
m21_6 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JobCreator.cs", label="2: Response.ContentEncoding = Encoding.UTF8", span="34-34"];
m21_8 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JobCreator.cs", label="Exit HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m21_10 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", file="JobCreator.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18"];
m21_13 [cluster="Unk.Write", file="JobCreator.cs", label="Entry Unk.Write", span=""];
m21_14 [file="JobCreator.cs", label="HangFire.Web.JsonStats", span=""];
m22_0 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Entry HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", span="8-8"];
m22_1 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", color=red, community=0, file="JobEnqueuedContext.cs", label="2: JobDescriptor = jobDescriptor", span="15-15"];
m22_2 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Canceled = canceled", span="16-16"];
m22_3 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Exception = exception", span="17-17"];
m22_4 [cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="JobEnqueuedContext.cs", label="Exit HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", span="8-8"];
m22_5 [file="JobEnqueuedContext.cs", label="HangFire.Filters.JobEnqueuedContext", span=""];
m23_0 [cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="JobEnqueueingContext.cs", label="Entry HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6"];
m23_1 [cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="JobEnqueueingContext.cs", label="2: JobDescriptor = jobDescriptor", span="11-11"];
m23_2 [cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="JobEnqueueingContext.cs", label="Exit HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6"];
m23_3 [file="JobEnqueueingContext.cs", label="HangFire.Filters.JobEnqueueingContext", span=""];
m24_32 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="232-232"];
m24_35 [cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="245-245"];
m24_34 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="250-250"];
m24_78 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
m24_30 [cluster="System.TimeSpan.FromMilliseconds(double)", file="JobFetcher.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m24_54 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="130-130"];
m24_55 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="JobFetcher.cs", label=_lockObject, span="132-132"];
m24_56 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="JobFetcher.cs", label="_connection?.Execute(''SELECT 1;'')", span="136-136"];
m24_57 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", file="JobFetcher.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="130-130"];
m24_53 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="183-183"];
m24_80 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="var parameters = new DynamicParameters()", span="185-185"];
m24_81 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="parameters.Add(''@Resource'', resource)", span="186-186"];
m24_84 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="190-193"];
m24_87 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="throw new SqlServerDistributedLockException(\r\n                    $''Could not release a lock on the resource '{resource}': Server returned the '{releaseResult}' error.'');", span="199-200"];
m24_82 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="187-187"];
m24_83 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="188-188"];
m24_85 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="var releaseResult = parameters.Get<int>(''@Result'')", span="195-195"];
m24_86 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="releaseResult < 0", span="197-197"];
m24_88 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="JobFetcher.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="183-183"];
m24_79 [cluster="Unk.ContainsKey", file="JobFetcher.cs", label="Entry Unk.ContainsKey", span=""];
m24_14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="_resource = resource", span="68-68"];
m24_15 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="!AcquiredLocks.Value.ContainsKey(_resource) || AcquiredLocks.Value[_resource] == 0", span="70-70"];
m24_18 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label=Exception, span="78-78"];
m24_19 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="storage.ReleaseConnection(_connection)", span="80-80"];
m24_31 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m24_76 [cluster="Unk.>", file="JobFetcher.cs", label="Entry Unk.>", span=""];
m24_5 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="storage == null", span="60-60"];
m24_27 [cluster="Unk.nameof", file="JobFetcher.cs", label="Entry Unk.nameof", span=""];
m24_74 [cluster="DynamicParameters.cstr", file="JobFetcher.cs", label="Entry DynamicParameters.cstr", span=""];
m24_75 [cluster="Unk.Add", file="JobFetcher.cs", label="Entry Unk.Add", span=""];
m24_4 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcher.cs", label="Exit HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="14-14"];
m24_6 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", file="JobFetcher.cs", label="Entry HangFire.Server.JobFetcher.DequeueJobId()", span="23-23"];
m24_7 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", color=green, community=0, file="JobFetcher.cs", label="2: var jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                    String.Format(''hangfire:queue:{0}'', _queues[_currentQueueIndex]),\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', _queues[_currentQueueIndex]),\r\n                    _fetchTimeout)", span="25-28"];
m24_8 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", color=green, community=0, file="JobFetcher.cs", label="0: _currentQueueIndex = (_currentQueueIndex + 1) % _queues.Count", span="30-30"];
m24_9 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", file="JobFetcher.cs", label="String.IsNullOrEmpty(jobId)", span="32-32"];
m24_13 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", file="JobFetcher.cs", label="Exit HangFire.Server.JobFetcher.DequeueJobId()", span="23-23"];
m24_16 [cluster="Unk.IsNullOrEmpty", file="JobFetcher.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m24_10 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", color=green, community=0, file="JobFetcher.cs", label="0: return null;", span="34-34"];
m24_11 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", color=green, community=0, file="JobFetcher.cs", label="2: _redis.SetEntry(\r\n                String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="52-54"];
m24_12 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", file="JobFetcher.cs", label="return jobId;", span="60-60"];
m24_17 [cluster="Unk.Format", file="JobFetcher.cs", label="Entry Unk.Format", span=""];
m24_24 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="AcquiredLocks.Value[_resource]++", span="93-93"];
m24_21 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="!_storage.IsExistingConnection(_connection)", span="84-84"];
m24_20 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="HangFire.Server.JobFetcher", span=""];
m24_22 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="_timer = new Timer(ExecuteKeepAliveQuery, null, KeepAliveInterval, KeepAliveInterval)", span="86-86"];
m24_23 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="AcquiredLocks.Value[_resource] = 1", span="89-89"];
m24_25 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobFetcher.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="58-58"];
m24_3 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcher.cs", label="_fetchTimeout = fetchTimeout ?? TimeSpan.FromSeconds(5)", span="20-20"];
m24_36 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="JobFetcher.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0"];
m24_28 [cluster="string.IsNullOrEmpty(string)", file="JobFetcher.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m24_0 [cluster="lambda expression", file="JobFetcher.cs", label="Entry lambda expression", span="48-48"];
m24_1 [cluster="lambda expression", color=green, community=0, file="JobFetcher.cs", label="2: new Dictionary<string, int>()", span="48-48"];
m24_2 [cluster="lambda expression", color=green, community=0, file="JobFetcher.cs", label="1: Exit lambda expression", span="48-48"];
m24_33 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="150-150"];
m24_59 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="var parameters = new DynamicParameters()", span="152-152"];
m24_60 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="parameters.Add(''@Resource'', resource)", span="153-153"];
m24_64 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="parameters.Add(''@LockTimeout'', (int)timeout.TotalMilliseconds)", span="157-157"];
m24_67 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="connection.Execute(\r\n                @''sp_getapplock'',\r\n                parameters,\r\n                commandTimeout: commandTimeout,\r\n                commandType: CommandType.StoredProcedure)", span="163-167"];
m24_71 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="throw new DistributedLockTimeoutException(resource);", span="175-175"];
m24_72 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="throw new SqlServerDistributedLockException(\r\n                    $''Could not place a lock on the resource '{resource}': {(LockErrorMessages.ContainsKey(lockResult) ? LockErrorMessages[lockResult] : $''Server returned the '{lockResult}' error.'')}.'');", span="178-179"];
m24_61 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="parameters.Add(''@DbPrincipal'', ''public'')", span="154-154"];
m24_62 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="parameters.Add(''@LockMode'', LockMode)", span="155-155"];
m24_63 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="156-156"];
m24_65 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="158-158"];
m24_68 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="var lockResult = parameters.Get<int>(''@Result'')", span="169-169"];
m24_66 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="var commandTimeout = (int)(timeout.TotalSeconds + CommandTimeoutAdditionSeconds)", span="161-161"];
m24_69 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="lockResult < 0", span="171-171"];
m24_70 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="lockResult == -1", span="173-173"];
m24_73 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="JobFetcher.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="150-150"];
m24_77 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="JobFetcher.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m24_52 [cluster="System.Threading.Timer.Dispose()", file="JobFetcher.cs", label="Entry System.Threading.Timer.Dispose()", span="0-0"];
m24_29 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JobFetcher.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m24_58 [cluster="Unk.Execute", file="JobFetcher.cs", label="Entry Unk.Execute", span=""];
m24_51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m24_37 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="97-97"];
m24_38 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label=_completed, span="99-99"];
m24_39 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="return;", span="99-99"];
m24_40 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="_completed = true", span="101-101"];
m24_41 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="103-103"];
m24_42 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="return;", span="103-103"];
m24_43 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="AcquiredLocks.Value[_resource]--", span="105-105"];
m24_44 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="AcquiredLocks.Value[_resource] != 0", span="107-107"];
m24_45 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="return;", span="107-107"];
m24_46 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label=_lockObject, span="109-109"];
m24_47 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="AcquiredLocks.Value.Remove(_resource)", span="116-116"];
m24_48 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="_timer?.Dispose()", span="118-118"];
m24_49 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="Release(_connection, _resource)", span="120-120"];
m24_50 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobFetcher.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="97-97"];
m24_89 [file="JobFetcher.cs", label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
m25_56 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121"];
m25_25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''                        <span title=\''Job\'s state has been changed while fetching '' +\r\n''data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="179-180"];
m25_29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="4: Write(job.Value.ScheduledAt)", span="205-205"];
m25_61 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns null'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131"];
m25_21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="1: WriteLiteral(''\''>\r\n                        '')", span="158-158"];
m25_59 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127"];
m25_55 [cluster="Unk.Write", file="JobFetcher.feature.cs", label="Entry Unk.Write", span=""];
m25_57 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobFetcher.feature.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m25_58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFetcher.feature.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m25_60 [cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", file="JobFetcher.feature.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45"];
m25_62 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobFetcher.feature.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m25_63 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m25_41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''                </td>\r\n            </tr>\r\n'')", span="273-273"];
m25_54 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="JobFetcher.feature.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m25_49 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m25_5 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m25_47 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m25_45 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98"];
m25_48 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m25_26 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''                </td>\r\n                <td data-moment=\'''')", span="190-190"];
m25_27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="1: Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt))", span="195-195"];
m25_28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''\''>'')", span="200-200"];
m25_0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m25_1 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''\r\n'')", span="51-51"];
m25_2 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62"];
m25_3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="int from, perPage", span="64-64"];
m25_4 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m25_64 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="140-140"];
m25_65 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="142-142"];
m25_66 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="144-144"];
m25_67 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146"];
m25_68 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148"];
m25_69 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="150-150"];
m25_70 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns null'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="152-152"];
m25_71 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="154-154"];
m25_72 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="140-140"];
m25_9 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="pager = new Pager(from, perPage, monitor.ScheduledCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/scheduled'')\r\n        }", span="74-77"];
m25_10 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-79"];
m25_11 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''\r\n'')", span="86-86"];
m25_12 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="pager.TotalPageCount == 0", span="91-91"];
m25_13 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        There are no scheduled jobs.\r\n    </d'' +\r\n''iv>\r\n'')", span="97-98"];
m25_7 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="JobList<ScheduleDto> scheduledJobs", span="70-70"];
m25_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="JobFetcher.feature.cs", label="WriteLiteral(''    </table>\r\n'')", span="283-283"];
m25_30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="0: WriteLiteral(''</td>\r\n                <td>\r\n                    '')", span="210-210"];
m25_31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="4: Write(HtmlHelper.QueueLabel(job.Value.Method))", span="215-215"];
m25_32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="1: WriteLiteral(''\r\n                    <span title=\'''')", span="220-220"];
m25_33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="1: Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", span="225-225"];
m25_34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="2: WriteLiteral(''\''>\r\n                        '')", span="230-230"];
m25_35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="0: Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="235-235"];
m25_36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="0: WriteLiteral(''\r\n                    </span>\r\n                </td>\r\n                <td>\r\n'')", span="240-240"];
m25_37 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="0: job.Value.InScheduledState", span="245-245"];
m25_38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="JobFetcher.feature.cs", label="4: WriteLiteral(''                        <button class=\''btn btn-default btn-sm\'' data-ajax=\'''')", span="251-251"];
m25_17 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", color=green, community=0, file="JobFetcher.feature.cs", label="0: Exit HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m25_16 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="HangFire.Tests.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m25_18 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", color=green, community=0, file="JobFetcher.feature.cs", label="6: Entry HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m25_19 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", color=green, community=0, file="JobFetcher.feature.cs", label="2: testRunner.OnScenarioEnd()", span="58-58"];
m25_20 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", color=green, community=0, file="JobFetcher.feature.cs", label="1: Exit HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m25_22 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m25_24 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m25_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", color=green, community=0, file="JobFetcher.feature.cs", label="0: Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m25_40 [cluster="Unk.Given", color=green, community=0, file="JobFetcher.feature.cs", label="2: Entry Unk.Given", span=""];
m25_14 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m25_15 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m25_23 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m25_43 [cluster="Unk.Then", file="JobFetcher.feature.cs", label="Entry Unk.Then", span=""];
m25_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobFetcher.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m25_8 [cluster="Unk.OnFeatureStart", file="JobFetcher.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m25_44 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m25_53 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m25_46 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobFetcher.feature.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m25_50 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="JobFetcher.feature.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
m25_51 [cluster="HttpRequestBase.LinkTo(string)", file="JobFetcher.feature.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m25_52 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="JobFetcher.feature.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
m25_73 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="161-161"];
m25_74 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="163-163"];
m25_75 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="165-165"];
m25_76 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="167-167"];
m25_77 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="169-169"];
m25_78 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="171-171"];
m25_79 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="173-173"];
m25_80 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="175-175"];
m25_81 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="161-161"];
m25_82 [file="JobFetcher.feature.cs", label="HangFire.Tests.JobFetcherFeature", span=""];
m26_9 [cluster="System.TimeSpan.FromSeconds(double)", file="JobFetcherSteps.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m26_10 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=green, community=0, file="JobFetcherSteps.cs", label="3: Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="26-26"];
m26_11 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=red, community=0, file="JobFetcherSteps.cs", label="2: _jobId = _fetcher.DequeueJobId()", span="28-28"];
m26_12 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=green, community=0, file="JobFetcherSteps.cs", label="0: Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="26-26"];
m26_13 [cluster="HangFire.Server.JobFetcher.DequeueJobId()", color=green, community=0, file="JobFetcherSteps.cs", label="2: Entry HangFire.Server.JobFetcher.DequeueJobId()", span="20-20"];
m26_14 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="32-32"];
m26_18 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", color=green, community=0, file="JobFetcherSteps.cs", label="3: _completed", span="36-36"];
m26_19 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", color=green, community=0, file="JobFetcherSteps.cs", label="2: throw new InvalidOperationException(''Job already completed'');", span="36-36"];
m26_20 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", color=green, community=0, file="JobFetcherSteps.cs", label="0: _channel.BasicNack(_message.DeliveryTag, false, true)", span="37-37"];
m26_8 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcherSteps.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", span="12-12"];
m26_3 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobFetcherSteps.cs", label="_message = message", span="19-19"];
m26_25 [cluster="Unk.Close", file="JobFetcherSteps.cs", label="Entry Unk.Close", span=""];
m26_0 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobFetcherSteps.cs", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
m26_1 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobFetcherSteps.cs", label="message == null", span="17-17"];
m26_2 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="JobFetcherSteps.cs", label="throw new ArgumentNullException(''message'');", span="17-17"];
m26_17 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobFetcherSteps.cs", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
m26_21 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", color=green, community=0, file="JobFetcherSteps.cs", label="0: _channel.Close(global::RabbitMQ.Client.Framing.v0_9_1.Constants.ReplySuccess, ''Requeue'')", span="38-38"];
m26_4 [cluster="Unk.Given", file="JobFetcherSteps.cs", label="Entry Unk.Given", span=""];
m26_5 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="20-20"];
m26_6 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", color=red, community=0, file="JobFetcherSteps.cs", label="0: _fetcher = new JobFetcher(Redis.Client, queue, TimeSpan.FromSeconds(1))", span="22-22"];
m26_15 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=red, community=0, file="JobFetcherSteps.cs", label="0: Assert.AreEqual(JobSteps.DefaultJobId, _jobId)", span="34-34"];
m26_7 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="20-20"];
m26_24 [cluster="Unk.BasicNack", file="JobFetcherSteps.cs", label="Entry Unk.BasicNack", span=""];
m26_16 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="32-32"];
m26_22 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", color=green, community=0, file="JobFetcherSteps.cs", label="2: HangFire.Tests.JobFetcherSteps", span=""];
m26_23 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="JobFetcherSteps.cs", label="Exit HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
m26_26 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobFetcherSteps.cs", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
m26_27 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", color=green, community=0, file="JobFetcherSteps.cs", label="2: !_completed && !_disposed", span="45-45"];
m26_28 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", color=green, community=0, file="JobFetcherSteps.cs", label="0: Requeue()", span="47-47"];
m26_29 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobFetcherSteps.cs", label="_disposed = true", span="50-50"];
m26_30 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="JobFetcherSteps.cs", label="Exit HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
m26_31 [file="JobFetcherSteps.cs", label="HangFire.RabbitMQ.RabbitMqFetchedJob", span=""];
m27_8 [cluster="System.TimeSpan.FromSeconds(double)", file="JobFilter.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m27_9 [cluster="System.TimeSpan.FromMinutes(double)", file="JobFilter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m27_10 [cluster="System.TimeSpan.FromHours(double)", file="JobFilter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m27_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m27_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="TransactionIsolationLevel = null", span="27-27"];
m27_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28"];
m27_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29"];
m27_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30"];
m27_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31"];
m27_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="PrepareSchemaIfNecessary = true", span="32-32"];
m27_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobFilter.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m27_11 [file="JobFilter.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m28_0 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m28_1 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Performed = true", span="185-185"];
m28_2 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m28_7 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m28_8 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m28_3 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m28_4 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="A = a", span="196-196"];
m28_5 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="B = b", span="197-197"];
m28_6 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m28_9 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m28_10 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Disposed = true", span="211-211"];
m28_11 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m28_12 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.CorrectJob", span=""];
m28_13 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span=""];
m28_14 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.DisposableJob", span=""];
m30_19 [cluster="Unk.>", file="JobPerformedContext.cs", label="Entry Unk.>", span=""];
m30_0 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="Entry Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", span="29-29"];
m30_1 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services == null", span="33-33"];
m30_2 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="throw new ArgumentNullException(nameof(services));", span="33-33"];
m30_3 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="configuration == null", span="34-34"];
m30_4 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="throw new ArgumentNullException(nameof(configuration));", span="34-34"];
m30_5 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton(_ => JobStorage.Current)", span="36-36"];
m30_6 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton(_ => JobActivator.Current)", span="37-37"];
m30_7 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton(_ => DashboardRoutes.Routes)", span="38-38"];
m30_8 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton<IJobFilterProvider>(_ => GlobalJobFilters.Filters)", span="39-39"];
m30_9 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton<IBackgroundJobFactory, BackgroundJobFactory>()", span="41-41"];
m30_10 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton<IBackgroundJobStateChanger, BackgroundJobStateChanger>()", span="42-42"];
m30_11 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton<IBackgroundJobClient, BackgroundJobClient>()", span="43-43"];
m30_12 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton(typeof(HangfireMarkerService))", span="45-45"];
m30_13 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="services.TryAddSingleton(_ => configuration)", span="46-46"];
m30_14 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="return services;", span="48-48"];
m30_15 [cluster="Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", file="JobPerformedContext.cs", label="Exit Hangfire.HangfireServiceCollectionExtensions.AddHangfire(IServiceCollection, System.Action<Hangfire.IGlobalConfiguration>)", span="29-29"];
m30_18 [cluster="Unk.TryAddSingleton", file="JobPerformedContext.cs", label="Entry Unk.TryAddSingleton", span=""];
m30_17 [cluster="Unk.nameof", file="JobPerformedContext.cs", label="Entry Unk.nameof", span=""];
m30_32 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="46-46"];
m30_33 [cluster="lambda expression", file="JobPerformedContext.cs", label=configuration, span="46-46"];
m30_20 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="36-36"];
m30_23 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="37-37"];
m30_26 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="38-38"];
m30_29 [cluster="lambda expression", file="JobPerformedContext.cs", label="Entry lambda expression", span="39-39"];
m30_21 [cluster="lambda expression", file="JobPerformedContext.cs", label="JobStorage.Current", span="36-36"];
m30_22 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="36-36"];
m30_24 [cluster="lambda expression", file="JobPerformedContext.cs", label="JobActivator.Current", span="37-37"];
m30_25 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="37-37"];
m30_27 [cluster="lambda expression", file="JobPerformedContext.cs", label="DashboardRoutes.Routes", span="38-38"];
m30_28 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="38-38"];
m30_30 [cluster="lambda expression", file="JobPerformedContext.cs", label="GlobalJobFilters.Filters", span="39-39"];
m30_31 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="39-39"];
m30_34 [cluster="lambda expression", file="JobPerformedContext.cs", label="Exit lambda expression", span="46-46"];
m30_35 [file="JobPerformedContext.cs", label="System.Action<Hangfire.IGlobalConfiguration>", span=""];
m31_89 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m31_90 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="JobPerformer.cs", label="AddToSet(key, value, 0.0)", span="157-157"];
m31_91 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m31_105 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181"];
m31_106 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="183-185"];
m31_107 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181"];
m31_92 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160"];
m31_94 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="169-171"];
m31_93 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="JobPerformer.cs", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="162-167"];
m31_95 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160"];
m31_71 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134"];
m31_72 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="136-138"];
m31_73 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134"];
m31_126 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="JobPerformer.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m31_47 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101"];
m31_48 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", color=green, community=0, file="JobPerformer.cs", label="0: string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="103-105"];
m31_49 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", color=green, community=0, file="JobPerformer.cs", label="0: QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="107-116"];
m31_50 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101"];
m31_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m31_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="JobPerformer.cs", label="0: connection == null", span="39-39"];
m31_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="JobPerformer.cs", label="0: throw new ArgumentNullException(''connection'');", span="39-39"];
m31_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="JobPerformer.cs", label="0: queueProviders == null", span="40-40"];
m31_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="JobPerformer.cs", label="0: throw new ArgumentNullException(''queueProviders'');", span="40-40"];
m31_5 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="JobPerformer.cs", label="2: _connection = connection", span="42-42"];
m31_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", color=green, community=0, file="JobPerformer.cs", label="2: _queueProviders = queueProviders", span="43-43"];
m31_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m31_117 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195"];
m31_119 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="202-204"];
m31_118 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="JobPerformer.cs", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="197-200"];
m31_120 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195"];
m31_26 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207"];
m31_124 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="JobPerformer.cs", label="_commandQueue.Enqueue(action)", span="209-209"];
m31_125 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207"];
m31_45 [cluster="HangFire.States.IState.SerializeData()", file="JobPerformer.cs", label="Entry HangFire.States.IState.SerializeData()", span="27-27"];
m31_20 [cluster="Unk.EnlistTransaction", file="JobPerformer.cs", label="Entry Unk.EnlistTransaction", span=""];
m31_21 [cluster="System.Action<T>.Invoke(T)", file="JobPerformer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m31_18 [cluster="TransactionScope.cstr", file="JobPerformer.cs", label="Entry TransactionScope.cstr", span=""];
m31_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81"];
m31_39 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", color=green, community=0, file="JobPerformer.cs", label="0: string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="83-86"];
m31_40 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", color=green, community=0, file="JobPerformer.cs", label="0: QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="88-98"];
m31_41 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81"];
m31_77 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141"];
m31_78 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="143-145"];
m31_79 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141"];
m31_83 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148"];
m31_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="150-152"];
m31_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148"];
m31_22 [cluster="Unk.Complete", file="JobPerformer.cs", label="Entry Unk.Complete", span=""];
m31_30 [cluster="System.DateTime.Add(System.TimeSpan)", file="JobPerformer.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m31_64 [cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24"];
m31_99 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174"];
m31_100 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="176-178"];
m31_101 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174"];
m31_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67"];
m31_24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=green, community=0, file="JobPerformer.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="69-71"];
m31_25 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67"];
m31_111 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188"];
m31_112 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="190-192"];
m31_113 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188"];
m31_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50"];
m31_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="JobPerformer.cs", label="0: var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="52-54"];
m31_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="JobPerformer.cs", label="0: _connection.EnlistTransaction(Transaction.Current)", span="56-56"];
m31_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="JobPerformer.cs", label="0: transaction.Complete()", span="63-63"];
m31_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="JobPerformer.cs", label="0: _commandQueue", span="58-58"];
m31_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="JobPerformer.cs", label="0: command(_connection)", span="60-60"];
m31_17 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50"];
m31_59 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m31_19 [cluster="TransactionOptions.cstr", file="JobPerformer.cs", label="Entry TransactionOptions.cstr", span=""];
m31_121 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="202-204"];
m31_27 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="69-71"];
m31_28 [cluster="lambda expression", color=green, community=0, file="JobPerformer.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="69-71"];
m31_29 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="69-71"];
m31_35 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="76-78"];
m31_36 [cluster="lambda expression", color=green, community=0, file="JobPerformer.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="76-78"];
m31_37 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="76-78"];
m31_43 [cluster="lambda expression", color=green, community=0, file="JobPerformer.cs", label="0: x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="88-98"];
m31_42 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="88-98"];
m31_44 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="88-98"];
m31_52 [cluster="lambda expression", color=green, community=0, file="JobPerformer.cs", label="0: x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="107-116"];
m31_51 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="107-116"];
m31_53 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="107-116"];
m31_75 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="136-138"];
m31_87 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="150-152"];
m31_69 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="129-131"];
m31_81 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="143-145"];
m31_97 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="169-171"];
m31_103 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="176-178"];
m31_109 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="183-185"];
m31_115 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="190-192"];
m31_122 [cluster="lambda expression", file="JobPerformer.cs", label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="202-204"];
m31_62 [cluster="lambda expression", file="JobPerformer.cs", label="persistentQueue.Enqueue(queue, jobId)", span="124-124"];
m31_61 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="124-124"];
m31_68 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="129-131"];
m31_74 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="136-138"];
m31_80 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="143-145"];
m31_86 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="150-152"];
m31_96 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="169-171"];
m31_102 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="176-178"];
m31_108 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="183-185"];
m31_114 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="190-192"];
m31_76 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="136-138"];
m31_88 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="150-152"];
m31_70 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="129-131"];
m31_82 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="143-145"];
m31_98 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="169-171"];
m31_104 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="176-178"];
m31_110 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="183-185"];
m31_116 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="190-192"];
m31_123 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="202-204"];
m31_63 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="124-124"];
m31_46 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobPerformer.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m31_31 [cluster="Unk.Execute", file="JobPerformer.cs", label="Entry Unk.Execute", span=""];
m31_54 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119"];
m31_55 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="JobPerformer.cs", label="var provider = _queueProviders.GetProvider(queue)", span="121-121"];
m31_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="JobPerformer.cs", label="var persistentQueue = provider.GetJobQueue(_connection)", span="122-122"];
m31_57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="JobPerformer.cs", label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="124-124"];
m31_58 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119"];
m31_60 [cluster="Unk.GetJobQueue", file="JobPerformer.cs", label="Entry Unk.GetJobQueue", span=""];
m31_65 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127"];
m31_66 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="JobPerformer.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="129-131"];
m31_67 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127"];
m31_32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="JobPerformer.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74"];
m31_33 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", color=green, community=0, file="JobPerformer.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="76-78"];
m31_34 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="JobPerformer.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74"];
m31_127 [file="JobPerformer.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m31_128 [file="JobPerformer.cs", label=string, span=""];
m31_129 [file="JobPerformer.cs", label="System.TimeSpan", span=""];
m31_130 [file="JobPerformer.cs", label=string, span=""];
m31_131 [file="JobPerformer.cs", label=string, span=""];
m31_132 [file="JobPerformer.cs", label="HangFire.States.IState", span=""];
m31_133 [file="JobPerformer.cs", label=addAndSetStateSql, span=""];
m31_134 [file="JobPerformer.cs", label=string, span=""];
m31_135 [file="JobPerformer.cs", label="HangFire.States.IState", span=""];
m31_136 [file="JobPerformer.cs", label=addStateSql, span=""];
m31_141 [file="JobPerformer.cs", label=string, span=""];
m31_142 [file="JobPerformer.cs", label="System.TimeSpan", span=""];
m31_144 [file="JobPerformer.cs", label=string, span=""];
m31_145 [file="JobPerformer.cs", label="System.TimeSpan", span=""];
m31_140 [file="JobPerformer.cs", label=string, span=""];
m31_143 [file="JobPerformer.cs", label=string, span=""];
m31_146 [file="JobPerformer.cs", label=string, span=""];
m31_147 [file="JobPerformer.cs", label=string, span=""];
m31_148 [file="JobPerformer.cs", label=double, span=""];
m31_149 [file="JobPerformer.cs", label=addSql, span=""];
m31_150 [file="JobPerformer.cs", label=string, span=""];
m31_151 [file="JobPerformer.cs", label=string, span=""];
m31_152 [file="JobPerformer.cs", label=string, span=""];
m31_153 [file="JobPerformer.cs", label=string, span=""];
m31_154 [file="JobPerformer.cs", label=string, span=""];
m31_155 [file="JobPerformer.cs", label=string, span=""];
m31_156 [file="JobPerformer.cs", label=string, span=""];
m31_157 [file="JobPerformer.cs", label=int, span=""];
m31_158 [file="JobPerformer.cs", label=int, span=""];
m31_159 [file="JobPerformer.cs", label=trimSql, span=""];
m31_137 [file="JobPerformer.cs", label=string, span=""];
m31_138 [file="JobPerformer.cs", label=string, span=""];
m31_139 [file="JobPerformer.cs", label=persistentQueue, span=""];
m32_0 [cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="JobPerformingContext.cs", label="Entry HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="6-6"];
m32_1 [cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", color=red, community=0, file="JobPerformingContext.cs", label="2: JobDescriptor = jobDescriptor", span="11-11"];
m32_2 [cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="JobPerformingContext.cs", label="Exit HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="6-6"];
m32_3 [file="JobPerformingContext.cs", label="HangFire.Filters.JobPerformingContext", span=""];
m33_4 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="JobServer.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="13-13"];
m33_7 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", file="JobServer.cs", label="Monitor.Enter(GlobalLock)", span="22-22"];
m33_6 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", file="JobServer.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", span="20-20"];
m33_5 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="JobServer.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", span="32-32"];
m33_13 [cluster="System.Threading.Monitor.Enter(object)", file="JobServer.cs", label="Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m33_17 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.After(System.Reflection.MethodInfo)", file="JobServer.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.After(System.Reflection.MethodInfo)", span="31-31"];
m33_18 [cluster="lambda expression", color=green, community=0, file="JobServer.cs", label="5: Entry lambda expression", span="35-38"];
m33_19 [cluster="lambda expression", color=red, community=0, file="JobServer.cs", label="0: con.HostName = HostName", span="37-37"];
m33_8 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="JobServer.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m33_9 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="JobServer.cs", label="var provider = CreateProvider()", span="25-25"];
m33_10 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="JobServer.cs", label="var monitoring = provider.GetJobQueueMonitoringApi(null)", span="27-27"];
m33_11 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="JobServer.cs", label="Assert.NotNull(monitoring)", span="29-29"];
m33_12 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="JobServer.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m33_20 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="35-38"];
m33_15 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="JobServer.cs", label="return new RabbitMqJobQueueProvider(Queue, configuration);", span="40-40"];
m33_14 [cluster="Unk.QueueDeclare", color=red, community=0, file="JobServer.cs", label="0: Entry Unk.QueueDeclare", span=""];
m33_16 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="JobServer.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", span="82-82"];
m33_0 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", file="JobServer.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", span="14-14"];
m33_1 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", color=green, community=0, file="JobServer.cs", label="2: _queues = queues", span="16-16"];
m33_2 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", file="JobServer.cs", label="_rabbitMq = new RabbitMqChannel(_queues).CreateQueue()", span="17-17"];
m33_3 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", file="JobServer.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", span="14-14"];
m33_21 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", file="JobServer.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", span="36-36"];
m33_22 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", color=green, community=0, file="JobServer.cs", label="0: return new RabbitMqChannel(queue).CreateQueue();", span="38-38"];
m33_23 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", file="JobServer.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", span="36-36"];
m33_24 [file="JobServer.cs", label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", span=""];
m34_15 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="JobState.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="49-49"];
m34_16 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="JobState.cs", label="return new RedisStorageConnection(this, _pooledManager.GetClient());", span="51-51"];
m34_17 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="JobState.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="49-49"];
m34_9 [cluster="RedisClientManagerConfig.cstr", file="JobState.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m34_14 [cluster="Unk.GetClient", file="JobState.cs", label="Entry Unk.GetClient", span=""];
m34_25 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="JobState.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m34_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="JobState.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="21-21"];
m34_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="JobState.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="21-21"];
m34_19 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobState.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="54-54"];
m34_20 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobState.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="56-56"];
m34_21 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobState.cs", label="yield return new DequeuedJobsWatcher(this);", span="57-57"];
m34_22 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobState.cs", label="yield return new ServerWatchdog(this);", span="58-58"];
m34_23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobState.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="54-54"];
m34_24 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="JobState.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m34_26 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="JobState.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m34_27 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobState.cs", label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="61-61"];
m34_28 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobState.cs", label="yield return new FailedStateHandler();", span="63-63"];
m34_29 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobState.cs", label="yield return new ProcessingStateHandler();", span="64-64"];
m34_30 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobState.cs", label="yield return new SucceededStateHandler();", span="65-65"];
m34_31 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobState.cs", label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="61-61"];
m34_8 [cluster="PooledRedisClientManager.cstr", file="JobState.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m34_38 [cluster="string.Format(string, object, object)", file="JobState.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m34_13 [cluster="RedisMonitoringApi.cstr", file="JobState.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m34_35 [cluster="HangFire.Redis.RedisStorage.ToString()", file="JobState.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="68-68"];
m34_36 [cluster="HangFire.Redis.RedisStorage.ToString()", file="JobState.cs", label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="70-70"];
m34_37 [cluster="HangFire.Redis.RedisStorage.ToString()", file="JobState.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="68-68"];
m34_18 [cluster="RedisStorageConnection.cstr", file="JobState.cs", label="Entry RedisStorageConnection.cstr", span=""];
m34_34 [cluster="HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", file="JobState.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", span="6-6"];
m34_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobState.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="26-26"];
m34_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobState.cs", label="_host = host", span="28-28"];
m34_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobState.cs", label="_db = db", span="29-29"];
m34_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobState.cs", label="_options = options", span="30-30"];
m34_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobState.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ host },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = db,\r\n                    MaxWritePoolSize = _options.ConnectionPoolSize\r\n                })", span="32-39"];
m34_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobState.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="26-26"];
m34_33 [cluster="HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", file="JobState.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", span="8-8"];
m34_10 [cluster="HangFire.Redis.RedisStorage.CreateMonitoring()", file="JobState.cs", label="Entry HangFire.Redis.RedisStorage.CreateMonitoring()", span="44-44"];
m34_11 [cluster="HangFire.Redis.RedisStorage.CreateMonitoring()", file="JobState.cs", label="return new RedisMonitoringApi(this, _pooledManager.GetClient());", span="46-46"];
m34_12 [cluster="HangFire.Redis.RedisStorage.CreateMonitoring()", file="JobState.cs", label="Exit HangFire.Redis.RedisStorage.CreateMonitoring()", span="44-44"];
m34_32 [cluster="HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", file="JobState.cs", label="Entry HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", span="8-8"];
m34_39 [file="JobState.cs", label="HangFire.Redis.RedisStorage", span=""];
m35_73 [cluster="RecurringJobScheduler.cstr", file="JobSteps.cs", label="Entry RecurringJobScheduler.cstr", span=""];
m35_18 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="46-46"];
m35_5 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_instant.Setup(x => x.NowInstant).Returns(DateTime.UtcNow)", span="36-36"];
m35_6 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="JobSteps.cs", label="2: _instant.Setup(x => x.NextInstant).Returns(_instant.Object.NowInstant)", span="37-37"];
m35_7 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="var timeZone1 = TimeZoneInfo.Local", span="39-39"];
m35_0 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27"];
m35_1 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_context = new BackgroundProcessContextMock()", span="29-29"];
m35_2 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_throttler = new Mock<IThrottler>()", span="31-31"];
m35_122 [cluster="Unk.SetRangeInHash", file="JobSteps.cs", label="Entry Unk.SetRangeInHash", span=""];
m35_19 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="48-51"];
m35_159 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="165-165"];
m35_160 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="JobSteps.cs", label="var time = DateTime.UtcNow", span="167-167"];
m35_161 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="JobSteps.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="168-168"];
m35_164 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="JobSteps.cs", label="_instant.Verify(x => x.GetNextInstants(time))", span="173-173"];
m35_162 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="169-169"];
m35_163 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="171-171"];
m35_165 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="165-165"];
m35_257 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", span="298-298"];
m35_258 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="var nextExecution = DateTime.UtcNow.AddHours(-10)", span="301-301"];
m35_259 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="_recurringJob[''NextExecution''] = JobHelper.SerializeDateTime(nextExecution)", span="302-302"];
m35_264 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="_instant.Verify(x => x.GetNextInstants(\r\n                It.Is<DateTime>(time => time < nextExecution)))", span="312-313"];
m35_260 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="_recurringJob.Remove(''CreatedAt'')", span="303-303"];
m35_261 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="_recurringJob.Remove(''LastExecution'')", span="304-304"];
m35_262 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="306-306"];
m35_263 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="309-309"];
m35_265 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", span="298-298"];
m35_8 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_instantFactory = (schedule, timeZone) => _instant.Object", span="41-41"];
m35_60 [cluster="Unk.GetAllEntriesFromHash", file="JobSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m35_69 [cluster="Unk.Equal", file="JobSteps.cs", label="Entry Unk.Equal", span=""];
m35_170 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="177-177"];
m35_171 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="JobSteps.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="179-180"];
m35_172 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="181-181"];
m35_173 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="184-184"];
m35_174 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="177-177"];
m35_20 [cluster="Mock<IScheduleInstant>.cstr", file="JobSteps.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m35_21 [cluster="Unk.Setup", file="JobSteps.cs", label="Entry Unk.Setup", span=""];
m35_3 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_instant = new Mock<IScheduleInstant>()", span="34-34"];
m35_9 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                { ''TimeZoneId'', timeZone1.Id }\r\n            }", span="43-48"];
m35_10 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="JobSteps.cs", label="0: _connection = new Mock<IStorageConnection>()", span="50-50"];
m35_11 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="51-51"];
m35_111 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="118-118"];
m35_112 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="121-121"];
m35_113 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="124-124"];
m35_114 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="var jobKey = $''recurring-job:{RecurringJobId}''", span="127-127"];
m35_115 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id)))", span="129-132"];
m35_116 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="134-138"];
m35_117 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="140-144"];
m35_118 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="118-118"];
m35_140 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="148-148"];
m35_141 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="JobSteps.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime>())).Returns(Enumerable.Empty<DateTime>)", span="150-150"];
m35_142 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="151-151"];
m35_143 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="153-153"];
m35_144 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="JobSteps.cs", label="_factory.Verify(x => x.Create(It.IsAny<CreateContext>()), Times.Never)", span="155-155"];
m35_145 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="JobSteps.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                $''recurring-job:{RecurringJobId}'',\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value))))", span="157-161"];
m35_146 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="148-148"];
m35_12 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="53-54"];
m35_13 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="JobSteps.cs", label="0: _connection.Setup(x => x.GetAllEntriesFromHash($''recurring-job:{RecurringJobId}''))\r\n                .Returns(_recurringJob)", span="56-57"];
m35_14 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_backgroundJobMock = new BackgroundJobMock()", span="59-59"];
m35_16 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_factory.Setup(x => x.Create(It.IsAny<CreateContext>())).Returns(_backgroundJobMock.Object)", span="62-62"];
m35_74 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="76-76"];
m35_75 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="JobSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_factory.Object, null, _throttler.Object))", span="78-80"];
m35_76 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="JobSteps.cs", label="Assert.Equal(''instantFactory'', exception.ParamName)", span="82-82"];
m35_77 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="76-76"];
m35_93 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="316-316"];
m35_272 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="JobSteps.cs", label="return new RecurringJobScheduler(\r\n                _factory.Object,\r\n                _instantFactory,\r\n                _throttler.Object);", span="318-321"];
m35_273 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="316-316"];
m35_200 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="220-220"];
m35_201 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="JobSteps.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (!timeZoneInfo.Equals(TimeZoneInfo.Utc)) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="223-227"];
m35_202 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="JobSteps.cs", label="_recurringJob.Remove(''TimeZoneId'')", span="228-228"];
m35_203 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="229-229"];
m35_204 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="232-232"];
m35_205 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="220-220"];
m35_34 [cluster="Unk.>", file="JobSteps.cs", label="Entry Unk.>", span=""];
m35_212 [cluster="System.TimeZoneInfo.Equals(System.TimeZoneInfo)", file="JobSteps.cs", label="Entry System.TimeZoneInfo.Equals(System.TimeZoneInfo)", span="0-0"];
m35_192 [cluster="Hangfire.Core.Tests.PlatformHelper.IsRunningOnWindows()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.PlatformHelper.IsRunningOnWindows()", span="10-10"];
m35_193 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="JobSteps.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m35_222 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", span="247-247"];
m35_223 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="JobSteps.cs", label="var createdAt = DateTime.UtcNow.AddHours(-3)", span="250-250"];
m35_224 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="JobSteps.cs", label="_recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(createdAt)", span="251-251"];
m35_227 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="JobSteps.cs", label="_instant.Verify(x => x.GetNextInstants(createdAt), Times.Once)", span="258-258"];
m35_225 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="252-252"];
m35_226 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="255-255"];
m35_228 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", span="247-247"];
m35_29 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9"];
m35_245 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", span="280-280"];
m35_246 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="JobSteps.cs", label="_recurringJob.Remove(''CreatedAt'')", span="283-283"];
m35_247 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="284-284"];
m35_248 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="287-287"];
m35_249 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="JobSteps.cs", label="_connection.Verify(\r\n                x => x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt''))),\r\n                Times.Once)", span="290-294"];
m35_250 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", span="280-280"];
m35_25 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="57-57"];
m35_4 [cluster="Unk.Given", file="JobSteps.cs", label="Entry Unk.Given", span=""];
m35_15 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="_factory = new Mock<IBackgroundJobFactory>()", span="61-61"];
m35_17 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27"];
m35_27 [cluster="Mock<IStorageConnection>.cstr", file="JobSteps.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m35_52 [cluster="Unk.GetConnection", file="JobSteps.cs", label="Entry Unk.GetConnection", span=""];
m35_199 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m35_133 [cluster="Unk.SerializeDateTime", file="JobSteps.cs", label="Entry Unk.SerializeDateTime", span=""];
m35_99 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="106-106"];
m35_100 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="_recurringJob[''Queue''] = ''critical''", span="108-108"];
m35_101 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="109-109"];
m35_102 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="111-111"];
m35_103 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="_factory.Verify(x => x.Create(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical'')))", span="113-114"];
m35_104 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="106-106"];
m35_166 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="JobSteps.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m35_213 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="236-236"];
m35_214 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="JobSteps.cs", label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="238-238"];
m35_215 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="239-239"];
m35_216 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="241-241"];
m35_217 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="JobSteps.cs", label="_factory.Verify(x => x.Create(It.IsAny<CreateContext>()), Times.Never)", span="243-243"];
m35_218 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="236-236"];
m35_88 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="96-96"];
m35_89 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="98-98"];
m35_90 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="100-100"];
m35_91 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="_factory.Verify(x => x.Create(It.IsNotNull<CreateContext>()))", span="102-102"];
m35_92 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="96-96"];
m35_233 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", span="262-262"];
m35_234 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="JobSteps.cs", label="_recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(DateTime.UtcNow)", span="265-265"];
m35_235 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="266-266"];
m35_236 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="269-269"];
m35_237 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="JobSteps.cs", label="_connection.Verify(\r\n                x => x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt''))),\r\n                Times.Never)", span="272-276"];
m35_238 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", span="262-262"];
m35_184 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="201-201"];
m35_185 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="var timeZoneId = PlatformHelper.IsRunningOnWindows() ? ''Hawaiian Standard Time'' : ''Pacific/Honolulu''", span="203-203"];
m35_186 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (timeZoneInfo.Id != timeZoneId) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="205-209"];
m35_187 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(timeZoneId)", span="211-211"];
m35_188 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="212-212"];
m35_189 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="213-213"];
m35_190 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="216-216"];
m35_191 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="201-201"];
m35_26 [cluster="Unk.GetValueFromHash", file="JobSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m35_94 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobSteps.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m35_269 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="313-313"];
m35_31 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="35-35"];
m35_36 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="36-36"];
m35_39 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="37-37"];
m35_45 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="46-46"];
m35_49 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="51-51"];
m35_53 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="53-53"];
m35_57 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="56-56"];
m35_61 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="62-62"];
m35_32 [cluster="lambda expression", file="JobSteps.cs", label="x.GetNextInstants(It.IsAny<DateTime>())", span="35-35"];
m35_33 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="35-35"];
m35_37 [cluster="lambda expression", file="JobSteps.cs", label="x.NowInstant", span="36-36"];
m35_38 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="36-36"];
m35_40 [cluster="lambda expression", file="JobSteps.cs", label="x.NextInstant", span="37-37"];
m35_41 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="37-37"];
m35_42 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="41-41"];
m35_43 [cluster="lambda expression", file="JobSteps.cs", label="_instant.Object", span="41-41"];
m35_44 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="41-41"];
m35_46 [cluster="lambda expression", file="JobSteps.cs", label="Console.WriteLine()", span="46-46"];
m35_47 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="46-46"];
m35_50 [cluster="lambda expression", file="JobSteps.cs", label="x.GetConnection()", span="51-51"];
m35_51 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="51-51"];
m35_54 [cluster="lambda expression", file="JobSteps.cs", label="x.GetAllItemsFromSet(''recurring-jobs'')", span="53-53"];
m35_55 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="53-53"];
m35_58 [cluster="lambda expression", file="JobSteps.cs", label="x.GetAllEntriesFromHash($''recurring-job:{RecurringJobId}'')", span="56-56"];
m35_59 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="56-56"];
m35_62 [cluster="lambda expression", file="JobSteps.cs", label="x.Create(It.IsAny<CreateContext>())", span="62-62"];
m35_63 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="62-62"];
m35_70 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="70-70"];
m35_71 [cluster="lambda expression", file="JobSteps.cs", label="new RecurringJobScheduler(null, _instantFactory, _throttler.Object)", span="70-70"];
m35_72 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="70-70"];
m35_78 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="80-80"];
m35_79 [cluster="lambda expression", file="JobSteps.cs", label="new RecurringJobScheduler(_factory.Object, null, _throttler.Object)", span="80-80"];
m35_80 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="80-80"];
m35_85 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="90-90"];
m35_86 [cluster="lambda expression", file="JobSteps.cs", label="new RecurringJobScheduler(_factory.Object, _instantFactory, null)", span="90-90"];
m35_87 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="90-90"];
m35_96 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="102-102"];
m35_97 [cluster="lambda expression", file="JobSteps.cs", label="x.Create(It.IsNotNull<CreateContext>())", span="102-102"];
m35_98 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="102-102"];
m35_105 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="113-114"];
m35_106 [cluster="lambda expression", file="JobSteps.cs", label="x.Create(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical''))", span="113-114"];
m35_107 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="113-114"];
m35_108 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="114-114"];
m35_109 [cluster="lambda expression", file="JobSteps.cs", label="((EnqueuedState)cc.InitialState).Queue == ''critical''", span="114-114"];
m35_110 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="114-114"];
m35_120 [cluster="lambda expression", file="JobSteps.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id))", span="129-132"];
m35_128 [cluster="lambda expression", file="JobSteps.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="134-138"];
m35_135 [cluster="lambda expression", file="JobSteps.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="140-144"];
m35_119 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="129-132"];
m35_127 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="134-138"];
m35_134 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="140-144"];
m35_121 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="129-132"];
m35_123 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="131-132"];
m35_124 [cluster="lambda expression", file="JobSteps.cs", label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id", span="132-132"];
m35_125 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="131-132"];
m35_129 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="134-138"];
m35_130 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="136-138"];
m35_131 [cluster="lambda expression", file="JobSteps.cs", label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="137-138"];
m35_132 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="136-138"];
m35_136 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="140-144"];
m35_137 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="142-144"];
m35_138 [cluster="lambda expression", file="JobSteps.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="143-144"];
m35_139 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="142-144"];
m35_147 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="150-150"];
m35_150 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="155-155"];
m35_153 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="157-161"];
m35_148 [cluster="lambda expression", file="JobSteps.cs", label="x.GetNextInstants(It.IsAny<DateTime>())", span="150-150"];
m35_149 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="150-150"];
m35_151 [cluster="lambda expression", file="JobSteps.cs", label="x.Create(It.IsAny<CreateContext>())", span="155-155"];
m35_152 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="155-155"];
m35_154 [cluster="lambda expression", file="JobSteps.cs", label="x.SetRangeInHash(\r\n                $''recurring-job:{RecurringJobId}'',\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value)))", span="157-161"];
m35_155 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="157-161"];
m35_156 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="159-161"];
m35_157 [cluster="lambda expression", file="JobSteps.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value)", span="160-161"];
m35_158 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="159-161"];
m35_168 [cluster="lambda expression", file="JobSteps.cs", label="x.GetNextInstants(time)", span="173-173"];
m35_167 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="173-173"];
m35_169 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="173-173"];
m35_175 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="179-179"];
m35_176 [cluster="lambda expression", file="JobSteps.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="179-179"];
m35_177 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="179-179"];
m35_195 [cluster="lambda expression", file="JobSteps.cs", label="timeZoneInfo.Id != timeZoneId", span="207-207"];
m35_194 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="205-209"];
m35_196 [cluster="lambda expression", file="JobSteps.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="207-207"];
m35_197 [cluster="lambda expression", file="JobSteps.cs", label="return _instant.Object;", span="208-208"];
m35_198 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="205-209"];
m35_208 [cluster="lambda expression", file="JobSteps.cs", label="!timeZoneInfo.Equals(TimeZoneInfo.Utc)", span="225-225"];
m35_207 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="223-227"];
m35_209 [cluster="lambda expression", file="JobSteps.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="225-225"];
m35_210 [cluster="lambda expression", file="JobSteps.cs", label="return _instant.Object;", span="226-226"];
m35_211 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="223-227"];
m35_219 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="243-243"];
m35_220 [cluster="lambda expression", file="JobSteps.cs", label="x.Create(It.IsAny<CreateContext>())", span="243-243"];
m35_221 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="243-243"];
m35_231 [cluster="lambda expression", file="JobSteps.cs", label="x.GetNextInstants(createdAt)", span="258-258"];
m35_230 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="258-258"];
m35_232 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="258-258"];
m35_239 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="273-275"];
m35_240 [cluster="lambda expression", file="JobSteps.cs", label="x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt'')))", span="273-275"];
m35_241 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="273-275"];
m35_242 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="275-275"];
m35_243 [cluster="lambda expression", file="JobSteps.cs", label="rj.ContainsKey(''CreatedAt'')", span="275-275"];
m35_244 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="275-275"];
m35_251 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="291-293"];
m35_252 [cluster="lambda expression", file="JobSteps.cs", label="x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt'')))", span="291-293"];
m35_253 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="291-293"];
m35_254 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="293-293"];
m35_255 [cluster="lambda expression", file="JobSteps.cs", label="rj.ContainsKey(''CreatedAt'')", span="293-293"];
m35_256 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="293-293"];
m35_267 [cluster="lambda expression", file="JobSteps.cs", label="x.GetNextInstants(\r\n                It.Is<DateTime>(time => time < nextExecution))", span="312-313"];
m35_270 [cluster="lambda expression", file="JobSteps.cs", label="time < nextExecution", span="313-313"];
m35_266 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="312-313"];
m35_268 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="312-313"];
m35_271 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="313-313"];
m35_35 [cluster="Unk.GetNextInstants", file="JobSteps.cs", label="Entry Unk.GetNextInstants", span=""];
m35_65 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="66-66"];
m35_66 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _instantFactory, _throttler.Object))", span="68-70"];
m35_67 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobSteps.cs", label="Assert.Equal(''factory'', exception.ParamName)", span="72-72"];
m35_68 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="66-66"];
m35_95 [cluster="Unk.Verify", file="JobSteps.cs", label="Entry Unk.Verify", span=""];
m35_229 [cluster="System.DateTime.AddHours(double)", file="JobSteps.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m35_56 [cluster="Unk.GetAllItemsFromSet", file="JobSteps.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m35_64 [cluster="Unk.Create", file="JobSteps.cs", label="Entry Unk.Create", span=""];
m35_183 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobSteps.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31"];
m35_30 [cluster="Mock<IBackgroundJobFactory>.cstr", file="JobSteps.cs", label="Entry Mock<IBackgroundJobFactory>.cstr", span=""];
m35_22 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="57-57"];
m35_81 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="86-86"];
m35_82 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="JobSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_factory.Object, _instantFactory, null))", span="88-90"];
m35_83 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="JobSteps.cs", label="Assert.Equal(''throttler'', exception.ParamName)", span="92-92"];
m35_84 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="86-86"];
m35_178 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="JobSteps.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="188-188"];
m35_179 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="JobSteps.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="191-192"];
m35_180 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="JobSteps.cs", label="var scheduler = CreateScheduler()", span="194-194"];
m35_181 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="JobSteps.cs", label="scheduler.Execute(_context.Object)", span="197-197"];
m35_182 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="JobSteps.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="188-188"];
m35_206 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JobSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m35_48 [cluster="System.Console.WriteLine()", file="JobSteps.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m35_23 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="59-61"];
m35_24 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobSteps.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233"];
m35_126 [cluster="Unk.ContainsKey", file="JobSteps.cs", label="Entry Unk.ContainsKey", span=""];
m35_28 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JobSteps.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m35_274 [file="JobSteps.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m35_275 [file="JobSteps.cs", label=jobKey, span=""];
m35_276 [file="JobSteps.cs", label=time, span=""];
m35_277 [file="JobSteps.cs", label=timeZoneId, span=""];
m35_278 [file="JobSteps.cs", label=createdAt, span=""];
m35_279 [file="JobSteps.cs", label=nextExecution, span=""];
m36_8 [cluster="HangFire.Worker.Perform()", file="PerformContext.cs", label="Entry HangFire.Worker.Perform()", span="9-9"];
m36_6 [cluster="HangFire.JsonHelper.Deserialize<T>(string)", file="PerformContext.cs", label="Entry HangFire.JsonHelper.Deserialize<T>(string)", span="11-11"];
m36_7 [cluster="HangFire.Factory.CreateWorker(System.Type)", file="PerformContext.cs", label="Entry HangFire.Factory.CreateWorker(System.Type)", span="20-20"];
m36_0 [cluster="HangFire.JobProcessor.ProcessJob(string)", file="PerformContext.cs", label="Entry HangFire.JobProcessor.ProcessJob(string)", span="4-4"];
m36_1 [cluster="HangFire.JobProcessor.ProcessJob(string)", color=green, community=0, file="PerformContext.cs", label="2: var job = JsonHelper.Deserialize<Job>(serializedJob)", span="6-6"];
m36_2 [cluster="HangFire.JobProcessor.ProcessJob(string)", color=green, community=0, file="PerformContext.cs", label="2: var worker = Factory.CreateWorker(job.WorkerType)", span="8-8"];
m36_3 [cluster="HangFire.JobProcessor.ProcessJob(string)", color=green, community=0, file="PerformContext.cs", label="2: worker.Args = job.Args", span="10-10"];
m36_4 [cluster="HangFire.JobProcessor.ProcessJob(string)", color=green, community=0, file="PerformContext.cs", label="0: worker.Perform()", span="13-13"];
m36_5 [cluster="HangFire.JobProcessor.ProcessJob(string)", file="PerformContext.cs", label="Exit HangFire.JobProcessor.ProcessJob(string)", span="4-4"];
m37_0 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="PerformedContext.cs", label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6"];
m37_1 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", color=green, community=0, file="PerformedContext.cs", label="2: Canceled = canceled", span="12-12"];
m37_2 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", color=green, community=0, file="PerformedContext.cs", label="2: Exception = exception", span="13-13"];
m37_3 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="PerformedContext.cs", label="Exit HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6"];
m37_4 [file="PerformedContext.cs", label="HangFire.Filters.PerformedContext", span=""];
m38_30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="PerformingContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m38_32 [cluster="System.Collections.Generic.List<T>.List()", file="PerformingContext.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m38_45 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
m38_46 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="PerformingContext.cs", label="_processingServer.Dispose()", span="116-116"];
m38_47 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="PerformingContext.cs", label="Logger.Info(''Hangfire Server stopped.'')", span="117-117"];
m38_48 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
m38_4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
m38_5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
m38_0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
m38_1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
m38_39 [cluster="Unk.Join", file="PerformingContext.cs", label="Entry Unk.Join", span=""];
m38_73 [cluster="Hangfire.BackgroundJobServer.Start()", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="156-156"];
m38_74 [cluster="Hangfire.BackgroundJobServer.Start()", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.Start()", span="156-156"];
m38_31 [cluster="Unk.nameof", file="PerformingContext.cs", label="Entry Unk.nameof", span=""];
m38_37 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="PerformingContext.cs", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="70-70"];
m38_69 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="PerformingContext.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m38_35 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformingContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m38_65 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="PerformingContext.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m38_41 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
m38_70 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="PerformingContext.cs", label="return new BackgroundProcessingServerOptions\r\n            {\r\n                ShutdownTimeout = _options.ShutdownTimeout,\r\n                HeartbeatInterval = _options.HeartbeatInterval,\r\n#pragma warning disable 618\r\n                ServerCheckInterval = _options.ServerWatchdogOptions?.CheckInterval ?? _options.ServerCheckInterval,\r\n                ServerTimeout = _options.ServerWatchdogOptions?.ServerTimeout ?? _options.ServerTimeout,\r\n                ServerName = _options.ServerName\r\n#pragma warning restore 618\r\n            };", span="143-152"];
m38_71 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
m38_75 [cluster="Hangfire.BackgroundJobServer.Stop()", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.Stop()", span="161-161"];
m38_76 [cluster="Hangfire.BackgroundJobServer.Stop()", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.Stop()", span="161-161"];
m38_63 [cluster="Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", file="PerformingContext.cs", label="Entry Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m38_42 [cluster="lambda expression", file="PerformingContext.cs", label="Entry lambda expression", span="103-103"];
m38_43 [cluster="lambda expression", file="PerformingContext.cs", label="''''' + x + '''''", span="103-103"];
m38_44 [cluster="lambda expression", file="PerformingContext.cs", label="Exit lambda expression", span="103-103"];
m38_38 [cluster="Unk.Select", file="PerformingContext.cs", label="Entry Unk.Select", span=""];
m38_34 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="PerformingContext.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m38_36 [cluster="Hangfire.Logging.ILog.Info(string)", file="PerformingContext.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
m38_8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
m38_9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="storage == null", span="80-80"];
m38_10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="throw new ArgumentNullException(nameof(storage));", span="80-80"];
m38_11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="options == null", span="81-81"];
m38_12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="throw new ArgumentNullException(nameof(options));", span="81-81"];
m38_13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="additionalProcesses == null", span="82-82"];
m38_14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="throw new ArgumentNullException(nameof(additionalProcesses));", span="82-82"];
m38_15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="_options = options", span="84-84"];
m38_18 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="processes.AddRange(additionalProcesses)", span="88-88"];
m38_19 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="90-94"];
m38_21 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Logger.Info($''Using job storage: '{storage}''')", span="97-97"];
m38_22 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="storage.WriteOptionsToLog(Logger)", span="99-99"];
m38_24 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Logger.Info($''    Worker count: {options.WorkerCount}'')", span="102-102"];
m38_25 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Logger.Info($''    Listening queues: {String.Join('', '', options.Queues.Select(x => ''''' + x + '''''))}'')", span="103-103"];
m38_26 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Logger.Info($''    Shutdown timeout: {options.ShutdownTimeout}'')", span="104-104"];
m38_27 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Logger.Info($''    Schedule polling interval: {options.SchedulePollingInterval}'')", span="105-105"];
m38_28 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="_processingServer = new BackgroundProcessingServer(\r\n                storage, \r\n                processes, \r\n                properties, \r\n                GetProcessingServerOptions())", span="107-111"];
m38_16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="var processes = new List<IBackgroundProcess>()", span="86-86"];
m38_17 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="processes.AddRange(GetRequiredProcesses())", span="87-87"];
m38_20 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Logger.Info(''Starting Hangfire Server'')", span="96-96"];
m38_23 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Logger.Info(''Using the following options for Hangfire Server:'')", span="101-101"];
m38_29 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
m38_66 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="PerformingContext.cs", label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60"];
m38_72 [cluster="Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", file="PerformingContext.cs", label="Entry Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", span="22-22"];
m38_67 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PerformingContext.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m38_33 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
m38_50 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="var processes = new List<IBackgroundProcess>()", span="122-122"];
m38_51 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="var filterProvider = _options.FilterProvider ?? JobFilterProviders.Providers", span="124-124"];
m38_57 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="processes.Add(new Worker(_options.Queues, performer, stateChanger))", span="132-132"];
m38_59 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="processes.Add(new DelayedJobScheduler(_options.SchedulePollingInterval, stateChanger))", span="135-135"];
m38_60 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="processes.Add(new RecurringJobScheduler(factory))", span="136-136"];
m38_61 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="return processes;", span="138-138"];
m38_52 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="var factory = new BackgroundJobFactory(filterProvider)", span="126-126"];
m38_53 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="var performer = new BackgroundJobPerformer(filterProvider, _options.Activator ?? JobActivator.Current)", span="127-127"];
m38_54 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="var stateChanger = new BackgroundJobStateChanger(filterProvider)", span="128-128"];
m38_55 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="var i = 0", span="130-130"];
m38_56 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="i < _options.WorkerCount", span="130-130"];
m38_58 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="i++", span="130-130"];
m38_62 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
m38_6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
m38_7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
m38_49 [cluster="System.IDisposable.Dispose()", file="PerformingContext.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m38_68 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="PerformingContext.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m38_2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="PerformingContext.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
m38_3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="PerformingContext.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
m38_40 [cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", file="PerformingContext.cs", label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", span="91-91"];
m38_77 [file="PerformingContext.cs", label="Hangfire.BackgroundJobServer", span=""];
m39_24 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="Entry HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="44-44"];
m39_25 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="filterContext == null", span="46-46"];
m39_28 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="filterContext.Items.ContainsKey(''PreviousCulture'')", span="49-49"];
m39_29 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="thread.CurrentCulture = (CultureInfo) filterContext.Items[''PreviousCulture'']", span="51-51"];
m39_30 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="filterContext.Items.ContainsKey(''PreviousUICulture'')", span="53-53"];
m39_31 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="thread.CurrentUICulture = (CultureInfo) filterContext.Items[''PreviousUICulture'']", span="55-55"];
m39_26 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="throw new ArgumentNullException(''filterContext'');", span="46-46"];
m39_27 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="var thread = Thread.CurrentThread", span="48-48"];
m39_32 [cluster="HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="PreserveCultureFilter.cs", label="Exit HangFire.PreserveCultureFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="44-44"];
m39_22 [cluster="string.IsNullOrEmpty(string)", file="PreserveCultureFilter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m39_8 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="Entry HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="20-20"];
m39_9 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="filterContext == null", span="22-22"];
m39_11 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="var cultureName = filterContext.JobDescriptor\r\n                .GetParameter<string>(''CurrentCulture'')", span="24-25"];
m39_12 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="var uiCultureName = filterContext.JobDescriptor\r\n                .GetParameter<string>(''CurrentUICulture'')", span="26-27"];
m39_15 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="filterContext.Items[''PreviousCulture''] = thread.CurrentCulture", span="33-33"];
m39_18 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="filterContext.Items[''PreviousUICulture''] = thread.CurrentUICulture", span="39-39"];
m39_10 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="throw new ArgumentNullException(''filterContext'');", span="22-22"];
m39_14 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="!String.IsNullOrEmpty(cultureName)", span="31-31"];
m39_16 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="thread.CurrentCulture = CultureInfo.GetCultureInfo(cultureName)", span="34-34"];
m39_13 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="var thread = Thread.CurrentThread", span="29-29"];
m39_17 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="!String.IsNullOrEmpty(uiCultureName)", span="37-37"];
m39_19 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="thread.CurrentUICulture = CultureInfo.GetCultureInfo(uiCultureName)", span="40-40"];
m39_20 [cluster="HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="PreserveCultureFilter.cs", label="Exit HangFire.PreserveCultureFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="20-20"];
m39_33 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="PreserveCultureFilter.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m39_23 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="PreserveCultureFilter.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m39_21 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="PreserveCultureFilter.cs", label="Entry HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="68-68"];
m39_0 [cluster="HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="PreserveCultureFilter.cs", label="Entry HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="10-10"];
m39_1 [cluster="HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="PreserveCultureFilter.cs", label="filterContext == null", span="12-12"];
m39_3 [cluster="HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="PreserveCultureFilter.cs", label="filterContext.JobDescriptor.SetParameter(\r\n                ''CurrentCulture'', Thread.CurrentThread.CurrentCulture.Name)", span="14-15"];
m39_4 [cluster="HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="PreserveCultureFilter.cs", label="filterContext.JobDescriptor.SetParameter(\r\n                ''CurrentUICulture'', Thread.CurrentThread.CurrentUICulture.Name)", span="16-17"];
m39_2 [cluster="HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="PreserveCultureFilter.cs", label="throw new ArgumentNullException(''filterContext'');", span="12-12"];
m39_5 [cluster="HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="PreserveCultureFilter.cs", label="Exit HangFire.PreserveCultureFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="10-10"];
m39_7 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="PreserveCultureFilter.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24"];
m40_73 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Program.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="42-42"];
m40_63 [cluster="HangFire.RetryJobsFilter.RetryJobsFilter()", file="Program.cs", label="Entry HangFire.RetryJobsFilter.RetryJobsFilter()", span="6-6"];
m40_20 [cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs", label="Entry ConsoleSample.RecurringJob.Perform()", span="48-48"];
m40_21 [cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs", label="Console.WriteLine(''Performing recurring task...'')", span="50-50"];
m40_22 [cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs", label="Exit ConsoleSample.RecurringJob.Perform()", span="48-48"];
m40_23 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Entry ConsoleSample.Program.Main()", span="56-56"];
m40_24 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="int concurrency = Environment.ProcessorCount * 20", span="58-58"];
m40_25 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="LogManager.LogFactory = new ConsoleLogFactory()", span="59-59"];
m40_31 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="Program.cs", label="0: var server = new BackgroundJobServer { Queue = ''qqq'', WorkersCount = concurrency}", span="68-68"];
m40_26 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="RedisFactory.Port = 6379", span="61-61"];
m40_27 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="RedisFactory.Db = 3", span="62-62"];
m40_28 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="GlobalJobFilters.Filters.Add(new HistoryStatisticsFilter())", span="64-64"];
m40_29 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="GlobalJobFilters.Filters.Add(new RetryJobsFilter())", span="65-65"];
m40_30 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="GlobalJobFilters.Filters.Add(new RecurringJobsFilter())", span="66-66"];
m40_32 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="server.Start()", span="70-70"];
m40_33 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''HangFire Server has been started. Press Ctrl+C to exit...'')", span="72-72"];
m40_34 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var count = 1", span="74-74"];
m40_35 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=true, span="76-76"];
m40_42 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.Async<ConsoleJob>(new { Number = count++ })", span="92-92"];
m40_55 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.In<ConsoleJob>(TimeSpan.FromSeconds(seconds), new { Number = count++ })", span="114-114"];
m40_36 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var command = Console.ReadLine()", span="78-78"];
m40_37 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="80-80"];
m40_38 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="85-85"];
m40_39 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(4))", span="89-89"];
m40_47 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="102-102"];
m40_48 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(6))", span="104-104"];
m40_53 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="111-111"];
m40_54 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var seconds = int.Parse(command.Substring(2))", span="113-113"];
m40_56 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="117-117"];
m40_40 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="90-90"];
m40_41 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="90-90"];
m40_43 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="90-90"];
m40_44 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="94-94"];
m40_45 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="96-96"];
m40_46 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="98-98"];
m40_49 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="105-105"];
m40_50 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="105-105"];
m40_52 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="105-105"];
m40_51 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.Async<ErrorJob>(new { ArticleId = 2, Product = ''Casio Privia PX-850'' })", span="107-107"];
m40_57 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.Async<RecurringJob>()", span="119-119"];
m40_58 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Recurring job added'')", span="120-120"];
m40_59 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Exit ConsoleSample.Program.Main()", span="56-56"];
m40_10 [cluster="System.Exception.Exception()", file="Program.cs", label="Entry System.Exception.Exception()", span="0-0"];
m40_74 [cluster="HangFire.Perform.Async<TJob>()", file="Program.cs", label="Entry HangFire.Perform.Async<TJob>()", span="11-11"];
m40_72 [cluster="HangFire.Perform.Async<TJob>(object)", file="Program.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="18-18"];
m40_19 [cluster="System.IO.FileLoadException.FileLoadException()", file="Program.cs", label="Entry System.IO.FileLoadException.FileLoadException()", span="0-0"];
m40_71 [cluster="int.Parse(string)", file="Program.cs", label="Entry int.Parse(string)", span="0-0"];
m40_11 [cluster="System.TimeSpan.FromSeconds(double)", file="Program.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m40_65 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="Program.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="13-13"];
m40_61 [cluster="HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", file="Program.cs", label="Entry HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", span="6-6"];
m40_0 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Entry ConsoleSample.ConsoleJob.Perform()", span="17-17"];
m40_1 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="int time", span="19-19"];
m40_2 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label=_random, span="20-20"];
m40_3 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="time = _random.Next(10)", span="22-22"];
m40_4 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="time < 5", span="25-25"];
m40_6 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Thread.Sleep(TimeSpan.FromSeconds(5 + time))", span="30-30"];
m40_5 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="throw new Exception();", span="27-27"];
m40_7 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Console.WriteLine(''Finished task: '' + Number)", span="31-31"];
m40_8 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Exit ConsoleSample.ConsoleJob.Perform()", span="17-17"];
m40_12 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="Program.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m40_69 [cluster="string.StartsWith(string, System.StringComparison)", file="Program.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m40_18 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="Program.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m40_64 [cluster="HangFire.RecurringJobsFilter.RecurringJobsFilter()", file="Program.cs", label="Entry HangFire.RecurringJobsFilter.RecurringJobsFilter()", span="18-18"];
m40_67 [cluster="System.Console.ReadLine()", file="Program.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m40_9 [cluster="System.Random.Next(int)", file="Program.cs", label="Entry System.Random.Next(int)", span="0-0"];
m40_68 [cluster="string.Equals(string, System.StringComparison)", file="Program.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m40_66 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="50-50"];
m40_62 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="Program.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m40_13 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m40_14 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="Entry ConsoleSample.ErrorJob.Perform()", span="38-38"];
m40_15 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="Console.WriteLine(''Beginning error task...'')", span="40-40"];
m40_16 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="throw new InvalidOperationException(null, new FileLoadException());", span="41-41"];
m40_17 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="Exit ConsoleSample.ErrorJob.Perform()", span="38-38"];
m40_60 [cluster="ConsoleLogFactory.cstr", file="Program.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m40_70 [cluster="string.Substring(int)", file="Program.cs", label="Entry string.Substring(int)", span="0-0"];
m40_75 [file="Program.cs", label="ConsoleSample.ConsoleJob", span=""];
m41_51 [cluster="HangFire.JobStorage.CreateMonitoring()", file="QueueSteps.cs", label="Entry HangFire.JobStorage.CreateMonitoring()", span="43-43"];
m41_54 [cluster="HangFire.Web.RazorPage.Write(object)", file="QueueSteps.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m41_49 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="QueueSteps.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m41_52 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="QueueSteps.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m41_57 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="QueueSteps.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
m41_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m41_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\r\n'')", span="61-61"];
m41_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74"];
m41_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76"];
m41_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="var monitor = JobStorage.Current.CreateMonitoring()", span="78-78"];
m41_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="queues = monitor.Queues()", span="80-80"];
m41_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\r\n'')", span="87-87"];
m41_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="queues.Count == 0", span="92-92"];
m41_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label=queues, span="126-126"];
m41_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="98-99"];
m41_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121"];
m41_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133"];
m41_47 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="370-370"];
m41_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138"];
m41_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(queue.Name)", span="148-148"];
m41_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(queue.Length)", span="159-159"];
m41_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(Request.LinkTo(''/queues/dequeued/'' + queue.Name))", span="169-169"];
m41_20 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(queue.Dequeued)", span="179-179"];
m41_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="queue.FirstJobs.Count == 0", span="195-195"];
m41_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="queue.FirstJobs", span="227-227"];
m41_13 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\''>\r\n                            '')", span="143-143"];
m41_15 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="153-154"];
m41_17 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''</td>\r\n                    <td>\r\n                        <a href=\'''')", span="164-164"];
m41_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\''>\r\n                            '')", span="174-174"];
m41_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''    \r\n                        </a>\r\n                    </td>\r\n                  '' +\r\n''  <td>'')", span="187-188"];
m41_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                        <em>No jobs queued.</em>\r\n'')", span="201-201"];
m41_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(@''                        <table class=''''table table-condensed table-bordered table-inner''''>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Job type</th>\r\n                                    <th>Enqueued</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n'')", span="213-222"];
m41_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                                    <tr class=\'''')", span="233-233"];
m41_45 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n'')", span="350-350"];
m41_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="238-238"];
m41_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\''>\r\n                                        <td>\r\n                               '' +\r\n''             <a href=\'''')", span="243-244"];
m41_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="249-249"];
m41_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\''>'')", span="254-254"];
m41_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(HtmlHelper.JobId(job.Key))", span="259-259"];
m41_32 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''</a>\r\n'')", span="264-264"];
m41_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="!job.Value.InEnqueuedState", span="269-269"];
m41_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                                                <span title=\''Job\'s state has been'' +\r\n'' changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>'' +\r\n''\r\n'')", span="275-277"];
m41_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''      <td>'')", span="287-288"];
m41_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="293-293"];
m41_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''</td>\r\n                                        <td>\r\n'')", span="298-298"];
m41_38 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="job.Value.EnqueuedAt.HasValue", span="303-303"];
m41_39 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                                                <span data-moment=\'''')", span="309-309"];
m41_44 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''  </tr>\r\n'')", span="339-340"];
m41_40 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="314-314"];
m41_41 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="319-319"];
m41_42 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Write(job.Value.EnqueuedAt)", span="324-324"];
m41_43 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''\r\n                                                </span>\r\n'')", span="329-329"];
m41_46 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="360-360"];
m41_48 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueueSteps.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m41_50 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="QueueSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m41_53 [cluster="HttpRequestBase.LinkTo(string)", file="QueueSteps.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m41_58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="QueueSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m41_56 [cluster="Unk.Write", file="QueueSteps.cs", label="Entry Unk.Write", span=""];
m41_55 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="QueueSteps.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m41_59 [file="QueueSteps.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m42_11 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RecurringJobsFilter.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m42_18 [cluster="Unk.>", file="RecurringJobsFilter.cs", label="Entry Unk.>", span=""];
m42_10 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobsFilter.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m42_14 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="29-29"];
m42_15 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="RecurringJobsFilter.cs", label="var serializedData = new InvocationData(null, null, null, null)", span="31-31"];
m42_16 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="RecurringJobsFilter.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="33-34"];
m42_17 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="29-29"];
m42_29 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="51-51"];
m42_30 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="RecurringJobsFilter.cs", label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''NonExistingMethod'',\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                '''')", span="53-57"];
m42_31 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="RecurringJobsFilter.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="59-60"];
m42_32 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="51-51"];
m42_22 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="38-38"];
m42_23 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="RecurringJobsFilter.cs", label="var serializedData = new InvocationData(\r\n                ''NonExistingType'',\r\n                ''Perform'',\r\n                '''',\r\n                '''')", span="40-44"];
m42_24 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="RecurringJobsFilter.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="46-47"];
m42_25 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="38-38"];
m42_12 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobsFilter.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m42_44 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobsFilter.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m42_13 [cluster="Unk.Equal", file="RecurringJobsFilter.cs", label="Entry Unk.Equal", span=""];
m42_36 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="64-64"];
m42_37 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="var job = Job.FromExpression(() => Sample(''Hello''))", span="66-66"];
m42_38 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="var invocationData = InvocationData.Serialize(job)", span="67-67"];
m42_39 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="Assert.Equal(typeof(InvocationDataFacts).AssemblyQualifiedName, invocationData.Type)", span="69-69"];
m42_40 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="Assert.Equal(''Sample'', invocationData.Method)", span="70-70"];
m42_41 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="Assert.Equal(JobHelper.ToJson(new[] { typeof(string) }), invocationData.ParameterTypes)", span="71-71"];
m42_42 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="Assert.Equal(JobHelper.ToJson(new[] { ''Hello'' }), invocationData.Arguments)", span="72-72"];
m42_43 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="64-64"];
m42_49 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="75-75"];
m42_50 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="75-75"];
m42_46 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="66-66"];
m42_20 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="serializedData.Deserialize()", span="34-34"];
m42_19 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="34-34"];
m42_21 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="34-34"];
m42_27 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="serializedData.Deserialize()", span="47-47"];
m42_26 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="47-47"];
m42_28 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="47-47"];
m42_34 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="serializedData.Deserialize()", span="60-60"];
m42_33 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Entry lambda expression", span="60-60"];
m42_35 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="60-60"];
m42_47 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Sample(''Hello'')", span="66-66"];
m42_48 [cluster="lambda expression", file="RecurringJobsFilter.cs", label="Exit lambda expression", span="66-66"];
m42_0 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="10-10"];
m42_1 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="var type = typeof(InvocationDataFacts)", span="12-12"];
m42_2 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="var methodInfo = type.GetMethod(''Sample'')", span="13-13"];
m42_3 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", color=red, community=0, file="RecurringJobsFilter.cs", label="0: var serializedData = new InvocationData(\r\n                type.AssemblyQualifiedName,\r\n                methodInfo.Name,\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                JobHelper.ToJson(new [] { ''Hello'' }))", span="15-19"];
m42_5 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="Assert.Equal(type, job.Type)", span="23-23"];
m42_6 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="Assert.Equal(methodInfo, job.Method)", span="24-24"];
m42_4 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="var job = serializedData.Deserialize()", span="21-21"];
m42_7 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="Assert.Equal(''Hello'', job.Arguments[0])", span="25-25"];
m42_8 [cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="RecurringJobsFilter.cs", label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="10-10"];
m42_9 [cluster="System.Type.GetMethod(string)", file="RecurringJobsFilter.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m42_45 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RecurringJobsFilter.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m42_51 [file="RecurringJobsFilter.cs", label=serializedData, span=""];
m42_52 [file="RecurringJobsFilter.cs", label=serializedData, span=""];
m42_53 [file="RecurringJobsFilter.cs", label=serializedData, span=""];
m43_18 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="RetryJobsFilter.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m43_16 [cluster="Unk.SecondsToDelay", file="RetryJobsFilter.cs", label="Entry Unk.SecondsToDelay", span=""];
m43_0 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="Entry HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10"];
m43_1 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="redis == null", span="12-12"];
m43_3 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="state == null", span="13-13"];
m43_5 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="state.StateName != FailedState.Name", span="15-15"];
m43_6 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="return state;", span="18-18"];
m43_7 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="var retryCount = redis.IncrementValueInHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId),\r\n                ''RetryCount'',\r\n                1)", span="21-24"];
m43_10 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="return new ScheduledState(\r\n                    state.JobId, \r\n                    String.Format(''Retry attempt {0} of {1}.'', retryCount, MaxRetryAttempts), \r\n                    delay);", span="32-35"];
m43_11 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="return state;", span="40-40"];
m43_2 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="throw new ArgumentNullException(''redis'');", span="12-12"];
m43_4 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="throw new ArgumentNullException(''state'');", span="13-13"];
m43_8 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="retryCount <= MaxRetryAttempts", span="26-26"];
m43_9 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="28-28"];
m43_12 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RetryJobsFilter.cs", label="Exit HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10"];
m43_17 [cluster="System.DateTime.AddSeconds(double)", file="RetryJobsFilter.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m43_19 [cluster="Unk.Format", file="RetryJobsFilter.cs", label="Entry Unk.Format", span=""];
m43_20 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="Entry HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44"];
m43_21 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="var random = new Random()", span="46-46"];
m43_22 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="47-48"];
m43_23 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs", label="Exit HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44"];
m43_24 [cluster="System.Random.Random()", file="RetryJobsFilter.cs", label="Entry System.Random.Random()", span="0-0"];
m43_26 [cluster="System.Random.Next(int)", file="RetryJobsFilter.cs", label="Entry System.Random.Next(int)", span="0-0"];
m43_27 [cluster="System.Math.Round(double)", file="RetryJobsFilter.cs", label="Entry System.Math.Round(double)", span="0-0"];
m43_15 [cluster="Unk.IncrementValueInHash", file="RetryJobsFilter.cs", label="Entry Unk.IncrementValueInHash", span=""];
m43_14 [cluster="string.Format(string, object)", file="RetryJobsFilter.cs", label="Entry string.Format(string, object)", span="0-0"];
m43_25 [cluster="System.Math.Pow(double, double)", file="RetryJobsFilter.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m43_28 [file="RetryJobsFilter.cs", label="HangFire.RetryJobsFilter", span=""];
m44_0 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, string, int)", span="4-4"];
m44_1 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="ServerName = serverName", span="6-6"];
m44_2 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", color=red, community=0, file="ServerContext.cs", label="2: Queue = queue", span="7-7"];
m44_3 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="WorkersCount = workersCount", span="8-8"];
m44_4 [cluster="HangFire.Server.ServerContext.ServerContext(string, string, int)", file="ServerContext.cs", label="Exit HangFire.Server.ServerContext.ServerContext(string, string, int)", span="4-4"];
m44_5 [file="ServerContext.cs", label="HangFire.Server.ServerContext", span=""];
m45_0 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="ServerExceptionContext.cs", label="Entry HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6"];
m45_1 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", color=green, community=0, file="ServerExceptionContext.cs", label="2: Exception = exception", span="11-11"];
m45_2 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="ServerExceptionContext.cs", label="Exit HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6"];
m45_3 [file="ServerExceptionContext.cs", label="HangFire.Filters.ServerExceptionContext", span=""];
m46_9 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="45-45"];
m46_10 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="job == null", span="50-50"];
m46_12 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="parameters == null", span="51-51"];
m46_14 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="state == null", span="52-52"];
m46_17 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                createdAt,\r\n                TimeSpan.FromHours(1))", span="55-59"];
m46_18 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="var context = new StateContext(jobId, job, createdAt)", span="61-61"];
m46_19 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="ChangeState(context, state, null)", span="62-62"];
m46_11 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''job'');", span="50-50"];
m46_13 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''parameters'');", span="51-51"];
m46_15 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''state'');", span="52-52"];
m46_16 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="var createdAt = DateTime.UtcNow", span="54-54"];
m46_20 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="return jobId;", span="64-64"];
m46_21 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="ServerJobDescriptor.cs", label="Exit Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="45-45"];
m46_54 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m46_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="ServerJobDescriptor.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m46_67 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30"];
m46_22 [cluster="System.TimeSpan.FromHours(double)", file="ServerJobDescriptor.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m46_24 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24"];
m46_55 [cluster="string.Format(string, object)", file="ServerJobDescriptor.cs", label="Entry string.Format(string, object)", span="0-0"];
m46_23 [cluster="Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerJobDescriptor.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30"];
m46_50 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="ServerJobDescriptor.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26"];
m46_93 [cluster="System.Threading.Thread.Sleep(int)", file="ServerJobDescriptor.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m46_69 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24"];
m46_77 [cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23"];
m46_76 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="ServerJobDescriptor.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m46_91 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="ServerJobDescriptor.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m46_53 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="ServerJobDescriptor.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m46_92 [cluster="string.IsNullOrEmpty(string)", file="ServerJobDescriptor.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m46_78 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="ServerJobDescriptor.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m46_25 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="131-131"];
m46_56 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="var electStateContext = new ElectStateContext(context, _connection, this, toState, oldStateName)", span="135-135"];
m46_58 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="var applyStateContext = new ApplyStateContext(\r\n                    context,\r\n                    electStateContext.CandidateState,\r\n                    oldStateName,\r\n                    electStateContext.TraversedStates)", span="138-142"];
m46_63 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="var applyStateContext = new ApplyStateContext(context, failedState, oldStateName, Enumerable.Empty<IState>())", span="156-156"];
m46_57 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="_stateChangeProcess.ElectState(_connection, electStateContext)", span="136-136"];
m46_59 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="ApplyState(applyStateContext, true)", span="144-144"];
m46_60 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="return true;", span="147-147"];
m46_61 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label=Exception, span="149-149"];
m46_62 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="151-154"];
m46_64 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="ApplyState(applyStateContext, false)", span="160-160"];
m46_65 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="return false;", span="163-163"];
m46_66 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ServerJobDescriptor.cs", label="Exit Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="131-131"];
m46_49 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ServerJobDescriptor.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m46_26 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="67-67"];
m46_27 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="jobId == null", span="69-69"];
m46_29 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="toState == null", span="70-70"];
m46_31 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="fromStates != null && fromStates.Length == 0", span="71-71"];
m46_33 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="_connection.AcquireDistributedJobLock(jobId, JobLockTimeout)", span="82-82"];
m46_34 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="var jobData = GetJobData(jobId, cancellationToken)", span="84-84"];
m46_37 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="fromStates != null && !fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="93-93"];
m46_42 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="!toState.IgnoreJobLoadException", span="111-111"];
m46_43 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="toState = new FailedState(ex.InnerException)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Can not change the state of a job to '{0}': target method was not found.'',\r\n                                toState.Name)\r\n                        }", span="113-118"];
m46_45 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="var context = new StateContext(jobId, jobData.Job, jobData.CreatedAt)", span="124-124"];
m46_46 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="var stateChanged = ChangeState(context, toState, jobData.State)", span="125-125"];
m46_28 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''jobId'');", span="69-69"];
m46_30 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''toState'');", span="70-70"];
m46_32 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="throw new ArgumentException(''From states array should be null or non-empty.'', ''fromStates'');", span="73-73"];
m46_35 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="jobData == null", span="86-86"];
m46_40 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="jobData.EnsureLoaded()", span="102-102"];
m46_36 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="return false;", span="90-90"];
m46_38 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="return false;", span="95-95"];
m46_39 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="bool loadSucceeded = true", span="98-98"];
m46_47 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="return loadSucceeded && stateChanged;", span="127-127"];
m46_41 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label=JobLoadException, span="104-104"];
m46_44 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="loadSucceeded = false", span="120-120"];
m46_48 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="Exit Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="67-67"];
m46_51 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", span="177-177"];
m46_79 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="var firstAttempt = true", span="179-179"];
m46_81 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="var jobData = _connection.GetJobData(jobId)", span="183-183"];
m46_86 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="cancellationToken.IsCancellationRequested", span="194-194"];
m46_80 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label=true, span="181-181"];
m46_88 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="Thread.Sleep(firstAttempt ? 0 : 100)", span="199-199"];
m46_82 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="jobData == null", span="184-184"];
m46_84 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="!String.IsNullOrEmpty(jobData.State)", span="189-189"];
m46_85 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="return jobData;", span="191-191"];
m46_83 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="return null;", span="186-186"];
m46_87 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="return null;", span="196-196"];
m46_89 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="firstAttempt = false", span="200-200"];
m46_90 [cluster="Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", file="ServerJobDescriptor.cs", label="Exit Hangfire.States.StateMachine.GetJobData(string, System.Threading.CancellationToken)", span="177-177"];
m46_0 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="34-34"];
m46_1 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="connection == null", span="36-36"];
m46_3 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="stateChangeProcess == null", span="37-37"];
m46_5 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="_connection = connection", span="39-39"];
m46_6 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="_stateChangeProcess = stateChangeProcess", span="40-40"];
m46_2 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m46_4 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''stateChangeProcess'');", span="37-37"];
m46_7 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="ServerJobDescriptor.cs", label="Exit Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="34-34"];
m46_70 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="167-167"];
m46_72 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="ServerJobDescriptor.cs", label="var transaction = _connection.CreateWriteTransaction()", span="169-169"];
m46_73 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="ServerJobDescriptor.cs", label="_stateChangeProcess.ApplyState(transaction, context, useFilters)", span="171-171"];
m46_74 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="ServerJobDescriptor.cs", label="transaction.Commit()", span="173-173"];
m46_75 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="ServerJobDescriptor.cs", label="Exit Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="167-167"];
m46_68 [cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="ServerJobDescriptor.cs", label="Entry Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22"];
m46_71 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ServerJobDescriptor.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m46_94 [file="ServerJobDescriptor.cs", label="Hangfire.States.StateMachine", span=""];
m47_0 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", file="ServerJobExceptionContext.cs", label="Entry HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", span="8-8"];
m47_1 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", color=red, community=0, file="ServerJobExceptionContext.cs", label="2: JobDescriptor = jobDescriptor", span="14-14"];
m47_2 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", color=red, community=0, file="ServerJobExceptionContext.cs", label="2: Exception = exception", span="15-15"];
m47_3 [cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", file="ServerJobExceptionContext.cs", label="Exit HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", span="8-8"];
m47_4 [file="ServerJobExceptionContext.cs", label="HangFire.Filters.ServerJobExceptionContext", span=""];
m48_126 [cluster="Hangfire.JobStorage.GetConnection()", file="ServerJobInvoker.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m48_129 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", file="ServerJobInvoker.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", span="44-44"];
m48_134 [cluster="string.IsNullOrWhiteSpace(string)", file="ServerJobInvoker.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m48_141 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m48_140 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m48_132 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m48_123 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m48_139 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m48_135 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="ServerJobInvoker.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m48_122 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m48_124 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m48_136 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100"];
m48_125 [cluster="int.TryParse(string, out int)", file="ServerJobInvoker.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m48_127 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m48_130 [cluster="Hangfire.Storage.IStorageConnection.GetRecurringJobs()", file="ServerJobInvoker.cs", label="Entry Hangfire.Storage.IStorageConnection.GetRecurringJobs()", span="55-55"];
m48_138 [cluster="string.IsNullOrEmpty(string)", file="ServerJobInvoker.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m48_137 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m48_133 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m48_0 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m48_1 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: WriteLiteral(''\r\n'')", span="61-61"];
m48_2 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: Layout = new LayoutPage(Strings.RecurringJobsPage_Title)", span="74-74"];
m48_3 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="2: List<RecurringJobDto> recurringJobs", span="75-75"];
m48_4 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="2: int from, perPage", span="77-77"];
m48_5 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: int.TryParse(Query(''from''), out from)", span="79-79"];
m48_6 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: int.TryParse(Query(''count''), out perPage)", span="80-80"];
m48_11 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: pager = new Pager(from, perPage, storageConnection.GetRecurringJobCount())", span="89-89"];
m48_7 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: Pager pager = null", span="82-82"];
m48_8 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: var connection = Storage.GetConnection()", span="84-84"];
m48_36 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="pager != null", span="226-226"];
m48_39 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Html.PerPageSelector(pager))", span="239-239"];
m48_114 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="pager != null", span="733-733"];
m48_117 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Html.Paginator(pager))", span="746-746"];
m48_9 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="2: var storageConnection = connection as JobStorageConnection", span="86-86"];
m48_13 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: recurringJobs = connection.GetRecurringJobs()", span="94-94"];
m48_10 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: storageConnection != null", span="87-87"];
m48_12 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: recurringJobs = storageConnection.GetRecurringJobs(pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="90-90"];
m48_14 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-12\''>\r\n        <h1 class=\''page-header\'''' +\r\n''>'')", span="102-103"];
m48_17 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: recurringJobs.Count == 0", span="118-118"];
m48_56 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label=recurringJobs, span="339-339"];
m48_15 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: Write(Strings.RecurringJobsPage_Title)", span="108-108"];
m48_16 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs", label="0: WriteLiteral(''</h1>\r\n\r\n'')", span="113-113"];
m48_18 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", span="124-124"];
m48_21 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="146-148"];
m48_19 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_NoJobs)", span="129-129"];
m48_20 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="134-134"];
m48_22 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Url.To(''/recurring/trigger''))", span="153-153"];
m48_23 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="158-158"];
m48_24 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_Triggering)", span="163-163"];
m48_25 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-play-circle\''></span>\r\n                        '')", span="168-169"];
m48_26 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_TriggerNow)", span="174-174"];
m48_27 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="179-180"];
m48_28 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Url.To(''/recurring/remove''))", span="185-185"];
m48_29 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="190-190"];
m48_30 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_Deleting)", span="195-195"];
m48_31 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="200-200"];
m48_32 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_DeleteConfirm)", span="205-205"];
m48_33 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-remove\''></span>\r\n                        '')", span="210-211"];
m48_34 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_Delete)", span="216-216"];
m48_35 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n'')", span="221-221"];
m48_37 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                        '')", span="232-232"];
m48_41 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(@''                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="254-263"];
m48_38 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral('' '')", span="234-234"];
m48_40 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n'')", span="244-244"];
m48_42 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_Id)", span="268-268"];
m48_43 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="273-273"];
m48_44 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_Table_Cron)", span="278-278"];
m48_45 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="283-283"];
m48_46 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_Table_TimeZone)", span="288-288"];
m48_47 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="293-293"];
m48_48 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_Job)", span="298-298"];
m48_49 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="303-303"];
m48_50 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_Table_NextExecution)", span="308-308"];
m48_51 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="313-313"];
m48_52 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_Table_LastExecution)", span="318-318"];
m48_53 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="323-323"];
m48_54 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_Created)", span="328-328"];
m48_55 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="333-334"];
m48_57 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                <tr class=\''js-jobs-list-row hover\''>\r\n            '' +\r\n''                        <td>\r\n                                        <input typ'' +\r\n''e=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="345-347"];
m48_113 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n'')", span="727-728"];
m48_58 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(job.Id)", span="352-352"];
m48_60 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(job.Id)", span="363-363"];
m48_63 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="var cronDescription = job.Cron", span="379-379"];
m48_67 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="!String.IsNullOrWhiteSpace(job.TimeZoneId)", span="410-410"];
m48_69 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(TimeZoneInfo.FindSystemTimeZoneById(job.TimeZoneId).DisplayName)", span="421-421"];
m48_71 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(job.TimeZoneId)", span="431-431"];
m48_76 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="job.Job != null", span="466-466"];
m48_79 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Html.JobName(job.Job))", span="479-479"];
m48_82 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(job.LoadException.InnerException.Message)", span="501-501"];
m48_85 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="job.NextExecution != null", span="522-522"];
m48_86 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Html.RelativeTime(job.NextExecution.Value))", span="530-530"];
m48_91 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="job.LastExecution != null", span="571-571"];
m48_92 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="!String.IsNullOrEmpty(job.LastJobId)", span="573-573"];
m48_94 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Url.JobDetails(job.LastJobId))", span="584-584"];
m48_96 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write($''background-color: {JobHistoryRenderer.GetForegroundStateColor(job.LastJobState)};'')", span="595-595"];
m48_98 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Html.RelativeTime(job.LastExecution.Value))", span="605-605"];
m48_103 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Html.RelativeTime(job.LastExecution.Value))", span="639-639"];
m48_109 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="job.CreatedAt != null", span="683-683"];
m48_110 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Html.RelativeTime(job.CreatedAt.Value))", span="691-691"];
m48_59 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\'' />\r\n                                    </td>\r\n                                '' +\r\n''    <td class=\''min-width\''>'')", span="357-358"];
m48_61 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</td>\r\n                                    <td class=\''min-width\''>\r\n              '' +\r\n''                          '')", span="368-369"];
m48_62 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n'')", span="373-373"];
m48_64 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                        '')", span="394-394"];
m48_65 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(cronDescription)", span="399-399"];
m48_66 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n                                    </td>\r\n                                    '' +\r\n''<td class=\''min-width\''>\r\n'')", span="404-405"];
m48_68 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                            <span title=\'''')", span="416-416"];
m48_73 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                            '')", span="448-448"];
m48_70 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\'' data-container=\''body\''>'')", span="426-426"];
m48_72 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</span>\r\n'')", span="436-436"];
m48_74 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral('' UTC\r\n'')", span="450-450"];
m48_75 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d>\r\n'')", span="460-461"];
m48_77 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                            '')", span="472-472"];
m48_81 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                            <em>'')", span="496-496"];
m48_78 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral('' '')", span="474-474"];
m48_80 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n'')", span="484-484"];
m48_83 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</em>\r\n'')", span="506-506"];
m48_84 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="516-517"];
m48_87 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                            <em>'')", span="545-545"];
m48_88 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_NotAvailable)", span="550-550"];
m48_89 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</em>\r\n'')", span="555-555"];
m48_90 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="565-566"];
m48_105 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                            <em>'')", span="657-657"];
m48_93 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                                <a href=\'''')", span="579-579"];
m48_100 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                                <em>\r\n                           '' +\r\n''                         '')", span="623-624"];
m48_95 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\''>\r\n                                                    <span class=\''label label-'' +\r\n''default label-hover\'' style=\'''')", span="589-590"];
m48_97 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\''>\r\n                                                        '')", span="600-600"];
m48_99 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n                                                    </span>\r\n                  '' +\r\n''                              </a>\r\n'')", span="610-611"];
m48_101 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.RecurringJobsPage_Canceled)", span="629-629"];
m48_102 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral('' '')", span="634-634"];
m48_104 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n                                                </em>\r\n'')", span="644-644"];
m48_106 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Write(Strings.Common_NotAvailable)", span="662-662"];
m48_107 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''</em>\r\n'')", span="667-667"];
m48_108 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="677-678"];
m48_111 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="706-706"];
m48_112 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                                    </td>\r\n                                </tr>\r'' +\r\n''\n'')", span="716-717"];
m48_115 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''                    '')", span="739-739"];
m48_119 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''            </div>\r\n'')", span="761-761"];
m48_116 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral('' '')", span="741-741"];
m48_118 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''\r\n'')", span="751-751"];
m48_120 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="WriteLiteral(''    </div>\r\n</div>    '')", span="771-771"];
m48_121 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="ServerJobInvoker.cs", label="Exit Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m48_131 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="ServerJobInvoker.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m48_128 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", file="ServerJobInvoker.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", span="38-38"];
m48_142 [file="ServerJobInvoker.cs", label="Hangfire.Dashboard.Pages.RecurringJobsPage", span=""];
m49_44 [cluster="System.Threading.Thread.Join()", file="Worker.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m49_62 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m49_63 [cluster="string.Format(string, params object[])", file="Worker.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m49_21 [cluster="System.Threading.Thread.Start()", file="Worker.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m49_45 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m49_11 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Worker.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m49_9 [cluster="string.Format(string, object)", file="Worker.cs", label="Entry string.Format(string, object)", span="0-0"];
m49_34 [cluster="System.Threading.ManualResetEventSlim.Set()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m49_22 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Entry HangFire.Server.Worker.Stop()", span="70-70"];
m49_23 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="72-72"];
m49_24 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label=_started, span="74-74"];
m49_25 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="_cts.Cancel()", span="76-76"];
m49_26 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Exit HangFire.Server.Worker.Stop()", span="70-70"];
m49_27 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m49_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
m49_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=green, community=0, file="Worker.cs", label="2: _pool = pool", span="42-42"];
m49_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=green, community=0, file="Worker.cs", label="2: _serverContext = serverContext", span="43-43"];
m49_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="2: _workerNumber = workerNumber", span="44-44"];
m49_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="2: _jobInvoker = jobInvoker", span="45-45"];
m49_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=green, community=0, file="Worker.cs", label="2: _jobActivator = jobActivator", span="46-46"];
m49_6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=red, community=0, file="Worker.cs", label="2: Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', workerNumber))", span="48-48"];
m49_7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=green, community=0, file="Worker.cs", label="0: _thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', workerNumber),\r\n                    IsBackground = true\r\n                }", span="50-54"];
m49_8 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
m49_95 [cluster="HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="Worker.cs", label="Entry HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="33-33"];
m49_106 [cluster="Unk.>", file="Worker.cs", label="Entry Unk.>", span=""];
m49_10 [cluster="Unk.GetLogger", file="Worker.cs", label="Entry Unk.GetLogger", span=""];
m49_60 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m49_47 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Entry HangFire.Server.Worker.DoWork()", span="127-127"];
m49_48 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=true, span="131-131"];
m49_49 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_pool.NotifyReady(this)", span="133-133"];
m49_54 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=OperationCanceledException, span="143-143"];
m49_55 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=Exception, span="146-146"];
m49_50 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_jobIsReady.Wait(_cts.Token)", span="134-134"];
m49_51 [cluster="HangFire.Server.Worker.DoWork()", color=green, community=0, file="Worker.cs", label="2: _jobLock", span="136-136"];
m49_52 [cluster="HangFire.Server.Worker.DoWork()", color=red, community=0, file="Worker.cs", label="0: PerformJob(_jobId)", span="138-138"];
m49_53 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_jobIsReady.Reset()", span="139-139"];
m49_56 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Crashed = true", span="148-148"];
m49_57 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="149-152"];
m49_58 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Exit HangFire.Server.Worker.DoWork()", span="127-127"];
m49_98 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="Worker.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m49_94 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="Worker.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m49_20 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Worker.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m49_12 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Entry HangFire.Server.Worker.Start()", span="57-57"];
m49_13 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="59-59"];
m49_14 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label=_started, span="61-61"];
m49_15 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="throw new InvalidOperationException(''Worker has been already started.'');", span="63-63"];
m49_16 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="_thread.Start()", span="66-66"];
m49_17 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="_started = true", span="67-67"];
m49_18 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Exit HangFire.Server.Worker.Start()", span="57-57"];
m49_92 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
m49_90 [cluster="Unk.Warn", file="Worker.cs", label="Entry Unk.Warn", span=""];
m49_91 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="Worker.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", span="16-16"];
m49_61 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="Entry HangFire.Server.Worker.PerformJob(string)", span="157-157"];
m49_65 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="2: Dictionary<string, string> jobArgs", span="159-159"];
m49_67 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: GetJobTypeAndArgs(jobId, out jobType, out jobArgs)", span="162-162"];
m49_69 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="0: Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    jobId))", span="166-168"];
m49_73 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="0: !JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(jobId, ''Worker has started processing.'', workerContext.ServerContext.ServerName),\r\n                    EnqueuedState.Name,\r\n                    ProcessingState.Name)", span="177-181"];
m49_77 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: jobDescriptor = new ServerJobDescriptor(_jobActivator, jobId, jobType, jobArgs)", span="196-196"];
m49_81 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    jobId))", span="203-205"];
m49_84 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="0: JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(jobId, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="225-228"];
m49_85 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(jobId, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="232-235"];
m49_86 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: JobServer.RemoveFromFetchedQueue(\r\n                    Redis, jobId, _serverContext.Queue)", span="244-245"];
m49_66 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="2: string jobType", span="160-160"];
m49_68 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: String.IsNullOrEmpty(jobType)", span="164-164"];
m49_71 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="2: var workerContext = new WorkerContext(_serverContext, _workerNumber, Redis)", span="173-173"];
m49_70 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="2: return;", span="170-170"];
m49_72 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label=Redis, span="175-175"];
m49_78 [cluster="HangFire.Server.Worker.PerformJob(string)", color=red, community=0, file="Worker.cs", label="0: _jobInvoker.PerformJob(workerContext, jobDescriptor)", span="197-197"];
m49_74 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="2: return;", span="183-183"];
m49_75 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="Exception exception = null", span="191-191"];
m49_76 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="0: ServerJobDescriptor jobDescriptor = null", span="193-193"];
m49_79 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label=Exception, span="199-199"];
m49_82 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="2: Redis", span="221-221"];
m49_80 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="exception = ex", span="201-201"];
m49_83 [cluster="HangFire.Server.Worker.PerformJob(string)", color=green, community=0, file="Worker.cs", label="0: exception == null", span="223-223"];
m49_87 [cluster="HangFire.Server.Worker.PerformJob(string)", file="Worker.cs", label="Exit HangFire.Server.Worker.PerformJob(string)", span="157-157"];
m49_88 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="Worker.cs", label="Entry HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
m49_100 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="Worker.cs", label="2: Redis", span="254-254"];
m49_101 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=1, file="Worker.cs", label="2: var result = Redis.GetValuesFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    new[] { ''Type'', ''Args'' })", span="256-258"];
m49_102 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="Worker.cs", label="2: jobType = result[0]", span="260-260"];
m49_103 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="Worker.cs", label="0: jobArgs = JobHelper.FromJson<Dictionary<string, string>>(result[1])", span="261-261"];
m49_104 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="Worker.cs", label="Exit HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
m49_89 [cluster="string.IsNullOrEmpty(string)", file="Worker.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m49_28 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="Entry HangFire.Server.Worker.Process(string)", span="98-98"];
m49_29 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="100-100"];
m49_31 [cluster="HangFire.Server.Worker.Process(string)", color=red, community=0, file="Worker.cs", label="2: _jobId = jobId", span="104-104"];
m49_30 [cluster="HangFire.Server.Worker.Process(string)", color=green, community=0, file="Worker.cs", label="2: _jobLock", span="102-102"];
m49_32 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="_jobIsReady.Set()", span="107-107"];
m49_33 [cluster="HangFire.Server.Worker.Process(string)", file="Worker.cs", label="Exit HangFire.Server.Worker.Process(string)", span="98-98"];
m49_64 [cluster="Unk.Fatal", file="Worker.cs", label="Entry Unk.Fatal", span=""];
m49_97 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m49_19 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="Worker.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m49_93 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="Worker.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m49_59 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="Worker.cs", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="80-80"];
m49_105 [cluster="Unk.GetValuesFromHash", file="Worker.cs", label="Entry Unk.GetValuesFromHash", span=""];
m49_99 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="Worker.cs", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="99-99"];
m49_35 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Entry HangFire.Server.Worker.Dispose()", span="110-110"];
m49_36 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label=_disposed, span="112-112"];
m49_37 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="return;", span="113-113"];
m49_38 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_disposed = true", span="115-115"];
m49_39 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label=_started, span="117-117"];
m49_40 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_thread.Join()", span="119-119"];
m49_41 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_cts.Dispose()", span="122-122"];
m49_42 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_jobIsReady.Dispose()", span="123-123"];
m49_43 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Exit HangFire.Server.Worker.Dispose()", span="110-110"];
m49_96 [cluster="Unk.Error", file="Worker.cs", label="Entry Unk.Error", span=""];
m49_46 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m49_107 [file="Worker.cs", label="HangFire.Server.Worker", span=""];
m51_53 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="WorkerPool.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m51_82 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="WorkerPool.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m51_0 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="18-18"];
m51_1 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="WorkerPool.cs", label="_workers = new List<Worker>(serverContext.WorkersCount)", span="23-23"];
m51_84 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="WorkerPool.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m51_116 [cluster="System.Collections.Generic.List<T>.List()", file="WorkerPool.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m51_85 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="WorkerPool.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m51_78 [cluster="string.IsNullOrWhiteSpace(string)", file="WorkerPool.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m51_28 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="WorkerPool.cs", label="context.JobExpirationTimeout = awaitingState.Expiration", span="84-84"];
m51_43 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="context.CandidateState = startImmediately\r\n                        ? awaitingState.NextState\r\n                        : new DeletedState { Reason = ''Continuation condition was not met'' }", span="131-133"];
m51_6 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="WorkerPool.cs", label="2: throw new ArgumentNullException(nameof(knownFinalStates));", span="53-53"];
m51_5 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="WorkerPool.cs", label="knownFinalStates == null", span="53-53"];
m51_4 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="WorkerPool.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="49-49"];
m51_7 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="WorkerPool.cs", label="stateChanger == null", span="54-54"];
m51_8 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="WorkerPool.cs", label="throw new ArgumentNullException(nameof(stateChanger));", span="54-54"];
m51_2 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="WorkerPool.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="44-44"];
m51_3 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="WorkerPool.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="44-44"];
m51_10 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="WorkerPool.cs", label="_stateChanger = stateChanger", span="57-57"];
m51_9 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="WorkerPool.cs", label="_knownFinalStates = knownFinalStates", span="56-56"];
m51_11 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="WorkerPool.cs", label="Order = 1000", span="61-61"];
m51_14 [cluster="Unk.nameof", file="WorkerPool.cs", label="Entry Unk.nameof", span=""];
m51_48 [cluster="Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", file="WorkerPool.cs", label="HangFire.Server.WorkerPool", span=""];
m51_80 [cluster="JsonSerializerSettings.cstr", file="WorkerPool.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m51_29 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="WorkerPool.cs", label="Exit Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="79-79"];
m51_30 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="var connection = context.Connection", span="90-90"];
m51_32 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="connection.AcquireDistributedJobLock(parentId, AddJobLockTimeout)", span="97-97"];
m51_33 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="var continuations = GetContinuations(connection, parentId)", span="99-99"];
m51_34 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="!continuations.Exists(x => x.JobId == context.BackgroundJob.Id)", span="104-104"];
m51_36 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="SetContinuations(connection, parentId, continuations)", span="111-111"];
m51_38 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="jobData == null", span="115-115"];
m51_39 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="throw new InvalidOperationException(\r\n                        $''Can not add a continuation: parent background job '{parentId}' does not exist.'');", span="120-121"];
m51_31 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="var parentId = awaitingState.ParentId", span="91-91"];
m51_35 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="continuations.Add(new Continuation { JobId = context.BackgroundJob.Id, Options = awaitingState.Options })", span="106-106"];
m51_37 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="var jobData = connection.GetJobData(parentId)", span="114-114"];
m51_40 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="var currentState = connection.GetStateData(parentId)", span="124-124"];
m51_45 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="WorkerPool.cs", label="_freeWorkers.Add(worker)", span="81-81"];
m51_15 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="Entry Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="64-64"];
m51_107 [cluster="System.Threading.Thread.Sleep(int)", file="WorkerPool.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m51_50 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="WorkerPool.cs", label="Entry Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="250-250"];
m51_108 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="WorkerPool.cs", label="connection.SetJobParameter(jobId, ''Continuations'', JobHelper.ToJson(continuations))", span="253-253"];
m51_109 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="WorkerPool.cs", label="Exit Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="250-250"];
m51_83 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="WorkerPool.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m51_111 [cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="WorkerPool.cs", label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m51_79 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="205-205"];
m51_87 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="StateData currentState = null", span="207-207"];
m51_91 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="var continuationData = context.Connection.GetJobData(continuationJobId)", span="214-214"];
m51_93 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="Logger.Warn(\r\n                        $''Can not start continuation '{continuationJobId}' for background job '{context.BackgroundJob.Id}': continuation does not exist.'')", span="217-218"];
m51_94 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="currentState = context.Connection.GetStateData(continuationJobId)", span="223-223"];
m51_97 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="Logger.Warn(\r\n                        $''Continuation '{continuationJobId}' has been ignored: it was deemed to be aborted, because its state is still non-initialized.'')", span="231-232"];
m51_98 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="DateTime.UtcNow >= started.Add(timeout)", span="237-237"];
m51_99 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="throw new TimeoutException(\r\n                        $''Can not start continuation '{continuationJobId}' for background job '{context.BackgroundJob.Id}': timeout expired while trying to fetch continuation state.'');", span="239-240"];
m51_88 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="var started = DateTime.UtcNow", span="209-209"];
m51_102 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="return currentState;", span="247-247"];
m51_89 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="var firstAttempt = true", span="210-210"];
m51_90 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label=true, span="212-212"];
m51_100 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="Thread.Sleep(firstAttempt ? 0 : 1)", span="243-243"];
m51_92 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="continuationData == null", span="215-215"];
m51_96 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="DateTime.UtcNow - continuationData.CreatedAt > ContinuationInvalidTimeout", span="229-229"];
m51_95 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="currentState != null", span="224-224"];
m51_101 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="firstAttempt = false", span="244-244"];
m51_103 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="WorkerPool.cs", label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="205-205"];
m51_81 [cluster="Unk.>", file="WorkerPool.cs", label="Entry Unk.>", span=""];
m51_41 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="WorkerPool.cs", label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="126-126"];
m51_54 [cluster="System.Enum.HasFlag(System.Enum)", file="WorkerPool.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m51_46 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="WorkerPool.cs", label="Exit HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="79-79"];
m51_112 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="WorkerPool.cs", label="return JobHelper.FromJson<List<Continuation>>(connection.GetJobParameter(\r\n                jobId, ''Continuations'')) ?? new List<Continuation>();", span="258-259"];
m51_113 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="WorkerPool.cs", label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="256-256"];
m51_47 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="WorkerPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m51_16 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="WorkerPool.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="36-36"];
m51_18 [cluster="HangFire.Server.Worker.Start()", file="WorkerPool.cs", label="Entry HangFire.Server.Worker.Start()", span="55-55"];
m51_19 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerPool.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m51_20 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="43-43"];
m51_17 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13"];
m51_21 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="45-45"];
m51_51 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="WorkerPool.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m51_52 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="WorkerPool.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m51_55 [cluster="Hangfire.States.DeletedState.DeletedState()", file="WorkerPool.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="65-65"];
m51_105 [cluster="System.DateTime.Add(System.TimeSpan)", file="WorkerPool.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m51_22 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Worker worker", span="47-47"];
m51_42 [cluster="HangFire.Server.Worker.Dispose()", file="WorkerPool.cs", label="Entry HangFire.Server.Worker.Dispose()", span="108-108"];
m51_44 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="WorkerPool.cs", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="79-79"];
m51_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WorkerPool.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m51_115 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="WorkerPool.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m51_12 [cluster="System.Collections.Generic.List<T>.List(int)", file="WorkerPool.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m51_106 [cluster="System.TimeoutException.TimeoutException(string)", file="WorkerPool.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m51_25 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="return worker;", span="54-54"];
m51_26 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="Exit HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="43-43"];
m51_27 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="WorkerPool.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m51_104 [cluster="Hangfire.Logging.ILog.Warn(string)", file="WorkerPool.cs", label="Entry Hangfire.Logging.ILog.Warn(string)", span="264-264"];
m51_13 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="WorkerPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m51_24 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="WorkerPool.cs", label="worker.Crashed", span="52-52"];
m51_59 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="var continuations = GetContinuations(context.Connection, context.BackgroundJob.Id)", span="142-142"];
m51_63 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="var currentState = GetContinuaionState(context, continuation.JobId, ContinuationStateFetchTimeout)", span="151-151"];
m51_67 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="163-164"];
m51_75 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="_stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    context.Connection,\r\n                    tuple.Key,\r\n                    tuple.Value,\r\n                    AwaitingState.StateName))", span="196-201"];
m51_60 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="var nextStates = new Dictionary<string, IState>()", span="143-143"];
m51_61 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label=continuations, span="147-147"];
m51_72 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="!nextStates.ContainsKey(continuation.JobId)", span="185-185"];
m51_73 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="nextStates.Add(continuation.JobId, nextState)", span="190-190"];
m51_74 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label=nextStates, span="194-194"];
m51_62 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="String.IsNullOrWhiteSpace(continuation.JobId)", span="149-149"];
m51_64 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="currentState == null", span="152-152"];
m51_65 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="currentState.Name != AwaitingState.StateName", span="159-159"];
m51_69 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                            currentState.Data[''NextState''],\r\n                            new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="172-174"];
m51_66 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="IState nextState", span="161-161"];
m51_68 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="nextState = new DeletedState { Reason = ''Continuation condition was not met'' }", span="166-166"];
m51_70 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label=Exception, span="176-176"];
m51_71 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="nextState = new FailedState(ex)\r\n                        {\r\n                            Reason = ''An error occurred while deserializing the continuation''\r\n                        }", span="178-181"];
m51_76 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="WorkerPool.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="138-138"];
m51_110 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="WorkerPool.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m51_56 [cluster="lambda expression", file="WorkerPool.cs", label="Entry lambda expression", span="104-104"];
m51_57 [cluster="lambda expression", file="WorkerPool.cs", label="x.JobId == context.BackgroundJob.Id", span="104-104"];
m51_58 [cluster="lambda expression", file="WorkerPool.cs", label="Exit lambda expression", span="104-104"];
m51_49 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerPool.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m51_114 [cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="WorkerPool.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m51_117 [cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="WorkerPool.cs", label="Entry Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="262-262"];
m51_118 [cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="WorkerPool.cs", label="Exit Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="262-262"];
m51_86 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="WorkerPool.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m51_23 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="WorkerPool.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m51_119 [file="WorkerPool.cs", label="Hangfire.ContinuationsSupportAttribute", span=""];
m51_120 [file="WorkerPool.cs", label="Hangfire.States.ElectStateContext", span=""];
n77 -> n15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n28  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n46  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n51  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n53  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n56  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n57  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n59  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n70  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n19  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n21  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n24  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n26  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n27  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n28  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n10 -> n29  [key=0, style=solid];
n10 -> n30  [key=2, style=dotted];
n10 -> n31  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n12 -> n29  [key=0, style=solid];
n12 -> n30  [key=2, style=dotted];
n12 -> n31  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n14 -> n29  [key=0, style=solid];
n14 -> n30  [key=2, style=dotted];
n14 -> n31  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n34  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n35  [key=2, style=dotted];
n19 -> n28  [color=darkseagreen4, key=1, label=properties, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n36  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n37  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n36  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n38  [key=2, style=dotted];
n25 -> n39  [key=2, style=dotted];
n25 -> n36  [key=2, style=dotted];
n25 -> n42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n36  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n36  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n40  [key=2, style=dotted];
n28 -> n41  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n32  [key=2, style=dotted];
n16 -> n18  [color=darkseagreen4, key=1, label=processes, style=dashed];
n16 -> n28  [color=darkseagreen4, key=1, label=processes, style=dashed];
n17 -> n18  [key=0, style=solid];
n17 -> n33  [key=2, style=dotted];
n17 -> n34  [key=2, style=dotted];
n33 -> n50  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n36  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n36  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n29 -> n8  [color=blue, key=0, style=bold];
n41 -> n70  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n44 -> n42  [color=blue, key=0, style=bold];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n49  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n36  [key=2, style=dotted];
n48 -> n45  [color=blue, key=0, style=bold];
n50 -> n51  [key=0, style=solid];
n50 -> n32  [key=2, style=dotted];
n50 -> n57  [color=darkseagreen4, key=1, label=processes, style=dashed];
n50 -> n59  [color=darkseagreen4, key=1, label=processes, style=dashed];
n50 -> n60  [color=darkseagreen4, key=1, label=processes, style=dashed];
n50 -> n61  [color=darkseagreen4, key=1, label=processes, style=dashed];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [color=darkseagreen4, key=1, label=filterProvider, style=dashed];
n51 -> n54  [color=darkseagreen4, key=1, label=filterProvider, style=dashed];
n57 -> n58  [key=0, style=solid];
n57 -> n66  [key=2, style=dotted];
n57 -> n67  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n68  [key=2, style=dotted];
n59 -> n67  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n69  [key=2, style=dotted];
n60 -> n67  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n63  [key=2, style=dotted];
n52 -> n60  [color=darkseagreen4, key=1, label=factory, style=dashed];
n53 -> n54  [key=0, style=solid];
n53 -> n64  [key=2, style=dotted];
n53 -> n57  [color=darkseagreen4, key=1, label=performer, style=dashed];
n54 -> n55  [key=0, style=solid];
n54 -> n65  [key=2, style=dotted];
n54 -> n57  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
n54 -> n59  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
n55 -> n56  [key=0, style=solid];
n55 -> n58  [color=darkseagreen4, key=1, label=i, style=dashed];
n55 -> n55  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n56 -> n57  [key=0, style=solid];
n56 -> n59  [key=0, style=solid];
n58 -> n56  [key=0, style=solid];
n58 -> n58  [color=darkseagreen4, key=1, label=i, style=dashed];
n62 -> n33  [color=blue, key=0, style=bold];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=2, style=dotted];
n71 -> n41  [color=blue, key=0, style=bold];
n73 -> n74  [key=0, style=solid];
n74 -> n73  [color=blue, key=0, style=bold];
n75 -> n76  [key=0, style=solid];
n76 -> n75  [color=blue, key=0, style=bold];
m0_21 -> m0_23  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_39  [key=2, style=dotted];
m0_21 -> m0_40  [key=2, style=dotted];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_13  [color=red, key=2, style=dotted];
m0_15 -> m0_4  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_35  [key=2, style=dotted];
m0_14 -> m0_18  [color=darkorchid, key=3, label="method methodReturn bool Stop", style=bold];
m0_14 -> m0_19  [color=darkorchid, key=3, label="method methodReturn bool Stop", style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_24  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_16 -> m0_21  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_34  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_26  [key=0, style=solid];
m0_24 -> m0_24  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_41  [key=2, style=dotted];
m0_24 -> m0_22  [color=blue, key=0, style=bold];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=concurrency, style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_7  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_33  [key=2, style=dotted];
m0_20 -> m0_17  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_38  [key=2, style=dotted];
m0_20 -> m0_14  [color=blue, key=0, style=bold];
m0_23 -> m0_17  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_14  [key=2, style=dotted];
m0_18 -> m0_20  [color=darkseagreen4, key=1, label=command, style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_36  [key=2, style=dotted];
m0_18 -> m0_21  [color=darkseagreen4, key=1, label=command, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_32  [key=0, style=solid];
m0_26 -> m0_42  [key=2, style=dotted];
m0_25 -> m0_23  [key=0, style=solid];
m0_25 -> m0_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_25 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_3  [color=red, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_8  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_10  [color=red, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_25 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_26  [key=0, style=solid];
m0_19 -> m0_37  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_43  [key=2, style=dotted];
m0_27 -> m0_44  [key=2, style=dotted];
m0_27 -> m0_29  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_29 -> m0_32  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_31 -> m0_29  [key=0, style=solid];
m0_31 -> m0_31  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_45  [key=2, style=dotted];
m0_32 -> m0_10  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_12  [color=green, key=2, style=dotted];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [color=red, key=0, style=solid];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_5  [color=green, key=2, style=dotted];
m0_3 -> m0_4  [color=red, key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_12  [key=2, style=dotted];
m0_46 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Hosts.ConsoleWorker", style=dashed];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> n35  [color=red, key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_7 -> m1_1  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m1_7 -> m1_5  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_3 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientJobExceptionContext", style=dashed];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_3  [color=red, key=2, style=dotted];
m3_1 -> m3_4  [color=red, key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [color=red, key=0, style=solid];
m3_13 -> m3_16  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_14 -> m3_19  [color=red, key=0, style=solid];
m3_14 -> m3_20  [color=red, key=2, style=dotted];
m3_16 -> m3_17  [color=red, key=0, style=solid];
m3_16 -> m3_21  [color=red, key=2, style=dotted];
m3_15 -> m3_16  [color=red, key=0, style=solid];
m3_17 -> m3_18  [color=red, key=0, style=solid];
m3_17 -> m3_19  [color=red, key=0, style=solid];
m3_18 -> m3_19  [color=red, key=0, style=solid];
m3_19 -> m3_13  [color=blue, key=0, style=bold];
m3_20 -> m3_22  [color=red, key=0, style=solid];
m3_20 -> m3_23  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m3_20 -> m3_32  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m3_20 -> m3_33  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m3_20 -> m3_24  [color=red, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>", style=dashed];
m3_22 -> m3_23  [color=red, key=0, style=solid];
m3_22 -> m3_27  [color=red, key=2, style=dotted];
m3_22 -> m3_24  [color=red, key=1, label=preContext, style=dashed];
m3_22 -> m3_40  [color=red, key=1, label=preContext, style=dashed];
m3_23 -> m3_24  [color=red, key=0, style=solid];
m3_23 -> m3_23  [color=red, key=3, label="Local variable System.Func<HangFire.Filters.JobEnqueuedContext> continuation", style=bold];
m3_24 -> m3_25  [color=red, key=0, style=solid];
m3_24 -> m3_28  [color=red, key=2, style=dotted];
m3_24 -> m3_29  [color=red, key=2, style=dotted];
m3_24 -> m3_37  [color=red, key=1, label="lambda expression", style=dashed];
m3_25 -> m3_26  [color=red, key=0, style=solid];
m3_25 -> m3_30  [color=red, key=2, style=dotted];
m3_26 -> m3_20  [color=blue, key=0, style=bold];
m3_3 -> m3_5  [color=red, key=0, style=solid];
m3_3 -> m3_7  [color=red, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>", style=dashed];
m3_3 -> m3_9  [color=red, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>", style=dashed];
m3_3 -> m3_10  [color=red, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>", style=dashed];
m3_5 -> m3_6  [color=red, key=0, style=solid];
m3_5 -> m3_7  [color=red, key=0, style=solid];
m3_7 -> m3_8  [color=red, key=0, style=solid];
m3_7 -> m3_9  [color=red, key=0, style=solid];
m3_9 -> m3_10  [color=red, key=0, style=solid];
m3_10 -> m3_11  [color=red, key=0, style=solid];
m3_6 -> m3_11  [color=red, key=0, style=solid];
m3_6 -> n30  [color=red, key=2, style=dotted];
m3_8 -> m3_11  [color=red, key=0, style=solid];
m3_8 -> n30  [color=red, key=2, style=dotted];
m3_11 -> m3_3  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [color=red, key=0, style=solid];
m3_42 -> m3_44  [color=red, key=1, label="HangFire.Filters.JobEnqueueingContext", style=dashed];
m3_42 -> m3_45  [color=red, key=1, label="HangFire.Filters.JobEnqueueingContext", style=dashed];
m3_42 -> m3_48  [color=red, key=1, label="System.Func<HangFire.Filters.JobEnqueuedContext>", style=dashed];
m3_42 -> m3_51  [color=red, key=1, label="HangFire.Filters.JobEnqueueingContext", style=dashed];
m3_42 -> m3_52  [color=red, key=1, label="HangFire.Filters.IClientJobFilter", style=dashed];
m3_42 -> m3_56  [color=red, key=1, label="HangFire.Filters.IClientJobFilter", style=dashed];
m3_42 -> m3_47  [color=red, key=3, label="method methodReturn HangFire.Filters.JobEnqueuedContext EnqueueJobFilter", style=bold];
m3_43 -> m3_44  [color=red, key=0, style=solid];
m3_43 -> m3_59  [color=red, key=2, style=dotted];
m3_44 -> m3_45  [color=red, key=0, style=solid];
m3_44 -> m3_46  [color=red, key=0, style=solid];
m3_45 -> m3_58  [color=red, key=0, style=solid];
m3_45 -> m3_36  [color=red, key=2, style=dotted];
m3_48 -> m3_49  [color=red, key=0, style=solid];
m3_48 -> m3_55  [color=red, key=0, style=solid];
m3_48 -> m3_30  [color=red, key=2, style=dotted];
m3_51 -> m3_52  [color=red, key=0, style=solid];
m3_51 -> m3_36  [color=red, key=2, style=dotted];
m3_51 -> m3_53  [color=red, key=1, label=postContext, style=dashed];
m3_51 -> m3_56  [color=red, key=1, label=postContext, style=dashed];
m3_51 -> m3_57  [color=red, key=1, label=postContext, style=dashed];
m3_52 -> m3_53  [color=red, key=0, style=solid];
m3_52 -> m3_60  [color=red, key=2, style=dotted];
m3_56 -> m3_57  [color=red, key=0, style=solid];
m3_56 -> m3_60  [color=red, key=2, style=dotted];
m3_46 -> m3_47  [color=red, key=0, style=solid];
m3_46 -> m3_46  [color=red, key=3, label="Local variable bool wasError", style=bold];
m3_47 -> m3_48  [color=red, key=0, style=solid];
m3_49 -> m3_50  [color=red, key=0, style=solid];
m3_55 -> m3_56  [color=red, key=0, style=solid];
m3_55 -> m3_57  [color=red, key=0, style=solid];
m3_50 -> m3_51  [color=red, key=0, style=solid];
m3_50 -> m3_55  [color=red, key=1, label=wasError, style=dashed];
m3_53 -> m3_54  [color=red, key=0, style=solid];
m3_53 -> m3_55  [color=red, key=0, style=solid];
m3_57 -> m3_58  [color=red, key=0, style=solid];
m3_54 -> m3_58  [color=red, key=0, style=solid];
m3_58 -> m3_42  [color=blue, key=0, style=bold];
m3_39 -> m3_40  [color=red, key=0, style=solid];
m3_32 -> m3_33  [color=red, key=0, style=solid];
m3_32 -> m3_35  [color=red, key=2, style=dotted];
m3_33 -> m3_34  [color=red, key=0, style=solid];
m3_33 -> m3_36  [color=red, key=2, style=dotted];
m3_40 -> m3_41  [color=red, key=0, style=solid];
m3_40 -> m3_42  [color=red, key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_24  [color=red, key=1, label="System.Func<HangFire.Filters.JobEnqueuedContext>", style=dashed];
m3_37 -> m3_40  [color=red, key=1, label="System.Func<HangFire.Filters.JobEnqueuedContext>", style=dashed];
m3_31 -> m3_32  [color=red, key=0, style=solid];
m3_34 -> m3_31  [color=blue, key=0, style=bold];
m3_38 -> m3_37  [color=blue, key=0, style=bold];
m3_41 -> m3_39  [color=blue, key=0, style=bold];
m3_21 -> m3_61  [color=red, key=0, style=solid];
m3_21 -> m3_62  [color=red, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>", style=dashed];
m3_61 -> m3_62  [color=red, key=0, style=solid];
m3_61 -> m3_66  [color=red, key=2, style=dotted];
m3_61 -> m3_63  [color=red, key=1, label=context, style=dashed];
m3_61 -> m3_64  [color=red, key=1, label=context, style=dashed];
m3_62 -> m3_63  [color=red, key=0, style=solid];
m3_62 -> m3_64  [color=red, key=0, style=solid];
m3_62 -> m3_28  [color=red, key=2, style=dotted];
m3_63 -> m3_62  [color=red, key=0, style=solid];
m3_63 -> m3_67  [color=red, key=2, style=dotted];
m3_64 -> m3_65  [color=red, key=0, style=solid];
m3_65 -> m3_21  [color=blue, key=0, style=bold];
m3_68 -> m3_9  [color=red, key=1, label="HangFire.Client.ClientJobInvoker", style=dashed];
m3_68 -> m3_10  [color=red, key=1, label="HangFire.Client.ClientJobInvoker", style=dashed];
m3_68 -> m3_14  [color=red, key=1, label="HangFire.Client.ClientJobInvoker", style=dashed];
m3_68 -> m3_16  [color=red, key=1, label="HangFire.Client.ClientJobInvoker", style=dashed];
m3_69 -> m3_32  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m3_69 -> m3_33  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m3_70 -> m3_33  [color=red, key=1, label="HangFire.Client.ClientContext", style=dashed];
m3_71 -> m3_40  [color=red, key=1, label=preContext, style=dashed];
m3_72 -> m3_40  [color=red, key=1, label="System.Func<HangFire.Filters.JobEnqueuedContext>", style=dashed];
m3_73 -> m3_40  [color=red, key=1, label="HangFire.Filters.IClientJobFilter", style=dashed];
m6_54 -> m6_52  [color=blue, key=0, style=bold];
m6_18 -> m6_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_18 -> m6_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_18 -> m6_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_18 -> m6_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_18 -> m6_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_18 -> m6_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_18 -> m6_53  [key=2, style=dotted];
m6_18 -> m6_54  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_31  [key=2, style=dotted];
m6_21 -> m6_23  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_21 -> m6_24  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_21 -> m6_49  [key=2, style=dotted];
m6_26 -> m6_30  [key=0, style=solid];
m6_26 -> m6_35  [key=2, style=dotted];
m6_26 -> m6_36  [key=2, style=dotted];
m6_26 -> m6_37  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_49  [key=2, style=dotted];
m6_28 -> m6_40  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_49  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_41  [key=2, style=dotted];
m6_29 -> m6_53  [key=2, style=dotted];
m6_29 -> m6_54  [key=2, style=dotted];
m6_29 -> m6_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_29 -> m6_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_19  [color=darkorchid, key=3, label="Local variable string checked", style=bold];
m6_20 -> m6_23  [color=darkorchid, key=3, label="Local variable string checked", style=bold];
m6_20 -> m6_54  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_32  [key=2, style=dotted];
m6_22 -> m6_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_22 -> m6_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_22 -> m6_25  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m6_22 -> m6_27  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m6_22 -> m6_24  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_32  [key=2, style=dotted];
m6_23 -> m6_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_23 -> m6_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_23 -> m6_25  [color=darkseagreen4, key=1, label="@checked", style=dashed];
m6_23 -> m6_27  [color=darkseagreen4, key=1, label="@checked", style=dashed];
m6_23 -> m6_46  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_33  [key=2, style=dotted];
m6_24 -> m6_49  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_34  [key=2, style=dotted];
m6_25 -> m6_27  [key=0, style=solid];
m6_25 -> m6_45  [key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=0, style=solid];
m6_27 -> m6_38  [key=2, style=dotted];
m6_27 -> m6_39  [key=2, style=dotted];
m6_27 -> m6_54  [key=2, style=dotted];
m6_27 -> m6_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [color=darkorchid, key=3, label="Local variable string fetched", style=bold];
m6_19 -> m6_19  [color=darkorchid, key=3, label="Local variable string fetched", style=bold];
m6_19 -> m6_49  [key=2, style=dotted];
m6_30 -> m6_18  [color=blue, key=0, style=bold];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_49  [key=2, style=dotted];
m6_57 -> m6_59  [color=green, key=1, label=recoverFromStates, style=dashed];
m6_57 -> m6_60  [color=green, key=1, label=recoverFromStates, style=dashed];
m6_57 -> m6_58  [color=green, key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_54  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_49  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_49  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_57  [key=2, style=dotted];
m6_36 -> m6_54  [key=2, style=dotted];
m6_36 -> m6_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_36 -> m6_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_39 -> m6_20  [color=darkorchid, key=3, label="Parameter variable string checkedTimestamp", style=bold];
m6_39 -> m6_19  [color=darkorchid, key=3, label="Parameter variable string fetchedTimestamp", style=bold];
m6_39 -> m6_71  [key=0, style=solid];
m6_39 -> m6_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_39 -> m6_72  [color=darkorchid, key=3, label="method methodReturn bool TimedOutByCheckedTime", style=bold];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_49  [key=2, style=dotted];
m6_71 -> m6_34  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_73  [key=0, style=solid];
m6_73 -> m6_34  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_70  [key=2, style=dotted];
m6_72 -> m6_74  [key=0, style=solid];
m6_74 -> m6_39  [color=blue, key=0, style=bold];
m6_51 -> m6_49  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_51  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_52  [key=2, style=dotted];
m6_5 -> m6_7  [color=red, key=1, label=queues, style=dashed];
m6_5 -> m6_10  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_7 -> m6_13  [key=2, style=dotted];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> m6_14  [key=2, style=dotted];
m6_7 -> m6_15  [key=2, style=dotted];
m6_7 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_16  [key=2, style=dotted];
m6_8 -> m6_48  [key=0, style=solid];
m6_8 -> m6_49  [key=2, style=dotted];
m6_10 -> m6_9  [key=0, style=solid];
m6_10 -> m6_17  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_47  [key=0, style=solid];
m6_10 -> m6_12  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_10 -> m6_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_10 -> m6_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_10 -> m6_18  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_10 -> m6_20  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_10 -> m6_22  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_10 -> m6_25  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_6 -> m6_7  [color=red, key=0, style=solid];
m6_6 -> m6_8  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_6 -> m6_10  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_6 -> m6_11  [key=0, style=solid];
m6_6 -> m6_49  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_6  [key=0, style=solid];
m6_9 -> m6_49  [key=2, style=dotted];
m6_11 -> m6_4  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_49  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=0, style=solid];
m6_33 -> m6_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_33 -> m6_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_49  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_50  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_4  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_84  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_79  [key=0, style=solid];
m6_76 -> m6_80  [key=0, style=solid];
m6_76 -> m6_82  [key=0, style=solid];
m6_78 -> m6_76  [key=0, style=solid];
m6_78 -> m6_83  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_79 -> m6_82  [key=0, style=solid];
m6_82 -> m6_75  [color=blue, key=0, style=bold];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_49  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_40 -> m6_59  [color=green, key=1, label=string, style=dashed];
m6_40 -> m6_60  [color=green, key=1, label=string, style=dashed];
m6_40 -> m6_55  [key=0, style=solid];
m6_40 -> m6_18  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_58  [key=2, style=dotted];
m6_40 -> m6_54  [key=2, style=dotted];
m6_40 -> m6_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_40 -> m6_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_59 -> m6_61  [color=green, key=0, style=solid];
m6_59 -> m6_64  [color=green, key=2, style=dotted];
m6_59 -> m6_65  [color=green, key=2, style=dotted];
m6_59 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_59 -> m6_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m6_56 -> m6_59  [color=green, key=1, label=queue, style=dashed];
m6_56 -> m6_57  [color=green, key=0, style=solid];
m6_56 -> m6_63  [key=2, style=dotted];
m6_56 -> m6_58  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_58 -> m6_59  [color=green, key=0, style=solid];
m6_58 -> m6_60  [color=green, key=0, style=solid];
m6_58 -> m6_34  [key=2, style=dotted];
m6_60 -> m6_61  [color=green, key=0, style=solid];
m6_60 -> m6_66  [color=green, key=2, style=dotted];
m6_60 -> m6_67  [color=green, key=2, style=dotted];
m6_60 -> m6_13  [color=green, key=2, style=dotted];
m6_60 -> m6_65  [color=green, key=2, style=dotted];
m6_55 -> m6_60  [color=green, key=1, label=jobType, style=dashed];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_35  [key=2, style=dotted];
m6_55 -> m6_62  [key=2, style=dotted];
m6_61 -> m6_40  [color=blue, key=0, style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_54  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_43 -> m6_35  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_45  [key=2, style=dotted];
m6_43 -> m6_49  [key=2, style=dotted];
m6_50 -> m6_35  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_45  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_54  [key=2, style=dotted];
m6_42 -> m6_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_10  [key=0, style=solid];
m6_46 -> m6_49  [key=2, style=dotted];
m6_44 -> m6_42  [color=blue, key=0, style=bold];
m6_44 -> m6_25  [key=0, style=solid];
m6_44 -> m6_49  [key=2, style=dotted];
m6_48 -> m6_46  [color=blue, key=0, style=bold];
m6_48 -> m6_0  [color=blue, key=0, style=bold];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_49  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_55  [key=2, style=dotted];
m6_31 -> m6_56  [key=2, style=dotted];
m6_31 -> m6_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_31 -> m6_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_38 -> m6_19  [color=darkorchid, key=3, label="Parameter variable string fetchedTimestamp", style=bold];
m6_38 -> m6_68  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_44  [key=0, style=solid];
m6_38 -> m6_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_38 -> m6_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_68 -> m6_34  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_70  [key=2, style=dotted];
m6_69 -> m6_38  [color=blue, key=0, style=bold];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_53  [key=2, style=dotted];
m6_12 -> m6_54  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_49  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_49  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_49  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_49  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_49  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_49  [key=2, style=dotted];
m6_91 -> m6_59  [color=green, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_60  [color=green, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_7  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_8  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_10  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_21  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_26  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_28  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_55  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_77  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_91 -> m6_81  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
m6_92 -> m6_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_92 -> m6_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [color=red, key=0, style=solid];
m8_2 -> m8_3  [color=red, key=0, style=solid];
m8_2 -> m8_5  [color=red, key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_6  [key=2, style=dotted];
m8_3 -> m8_7  [key=2, style=dotted];
m8_4 -> m8_0  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=2, style=dotted];
m8_10 -> m8_8  [color=blue, key=0, style=bold];
m9_59 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_63  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_60 -> m9_64  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_63  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_61 -> m9_64  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_42  [key=2, style=dotted];
m9_63 -> m9_65  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_67  [key=2, style=dotted];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_64  [color=darkseagreen4, key=1, label=minute, style=dashed];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_6  [key=2, style=dotted];
m9_66 -> m9_59  [color=blue, key=0, style=bold];
m9_89 -> m9_90  [key=0, style=solid];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_93  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_90 -> m9_94  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_93  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_91 -> m9_94  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_42  [key=2, style=dotted];
m9_93 -> m9_95  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_97  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_94  [color=darkseagreen4, key=1, label=minute, style=dashed];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_6  [key=2, style=dotted];
m9_96 -> m9_89  [color=blue, key=0, style=bold];
m9_128 -> m9_129  [key=0, style=solid];
m9_129 -> m9_130  [key=0, style=solid];
m9_129 -> m9_133  [color=darkseagreen4, key=1, label=month, style=dashed];
m9_129 -> m9_134  [color=darkseagreen4, key=1, label=month, style=dashed];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_133  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_130 -> m9_134  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_42  [key=2, style=dotted];
m9_133 -> m9_135  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_137  [key=2, style=dotted];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_133  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_131 -> m9_134  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_134  [color=darkseagreen4, key=1, label=minute, style=dashed];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_6  [key=2, style=dotted];
m9_136 -> m9_128  [color=blue, key=0, style=bold];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_30  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_6  [key=2, style=dotted];
m9_29 -> m9_25  [color=blue, key=0, style=bold];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_47  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_42  [key=2, style=dotted];
m9_46 -> m9_48  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_50  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_6  [key=2, style=dotted];
m9_49 -> m9_44  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_18  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_6  [key=2, style=dotted];
m9_17 -> m9_13  [color=blue, key=0, style=bold];
m9_74 -> m9_75  [key=0, style=solid];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_77  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_42  [key=2, style=dotted];
m9_76 -> m9_78  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_80  [key=2, style=dotted];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_6  [key=2, style=dotted];
m9_79 -> m9_74  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_6  [key=2, style=dotted];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_104 -> m9_105  [key=0, style=solid];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_107  [color=darkseagreen4, key=1, label=month, style=dashed];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_42  [key=2, style=dotted];
m9_106 -> m9_108  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_110  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_6  [key=2, style=dotted];
m9_109 -> m9_104  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_12  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_6  [key=2, style=dotted];
m9_11 -> m9_7  [color=blue, key=0, style=bold];
m9_119 -> m9_120  [key=0, style=solid];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_123  [color=darkseagreen4, key=1, label=month, style=dashed];
m9_120 -> m9_124  [color=darkseagreen4, key=1, label=month, style=dashed];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_123  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_121 -> m9_124  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_42  [key=2, style=dotted];
m9_123 -> m9_125  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_127  [key=2, style=dotted];
m9_122 -> m9_123  [key=0, style=solid];
m9_122 -> m9_124  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_6  [key=2, style=dotted];
m9_126 -> m9_119  [color=blue, key=0, style=bold];
m9_51 -> m9_52  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_54  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_52 -> m9_55  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_55  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_42  [key=2, style=dotted];
m9_54 -> m9_56  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_58  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_6  [key=2, style=dotted];
m9_57 -> m9_51  [color=blue, key=0, style=bold];
m9_98 -> m9_99  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_101  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_103  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_6  [key=2, style=dotted];
m9_102 -> m9_98  [color=blue, key=0, style=bold];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_24  [key=2, style=dotted];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_6  [key=2, style=dotted];
m9_23 -> m9_19  [color=blue, key=0, style=bold];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_36  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_6  [key=2, style=dotted];
m9_35 -> m9_31  [color=blue, key=0, style=bold];
m9_68 -> m9_69  [key=0, style=solid];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_71  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_73  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_6  [key=2, style=dotted];
m9_72 -> m9_68  [color=blue, key=0, style=bold];
m9_111 -> m9_112  [key=0, style=solid];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_114  [color=darkseagreen4, key=1, label=month, style=dashed];
m9_112 -> m9_115  [color=darkseagreen4, key=1, label=month, style=dashed];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_115  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_42  [key=2, style=dotted];
m9_114 -> m9_116  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_118  [key=2, style=dotted];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_6  [key=2, style=dotted];
m9_117 -> m9_111  [color=blue, key=0, style=bold];
m9_81 -> m9_82  [key=0, style=solid];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_82 -> m9_85  [color=darkseagreen4, key=1, label=day, style=dashed];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_85  [color=darkseagreen4, key=1, label=hour, style=dashed];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_42  [key=2, style=dotted];
m9_84 -> m9_86  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_88  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_6  [key=2, style=dotted];
m9_87 -> m9_81  [color=blue, key=0, style=bold];
m9_37 -> m9_38  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_42  [key=2, style=dotted];
m9_38 -> m9_40  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_43  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_6  [key=2, style=dotted];
m9_41 -> m9_37  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_2  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_2  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [color=blue, key=0, style=bold];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_2  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [color=green, key=0, style=solid];
m21_1 -> m21_2  [color=green, key=0, style=solid];
m21_1 -> m21_9  [color=green, key=2, style=dotted];
m21_2 -> m21_3  [color=green, key=0, style=solid];
m21_2 -> m21_10  [color=green, key=2, style=dotted];
m21_2 -> m21_4  [color=green, key=1, label=response, style=dashed];
m21_3 -> m21_4  [color=green, key=0, style=solid];
m21_3 -> m21_11  [color=green, key=2, style=dotted];
m21_4 -> m21_5  [color=green, key=0, style=solid];
m21_4 -> m21_12  [color=green, key=2, style=dotted];
m21_4 -> m21_7  [color=green, key=1, label=serialized, style=dashed];
m21_5 -> m21_6  [color=green, key=0, style=solid];
m21_7 -> m21_8  [color=green, key=0, style=solid];
m21_7 -> m21_13  [color=green, key=2, style=dotted];
m21_6 -> m21_7  [color=green, key=0, style=solid];
m21_8 -> m21_0  [color=blue, key=0, style=bold];
m21_14 -> m21_5  [color=green, key=1, label="HangFire.Web.JsonStats", style=dashed];
m21_14 -> m21_7  [color=green, key=1, label="HangFire.Web.JsonStats", style=dashed];
m21_14 -> m21_6  [color=green, key=1, label="HangFire.Web.JsonStats", style=dashed];
m22_0 -> m22_1  [color=red, key=0, style=solid];
m22_0 -> m22_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m22_0 -> m22_3  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m22_1 -> m22_2  [color=red, key=0, style=solid];
m22_2 -> m22_3  [key=0, style=solid];
m22_3 -> m22_4  [key=0, style=solid];
m22_4 -> m22_0  [color=blue, key=0, style=bold];
m22_5 -> m22_1  [color=red, key=1, label="HangFire.Filters.JobEnqueuedContext", style=dashed];
m22_5 -> m22_2  [color=darkseagreen4, key=1, label="HangFire.Filters.JobEnqueuedContext", style=dashed];
m22_5 -> m22_3  [color=darkseagreen4, key=1, label="HangFire.Filters.JobEnqueuedContext", style=dashed];
m23_0 -> m23_1  [color=red, key=0, style=solid];
m23_1 -> m23_2  [color=red, key=0, style=solid];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_3 -> m23_1  [color=red, key=1, label="HangFire.Filters.JobEnqueueingContext", style=dashed];
m24_54 -> m24_55  [key=0, style=solid];
m24_55 -> m24_56  [key=0, style=solid];
m24_56 -> m24_57  [key=0, style=solid];
m24_56 -> m24_58  [key=2, style=dotted];
m24_57 -> m24_54  [color=blue, key=0, style=bold];
m24_53 -> m24_80  [key=0, style=solid];
m24_53 -> m24_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_53 -> m24_84  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m24_53 -> m24_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_80 -> m24_81  [key=0, style=solid];
m24_80 -> m24_74  [key=2, style=dotted];
m24_80 -> m24_82  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_80 -> m24_83  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_80 -> m24_84  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_80 -> m24_85  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_81 -> m24_82  [key=0, style=solid];
m24_81 -> m24_75  [key=2, style=dotted];
m24_84 -> m24_85  [key=0, style=solid];
m24_84 -> m24_58  [key=2, style=dotted];
m24_87 -> m24_88  [key=0, style=solid];
m24_87 -> m24_78  [key=2, style=dotted];
m24_82 -> m24_83  [key=0, style=solid];
m24_82 -> m24_75  [key=2, style=dotted];
m24_83 -> m24_84  [key=0, style=solid];
m24_83 -> m24_75  [key=2, style=dotted];
m24_85 -> m24_86  [key=0, style=solid];
m24_85 -> m24_76  [key=2, style=dotted];
m24_85 -> m24_87  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
m24_86 -> m24_87  [key=0, style=solid];
m24_86 -> m24_88  [key=0, style=solid];
m24_88 -> m24_53  [color=blue, key=0, style=bold];
m24_14 -> m24_15  [key=0, style=solid];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_24  [key=0, style=solid];
m24_15 -> m24_31  [key=2, style=dotted];
m24_18 -> m24_19  [key=0, style=solid];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_34  [key=2, style=dotted];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m24_4 -> m24_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_4 -> m24_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_4 -> m24_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_4 -> m24_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m24_4 -> m24_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_4 -> m24_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m24_4 -> m24_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m24_4 -> m24_0  [color=blue, key=0, style=bold];
m24_6 -> m24_25  [key=0, style=solid];
m24_6 -> n30  [key=2, style=dotted];
m24_6 -> m24_27  [key=2, style=dotted];
m24_6 -> m24_7  [color=green, key=0, style=solid];
m24_6 -> m24_10  [color=green, key=3, label="method methodReturn string DequeueJobId", style=bold];
m24_7 -> m24_8  [color=green, key=0, style=solid];
m24_7 -> m24_9  [key=0, style=solid];
m24_7 -> m24_28  [key=2, style=dotted];
m24_7 -> m24_14  [color=green, key=2, style=dotted];
m24_7 -> m24_15  [color=green, key=2, style=dotted];
m24_7 -> m24_11  [color=green, key=1, label=jobId, style=dashed];
m24_7 -> m24_12  [color=green, key=1, label=jobId, style=dashed];
m24_8 -> m24_25  [key=0, style=solid];
m24_8 -> n30  [key=2, style=dotted];
m24_8 -> m24_27  [key=2, style=dotted];
m24_8 -> m24_9  [color=green, key=0, style=solid];
m24_9 -> m24_10  [color=green, key=0, style=solid];
m24_9 -> m24_11  [color=green, key=0, style=solid];
m24_9 -> m24_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_9 -> m24_16  [key=2, style=dotted];
m24_13 -> m24_14  [key=0, style=solid];
m24_13 -> m24_6  [color=blue, key=0, style=bold];
m24_16 -> m24_17  [key=0, style=solid];
m24_16 -> m24_32  [key=2, style=dotted];
m24_10 -> m24_25  [key=0, style=solid];
m24_10 -> m24_29  [key=2, style=dotted];
m24_10 -> m24_27  [key=2, style=dotted];
m24_10 -> m24_13  [color=green, key=0, style=solid];
m24_11 -> m24_12  [color=green, key=0, style=solid];
m24_11 -> m24_13  [key=0, style=solid];
m24_11 -> m24_11  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_11 -> m24_17  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_11 -> m24_18  [color=green, key=2, style=dotted];
m24_11 -> m24_19  [color=green, key=2, style=dotted];
m24_12 -> m24_25  [key=0, style=solid];
m24_12 -> m24_29  [key=2, style=dotted];
m24_12 -> m24_30  [key=2, style=dotted];
m24_12 -> m24_27  [key=2, style=dotted];
m24_12 -> m24_13  [key=0, style=solid];
m24_17 -> m24_18  [key=0, style=solid];
m24_17 -> m24_21  [key=0, style=solid];
m24_17 -> m24_33  [key=2, style=dotted];
m24_24 -> m24_25  [key=0, style=solid];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_23  [key=0, style=solid];
m24_21 -> m24_35  [key=2, style=dotted];
m24_20 -> m24_25  [key=0, style=solid];
m24_20 -> m24_1  [color=green, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m24_20 -> m24_2  [color=green, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m24_20 -> m24_7  [color=green, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m24_20 -> m24_8  [color=green, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m24_20 -> m24_11  [color=green, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m24_20 -> m24_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_36  [key=2, style=dotted];
m24_23 -> m24_25  [key=0, style=solid];
m24_25 -> m24_4  [color=blue, key=0, style=bold];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_5  [key=2, style=dotted];
m24_0 -> m24_1  [color=green, key=0, style=solid];
m24_0 -> m24_2  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m24_1 -> m24_2  [color=green, key=0, style=solid];
m24_1 -> m24_3  [key=2, style=dotted];
m24_2 -> m24_3  [color=green, key=0, style=solid];
m24_2 -> m24_0  [color=blue, key=0, style=bold];
m24_33 -> m24_59  [key=0, style=solid];
m24_33 -> m24_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_33 -> m24_64  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_33 -> m24_67  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m24_33 -> m24_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_33 -> m24_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_59 -> m24_60  [key=0, style=solid];
m24_59 -> m24_74  [key=2, style=dotted];
m24_59 -> m24_61  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_59 -> m24_62  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_59 -> m24_63  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_59 -> m24_64  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_59 -> m24_65  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_59 -> m24_67  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_59 -> m24_68  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m24_60 -> m24_61  [key=0, style=solid];
m24_60 -> m24_75  [key=2, style=dotted];
m24_64 -> m24_65  [key=0, style=solid];
m24_64 -> m24_75  [key=2, style=dotted];
m24_64 -> m24_64  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_64 -> m24_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_67 -> m24_68  [key=0, style=solid];
m24_67 -> m24_58  [key=2, style=dotted];
m24_71 -> m24_73  [key=0, style=solid];
m24_71 -> m24_77  [key=2, style=dotted];
m24_72 -> m24_73  [key=0, style=solid];
m24_72 -> m24_78  [key=2, style=dotted];
m24_72 -> m24_79  [key=2, style=dotted];
m24_61 -> m24_62  [key=0, style=solid];
m24_61 -> m24_75  [key=2, style=dotted];
m24_62 -> m24_63  [key=0, style=solid];
m24_62 -> m24_75  [key=2, style=dotted];
m24_63 -> m24_64  [key=0, style=solid];
m24_63 -> m24_75  [key=2, style=dotted];
m24_65 -> m24_66  [key=0, style=solid];
m24_65 -> m24_75  [key=2, style=dotted];
m24_68 -> m24_69  [key=0, style=solid];
m24_68 -> m24_76  [key=2, style=dotted];
m24_68 -> m24_70  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m24_68 -> m24_72  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m24_66 -> m24_67  [key=0, style=solid];
m24_66 -> m24_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m24_69 -> m24_70  [key=0, style=solid];
m24_69 -> m24_73  [key=0, style=solid];
m24_70 -> m24_71  [key=0, style=solid];
m24_70 -> m24_72  [key=0, style=solid];
m24_73 -> m24_33  [color=blue, key=0, style=bold];
m24_37 -> m24_38  [key=0, style=solid];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_40  [key=0, style=solid];
m24_39 -> m24_50  [key=0, style=solid];
m24_40 -> m24_41  [key=0, style=solid];
m24_41 -> m24_42  [key=0, style=solid];
m24_41 -> m24_43  [key=0, style=solid];
m24_41 -> m24_31  [key=2, style=dotted];
m24_42 -> m24_50  [key=0, style=solid];
m24_43 -> m24_44  [key=0, style=solid];
m24_44 -> m24_45  [key=0, style=solid];
m24_44 -> m24_46  [key=0, style=solid];
m24_45 -> m24_50  [key=0, style=solid];
m24_46 -> m24_47  [key=0, style=solid];
m24_47 -> m24_48  [key=0, style=solid];
m24_47 -> m24_51  [key=2, style=dotted];
m24_48 -> m24_49  [key=0, style=solid];
m24_48 -> m24_52  [key=2, style=dotted];
m24_49 -> m24_50  [key=0, style=solid];
m24_49 -> m24_53  [key=2, style=dotted];
m24_50 -> m24_37  [color=blue, key=0, style=bold];
m24_89 -> m24_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_46  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_47  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_48  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_55  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m24_89 -> m24_56  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_39  [key=2, style=dotted];
m25_25 -> m25_45  [key=2, style=dotted];
m25_25 -> m25_26  [key=0, style=solid];
m25_29 -> m25_29  [color=green, key=1, label=job, style=dashed];
m25_29 -> m25_30  [color=green, key=0, style=solid];
m25_29 -> m25_56  [color=green, key=2, style=dotted];
m25_29 -> m25_31  [color=green, key=1, label=job, style=dashed];
m25_61 -> m25_62  [key=0, style=solid];
m25_61 -> m25_43  [key=2, style=dotted];
m25_21 -> m25_22  [color=green, key=0, style=solid];
m25_21 -> m25_45  [color=green, key=2, style=dotted];
m25_59 -> m25_60  [key=0, style=solid];
m25_59 -> m25_41  [key=2, style=dotted];
m25_55 -> m25_56  [key=0, style=solid];
m25_57 -> m25_58  [key=0, style=solid];
m25_57 -> m25_22  [key=2, style=dotted];
m25_58 -> m25_59  [key=0, style=solid];
m25_58 -> m25_40  [key=2, style=dotted];
m25_60 -> m25_61  [key=0, style=solid];
m25_60 -> m25_42  [key=2, style=dotted];
m25_62 -> m25_63  [key=0, style=solid];
m25_62 -> m25_26  [key=2, style=dotted];
m25_63 -> m25_55  [color=blue, key=0, style=bold];
m25_63 -> m25_17  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_18  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_19  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_20  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_21  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_27  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_29  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_30  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_31  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_32  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_33  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_34  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_35  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_36  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_38  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_39  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_40  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_63 -> m25_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_41 -> m25_16  [key=0, style=solid];
m25_41 -> m25_45  [key=2, style=dotted];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_42  [key=2, style=dotted];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_47  [key=2, style=dotted];
m25_5 -> m25_9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_40  [key=2, style=dotted];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_39  [key=2, style=dotted];
m25_48 -> m25_48  [color=darkorchid, key=3, label="Local variable int queueIndex", style=bold];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_41  [key=2, style=dotted];
m25_26 -> m25_27  [color=green, key=0, style=solid];
m25_26 -> m25_45  [key=2, style=dotted];
m25_27 -> m25_28  [color=green, key=0, style=solid];
m25_27 -> m25_29  [key=2, style=dotted];
m25_27 -> m25_27  [color=green, key=1, label=job, style=dashed];
m25_27 -> m25_58  [color=green, key=2, style=dotted];
m25_27 -> m25_56  [color=green, key=2, style=dotted];
m25_28 -> m25_26  [color=blue, key=0, style=bold];
m25_28 -> m25_29  [color=green, key=0, style=solid];
m25_28 -> m25_45  [key=2, style=dotted];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_5  [key=2, style=dotted];
m25_1 -> m25_45  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_6  [key=2, style=dotted];
m25_2 -> m25_7  [key=2, style=dotted];
m25_2 -> m25_46  [key=2, style=dotted];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_8  [key=2, style=dotted];
m25_4 -> m25_0  [color=blue, key=0, style=bold];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_47  [key=2, style=dotted];
m25_4 -> m25_9  [color=darkseagreen4, key=1, label=from, style=dashed];
m25_64 -> m25_65  [key=0, style=solid];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_39  [key=2, style=dotted];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> m25_22  [key=2, style=dotted];
m25_67 -> m25_68  [key=0, style=solid];
m25_67 -> m25_40  [key=2, style=dotted];
m25_68 -> m25_69  [key=0, style=solid];
m25_68 -> m25_41  [key=2, style=dotted];
m25_69 -> m25_70  [key=0, style=solid];
m25_69 -> m25_42  [key=2, style=dotted];
m25_70 -> m25_71  [key=0, style=solid];
m25_70 -> m25_43  [key=2, style=dotted];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_26  [key=2, style=dotted];
m25_72 -> m25_64  [color=blue, key=0, style=bold];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_51  [key=2, style=dotted];
m25_9 -> m25_49  [key=2, style=dotted];
m25_9 -> m25_50  [key=2, style=dotted];
m25_9 -> m25_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m25_9 -> m25_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m25_9 -> m25_43  [color=darkseagreen4, key=1, label=pager, style=dashed];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_13  [key=2, style=dotted];
m25_10 -> m25_16  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m25_10 -> m25_52  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_45  [key=2, style=dotted];
m25_12 -> m25_9  [color=blue, key=0, style=bold];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_14  [key=0, style=solid];
m25_13 -> m25_45  [key=2, style=dotted];
m25_13 -> m25_44  [key=0, style=solid];
m25_7 -> m25_8  [key=0, style=solid];
m25_42 -> m25_45  [key=2, style=dotted];
m25_42 -> m25_43  [key=0, style=solid];
m25_30 -> m25_31  [color=green, key=0, style=solid];
m25_30 -> m25_45  [color=green, key=2, style=dotted];
m25_31 -> m25_32  [color=green, key=0, style=solid];
m25_31 -> m25_39  [key=2, style=dotted];
m25_31 -> m25_31  [color=green, key=1, label=job, style=dashed];
m25_31 -> m25_59  [color=green, key=2, style=dotted];
m25_31 -> m25_55  [color=green, key=2, style=dotted];
m25_31 -> m25_33  [color=green, key=1, label=job, style=dashed];
m25_32 -> m25_33  [color=green, key=0, style=solid];
m25_32 -> m25_22  [key=2, style=dotted];
m25_32 -> m25_45  [color=green, key=2, style=dotted];
m25_33 -> m25_34  [color=green, key=0, style=solid];
m25_33 -> m25_40  [key=2, style=dotted];
m25_33 -> m25_33  [color=green, key=1, label=job, style=dashed];
m25_33 -> m25_60  [color=green, key=2, style=dotted];
m25_33 -> m25_56  [color=green, key=2, style=dotted];
m25_33 -> m25_35  [color=green, key=1, label=job, style=dashed];
m25_34 -> m25_35  [color=green, key=0, style=solid];
m25_34 -> m25_41  [key=2, style=dotted];
m25_34 -> m25_45  [color=green, key=2, style=dotted];
m25_35 -> m25_36  [color=green, key=0, style=solid];
m25_35 -> m25_42  [key=2, style=dotted];
m25_35 -> m25_35  [color=green, key=1, label=job, style=dashed];
m25_35 -> m25_61  [color=green, key=2, style=dotted];
m25_35 -> m25_56  [color=green, key=2, style=dotted];
m25_35 -> m25_37  [color=green, key=1, label=job, style=dashed];
m25_36 -> m25_37  [color=green, key=0, style=solid];
m25_36 -> m25_43  [key=2, style=dotted];
m25_36 -> m25_45  [color=green, key=2, style=dotted];
m25_37 -> m25_38  [color=green, key=0, style=solid];
m25_37 -> m25_26  [key=2, style=dotted];
m25_37 -> m25_37  [color=green, key=1, label=job, style=dashed];
m25_37 -> m25_41  [color=green, key=0, style=solid];
m25_37 -> m25_39  [color=green, key=1, label=job, style=dashed];
m25_38 -> m25_30  [color=blue, key=0, style=bold];
m25_38 -> m25_39  [color=green, key=0, style=solid];
m25_38 -> m25_45  [color=green, key=2, style=dotted];
m25_17 -> m25_18  [color=green, key=0, style=solid];
m25_17 -> m25_45  [color=green, key=2, style=dotted];
m25_17 -> m25_14  [color=blue, key=0, style=bold];
m25_16 -> m25_17  [color=green, key=0, style=solid];
m25_16 -> m25_18  [color=green, key=1, label=job, style=dashed];
m25_16 -> m25_42  [key=0, style=solid];
m25_16 -> m25_0  [key=2, style=dotted];
m25_18 -> m25_18  [color=green, key=1, label=job, style=dashed];
m25_18 -> m25_19  [color=green, key=0, style=solid];
m25_18 -> m25_56  [color=green, key=2, style=dotted];
m25_18 -> m25_20  [color=green, key=1, label=job, style=dashed];
m25_19 -> m25_20  [color=green, key=0, style=solid];
m25_19 -> m25_45  [color=green, key=2, style=dotted];
m25_19 -> m25_21  [key=2, style=dotted];
m25_20 -> m25_20  [color=green, key=1, label=job, style=dashed];
m25_20 -> m25_21  [color=green, key=0, style=solid];
m25_20 -> m25_51  [color=green, key=2, style=dotted];
m25_20 -> m25_56  [color=green, key=2, style=dotted];
m25_20 -> m25_22  [color=green, key=1, label=job, style=dashed];
m25_20 -> m25_18  [color=blue, key=0, style=bold];
m25_22 -> m25_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_22 -> m25_23  [key=0, style=solid];
m25_22 -> m25_57  [key=2, style=dotted];
m25_22 -> m25_55  [key=2, style=dotted];
m25_22 -> m25_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_22 -> m25_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m25_22 -> m25_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m25_22 -> m25_56  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m25_22 -> m25_65  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m25_22 -> m25_74  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m25_24 -> m25_27  [color=green, key=1, label=job, style=dashed];
m25_24 -> m25_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_26  [key=0, style=solid];
m25_24 -> m25_22  [color=blue, key=0, style=bold];
m25_39 -> m25_39  [color=green, key=1, label=job, style=dashed];
m25_39 -> m25_40  [color=green, key=0, style=solid];
m25_39 -> m25_51  [color=green, key=2, style=dotted];
m25_39 -> m25_56  [color=green, key=2, style=dotted];
m25_40 -> m25_41  [color=green, key=0, style=solid];
m25_40 -> m25_45  [color=green, key=2, style=dotted];
m25_14 -> m25_55  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_53  [key=2, style=dotted];
m25_14 -> m25_54  [key=2, style=dotted];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_45  [key=2, style=dotted];
m25_15 -> m25_17  [key=0, style=solid];
m25_23 -> m25_45  [key=2, style=dotted];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_25  [key=2, style=dotted];
m25_43 -> m25_55  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_62  [key=2, style=dotted];
m25_43 -> m25_54  [key=2, style=dotted];
m25_6 -> m25_7  [key=0, style=solid];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m25_8 -> m25_48  [key=2, style=dotted];
m25_44 -> m25_0  [color=blue, key=0, style=bold];
m25_44 -> m25_45  [key=0, style=solid];
m25_53 -> m25_44  [color=blue, key=0, style=bold];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_22  [key=2, style=dotted];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_43  [key=2, style=dotted];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_54  [key=2, style=dotted];
m25_52 -> m25_53  [key=0, style=solid];
m25_52 -> m25_26  [key=2, style=dotted];
m25_73 -> m25_74  [key=0, style=solid];
m25_74 -> m25_75  [key=0, style=solid];
m25_74 -> m25_39  [key=2, style=dotted];
m25_75 -> m25_76  [key=0, style=solid];
m25_75 -> m25_22  [key=2, style=dotted];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_40  [key=2, style=dotted];
m25_77 -> m25_78  [key=0, style=solid];
m25_77 -> m25_41  [key=2, style=dotted];
m25_78 -> m25_79  [key=0, style=solid];
m25_78 -> m25_42  [key=2, style=dotted];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_43  [key=2, style=dotted];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_26  [key=2, style=dotted];
m25_81 -> m25_73  [color=blue, key=0, style=bold];
m25_82 -> m25_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_37  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_46  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_52  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_66  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_71  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_75  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m25_82 -> m25_80  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m26_9 -> m26_10  [color=green, key=0, style=solid];
m26_10 -> m26_11  [color=red, key=0, style=solid];
m26_10 -> m26_12  [color=green, key=0, style=solid];
m26_11 -> m26_14  [color=green, key=0, style=solid];
m26_11 -> m26_15  [color=green, key=2, style=dotted];
m26_11 -> m26_12  [color=red, key=0, style=solid];
m26_11 -> m26_13  [color=red, key=2, style=dotted];
m26_12 -> m26_13  [color=green, key=0, style=solid];
m26_12 -> m26_16  [color=green, key=2, style=dotted];
m26_12 -> m26_10  [color=blue, key=0, style=bold];
m26_13 -> m26_14  [color=green, key=0, style=solid];
m26_14 -> m26_9  [color=blue, key=0, style=bold];
m26_14 -> m26_15  [color=red, key=0, style=solid];
m26_18 -> m26_19  [color=green, key=0, style=solid];
m26_18 -> m26_20  [color=green, key=0, style=solid];
m26_19 -> m26_20  [color=red, key=0, style=solid];
m26_19 -> m26_21  [color=red, key=2, style=dotted];
m26_19 -> m26_23  [color=green, key=0, style=solid];
m26_19 -> m26_15  [color=green, key=2, style=dotted];
m26_20 -> m26_18  [color=blue, key=0, style=bold];
m26_20 -> m26_21  [color=green, key=0, style=solid];
m26_20 -> m26_24  [color=green, key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label=BasicDeliverEventArgs, style=dashed];
m26_0 -> m26_4  [color=darkseagreen4, key=1, label="ref IModel", style=dashed];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_1 -> m26_4  [key=2, style=dotted];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_2 -> m26_6  [key=0, style=solid];
m26_2 -> n30  [key=2, style=dotted];
m26_17 -> m26_18  [color=green, key=0, style=solid];
m26_21 -> m26_22  [color=green, key=0, style=solid];
m26_21 -> m26_25  [color=green, key=2, style=dotted];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [color=red, key=0, style=solid];
m26_5 -> m26_8  [key=2, style=dotted];
m26_6 -> m26_0  [color=blue, key=0, style=bold];
m26_6 -> m26_7  [color=red, key=0, style=solid];
m26_6 -> m26_8  [color=red, key=2, style=dotted];
m26_6 -> m26_9  [color=red, key=2, style=dotted];
m26_15 -> m26_16  [color=red, key=0, style=solid];
m26_15 -> m26_17  [color=red, key=2, style=dotted];
m26_7 -> m26_5  [color=blue, key=0, style=bold];
m26_16 -> m26_14  [color=blue, key=0, style=bold];
m26_22 -> m26_23  [color=green, key=0, style=solid];
m26_22 -> m26_6  [color=red, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m26_22 -> m26_11  [color=red, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m26_22 -> m26_15  [color=red, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m26_22 -> m26_19  [color=red, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m26_23 -> m26_17  [color=blue, key=0, style=bold];
m26_26 -> m26_27  [color=green, key=0, style=solid];
m26_27 -> m26_28  [color=green, key=0, style=solid];
m26_27 -> m26_29  [color=green, key=0, style=solid];
m26_28 -> m26_29  [color=green, key=0, style=solid];
m26_28 -> m26_17  [color=green, key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_30 -> m26_26  [color=blue, key=0, style=bold];
m26_31 -> m26_10  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_12  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_13  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_18  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_20  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_21  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_22  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_27  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_28  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_3  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_4  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_5  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m26_31 -> m26_29  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_8  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_9  [key=2, style=dotted];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_10  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_9  [key=2, style=dotted];
m27_6 -> m27_7  [key=0, style=solid];
m27_7 -> m27_0  [color=blue, key=0, style=bold];
m27_11 -> m27_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m27_11 -> m27_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m27_11 -> m27_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m27_11 -> m27_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m27_11 -> m27_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m27_11 -> m27_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_0  [color=blue, key=0, style=bold];
m28_7 -> m28_8  [key=0, style=solid];
m28_8 -> m28_7  [color=blue, key=0, style=bold];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_6 -> m28_3  [color=blue, key=0, style=bold];
m28_9 -> m28_10  [key=0, style=solid];
m28_10 -> m28_11  [key=0, style=solid];
m28_11 -> m28_9  [color=blue, key=0, style=bold];
m28_12 -> m28_1  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.CorrectJob", style=dashed];
m28_13 -> m28_4  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.ArgumentsJob", style=dashed];
m28_13 -> m28_5  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.ArgumentsJob", style=dashed];
m28_14 -> m28_10  [color=darkseagreen4, key=1, label="HangFire.Tests.JobInvokerTests.DisposableJob", style=dashed];
m30_0 -> m30_1  [key=0, style=solid];
m30_0 -> m30_2  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_3  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m30_0 -> m30_4  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m30_0 -> m30_5  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_6  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_7  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_8  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_9  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_10  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_11  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_12  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_13  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_0 -> m30_33  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m30_0 -> m30_14  [color=darkseagreen4, key=1, label=IServiceCollection, style=dashed];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=0, style=solid];
m30_2 -> m30_15  [key=0, style=solid];
m30_2 -> n30  [key=2, style=dotted];
m30_2 -> m30_17  [key=2, style=dotted];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_5  [key=0, style=solid];
m30_4 -> m30_15  [key=0, style=solid];
m30_4 -> n30  [key=2, style=dotted];
m30_4 -> m30_17  [key=2, style=dotted];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_18  [key=2, style=dotted];
m30_5 -> m30_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_18  [key=2, style=dotted];
m30_6 -> m30_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_18  [key=2, style=dotted];
m30_7 -> m30_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_19  [key=2, style=dotted];
m30_8 -> m30_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_19  [key=2, style=dotted];
m30_10 -> m30_11  [key=0, style=solid];
m30_10 -> m30_19  [key=2, style=dotted];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_19  [key=2, style=dotted];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_18  [key=2, style=dotted];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_18  [key=2, style=dotted];
m30_13 -> m30_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_14 -> m30_15  [key=0, style=solid];
m30_15 -> m30_0  [color=blue, key=0, style=bold];
m30_32 -> m30_33  [key=0, style=solid];
m30_33 -> m30_34  [key=0, style=solid];
m30_20 -> m30_21  [key=0, style=solid];
m30_23 -> m30_24  [key=0, style=solid];
m30_26 -> m30_27  [key=0, style=solid];
m30_29 -> m30_30  [key=0, style=solid];
m30_21 -> m30_22  [key=0, style=solid];
m30_22 -> m30_20  [color=blue, key=0, style=bold];
m30_24 -> m30_25  [key=0, style=solid];
m30_25 -> m30_23  [color=blue, key=0, style=bold];
m30_27 -> m30_28  [key=0, style=solid];
m30_28 -> m30_26  [color=blue, key=0, style=bold];
m30_30 -> m30_31  [key=0, style=solid];
m30_31 -> m30_29  [color=blue, key=0, style=bold];
m30_34 -> m30_32  [color=blue, key=0, style=bold];
m30_35 -> m30_33  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IGlobalConfiguration>", style=dashed];
m31_89 -> m31_90  [key=0, style=solid];
m31_90 -> m31_91  [key=0, style=solid];
m31_90 -> m31_92  [key=2, style=dotted];
m31_91 -> m31_89  [color=blue, key=0, style=bold];
m31_105 -> m31_106  [key=0, style=solid];
m31_105 -> m31_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_106 -> m31_26  [key=2, style=dotted];
m31_106 -> m31_107  [key=0, style=solid];
m31_106 -> m31_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_107 -> m31_105  [color=blue, key=0, style=bold];
m31_92 -> m31_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_92 -> m31_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_92 -> m31_93  [key=0, style=solid];
m31_94 -> m31_26  [key=2, style=dotted];
m31_94 -> m31_95  [key=0, style=solid];
m31_94 -> m31_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_93 -> m31_94  [key=0, style=solid];
m31_93 -> m31_97  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m31_95 -> m31_92  [color=blue, key=0, style=bold];
m31_71 -> m31_72  [key=0, style=solid];
m31_71 -> m31_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_72 -> m31_26  [key=2, style=dotted];
m31_72 -> m31_73  [key=0, style=solid];
m31_72 -> m31_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_73 -> m31_71  [color=blue, key=0, style=bold];
m31_47 -> m31_48  [color=green, key=0, style=solid];
m31_47 -> m31_49  [color=green, key=1, label=string, style=dashed];
m31_47 -> m31_52  [color=green, key=1, label=string, style=dashed];
m31_48 -> m31_49  [color=green, key=0, style=solid];
m31_48 -> m31_52  [color=green, key=1, label=addStateSql, style=dashed];
m31_49 -> m31_50  [color=green, key=0, style=solid];
m31_49 -> m31_26  [color=green, key=2, style=dotted];
m31_49 -> m31_51  [color=green, key=1, label="lambda expression", style=dashed];
m31_50 -> m31_47  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_0 -> m31_3  [color=green, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m31_0 -> m31_5  [color=green, key=1, label=SqlConnection, style=dashed];
m31_0 -> m31_6  [color=green, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_1 -> m31_3  [color=green, key=0, style=solid];
m31_2 -> m31_7  [color=green, key=0, style=solid];
m31_2 -> n30  [color=green, key=2, style=dotted];
m31_3 -> m31_4  [color=green, key=0, style=solid];
m31_3 -> m31_5  [color=green, key=0, style=solid];
m31_4 -> m31_7  [color=green, key=0, style=solid];
m31_4 -> n30  [color=green, key=2, style=dotted];
m31_5 -> m31_6  [color=green, key=0, style=solid];
m31_6 -> m31_7  [color=green, key=0, style=solid];
m31_7 -> m31_0  [color=blue, key=0, style=bold];
m31_117 -> m31_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_117 -> m31_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_117 -> m31_118  [key=0, style=solid];
m31_119 -> m31_26  [key=2, style=dotted];
m31_119 -> m31_120  [key=0, style=solid];
m31_119 -> m31_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_118 -> m31_119  [key=0, style=solid];
m31_118 -> m31_122  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m31_120 -> m31_117  [color=blue, key=0, style=bold];
m31_26 -> m31_124  [key=0, style=solid];
m31_124 -> m31_125  [key=0, style=solid];
m31_124 -> m31_126  [key=2, style=dotted];
m31_125 -> m31_26  [color=blue, key=0, style=bold];
m31_38 -> m31_39  [color=green, key=0, style=solid];
m31_38 -> m31_40  [color=green, key=1, label=string, style=dashed];
m31_38 -> m31_43  [color=green, key=1, label=string, style=dashed];
m31_39 -> m31_40  [color=green, key=0, style=solid];
m31_39 -> m31_43  [color=green, key=1, label=addAndSetStateSql, style=dashed];
m31_40 -> m31_41  [color=green, key=0, style=solid];
m31_40 -> m31_26  [color=green, key=2, style=dotted];
m31_40 -> m31_42  [color=green, key=1, label="lambda expression", style=dashed];
m31_41 -> m31_38  [color=blue, key=0, style=bold];
m31_77 -> m31_78  [key=0, style=solid];
m31_77 -> m31_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_78 -> m31_26  [key=2, style=dotted];
m31_78 -> m31_79  [key=0, style=solid];
m31_78 -> m31_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_79 -> m31_77  [color=blue, key=0, style=bold];
m31_83 -> m31_84  [key=0, style=solid];
m31_83 -> m31_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_84 -> m31_26  [key=2, style=dotted];
m31_84 -> m31_85  [key=0, style=solid];
m31_84 -> m31_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_85 -> m31_83  [color=blue, key=0, style=bold];
m31_99 -> m31_100  [key=0, style=solid];
m31_99 -> m31_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_100 -> m31_26  [key=2, style=dotted];
m31_100 -> m31_101  [key=0, style=solid];
m31_100 -> m31_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_101 -> m31_99  [color=blue, key=0, style=bold];
m31_23 -> m31_24  [color=green, key=0, style=solid];
m31_23 -> m31_28  [color=green, key=1, label=string, style=dashed];
m31_24 -> m31_25  [color=green, key=0, style=solid];
m31_24 -> m31_26  [color=green, key=2, style=dotted];
m31_24 -> m31_27  [color=green, key=1, label="lambda expression", style=dashed];
m31_25 -> m31_23  [color=blue, key=0, style=bold];
m31_111 -> m31_112  [key=0, style=solid];
m31_111 -> m31_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_112 -> m31_26  [key=2, style=dotted];
m31_112 -> m31_113  [key=0, style=solid];
m31_112 -> m31_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_113 -> m31_111  [color=blue, key=0, style=bold];
m31_11 -> m31_12  [color=green, key=0, style=solid];
m31_12 -> m31_13  [color=green, key=0, style=solid];
m31_12 -> m31_18  [color=green, key=2, style=dotted];
m31_12 -> m31_19  [color=green, key=2, style=dotted];
m31_12 -> m31_16  [color=green, key=1, label=transaction, style=dashed];
m31_13 -> m31_14  [color=green, key=0, style=solid];
m31_13 -> m31_20  [color=green, key=2, style=dotted];
m31_16 -> m31_17  [color=green, key=0, style=solid];
m31_16 -> m31_22  [color=green, key=2, style=dotted];
m31_14 -> m31_16  [color=green, key=0, style=solid];
m31_14 -> m31_15  [color=green, key=0, style=solid];
m31_15 -> m31_14  [color=green, key=0, style=solid];
m31_15 -> m31_21  [color=green, key=2, style=dotted];
m31_17 -> m31_11  [color=blue, key=0, style=bold];
m31_121 -> m31_122  [key=0, style=solid];
m31_27 -> m31_28  [color=green, key=0, style=solid];
m31_28 -> m31_29  [color=green, key=0, style=solid];
m31_28 -> m31_30  [color=green, key=2, style=dotted];
m31_28 -> m31_31  [color=green, key=2, style=dotted];
m31_29 -> m31_27  [color=blue, key=0, style=bold];
m31_35 -> m31_36  [color=green, key=0, style=solid];
m31_36 -> m31_37  [color=green, key=0, style=solid];
m31_36 -> m31_31  [color=green, key=2, style=dotted];
m31_37 -> m31_35  [color=blue, key=0, style=bold];
m31_43 -> m31_44  [color=green, key=0, style=solid];
m31_43 -> m31_45  [color=green, key=2, style=dotted];
m31_43 -> m31_46  [color=green, key=2, style=dotted];
m31_43 -> m31_31  [color=green, key=2, style=dotted];
m31_42 -> m31_43  [color=green, key=0, style=solid];
m31_44 -> m31_42  [color=blue, key=0, style=bold];
m31_52 -> m31_53  [color=green, key=0, style=solid];
m31_52 -> m31_45  [color=green, key=2, style=dotted];
m31_52 -> m31_46  [color=green, key=2, style=dotted];
m31_52 -> m31_31  [color=green, key=2, style=dotted];
m31_51 -> m31_52  [color=green, key=0, style=solid];
m31_53 -> m31_51  [color=blue, key=0, style=bold];
m31_75 -> m31_30  [key=2, style=dotted];
m31_75 -> m31_31  [key=2, style=dotted];
m31_75 -> m31_76  [key=0, style=solid];
m31_87 -> m31_30  [key=2, style=dotted];
m31_87 -> m31_31  [key=2, style=dotted];
m31_87 -> m31_88  [key=0, style=solid];
m31_69 -> m31_31  [key=2, style=dotted];
m31_69 -> m31_70  [key=0, style=solid];
m31_81 -> m31_31  [key=2, style=dotted];
m31_81 -> m31_82  [key=0, style=solid];
m31_97 -> m31_31  [key=2, style=dotted];
m31_97 -> m31_98  [key=0, style=solid];
m31_103 -> m31_31  [key=2, style=dotted];
m31_103 -> m31_104  [key=0, style=solid];
m31_109 -> m31_31  [key=2, style=dotted];
m31_109 -> m31_110  [key=0, style=solid];
m31_115 -> m31_31  [key=2, style=dotted];
m31_115 -> m31_116  [key=0, style=solid];
m31_122 -> m31_31  [key=2, style=dotted];
m31_122 -> m31_123  [key=0, style=solid];
m31_62 -> m31_63  [key=0, style=solid];
m31_62 -> m31_64  [key=2, style=dotted];
m31_61 -> m31_62  [key=0, style=solid];
m31_68 -> m31_69  [key=0, style=solid];
m31_74 -> m31_75  [key=0, style=solid];
m31_80 -> m31_81  [key=0, style=solid];
m31_86 -> m31_87  [key=0, style=solid];
m31_96 -> m31_97  [key=0, style=solid];
m31_102 -> m31_103  [key=0, style=solid];
m31_108 -> m31_109  [key=0, style=solid];
m31_114 -> m31_115  [key=0, style=solid];
m31_76 -> m31_74  [color=blue, key=0, style=bold];
m31_88 -> m31_86  [color=blue, key=0, style=bold];
m31_70 -> m31_68  [color=blue, key=0, style=bold];
m31_82 -> m31_80  [color=blue, key=0, style=bold];
m31_98 -> m31_96  [color=blue, key=0, style=bold];
m31_104 -> m31_102  [color=blue, key=0, style=bold];
m31_110 -> m31_108  [color=blue, key=0, style=bold];
m31_116 -> m31_114  [color=blue, key=0, style=bold];
m31_123 -> m31_121  [color=blue, key=0, style=bold];
m31_63 -> m31_61  [color=blue, key=0, style=bold];
m31_54 -> m31_55  [key=0, style=solid];
m31_54 -> m31_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_54 -> m31_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_55 -> m31_56  [key=0, style=solid];
m31_55 -> m31_59  [key=2, style=dotted];
m31_56 -> m31_57  [key=0, style=solid];
m31_56 -> m31_60  [key=2, style=dotted];
m31_56 -> m31_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m31_57 -> m31_26  [key=2, style=dotted];
m31_57 -> m31_58  [key=0, style=solid];
m31_57 -> m31_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_58 -> m31_54  [color=blue, key=0, style=bold];
m31_65 -> m31_66  [key=0, style=solid];
m31_65 -> m31_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_66 -> m31_26  [key=2, style=dotted];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_67 -> m31_65  [color=blue, key=0, style=bold];
m31_32 -> m31_33  [color=green, key=0, style=solid];
m31_32 -> m31_36  [color=green, key=1, label=string, style=dashed];
m31_33 -> m31_34  [color=green, key=0, style=solid];
m31_33 -> m31_26  [color=green, key=2, style=dotted];
m31_33 -> m31_35  [color=green, key=1, label="lambda expression", style=dashed];
m31_34 -> m31_32  [color=blue, key=0, style=bold];
m31_127 -> m31_5  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_6  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_13  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_14  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_15  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_24  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_33  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_40  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_49  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_55  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_57  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_66  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_72  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_78  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_90  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_94  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_100  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_106  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_112  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_119  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_127 -> m31_124  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m31_128 -> m31_28  [color=green, key=1, label=string, style=dashed];
m31_129 -> m31_28  [color=green, key=1, label="System.TimeSpan", style=dashed];
m31_130 -> m31_36  [color=green, key=1, label=string, style=dashed];
m31_131 -> m31_43  [color=green, key=1, label=string, style=dashed];
m31_132 -> m31_43  [color=green, key=1, label="HangFire.States.IState", style=dashed];
m31_133 -> m31_43  [color=green, key=1, label=addAndSetStateSql, style=dashed];
m31_134 -> m31_52  [color=green, key=1, label=string, style=dashed];
m31_135 -> m31_52  [color=green, key=1, label="HangFire.States.IState", style=dashed];
m31_136 -> m31_52  [color=green, key=1, label=addStateSql, style=dashed];
m31_141 -> m31_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_142 -> m31_75  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m31_144 -> m31_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_145 -> m31_87  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m31_140 -> m31_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_143 -> m31_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_146 -> m31_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_147 -> m31_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_148 -> m31_97  [color=darkseagreen4, key=1, label=double, style=dashed];
m31_149 -> m31_97  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m31_150 -> m31_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_151 -> m31_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_152 -> m31_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_153 -> m31_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_154 -> m31_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_155 -> m31_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_156 -> m31_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_157 -> m31_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_158 -> m31_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_159 -> m31_122  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m31_137 -> m31_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_138 -> m31_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_139 -> m31_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m32_0 -> m32_1  [color=red, key=0, style=solid];
m32_1 -> m32_2  [color=red, key=0, style=solid];
m32_2 -> m32_0  [color=blue, key=0, style=bold];
m32_3 -> m32_1  [color=red, key=1, label="HangFire.Filters.JobPerformingContext", style=dashed];
m33_4 -> m33_0  [color=blue, key=0, style=bold];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_13  [key=2, style=dotted];
m33_6 -> m33_7  [key=0, style=solid];
m33_5 -> m33_14  [color=red, key=0, style=solid];
m33_17 -> m33_18  [color=green, key=0, style=solid];
m33_18 -> m33_19  [color=red, key=0, style=solid];
m33_18 -> m33_20  [color=green, key=2, style=dotted];
m33_19 -> m33_17  [color=blue, key=0, style=bold];
m33_19 -> m33_20  [color=red, key=0, style=solid];
m33_19 -> m33_19  [color=red, key=1, label=ConnectionFactory, style=dashed];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_11  [key=0, style=solid];
m33_8 -> m33_10  [color=darkseagreen4, key=1, label=queue, style=dashed];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_14  [key=2, style=dotted];
m33_9 -> m33_5  [key=2, style=dotted];
m33_10 -> m33_8  [key=0, style=solid];
m33_10 -> m33_15  [key=2, style=dotted];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_13  [key=2, style=dotted];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_16  [key=2, style=dotted];
m33_11 -> m33_7  [key=2, style=dotted];
m33_12 -> m33_6  [color=blue, key=0, style=bold];
m33_12 -> m33_8  [color=blue, key=0, style=bold];
m33_20 -> m33_18  [color=blue, key=0, style=bold];
m33_15 -> m33_16  [key=0, style=solid];
m33_15 -> m33_17  [key=2, style=dotted];
m33_14 -> m33_15  [color=red, key=0, style=solid];
m33_14 -> m33_19  [color=red, key=1, label=ConnectionFactory, style=dashed];
m33_16 -> m33_5  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [color=green, key=0, style=solid];
m33_1 -> m33_2  [color=green, key=0, style=solid];
m33_1 -> m33_5  [color=red, key=2, style=dotted];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_6  [key=2, style=dotted];
m33_2 -> m33_4  [key=2, style=dotted];
m33_2 -> m33_5  [key=2, style=dotted];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_7  [key=2, style=dotted];
m33_3 -> m33_0  [color=blue, key=0, style=bold];
m33_21 -> m33_22  [color=green, key=0, style=solid];
m33_22 -> m33_23  [color=green, key=0, style=solid];
m33_22 -> m33_4  [color=green, key=2, style=dotted];
m33_22 -> m33_5  [color=green, key=2, style=dotted];
m33_23 -> m33_21  [color=blue, key=0, style=bold];
m33_24 -> m33_1  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m33_24 -> m33_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m33_24 -> m33_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m33_24 -> m33_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m33_24 -> m33_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m33_24 -> m33_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m34_15 -> m34_16  [key=0, style=solid];
m34_16 -> m34_17  [key=0, style=solid];
m34_16 -> m34_18  [key=2, style=dotted];
m34_16 -> m34_14  [key=2, style=dotted];
m34_17 -> m34_15  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_0  [color=blue, key=0, style=bold];
m34_19 -> m34_20  [key=0, style=solid];
m34_19 -> m34_21  [color=crimson, key=0, style=bold];
m34_19 -> m34_22  [color=crimson, key=0, style=bold];
m34_20 -> m34_21  [key=0, style=solid];
m34_20 -> m34_24  [key=2, style=dotted];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_25  [key=2, style=dotted];
m34_22 -> m34_23  [key=0, style=solid];
m34_22 -> m34_26  [key=2, style=dotted];
m34_23 -> m34_19  [color=blue, key=0, style=bold];
m34_27 -> m34_28  [key=0, style=solid];
m34_27 -> m34_29  [color=crimson, key=0, style=bold];
m34_27 -> m34_30  [color=crimson, key=0, style=bold];
m34_28 -> m34_29  [key=0, style=solid];
m34_28 -> m34_32  [key=2, style=dotted];
m34_29 -> m34_30  [key=0, style=solid];
m34_29 -> m34_33  [key=2, style=dotted];
m34_30 -> m34_31  [key=0, style=solid];
m34_30 -> m34_34  [key=2, style=dotted];
m34_31 -> m34_27  [color=blue, key=0, style=bold];
m34_35 -> m34_36  [key=0, style=solid];
m34_36 -> m34_37  [key=0, style=solid];
m34_36 -> m34_38  [key=2, style=dotted];
m34_37 -> m34_35  [color=blue, key=0, style=bold];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m34_2 -> m34_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m34_2 -> m34_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_3 -> m34_4  [key=0, style=solid];
m34_4 -> m34_5  [key=0, style=solid];
m34_5 -> m34_6  [key=0, style=solid];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_8  [key=2, style=dotted];
m34_6 -> m34_9  [key=2, style=dotted];
m34_7 -> m34_2  [color=blue, key=0, style=bold];
m34_10 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_13  [key=2, style=dotted];
m34_11 -> m34_14  [key=2, style=dotted];
m34_12 -> m34_10  [color=blue, key=0, style=bold];
m34_39 -> m34_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_6  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_16  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_21  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m34_39 -> m34_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m35_18 -> m35_19  [key=0, style=solid];
m35_5 -> m35_6  [color=green, key=0, style=solid];
m35_5 -> m35_21  [key=2, style=dotted];
m35_5 -> m35_22  [key=2, style=dotted];
m35_5 -> m35_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_6 -> m35_7  [color=green, key=0, style=solid];
m35_6 -> m35_8  [color=green, key=2, style=dotted];
m35_6 -> m35_4  [color=green, key=2, style=dotted];
m35_6 -> m35_21  [key=2, style=dotted];
m35_6 -> m35_22  [key=2, style=dotted];
m35_6 -> m35_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_7 -> m35_5  [color=blue, key=0, style=bold];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_9  [color=darkseagreen4, key=1, label=timeZone1, style=dashed];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_4  [key=2, style=dotted];
m35_1 -> m35_3  [key=2, style=dotted];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_18  [key=2, style=dotted];
m35_2 -> m35_0  [color=blue, key=0, style=bold];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_19  [key=2, style=dotted];
m35_19 -> m35_3  [key=2, style=dotted];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_21  [key=2, style=dotted];
m35_159 -> m35_160  [key=0, style=solid];
m35_160 -> m35_161  [key=0, style=solid];
m35_160 -> m35_164  [color=darkseagreen4, key=1, label=time, style=dashed];
m35_160 -> m35_168  [color=darkseagreen4, key=1, label=time, style=dashed];
m35_161 -> m35_162  [key=0, style=solid];
m35_161 -> m35_166  [key=2, style=dotted];
m35_164 -> m35_165  [key=0, style=solid];
m35_164 -> m35_95  [key=2, style=dotted];
m35_164 -> m35_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_162 -> m35_163  [key=0, style=solid];
m35_162 -> m35_93  [key=2, style=dotted];
m35_163 -> m35_164  [key=0, style=solid];
m35_163 -> m35_94  [key=2, style=dotted];
m35_165 -> m35_159  [color=blue, key=0, style=bold];
m35_257 -> m35_258  [key=0, style=solid];
m35_258 -> m35_259  [key=0, style=solid];
m35_258 -> m35_229  [key=2, style=dotted];
m35_258 -> m35_264  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m35_258 -> m35_267  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m35_258 -> m35_270  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m35_259 -> m35_260  [key=0, style=solid];
m35_259 -> m35_166  [key=2, style=dotted];
m35_264 -> m35_265  [key=0, style=solid];
m35_264 -> m35_95  [key=2, style=dotted];
m35_264 -> m35_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_260 -> m35_261  [key=0, style=solid];
m35_260 -> m35_206  [key=2, style=dotted];
m35_261 -> m35_262  [key=0, style=solid];
m35_261 -> m35_206  [key=2, style=dotted];
m35_262 -> m35_263  [key=0, style=solid];
m35_262 -> m35_93  [key=2, style=dotted];
m35_263 -> m35_264  [key=0, style=solid];
m35_263 -> m35_94  [key=2, style=dotted];
m35_265 -> m35_257  [color=blue, key=0, style=bold];
m35_8 -> m35_9  [key=0, style=solid];
m35_170 -> m35_171  [key=0, style=solid];
m35_171 -> m35_172  [key=0, style=solid];
m35_171 -> m35_21  [key=2, style=dotted];
m35_171 -> m35_28  [key=2, style=dotted];
m35_171 -> m35_22  [key=2, style=dotted];
m35_171 -> m35_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_172 -> m35_173  [key=0, style=solid];
m35_172 -> m35_93  [key=2, style=dotted];
m35_173 -> m35_174  [key=0, style=solid];
m35_173 -> m35_94  [key=2, style=dotted];
m35_174 -> m35_170  [color=blue, key=0, style=bold];
m35_20 -> m35_18  [color=blue, key=0, style=bold];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_20  [key=2, style=dotted];
m35_9 -> m35_10  [color=green, key=0, style=solid];
m35_9 -> n35  [key=2, style=dotted];
m35_9 -> m35_24  [key=2, style=dotted];
m35_9 -> m35_25  [key=2, style=dotted];
m35_9 -> m35_26  [key=2, style=dotted];
m35_9 -> m35_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_10 -> m35_11  [color=green, key=0, style=solid];
m35_10 -> m35_8  [color=green, key=2, style=dotted];
m35_10 -> m35_4  [color=green, key=2, style=dotted];
m35_10 -> m35_27  [key=2, style=dotted];
m35_11 -> m35_9  [color=blue, key=0, style=bold];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_21  [key=2, style=dotted];
m35_11 -> m35_22  [key=2, style=dotted];
m35_11 -> m35_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_111 -> m35_112  [key=0, style=solid];
m35_112 -> m35_113  [key=0, style=solid];
m35_112 -> m35_93  [key=2, style=dotted];
m35_113 -> m35_114  [key=0, style=solid];
m35_113 -> m35_94  [key=2, style=dotted];
m35_114 -> m35_115  [key=0, style=solid];
m35_114 -> m35_120  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_114 -> m35_116  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_114 -> m35_128  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_114 -> m35_117  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_114 -> m35_135  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_115 -> m35_116  [key=0, style=solid];
m35_115 -> m35_95  [key=2, style=dotted];
m35_115 -> m35_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_116 -> m35_117  [key=0, style=solid];
m35_116 -> m35_95  [key=2, style=dotted];
m35_116 -> m35_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_117 -> m35_118  [key=0, style=solid];
m35_117 -> m35_95  [key=2, style=dotted];
m35_117 -> m35_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_118 -> m35_111  [color=blue, key=0, style=bold];
m35_140 -> m35_141  [key=0, style=solid];
m35_141 -> m35_142  [key=0, style=solid];
m35_141 -> m35_21  [key=2, style=dotted];
m35_141 -> m35_22  [key=2, style=dotted];
m35_141 -> m35_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_142 -> m35_143  [key=0, style=solid];
m35_142 -> m35_93  [key=2, style=dotted];
m35_143 -> m35_144  [key=0, style=solid];
m35_143 -> m35_94  [key=2, style=dotted];
m35_144 -> m35_145  [key=0, style=solid];
m35_144 -> m35_95  [key=2, style=dotted];
m35_144 -> m35_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_145 -> m35_146  [key=0, style=solid];
m35_145 -> m35_95  [key=2, style=dotted];
m35_145 -> m35_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_146 -> m35_140  [color=blue, key=0, style=bold];
m35_12 -> m35_13  [color=green, key=0, style=solid];
m35_12 -> m35_21  [key=2, style=dotted];
m35_12 -> m35_28  [key=2, style=dotted];
m35_12 -> m35_22  [key=2, style=dotted];
m35_12 -> m35_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_13 -> m35_14  [color=green, key=0, style=solid];
m35_13 -> m35_3  [color=green, key=2, style=dotted];
m35_13 -> n35  [color=green, key=2, style=dotted];
m35_13 -> m35_16  [color=green, key=2, style=dotted];
m35_13 -> m35_122  [color=green, key=2, style=dotted];
m35_13 -> m35_21  [key=2, style=dotted];
m35_13 -> m35_22  [key=2, style=dotted];
m35_13 -> m35_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_14 -> m35_12  [color=blue, key=0, style=bold];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_29  [key=2, style=dotted];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_21  [key=2, style=dotted];
m35_16 -> m35_22  [key=2, style=dotted];
m35_16 -> m35_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_74 -> m35_75  [key=0, style=solid];
m35_75 -> m35_76  [key=0, style=solid];
m35_75 -> m35_34  [key=2, style=dotted];
m35_75 -> m35_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_76 -> m35_77  [key=0, style=solid];
m35_76 -> m35_69  [key=2, style=dotted];
m35_77 -> m35_74  [color=blue, key=0, style=bold];
m35_93 -> m35_272  [key=0, style=solid];
m35_272 -> m35_273  [key=0, style=solid];
m35_272 -> m35_73  [key=2, style=dotted];
m35_273 -> m35_93  [color=blue, key=0, style=bold];
m35_200 -> m35_201  [key=0, style=solid];
m35_201 -> m35_202  [key=0, style=solid];
m35_201 -> m35_208  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m35_202 -> m35_203  [key=0, style=solid];
m35_202 -> m35_206  [key=2, style=dotted];
m35_203 -> m35_204  [key=0, style=solid];
m35_203 -> m35_93  [key=2, style=dotted];
m35_204 -> m35_205  [key=0, style=solid];
m35_204 -> m35_94  [key=2, style=dotted];
m35_205 -> m35_200  [color=blue, key=0, style=bold];
m35_222 -> m35_223  [key=0, style=solid];
m35_223 -> m35_224  [key=0, style=solid];
m35_223 -> m35_229  [key=2, style=dotted];
m35_223 -> m35_227  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m35_223 -> m35_231  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m35_224 -> m35_225  [key=0, style=solid];
m35_224 -> m35_166  [key=2, style=dotted];
m35_227 -> m35_228  [key=0, style=solid];
m35_227 -> m35_95  [key=2, style=dotted];
m35_227 -> m35_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_225 -> m35_226  [key=0, style=solid];
m35_225 -> m35_93  [key=2, style=dotted];
m35_226 -> m35_227  [key=0, style=solid];
m35_226 -> m35_94  [key=2, style=dotted];
m35_228 -> m35_222  [color=blue, key=0, style=bold];
m35_245 -> m35_246  [key=0, style=solid];
m35_246 -> m35_247  [key=0, style=solid];
m35_246 -> m35_206  [key=2, style=dotted];
m35_247 -> m35_248  [key=0, style=solid];
m35_247 -> m35_93  [key=2, style=dotted];
m35_248 -> m35_249  [key=0, style=solid];
m35_248 -> m35_94  [key=2, style=dotted];
m35_249 -> m35_250  [key=0, style=solid];
m35_249 -> m35_95  [key=2, style=dotted];
m35_249 -> m35_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_250 -> m35_245  [color=blue, key=0, style=bold];
m35_25 -> m35_22  [color=blue, key=0, style=bold];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_21  [key=2, style=dotted];
m35_4 -> m35_22  [key=2, style=dotted];
m35_4 -> m35_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_15 -> m35_16  [key=0, style=solid];
m35_15 -> m35_30  [key=2, style=dotted];
m35_17 -> m35_0  [color=blue, key=0, style=bold];
m35_99 -> m35_100  [key=0, style=solid];
m35_100 -> m35_101  [key=0, style=solid];
m35_101 -> m35_102  [key=0, style=solid];
m35_101 -> m35_93  [key=2, style=dotted];
m35_102 -> m35_103  [key=0, style=solid];
m35_102 -> m35_94  [key=2, style=dotted];
m35_103 -> m35_104  [key=0, style=solid];
m35_103 -> m35_95  [key=2, style=dotted];
m35_103 -> m35_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_104 -> m35_99  [color=blue, key=0, style=bold];
m35_213 -> m35_214  [key=0, style=solid];
m35_214 -> m35_215  [key=0, style=solid];
m35_215 -> m35_216  [key=0, style=solid];
m35_215 -> m35_93  [key=2, style=dotted];
m35_216 -> m35_217  [key=0, style=solid];
m35_216 -> m35_94  [key=2, style=dotted];
m35_217 -> m35_218  [key=0, style=solid];
m35_217 -> m35_95  [key=2, style=dotted];
m35_217 -> m35_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_218 -> m35_213  [color=blue, key=0, style=bold];
m35_88 -> m35_89  [key=0, style=solid];
m35_89 -> m35_90  [key=0, style=solid];
m35_89 -> m35_93  [key=2, style=dotted];
m35_90 -> m35_91  [key=0, style=solid];
m35_90 -> m35_94  [key=2, style=dotted];
m35_91 -> m35_92  [key=0, style=solid];
m35_91 -> m35_95  [key=2, style=dotted];
m35_91 -> m35_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_92 -> m35_88  [color=blue, key=0, style=bold];
m35_233 -> m35_234  [key=0, style=solid];
m35_234 -> m35_235  [key=0, style=solid];
m35_234 -> m35_166  [key=2, style=dotted];
m35_235 -> m35_236  [key=0, style=solid];
m35_235 -> m35_93  [key=2, style=dotted];
m35_236 -> m35_237  [key=0, style=solid];
m35_236 -> m35_94  [key=2, style=dotted];
m35_237 -> m35_238  [key=0, style=solid];
m35_237 -> m35_95  [key=2, style=dotted];
m35_237 -> m35_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_238 -> m35_233  [color=blue, key=0, style=bold];
m35_184 -> m35_185  [key=0, style=solid];
m35_185 -> m35_186  [key=0, style=solid];
m35_185 -> m35_192  [key=2, style=dotted];
m35_185 -> m35_195  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m35_185 -> m35_187  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m35_186 -> m35_187  [key=0, style=solid];
m35_186 -> m35_195  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m35_187 -> m35_188  [key=0, style=solid];
m35_187 -> m35_193  [key=2, style=dotted];
m35_188 -> m35_189  [key=0, style=solid];
m35_189 -> m35_190  [key=0, style=solid];
m35_189 -> m35_93  [key=2, style=dotted];
m35_190 -> m35_191  [key=0, style=solid];
m35_190 -> m35_94  [key=2, style=dotted];
m35_191 -> m35_184  [color=blue, key=0, style=bold];
m35_269 -> m35_270  [key=0, style=solid];
m35_31 -> m35_32  [key=0, style=solid];
m35_36 -> m35_37  [key=0, style=solid];
m35_39 -> m35_40  [key=0, style=solid];
m35_45 -> m35_46  [key=0, style=solid];
m35_49 -> m35_50  [key=0, style=solid];
m35_53 -> m35_54  [key=0, style=solid];
m35_57 -> m35_58  [key=0, style=solid];
m35_61 -> m35_62  [key=0, style=solid];
m35_32 -> m35_33  [key=0, style=solid];
m35_32 -> m35_34  [key=2, style=dotted];
m35_32 -> m35_35  [key=2, style=dotted];
m35_33 -> m35_31  [color=blue, key=0, style=bold];
m35_37 -> m35_38  [key=0, style=solid];
m35_38 -> m35_36  [color=blue, key=0, style=bold];
m35_40 -> m35_41  [key=0, style=solid];
m35_41 -> m35_39  [color=blue, key=0, style=bold];
m35_42 -> m35_43  [key=0, style=solid];
m35_43 -> m35_44  [key=0, style=solid];
m35_44 -> m35_42  [color=blue, key=0, style=bold];
m35_46 -> m35_47  [key=0, style=solid];
m35_46 -> m35_48  [key=2, style=dotted];
m35_47 -> m35_45  [color=blue, key=0, style=bold];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_52  [key=2, style=dotted];
m35_51 -> m35_49  [color=blue, key=0, style=bold];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_56  [key=2, style=dotted];
m35_55 -> m35_53  [color=blue, key=0, style=bold];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_60  [key=2, style=dotted];
m35_59 -> m35_57  [color=blue, key=0, style=bold];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_34  [key=2, style=dotted];
m35_62 -> m35_64  [key=2, style=dotted];
m35_63 -> m35_61  [color=blue, key=0, style=bold];
m35_70 -> m35_71  [key=0, style=solid];
m35_71 -> m35_72  [key=0, style=solid];
m35_71 -> m35_73  [key=2, style=dotted];
m35_72 -> m35_70  [color=blue, key=0, style=bold];
m35_78 -> m35_79  [key=0, style=solid];
m35_79 -> m35_80  [key=0, style=solid];
m35_79 -> m35_73  [key=2, style=dotted];
m35_80 -> m35_78  [color=blue, key=0, style=bold];
m35_85 -> m35_86  [key=0, style=solid];
m35_86 -> m35_87  [key=0, style=solid];
m35_86 -> m35_73  [key=2, style=dotted];
m35_87 -> m35_85  [color=blue, key=0, style=bold];
m35_96 -> m35_97  [key=0, style=solid];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> m35_34  [key=2, style=dotted];
m35_97 -> m35_64  [key=2, style=dotted];
m35_98 -> m35_96  [color=blue, key=0, style=bold];
m35_105 -> m35_106  [key=0, style=solid];
m35_106 -> m35_107  [key=0, style=solid];
m35_106 -> m35_34  [key=2, style=dotted];
m35_106 -> m35_64  [key=2, style=dotted];
m35_106 -> m35_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_107 -> m35_105  [color=blue, key=0, style=bold];
m35_108 -> m35_109  [key=0, style=solid];
m35_109 -> m35_110  [key=0, style=solid];
m35_110 -> m35_108  [color=blue, key=0, style=bold];
m35_120 -> m35_121  [key=0, style=solid];
m35_120 -> m35_34  [key=2, style=dotted];
m35_120 -> m35_122  [key=2, style=dotted];
m35_120 -> m35_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_128 -> m35_129  [key=0, style=solid];
m35_128 -> m35_34  [key=2, style=dotted];
m35_128 -> m35_122  [key=2, style=dotted];
m35_128 -> m35_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_135 -> m35_136  [key=0, style=solid];
m35_135 -> m35_34  [key=2, style=dotted];
m35_135 -> m35_122  [key=2, style=dotted];
m35_135 -> m35_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_119 -> m35_120  [key=0, style=solid];
m35_127 -> m35_128  [key=0, style=solid];
m35_134 -> m35_135  [key=0, style=solid];
m35_121 -> m35_119  [color=blue, key=0, style=bold];
m35_123 -> m35_124  [key=0, style=solid];
m35_124 -> m35_125  [key=0, style=solid];
m35_124 -> m35_126  [key=2, style=dotted];
m35_125 -> m35_123  [color=blue, key=0, style=bold];
m35_129 -> m35_127  [color=blue, key=0, style=bold];
m35_130 -> m35_131  [key=0, style=solid];
m35_131 -> m35_132  [key=0, style=solid];
m35_131 -> m35_126  [key=2, style=dotted];
m35_131 -> m35_133  [key=2, style=dotted];
m35_132 -> m35_130  [color=blue, key=0, style=bold];
m35_136 -> m35_134  [color=blue, key=0, style=bold];
m35_137 -> m35_138  [key=0, style=solid];
m35_138 -> m35_139  [key=0, style=solid];
m35_138 -> m35_126  [key=2, style=dotted];
m35_138 -> m35_133  [key=2, style=dotted];
m35_139 -> m35_137  [color=blue, key=0, style=bold];
m35_147 -> m35_148  [key=0, style=solid];
m35_150 -> m35_151  [key=0, style=solid];
m35_153 -> m35_154  [key=0, style=solid];
m35_148 -> m35_149  [key=0, style=solid];
m35_148 -> m35_34  [key=2, style=dotted];
m35_148 -> m35_35  [key=2, style=dotted];
m35_149 -> m35_147  [color=blue, key=0, style=bold];
m35_151 -> m35_152  [key=0, style=solid];
m35_151 -> m35_34  [key=2, style=dotted];
m35_151 -> m35_64  [key=2, style=dotted];
m35_152 -> m35_150  [color=blue, key=0, style=bold];
m35_154 -> m35_155  [key=0, style=solid];
m35_154 -> m35_34  [key=2, style=dotted];
m35_154 -> m35_122  [key=2, style=dotted];
m35_154 -> m35_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_155 -> m35_153  [color=blue, key=0, style=bold];
m35_156 -> m35_157  [key=0, style=solid];
m35_157 -> m35_158  [key=0, style=solid];
m35_157 -> m35_126  [key=2, style=dotted];
m35_157 -> m35_133  [key=2, style=dotted];
m35_158 -> m35_156  [color=blue, key=0, style=bold];
m35_168 -> m35_169  [key=0, style=solid];
m35_168 -> m35_35  [key=2, style=dotted];
m35_167 -> m35_168  [key=0, style=solid];
m35_169 -> m35_167  [color=blue, key=0, style=bold];
m35_175 -> m35_176  [key=0, style=solid];
m35_176 -> m35_177  [key=0, style=solid];
m35_176 -> m35_34  [key=2, style=dotted];
m35_176 -> m35_56  [key=2, style=dotted];
m35_177 -> m35_175  [color=blue, key=0, style=bold];
m35_195 -> m35_196  [key=0, style=solid];
m35_195 -> m35_197  [key=0, style=solid];
m35_194 -> m35_195  [key=0, style=solid];
m35_196 -> m35_198  [key=0, style=solid];
m35_196 -> m35_199  [key=2, style=dotted];
m35_197 -> m35_198  [key=0, style=solid];
m35_198 -> m35_194  [color=blue, key=0, style=bold];
m35_208 -> m35_209  [key=0, style=solid];
m35_208 -> m35_210  [key=0, style=solid];
m35_208 -> m35_212  [key=2, style=dotted];
m35_207 -> m35_208  [key=0, style=solid];
m35_209 -> m35_211  [key=0, style=solid];
m35_209 -> m35_199  [key=2, style=dotted];
m35_210 -> m35_211  [key=0, style=solid];
m35_211 -> m35_207  [color=blue, key=0, style=bold];
m35_219 -> m35_220  [key=0, style=solid];
m35_220 -> m35_221  [key=0, style=solid];
m35_220 -> m35_34  [key=2, style=dotted];
m35_220 -> m35_64  [key=2, style=dotted];
m35_221 -> m35_219  [color=blue, key=0, style=bold];
m35_231 -> m35_232  [key=0, style=solid];
m35_231 -> m35_35  [key=2, style=dotted];
m35_230 -> m35_231  [key=0, style=solid];
m35_232 -> m35_230  [color=blue, key=0, style=bold];
m35_239 -> m35_240  [key=0, style=solid];
m35_240 -> m35_241  [key=0, style=solid];
m35_240 -> m35_34  [key=2, style=dotted];
m35_240 -> m35_122  [key=2, style=dotted];
m35_240 -> m35_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_241 -> m35_239  [color=blue, key=0, style=bold];
m35_242 -> m35_243  [key=0, style=solid];
m35_243 -> m35_244  [key=0, style=solid];
m35_243 -> m35_126  [key=2, style=dotted];
m35_244 -> m35_242  [color=blue, key=0, style=bold];
m35_251 -> m35_252  [key=0, style=solid];
m35_252 -> m35_253  [key=0, style=solid];
m35_252 -> m35_34  [key=2, style=dotted];
m35_252 -> m35_122  [key=2, style=dotted];
m35_252 -> m35_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_253 -> m35_251  [color=blue, key=0, style=bold];
m35_254 -> m35_255  [key=0, style=solid];
m35_255 -> m35_256  [key=0, style=solid];
m35_255 -> m35_126  [key=2, style=dotted];
m35_256 -> m35_254  [color=blue, key=0, style=bold];
m35_267 -> m35_268  [key=0, style=solid];
m35_267 -> m35_34  [key=2, style=dotted];
m35_267 -> m35_35  [key=2, style=dotted];
m35_267 -> m35_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_270 -> m35_271  [key=0, style=solid];
m35_266 -> m35_267  [key=0, style=solid];
m35_268 -> m35_266  [color=blue, key=0, style=bold];
m35_271 -> m35_269  [color=blue, key=0, style=bold];
m35_65 -> m35_66  [key=0, style=solid];
m35_66 -> m35_67  [key=0, style=solid];
m35_66 -> m35_34  [key=2, style=dotted];
m35_66 -> m35_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_67 -> m35_68  [key=0, style=solid];
m35_67 -> m35_69  [key=2, style=dotted];
m35_68 -> m35_65  [color=blue, key=0, style=bold];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_81 -> m35_82  [key=0, style=solid];
m35_82 -> m35_83  [key=0, style=solid];
m35_82 -> m35_34  [key=2, style=dotted];
m35_82 -> m35_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_83 -> m35_84  [key=0, style=solid];
m35_83 -> m35_69  [key=2, style=dotted];
m35_84 -> m35_81  [color=blue, key=0, style=bold];
m35_178 -> m35_179  [key=0, style=solid];
m35_179 -> m35_180  [key=0, style=solid];
m35_179 -> m35_183  [key=2, style=dotted];
m35_179 -> m35_26  [key=2, style=dotted];
m35_180 -> m35_181  [key=0, style=solid];
m35_180 -> m35_93  [key=2, style=dotted];
m35_181 -> m35_182  [key=0, style=solid];
m35_181 -> m35_94  [key=2, style=dotted];
m35_182 -> m35_178  [color=blue, key=0, style=bold];
m35_23 -> m35_3  [key=2, style=dotted];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_26  [key=2, style=dotted];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_27  [key=2, style=dotted];
m35_274 -> m35_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_16  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_128  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_142  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_143  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_145  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_161  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_162  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_163  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_172  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_180  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_181  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_186  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_197  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_189  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_210  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_202  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_203  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_204  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_214  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_225  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_226  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_227  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_234  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_235  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_236  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_237  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_246  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_247  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_249  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_260  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_261  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_262  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_263  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_264  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_274 -> m35_272  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m35_275 -> m35_120  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_275 -> m35_128  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_275 -> m35_135  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m35_276 -> m35_168  [color=darkseagreen4, key=1, label=time, style=dashed];
m35_277 -> m35_195  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m35_278 -> m35_231  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m35_279 -> m35_267  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m35_279 -> m35_270  [color=darkseagreen4, key=1, label=nextExecution, style=dashed];
m36_0 -> m36_1  [color=green, key=0, style=solid];
m36_1 -> m36_2  [color=green, key=0, style=solid];
m36_1 -> m36_6  [color=green, key=2, style=dotted];
m36_1 -> m36_3  [color=green, key=1, label=job, style=dashed];
m36_2 -> m36_3  [color=green, key=0, style=solid];
m36_2 -> m36_7  [color=green, key=2, style=dotted];
m36_2 -> m36_4  [color=green, key=1, label=worker, style=dashed];
m36_3 -> m36_4  [color=green, key=0, style=solid];
m36_4 -> m36_5  [color=green, key=0, style=solid];
m36_4 -> m36_8  [color=green, key=2, style=dotted];
m36_5 -> m36_0  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [color=green, key=0, style=solid];
m37_0 -> m37_2  [color=green, key=1, label="System.Exception", style=dashed];
m37_1 -> m37_2  [color=green, key=0, style=solid];
m37_2 -> m37_3  [color=green, key=0, style=solid];
m37_3 -> m37_0  [color=blue, key=0, style=bold];
m37_4 -> m37_1  [color=green, key=1, label="HangFire.Filters.PerformedContext", style=dashed];
m37_4 -> m37_2  [color=green, key=1, label="HangFire.Filters.PerformedContext", style=dashed];
m38_45 -> m38_46  [key=0, style=solid];
m38_46 -> m38_47  [key=0, style=solid];
m38_46 -> m38_49  [key=2, style=dotted];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_36  [key=2, style=dotted];
m38_48 -> m38_45  [color=blue, key=0, style=bold];
m38_4 -> m38_5  [key=0, style=solid];
m38_5 -> m38_4  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_0  [color=blue, key=0, style=bold];
m38_73 -> m38_74  [key=0, style=solid];
m38_74 -> m38_73  [color=blue, key=0, style=bold];
m38_41 -> m38_70  [key=0, style=solid];
m38_70 -> m38_71  [key=0, style=solid];
m38_70 -> m38_72  [key=2, style=dotted];
m38_71 -> m38_41  [color=blue, key=0, style=bold];
m38_75 -> m38_76  [key=0, style=solid];
m38_76 -> m38_75  [color=blue, key=0, style=bold];
m38_42 -> m38_43  [key=0, style=solid];
m38_43 -> m38_44  [key=0, style=solid];
m38_44 -> m38_42  [color=blue, key=0, style=bold];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_10  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m38_8 -> m38_11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m38_8 -> m38_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m38_8 -> m38_15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m38_8 -> m38_19  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_21  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m38_8 -> m38_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m38_8 -> m38_24  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_26  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_27  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m38_8 -> m38_28  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_11  [key=0, style=solid];
m38_10 -> m38_29  [key=0, style=solid];
m38_10 -> m38_30  [key=2, style=dotted];
m38_10 -> m38_31  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_13  [key=0, style=solid];
m38_12 -> m38_29  [key=0, style=solid];
m38_12 -> m38_30  [key=2, style=dotted];
m38_12 -> m38_31  [key=2, style=dotted];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_15  [key=0, style=solid];
m38_14 -> m38_29  [key=0, style=solid];
m38_14 -> m38_30  [key=2, style=dotted];
m38_14 -> m38_31  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid];
m38_18 -> m38_19  [key=0, style=solid];
m38_18 -> m38_34  [key=2, style=dotted];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_35  [key=2, style=dotted];
m38_19 -> m38_28  [color=darkseagreen4, key=1, label=properties, style=dashed];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_36  [key=2, style=dotted];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_37  [key=2, style=dotted];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_36  [key=2, style=dotted];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_38  [key=2, style=dotted];
m38_25 -> m38_39  [key=2, style=dotted];
m38_25 -> m38_36  [key=2, style=dotted];
m38_25 -> m38_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_36  [key=2, style=dotted];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_36  [key=2, style=dotted];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_40  [key=2, style=dotted];
m38_28 -> m38_41  [key=2, style=dotted];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_32  [key=2, style=dotted];
m38_16 -> m38_18  [color=darkseagreen4, key=1, label=processes, style=dashed];
m38_16 -> m38_28  [color=darkseagreen4, key=1, label=processes, style=dashed];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_33  [key=2, style=dotted];
m38_17 -> m38_34  [key=2, style=dotted];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_36  [key=2, style=dotted];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_36  [key=2, style=dotted];
m38_29 -> m38_8  [color=blue, key=0, style=bold];
m38_33 -> m38_50  [key=0, style=solid];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_32  [key=2, style=dotted];
m38_50 -> m38_57  [color=darkseagreen4, key=1, label=processes, style=dashed];
m38_50 -> m38_59  [color=darkseagreen4, key=1, label=processes, style=dashed];
m38_50 -> m38_60  [color=darkseagreen4, key=1, label=processes, style=dashed];
m38_50 -> m38_61  [color=darkseagreen4, key=1, label=processes, style=dashed];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_53  [color=darkseagreen4, key=1, label=filterProvider, style=dashed];
m38_51 -> m38_54  [color=darkseagreen4, key=1, label=filterProvider, style=dashed];
m38_57 -> m38_58  [key=0, style=solid];
m38_57 -> m38_66  [key=2, style=dotted];
m38_57 -> m38_67  [key=2, style=dotted];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_68  [key=2, style=dotted];
m38_59 -> m38_67  [key=2, style=dotted];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_69  [key=2, style=dotted];
m38_60 -> m38_67  [key=2, style=dotted];
m38_61 -> m38_62  [key=0, style=solid];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_63  [key=2, style=dotted];
m38_52 -> m38_60  [color=darkseagreen4, key=1, label=factory, style=dashed];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> n64  [key=2, style=dotted];
m38_53 -> m38_57  [color=darkseagreen4, key=1, label=performer, style=dashed];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_65  [key=2, style=dotted];
m38_54 -> m38_57  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
m38_54 -> m38_59  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_56 -> m38_57  [key=0, style=solid];
m38_56 -> m38_59  [key=0, style=solid];
m38_58 -> m38_56  [key=0, style=solid];
m38_58 -> m38_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_62 -> m38_33  [color=blue, key=0, style=bold];
m38_6 -> m38_7  [key=0, style=solid];
m38_7 -> m38_6  [color=blue, key=0, style=bold];
m38_2 -> m38_3  [key=0, style=solid];
m38_3 -> m38_2  [color=blue, key=0, style=bold];
m38_77 -> m38_15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_28  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_46  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_51  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_53  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_56  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_57  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_59  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m38_77 -> m38_70  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m39_24 -> m39_25  [key=0, style=solid];
m39_24 -> m39_28  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformedContext", style=dashed];
m39_24 -> m39_29  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformedContext", style=dashed];
m39_24 -> m39_30  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformedContext", style=dashed];
m39_24 -> m39_31  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformedContext", style=dashed];
m39_25 -> m39_26  [key=0, style=solid];
m39_25 -> m39_27  [key=0, style=solid];
m39_28 -> m39_29  [key=0, style=solid];
m39_28 -> m39_30  [key=0, style=solid];
m39_28 -> m39_33  [key=2, style=dotted];
m39_29 -> m39_30  [key=0, style=solid];
m39_30 -> m39_31  [key=0, style=solid];
m39_30 -> m39_32  [key=0, style=solid];
m39_30 -> m39_33  [key=2, style=dotted];
m39_31 -> m39_32  [key=0, style=solid];
m39_26 -> m39_32  [key=0, style=solid];
m39_26 -> n30  [key=2, style=dotted];
m39_27 -> m39_28  [key=0, style=solid];
m39_27 -> m39_29  [color=darkseagreen4, key=1, label=thread, style=dashed];
m39_27 -> m39_31  [color=darkseagreen4, key=1, label=thread, style=dashed];
m39_32 -> m39_24  [color=blue, key=0, style=bold];
m39_8 -> m39_9  [key=0, style=solid];
m39_8 -> m39_11  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformingContext", style=dashed];
m39_8 -> m39_12  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformingContext", style=dashed];
m39_8 -> m39_15  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformingContext", style=dashed];
m39_8 -> m39_18  [color=darkseagreen4, key=1, label="HangFire.Filters.JobPerformingContext", style=dashed];
m39_9 -> m39_10  [key=0, style=solid];
m39_9 -> m39_11  [key=0, style=solid];
m39_11 -> m39_12  [key=0, style=solid];
m39_11 -> m39_21  [key=2, style=dotted];
m39_11 -> m39_14  [color=darkseagreen4, key=1, label=cultureName, style=dashed];
m39_11 -> m39_16  [color=darkseagreen4, key=1, label=cultureName, style=dashed];
m39_12 -> m39_13  [key=0, style=solid];
m39_12 -> m39_21  [key=2, style=dotted];
m39_12 -> m39_17  [color=darkseagreen4, key=1, label=uiCultureName, style=dashed];
m39_12 -> m39_19  [color=darkseagreen4, key=1, label=uiCultureName, style=dashed];
m39_15 -> m39_16  [key=0, style=solid];
m39_18 -> m39_19  [key=0, style=solid];
m39_10 -> m39_20  [key=0, style=solid];
m39_10 -> n30  [key=2, style=dotted];
m39_14 -> m39_15  [key=0, style=solid];
m39_14 -> m39_17  [key=0, style=solid];
m39_14 -> m39_22  [key=2, style=dotted];
m39_16 -> m39_17  [key=0, style=solid];
m39_16 -> m39_23  [key=2, style=dotted];
m39_13 -> m39_14  [key=0, style=solid];
m39_13 -> m39_15  [color=darkseagreen4, key=1, label=thread, style=dashed];
m39_13 -> m39_16  [color=darkseagreen4, key=1, label=thread, style=dashed];
m39_13 -> m39_18  [color=darkseagreen4, key=1, label=thread, style=dashed];
m39_13 -> m39_19  [color=darkseagreen4, key=1, label=thread, style=dashed];
m39_17 -> m39_18  [key=0, style=solid];
m39_17 -> m39_20  [key=0, style=solid];
m39_17 -> m39_22  [key=2, style=dotted];
m39_19 -> m39_20  [key=0, style=solid];
m39_19 -> m39_23  [key=2, style=dotted];
m39_20 -> m39_8  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [key=0, style=solid];
m39_0 -> m39_3  [color=darkseagreen4, key=1, label="HangFire.Filters.JobEnqueueingContext", style=dashed];
m39_0 -> m39_4  [color=darkseagreen4, key=1, label="HangFire.Filters.JobEnqueueingContext", style=dashed];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_3  [key=0, style=solid];
m39_3 -> m39_4  [key=0, style=solid];
m39_3 -> m39_7  [key=2, style=dotted];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_7  [key=2, style=dotted];
m39_2 -> m39_5  [key=0, style=solid];
m39_2 -> n30  [key=2, style=dotted];
m39_5 -> m39_0  [color=blue, key=0, style=bold];
m40_20 -> m40_21  [key=0, style=solid];
m40_21 -> m40_22  [key=0, style=solid];
m40_21 -> m40_13  [key=2, style=dotted];
m40_22 -> m40_20  [color=blue, key=0, style=bold];
m40_23 -> m40_24  [key=0, style=solid];
m40_24 -> m40_25  [key=0, style=solid];
m40_24 -> m40_31  [color=green, key=1, label=concurrency, style=dashed];
m40_25 -> m40_26  [key=0, style=solid];
m40_25 -> m40_60  [key=2, style=dotted];
m40_31 -> m40_32  [color=green, key=0, style=solid];
m40_31 -> m40_65  [color=green, key=2, style=dotted];
m40_26 -> m40_27  [key=0, style=solid];
m40_27 -> m40_28  [key=0, style=solid];
m40_28 -> m40_29  [key=0, style=solid];
m40_28 -> m40_61  [key=2, style=dotted];
m40_28 -> m40_62  [key=2, style=dotted];
m40_29 -> m40_30  [key=0, style=solid];
m40_29 -> m40_63  [key=2, style=dotted];
m40_29 -> m40_62  [key=2, style=dotted];
m40_30 -> m40_31  [color=green, key=0, style=solid];
m40_30 -> m40_64  [key=2, style=dotted];
m40_30 -> m40_62  [key=2, style=dotted];
m40_32 -> m40_33  [key=0, style=solid];
m40_32 -> m40_66  [key=2, style=dotted];
m40_33 -> m40_34  [key=0, style=solid];
m40_33 -> m40_13  [key=2, style=dotted];
m40_34 -> m40_35  [key=0, style=solid];
m40_34 -> m40_42  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_34 -> m40_55  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_34 -> m40_34  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m40_35 -> m40_36  [key=0, style=solid];
m40_35 -> m40_59  [key=0, style=solid];
m40_42 -> m40_43  [key=0, style=solid];
m40_42 -> m40_72  [key=2, style=dotted];
m40_42 -> m40_42  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_42 -> m40_55  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_55 -> m40_56  [key=0, style=solid];
m40_55 -> m40_11  [key=2, style=dotted];
m40_55 -> m40_73  [key=2, style=dotted];
m40_55 -> m40_55  [color=darkseagreen4, key=1, label=count, style=dashed];
m40_36 -> m40_37  [key=0, style=solid];
m40_36 -> m40_67  [key=2, style=dotted];
m40_36 -> m40_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_39  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_47  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_48  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_53  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_54  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_36 -> m40_56  [color=darkseagreen4, key=1, label=command, style=dashed];
m40_37 -> m40_38  [key=0, style=solid];
m40_37 -> m40_59  [key=0, style=solid];
m40_37 -> m40_68  [key=2, style=dotted];
m40_38 -> m40_39  [key=0, style=solid];
m40_38 -> m40_47  [key=0, style=solid];
m40_38 -> m40_69  [key=2, style=dotted];
m40_39 -> m40_40  [key=0, style=solid];
m40_39 -> m40_70  [key=2, style=dotted];
m40_39 -> m40_71  [key=2, style=dotted];
m40_39 -> m40_41  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m40_47 -> m40_48  [key=0, style=solid];
m40_47 -> m40_53  [key=0, style=solid];
m40_47 -> m40_69  [key=2, style=dotted];
m40_48 -> m40_49  [key=0, style=solid];
m40_48 -> m40_70  [key=2, style=dotted];
m40_48 -> m40_71  [key=2, style=dotted];
m40_48 -> m40_50  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m40_53 -> m40_54  [key=0, style=solid];
m40_53 -> m40_56  [key=0, style=solid];
m40_53 -> m40_69  [key=2, style=dotted];
m40_54 -> m40_55  [key=0, style=solid];
m40_54 -> m40_70  [key=2, style=dotted];
m40_54 -> m40_71  [key=2, style=dotted];
m40_56 -> m40_57  [key=0, style=solid];
m40_56 -> m40_35  [key=0, style=solid];
m40_56 -> m40_69  [key=2, style=dotted];
m40_40 -> m40_41  [key=0, style=solid];
m40_40 -> m40_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_40 -> m40_40  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m40_41 -> m40_42  [key=0, style=solid];
m40_41 -> m40_44  [key=0, style=solid];
m40_43 -> m40_41  [key=0, style=solid];
m40_43 -> m40_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_44 -> m40_45  [key=0, style=solid];
m40_44 -> m40_47  [key=0, style=solid];
m40_44 -> m40_13  [key=2, style=dotted];
m40_45 -> m40_46  [key=0, style=solid];
m40_46 -> m40_47  [key=0, style=solid];
m40_46 -> m40_13  [key=2, style=dotted];
m40_49 -> m40_50  [key=0, style=solid];
m40_49 -> m40_52  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_49 -> m40_40  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m40_50 -> m40_51  [key=0, style=solid];
m40_50 -> m40_53  [key=0, style=solid];
m40_52 -> m40_50  [key=0, style=solid];
m40_52 -> m40_52  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_51 -> m40_52  [key=0, style=solid];
m40_51 -> m40_72  [key=2, style=dotted];
m40_57 -> m40_58  [key=0, style=solid];
m40_57 -> m40_74  [key=2, style=dotted];
m40_58 -> m40_35  [key=0, style=solid];
m40_58 -> m40_13  [key=2, style=dotted];
m40_59 -> m40_23  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_2 -> m40_3  [key=0, style=solid];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> m40_9  [key=2, style=dotted];
m40_3 -> m40_6  [color=darkseagreen4, key=1, label=time, style=dashed];
m40_4 -> m40_5  [key=0, style=solid];
m40_4 -> m40_6  [key=0, style=solid];
m40_6 -> m40_7  [key=0, style=solid];
m40_6 -> m40_11  [key=2, style=dotted];
m40_6 -> m40_12  [key=2, style=dotted];
m40_5 -> m40_8  [key=0, style=solid];
m40_5 -> m40_10  [key=2, style=dotted];
m40_7 -> m40_8  [key=0, style=solid];
m40_7 -> m40_13  [key=2, style=dotted];
m40_8 -> m40_0  [color=blue, key=0, style=bold];
m40_14 -> m40_15  [key=0, style=solid];
m40_15 -> m40_16  [key=0, style=solid];
m40_15 -> m40_13  [key=2, style=dotted];
m40_16 -> m40_17  [key=0, style=solid];
m40_16 -> m40_18  [key=2, style=dotted];
m40_16 -> m40_19  [key=2, style=dotted];
m40_17 -> m40_14  [color=blue, key=0, style=bold];
m40_75 -> m40_7  [color=darkseagreen4, key=1, label="ConsoleSample.ConsoleJob", style=dashed];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid];
m41_1 -> m41_49  [key=2, style=dotted];
m41_2 -> m41_3  [key=0, style=solid];
m41_2 -> m41_50  [key=2, style=dotted];
m41_3 -> m41_4  [key=0, style=solid];
m41_4 -> m41_5  [key=0, style=solid];
m41_4 -> m41_51  [key=2, style=dotted];
m41_5 -> m41_6  [key=0, style=solid];
m41_5 -> m41_52  [key=2, style=dotted];
m41_5 -> m41_7  [color=darkseagreen4, key=1, label=queues, style=dashed];
m41_5 -> m41_10  [color=darkseagreen4, key=1, label=queues, style=dashed];
m41_6 -> m41_7  [key=0, style=solid];
m41_6 -> m41_49  [key=2, style=dotted];
m41_7 -> m41_8  [key=0, style=solid];
m41_7 -> m41_9  [key=0, style=solid];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_47  [key=0, style=solid];
m41_10 -> m41_12  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_10 -> m41_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_10 -> m41_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_10 -> m41_18  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_10 -> m41_20  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_10 -> m41_22  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_10 -> m41_25  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_8 -> m41_48  [key=0, style=solid];
m41_8 -> m41_49  [key=2, style=dotted];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_49  [key=2, style=dotted];
m41_11 -> m41_12  [key=0, style=solid];
m41_11 -> m41_49  [key=2, style=dotted];
m41_47 -> m41_48  [key=0, style=solid];
m41_47 -> m41_49  [key=2, style=dotted];
m41_12 -> m41_13  [key=0, style=solid];
m41_12 -> m41_53  [key=2, style=dotted];
m41_12 -> m41_54  [key=2, style=dotted];
m41_14 -> m41_15  [key=0, style=solid];
m41_14 -> m41_54  [key=2, style=dotted];
m41_16 -> m41_17  [key=0, style=solid];
m41_16 -> m41_54  [key=2, style=dotted];
m41_18 -> m41_19  [key=0, style=solid];
m41_18 -> m41_53  [key=2, style=dotted];
m41_18 -> m41_54  [key=2, style=dotted];
m41_20 -> m41_21  [key=0, style=solid];
m41_20 -> m41_54  [key=2, style=dotted];
m41_22 -> m41_23  [key=0, style=solid];
m41_22 -> m41_24  [key=0, style=solid];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_45  [key=0, style=solid];
m41_25 -> m41_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_13 -> m41_14  [key=0, style=solid];
m41_13 -> m41_49  [key=2, style=dotted];
m41_15 -> m41_16  [key=0, style=solid];
m41_15 -> m41_49  [key=2, style=dotted];
m41_17 -> m41_18  [key=0, style=solid];
m41_17 -> m41_49  [key=2, style=dotted];
m41_19 -> m41_20  [key=0, style=solid];
m41_19 -> m41_49  [key=2, style=dotted];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_49  [key=2, style=dotted];
m41_23 -> m41_46  [key=0, style=solid];
m41_23 -> m41_49  [key=2, style=dotted];
m41_24 -> m41_25  [key=0, style=solid];
m41_24 -> m41_49  [key=2, style=dotted];
m41_26 -> m41_27  [key=0, style=solid];
m41_26 -> m41_49  [key=2, style=dotted];
m41_45 -> m41_46  [key=0, style=solid];
m41_45 -> m41_49  [key=2, style=dotted];
m41_27 -> m41_28  [key=0, style=solid];
m41_27 -> m41_54  [key=2, style=dotted];
m41_27 -> m41_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_27 -> m41_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_28 -> m41_29  [key=0, style=solid];
m41_28 -> m41_49  [key=2, style=dotted];
m41_29 -> m41_30  [key=0, style=solid];
m41_29 -> m41_53  [key=2, style=dotted];
m41_29 -> m41_54  [key=2, style=dotted];
m41_29 -> m41_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_29 -> m41_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_30 -> m41_31  [key=0, style=solid];
m41_30 -> m41_49  [key=2, style=dotted];
m41_31 -> m41_32  [key=0, style=solid];
m41_31 -> m41_55  [key=2, style=dotted];
m41_31 -> m41_56  [key=2, style=dotted];
m41_31 -> m41_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_31 -> m41_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_32 -> m41_33  [key=0, style=solid];
m41_32 -> m41_49  [key=2, style=dotted];
m41_33 -> m41_34  [key=0, style=solid];
m41_33 -> m41_35  [key=0, style=solid];
m41_33 -> m41_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_33 -> m41_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_34 -> m41_35  [key=0, style=solid];
m41_34 -> m41_49  [key=2, style=dotted];
m41_35 -> m41_36  [key=0, style=solid];
m41_35 -> m41_49  [key=2, style=dotted];
m41_36 -> m41_37  [key=0, style=solid];
m41_36 -> m41_57  [key=2, style=dotted];
m41_36 -> m41_54  [key=2, style=dotted];
m41_36 -> m41_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_36 -> m41_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_37 -> m41_38  [key=0, style=solid];
m41_37 -> m41_49  [key=2, style=dotted];
m41_38 -> m41_39  [key=0, style=solid];
m41_38 -> m41_44  [key=0, style=solid];
m41_38 -> m41_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_38 -> m41_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_39 -> m41_40  [key=0, style=solid];
m41_39 -> m41_49  [key=2, style=dotted];
m41_44 -> m41_25  [key=0, style=solid];
m41_44 -> m41_49  [key=2, style=dotted];
m41_40 -> m41_41  [key=0, style=solid];
m41_40 -> m41_58  [key=2, style=dotted];
m41_40 -> m41_54  [key=2, style=dotted];
m41_40 -> m41_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_40 -> m41_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_41 -> m41_42  [key=0, style=solid];
m41_41 -> m41_49  [key=2, style=dotted];
m41_42 -> m41_43  [key=0, style=solid];
m41_42 -> m41_54  [key=2, style=dotted];
m41_42 -> m41_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_43 -> m41_44  [key=0, style=solid];
m41_43 -> m41_49  [key=2, style=dotted];
m41_46 -> m41_10  [key=0, style=solid];
m41_46 -> m41_49  [key=2, style=dotted];
m41_48 -> m41_0  [color=blue, key=0, style=bold];
m41_59 -> m41_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m41_59 -> m41_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m42_14 -> m42_15  [key=0, style=solid];
m42_15 -> m42_16  [key=0, style=solid];
m42_15 -> m42_10  [key=2, style=dotted];
m42_15 -> m42_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m42_16 -> m42_17  [key=0, style=solid];
m42_16 -> m42_18  [key=2, style=dotted];
m42_16 -> m42_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_17 -> m42_14  [color=blue, key=0, style=bold];
m42_29 -> m42_30  [key=0, style=solid];
m42_30 -> m42_31  [key=0, style=solid];
m42_30 -> m42_10  [key=2, style=dotted];
m42_30 -> m42_11  [key=2, style=dotted];
m42_30 -> m42_34  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m42_31 -> m42_32  [key=0, style=solid];
m42_31 -> m42_18  [key=2, style=dotted];
m42_31 -> m42_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_32 -> m42_29  [color=blue, key=0, style=bold];
m42_22 -> m42_23  [key=0, style=solid];
m42_23 -> m42_24  [key=0, style=solid];
m42_23 -> m42_10  [key=2, style=dotted];
m42_23 -> m42_27  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m42_24 -> m42_25  [key=0, style=solid];
m42_24 -> m42_18  [key=2, style=dotted];
m42_24 -> m42_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_25 -> m42_22  [color=blue, key=0, style=bold];
m42_36 -> m42_37  [key=0, style=solid];
m42_37 -> m42_38  [key=0, style=solid];
m42_37 -> m42_44  [key=2, style=dotted];
m42_37 -> m42_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_38 -> m42_39  [key=0, style=solid];
m42_38 -> m42_45  [key=2, style=dotted];
m42_38 -> m42_40  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m42_38 -> m42_41  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m42_38 -> m42_42  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m42_39 -> m42_40  [key=0, style=solid];
m42_39 -> m42_13  [key=2, style=dotted];
m42_40 -> m42_41  [key=0, style=solid];
m42_40 -> m42_13  [key=2, style=dotted];
m42_41 -> m42_42  [key=0, style=solid];
m42_41 -> m42_11  [key=2, style=dotted];
m42_41 -> m42_13  [key=2, style=dotted];
m42_42 -> m42_43  [key=0, style=solid];
m42_42 -> m42_11  [key=2, style=dotted];
m42_42 -> m42_13  [key=2, style=dotted];
m42_43 -> m42_36  [color=blue, key=0, style=bold];
m42_49 -> m42_50  [key=0, style=solid];
m42_50 -> m42_49  [color=blue, key=0, style=bold];
m42_46 -> m42_47  [key=0, style=solid];
m42_20 -> m42_21  [key=0, style=solid];
m42_20 -> m42_12  [key=2, style=dotted];
m42_19 -> m42_20  [key=0, style=solid];
m42_21 -> m42_19  [color=blue, key=0, style=bold];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_12  [key=2, style=dotted];
m42_26 -> m42_27  [key=0, style=solid];
m42_28 -> m42_26  [color=blue, key=0, style=bold];
m42_34 -> m42_35  [key=0, style=solid];
m42_34 -> m42_12  [key=2, style=dotted];
m42_33 -> m42_34  [key=0, style=solid];
m42_35 -> m42_33  [color=blue, key=0, style=bold];
m42_47 -> m42_48  [key=0, style=solid];
m42_47 -> m42_49  [key=2, style=dotted];
m42_48 -> m42_46  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_3  [color=red, key=1, label=type, style=dashed];
m42_1 -> m42_5  [color=darkseagreen4, key=1, label=type, style=dashed];
m42_2 -> m42_3  [color=red, key=0, style=solid];
m42_2 -> m42_9  [key=2, style=dotted];
m42_2 -> m42_6  [color=darkseagreen4, key=1, label=methodInfo, style=dashed];
m42_3 -> m42_4  [color=red, key=0, style=solid];
m42_3 -> m42_10  [color=red, key=2, style=dotted];
m42_3 -> m42_11  [color=red, key=2, style=dotted];
m42_5 -> m42_6  [key=0, style=solid];
m42_5 -> m42_13  [key=2, style=dotted];
m42_6 -> m42_7  [key=0, style=solid];
m42_6 -> m42_13  [key=2, style=dotted];
m42_4 -> m42_5  [key=0, style=solid];
m42_4 -> m42_12  [key=2, style=dotted];
m42_4 -> m42_6  [color=darkseagreen4, key=1, label=job, style=dashed];
m42_4 -> m42_7  [color=darkseagreen4, key=1, label=job, style=dashed];
m42_7 -> m42_8  [key=0, style=solid];
m42_7 -> m42_13  [key=2, style=dotted];
m42_8 -> m42_0  [color=blue, key=0, style=bold];
m42_51 -> m42_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m42_52 -> m42_27  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m42_53 -> m42_34  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_3  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m43_0 -> m43_5  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m43_0 -> m43_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m43_0 -> m43_7  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m43_0 -> m43_10  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m43_0 -> m43_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m43_0 -> m43_0  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_3  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_5  [key=0, style=solid];
m43_5 -> m43_6  [key=0, style=solid];
m43_5 -> m43_7  [key=0, style=solid];
m43_6 -> m43_12  [key=0, style=solid];
m43_7 -> m43_8  [key=0, style=solid];
m43_7 -> m43_14  [key=2, style=dotted];
m43_7 -> m43_15  [key=2, style=dotted];
m43_7 -> m43_9  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m43_7 -> m43_10  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m43_10 -> m43_12  [key=0, style=solid];
m43_10 -> m43_18  [key=2, style=dotted];
m43_10 -> m43_19  [key=2, style=dotted];
m43_11 -> m43_12  [key=0, style=solid];
m43_2 -> m43_12  [key=0, style=solid];
m43_2 -> n30  [key=2, style=dotted];
m43_4 -> m43_12  [key=0, style=solid];
m43_4 -> n30  [key=2, style=dotted];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_11  [key=0, style=solid];
m43_9 -> m43_10  [key=0, style=solid];
m43_9 -> m43_16  [key=2, style=dotted];
m43_9 -> m43_17  [key=2, style=dotted];
m43_12 -> m43_0  [color=blue, key=0, style=bold];
m43_20 -> m43_21  [key=0, style=solid];
m43_20 -> m43_22  [color=darkseagreen4, key=1, label=long, style=dashed];
m43_21 -> m43_22  [key=0, style=solid];
m43_21 -> m43_24  [key=2, style=dotted];
m43_22 -> m43_23  [key=0, style=solid];
m43_22 -> m43_25  [key=2, style=dotted];
m43_22 -> m43_26  [key=2, style=dotted];
m43_22 -> m43_27  [key=2, style=dotted];
m43_23 -> m43_20  [color=blue, key=0, style=bold];
m43_28 -> m43_9  [color=darkseagreen4, key=1, label="HangFire.RetryJobsFilter", style=dashed];
m44_0 -> m44_1  [key=0, style=solid];
m44_0 -> m44_2  [color=red, key=1, label=string, style=dashed];
m44_0 -> m44_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_1 -> m44_2  [color=red, key=0, style=solid];
m44_2 -> m44_3  [color=red, key=0, style=solid];
m44_3 -> m44_4  [key=0, style=solid];
m44_4 -> m44_0  [color=blue, key=0, style=bold];
m44_5 -> m44_1  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m44_5 -> m44_2  [color=red, key=1, label="HangFire.Server.ServerContext", style=dashed];
m44_5 -> m44_3  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m45_0 -> m45_1  [color=green, key=0, style=solid];
m45_1 -> m45_2  [color=green, key=0, style=solid];
m45_2 -> m45_0  [color=blue, key=0, style=bold];
m45_3 -> m45_1  [color=green, key=1, label="HangFire.Filters.ServerExceptionContext", style=dashed];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m46_9 -> m46_14  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_9 -> m46_17  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m46_9 -> m46_18  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m46_9 -> m46_19  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_10 -> m46_11  [key=0, style=solid];
m46_10 -> m46_12  [key=0, style=solid];
m46_12 -> m46_13  [key=0, style=solid];
m46_12 -> m46_14  [key=0, style=solid];
m46_14 -> m46_15  [key=0, style=solid];
m46_14 -> m46_16  [key=0, style=solid];
m46_17 -> m46_18  [key=0, style=solid];
m46_17 -> m46_22  [key=2, style=dotted];
m46_17 -> m46_23  [key=2, style=dotted];
m46_17 -> m46_20  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m46_18 -> m46_19  [key=0, style=solid];
m46_18 -> m46_24  [key=2, style=dotted];
m46_19 -> m46_20  [key=0, style=solid];
m46_19 -> m46_25  [key=2, style=dotted];
m46_11 -> m46_21  [key=0, style=solid];
m46_11 -> n30  [key=2, style=dotted];
m46_13 -> m46_21  [key=0, style=solid];
m46_13 -> n30  [key=2, style=dotted];
m46_15 -> m46_21  [key=0, style=solid];
m46_15 -> n30  [key=2, style=dotted];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_18  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m46_20 -> m46_21  [key=0, style=solid];
m46_21 -> m46_9  [color=blue, key=0, style=bold];
m46_25 -> m46_56  [key=0, style=solid];
m46_25 -> m46_58  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m46_25 -> m46_63  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m46_25 -> m46_18  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.StateContext context", style=bold];
m46_25 -> m46_45  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.StateContext context", style=bold];
m46_25 -> m46_26  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.IState toState", style=bold];
m46_25 -> m46_19  [color=darkorchid, key=3, label="Parameter variable string oldStateName", style=bold];
m46_25 -> m46_39  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m46_25 -> m46_36  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m46_56 -> m46_57  [key=0, style=solid];
m46_56 -> m46_67  [key=2, style=dotted];
m46_56 -> m46_58  [color=darkseagreen4, key=1, label=electStateContext, style=dashed];
m46_58 -> m46_59  [key=0, style=solid];
m46_58 -> m46_69  [key=2, style=dotted];
m46_63 -> m46_64  [key=0, style=solid];
m46_63 -> m46_69  [key=2, style=dotted];
m46_63 -> m46_71  [key=2, style=dotted];
m46_57 -> m46_58  [key=0, style=solid];
m46_57 -> m46_68  [key=2, style=dotted];
m46_59 -> m46_60  [key=0, style=solid];
m46_59 -> m46_70  [key=2, style=dotted];
m46_60 -> m46_66  [key=0, style=solid];
m46_61 -> m46_62  [key=0, style=solid];
m46_62 -> m46_63  [key=0, style=solid];
m46_62 -> m46_54  [key=2, style=dotted];
m46_64 -> m46_65  [key=0, style=solid];
m46_64 -> m46_70  [key=2, style=dotted];
m46_65 -> m46_66  [key=0, style=solid];
m46_66 -> m46_25  [color=blue, key=0, style=bold];
m46_26 -> m46_27  [key=0, style=solid];
m46_26 -> m46_29  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_26 -> m46_31  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_26 -> m46_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_26 -> m46_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_26 -> m46_37  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_26 -> m46_42  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_26 -> m46_43  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_26 -> m46_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_26 -> m46_46  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_26 -> m46_36  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m46_27 -> m46_28  [key=0, style=solid];
m46_27 -> m46_29  [key=0, style=solid];
m46_29 -> m46_30  [key=0, style=solid];
m46_29 -> m46_31  [key=0, style=solid];
m46_31 -> m46_32  [key=0, style=solid];
m46_31 -> m46_33  [key=0, style=solid];
m46_33 -> m46_34  [key=0, style=solid];
m46_33 -> m46_50  [key=2, style=dotted];
m46_34 -> m46_35  [key=0, style=solid];
m46_34 -> m46_51  [key=2, style=dotted];
m46_34 -> m46_37  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_34 -> m46_40  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_34 -> m46_45  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_34 -> m46_46  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_37 -> m46_38  [key=0, style=solid];
m46_37 -> m46_39  [key=0, style=solid];
m46_37 -> m46_52  [key=2, style=dotted];
m46_42 -> m46_43  [key=0, style=solid];
m46_42 -> m46_45  [key=0, style=solid];
m46_43 -> m46_44  [key=0, style=solid];
m46_43 -> m46_54  [key=2, style=dotted];
m46_43 -> m46_55  [key=2, style=dotted];
m46_43 -> m46_43  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_43 -> m46_46  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m46_45 -> m46_46  [key=0, style=solid];
m46_45 -> m46_24  [key=2, style=dotted];
m46_46 -> m46_47  [key=0, style=solid];
m46_46 -> m46_25  [key=2, style=dotted];
m46_28 -> m46_48  [key=0, style=solid];
m46_28 -> n30  [key=2, style=dotted];
m46_30 -> m46_48  [key=0, style=solid];
m46_30 -> n30  [key=2, style=dotted];
m46_32 -> m46_48  [key=0, style=solid];
m46_32 -> m46_49  [key=2, style=dotted];
m46_35 -> m46_36  [key=0, style=solid];
m46_35 -> m46_37  [key=0, style=solid];
m46_40 -> m46_41  [key=0, style=solid];
m46_40 -> m46_45  [key=0, style=solid];
m46_40 -> m46_53  [key=2, style=dotted];
m46_36 -> m46_48  [key=0, style=solid];
m46_38 -> m46_48  [key=0, style=solid];
m46_39 -> m46_40  [key=0, style=solid];
m46_39 -> m46_47  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m46_39 -> m46_39  [color=darkorchid, key=3, label="Local variable bool loadSucceeded", style=bold];
m46_47 -> m46_48  [key=0, style=solid];
m46_41 -> m46_42  [key=0, style=solid];
m46_44 -> m46_45  [key=0, style=solid];
m46_44 -> m46_47  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m46_48 -> m46_26  [color=blue, key=0, style=bold];
m46_51 -> m46_79  [key=0, style=solid];
m46_51 -> m46_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_51 -> m46_86  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m46_51 -> m46_26  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m46_51 -> m46_19  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.JobData GetJobData", style=bold];
m46_79 -> m46_80  [key=0, style=solid];
m46_79 -> m46_88  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m46_79 -> m46_39  [color=darkorchid, key=3, label="Local variable bool firstAttempt", style=bold];
m46_81 -> m46_82  [key=0, style=solid];
m46_81 -> m46_91  [key=2, style=dotted];
m46_81 -> m46_84  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_81 -> m46_85  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_86 -> m46_87  [key=0, style=solid];
m46_86 -> m46_88  [key=0, style=solid];
m46_86 -> m46_86  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m46_80 -> m46_81  [key=0, style=solid];
m46_80 -> m46_90  [key=0, style=solid];
m46_88 -> m46_89  [key=0, style=solid];
m46_88 -> m46_93  [key=2, style=dotted];
m46_82 -> m46_83  [key=0, style=solid];
m46_82 -> m46_84  [key=0, style=solid];
m46_84 -> m46_85  [key=0, style=solid];
m46_84 -> m46_86  [key=0, style=solid];
m46_84 -> m46_92  [key=2, style=dotted];
m46_85 -> m46_90  [key=0, style=solid];
m46_83 -> m46_90  [key=0, style=solid];
m46_87 -> m46_90  [key=0, style=solid];
m46_89 -> m46_80  [key=0, style=solid];
m46_90 -> m46_51  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_3  [color=darkseagreen4, key=1, label="Hangfire.States.IStateChangeProcess", style=dashed];
m46_0 -> m46_5  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m46_0 -> m46_6  [color=darkseagreen4, key=1, label="Hangfire.States.IStateChangeProcess", style=dashed];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_5  [key=0, style=solid];
m46_5 -> m46_6  [key=0, style=solid];
m46_6 -> m46_7  [key=0, style=solid];
m46_2 -> m46_7  [key=0, style=solid];
m46_2 -> n30  [key=2, style=dotted];
m46_4 -> m46_7  [key=0, style=solid];
m46_4 -> n30  [key=2, style=dotted];
m46_7 -> m46_0  [color=blue, key=0, style=bold];
m46_70 -> m46_72  [key=0, style=solid];
m46_70 -> m46_73  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m46_70 -> m46_58  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ApplyStateContext context", style=bold];
m46_70 -> m46_63  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ApplyStateContext context", style=bold];
m46_70 -> m46_39  [color=darkorchid, key=3, label="Parameter variable bool useFilters", style=bold];
m46_70 -> m46_36  [color=darkorchid, key=3, label="Parameter variable bool useFilters", style=bold];
m46_72 -> m46_73  [key=0, style=solid];
m46_72 -> m46_76  [key=2, style=dotted];
m46_72 -> m46_74  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m46_73 -> m46_74  [key=0, style=solid];
m46_73 -> m46_77  [key=2, style=dotted];
m46_74 -> m46_75  [key=0, style=solid];
m46_74 -> m46_78  [key=2, style=dotted];
m46_75 -> m46_70  [color=blue, key=0, style=bold];
m46_94 -> m46_5  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_6  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_17  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_19  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_33  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_34  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_46  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_56  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_57  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_59  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_64  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_72  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_73  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m46_94 -> m46_81  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m47_0 -> m47_1  [color=red, key=0, style=solid];
m47_0 -> m47_2  [color=red, key=1, label="System.Exception", style=dashed];
m47_1 -> m47_2  [color=red, key=0, style=solid];
m47_2 -> m47_3  [color=red, key=0, style=solid];
m47_3 -> m47_0  [color=blue, key=0, style=bold];
m47_4 -> m47_1  [color=red, key=1, label="HangFire.Filters.ServerJobExceptionContext", style=dashed];
m47_4 -> m47_2  [color=red, key=1, label="HangFire.Filters.ServerJobExceptionContext", style=dashed];
m48_0 -> m48_1  [color=red, key=0, style=solid];
m48_1 -> m48_2  [color=red, key=0, style=solid];
m48_1 -> m48_122  [color=red, key=2, style=dotted];
m48_2 -> m48_3  [color=red, key=0, style=solid];
m48_2 -> m48_123  [color=red, key=2, style=dotted];
m48_3 -> m48_4  [color=red, key=0, style=solid];
m48_4 -> m48_5  [color=red, key=0, style=solid];
m48_5 -> m48_6  [color=red, key=0, style=solid];
m48_5 -> m48_124  [color=red, key=2, style=dotted];
m48_5 -> m48_125  [color=red, key=2, style=dotted];
m48_5 -> m48_11  [color=red, key=1, label=from, style=dashed];
m48_6 -> m48_7  [color=red, key=0, style=solid];
m48_6 -> m48_124  [color=red, key=2, style=dotted];
m48_6 -> m48_125  [color=red, key=2, style=dotted];
m48_6 -> m48_11  [color=red, key=1, label=perPage, style=dashed];
m48_11 -> m48_12  [color=red, key=0, style=solid];
m48_11 -> m48_127  [color=red, key=2, style=dotted];
m48_11 -> m48_128  [color=red, key=2, style=dotted];
m48_11 -> m48_36  [color=red, key=1, label=pager, style=dashed];
m48_11 -> m48_39  [color=red, key=1, label=pager, style=dashed];
m48_11 -> m48_114  [color=red, key=1, label=pager, style=dashed];
m48_11 -> m48_117  [color=red, key=1, label=pager, style=dashed];
m48_7 -> m48_8  [color=red, key=0, style=solid];
m48_7 -> m48_36  [color=red, key=1, label=pager, style=dashed];
m48_7 -> m48_39  [color=red, key=1, label=pager, style=dashed];
m48_7 -> m48_114  [color=red, key=1, label=pager, style=dashed];
m48_7 -> m48_117  [color=red, key=1, label=pager, style=dashed];
m48_8 -> m48_9  [color=red, key=0, style=solid];
m48_8 -> m48_126  [color=red, key=2, style=dotted];
m48_8 -> m48_13  [color=red, key=1, label=connection, style=dashed];
m48_36 -> m48_37  [key=0, style=solid];
m48_36 -> m48_41  [key=0, style=solid];
m48_39 -> m48_40  [key=0, style=solid];
m48_39 -> m48_133  [key=2, style=dotted];
m48_39 -> m48_131  [key=2, style=dotted];
m48_114 -> m48_115  [key=0, style=solid];
m48_114 -> m48_119  [key=0, style=solid];
m48_117 -> m48_118  [key=0, style=solid];
m48_117 -> m48_141  [key=2, style=dotted];
m48_117 -> m48_131  [key=2, style=dotted];
m48_9 -> m48_10  [color=red, key=0, style=solid];
m48_9 -> m48_11  [color=red, key=1, label=storageConnection, style=dashed];
m48_9 -> m48_12  [color=red, key=1, label=storageConnection, style=dashed];
m48_13 -> m48_14  [color=red, key=0, style=solid];
m48_13 -> m48_130  [color=red, key=2, style=dotted];
m48_13 -> m48_17  [color=red, key=1, label=recurringJobs, style=dashed];
m48_13 -> m48_56  [color=red, key=1, label=recurringJobs, style=dashed];
m48_10 -> m48_11  [color=red, key=0, style=solid];
m48_10 -> m48_13  [color=red, key=0, style=solid];
m48_12 -> m48_14  [color=red, key=0, style=solid];
m48_12 -> m48_129  [color=red, key=2, style=dotted];
m48_12 -> m48_17  [color=red, key=1, label=recurringJobs, style=dashed];
m48_12 -> m48_56  [color=red, key=1, label=recurringJobs, style=dashed];
m48_14 -> m48_15  [color=red, key=0, style=solid];
m48_14 -> m48_122  [color=red, key=2, style=dotted];
m48_17 -> m48_18  [color=red, key=0, style=solid];
m48_17 -> m48_21  [color=red, key=0, style=solid];
m48_56 -> m48_57  [key=0, style=solid];
m48_56 -> m48_113  [key=0, style=solid];
m48_56 -> m48_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_82  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_85  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_91  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_92  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_94  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_96  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_98  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_109  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_56 -> m48_110  [color=darkseagreen4, key=1, label=job, style=dashed];
m48_15 -> m48_16  [color=red, key=0, style=solid];
m48_15 -> m48_131  [color=red, key=2, style=dotted];
m48_16 -> m48_17  [color=red, key=0, style=solid];
m48_16 -> m48_122  [color=red, key=2, style=dotted];
m48_18 -> m48_19  [key=0, style=solid];
m48_18 -> m48_122  [key=2, style=dotted];
m48_21 -> m48_22  [key=0, style=solid];
m48_21 -> m48_122  [key=2, style=dotted];
m48_19 -> m48_20  [key=0, style=solid];
m48_19 -> m48_131  [key=2, style=dotted];
m48_20 -> m48_120  [key=0, style=solid];
m48_20 -> m48_122  [key=2, style=dotted];
m48_22 -> m48_23  [key=0, style=solid];
m48_22 -> m48_132  [key=2, style=dotted];
m48_22 -> m48_131  [key=2, style=dotted];
m48_23 -> m48_24  [key=0, style=solid];
m48_23 -> m48_122  [key=2, style=dotted];
m48_24 -> m48_25  [key=0, style=solid];
m48_24 -> m48_131  [key=2, style=dotted];
m48_25 -> m48_26  [key=0, style=solid];
m48_25 -> m48_122  [key=2, style=dotted];
m48_26 -> m48_27  [key=0, style=solid];
m48_26 -> m48_131  [key=2, style=dotted];
m48_27 -> m48_28  [key=0, style=solid];
m48_27 -> m48_122  [key=2, style=dotted];
m48_28 -> m48_29  [key=0, style=solid];
m48_28 -> m48_132  [key=2, style=dotted];
m48_28 -> m48_131  [key=2, style=dotted];
m48_29 -> m48_30  [key=0, style=solid];
m48_29 -> m48_122  [key=2, style=dotted];
m48_30 -> m48_31  [key=0, style=solid];
m48_30 -> m48_131  [key=2, style=dotted];
m48_31 -> m48_32  [key=0, style=solid];
m48_31 -> m48_122  [key=2, style=dotted];
m48_32 -> m48_33  [key=0, style=solid];
m48_32 -> m48_131  [key=2, style=dotted];
m48_33 -> m48_34  [key=0, style=solid];
m48_33 -> m48_122  [key=2, style=dotted];
m48_34 -> m48_35  [key=0, style=solid];
m48_34 -> m48_131  [key=2, style=dotted];
m48_35 -> m48_36  [key=0, style=solid];
m48_35 -> m48_122  [key=2, style=dotted];
m48_37 -> m48_38  [key=0, style=solid];
m48_37 -> m48_122  [key=2, style=dotted];
m48_41 -> m48_42  [key=0, style=solid];
m48_41 -> m48_122  [key=2, style=dotted];
m48_38 -> m48_39  [key=0, style=solid];
m48_38 -> m48_122  [key=2, style=dotted];
m48_40 -> m48_41  [key=0, style=solid];
m48_40 -> m48_122  [key=2, style=dotted];
m48_42 -> m48_43  [key=0, style=solid];
m48_42 -> m48_131  [key=2, style=dotted];
m48_43 -> m48_44  [key=0, style=solid];
m48_43 -> m48_122  [key=2, style=dotted];
m48_44 -> m48_45  [key=0, style=solid];
m48_44 -> m48_131  [key=2, style=dotted];
m48_45 -> m48_46  [key=0, style=solid];
m48_45 -> m48_122  [key=2, style=dotted];
m48_46 -> m48_47  [key=0, style=solid];
m48_46 -> m48_131  [key=2, style=dotted];
m48_47 -> m48_48  [key=0, style=solid];
m48_47 -> m48_122  [key=2, style=dotted];
m48_48 -> m48_49  [key=0, style=solid];
m48_48 -> m48_131  [key=2, style=dotted];
m48_49 -> m48_50  [key=0, style=solid];
m48_49 -> m48_122  [key=2, style=dotted];
m48_50 -> m48_51  [key=0, style=solid];
m48_50 -> m48_131  [key=2, style=dotted];
m48_51 -> m48_52  [key=0, style=solid];
m48_51 -> m48_122  [key=2, style=dotted];
m48_52 -> m48_53  [key=0, style=solid];
m48_52 -> m48_131  [key=2, style=dotted];
m48_53 -> m48_54  [key=0, style=solid];
m48_53 -> m48_122  [key=2, style=dotted];
m48_54 -> m48_55  [key=0, style=solid];
m48_54 -> m48_131  [key=2, style=dotted];
m48_55 -> m48_56  [key=0, style=solid];
m48_55 -> m48_122  [key=2, style=dotted];
m48_57 -> m48_58  [key=0, style=solid];
m48_57 -> m48_122  [key=2, style=dotted];
m48_113 -> m48_114  [key=0, style=solid];
m48_113 -> m48_122  [key=2, style=dotted];
m48_58 -> m48_59  [key=0, style=solid];
m48_58 -> m48_131  [key=2, style=dotted];
m48_60 -> m48_61  [key=0, style=solid];
m48_60 -> m48_131  [key=2, style=dotted];
m48_63 -> m48_64  [key=0, style=solid];
m48_63 -> m48_65  [color=darkseagreen4, key=1, label=cronDescription, style=dashed];
m48_67 -> m48_68  [key=0, style=solid];
m48_67 -> m48_73  [key=0, style=solid];
m48_67 -> m48_134  [key=2, style=dotted];
m48_69 -> m48_70  [key=0, style=solid];
m48_69 -> m48_135  [key=2, style=dotted];
m48_69 -> m48_131  [key=2, style=dotted];
m48_71 -> m48_72  [key=0, style=solid];
m48_71 -> m48_131  [key=2, style=dotted];
m48_76 -> m48_77  [key=0, style=solid];
m48_76 -> m48_81  [key=0, style=solid];
m48_79 -> m48_80  [key=0, style=solid];
m48_79 -> m48_136  [key=2, style=dotted];
m48_79 -> m48_131  [key=2, style=dotted];
m48_82 -> m48_83  [key=0, style=solid];
m48_82 -> m48_131  [key=2, style=dotted];
m48_85 -> m48_86  [key=0, style=solid];
m48_85 -> m48_87  [key=0, style=solid];
m48_86 -> m48_90  [key=0, style=solid];
m48_86 -> m48_137  [key=2, style=dotted];
m48_86 -> m48_131  [key=2, style=dotted];
m48_91 -> m48_92  [key=0, style=solid];
m48_91 -> m48_105  [key=0, style=solid];
m48_92 -> m48_93  [key=0, style=solid];
m48_92 -> m48_100  [key=0, style=solid];
m48_92 -> m48_138  [key=2, style=dotted];
m48_94 -> m48_95  [key=0, style=solid];
m48_94 -> m48_139  [key=2, style=dotted];
m48_94 -> m48_131  [key=2, style=dotted];
m48_96 -> m48_97  [key=0, style=solid];
m48_96 -> m48_140  [key=2, style=dotted];
m48_96 -> m48_131  [key=2, style=dotted];
m48_98 -> m48_99  [key=0, style=solid];
m48_98 -> m48_137  [key=2, style=dotted];
m48_98 -> m48_131  [key=2, style=dotted];
m48_103 -> m48_104  [key=0, style=solid];
m48_103 -> m48_137  [key=2, style=dotted];
m48_103 -> m48_131  [key=2, style=dotted];
m48_109 -> m48_110  [key=0, style=solid];
m48_109 -> m48_111  [key=0, style=solid];
m48_110 -> m48_112  [key=0, style=solid];
m48_110 -> m48_137  [key=2, style=dotted];
m48_110 -> m48_131  [key=2, style=dotted];
m48_59 -> m48_60  [key=0, style=solid];
m48_59 -> m48_122  [key=2, style=dotted];
m48_61 -> m48_62  [key=0, style=solid];
m48_61 -> m48_122  [key=2, style=dotted];
m48_62 -> m48_63  [key=0, style=solid];
m48_62 -> m48_122  [key=2, style=dotted];
m48_64 -> m48_65  [key=0, style=solid];
m48_64 -> m48_122  [key=2, style=dotted];
m48_65 -> m48_66  [key=0, style=solid];
m48_65 -> m48_131  [key=2, style=dotted];
m48_66 -> m48_67  [key=0, style=solid];
m48_66 -> m48_122  [key=2, style=dotted];
m48_68 -> m48_69  [key=0, style=solid];
m48_68 -> m48_122  [key=2, style=dotted];
m48_73 -> m48_74  [key=0, style=solid];
m48_73 -> m48_122  [key=2, style=dotted];
m48_70 -> m48_71  [key=0, style=solid];
m48_70 -> m48_122  [key=2, style=dotted];
m48_72 -> m48_75  [key=0, style=solid];
m48_72 -> m48_122  [key=2, style=dotted];
m48_74 -> m48_75  [key=0, style=solid];
m48_74 -> m48_122  [key=2, style=dotted];
m48_75 -> m48_76  [key=0, style=solid];
m48_75 -> m48_122  [key=2, style=dotted];
m48_77 -> m48_78  [key=0, style=solid];
m48_77 -> m48_122  [key=2, style=dotted];
m48_81 -> m48_82  [key=0, style=solid];
m48_81 -> m48_122  [key=2, style=dotted];
m48_78 -> m48_79  [key=0, style=solid];
m48_78 -> m48_122  [key=2, style=dotted];
m48_80 -> m48_84  [key=0, style=solid];
m48_80 -> m48_122  [key=2, style=dotted];
m48_83 -> m48_84  [key=0, style=solid];
m48_83 -> m48_122  [key=2, style=dotted];
m48_84 -> m48_85  [key=0, style=solid];
m48_84 -> m48_122  [key=2, style=dotted];
m48_87 -> m48_88  [key=0, style=solid];
m48_87 -> m48_122  [key=2, style=dotted];
m48_88 -> m48_89  [key=0, style=solid];
m48_88 -> m48_131  [key=2, style=dotted];
m48_89 -> m48_90  [key=0, style=solid];
m48_89 -> m48_122  [key=2, style=dotted];
m48_90 -> m48_91  [key=0, style=solid];
m48_90 -> m48_122  [key=2, style=dotted];
m48_105 -> m48_106  [key=0, style=solid];
m48_105 -> m48_122  [key=2, style=dotted];
m48_93 -> m48_94  [key=0, style=solid];
m48_93 -> m48_122  [key=2, style=dotted];
m48_100 -> m48_101  [key=0, style=solid];
m48_100 -> m48_122  [key=2, style=dotted];
m48_95 -> m48_96  [key=0, style=solid];
m48_95 -> m48_122  [key=2, style=dotted];
m48_97 -> m48_98  [key=0, style=solid];
m48_97 -> m48_122  [key=2, style=dotted];
m48_99 -> m48_108  [key=0, style=solid];
m48_99 -> m48_122  [key=2, style=dotted];
m48_101 -> m48_102  [key=0, style=solid];
m48_101 -> m48_131  [key=2, style=dotted];
m48_102 -> m48_103  [key=0, style=solid];
m48_102 -> m48_122  [key=2, style=dotted];
m48_104 -> m48_108  [key=0, style=solid];
m48_104 -> m48_122  [key=2, style=dotted];
m48_106 -> m48_107  [key=0, style=solid];
m48_106 -> m48_131  [key=2, style=dotted];
m48_107 -> m48_108  [key=0, style=solid];
m48_107 -> m48_122  [key=2, style=dotted];
m48_108 -> m48_109  [key=0, style=solid];
m48_108 -> m48_122  [key=2, style=dotted];
m48_111 -> m48_112  [key=0, style=solid];
m48_111 -> m48_122  [key=2, style=dotted];
m48_112 -> m48_56  [key=0, style=solid];
m48_112 -> m48_122  [key=2, style=dotted];
m48_115 -> m48_116  [key=0, style=solid];
m48_115 -> m48_122  [key=2, style=dotted];
m48_119 -> m48_120  [key=0, style=solid];
m48_119 -> m48_122  [key=2, style=dotted];
m48_116 -> m48_117  [key=0, style=solid];
m48_116 -> m48_122  [key=2, style=dotted];
m48_118 -> m48_119  [key=0, style=solid];
m48_118 -> m48_122  [key=2, style=dotted];
m48_120 -> m48_121  [key=0, style=solid];
m48_120 -> m48_122  [key=2, style=dotted];
m48_121 -> m48_0  [color=blue, key=0, style=bold];
m48_142 -> m48_1  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_2  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_5  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_6  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_8  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_14  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_15  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_16  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_51  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_75  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_79  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_83  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_84  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_86  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_87  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_90  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_93  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_94  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_95  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_96  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_97  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_98  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_99  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_100  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_101  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_102  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_103  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_104  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_105  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_106  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_107  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_108  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_110  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_111  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_112  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_113  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_115  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_116  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_117  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_118  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_119  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m48_142 -> m48_120  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m49_22 -> m49_23  [key=0, style=solid];
m49_23 -> m49_24  [key=0, style=solid];
m49_23 -> m49_19  [key=2, style=dotted];
m49_24 -> m49_25  [key=0, style=solid];
m49_24 -> m49_26  [key=0, style=solid];
m49_25 -> m49_26  [key=0, style=solid];
m49_25 -> m49_27  [key=2, style=dotted];
m49_26 -> m49_22  [color=blue, key=0, style=bold];
m49_0 -> m49_1  [color=green, key=0, style=solid];
m49_0 -> m49_2  [color=red, key=1, label="HangFire.Server.ServerContext", style=dashed];
m49_0 -> m49_5  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m49_0 -> m49_7  [color=red, key=1, label=int, style=dashed];
m49_0 -> m49_3  [color=red, key=1, label=int, style=dashed];
m49_0 -> m49_4  [color=red, key=1, label="HangFire.Server.ServerJobInvoker", style=dashed];
m49_0 -> m49_6  [color=red, key=1, label=int, style=dashed];
m49_1 -> m49_2  [color=green, key=0, style=solid];
m49_2 -> m49_3  [color=green, key=0, style=solid];
m49_3 -> m49_4  [color=red, key=0, style=solid];
m49_4 -> m49_5  [color=green, key=0, style=solid];
m49_5 -> m49_6  [color=green, key=0, style=solid];
m49_6 -> m49_7  [color=green, key=0, style=solid];
m49_6 -> m49_9  [color=red, key=2, style=dotted];
m49_6 -> m49_10  [color=red, key=2, style=dotted];
m49_7 -> m49_8  [color=green, key=0, style=solid];
m49_7 -> m49_11  [color=green, key=2, style=dotted];
m49_7 -> m49_9  [color=green, key=2, style=dotted];
m49_8 -> m49_0  [color=blue, key=0, style=bold];
m49_95 -> m49_95  [color=green, key=3, label="Field variable int _initialized", style=bold];
m49_47 -> m49_48  [key=0, style=solid];
m49_48 -> m49_49  [key=0, style=solid];
m49_48 -> m49_54  [key=0, style=solid];
m49_48 -> m49_55  [key=0, style=solid];
m49_48 -> m49_58  [key=0, style=solid];
m49_49 -> m49_50  [key=0, style=solid];
m49_49 -> m49_59  [key=2, style=dotted];
m49_54 -> m49_58  [key=0, style=solid];
m49_55 -> m49_56  [key=0, style=solid];
m49_50 -> m49_51  [color=green, key=0, style=solid];
m49_50 -> m49_60  [key=2, style=dotted];
m49_51 -> m49_52  [color=green, key=0, style=solid];
m49_52 -> m49_53  [color=red, key=0, style=solid];
m49_52 -> m49_61  [color=red, key=2, style=dotted];
m49_53 -> m49_48  [key=0, style=solid];
m49_53 -> m49_62  [key=2, style=dotted];
m49_56 -> m49_57  [key=0, style=solid];
m49_57 -> m49_58  [key=0, style=solid];
m49_57 -> m49_63  [key=2, style=dotted];
m49_57 -> m49_64  [key=2, style=dotted];
m49_58 -> m49_47  [color=blue, key=0, style=bold];
m49_12 -> m49_13  [key=0, style=solid];
m49_13 -> m49_14  [key=0, style=solid];
m49_13 -> m49_19  [key=2, style=dotted];
m49_14 -> m49_15  [key=0, style=solid];
m49_14 -> m49_16  [key=0, style=solid];
m49_15 -> m49_18  [key=0, style=solid];
m49_15 -> m49_20  [key=2, style=dotted];
m49_16 -> m49_17  [key=0, style=solid];
m49_16 -> m49_21  [key=2, style=dotted];
m49_17 -> m49_18  [key=0, style=solid];
m49_18 -> m49_12  [color=blue, key=0, style=bold];
m49_61 -> m49_69  [color=red, key=1, label=string, style=dashed];
m49_61 -> m49_73  [color=red, key=1, label=string, style=dashed];
m49_61 -> m49_84  [color=red, key=1, label=string, style=dashed];
m49_61 -> m49_65  [color=red, key=0, style=solid];
m49_61 -> m49_67  [color=red, key=1, label=string, style=dashed];
m49_61 -> m49_77  [color=red, key=1, label=string, style=dashed];
m49_61 -> m49_81  [color=red, key=1, label=string, style=dashed];
m49_61 -> m49_85  [color=red, key=1, label=string, style=dashed];
m49_61 -> m49_86  [color=red, key=1, label=string, style=dashed];
m49_65 -> m49_66  [color=red, key=0, style=solid];
m49_67 -> m49_68  [color=red, key=0, style=solid];
m49_67 -> m49_88  [color=red, key=2, style=dotted];
m49_67 -> m49_77  [color=darkseagreen4, key=1, label=jobArgs, style=dashed];
m49_69 -> m49_70  [color=green, key=0, style=solid];
m49_69 -> m49_9  [color=green, key=2, style=dotted];
m49_69 -> m49_90  [color=green, key=2, style=dotted];
m49_73 -> m49_74  [color=green, key=0, style=solid];
m49_73 -> m49_75  [color=green, key=0, style=solid];
m49_73 -> m49_92  [color=green, key=2, style=dotted];
m49_73 -> m49_93  [color=green, key=2, style=dotted];
m49_77 -> m49_78  [color=red, key=0, style=solid];
m49_77 -> m49_94  [color=red, key=2, style=dotted];
m49_81 -> m49_82  [color=green, key=0, style=solid];
m49_81 -> m49_9  [color=red, key=2, style=dotted];
m49_81 -> m49_96  [color=red, key=2, style=dotted];
m49_84 -> m49_86  [color=green, key=0, style=solid];
m49_84 -> m49_97  [color=green, key=2, style=dotted];
m49_84 -> m49_93  [color=green, key=2, style=dotted];
m49_85 -> m49_86  [color=red, key=0, style=solid];
m49_85 -> m49_98  [color=red, key=2, style=dotted];
m49_85 -> m49_93  [color=red, key=2, style=dotted];
m49_86 -> m49_87  [color=red, key=0, style=solid];
m49_86 -> m49_99  [color=red, key=2, style=dotted];
m49_66 -> m49_67  [color=red, key=0, style=solid];
m49_68 -> m49_69  [color=green, key=0, style=solid];
m49_68 -> m49_71  [color=red, key=0, style=solid];
m49_68 -> m49_89  [color=red, key=2, style=dotted];
m49_71 -> m49_72  [color=red, key=0, style=solid];
m49_71 -> m49_91  [color=red, key=2, style=dotted];
m49_71 -> m49_73  [color=green, key=1, label=workerContext, style=dashed];
m49_71 -> m49_78  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
m49_70 -> m49_87  [color=green, key=0, style=solid];
m49_72 -> m49_73  [color=green, key=0, style=solid];
m49_78 -> m49_79  [color=red, key=0, style=solid];
m49_78 -> m49_82  [color=green, key=0, style=solid];
m49_78 -> m49_95  [color=red, key=2, style=dotted];
m49_74 -> m49_87  [color=green, key=0, style=solid];
m49_75 -> m49_76  [color=green, key=0, style=solid];
m49_75 -> m49_75  [color=darkorchid, key=3, label="Local variable System.Exception exception", style=bold];
m49_75 -> m49_79  [color=darkorchid, key=3, label="Local variable System.Exception exception", style=bold];
m49_76 -> m49_77  [color=green, key=0, style=solid];
m49_76 -> m49_75  [color=darkorchid, key=3, label="Local variable HangFire.Server.ServerJobDescriptor jobDescriptor", style=bold];
m49_79 -> m49_80  [key=0, style=solid];
m49_82 -> m49_83  [color=green, key=0, style=solid];
m49_80 -> m49_81  [color=red, key=0, style=solid];
m49_80 -> m49_83  [color=green, key=1, label=exception, style=dashed];
m49_80 -> m49_85  [color=darkseagreen4, key=1, label=exception, style=dashed];
m49_83 -> m49_84  [color=green, key=0, style=solid];
m49_83 -> m49_85  [color=green, key=0, style=solid];
m49_87 -> m49_61  [color=blue, key=0, style=bold];
m49_88 -> m49_100  [color=red, key=0, style=solid];
m49_88 -> m49_101  [color=red, key=1, label=string, style=dashed];
m49_88 -> m49_61  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m49_88 -> m49_66  [color=red, key=3, label="Parameter variable string jobType", style=bold];
m49_88 -> m49_65  [color=red, key=3, label="Parameter variable System.Collections.Generic.Dictionary<string, string> jobArgs", style=bold];
m49_100 -> m49_101  [color=red, key=0, style=solid];
m49_101 -> m49_102  [color=red, key=0, style=solid];
m49_101 -> m49_9  [color=red, key=2, style=dotted];
m49_101 -> m49_105  [color=red, key=2, style=dotted];
m49_101 -> m49_103  [color=darkseagreen4, key=1, label=result, style=dashed];
m49_102 -> m49_103  [color=red, key=0, style=solid];
m49_102 -> m49_104  [color=darkseagreen4, key=1, label="out string", style=dashed];
m49_103 -> m49_104  [color=red, key=0, style=solid];
m49_103 -> m49_106  [color=red, key=2, style=dotted];
m49_104 -> m49_88  [color=blue, key=0, style=bold];
m49_28 -> m49_29  [key=0, style=solid];
m49_28 -> m49_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_29 -> m49_30  [color=green, key=0, style=solid];
m49_29 -> m49_19  [key=2, style=dotted];
m49_31 -> m49_32  [color=red, key=0, style=solid];
m49_30 -> m49_31  [color=green, key=0, style=solid];
m49_32 -> m49_33  [key=0, style=solid];
m49_32 -> m49_34  [key=2, style=dotted];
m49_33 -> m49_28  [color=blue, key=0, style=bold];
m49_35 -> m49_36  [key=0, style=solid];
m49_36 -> m49_37  [key=0, style=solid];
m49_36 -> m49_38  [key=0, style=solid];
m49_37 -> m49_43  [key=0, style=solid];
m49_38 -> m49_39  [key=0, style=solid];
m49_39 -> m49_40  [key=0, style=solid];
m49_39 -> m49_41  [key=0, style=solid];
m49_40 -> m49_41  [key=0, style=solid];
m49_40 -> m49_44  [key=2, style=dotted];
m49_41 -> m49_42  [key=0, style=solid];
m49_41 -> m49_45  [key=2, style=dotted];
m49_42 -> m49_43  [key=0, style=solid];
m49_42 -> m49_46  [key=2, style=dotted];
m49_43 -> m49_35  [color=blue, key=0, style=bold];
m49_107 -> m49_1  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_2  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_3  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_4  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_5  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_6  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_7  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_14  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_16  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_30  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_32  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_38  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_39  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_40  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_41  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_42  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_50  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_51  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_52  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_53  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_56  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_57  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_69  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_71  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_77  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_78  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_81  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m49_107 -> m49_86  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_6  [color=green, key=1, label="HangFire.Server.ServerContext", style=dashed];
m51_0 -> m51_3  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m51_0 -> m51_5  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m51_1 -> m51_0  [color=blue, key=0, style=bold];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_12  [key=2, style=dotted];
m51_28 -> m51_29  [key=0, style=solid];
m51_43 -> m51_44  [key=0, style=solid];
m51_43 -> m51_55  [key=2, style=dotted];
m51_6 -> m51_7  [color=green, key=0, style=solid];
m51_6 -> m51_16  [color=green, key=2, style=dotted];
m51_6 -> m51_17  [color=green, key=2, style=dotted];
m51_6 -> m51_8  [color=green, key=1, label=worker, style=dashed];
m51_6 -> m51_12  [key=0, style=solid];
m51_6 -> n30  [key=2, style=dotted];
m51_6 -> m51_14  [key=2, style=dotted];
m51_5 -> m51_6  [color=green, key=0, style=solid];
m51_5 -> m51_5  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m51_5 -> m51_10  [key=0, style=solid];
m51_5 -> m51_7  [key=0, style=solid];
m51_4 -> m51_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.HashSet<string>", style=dashed];
m51_4 -> m51_5  [key=0, style=solid];
m51_4 -> m51_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.HashSet<string>", style=dashed];
m51_4 -> m51_7  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m51_4 -> m51_8  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m51_4 -> m51_10  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m51_7 -> m51_8  [key=0, style=solid];
m51_7 -> m51_18  [key=2, style=dotted];
m51_7 -> m51_9  [key=0, style=solid];
m51_8 -> m51_9  [key=0, style=solid];
m51_8 -> m51_19  [key=2, style=dotted];
m51_8 -> m51_12  [key=0, style=solid];
m51_8 -> n30  [key=2, style=dotted];
m51_8 -> m51_14  [key=2, style=dotted];
m51_2 -> m51_3  [key=0, style=solid];
m51_2 -> m51_13  [key=2, style=dotted];
m51_3 -> m51_4  [key=0, style=solid];
m51_3 -> m51_14  [key=2, style=dotted];
m51_3 -> m51_15  [key=2, style=dotted];
m51_3 -> m51_2  [color=blue, key=0, style=bold];
m51_10 -> m51_11  [key=0, style=solid];
m51_10 -> m51_15  [key=2, style=dotted];
m51_9 -> m51_5  [key=0, style=solid];
m51_9 -> m51_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m51_9 -> m51_10  [key=0, style=solid];
m51_11 -> m51_0  [color=blue, key=0, style=bold];
m51_11 -> m51_12  [key=0, style=solid];
m51_48 -> m51_6  [color=green, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_1  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_2  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_8  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_10  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_21  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_23  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_30  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_32  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_33  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_34  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_36  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_38  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_39  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_48 -> m51_45  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m51_29 -> m51_30  [key=0, style=solid];
m51_29 -> m51_25  [color=blue, key=0, style=bold];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_32  [key=0, style=solid];
m51_30 -> m51_33  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_30 -> m51_36  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_30 -> m51_37  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_30 -> m51_40  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_32 -> m51_33  [key=0, style=solid];
m51_32 -> m51_45  [key=2, style=dotted];
m51_33 -> m51_34  [key=0, style=solid];
m51_33 -> m51_15  [key=2, style=dotted];
m51_33 -> m51_46  [key=2, style=dotted];
m51_33 -> m51_35  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m51_33 -> m51_36  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m51_34 -> m51_35  [key=0, style=solid];
m51_34 -> m51_36  [key=0, style=solid];
m51_34 -> m51_37  [key=0, style=solid];
m51_34 -> m51_47  [key=2, style=dotted];
m51_34 -> m51_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_38  [key=0, style=solid];
m51_36 -> m51_50  [key=2, style=dotted];
m51_38 -> m51_39  [key=0, style=solid];
m51_38 -> m51_15  [key=2, style=dotted];
m51_38 -> m51_40  [key=0, style=solid];
m51_39 -> m51_40  [key=0, style=solid];
m51_39 -> m51_43  [key=2, style=dotted];
m51_39 -> m51_44  [key=0, style=solid];
m51_39 -> m51_52  [key=2, style=dotted];
m51_31 -> m51_40  [key=0, style=solid];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> m51_33  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m51_31 -> m51_36  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m51_31 -> m51_37  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m51_31 -> m51_39  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m51_35 -> m51_34  [key=0, style=solid];
m51_35 -> m51_41  [key=2, style=dotted];
m51_35 -> m51_36  [key=0, style=solid];
m51_35 -> m51_48  [key=2, style=dotted];
m51_35 -> m51_49  [key=2, style=dotted];
m51_37 -> m51_36  [key=0, style=solid];
m51_37 -> m51_42  [key=2, style=dotted];
m51_37 -> m51_38  [key=0, style=solid];
m51_37 -> m51_51  [key=2, style=dotted];
m51_40 -> m51_29  [color=blue, key=0, style=bold];
m51_40 -> m51_41  [key=0, style=solid];
m51_40 -> m51_53  [key=2, style=dotted];
m51_40 -> m51_42  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m51_45 -> m51_46  [key=0, style=solid];
m51_45 -> m51_47  [key=2, style=dotted];
m51_15 -> m51_16  [key=0, style=solid];
m51_15 -> m51_18  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_15 -> m51_19  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_15 -> m51_20  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_50 -> m51_108  [key=0, style=solid];
m51_108 -> m51_109  [key=0, style=solid];
m51_108 -> m51_110  [key=2, style=dotted];
m51_108 -> m51_111  [key=2, style=dotted];
m51_109 -> m51_50  [color=blue, key=0, style=bold];
m51_79 -> m51_87  [key=0, style=solid];
m51_79 -> m51_91  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_79 -> m51_93  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_79 -> m51_94  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_79 -> m51_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_79 -> m51_98  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m51_79 -> m51_99  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_79 -> m51_24  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
m51_87 -> m51_88  [key=0, style=solid];
m51_87 -> m51_102  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m51_87 -> m51_87  [color=darkorchid, key=3, label="Local variable Hangfire.Storage.StateData currentState", style=bold];
m51_91 -> m51_92  [key=0, style=solid];
m51_91 -> m51_51  [key=2, style=dotted];
m51_91 -> m51_96  [color=darkseagreen4, key=1, label=continuationData, style=dashed];
m51_93 -> m51_102  [key=0, style=solid];
m51_93 -> m51_104  [key=2, style=dotted];
m51_94 -> m51_95  [key=0, style=solid];
m51_94 -> m51_53  [key=2, style=dotted];
m51_94 -> m51_102  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m51_97 -> m51_102  [key=0, style=solid];
m51_97 -> m51_104  [key=2, style=dotted];
m51_98 -> m51_99  [key=0, style=solid];
m51_98 -> m51_100  [key=0, style=solid];
m51_98 -> m51_105  [key=2, style=dotted];
m51_99 -> m51_103  [key=0, style=solid];
m51_99 -> m51_106  [key=2, style=dotted];
m51_88 -> m51_89  [key=0, style=solid];
m51_88 -> m51_98  [color=darkseagreen4, key=1, label=started, style=dashed];
m51_102 -> m51_103  [key=0, style=solid];
m51_89 -> m51_90  [key=0, style=solid];
m51_89 -> m51_100  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m51_89 -> m51_89  [color=darkorchid, key=3, label="Local variable bool firstAttempt", style=bold];
m51_90 -> m51_91  [key=0, style=solid];
m51_90 -> m51_102  [key=0, style=solid];
m51_100 -> m51_101  [key=0, style=solid];
m51_100 -> m51_107  [key=2, style=dotted];
m51_92 -> m51_93  [key=0, style=solid];
m51_92 -> m51_94  [key=0, style=solid];
m51_96 -> m51_97  [key=0, style=solid];
m51_96 -> m51_98  [key=0, style=solid];
m51_95 -> m51_96  [key=0, style=solid];
m51_95 -> m51_102  [key=0, style=solid];
m51_101 -> m51_90  [key=0, style=solid];
m51_103 -> m51_79  [color=blue, key=0, style=bold];
m51_41 -> m51_42  [key=0, style=solid];
m51_41 -> m51_44  [key=0, style=solid];
m51_41 -> m51_23  [key=2, style=dotted];
m51_46 -> m51_112  [key=0, style=solid];
m51_46 -> m51_30  [color=darkorchid, key=3, label="Parameter variable Hangfire.Storage.IStorageConnection connection", style=bold];
m51_46 -> m51_31  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m51_46 -> m51_44  [color=blue, key=0, style=bold];
m51_112 -> m51_113  [key=0, style=solid];
m51_112 -> m51_114  [key=2, style=dotted];
m51_112 -> m51_115  [key=2, style=dotted];
m51_112 -> m51_116  [key=2, style=dotted];
m51_113 -> m51_46  [color=blue, key=0, style=bold];
m51_16 -> m51_17  [key=0, style=solid];
m51_16 -> m51_18  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m51_18 -> m51_21  [key=0, style=solid];
m51_18 -> m51_22  [key=2, style=dotted];
m51_19 -> m51_20  [key=0, style=solid];
m51_19 -> m51_21  [key=0, style=solid];
m51_19 -> m51_23  [key=2, style=dotted];
m51_20 -> m51_21  [key=0, style=solid];
m51_20 -> m51_24  [key=2, style=dotted];
m51_20 -> m51_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_20 -> m51_22  [color=darkorchid, key=3, label="method methodReturn HangFire.Server.Worker TakeFree", style=bold];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_19  [key=0, style=solid];
m51_21 -> m51_15  [color=blue, key=0, style=bold];
m51_21 -> m51_22  [key=0, style=solid];
m51_21 -> m51_27  [key=2, style=dotted];
m51_22 -> m51_30  [key=0, style=solid];
m51_22 -> m51_31  [color=darkseagreen4, key=1, label="Hangfire.States.AwaitingState", style=dashed];
m51_22 -> m51_34  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_22 -> m51_57  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_22 -> m51_35  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_22 -> m51_42  [color=darkseagreen4, key=1, label="Hangfire.States.AwaitingState", style=dashed];
m51_22 -> m51_43  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_22 -> m51_15  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
m51_22 -> m51_16  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.AwaitingState awaitingState", style=bold];
m51_22 -> m51_23  [key=0, style=solid];
m51_42 -> m51_43  [key=0, style=solid];
m51_42 -> m51_54  [key=2, style=dotted];
m51_44 -> m51_22  [color=blue, key=0, style=bold];
m51_44 -> m51_45  [key=0, style=solid];
m51_12 -> m51_4  [color=blue, key=0, style=bold];
m51_25 -> m51_26  [key=0, style=solid];
m51_25 -> m51_28  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m51_26 -> m51_27  [key=0, style=solid];
m51_26 -> m51_28  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m51_26 -> m51_20  [color=blue, key=0, style=bold];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_29  [key=0, style=solid];
m51_24 -> m51_59  [key=0, style=solid];
m51_24 -> m51_63  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_24 -> m51_67  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_24 -> m51_75  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m51_24 -> m51_15  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
m51_24 -> m51_22  [key=0, style=solid];
m51_24 -> m51_25  [key=0, style=solid];
m51_59 -> m51_60  [key=0, style=solid];
m51_59 -> m51_46  [key=2, style=dotted];
m51_59 -> m51_61  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m51_63 -> m51_64  [key=0, style=solid];
m51_63 -> m51_79  [key=2, style=dotted];
m51_63 -> m51_63  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m51_63 -> m51_65  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m51_63 -> m51_67  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m51_63 -> m51_69  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m51_67 -> m51_68  [key=0, style=solid];
m51_67 -> m51_69  [key=0, style=solid];
m51_67 -> m51_54  [key=2, style=dotted];
m51_67 -> m51_67  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m51_67 -> m51_72  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m51_75 -> m51_74  [key=0, style=solid];
m51_75 -> m51_85  [key=2, style=dotted];
m51_75 -> m51_86  [key=2, style=dotted];
m51_75 -> m51_75  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m51_60 -> m51_61  [key=0, style=solid];
m51_60 -> m51_77  [key=2, style=dotted];
m51_60 -> m51_72  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m51_60 -> m51_73  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m51_60 -> m51_74  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m51_61 -> m51_62  [key=0, style=solid];
m51_61 -> m51_74  [key=0, style=solid];
m51_72 -> m51_73  [key=0, style=solid];
m51_72 -> m51_61  [key=0, style=solid];
m51_72 -> m51_83  [key=2, style=dotted];
m51_72 -> m51_72  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m51_73 -> m51_61  [key=0, style=solid];
m51_73 -> m51_84  [key=2, style=dotted];
m51_73 -> m51_73  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m51_74 -> m51_75  [key=0, style=solid];
m51_74 -> m51_76  [key=0, style=solid];
m51_62 -> m51_63  [key=0, style=solid];
m51_62 -> m51_61  [key=0, style=solid];
m51_62 -> m51_78  [key=2, style=dotted];
m51_62 -> m51_62  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m51_64 -> m51_65  [key=0, style=solid];
m51_64 -> m51_61  [key=0, style=solid];
m51_65 -> m51_66  [key=0, style=solid];
m51_65 -> m51_61  [key=0, style=solid];
m51_69 -> m51_70  [key=0, style=solid];
m51_69 -> m51_72  [key=0, style=solid];
m51_69 -> m51_80  [key=2, style=dotted];
m51_69 -> m51_81  [key=2, style=dotted];
m51_66 -> m51_67  [key=0, style=solid];
m51_68 -> m51_72  [key=0, style=solid];
m51_68 -> m51_55  [key=2, style=dotted];
m51_68 -> m51_73  [color=darkseagreen4, key=1, label=nextState, style=dashed];
m51_70 -> m51_71  [key=0, style=solid];
m51_71 -> m51_72  [key=0, style=solid];
m51_71 -> m51_82  [key=2, style=dotted];
m51_71 -> m51_73  [color=darkseagreen4, key=1, label=nextState, style=dashed];
m51_76 -> m51_24  [color=blue, key=0, style=bold];
m51_56 -> m51_57  [key=0, style=solid];
m51_57 -> m51_58  [key=0, style=solid];
m51_57 -> m51_57  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute.Continuation", style=dashed];
m51_58 -> m51_56  [color=blue, key=0, style=bold];
m51_117 -> m51_118  [key=0, style=solid];
m51_118 -> m51_117  [color=blue, key=0, style=bold];
m51_23 -> m51_24  [key=0, style=solid];
m51_23 -> m51_28  [key=2, style=dotted];
m51_23 -> m51_25  [color=darkseagreen4, key=1, label=worker, style=dashed];
m51_119 -> m51_9  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_119 -> m51_10  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_119 -> m51_11  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_119 -> m51_18  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_119 -> m51_19  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_119 -> m51_20  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_119 -> m51_41  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_119 -> m51_75  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m51_120 -> m51_57  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
}
