digraph  {
m0_0 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m0_1 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="DequeuedJobsWatcher.cs", label="Exit Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m0_4 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m0_5 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="DequeuedJobsWatcher.cs", label="Exit Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m0_2 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m0_3 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="DequeuedJobsWatcher.cs", label="Exit Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m2_13 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="20-20"];
m2_0 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="12-12"];
m2_1 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=green, community=0, file="JobClient.cs", label="0: jobType == null", span="14-14"];
m2_2 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="throw new ArgumentNullException(''jobType'');", span="16-16"];
m2_3 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="!typeof (BackgroundJob).IsAssignableFrom(jobType)", span="18-18"];
m2_4 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)), \r\n                    ''jobType'');", span="20-22"];
m2_5 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="var queue = JobHelper.GetQueue(jobType)", span="25-25"];
m2_6 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="var jobId = GenerateId()", span="27-27"];
m2_16 [cluster="string.Format(string, object, object)", file="JobClient.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_19 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="JobClient.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m2_45 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="76-76"];
m2_46 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="_redis.Dispose()", span="78-78"];
m2_47 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="76-76"];
m2_18 [cluster="HangFire.Client.JobClient.GenerateId()", file="JobClient.cs", label="Entry HangFire.Client.JobClient.GenerateId()", span="92-92"];
m2_59 [cluster="HangFire.Client.JobClient.GenerateId()", file="JobClient.cs", label="return Guid.NewGuid().ToString();", span="94-94"];
m2_60 [cluster="HangFire.Client.JobClient.GenerateId()", file="JobClient.cs", label="Exit HangFire.Client.JobClient.GenerateId()", span="92-92"];
m2_42 [cluster="System.TimeSpan.Equals(System.TimeSpan)", file="JobClient.cs", label="Entry System.TimeSpan.Equals(System.TimeSpan)", span="0-0"];
m2_14 [cluster="BackgroundProcessContext.cstr", file="JobClient.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m2_57 [cluster="HangFire.JobHelper.ToJson(object)", file="JobClient.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m2_56 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="JobClient.cs", label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="49-49"];
m2_58 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobClient.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m2_22 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", file="JobClient.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", span="13-13"];
m2_17 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="JobClient.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="20-20"];
m2_10 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="_jobCreator.CreateJob(context)", span="35-35"];
m2_41 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobClient.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m2_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_11 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="20-20"];
m2_7 [cluster="Mock<JobStorage>.cstr", file="JobClient.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m2_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobClient.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m2_12 [cluster="lambda expression", file="JobClient.cs", label="new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token)", span="20-20"];
m2_62 [cluster="System.Guid.ToString()", file="JobClient.cs", label="Entry System.Guid.ToString()", span="0-0"];
m2_44 [cluster="System.DateTime.Add(System.TimeSpan)", file="JobClient.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m2_55 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_24 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40"];
m2_32 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="return Async(jobType, args);", span="60-60"];
m2_25 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="jobType == null", span="42-42"];
m2_27 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="46-46"];
m2_28 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="48-50"];
m2_29 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="interval != interval.Duration()", span="53-53"];
m2_35 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="var job = CreateJob(jobType, args)", span="66-66"];
m2_33 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="var jobId = GenerateId()", span="63-63"];
m2_31 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="interval.Equals(TimeSpan.Zero)", span="58-58"];
m2_26 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="throw new ArgumentNullException(''jobType'');", span="44-44"];
m2_30 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="throw new ArgumentOutOfRangeException(''interval'', ''Interval value can not be negative.'');", span="55-55"];
m2_38 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="return jobId;", span="73-73"];
m2_34 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="var state = new ScheduledState(jobId, ''Scheduled by the Client'', DateTime.UtcNow.Add(interval))", span="65-65"];
m2_36 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="68-69"];
m2_37 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="_jobCreator.CreateJob(context)", span="71-71"];
m2_39 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40"];
m2_48 [cluster="Unk.Dispose", file="JobClient.cs", label="Entry Unk.Dispose", span=""];
m2_23 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m2_20 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJob(System.Type, object)", span="81-81"];
m2_49 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="var job = new Dictionary<string, string>()", span="84-84"];
m2_50 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="85-85"];
m2_51 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="job[''Args''] = JobHelper.ToJson(ClientJobDescriptor.SerializeProperties(jobArgs))", span="86-86"];
m2_53 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="return job;", span="89-89"];
m2_52 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="87-87"];
m2_54 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJob(System.Type, object)", span="81-81"];
m2_40 [cluster="System.TimeSpan.Duration()", file="JobClient.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m2_61 [cluster="System.Guid.NewGuid()", file="JobClient.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m2_43 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="JobClient.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m2_15 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JobClient.cs", label="Hangfire.Core.Tests.BackgroundProcessContextMock", span=""];
m2_21 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="JobClient.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m2_63 [file="JobClient.cs", label="HangFire.Client.JobClient", span=""];
m3_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_0 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobFetcher.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m3_1 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobFetcher.cs", label="ServerId = ''server''", span="14-14"];
m3_2 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobFetcher.cs", label="Storage = new Mock<JobStorage>()", span="15-15"];
m3_3 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", color=green, community=0, file="JobFetcher.cs", label="0: Properties = new Dictionary<string, object>()", span="16-16"];
m3_4 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", color=green, community=0, file="JobFetcher.cs", label="0: CancellationTokenSource = new CancellationTokenSource()", span="17-17"];
m3_5 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobFetcher.cs", label="_context = new Lazy<BackgroundProcessContext>(\r\n                () => new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token))", span="19-20"];
m3_6 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="JobFetcher.cs", label="Exit Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m3_10 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="JobFetcher.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m3_14 [cluster="BackgroundProcessContext.cstr", file="JobFetcher.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m3_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobFetcher.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m3_7 [cluster="Mock<JobStorage>.cstr", file="JobFetcher.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m3_11 [cluster="lambda expression", file="JobFetcher.cs", label="Entry lambda expression", span="20-20"];
m3_12 [cluster="lambda expression", file="JobFetcher.cs", label="new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token)", span="20-20"];
m3_13 [cluster="lambda expression", file="JobFetcher.cs", label="Exit lambda expression", span="20-20"];
m3_15 [file="JobFetcher.cs", label="Hangfire.Core.Tests.BackgroundProcessContextMock", span=""];
m4_25 [cluster="Unk.OnScenarioStart", file="JobFetcher.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m4_29 [cluster="Unk.CollectScenarioErrors", file="JobFetcher.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m4_21 [cluster="Unk.OnScenarioEnd", file="JobFetcher.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m4_55 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m4_56 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121"];
m4_57 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="123-123"];
m4_58 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125"];
m4_59 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127"];
m4_60 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129"];
m4_61 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", color=red, community=0, file="JobFetcher.feature.cs", label="0: testRunner.Then(''the fetcher returns null'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131"];
m4_62 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="133-133"];
m4_63 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m4_41 [cluster="Unk.And", file="JobFetcher.feature.cs", label="Entry Unk.And", span=""];
m4_54 [cluster="Unk.But", file="JobFetcher.feature.cs", label="Entry Unk.But", span=""];
m4_5 [cluster="Unk.GetTestRunner", file="JobFetcher.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m4_26 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m4_27 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m4_28 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m4_0 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m4_1 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m4_2 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobFetcher'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m4_3 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m4_4 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m4_76 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m4_77 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169"];
m4_78 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="171-171"];
m4_79 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173"];
m4_80 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175"];
m4_81 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m4_82 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", color=red, community=0, file="JobFetcher.feature.cs", label="0: testRunner.Then(''the fetcher returns null'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m4_83 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="181-181"];
m4_84 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m4_9 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m4_10 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m4_11 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="testRunner = null", span="42-42"];
m4_12 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m4_13 [cluster="Unk.OnFeatureEnd", file="JobFetcher.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m4_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobFetcher.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m4_42 [cluster="Unk.When", file="JobFetcher.feature.cs", label="Entry Unk.When", span=""];
m4_30 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", span="75-75"];
m4_31 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns job id when it dequeues a job'', ((string[])(null)))", span="77-77"];
m4_32 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m4_33 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m4_34 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m4_35 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m4_36 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m4_37 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="89-89"];
m4_38 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsJobIdWhenItDequeuesAJob()", span="75-75"];
m4_44 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m4_45 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98"];
m4_46 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m4_47 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m4_48 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m4_49 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m4_50 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m4_51 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110"];
m4_52 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="112-112"];
m4_53 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m4_64 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m4_65 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher dequeues jobs in the FIFO order'', ((string[])(null)))", span="142-142"];
m4_66 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="144-144"];
m4_67 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146"];
m4_68 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148"];
m4_69 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150"];
m4_70 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152"];
m4_71 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154"];
m4_72 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m4_73 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m4_74 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="160-160"];
m4_75 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m4_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobFetcher.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m4_43 [cluster="Unk.Then", file="JobFetcher.feature.cs", label="Entry Unk.Then", span=""];
m4_40 [cluster="Unk.Given", file="JobFetcher.feature.cs", label="Entry Unk.Given", span=""];
m4_85 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m4_86 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190"];
m4_87 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="192-192"];
m4_88 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194"];
m4_89 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196"];
m4_90 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m4_91 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m4_92 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="202-202"];
m4_93 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m4_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobFetcher.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m4_14 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m4_15 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m4_16 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="HangFire.Tests.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m4_17 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m4_18 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m4_19 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m4_20 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m4_22 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m4_23 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m4_24 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m4_8 [cluster="Unk.OnFeatureStart", file="JobFetcher.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m4_94 [file="JobFetcher.feature.cs", label="HangFire.Tests.JobFetcherFeature", span=""];
m5_13 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.StateName_ShouldBeEqualToSucceededState()", file="JobFetcherSteps.cs", label="Entry HangFire.Redis.Tests.States.SucceededStateHandlerFacts.StateName_ShouldBeEqualToSucceededState()", span="27-27"];
m5_14 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.StateName_ShouldBeEqualToSucceededState()", file="JobFetcherSteps.cs", label="var handler = new SucceededStateHandler()", span="29-29"];
m5_15 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.StateName_ShouldBeEqualToSucceededState()", file="JobFetcherSteps.cs", label="Assert.Equal(SucceededState.StateName, handler.StateName)", span="30-30"];
m5_16 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.StateName_ShouldBeEqualToSucceededState()", file="JobFetcherSteps.cs", label="Exit HangFire.Redis.Tests.States.SucceededStateHandlerFacts.StateName_ShouldBeEqualToSucceededState()", span="27-27"];
m5_19 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", file="JobFetcherSteps.cs", label="Entry HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", span="34-34"];
m5_20 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", file="JobFetcherSteps.cs", label="var handler = new SucceededStateHandler()", span="36-36"];
m5_21 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", file="JobFetcherSteps.cs", label="handler.Apply(_context, _transaction.Object)", span="37-37"];
m5_22 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", file="JobFetcherSteps.cs", label="_transaction.Verify(x => x.InsertToList(\r\n                ''succeeded'', JobId))", span="39-40"];
m5_23 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", file="JobFetcherSteps.cs", label="_transaction.Verify(x => x.TrimList(\r\n                ''succeeded'', 0, 99))", span="41-42"];
m5_24 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", file="JobFetcherSteps.cs", label="Exit HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Apply_ShouldInsertTheJob_ToTheBeginningOfTheSucceededList_AndTrimIt()", span="34-34"];
m5_7 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="JobFetcherSteps.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m5_34 [cluster="Unk.TrimList", file="JobFetcherSteps.cs", label="Entry Unk.TrimList", span=""];
m5_35 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheSucceededList()", file="JobFetcherSteps.cs", label="Entry HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheSucceededList()", span="46-46"];
m5_36 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheSucceededList()", file="JobFetcherSteps.cs", label="var handler = new SucceededStateHandler()", span="48-48"];
m5_37 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheSucceededList()", file="JobFetcherSteps.cs", label="handler.Unapply(_context, _transaction.Object)", span="49-49"];
m5_38 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheSucceededList()", file="JobFetcherSteps.cs", label="_transaction.Verify(x => x.RemoveFromList(''succeeded'', JobId))", span="51-51"];
m5_39 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheSucceededList()", file="JobFetcherSteps.cs", label="Exit HangFire.Redis.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheSucceededList()", span="46-46"];
m5_30 [cluster="Unk.InsertToList", file="JobFetcherSteps.cs", label="Entry Unk.InsertToList", span=""];
m5_25 [cluster="Unk.Apply", file="JobFetcherSteps.cs", label="Entry Unk.Apply", span=""];
m5_4 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobFetcherSteps.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m5_5 [cluster="ApplyStateContext.cstr", file="JobFetcherSteps.cs", label="Entry ApplyStateContext.cstr", span=""];
m5_18 [cluster="Unk.Equal", file="JobFetcherSteps.cs", label="Entry Unk.Equal", span=""];
m5_40 [cluster="Unk.Unapply", file="JobFetcherSteps.cs", label="Entry Unk.Unapply", span=""];
m5_44 [cluster="Unk.RemoveFromList", file="JobFetcherSteps.cs", label="Entry Unk.RemoveFromList", span=""];
m5_41 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="51-51"];
m5_9 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="18-18"];
m5_10 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Console.WriteLine()", span="18-18"];
m5_11 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Exit lambda expression", span="18-18"];
m5_27 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="39-40"];
m5_31 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="41-42"];
m5_28 [cluster="lambda expression", file="JobFetcherSteps.cs", label="x.InsertToList(\r\n                ''succeeded'', JobId)", span="39-40"];
m5_29 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Exit lambda expression", span="39-40"];
m5_32 [cluster="lambda expression", file="JobFetcherSteps.cs", label="x.TrimList(\r\n                ''succeeded'', 0, 99)", span="41-42"];
m5_33 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Exit lambda expression", span="41-42"];
m5_42 [cluster="lambda expression", file="JobFetcherSteps.cs", label="x.RemoveFromList(''succeeded'', JobId)", span="51-51"];
m5_43 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Exit lambda expression", span="51-51"];
m5_6 [cluster="Mock<IStorageConnection>.cstr", file="JobFetcherSteps.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m5_12 [cluster="System.Console.WriteLine()", file="JobFetcherSteps.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m5_0 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="JobFetcherSteps.cs", label="Entry HangFire.Redis.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="16-16"];
m5_1 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="JobFetcherSteps.cs", label="var job = Job.FromExpression(() => Console.WriteLine())", span="18-18"];
m5_2 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="JobFetcherSteps.cs", label="_context = new ApplyStateContext(\r\n                new Mock<IStorageConnection>().Object,\r\n                new StateContext(JobId, job),\r\n                new SucceededState(),\r\n                null)", span="19-23"];
m5_3 [cluster="HangFire.Redis.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="JobFetcherSteps.cs", label="Exit HangFire.Redis.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="16-16"];
m5_8 [cluster="HangFire.States.SucceededState.SucceededState()", file="JobFetcherSteps.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m5_17 [cluster="HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", file="JobFetcherSteps.cs", label="Entry HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", span="21-21"];
m5_26 [cluster="Unk.Verify", file="JobFetcherSteps.cs", label="Entry Unk.Verify", span=""];
m5_45 [file="JobFetcherSteps.cs", label="HangFire.Redis.Tests.States.SucceededStateHandlerFacts", span=""];
m6_7 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", span="42-42"];
m6_12 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="JobManager.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="86-86"];
m6_13 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="JobManager.cs", label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", span="88-88"];
m6_14 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="JobManager.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="89-89"];
m6_15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="JobManager.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="90-90"];
m6_16 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="JobManager.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="91-91"];
m6_17 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="JobManager.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="92-92"];
m6_18 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="JobManager.cs", label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="86-86"];
m6_11 [cluster="System.Math.Min(int, int)", file="JobManager.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m6_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34"];
m6_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="36-36"];
m6_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=red, community=0, file="JobManager.cs", label="0: Queues = new[] { EnqueuedState.DefaultQueue }", span="37-37"];
m6_8 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="FilterProvider = JobFilterProviders.Providers", span="44-44"];
m6_19 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="JobManager.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m6_21 [cluster="Unk.Join", file="JobManager.cs", label="Entry Unk.Join", span=""];
m6_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", span="38-38"];
m6_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="JobManager.cs", label="5: HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", span="40-40"];
m6_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingDelay", span="39-39"];
m6_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="41-41"];
m6_9 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="HangFire.Filters.RecurringAttribute", span=""];
m6_10 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34"];
m6_22 [cluster="lambda expression", file="JobManager.cs", label="Entry lambda expression", span="90-90"];
m6_23 [cluster="lambda expression", file="JobManager.cs", label="''''' + x + '''''", span="90-90"];
m6_24 [cluster="lambda expression", file="JobManager.cs", label="Exit lambda expression", span="90-90"];
m6_20 [cluster="Unk.Select", file="JobManager.cs", label="Entry Unk.Select", span=""];
m6_25 [file="JobManager.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m8_99 [cluster="string.Format(string, object, object, object)", file="LayoutPage.generated.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m8_90 [cluster="HangFire.Web.RazorPage.Write(object)", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m8_92 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="LayoutPage.generated.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="553-553"];
m8_89 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m8_95 [cluster="string.IsNullOrEmpty(string)", file="LayoutPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_94 [cluster="Unk.StartsWith", file="LayoutPage.generated.cs", label="Entry Unk.StartsWith", span=""];
m8_0 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.Execute()", span="39-39"];
m8_1 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", span="43-43"];
m8_2 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''<!DOCTYPE html>\r\n\r\n<html lang=\''ru\''>\r\n<head>\r\n    <title>'')", span="49-49"];
m8_3 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Title)", span="54-54"];
m8_4 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral('' - HangFire</title>\r\n    <meta charset=\''utf-8\'' />\r\n    <meta name=\''viewport\'' cont'' +\r\n''ent=\''width=device-width, initial-scale=1.0\''>\r\n    <link rel=\''stylesheet\'' href=\'''')", span="59-60"];
m8_5 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/css/styles.css''))", span="65-65"];
m8_6 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@'''''' />\r\n</head>\r\n    <body>\r\n        <!-- Wrap all page content here -->\r\n        <div id=''''wrap''''>\r\n\r\n            <!-- Fixed navbar -->\r\n            <div class=''''navbar navbar-default navbar-static-top''''>\r\n                <div class=''''container''''>\r\n                    <div class=''''navbar-header''''>\r\n                        <button type=''''button'''' class=''''navbar-toggle'''' data-toggle=''''collapse'''' data-target=''''.navbar-collapse''''>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                        </button>\r\n                        <a class=''''navbar-brand'''' href='''''')", span="70-85"];
m8_7 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/''))", span="90-90"];
m8_8 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@''''''>HangFire Monitor</a>\r\n                    </div>\r\n                    <div class=''''collapse navbar-collapse''''>\r\n                        <ul class=''''nav navbar-nav navbar-right''''>\r\n                            <li>\r\n                                <a href=''''/''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n\r\n            <div class=''''container''''>\r\n                <div class=''''col-md-3''''>\r\n'')", span="95-115"];
m8_9 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="var statistics = JobStorage.GetStatistics()", span="120-120"];
m8_10 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                    <div id=\''stats\'' class=\''list-group\''>\r\n                      '' +\r\n''  <a class=\''list-group-item '')", span="125-126"];
m8_19 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Servers)", span="173-173"];
m8_25 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Enqueued)", span="207-207"];
m8_27 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Queues)", span="219-219"];
m8_33 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Scheduled)", span="256-256"];
m8_39 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Processing)", span="289-289"];
m8_45 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Succeeded)", span="322-322"];
m8_51 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Failed)", span="355-355"];
m8_11 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/'') ? ''active'' : null)", span="131-131"];
m8_12 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="136-136"];
m8_13 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/''))", span="141-141"];
m8_14 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''glyphicon glyphicon-dashboard\''></spa'' +\r\n''n>\r\n                            Dashboard\r\n                        </a>\r\n\r\n     '' +\r\n''                   <a class=\''list-group-item '')", span="146-148"];
m8_15 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/servers'') ? ''active'' : null)", span="153-153"];
m8_16 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="158-158"];
m8_17 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/servers''))", span="163-163"];
m8_18 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>'')", span="168-168"];
m8_20 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</span>\r\n                            <span class=\''glyphicon glyphicon-hdd\''></span'' +\r\n''>\r\n                            Active Servers\r\n                        </a>\r\n\r\n '' +\r\n''                       <a class=\''list-group-item '')", span="178-180"];
m8_21 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.StartsWith(''/queues'') ? ''active'' : null)", span="185-185"];
m8_22 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="190-190"];
m8_23 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/queues''))", span="195-195"];
m8_24 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>\r\n  '' +\r\n''                              <span id=\''stats-enqueued\'' title=\''Enqueued jobs cou'' +\r\n''nt\''>\r\n                                    '')", span="200-202"];
m8_26 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                                </span>\r\n                                / \r\n  '' +\r\n''                              <span id=\''stats-queues\'' title=\''Queues count\''>\r\n   '' +\r\n''                                 '')", span="212-214"];
m8_28 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@''\r\n                                </span>\r\n                            </span>\r\n                            <span class=''''glyphicon glyphicon-inbox''''></span>\r\n                            Jobs & Queues\r\n                        </a>\r\n                        <a class=''''list-group-item stats-indent '')", span="224-230"];
m8_29 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/scheduled'') ? ''active'' : null)", span="235-235"];
m8_30 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="240-240"];
m8_31 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/scheduled''))", span="245-245"];
m8_32 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-scheduled\'' class=\''label label-inf'' +\r\n''o pull-right\''>\r\n                                '')", span="250-251"];
m8_34 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Scheduled\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="261-263"];
m8_35 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/processing'') ? ''active'' : null)", span="268-268"];
m8_36 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="273-273"];
m8_37 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/processing''))", span="278-278"];
m8_38 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-workers\'' class=\''label label-warni'' +\r\n''ng pull-right\''>\r\n                                '')", span="283-284"];
m8_40 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Processing\r\n  '' +\r\n''                      </a>\r\n                        <a class=\''list-group-item st'' +\r\n''ats-indent '')", span="294-296"];
m8_41 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/succeeded'') ? ''active'' : null)", span="301-301"];
m8_42 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="306-306"];
m8_43 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/succeeded''))", span="311-311"];
m8_44 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-succeeded\'' class=\''label label-suc'' +\r\n''cess pull-right\''>\r\n                                '')", span="316-317"];
m8_46 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Succeeded\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="327-329"];
m8_47 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.PathInfo.Equals(''/failed'') ? ''active'' : null)", span="334-334"];
m8_48 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="339-339"];
m8_49 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/failed''))", span="344-344"];
m8_50 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-failed\'' class=\''label label-danger'' +\r\n'' pull-right\''>\r\n                                '')", span="349-350"];
m8_52 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Failed\r\n      '' +\r\n''                  </a>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n'' +\r\n''                <div class=\''col-md-9\''>\r\n'')", span="360-362"];
m8_53 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Breadcrumbs != null", span="367-367"];
m8_54 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                        <ol class=\''breadcrumb\''>\r\n                            <li>'' +\r\n''<a href=\'''')", span="373-374"];
m8_66 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                    <h1 class=\''page-header\''>\r\n                        '')", span="445-445"];
m8_55 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/''))", span="379-379"];
m8_56 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''><span class=\''glyphicon glyphicon-home\''></span></a></li>\r\n'')", span="384-384"];
m8_57 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label=Breadcrumbs, span="389-389"];
m8_58 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                                <li><a href=\'''')", span="395-395"];
m8_63 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            <li class=\''active\''>'')", span="425-425"];
m8_59 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(breadcrumb.Value)", span="400-400"];
m8_60 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>'')", span="405-405"];
m8_61 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(breadcrumb.Key)", span="410-410"];
m8_62 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</a></li>\r\n'')", span="415-415"];
m8_64 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(BreadcrumbsTitle ?? Title)", span="430-430"];
m8_65 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</li>\r\n                        </ol>\r\n'')", span="435-435"];
m8_67 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Title)", span="450-450"];
m8_68 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", span="455-455"];
m8_69 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="!String.IsNullOrEmpty(Subtitle)", span="460-460"];
m8_70 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            <small>'')", span="466-466"];
m8_73 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                    </h1>\r\n                    '')", span="486-486"];
m8_71 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Subtitle)", span="471-471"];
m8_72 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</small>\r\n'')", span="476-476"];
m8_74 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(RenderBody())", span="491-491"];
m8_75 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@''\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://github.io/odinserj/hangfire'''' target=''''_blank''''>HangFire \r\n                            '')", span="496-506"];
m8_76 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(FileVersionInfo.GetVersionInfo(GetType().Assembly.Location).ProductVersion)", span="511-511"];
m8_77 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>\r\n                        '')", span="516-517"];
m8_78 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=red, community=0, file="LayoutPage.generated.cs", label="0: Write(String.Format(''redis://{0}:{1}/{2}'', RedisFactory.Host, RedisFactory.Port, RedisFactory.Db))", span="522-522"];
m8_79 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                    </li>\r\n                    <li>Time: '')", span="527-527"];
m8_80 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(DateTime.UtcNow)", span="532-532"];
m8_81 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral('' UTC\r\n                    </li>\r\n                    <li>Generated in ['')", span="537-537"];
m8_82 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write((DateTime.UtcNow - (DateTime)Context.Items[''GenerationStartedAt'']).Milliseconds)", span="542-542"];
m8_83 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@'' ms]\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n        <script>\r\n            (function (hangFire) {\r\n                hangFire.config = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: ''')", span="547-557"];
m8_84 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/stats''))", span="562-562"];
m8_85 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'\r\n                };\r\n            })(window.HangFire = window.HangFire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="567-568"];
m8_86 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/js/scripts.js''))", span="573-573"];
m8_87 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="578-578"];
m8_88 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Exit HangFire.Web.Pages.LayoutPage.Execute()", span="39-39"];
m8_91 [cluster="HttpRequestBase.LinkTo(string)", file="LayoutPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m8_98 [cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="LayoutPage.generated.cs", label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0"];
m8_96 [cluster="HangFire.Web.RazorPage.RenderBody()", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderBody()", span="48-48"];
m8_97 [cluster="object.GetType()", file="LayoutPage.generated.cs", label="Entry object.GetType()", span="0-0"];
m8_93 [cluster="Unk.Equals", file="LayoutPage.generated.cs", label="Entry Unk.Equals", span=""];
m8_100 [cluster="Unk.Write", file="LayoutPage.generated.cs", label="Entry Unk.Write", span=""];
m8_101 [file="LayoutPage.generated.cs", label="HangFire.Web.Pages.LayoutPage", span=""];
m9_18 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="43-43"];
m9_19 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs", label="return In(interval, typeof(TJob), args);", span="46-46"];
m9_20 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="43-43"];
m9_3 [cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="16-16"];
m9_4 [cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs", label="return Async(typeof(TJob), args);", span="19-19"];
m9_5 [cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="16-16"];
m9_28 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="Perform.cs", label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40"];
m9_6 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="27-27"];
m9_10 [cluster="HangFire.Perform.Async(System.Type, object)", color=red, community=0, file="Perform.cs", label="0: var client = new JobClient()", span="29-29"];
m9_11 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="return client.Async(jobType, args);", span="31-31"];
m9_12 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="27-27"];
m9_22 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49"];
m9_23 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs", label="return In(interval, jobType, null);", span="51-51"];
m9_24 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49"];
m9_14 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="Perform.cs", label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="12-12"];
m9_0 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="Entry HangFire.Perform.Async<TJob>()", span="9-9"];
m9_1 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="return Async<TJob>(null);", span="12-12"];
m9_2 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="Exit HangFire.Perform.Async<TJob>()", span="9-9"];
m9_7 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type)", span="22-22"];
m9_8 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="return Async(jobType, null);", span="24-24"];
m9_9 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Exit HangFire.Perform.Async(System.Type)", span="22-22"];
m9_21 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54"];
m9_25 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="Perform.cs", label="0: var client = new JobClient()", span="56-56"];
m9_26 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs", label="return client.In(interval, jobType, args);", span="58-58"];
m9_27 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54"];
m9_13 [cluster="HangFire.Client.JobClient.JobClient()", file="Perform.cs", label="Entry HangFire.Client.JobClient.JobClient()", span="7-7"];
m9_15 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36"];
m9_16 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="return In<TJob>(interval, null);", span="39-39"];
m9_17 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36"];
m10_46 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="100-100"];
m10_47 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="PrioritizedJobFetcher.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="102-103"];
m10_48 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="PrioritizedJobFetcher.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="105-105"];
m10_49 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="100-100"];
m10_35 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m10_39 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="PrioritizedJobFetcher.cs", label="_server = new JobServer(\r\n                Redis.Storage,\r\n                name,\r\n                workers,\r\n                queues)", span="84-88"];
m10_40 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m10_20 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m10_21 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="PrioritizedJobFetcher.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="52-52"];
m10_22 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m10_5 [cluster="HangFire.Server.JobServer.Dispose()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="72-72"];
m10_29 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m10_30 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="PrioritizedJobFetcher.cs", label="WhenTheServerStartsWithWorkers(name, 1)", span="67-67"];
m10_31 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m10_66 [cluster="Unk.IsTrue", file="PrioritizedJobFetcher.cs", label="Entry Unk.IsTrue", span=""];
m10_76 [cluster="Unk.GetAllEntriesFromHash", file="PrioritizedJobFetcher.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m10_6 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="29-29"];
m10_7 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="PrioritizedJobFetcher.cs", label="Given(''a job'')", span="31-31"];
m10_8 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="PrioritizedJobFetcher.cs", label="Given(''the job was dequeued'')", span="32-32"];
m10_9 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="29-29"];
m10_27 [cluster="Unk.AddItemToSet", file="PrioritizedJobFetcher.cs", label="Entry Unk.AddItemToSet", span=""];
m10_15 [cluster="string.Format(string, object)", file="PrioritizedJobFetcher.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_36 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m10_37 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="CreateServer(name, 1, new [] { queue1, queue2 })", span="79-79"];
m10_38 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m10_60 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m10_61 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Thread.Sleep(_serverStartupTimeout)", span="127-127"];
m10_62 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="128-128"];
m10_63 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m10_52 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="110-110"];
m10_53 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="PrioritizedJobFetcher.cs", label="ThenTheJobShouldBeRemovedFromTheDequeuedList(JobSteps.DefaultJobId)", span="112-112"];
m10_54 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="110-110"];
m10_78 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m10_79 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="var registeredQueues = Redis.Client.GetAllItemsFromList(String.Format(''hangfire:server:{0}:queues'', name))", span="148-148"];
m10_81 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="Assert.AreEqual(queue1, registeredQueues[0])", span="151-151"];
m10_82 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="Assert.AreEqual(queue2, registeredQueues[1])", span="152-152"];
m10_80 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="Assert.AreEqual(2, registeredQueues.Count)", span="150-150"];
m10_83 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m10_41 [cluster="HangFire.Server.JobServer.JobServer(HangFire.JobStorage, string, int, System.Collections.Generic.IEnumerable<string>)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.JobServer.JobServer(HangFire.JobStorage, string, int, System.Collections.Generic.IEnumerable<string>)", span="47-47"];
m10_71 [cluster="Unk.IsFalse", file="PrioritizedJobFetcher.cs", label="Entry Unk.IsFalse", span=""];
m10_84 [cluster="Unk.AreEqual", file="PrioritizedJobFetcher.cs", label="Entry Unk.AreEqual", span=""];
m10_64 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="PrioritizedJobFetcher.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m10_42 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="92-92"];
m10_43 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="PrioritizedJobFetcher.cs", label="WhenTheServerStarts(name)", span="94-94"];
m10_44 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="PrioritizedJobFetcher.cs", label="_server.Dispose()", span="95-95"];
m10_45 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="92-92"];
m10_55 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m10_56 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="PrioritizedJobFetcher.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="118-119"];
m10_57 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="PrioritizedJobFetcher.cs", label="CollectionAssert.DoesNotContain(jobIds, jobId)", span="121-121"];
m10_58 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m10_0 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m10_1 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="PrioritizedJobFetcher.cs", label="_server != null", span="21-21"];
m10_2 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="PrioritizedJobFetcher.cs", label="_server.Dispose()", span="23-23"];
m10_3 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="PrioritizedJobFetcher.cs", label="_server = null", span="24-24"];
m10_4 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m10_28 [cluster="Unk.AddItemToList", file="PrioritizedJobFetcher.cs", label="Entry Unk.AddItemToList", span=""];
m10_16 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m10_17 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Given(''a job'')", span="45-45"];
m10_18 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="46-46"];
m10_19 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m10_72 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m10_73 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="PrioritizedJobFetcher.cs", label="var properties = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:server:{0}'', name))", span="141-141"];
m10_74 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="PrioritizedJobFetcher.cs", label="DictionaryAssert.ContainsFollowingItems(table, properties)", span="142-142"];
m10_75 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m10_50 [cluster="Unk.GetAllItemsFromList", file="PrioritizedJobFetcher.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m10_65 [cluster="Unk.SetContainsItem", file="PrioritizedJobFetcher.cs", label="Entry Unk.SetContainsItem", span=""];
m10_51 [cluster="Unk.Contains", file="PrioritizedJobFetcher.cs", label="Entry Unk.Contains", span=""];
m10_91 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m10_89 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m10_90 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="PrioritizedJobFetcher.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}:queues'', name)))", span="164-164"];
m10_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m10_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="PrioritizedJobFetcher.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="38-38"];
m10_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="PrioritizedJobFetcher.cs", label="Given(''the job was dequeued'')", span="39-39"];
m10_14 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m10_10 [cluster="Unk.Given", file="PrioritizedJobFetcher.cs", label="Entry Unk.Given", span=""];
m10_23 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m10_24 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="58-58"];
m10_25 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="59-61"];
m10_26 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m10_59 [cluster="Unk.DoesNotContain", file="PrioritizedJobFetcher.cs", label="Entry Unk.DoesNotContain", span=""];
m10_32 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m10_33 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="PrioritizedJobFetcher.cs", label="CreateServer(name, workers, new [] { ''critical'' })", span="73-73"];
m10_34 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m10_77 [cluster="Unk.ContainsFollowingItems", file="PrioritizedJobFetcher.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m10_87 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m10_85 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m10_86 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="PrioritizedJobFetcher.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="158-158"];
m10_67 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m10_68 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Thread.Sleep(_serverStartupTimeout)", span="134-134"];
m10_69 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="135-135"];
m10_70 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m10_88 [cluster="Unk.ContainsKey", file="PrioritizedJobFetcher.cs", label="Entry Unk.ContainsKey", span=""];
m10_92 [file="PrioritizedJobFetcher.cs", label="HangFire.Tests.ServerSteps", span=""];
m11_84 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Program.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="43-43"];
m11_74 [cluster="HangFire.RetryJobsFilter.RetryJobsFilter()", file="Program.cs", label="Entry HangFire.RetryJobsFilter.RetryJobsFilter()", span="6-6"];
m11_91 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="27-27"];
m11_24 [cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs", label="Entry ConsoleSample.RecurringJob.Perform()", span="63-63"];
m11_25 [cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs", label="Console.WriteLine(''Performing recurring task...'')", span="65-65"];
m11_26 [cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs", label="Exit ConsoleSample.RecurringJob.Perform()", span="63-63"];
m11_27 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Entry ConsoleSample.Program.Main()", span="71-71"];
m11_28 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="LogManager.LogFactory = new ConsoleLogFactory()", span="73-73"];
m11_29 [cluster="ConsoleSample.Program.Main()", color=red, community=0, file="Program.cs", label="0: RedisFactory.Port = 6379", span="75-75"];
m11_30 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="RedisFactory.Db = 3", span="76-76"];
m11_31 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="GlobalJobFilters.Filters.Add(new HistoryStatisticsFilter())", span="78-78"];
m11_32 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="GlobalJobFilters.Filters.Add(new RetryJobsFilter())", span="79-79"];
m11_33 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="GlobalJobFilters.Filters.Add(new RecurringJobsFilter())", span="80-80"];
m11_34 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var server = new BackgroundJobServer(''critical'', ''default'')", span="82-82"];
m11_35 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="server.Start()", span="84-84"];
m11_36 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''HangFire Server has been started. Press Ctrl+C to exit...'')", span="86-86"];
m11_37 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var count = 1", span="88-88"];
m11_38 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=true, span="90-90"];
m11_45 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.Async<ConsoleJob>(new { Number = count++ })", span="106-106"];
m11_58 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.In<ConsoleJob>(TimeSpan.FromSeconds(seconds), new { Number = count++ })", span="128-128"];
m11_39 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var command = Console.ReadLine()", span="92-92"];
m11_68 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="157-157"];
m11_40 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="94-94"];
m11_41 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="99-99"];
m11_42 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(4))", span="103-103"];
m11_50 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="116-116"];
m11_51 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(6))", span="118-118"];
m11_56 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="125-125"];
m11_57 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var seconds = int.Parse(command.Substring(2))", span="127-127"];
m11_59 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="131-131"];
m11_62 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="137-137"];
m11_63 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(5))", span="141-141"];
m11_43 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="104-104"];
m11_44 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="104-104"];
m11_46 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="104-104"];
m11_47 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="108-108"];
m11_48 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="110-110"];
m11_49 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="112-112"];
m11_52 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="119-119"];
m11_53 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="119-119"];
m11_55 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="119-119"];
m11_54 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.Async<ErrorJob>(new { ArticleId = 2, Product = ''Casio Privia PX-850'' })", span="121-121"];
m11_60 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Perform.Async<RecurringJob>()", span="133-133"];
m11_61 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Recurring job added'')", span="134-134"];
m11_64 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Parallel.For(0, workCount, i =>\r\n                                {\r\n                                    var type = i % 2 == 0 ? typeof (FastCriticalJob) : typeof (FastDefaultJob);\r\n                                    Perform.Async(type, new { Number = i });\r\n                                })", span="142-146"];
m11_65 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="147-147"];
m11_66 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="149-149"];
m11_67 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="151-151"];
m11_69 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.ReadLine()", span="158-158"];
m11_70 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Exit ConsoleSample.Program.Main()", span="71-71"];
m11_14 [cluster="System.Exception.Exception()", file="Program.cs", label="Entry System.Exception.Exception()", span="0-0"];
m11_85 [cluster="HangFire.Perform.Async<TJob>()", file="Program.cs", label="Entry HangFire.Perform.Async<TJob>()", span="9-9"];
m11_83 [cluster="HangFire.Perform.Async<TJob>(object)", file="Program.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="16-16"];
m11_23 [cluster="System.IO.FileLoadException.FileLoadException()", file="Program.cs", label="Entry System.IO.FileLoadException.FileLoadException()", span="0-0"];
m11_82 [cluster="int.Parse(string)", file="Program.cs", label="Entry int.Parse(string)", span="0-0"];
m11_15 [cluster="System.TimeSpan.FromSeconds(double)", file="Program.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_76 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="Program.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="14-14"];
m11_72 [cluster="HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", file="Program.cs", label="Entry HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", span="6-6"];
m11_4 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Entry ConsoleSample.ConsoleJob.Perform()", span="33-33"];
m11_5 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="int time", span="35-35"];
m11_6 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label=_random, span="36-36"];
m11_7 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="time = _random.Next(10)", span="38-38"];
m11_8 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="time < 5", span="41-41"];
m11_10 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Thread.Sleep(TimeSpan.FromSeconds(5 + time))", span="46-46"];
m11_9 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="throw new Exception();", span="43-43"];
m11_11 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Console.WriteLine(''Finished task: '' + Number)", span="47-47"];
m11_12 [cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs", label="Exit ConsoleSample.ConsoleJob.Perform()", span="33-33"];
m11_16 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="Program.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m11_80 [cluster="string.StartsWith(string, System.StringComparison)", file="Program.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m11_2 [cluster="ConsoleSample.FastDefaultJob.Perform()", file="Program.cs", label="Entry ConsoleSample.FastDefaultJob.Perform()", span="21-21"];
m11_3 [cluster="ConsoleSample.FastDefaultJob.Perform()", file="Program.cs", label="Exit ConsoleSample.FastDefaultJob.Perform()", span="21-21"];
m11_22 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="Program.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m11_75 [cluster="HangFire.RecurringJobsFilter.RecurringJobsFilter()", file="Program.cs", label="Entry HangFire.RecurringJobsFilter.RecurringJobsFilter()", span="18-18"];
m11_78 [cluster="System.Console.ReadLine()", file="Program.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m11_13 [cluster="System.Random.Next(int)", file="Program.cs", label="Entry System.Random.Next(int)", span="0-0"];
m11_0 [cluster="ConsoleSample.FastCriticalJob.Perform()", file="Program.cs", label="Entry ConsoleSample.FastCriticalJob.Perform()", span="13-13"];
m11_1 [cluster="ConsoleSample.FastCriticalJob.Perform()", file="Program.cs", label="Exit ConsoleSample.FastCriticalJob.Perform()", span="13-13"];
m11_79 [cluster="string.Equals(string, System.StringComparison)", file="Program.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m11_87 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="142-146"];
m11_88 [cluster="lambda expression", file="Program.cs", label="var type = i % 2 == 0 ? typeof (FastCriticalJob) : typeof (FastDefaultJob)", span="144-144"];
m11_89 [cluster="lambda expression", file="Program.cs", label="Perform.Async(type, new { Number = i })", span="145-145"];
m11_90 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="142-146"];
m11_86 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="Program.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m11_77 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="51-51"];
m11_73 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="Program.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m11_17 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_18 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="Entry ConsoleSample.ErrorJob.Perform()", span="53-53"];
m11_19 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="Console.WriteLine(''Beginning error task...'')", span="55-55"];
m11_20 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="throw new InvalidOperationException(null, new FileLoadException());", span="56-56"];
m11_21 [cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs", label="Exit ConsoleSample.ErrorJob.Perform()", span="53-53"];
m11_71 [cluster="ConsoleLogFactory.cstr", file="Program.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m11_81 [cluster="string.Substring(int)", file="Program.cs", label="Entry string.Substring(int)", span="0-0"];
m11_92 [file="Program.cs", label="ConsoleSample.ConsoleJob", span=""];
m12_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Redis.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_9 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="Redis.cs", label="Entry HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37"];
m12_10 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="Redis.cs", label="var connection = _storage.GetConnection()", span="39-39"];
m12_12 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="Redis.cs", label="cancellationToken.WaitHandle.WaitOne(HeartbeatInterval)", span="44-44"];
m12_11 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="Redis.cs", label="connection.Heartbeat(_serverId)", span="41-41"];
m12_13 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="Redis.cs", label="Exit HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37"];
m12_16 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="Redis.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m12_15 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="Redis.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="43-43"];
m12_0 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="Redis.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m12_1 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=red, community=0, file="Redis.cs", label="0: storage == null", span="30-30"];
m12_3 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="Redis.cs", label="serverId == null", span="31-31"];
m12_5 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="Redis.cs", label="_storage = storage", span="33-33"];
m12_6 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="Redis.cs", label="_serverId = serverId", span="34-34"];
m12_2 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=red, community=0, file="Redis.cs", label="0: throw new ArgumentNullException(''storage'');", span="30-30"];
m12_4 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="Redis.cs", label="throw new ArgumentNullException(''serverId'');", span="31-31"];
m12_7 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="Redis.cs", label="Exit HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m12_14 [cluster="HangFire.JobStorage.GetConnection()", file="Redis.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m12_17 [file="Redis.cs", label="HangFire.Server.ServerHeartbeat", span=""];
m13_180 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="229-229"];
m13_181 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="231-231"];
m13_182 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="RedisFactory.cs", label="Assert.Same(_component.Object, runner.Component)", span="233-233"];
m13_183 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="229-229"];
m13_213 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", span="277-277"];
m13_214 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="RedisFactory.cs", label="Disposed = true", span="279-279"];
m13_215 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", span="277-277"];
m13_184 [cluster="Unk.Same", file="RedisFactory.cs", label="Entry Unk.Same", span=""];
m13_38 [cluster="System.TimeSpan.FromMilliseconds(double)", file="RedisFactory.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m13_11 [cluster="Unk.Equal", file="RedisFactory.cs", label="Entry Unk.Equal", span=""];
m13_51 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m13_52 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="69-69"];
m13_53 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="RedisFactory.cs", label="runner.Start()", span="71-71"];
m13_54 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="RedisFactory.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="72-72"];
m13_55 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="RedisFactory.cs", label="_component.Verify(\r\n                x => x.Execute(It.IsNotNull<CancellationToken>()),\r\n                Times.AtLeast(2))", span="74-76"];
m13_56 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m13_131 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m13_132 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="165-165"];
m13_133 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="RedisFactory.cs", label="runner.Start()", span="166-166"];
m13_134 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="RedisFactory.cs", label="runner.Stop()", span="167-167"];
m13_135 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="RedisFactory.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="169-169"];
m13_136 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m13_0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", span="13-13"];
m13_1 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", color=red, community=0, file="RedisFactory.cs", label="0: _component = new Mock<IServerComponent>()", span="15-15"];
m13_2 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", color=red, community=0, file="RedisFactory.cs", label="0: _options = new ServerComponentRunnerOptions\r\n            {\r\n                ShutdownTimeout = Timeout.InfiniteTimeSpan // Letting tests to timeout\r\n            }", span="16-19"];
m13_3 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", span="13-13"];
m13_27 [cluster="Unk.DoesNotThrow", file="RedisFactory.cs", label="Entry Unk.DoesNotThrow", span=""];
m13_137 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m13_138 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="_options.MinimumLogVerbosity = true", span="176-176"];
m13_139 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="_options.MaxRetryAttempts = 0", span="177-177"];
m13_140 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="var component = new DisposableComponent()", span="179-179"];
m13_141 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="var runner = new ServerComponentRunner(component, _options)", span="180-180"];
m13_146 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="Assert.True(component.Disposed)", span="190-190"];
m13_142 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="runner.Start()", span="182-182"];
m13_144 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="runner.Dispose()", span="186-186"];
m13_143 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="Thread.Sleep(100)", span="183-183"];
m13_145 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="Thread.Sleep(500)", span="187-187"];
m13_147 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m13_100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m13_101 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="int timesExecuted = 0", span="124-124"];
m13_102 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="126-126"];
m13_103 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="127-128"];
m13_104 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="runner.Start()", span="130-130"];
m13_105 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="runner.Stop()", span="131-131"];
m13_108 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="runner.Start()", span="136-136"];
m13_106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="132-132"];
m13_107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="timesExecuted = 0", span="133-133"];
m13_110 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="Assert.True(timesExecuted > 0)", span="140-140"];
m13_109 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="137-137"];
m13_111 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m13_150 [cluster="System.Threading.Thread.Sleep(int)", file="RedisFactory.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m13_37 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", span="261-261"];
m13_201 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="RedisFactory.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => Thread.Yield())", span="263-264"];
m13_202 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="RedisFactory.cs", label="return new ServerComponentRunner(_component.Object, _options);", span="265-265"];
m13_203 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", span="261-261"];
m13_10 [cluster="Unk.>", file="RedisFactory.cs", label="Entry Unk.>", span=""];
m13_194 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="253-253"];
m13_195 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="CalledTimes++", span="255-255"];
m13_196 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="256-256"];
m13_197 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="token.ThrowIfCancellationRequested()", span="257-257"];
m13_198 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="253-253"];
m13_193 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.WaitingComponent()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.WaitingComponent()", span="249-249"];
m13_83 [cluster="HangFire.Server.ServerComponentRunner.Stop()", file="RedisFactory.cs", label="Entry HangFire.Server.ServerComponentRunner.Stop()", span="70-70"];
m13_166 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="214-214"];
m13_167 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="216-216"];
m13_168 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="217-217"];
m13_169 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="runner.Start()", span="218-218"];
m13_171 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="runner.Dispose()", span="221-221"];
m13_170 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="Thread.Sleep(5000)", span="220-220"];
m13_172 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.AtLeast(2))", span="223-225"];
m13_173 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="214-214"];
m13_120 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m13_121 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="146-146"];
m13_122 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="RedisFactory.cs", label="runner.Start()", span="147-147"];
m13_123 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="RedisFactory.cs", label="runner.Stop()", span="148-148"];
m13_124 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="RedisFactory.cs", label="Assert.DoesNotThrow(runner.Stop)", span="150-150"];
m13_125 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m13_62 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m13_63 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="82-82"];
m13_64 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="runner.Dispose()", span="83-83"];
m13_65 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="Assert.Throws<ObjectDisposedException>(() => runner.Start())", span="85-85"];
m13_66 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m13_39 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="RedisFactory.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m13_92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m13_93 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="114-114"];
m13_94 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="runner.Dispose()", span="115-115"];
m13_95 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="Assert.Throws<ObjectDisposedException>(() => runner.Stop())", span="117-117"];
m13_96 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m13_185 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", span="237-237"];
m13_186 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="var component = new WaitingComponent()", span="239-239"];
m13_187 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="var runner = new ServerComponentRunner(component, _options)", span="240-240"];
m13_191 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="Assert.Equal(1, component.CalledTimes)", span="246-246"];
m13_188 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="runner.Start()", span="241-241"];
m13_190 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="runner.Dispose()", span="244-244"];
m13_189 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="Thread.Sleep(500)", span="243-243"];
m13_192 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", span="237-237"];
m13_126 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m13_127 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="156-156"];
m13_128 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="RedisFactory.cs", label="runner.Start()", span="157-157"];
m13_129 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="RedisFactory.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="159-159"];
m13_130 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m13_200 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisFactory.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m13_23 [cluster="ServerComponentRunner.cstr", file="RedisFactory.cs", label="Entry ServerComponentRunner.cstr", span=""];
m13_16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m13_17 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RedisFactory.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerComponentRunner(_component.Object, null))", span="34-35"];
m13_18 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=red, community=0, file="RedisFactory.cs", label="0: Assert.Equal(''options'', exception.ParamName)", span="37-37"];
m13_19 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m13_40 [cluster="HangFire.Server.ServerComponentRunner.Dispose()", file="RedisFactory.cs", label="Entry HangFire.Server.ServerComponentRunner.Dispose()", span="84-84"];
m13_81 [cluster="Unk.Setup", file="RedisFactory.cs", label="Entry Unk.Setup", span=""];
m13_57 [cluster="HangFire.Server.ServerComponentRunner.Start()", file="RedisFactory.cs", label="Entry HangFire.Server.ServerComponentRunner.Start()", span="61-61"];
m13_31 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", span="47-47"];
m13_32 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="49-49"];
m13_33 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", color=red, community=0, file="RedisFactory.cs", label="0: Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="50-50"];
m13_34 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", color=red, community=0, file="RedisFactory.cs", label="0: runner.Dispose()", span="52-52"];
m13_35 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", color=red, community=0, file="RedisFactory.cs", label="0: _component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="54-54"];
m13_36 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", span="47-47"];
m13_46 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m13_47 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="60-60"];
m13_48 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", color=red, community=0, file="RedisFactory.cs", label="0: runner.Dispose()", span="61-61"];
m13_49 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="RedisFactory.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="63-63"];
m13_50 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m13_149 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="RedisFactory.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m13_91 [cluster="System.Threading.Thread.Yield()", file="RedisFactory.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m13_4 [cluster="Mock<IServerComponent>.cstr", file="RedisFactory.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m13_207 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="264-264"];
m13_12 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="26-26"];
m13_13 [cluster="lambda expression", color=red, community=0, file="RedisFactory.cs", label="0: new ServerComponentRunner(null)", span="26-26"];
m13_14 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="26-26"];
m13_20 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="35-35"];
m13_21 [cluster="lambda expression", file="RedisFactory.cs", label="new ServerComponentRunner(_component.Object, null)", span="35-35"];
m13_22 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="35-35"];
m13_28 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="43-43"];
m13_29 [cluster="lambda expression", file="RedisFactory.cs", label="new ServerComponentRunner(_component.Object)", span="43-43"];
m13_30 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="43-43"];
m13_42 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="54-54"];
m13_43 [cluster="lambda expression", color=red, community=0, file="RedisFactory.cs", label="0: x.Execute(It.IsAny<CancellationToken>())", span="54-54"];
m13_44 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="54-54"];
m13_59 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="75-75"];
m13_60 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(It.IsNotNull<CancellationToken>())", span="75-75"];
m13_61 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="75-75"];
m13_68 [cluster="lambda expression", file="RedisFactory.cs", label="runner.Start()", span="85-85"];
m13_67 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="85-85"];
m13_69 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="85-85"];
m13_84 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="95-95"];
m13_87 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="96-96"];
m13_88 [cluster="lambda expression", file="RedisFactory.cs", label="timesExecuted++", span="96-96"];
m13_85 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="95-95"];
m13_86 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="95-95"];
m13_89 [cluster="lambda expression", file="RedisFactory.cs", label="Thread.Yield()", span="96-96"];
m13_90 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="96-96"];
m13_98 [cluster="lambda expression", file="RedisFactory.cs", label="runner.Stop()", span="117-117"];
m13_97 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="117-117"];
m13_99 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="117-117"];
m13_113 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="127-127"];
m13_116 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="128-128"];
m13_117 [cluster="lambda expression", file="RedisFactory.cs", label="timesExecuted++", span="128-128"];
m13_114 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="127-127"];
m13_115 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="127-127"];
m13_118 [cluster="lambda expression", file="RedisFactory.cs", label="Thread.Yield()", span="128-128"];
m13_119 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="128-128"];
m13_160 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="200-200"];
m13_163 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="209-209"];
m13_161 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="200-200"];
m13_162 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="200-200"];
m13_164 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="209-209"];
m13_165 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="209-209"];
m13_174 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="217-217"];
m13_177 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="223-224"];
m13_175 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="217-217"];
m13_176 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="217-217"];
m13_178 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="223-224"];
m13_179 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="223-224"];
m13_204 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="263-263"];
m13_205 [cluster="lambda expression", file="RedisFactory.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="263-263"];
m13_206 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="263-263"];
m13_208 [cluster="lambda expression", file="RedisFactory.cs", label="Thread.Yield()", span="264-264"];
m13_209 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="264-264"];
m13_6 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m13_7 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", color=red, community=0, file="RedisFactory.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerComponentRunner(null))", span="25-26"];
m13_8 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", color=red, community=0, file="RedisFactory.cs", label="0: Assert.Equal(''component'', exception.ParamName)", span="28-28"];
m13_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m13_58 [cluster="Unk.AtLeast", file="RedisFactory.cs", label="Entry Unk.AtLeast", span=""];
m13_24 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m13_25 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="RedisFactory.cs", label="Assert.DoesNotThrow(() => new ServerComponentRunner(_component.Object))", span="43-43"];
m13_26 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m13_210 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="272-272"];
m13_211 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="Thread.Yield()", span="274-274"];
m13_212 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="272-272"];
m13_148 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", span="268-268"];
m13_112 [cluster="Unk.True", file="RedisFactory.cs", label="Entry Unk.True", span=""];
m13_45 [cluster="Unk.Execute", file="RedisFactory.cs", label="Entry Unk.Execute", span=""];
m13_70 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m13_71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="int timesExecuted = 0", span="92-92"];
m13_72 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="94-94"];
m13_73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="95-96"];
m13_74 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="runner.Start()", span="98-98"];
m13_75 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="runner.Stop()", span="101-101"];
m13_76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="102-102"];
m13_77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="timesExecuted = 0", span="103-103"];
m13_78 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="105-105"];
m13_79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="Assert.Equal(0, timesExecuted)", span="108-108"];
m13_80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m13_82 [cluster="Unk.Callback", file="RedisFactory.cs", label="Entry Unk.Callback", span=""];
m13_5 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RedisFactory.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m13_199 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="RedisFactory.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m13_15 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="RedisFactory.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m13_41 [cluster="Unk.Verify", file="RedisFactory.cs", label="Entry Unk.Verify", span=""];
m13_151 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="194-194"];
m13_152 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="_options.MaxRetryAttempts = 0", span="197-197"];
m13_153 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="var runner = CreateRunner()", span="199-199"];
m13_154 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="200-200"];
m13_155 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="runner.Start()", span="202-202"];
m13_157 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="runner.Dispose()", span="206-206"];
m13_156 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="Thread.Sleep(500)", span="203-203"];
m13_158 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="_component.Verify(\r\n                x => x.Execute(It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="208-210"];
m13_159 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="RedisFactory.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="194-194"];
m13_216 [file="RedisFactory.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", span=""];
m13_217 [file="RedisFactory.cs", label=runner, span=""];
m13_218 [file="RedisFactory.cs", label=timesExecuted, span=""];
m13_219 [file="RedisFactory.cs", label=runner, span=""];
m13_220 [file="RedisFactory.cs", label=timesExecuted, span=""];
m13_221 [file="RedisFactory.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent", span=""];
m13_222 [file="RedisFactory.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent", span=""];
m14_31 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="SchedulePoller.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m14_36 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67"];
m14_40 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", color=green, community=0, file="SchedulePoller.cs", label="0: OperationCanceledException", span="79-79"];
m14_37 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=true, span="71-71"];
m14_41 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", color=green, community=0, file="SchedulePoller.cs", label="0: ThreadInterruptedException", span="82-82"];
m14_38 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="!EnqueueNextScheduledJob()", span="73-73"];
m14_39 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Thread.Sleep(_pollInterval)", span="75-75"];
m14_43 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="87-90"];
m14_42 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=Exception, span="85-85"];
m14_44 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67"];
m14_16 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="SchedulePoller.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69"];
m14_17 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="SchedulePoller.cs", label="Stop()", span="71-71"];
m14_18 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="SchedulePoller.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69"];
m14_15 [cluster="Unk.UnregisterObject", file="SchedulePoller.cs", label="Entry Unk.UnregisterObject", span=""];
m14_27 [cluster="string.Format(string, object)", file="SchedulePoller.cs", label="Entry string.Format(string, object)", span="0-0"];
m14_20 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45"];
m14_21 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="47-47"];
m14_24 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="52-54"];
m14_25 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="58-62"];
m14_22 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="48-48"];
m14_23 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="!String.IsNullOrEmpty(queue)", span="50-50"];
m14_26 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45"];
m14_11 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SchedulePoller.cs", label="base.Stop()", span="65-65"];
m14_29 [cluster="Unk.TryToGetQueue", file="SchedulePoller.cs", label="Entry Unk.TryToGetQueue", span=""];
m14_33 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="SchedulePoller.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m14_45 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="SchedulePoller.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m14_4 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="24-24"];
m14_5 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="26-29"];
m14_6 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="String.IsNullOrEmpty(jobId)", span="31-31"];
m14_7 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return false;", span="33-33"];
m14_0 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="SchedulePoller.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33"];
m14_1 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", color=green, community=0, file="SchedulePoller.cs", label="6: Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33"];
m14_2 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="SchedulePoller.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44"];
m14_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SchedulePoller.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m14_30 [cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m14_19 [cluster="Unk.Dispose", file="SchedulePoller.cs", label="HangFire.Web.AspNetBackgroundJobServer", span=""];
m14_46 [cluster="Unk.Fatal", file="SchedulePoller.cs", label="Entry Unk.Fatal", span=""];
m14_14 [cluster="Unk.IsNullOrEmpty", file="SchedulePoller.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m14_3 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22"];
m14_10 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22"];
m14_12 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="SchedulePoller.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m14_13 [cluster="Unk.FirstOrDefault", file="SchedulePoller.cs", label="Entry Unk.FirstOrDefault", span=""];
m14_32 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SchedulePoller.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m14_9 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return true;", span="37-37"];
m14_28 [cluster="Unk.GetValueFromHash", file="SchedulePoller.cs", label="Entry Unk.GetValueFromHash", span=""];
m14_8 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="EnqueueScheduledJob(jobId)", span="36-36"];
m14_35 [cluster="Unk.Format", file="SchedulePoller.cs", label="Entry Unk.Format", span=""];
m14_53 [file="SchedulePoller.cs", label="HangFire.Server.SchedulePoller", span=""];
m15_29 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="SchedulePollerSteps.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58"];
m15_30 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="SchedulePollerSteps.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", span="60-62"];
m15_31 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="SchedulePollerSteps.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58"];
m15_7 [cluster="System.DateTime.AddMinutes(double)", file="SchedulePollerSteps.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m15_10 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="SchedulePollerSteps.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25"];
m15_11 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="SchedulePollerSteps.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="27-27"];
m15_12 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="SchedulePollerSteps.cs", label="And(''it's state is Scheduled'')", span="28-28"];
m15_13 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="SchedulePollerSteps.cs", label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", span="30-33"];
m15_14 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="SchedulePollerSteps.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25"];
m15_32 [cluster="Unk.SortedSetContainsItem", file="SchedulePollerSteps.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m15_37 [cluster="Unk.IsTrue", file="SchedulePollerSteps.cs", label="Entry Unk.IsTrue", span=""];
m15_15 [cluster="string.Format(string, object)", file="SchedulePollerSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_34 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="SchedulePollerSteps.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66"];
m15_35 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="SchedulePollerSteps.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", span="68-70"];
m15_36 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="SchedulePollerSteps.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66"];
m15_6 [cluster="Unk.And", file="SchedulePollerSteps.cs", label="Entry Unk.And", span=""];
m15_8 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePollerSteps.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m15_27 [cluster="System.TimeSpan.FromSeconds(double)", file="SchedulePollerSteps.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m15_9 [cluster="Unk.AddItemToSortedSet", file="SchedulePollerSteps.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m15_33 [cluster="Unk.IsFalse", file="SchedulePollerSteps.cs", label="Entry Unk.IsFalse", span=""];
m15_41 [cluster="Unk.AreEqual", file="SchedulePollerSteps.cs", label="Entry Unk.AreEqual", span=""];
m15_22 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="SchedulePollerSteps.cs", label="Entry HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", span="49-49"];
m15_23 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", color=red, community=0, file="SchedulePollerSteps.cs", label="0: var poller = new SchedulePoller(TimeSpan.FromSeconds(15))", span="51-51"];
m15_24 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="SchedulePollerSteps.cs", label="_pollerResult = poller.EnqueueNextScheduledJob()", span="53-53"];
m15_25 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="SchedulePollerSteps.cs", label="Exit HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", span="49-49"];
m15_26 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="SchedulePollerSteps.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m15_38 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="SchedulePollerSteps.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", span="74-74"];
m15_39 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="SchedulePollerSteps.cs", label="Assert.AreEqual(result, _pollerResult)", span="76-76"];
m15_40 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="SchedulePollerSteps.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", span="74-74"];
m15_21 [cluster="System.DateTime.AddHours(double)", file="SchedulePollerSteps.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m15_16 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="SchedulePollerSteps.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37"];
m15_17 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="SchedulePollerSteps.cs", label="Given(''a job'')", span="39-39"];
m15_18 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="SchedulePollerSteps.cs", label="And(''it's state is Scheduled'')", span="40-40"];
m15_19 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="SchedulePollerSteps.cs", label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddHours(1)))", span="42-45"];
m15_20 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="SchedulePollerSteps.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37"];
m15_5 [cluster="Unk.Given", file="SchedulePollerSteps.cs", label="Entry Unk.Given", span=""];
m15_0 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="SchedulePollerSteps.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13"];
m15_1 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="SchedulePollerSteps.cs", label="Given(''a job'')", span="15-15"];
m15_2 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="SchedulePollerSteps.cs", label="And(''it's state is Scheduled'')", span="16-16"];
m15_3 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="SchedulePollerSteps.cs", label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", span="18-21"];
m15_4 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="SchedulePollerSteps.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13"];
m15_28 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePollerSteps.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22"];
m15_42 [file="SchedulePollerSteps.cs", label="HangFire.Tests.SchedulePollerSteps", span=""];
m17_26 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="1: WriteLiteral(''\r\n                            </span>\r\n'')", span="198-198"];
m17_25 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="3: Write(server.Heartbeat)", span="193-193"];
m17_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="1: Write(JobHelper.ToStringTimestamp(server.Heartbeat.Value))", span="183-183"];
m17_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="39-39"];
m17_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\r\n'')", span="43-43"];
m17_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", span="53-53"];
m17_3 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\r\n'')", span="59-59"];
m17_4 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="var servers = JobStorage.Servers()", span="65-65"];
m17_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\r\n'')", span="71-71"];
m17_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="servers.Count == 0", span="76-76"];
m17_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label=servers, span="103-103"];
m17_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        There are no active servers. Backg'' +\r\n''round tasks will not be processed.\r\n    </div>\r\n'')", span="82-83"];
m17_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="1: WriteLiteral(@''    <table class=''''table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Workers</th>\r\n                <th>Queues</th>\r\n                <th>Started</th>\r\n                <th>Heartbeat</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="95-106"];
m17_10 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''                <tr>\r\n                    <td>'')", span="109-109"];
m17_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="0: server.Heartbeat.HasValue", span="172-172"];
m17_11 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(server.Name)", span="114-114"];
m17_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(server.WorkersCount)", span="124-124"];
m17_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="134-134"];
m17_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(server.StartedAt))", span="144-144"];
m17_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(server.StartedAt)", span="154-154"];
m17_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="119-119"];
m17_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="129-129"];
m17_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''</td>\r\n                    <td data-moment=\'''')", span="139-139"];
m17_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\''>'')", span="149-149"];
m17_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="4: WriteLiteral(''</td>\r\n                    <td>\r\n'')", span="167-167"];
m17_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="2: Exit HangFire.Web.Pages.ServersPage.Execute()", span="39-39"];
m17_27 [cluster="Unk.Select", color=green, community=0, file="ServersPage.generated.cs", label="4: Entry Unk.Select", span=""];
m17_24 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", color=green, community=0, file="ServersPage.generated.cs", label="1: Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m17_29 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="ServersPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="12-12"];
m17_28 [cluster="Unk.Join", file="ServersPage.generated.cs", label="Entry Unk.Join", span=""];
m17_31 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ServersPage.generated.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m17_30 [cluster="Unk.Write", file="ServersPage.generated.cs", label="Entry Unk.Write", span=""];
m17_32 [file="ServersPage.generated.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m18_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerWatchdog.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m18_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="ServerWatchdog.cs", label="0: MaxRetryAttempts = 10", span="26-26"];
m18_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="ServerWatchdog.cs", label="0: ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27"];
m18_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerWatchdog.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m18_4 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerWatchdog.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m18_5 [file="ServerWatchdog.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m19_2 [cluster="HangFire.States.SucceededState.GetProperties()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.GetProperties()", span="19-19"];
m19_3 [cluster="HangFire.States.SucceededState.GetProperties()", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="21-24"];
m19_4 [cluster="HangFire.States.SucceededState.GetProperties()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.GetProperties()", span="19-19"];
m19_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m19_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SucceededState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_29 [cluster="Unk.EnqueueItemOnList", file="SucceededState.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m19_37 [cluster="Unk.IncrementValue", file="SucceededState.cs", label="Entry Unk.IncrementValue", span=""];
m19_33 [cluster="Unk.TrimList", file="SucceededState.cs", label="Entry Unk.TrimList", span=""];
m19_52 [cluster="Unk.Persist", file="SucceededState.cs", label="Entry Unk.Persist", span=""];
m19_21 [cluster="string.Format(string, object)", file="SucceededState.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_38 [cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", span="47-47"];
m19_39 [cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="SucceededState.cs", label="transaction == null", span="49-49"];
m19_41 [cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.DecrementValue(''hangfire:stats:succeeded''))", span="51-51"];
m19_42 [cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}'', jobId)))", span="52-53"];
m19_43 [cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="SucceededState.cs", label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId)))", span="54-55"];
m19_40 [cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="SucceededState.cs", label="throw new ArgumentNullException(''transaction'');", span="49-49"];
m19_44 [cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", span="47-47"];
m19_17 [cluster="Unk.QueueCommand", file="SucceededState.cs", label="Entry Unk.QueueCommand", span=""];
m19_22 [cluster="Unk.ExpireEntryIn", file="SucceededState.cs", label="Entry Unk.ExpireEntryIn", span=""];
m19_11 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:history'', JobId),\r\n                _jobExpirationTimeout))", span="35-37"];
m19_7 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Apply(IRedisTransaction)", span="27-27"];
m19_8 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction == null", span="29-29"];
m19_10 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobExpirationTimeout))", span="31-33"];
m19_12 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(''hangfire:succeeded'', JobId))", span="39-39"];
m19_13 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.TrimList(''hangfire:succeeded'', 0, 99))", span="40-40"];
m19_14 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="transaction.QueueCommand(x => x.IncrementValue(''hangfire:stats:succeeded''))", span="42-42"];
m19_9 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="throw new ArgumentNullException(''transaction'');", span="29-29"];
m19_15 [cluster="HangFire.States.SucceededState.Apply(IRedisTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Apply(IRedisTransaction)", span="27-27"];
m19_0 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m19_1 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m19_48 [cluster="Unk.DecrementValue", file="SucceededState.cs", label="Entry Unk.DecrementValue", span=""];
m19_53 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="54-55"];
m19_18 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="31-33"];
m19_23 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="35-37"];
m19_26 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="39-39"];
m19_30 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="40-40"];
m19_34 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="42-42"];
m19_19 [cluster="lambda expression", file="SucceededState.cs", label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobExpirationTimeout)", span="31-33"];
m19_20 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="31-33"];
m19_24 [cluster="lambda expression", file="SucceededState.cs", label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:history'', JobId),\r\n                _jobExpirationTimeout)", span="35-37"];
m19_25 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="35-37"];
m19_27 [cluster="lambda expression", file="SucceededState.cs", label="x.EnqueueItemOnList(''hangfire:succeeded'', JobId)", span="39-39"];
m19_28 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="39-39"];
m19_31 [cluster="lambda expression", file="SucceededState.cs", label="x.TrimList(''hangfire:succeeded'', 0, 99)", span="40-40"];
m19_32 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="40-40"];
m19_35 [cluster="lambda expression", file="SucceededState.cs", label="x.IncrementValue(''hangfire:stats:succeeded'')", span="42-42"];
m19_36 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="42-42"];
m19_50 [cluster="lambda expression", file="SucceededState.cs", label="((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}'', jobId))", span="52-53"];
m19_54 [cluster="lambda expression", file="SucceededState.cs", label="((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="54-55"];
m19_45 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="51-51"];
m19_49 [cluster="lambda expression", file="SucceededState.cs", label="Entry lambda expression", span="52-53"];
m19_46 [cluster="lambda expression", file="SucceededState.cs", label="x.DecrementValue(''hangfire:stats:succeeded'')", span="51-51"];
m19_47 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="51-51"];
m19_51 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="52-53"];
m19_55 [cluster="lambda expression", file="SucceededState.cs", label="Exit lambda expression", span="54-55"];
m19_6 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m19_56 [file="SucceededState.cs", label="HangFire.States.SucceededState", span=""];
m19_57 [file="SucceededState.cs", label=string, span=""];
m20_18 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Worker.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="43-43"];
m20_19 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Worker.cs", label="return In(interval, typeof(TJob), args);", span="46-46"];
m20_20 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Worker.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="43-43"];
m20_3 [cluster="HangFire.Perform.Async<TJob>(object)", file="Worker.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="16-16"];
m20_4 [cluster="HangFire.Perform.Async<TJob>(object)", file="Worker.cs", label="return Async(typeof(TJob), args);", span="19-19"];
m20_5 [cluster="HangFire.Perform.Async<TJob>(object)", file="Worker.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="16-16"];
m20_28 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="Worker.cs", label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40"];
m20_6 [cluster="HangFire.Perform.Async(System.Type, object)", file="Worker.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="27-27"];
m20_10 [cluster="HangFire.Perform.Async(System.Type, object)", file="Worker.cs", label="var client = new JobClient()", span="29-29"];
m20_11 [cluster="HangFire.Perform.Async(System.Type, object)", file="Worker.cs", label="return client.Async(jobType, args);", span="31-31"];
m20_12 [cluster="HangFire.Perform.Async(System.Type, object)", file="Worker.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="27-27"];
m20_22 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Worker.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49"];
m20_23 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Worker.cs", label="return In(interval, jobType, null);", span="51-51"];
m20_24 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Worker.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49"];
m20_14 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="Worker.cs", label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="12-12"];
m20_0 [cluster="HangFire.Perform.Async<TJob>()", file="Worker.cs", label="Entry HangFire.Perform.Async<TJob>()", span="9-9"];
m20_1 [cluster="HangFire.Perform.Async<TJob>()", file="Worker.cs", label="return Async<TJob>(null);", span="12-12"];
m20_2 [cluster="HangFire.Perform.Async<TJob>()", file="Worker.cs", label="Exit HangFire.Perform.Async<TJob>()", span="9-9"];
m20_7 [cluster="HangFire.Perform.Async(System.Type)", file="Worker.cs", label="Entry HangFire.Perform.Async(System.Type)", span="22-22"];
m20_8 [cluster="HangFire.Perform.Async(System.Type)", file="Worker.cs", label="return Async(jobType, null);", span="24-24"];
m20_9 [cluster="HangFire.Perform.Async(System.Type)", file="Worker.cs", label="Exit HangFire.Perform.Async(System.Type)", span="22-22"];
m20_21 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Worker.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54"];
m20_25 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Worker.cs", label="var client = new JobClient()", span="56-56"];
m20_26 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Worker.cs", label="return client.In(interval, jobType, args);", span="58-58"];
m20_27 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Worker.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54"];
m20_13 [cluster="HangFire.Client.JobClient.JobClient()", file="Worker.cs", label="Entry HangFire.Client.JobClient.JobClient()", span="7-7"];
m20_15 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Worker.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36"];
m20_16 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Worker.cs", label="return In<TJob>(interval, null);", span="39-39"];
m20_17 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Worker.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36"];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m2_13 -> m2_11  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_0 -> m2_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_0 -> m2_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m2_0 -> m2_24  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_12  [key=0, style=solid];
m2_2 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_5  [key=0, style=solid];
m2_3 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_12  [key=0, style=solid];
m2_4 -> m2_15  [key=2, style=dotted];
m2_4 -> m2_16  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_17  [key=2, style=dotted];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label=queue, style=dashed];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_18  [key=2, style=dotted];
m2_6 -> m2_9  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_6 -> m2_11  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [key=2, style=dotted];
m2_47 -> m2_45  [color=blue, key=0, style=bold];
m2_18 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_61  [key=2, style=dotted];
m2_59 -> m2_62  [key=2, style=dotted];
m2_60 -> m2_18  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_23  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_20  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_19  [key=2, style=dotted];
m2_7 -> m2_9  [color=darkseagreen4, key=1, label=state, style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_21  [key=2, style=dotted];
m2_9 -> m2_22  [key=2, style=dotted];
m2_12 -> m2_0  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_24 -> m2_0  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_24 -> m2_28  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_24 -> m2_29  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_24 -> m2_32  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_24 -> m2_35  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_24 -> m2_33  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m2_32 -> m2_0  [key=2, style=dotted];
m2_32 -> m2_39  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_27 -> m2_14  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_28 -> m2_39  [key=0, style=solid];
m2_28 -> m2_15  [key=2, style=dotted];
m2_28 -> m2_16  [key=2, style=dotted];
m2_29 -> m2_29  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_29 -> m2_40  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_20  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_18  [key=2, style=dotted];
m2_33 -> m2_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_33 -> m2_38  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_31 -> m2_31  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_31 -> m2_42  [key=2, style=dotted];
m2_31 -> m2_34  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_26 -> m2_13  [key=2, style=dotted];
m2_26 -> m2_39  [key=0, style=solid];
m2_30 -> m2_39  [key=0, style=solid];
m2_30 -> m2_41  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_43  [key=2, style=dotted];
m2_34 -> m2_44  [key=2, style=dotted];
m2_34 -> m2_36  [color=darkseagreen4, key=1, label=state, style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_21  [key=2, style=dotted];
m2_36 -> m2_22  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_23  [key=2, style=dotted];
m2_39 -> m2_24  [color=blue, key=0, style=bold];
m2_20 -> m2_49  [key=0, style=solid];
m2_20 -> m2_50  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_20 -> m2_51  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_55  [key=2, style=dotted];
m2_49 -> m2_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_49 -> m2_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_49 -> m2_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_56  [key=2, style=dotted];
m2_51 -> m2_57  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_58  [key=2, style=dotted];
m2_54 -> m2_20  [color=blue, key=0, style=bold];
m2_15 -> m2_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_15 -> m2_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m2_63 -> m2_32  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m2_63 -> m2_9  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m2_63 -> m2_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m2_63 -> m2_36  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m2_63 -> m2_37  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m2_63 -> m2_46  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_8  [color=green, key=2, style=dotted];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_9  [color=green, key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [key=2, style=dotted];
m3_13 -> m3_11  [color=blue, key=0, style=bold];
m3_15 -> m3_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m3_15 -> m3_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m3_15 -> m3_3  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m3_15 -> m3_4  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m3_15 -> m3_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m3_15 -> m3_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m4_55 -> m4_56  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_39  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_22  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_40  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_41  [key=2, style=dotted];
m4_60 -> m4_61  [color=red, key=0, style=solid];
m4_60 -> m4_42  [key=2, style=dotted];
m4_61 -> m4_62  [color=red, key=0, style=solid];
m4_61 -> m4_43  [color=red, key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_26  [key=2, style=dotted];
m4_63 -> m4_55  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_28 -> m4_26  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_7  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_39  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_22  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_40  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_41  [key=2, style=dotted];
m4_81 -> m4_82  [color=red, key=0, style=solid];
m4_81 -> m4_42  [key=2, style=dotted];
m4_82 -> m4_83  [color=red, key=0, style=solid];
m4_82 -> m4_43  [color=red, key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_26  [key=2, style=dotted];
m4_84 -> m4_76  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_9  [color=blue, key=0, style=bold];
m4_30 -> m4_31  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_39  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_22  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_40  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_41  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_42  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_43  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_26  [key=2, style=dotted];
m4_38 -> m4_30  [color=blue, key=0, style=bold];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_39  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_22  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_40  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_41  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_42  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_43  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_54  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_26  [key=2, style=dotted];
m4_53 -> m4_44  [color=blue, key=0, style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_39  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_22  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_40  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_41  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_41  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_42  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_43  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_42  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_43  [key=2, style=dotted];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_26  [key=2, style=dotted];
m4_75 -> m4_64  [color=blue, key=0, style=bold];
m4_85 -> m4_86  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_39  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_22  [key=2, style=dotted];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_40  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_41  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_42  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_43  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_26  [key=2, style=dotted];
m4_93 -> m4_85  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_0  [key=2, style=dotted];
m4_17 -> m4_14  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=2, style=dotted];
m4_20 -> m4_18  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m4_22 -> m4_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m4_22 -> m4_56  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m4_22 -> m4_65  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m4_22 -> m4_77  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m4_22 -> m4_86  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_25  [key=2, style=dotted];
m4_24 -> m4_22  [color=blue, key=0, style=bold];
m4_94 -> m4_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_37  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_46  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_52  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_66  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_74  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_78  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_83  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_87  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m4_94 -> m4_92  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_17  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_18  [key=2, style=dotted];
m5_16 -> m5_13  [color=blue, key=0, style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_17  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_25  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_26  [key=2, style=dotted];
m5_22 -> m5_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_26  [key=2, style=dotted];
m5_23 -> m5_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_24 -> m5_19  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_17  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_40  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_26  [key=2, style=dotted];
m5_38 -> m5_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_39 -> m5_35  [color=blue, key=0, style=bold];
m5_41 -> m5_42  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=2, style=dotted];
m5_11 -> m5_9  [color=blue, key=0, style=bold];
m5_27 -> m5_28  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=2, style=dotted];
m5_29 -> m5_27  [color=blue, key=0, style=bold];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=2, style=dotted];
m5_33 -> m5_31  [color=blue, key=0, style=bold];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_44  [key=2, style=dotted];
m5_43 -> m5_41  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_2 -> m5_6  [key=2, style=dotted];
m5_2 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_8  [key=2, style=dotted];
m5_3 -> m5_0  [color=blue, key=0, style=bold];
m5_45 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.States.SucceededStateHandlerFacts", style=dashed];
m5_45 -> m5_21  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.States.SucceededStateHandlerFacts", style=dashed];
m5_45 -> m5_22  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.States.SucceededStateHandlerFacts", style=dashed];
m5_45 -> m5_23  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.States.SucceededStateHandlerFacts", style=dashed];
m5_45 -> m5_37  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.States.SucceededStateHandlerFacts", style=dashed];
m5_45 -> m5_38  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.States.SucceededStateHandlerFacts", style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m6_12 -> m6_15  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m6_12 -> m6_16  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m6_12 -> m6_17  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_19  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_19  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_20  [key=2, style=dotted];
m6_15 -> m6_21  [key=2, style=dotted];
m6_15 -> m6_19  [key=2, style=dotted];
m6_15 -> m6_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=2, style=dotted];
m6_18 -> m6_12  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_1 -> m6_11  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [color=red, key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_3 -> m6_5  [color=green, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_5 -> m6_6  [color=green, key=0, style=solid];
m6_5 -> m6_7  [color=green, key=2, style=dotted];
m6_5 -> m6_8  [color=green, key=2, style=dotted];
m6_4 -> m6_5  [color=green, key=0, style=solid];
m6_4 -> m6_6  [key=0, style=solid];
m6_6 -> m6_3  [color=blue, key=0, style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_5  [color=green, key=1, label="HangFire.Filters.RecurringAttribute", style=dashed];
m6_9 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.Filters.RecurringAttribute", style=dashed];
m6_10 -> m6_0  [color=blue, key=0, style=bold];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_22  [color=blue, key=0, style=bold];
m6_25 -> m6_1  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_2  [color=red, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_4  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_7  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_9  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_16  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_25 -> m6_17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_89  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_89  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_90  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_89  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_91  [key=2, style=dotted];
m8_5 -> m8_90  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_89  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_91  [key=2, style=dotted];
m8_7 -> m8_90  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_89  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_92  [key=2, style=dotted];
m8_9 -> m8_19  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_9 -> m8_25  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_9 -> m8_27  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_9 -> m8_33  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_9 -> m8_39  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_9 -> m8_45  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_9 -> m8_51  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_89  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_90  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_90  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_90  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_90  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_90  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_90  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_90  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_93  [key=2, style=dotted];
m8_11 -> m8_90  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_89  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_91  [key=2, style=dotted];
m8_13 -> m8_90  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_89  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_93  [key=2, style=dotted];
m8_15 -> m8_90  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_89  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_91  [key=2, style=dotted];
m8_17 -> m8_90  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_89  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_89  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_94  [key=2, style=dotted];
m8_21 -> m8_90  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_89  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_91  [key=2, style=dotted];
m8_23 -> m8_90  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_89  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_89  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_89  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_93  [key=2, style=dotted];
m8_29 -> m8_90  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_89  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_91  [key=2, style=dotted];
m8_31 -> m8_90  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_89  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_89  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_93  [key=2, style=dotted];
m8_35 -> m8_90  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_89  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_91  [key=2, style=dotted];
m8_37 -> m8_90  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_89  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_89  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_93  [key=2, style=dotted];
m8_41 -> m8_90  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_89  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_91  [key=2, style=dotted];
m8_43 -> m8_90  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_89  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_89  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_93  [key=2, style=dotted];
m8_47 -> m8_90  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_89  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_91  [key=2, style=dotted];
m8_49 -> m8_90  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_89  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_89  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_66  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_89  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_89  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_91  [key=2, style=dotted];
m8_55 -> m8_90  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_89  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_63  [key=0, style=solid];
m8_57 -> m8_59  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_89  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_89  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_90  [key=2, style=dotted];
m8_59 -> m8_59  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m8_59 -> m8_61  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_89  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_90  [key=2, style=dotted];
m8_61 -> m8_61  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m8_62 -> m8_57  [key=0, style=solid];
m8_62 -> m8_89  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_90  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_89  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_90  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_89  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_73  [key=0, style=solid];
m8_69 -> m8_95  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_89  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_89  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_90  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_89  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_96  [key=2, style=dotted];
m8_74 -> m8_90  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_89  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_97  [key=2, style=dotted];
m8_76 -> m8_98  [key=2, style=dotted];
m8_76 -> m8_90  [key=2, style=dotted];
m8_77 -> m8_78  [color=red, key=0, style=solid];
m8_77 -> m8_89  [key=2, style=dotted];
m8_78 -> m8_79  [color=red, key=0, style=solid];
m8_78 -> m8_99  [color=red, key=2, style=dotted];
m8_78 -> m8_90  [color=red, key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_89  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_90  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_89  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_100  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_89  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_91  [key=2, style=dotted];
m8_84 -> m8_90  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_89  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_91  [key=2, style=dotted];
m8_86 -> m8_90  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_89  [key=2, style=dotted];
m8_88 -> m8_0  [color=blue, key=0, style=bold];
m8_101 -> m8_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_76  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_77  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_78  [color=red, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_80  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_81  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_82  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_83  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_84  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_85  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_86  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m8_101 -> m8_87  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_15  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan interval", style=bold];
m9_18 -> m9_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m9_18 -> m9_21  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=2, style=dotted];
m9_20 -> m9_18  [color=blue, key=0, style=bold];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m9_3 -> m9_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_6  [key=2, style=dotted];
m9_5 -> m9_3  [color=blue, key=0, style=bold];
m9_6 -> m9_10  [color=red, key=0, style=solid];
m9_6 -> m9_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_6 -> m9_3  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m9_6 -> m9_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m9_6 -> m9_7  [color=darkorchid, key=3, label="Parameter variable System.Type jobType", style=bold];
m9_10 -> m9_11  [color=red, key=0, style=solid];
m9_10 -> m9_13  [color=red, key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=2, style=dotted];
m9_12 -> m9_6  [color=blue, key=0, style=bold];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_21  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_21  [key=2, style=dotted];
m9_24 -> m9_22  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_6  [key=2, style=dotted];
m9_9 -> m9_7  [color=blue, key=0, style=bold];
m9_21 -> m9_25  [color=red, key=0, style=solid];
m9_21 -> m9_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m9_21 -> m9_18  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m9_21 -> m9_22  [color=darkorchid, key=3, label="Parameter variable System.Type jobType", style=bold];
m9_21 -> m9_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m9_25 -> m9_26  [color=red, key=0, style=solid];
m9_25 -> m9_13  [color=red, key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=2, style=dotted];
m9_27 -> m9_21  [color=blue, key=0, style=bold];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_18  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_18  [key=2, style=dotted];
m9_17 -> m9_15  [color=blue, key=0, style=bold];
m10_46 -> m10_47  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_15  [key=2, style=dotted];
m10_47 -> m10_50  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_51  [key=2, style=dotted];
m10_49 -> m10_46  [color=blue, key=0, style=bold];
m10_35 -> m10_39  [key=0, style=solid];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_41  [key=2, style=dotted];
m10_40 -> m10_35  [color=blue, key=0, style=bold];
m10_20 -> m10_21  [key=0, style=solid];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_15  [key=2, style=dotted];
m10_21 -> m10_10  [key=2, style=dotted];
m10_22 -> m10_20  [color=blue, key=0, style=bold];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_32  [key=2, style=dotted];
m10_31 -> m10_29  [color=blue, key=0, style=bold];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_10  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_10  [key=2, style=dotted];
m10_9 -> m10_6  [color=blue, key=0, style=bold];
m10_36 -> m10_37  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_35  [key=2, style=dotted];
m10_38 -> m10_36  [color=blue, key=0, style=bold];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_64  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_65  [key=2, style=dotted];
m10_62 -> m10_66  [key=2, style=dotted];
m10_63 -> m10_60  [color=blue, key=0, style=bold];
m10_52 -> m10_53  [key=0, style=solid];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_55  [key=2, style=dotted];
m10_54 -> m10_52  [color=blue, key=0, style=bold];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_78 -> m10_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_15  [key=2, style=dotted];
m10_79 -> m10_50  [key=2, style=dotted];
m10_79 -> m10_81  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m10_79 -> m10_82  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_84  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_84  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_84  [key=2, style=dotted];
m10_83 -> m10_78  [color=blue, key=0, style=bold];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_29  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_5  [key=2, style=dotted];
m10_45 -> m10_42  [color=blue, key=0, style=bold];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_15  [key=2, style=dotted];
m10_56 -> m10_50  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_59  [key=2, style=dotted];
m10_58 -> m10_55  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_10  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_15  [key=2, style=dotted];
m10_18 -> m10_10  [key=2, style=dotted];
m10_19 -> m10_16  [color=blue, key=0, style=bold];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_74  [color=darkseagreen4, key=1, label=Table, style=dashed];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_15  [key=2, style=dotted];
m10_73 -> m10_76  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_77  [key=2, style=dotted];
m10_75 -> m10_72  [color=blue, key=0, style=bold];
m10_91 -> m10_89  [color=blue, key=0, style=bold];
m10_89 -> m10_90  [key=0, style=solid];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_15  [key=2, style=dotted];
m10_90 -> m10_88  [key=2, style=dotted];
m10_90 -> m10_71  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_15  [key=2, style=dotted];
m10_12 -> m10_10  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_10  [key=2, style=dotted];
m10_14 -> m10_11  [color=blue, key=0, style=bold];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_27  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_15  [key=2, style=dotted];
m10_25 -> m10_28  [key=2, style=dotted];
m10_26 -> m10_23  [color=blue, key=0, style=bold];
m10_32 -> m10_33  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_35  [key=2, style=dotted];
m10_34 -> m10_32  [color=blue, key=0, style=bold];
m10_87 -> m10_85  [color=blue, key=0, style=bold];
m10_85 -> m10_86  [key=0, style=solid];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_15  [key=2, style=dotted];
m10_86 -> m10_88  [key=2, style=dotted];
m10_86 -> m10_71  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_64  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_65  [key=2, style=dotted];
m10_69 -> m10_71  [key=2, style=dotted];
m10_70 -> m10_67  [color=blue, key=0, style=bold];
m10_92 -> m10_1  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_2  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_3  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_30  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_33  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_39  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_43  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_44  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_53  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m10_92 -> m10_68  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m11_24 -> m11_25  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_17  [key=2, style=dotted];
m11_26 -> m11_24  [color=blue, key=0, style=bold];
m11_27 -> m11_28  [key=0, style=solid];
m11_28 -> m11_29  [color=red, key=0, style=solid];
m11_28 -> m11_71  [key=2, style=dotted];
m11_29 -> m11_30  [color=red, key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_72  [key=2, style=dotted];
m11_31 -> m11_73  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_74  [key=2, style=dotted];
m11_32 -> m11_73  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_75  [key=2, style=dotted];
m11_33 -> m11_73  [key=2, style=dotted];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_76  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_77  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_17  [key=2, style=dotted];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_45  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_37 -> m11_58  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_37 -> m11_37  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_68  [key=0, style=solid];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_83  [key=2, style=dotted];
m11_45 -> m11_45  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_45 -> m11_58  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_15  [key=2, style=dotted];
m11_58 -> m11_84  [key=2, style=dotted];
m11_58 -> m11_58  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_78  [key=2, style=dotted];
m11_39 -> m11_41  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_42  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_50  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_51  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_56  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_57  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_59  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_62  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_39 -> m11_63  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_17  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_68  [key=0, style=solid];
m11_40 -> m11_79  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_50  [key=0, style=solid];
m11_41 -> m11_80  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_81  [key=2, style=dotted];
m11_42 -> m11_82  [key=2, style=dotted];
m11_42 -> m11_44  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_56  [key=0, style=solid];
m11_50 -> m11_80  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_81  [key=2, style=dotted];
m11_51 -> m11_82  [key=2, style=dotted];
m11_51 -> m11_53  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_59  [key=0, style=solid];
m11_56 -> m11_80  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_81  [key=2, style=dotted];
m11_57 -> m11_82  [key=2, style=dotted];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_62  [key=0, style=solid];
m11_59 -> m11_80  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_38  [key=0, style=solid];
m11_62 -> m11_80  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_81  [key=2, style=dotted];
m11_63 -> m11_82  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_43 -> m11_43  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_47  [key=0, style=solid];
m11_46 -> m11_44  [key=0, style=solid];
m11_46 -> m11_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_50  [key=0, style=solid];
m11_47 -> m11_17  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_17  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_55  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_52 -> m11_43  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_56  [key=0, style=solid];
m11_55 -> m11_53  [key=0, style=solid];
m11_55 -> m11_55  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_83  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_85  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_17  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_86  [key=2, style=dotted];
m11_64 -> m11_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_38  [key=0, style=solid];
m11_65 -> m11_17  [key=2, style=dotted];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_38  [key=0, style=solid];
m11_67 -> m11_17  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_78  [key=2, style=dotted];
m11_70 -> m11_27  [color=blue, key=0, style=bold];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_13  [key=2, style=dotted];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label=time, style=dashed];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_15  [key=2, style=dotted];
m11_10 -> m11_16  [key=2, style=dotted];
m11_9 -> m11_12  [key=0, style=solid];
m11_9 -> m11_14  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_17  [key=2, style=dotted];
m11_12 -> m11_4  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_89  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_88 -> m11_89  [key=0, style=solid];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_91  [key=2, style=dotted];
m11_90 -> m11_87  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_17  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_22  [key=2, style=dotted];
m11_20 -> m11_23  [key=2, style=dotted];
m11_21 -> m11_18  [color=blue, key=0, style=bold];
m11_92 -> m11_11  [color=darkseagreen4, key=1, label="ConsoleSample.ConsoleJob", style=dashed];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_14  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_16  [key=2, style=dotted];
m12_12 -> m12_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_15  [key=2, style=dotted];
m12_13 -> m12_9  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [color=red, key=0, style=solid];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m12_0 -> m12_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_1 -> m12_2  [color=red, key=0, style=solid];
m12_1 -> m12_3  [color=red, key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_2 -> m12_7  [color=red, key=0, style=solid];
m12_2 -> m12_8  [color=red, key=2, style=dotted];
m12_4 -> m12_7  [key=0, style=solid];
m12_4 -> m12_8  [key=2, style=dotted];
m12_7 -> m12_0  [color=blue, key=0, style=bold];
m12_17 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m12_17 -> m12_6  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m12_17 -> m12_10  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m12_17 -> m12_11  [color=darkseagreen4, key=1, label="HangFire.Server.ServerHeartbeat", style=dashed];
m13_180 -> m13_181  [key=0, style=solid];
m13_181 -> m13_182  [key=0, style=solid];
m13_181 -> m13_37  [key=2, style=dotted];
m13_182 -> m13_183  [key=0, style=solid];
m13_182 -> m13_184  [key=2, style=dotted];
m13_183 -> m13_180  [color=blue, key=0, style=bold];
m13_213 -> m13_214  [key=0, style=solid];
m13_214 -> m13_215  [key=0, style=solid];
m13_215 -> m13_213  [color=blue, key=0, style=bold];
m13_51 -> m13_52  [key=0, style=solid];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_37  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_57  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_38  [key=2, style=dotted];
m13_54 -> m13_39  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_58  [key=2, style=dotted];
m13_55 -> m13_41  [key=2, style=dotted];
m13_55 -> m13_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_56 -> m13_51  [color=blue, key=0, style=bold];
m13_131 -> m13_132  [key=0, style=solid];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_37  [key=2, style=dotted];
m13_132 -> m13_134  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_132 -> m13_135  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_57  [key=2, style=dotted];
m13_134 -> m13_135  [key=0, style=solid];
m13_134 -> m13_83  [key=2, style=dotted];
m13_135 -> m13_136  [key=0, style=solid];
m13_135 -> m13_27  [key=2, style=dotted];
m13_136 -> m13_131  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [color=red, key=0, style=solid];
m13_1 -> m13_2  [color=red, key=0, style=solid];
m13_1 -> m13_4  [color=red, key=2, style=dotted];
m13_2 -> m13_3  [color=red, key=0, style=solid];
m13_2 -> m13_5  [color=red, key=2, style=dotted];
m13_3 -> m13_0  [color=blue, key=0, style=bold];
m13_137 -> m13_138  [key=0, style=solid];
m13_138 -> m13_139  [key=0, style=solid];
m13_139 -> m13_140  [key=0, style=solid];
m13_140 -> m13_141  [key=0, style=solid];
m13_140 -> m13_148  [key=2, style=dotted];
m13_140 -> m13_146  [color=darkseagreen4, key=1, label=component, style=dashed];
m13_141 -> m13_142  [key=0, style=solid];
m13_141 -> m13_149  [key=2, style=dotted];
m13_141 -> m13_144  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_146 -> m13_147  [key=0, style=solid];
m13_146 -> m13_112  [key=2, style=dotted];
m13_142 -> m13_143  [key=0, style=solid];
m13_142 -> m13_57  [key=2, style=dotted];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_40  [key=2, style=dotted];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_150  [key=2, style=dotted];
m13_145 -> m13_146  [key=0, style=solid];
m13_145 -> m13_150  [key=2, style=dotted];
m13_147 -> m13_137  [color=blue, key=0, style=bold];
m13_100 -> m13_101  [key=0, style=solid];
m13_101 -> m13_102  [key=0, style=solid];
m13_101 -> m13_103  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_102 -> m13_103  [key=0, style=solid];
m13_102 -> m13_37  [key=2, style=dotted];
m13_102 -> m13_104  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_102 -> m13_105  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_102 -> m13_108  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_81  [key=2, style=dotted];
m13_103 -> m13_82  [key=2, style=dotted];
m13_103 -> m13_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_103 -> m13_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_103 -> m13_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_104 -> m13_105  [key=0, style=solid];
m13_104 -> m13_57  [key=2, style=dotted];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_83  [key=2, style=dotted];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_57  [key=2, style=dotted];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_38  [key=2, style=dotted];
m13_106 -> m13_39  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_110  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_112  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_38  [key=2, style=dotted];
m13_109 -> m13_39  [key=2, style=dotted];
m13_111 -> m13_100  [color=blue, key=0, style=bold];
m13_37 -> m13_201  [key=0, style=solid];
m13_201 -> m13_202  [key=0, style=solid];
m13_201 -> m13_81  [key=2, style=dotted];
m13_201 -> m13_82  [key=2, style=dotted];
m13_201 -> m13_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_201 -> m13_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_202 -> m13_203  [key=0, style=solid];
m13_202 -> m13_23  [key=2, style=dotted];
m13_203 -> m13_37  [color=blue, key=0, style=bold];
m13_194 -> m13_195  [key=0, style=solid];
m13_194 -> m13_196  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_195 -> m13_196  [key=0, style=solid];
m13_196 -> m13_197  [key=0, style=solid];
m13_196 -> m13_199  [key=2, style=dotted];
m13_196 -> m13_196  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_197 -> m13_198  [key=0, style=solid];
m13_197 -> m13_200  [key=2, style=dotted];
m13_197 -> m13_197  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_198 -> m13_194  [color=blue, key=0, style=bold];
m13_166 -> m13_167  [key=0, style=solid];
m13_167 -> m13_168  [key=0, style=solid];
m13_167 -> m13_37  [key=2, style=dotted];
m13_167 -> m13_169  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_167 -> m13_171  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_168 -> m13_169  [key=0, style=solid];
m13_168 -> m13_81  [key=2, style=dotted];
m13_168 -> m13_10  [key=2, style=dotted];
m13_168 -> m13_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_169 -> m13_170  [key=0, style=solid];
m13_169 -> m13_57  [key=2, style=dotted];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> m13_40  [key=2, style=dotted];
m13_170 -> m13_171  [key=0, style=solid];
m13_170 -> m13_150  [key=2, style=dotted];
m13_172 -> m13_173  [key=0, style=solid];
m13_172 -> m13_58  [key=2, style=dotted];
m13_172 -> m13_41  [key=2, style=dotted];
m13_172 -> m13_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_173 -> m13_166  [color=blue, key=0, style=bold];
m13_120 -> m13_121  [key=0, style=solid];
m13_121 -> m13_122  [key=0, style=solid];
m13_121 -> m13_37  [key=2, style=dotted];
m13_121 -> m13_123  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_121 -> m13_124  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_122 -> m13_123  [key=0, style=solid];
m13_122 -> m13_57  [key=2, style=dotted];
m13_123 -> m13_124  [key=0, style=solid];
m13_123 -> m13_83  [key=2, style=dotted];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_27  [key=2, style=dotted];
m13_125 -> m13_120  [color=blue, key=0, style=bold];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_37  [key=2, style=dotted];
m13_63 -> m13_65  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_63 -> m13_68  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_40  [key=2, style=dotted];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_10  [key=2, style=dotted];
m13_65 -> m13_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_66 -> m13_62  [color=blue, key=0, style=bold];
m13_92 -> m13_93  [key=0, style=solid];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_37  [key=2, style=dotted];
m13_93 -> m13_95  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_93 -> m13_98  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_94 -> m13_95  [key=0, style=solid];
m13_94 -> m13_40  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_10  [key=2, style=dotted];
m13_95 -> m13_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_96 -> m13_92  [color=blue, key=0, style=bold];
m13_185 -> m13_186  [key=0, style=solid];
m13_186 -> m13_187  [key=0, style=solid];
m13_186 -> m13_193  [key=2, style=dotted];
m13_186 -> m13_191  [color=darkseagreen4, key=1, label=component, style=dashed];
m13_187 -> m13_188  [key=0, style=solid];
m13_187 -> m13_149  [key=2, style=dotted];
m13_187 -> m13_190  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_191 -> m13_192  [key=0, style=solid];
m13_191 -> m13_11  [key=2, style=dotted];
m13_188 -> m13_189  [key=0, style=solid];
m13_188 -> m13_57  [key=2, style=dotted];
m13_190 -> m13_191  [key=0, style=solid];
m13_190 -> m13_40  [key=2, style=dotted];
m13_189 -> m13_190  [key=0, style=solid];
m13_189 -> m13_150  [key=2, style=dotted];
m13_192 -> m13_185  [color=blue, key=0, style=bold];
m13_126 -> m13_127  [key=0, style=solid];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_37  [key=2, style=dotted];
m13_127 -> m13_129  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_57  [key=2, style=dotted];
m13_129 -> m13_130  [key=0, style=solid];
m13_129 -> m13_27  [key=2, style=dotted];
m13_130 -> m13_126  [color=blue, key=0, style=bold];
m13_16 -> m13_17  [key=0, style=solid];
m13_17 -> m13_18  [color=red, key=0, style=solid];
m13_17 -> m13_10  [key=2, style=dotted];
m13_17 -> m13_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_18 -> m13_19  [color=red, key=0, style=solid];
m13_18 -> m13_11  [color=red, key=2, style=dotted];
m13_19 -> m13_16  [color=blue, key=0, style=bold];
m13_31 -> m13_32  [key=0, style=solid];
m13_32 -> m13_33  [color=red, key=0, style=solid];
m13_32 -> m13_37  [key=2, style=dotted];
m13_32 -> m13_34  [color=red, key=1, label=runner, style=dashed];
m13_33 -> m13_34  [color=red, key=0, style=solid];
m13_33 -> m13_38  [color=red, key=2, style=dotted];
m13_33 -> m13_39  [color=red, key=2, style=dotted];
m13_34 -> m13_35  [color=red, key=0, style=solid];
m13_34 -> m13_40  [color=red, key=2, style=dotted];
m13_35 -> m13_36  [color=red, key=0, style=solid];
m13_35 -> m13_41  [color=red, key=2, style=dotted];
m13_35 -> m13_42  [color=red, key=1, label="lambda expression", style=dashed];
m13_36 -> m13_31  [color=blue, key=0, style=bold];
m13_46 -> m13_47  [key=0, style=solid];
m13_47 -> m13_48  [color=red, key=0, style=solid];
m13_47 -> m13_37  [key=2, style=dotted];
m13_47 -> m13_49  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_48 -> m13_49  [color=red, key=0, style=solid];
m13_48 -> m13_40  [color=red, key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_27  [key=2, style=dotted];
m13_50 -> m13_46  [color=blue, key=0, style=bold];
m13_207 -> m13_208  [key=0, style=solid];
m13_12 -> m13_13  [color=red, key=0, style=solid];
m13_13 -> m13_14  [color=red, key=0, style=solid];
m13_13 -> m13_15  [color=red, key=2, style=dotted];
m13_14 -> m13_12  [color=blue, key=0, style=bold];
m13_20 -> m13_21  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_23  [key=2, style=dotted];
m13_22 -> m13_20  [color=blue, key=0, style=bold];
m13_28 -> m13_29  [key=0, style=solid];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_23  [key=2, style=dotted];
m13_30 -> m13_28  [color=blue, key=0, style=bold];
m13_42 -> m13_43  [color=red, key=0, style=solid];
m13_43 -> m13_44  [color=red, key=0, style=solid];
m13_43 -> m13_10  [color=red, key=2, style=dotted];
m13_43 -> m13_45  [color=red, key=2, style=dotted];
m13_44 -> m13_42  [color=blue, key=0, style=bold];
m13_59 -> m13_60  [key=0, style=solid];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_10  [key=2, style=dotted];
m13_60 -> m13_45  [key=2, style=dotted];
m13_61 -> m13_59  [color=blue, key=0, style=bold];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_57  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_69 -> m13_67  [color=blue, key=0, style=bold];
m13_84 -> m13_85  [key=0, style=solid];
m13_87 -> m13_88  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_10  [key=2, style=dotted];
m13_85 -> m13_45  [key=2, style=dotted];
m13_86 -> m13_84  [color=blue, key=0, style=bold];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_91  [key=2, style=dotted];
m13_90 -> m13_87  [color=blue, key=0, style=bold];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_83  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_99 -> m13_97  [color=blue, key=0, style=bold];
m13_113 -> m13_114  [key=0, style=solid];
m13_116 -> m13_117  [key=0, style=solid];
m13_117 -> m13_118  [key=0, style=solid];
m13_117 -> m13_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_114 -> m13_115  [key=0, style=solid];
m13_114 -> m13_10  [key=2, style=dotted];
m13_114 -> m13_45  [key=2, style=dotted];
m13_115 -> m13_113  [color=blue, key=0, style=bold];
m13_118 -> m13_119  [key=0, style=solid];
m13_118 -> m13_91  [key=2, style=dotted];
m13_119 -> m13_116  [color=blue, key=0, style=bold];
m13_160 -> m13_161  [key=0, style=solid];
m13_163 -> m13_164  [key=0, style=solid];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_10  [key=2, style=dotted];
m13_161 -> m13_45  [key=2, style=dotted];
m13_162 -> m13_160  [color=blue, key=0, style=bold];
m13_164 -> m13_165  [key=0, style=solid];
m13_164 -> m13_10  [key=2, style=dotted];
m13_164 -> m13_45  [key=2, style=dotted];
m13_165 -> m13_163  [color=blue, key=0, style=bold];
m13_174 -> m13_175  [key=0, style=solid];
m13_177 -> m13_178  [key=0, style=solid];
m13_175 -> m13_176  [key=0, style=solid];
m13_175 -> m13_10  [key=2, style=dotted];
m13_175 -> m13_45  [key=2, style=dotted];
m13_176 -> m13_174  [color=blue, key=0, style=bold];
m13_178 -> m13_179  [key=0, style=solid];
m13_178 -> m13_10  [key=2, style=dotted];
m13_178 -> m13_45  [key=2, style=dotted];
m13_179 -> m13_177  [color=blue, key=0, style=bold];
m13_204 -> m13_205  [key=0, style=solid];
m13_205 -> m13_206  [key=0, style=solid];
m13_205 -> m13_10  [key=2, style=dotted];
m13_205 -> m13_45  [key=2, style=dotted];
m13_206 -> m13_204  [color=blue, key=0, style=bold];
m13_208 -> m13_209  [key=0, style=solid];
m13_208 -> m13_91  [key=2, style=dotted];
m13_209 -> m13_207  [color=blue, key=0, style=bold];
m13_6 -> m13_7  [color=red, key=0, style=solid];
m13_7 -> m13_8  [color=red, key=0, style=solid];
m13_7 -> m13_10  [color=red, key=2, style=dotted];
m13_7 -> m13_12  [color=red, key=1, label="lambda expression", style=dashed];
m13_8 -> m13_9  [color=red, key=0, style=solid];
m13_8 -> m13_11  [color=red, key=2, style=dotted];
m13_9 -> m13_6  [color=blue, key=0, style=bold];
m13_24 -> m13_25  [key=0, style=solid];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_27  [key=2, style=dotted];
m13_25 -> m13_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_26 -> m13_24  [color=blue, key=0, style=bold];
m13_210 -> m13_211  [key=0, style=solid];
m13_211 -> m13_212  [key=0, style=solid];
m13_211 -> m13_91  [key=2, style=dotted];
m13_212 -> m13_210  [color=blue, key=0, style=bold];
m13_70 -> m13_71  [key=0, style=solid];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_73  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_37  [key=2, style=dotted];
m13_72 -> m13_74  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_72 -> m13_75  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_81  [key=2, style=dotted];
m13_73 -> m13_82  [key=2, style=dotted];
m13_73 -> m13_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_73 -> m13_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_73 -> m13_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_57  [key=2, style=dotted];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_83  [key=2, style=dotted];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_38  [key=2, style=dotted];
m13_76 -> m13_39  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_79  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_38  [key=2, style=dotted];
m13_78 -> m13_39  [key=2, style=dotted];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_11  [key=2, style=dotted];
m13_80 -> m13_70  [color=blue, key=0, style=bold];
m13_151 -> m13_152  [key=0, style=solid];
m13_152 -> m13_153  [key=0, style=solid];
m13_153 -> m13_154  [key=0, style=solid];
m13_153 -> m13_37  [key=2, style=dotted];
m13_153 -> m13_155  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_153 -> m13_157  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_154 -> m13_155  [key=0, style=solid];
m13_154 -> m13_81  [key=2, style=dotted];
m13_154 -> m13_10  [key=2, style=dotted];
m13_154 -> m13_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_155 -> m13_156  [key=0, style=solid];
m13_155 -> m13_57  [key=2, style=dotted];
m13_157 -> m13_158  [key=0, style=solid];
m13_157 -> m13_40  [key=2, style=dotted];
m13_156 -> m13_157  [key=0, style=solid];
m13_156 -> m13_150  [key=2, style=dotted];
m13_158 -> m13_159  [key=0, style=solid];
m13_158 -> m13_41  [key=2, style=dotted];
m13_158 -> m13_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_159 -> m13_151  [color=blue, key=0, style=bold];
m13_216 -> m13_1  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_2  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_17  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_35  [color=red, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_73  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_93  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_127  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_138  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_201  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_216 -> m13_202  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m13_217 -> m13_68  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_218 -> m13_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_219 -> m13_98  [color=darkseagreen4, key=1, label=runner, style=dashed];
m13_220 -> m13_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m13_221 -> m13_195  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent", style=dashed];
m13_222 -> m13_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent", style=dashed];
m14_36 -> m14_37  [key=0, style=solid];
m14_40 -> m14_44  [color=green, key=0, style=solid];
m14_37 -> m14_40  [color=green, key=0, style=solid];
m14_37 -> m14_41  [color=green, key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_42  [key=0, style=solid];
m14_37 -> m14_44  [key=0, style=solid];
m14_41 -> m14_44  [color=green, key=0, style=solid];
m14_38 -> m14_37  [key=0, style=solid];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_3  [key=2, style=dotted];
m14_39 -> m14_37  [key=0, style=solid];
m14_39 -> m14_45  [key=2, style=dotted];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_46  [key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_44 -> m14_36  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [key=2, style=dotted];
m14_17 -> m14_10  [key=2, style=dotted];
m14_18 -> m14_16  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_20 -> m14_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_27  [key=2, style=dotted];
m14_21 -> m14_28  [key=2, style=dotted];
m14_21 -> m14_25  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m14_24 -> m14_26  [key=0, style=solid];
m14_24 -> m14_31  [key=2, style=dotted];
m14_24 -> m14_32  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_33  [key=2, style=dotted];
m14_25 -> m14_34  [key=2, style=dotted];
m14_25 -> m14_35  [key=2, style=dotted];
m14_25 -> m14_32  [key=2, style=dotted];
m14_22 -> m14_24  [color=darkseagreen4, key=1, label=queue, style=dashed];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_29  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=0, style=solid];
m14_23 -> m14_30  [key=2, style=dotted];
m14_26 -> m14_20  [color=blue, key=0, style=bold];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_14  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_11  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_8  [key=2, style=dotted];
m14_5 -> m14_12  [key=2, style=dotted];
m14_5 -> m14_13  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_9  [key=2, style=dotted];
m14_6 -> m14_8  [key=0, style=solid];
m14_6 -> m14_14  [key=2, style=dotted];
m14_7 -> m14_4  [color=blue, key=0, style=bold];
m14_7 -> m14_10  [key=0, style=solid];
m14_0 -> m14_1  [color=green, key=0, style=solid];
m14_1 -> m14_2  [color=green, key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_19 -> m14_5  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m14_19 -> m14_6  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m14_19 -> m14_11  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m14_19 -> m14_12  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m14_19 -> m14_17  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m14_3 -> m14_2  [color=blue, key=0, style=bold];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_9  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m14_3 -> m14_7  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_3  [color=blue, key=0, style=bold];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_15  [key=2, style=dotted];
m14_13 -> m14_10  [color=blue, key=0, style=bold];
m14_9 -> m14_10  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_15  [key=2, style=dotted];
m14_53 -> m14_1  [color=green, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_5  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_8  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_17  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_21  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_24  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_25  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_38  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_39  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m14_53 -> m14_43  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m15_29 -> m15_30  [key=0, style=solid];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_32  [key=2, style=dotted];
m15_30 -> m15_33  [key=2, style=dotted];
m15_31 -> m15_29  [color=blue, key=0, style=bold];
m15_10 -> m15_11  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_15  [key=2, style=dotted];
m15_11 -> m15_5  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_6  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_7  [key=2, style=dotted];
m15_13 -> m15_8  [key=2, style=dotted];
m15_13 -> m15_9  [key=2, style=dotted];
m15_14 -> m15_10  [color=blue, key=0, style=bold];
m15_34 -> m15_35  [key=0, style=solid];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_32  [key=2, style=dotted];
m15_35 -> m15_37  [key=2, style=dotted];
m15_36 -> m15_34  [color=blue, key=0, style=bold];
m15_22 -> m15_23  [color=red, key=0, style=solid];
m15_23 -> m15_24  [color=red, key=0, style=solid];
m15_23 -> m15_26  [color=red, key=2, style=dotted];
m15_23 -> m15_27  [color=red, key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_28  [key=2, style=dotted];
m15_25 -> m15_22  [color=blue, key=0, style=bold];
m15_38 -> m15_39  [key=0, style=solid];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_41  [key=2, style=dotted];
m15_40 -> m15_38  [color=blue, key=0, style=bold];
m15_16 -> m15_17  [key=0, style=solid];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_5  [key=2, style=dotted];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_6  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_21  [key=2, style=dotted];
m15_19 -> m15_8  [key=2, style=dotted];
m15_19 -> m15_9  [key=2, style=dotted];
m15_20 -> m15_16  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_5  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_6  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_7  [key=2, style=dotted];
m15_3 -> m15_8  [key=2, style=dotted];
m15_3 -> m15_9  [key=2, style=dotted];
m15_4 -> m15_0  [color=blue, key=0, style=bold];
m15_42 -> m15_24  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerSteps", style=dashed];
m15_42 -> m15_39  [color=darkseagreen4, key=1, label="HangFire.Tests.SchedulePollerSteps", style=dashed];
m17_26 -> m17_27  [color=green, key=0, style=solid];
m17_26 -> m17_23  [color=green, key=2, style=dotted];
m17_25 -> m17_26  [color=green, key=0, style=solid];
m17_23 -> m17_24  [color=green, key=0, style=solid];
m17_23 -> m17_31  [color=green, key=2, style=dotted];
m17_23 -> m17_26  [color=green, key=2, style=dotted];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_23  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_24  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_23  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_25  [key=2, style=dotted];
m17_4 -> m17_6  [color=darkseagreen4, key=1, label=servers, style=dashed];
m17_4 -> m17_9  [color=darkseagreen4, key=1, label=servers, style=dashed];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_23  [key=2, style=dotted];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_8  [color=green, key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_21  [key=0, style=solid];
m17_9 -> m17_11  [color=darkseagreen4, key=1, label=server, style=dashed];
m17_9 -> m17_13  [color=darkseagreen4, key=1, label=server, style=dashed];
m17_9 -> m17_15  [color=darkseagreen4, key=1, label=server, style=dashed];
m17_9 -> m17_17  [color=darkseagreen4, key=1, label=server, style=dashed];
m17_9 -> m17_19  [color=darkseagreen4, key=1, label=server, style=dashed];
m17_9 -> m17_23  [color=green, key=1, label=server, style=dashed];
m17_9 -> m17_25  [color=green, key=1, label=server, style=dashed];
m17_7 -> m17_22  [key=0, style=solid];
m17_7 -> m17_23  [key=2, style=dotted];
m17_8 -> m17_9  [color=green, key=0, style=solid];
m17_8 -> m17_23  [color=green, key=2, style=dotted];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_23  [key=2, style=dotted];
m17_21 -> m17_22  [color=green, key=0, style=solid];
m17_21 -> m17_23  [key=2, style=dotted];
m17_21 -> m17_27  [color=green, key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_26  [key=2, style=dotted];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_26  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_27  [key=2, style=dotted];
m17_15 -> m17_28  [key=2, style=dotted];
m17_15 -> m17_29  [key=2, style=dotted];
m17_15 -> m17_30  [key=2, style=dotted];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_31  [key=2, style=dotted];
m17_17 -> m17_26  [key=2, style=dotted];
m17_19 -> m17_20  [color=green, key=0, style=solid];
m17_19 -> m17_26  [key=2, style=dotted];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_23  [key=2, style=dotted];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_23  [key=2, style=dotted];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_23  [key=2, style=dotted];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_23  [key=2, style=dotted];
m17_20 -> m17_9  [color=red, key=0, style=solid];
m17_20 -> m17_23  [color=green, key=2, style=dotted];
m17_20 -> m17_21  [color=green, key=0, style=solid];
m17_22 -> m17_23  [color=green, key=0, style=solid];
m17_22 -> m17_0  [color=blue, key=0, style=bold];
m17_27 -> m17_9  [color=green, key=0, style=solid];
m17_27 -> m17_23  [color=green, key=2, style=dotted];
m17_24 -> m17_25  [color=green, key=0, style=solid];
m17_24 -> m17_23  [color=green, key=2, style=dotted];
m17_32 -> m17_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_8  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_20  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_23  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_25  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_22  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_27  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_24  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m17_32 -> m17_26  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m18_0 -> m18_1  [color=green, key=0, style=solid];
m18_1 -> m18_2  [color=green, key=0, style=solid];
m18_2 -> m18_3  [color=green, key=0, style=solid];
m18_2 -> m18_4  [color=green, key=2, style=dotted];
m18_3 -> m18_0  [color=blue, key=0, style=bold];
m18_5 -> m18_1  [color=green, key=1, label="HangFire.Server.ServerComponentRunnerOptions", style=dashed];
m18_5 -> m18_2  [color=green, key=1, label="HangFire.Server.ServerComponentRunnerOptions", style=dashed];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=2, style=dotted];
m19_3 -> m19_6  [key=2, style=dotted];
m19_4 -> m19_2  [color=blue, key=0, style=bold];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_41  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_38 -> m19_42  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_38 -> m19_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_38 -> m19_43  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_38 -> m19_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_41  [key=0, style=solid];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_17  [key=2, style=dotted];
m19_41 -> m19_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_17  [key=2, style=dotted];
m19_42 -> m19_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_17  [key=2, style=dotted];
m19_43 -> m19_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_40 -> m19_44  [key=0, style=solid];
m19_40 -> m19_16  [key=2, style=dotted];
m19_44 -> m19_38  [color=blue, key=0, style=bold];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_17  [key=2, style=dotted];
m19_11 -> m19_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_10  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_7 -> m19_11  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_7 -> m19_12  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_7 -> m19_13  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_7 -> m19_14  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_17  [key=2, style=dotted];
m19_10 -> m19_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_17  [key=2, style=dotted];
m19_12 -> m19_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_17  [key=2, style=dotted];
m19_13 -> m19_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_17  [key=2, style=dotted];
m19_14 -> m19_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_9 -> m19_15  [key=0, style=solid];
m19_9 -> m19_16  [key=2, style=dotted];
m19_15 -> m19_7  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [color=blue, key=0, style=bold];
m19_53 -> m19_54  [key=0, style=solid];
m19_18 -> m19_19  [key=0, style=solid];
m19_23 -> m19_24  [key=0, style=solid];
m19_26 -> m19_27  [key=0, style=solid];
m19_30 -> m19_31  [key=0, style=solid];
m19_34 -> m19_35  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_21  [key=2, style=dotted];
m19_19 -> m19_22  [key=2, style=dotted];
m19_20 -> m19_18  [color=blue, key=0, style=bold];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_21  [key=2, style=dotted];
m19_24 -> m19_22  [key=2, style=dotted];
m19_25 -> m19_23  [color=blue, key=0, style=bold];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_29  [key=2, style=dotted];
m19_28 -> m19_26  [color=blue, key=0, style=bold];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_33  [key=2, style=dotted];
m19_32 -> m19_30  [color=blue, key=0, style=bold];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_37  [key=2, style=dotted];
m19_36 -> m19_34  [color=blue, key=0, style=bold];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_21  [key=2, style=dotted];
m19_50 -> m19_52  [key=2, style=dotted];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_21  [key=2, style=dotted];
m19_54 -> m19_52  [key=2, style=dotted];
m19_45 -> m19_46  [key=0, style=solid];
m19_49 -> m19_50  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_48  [key=2, style=dotted];
m19_47 -> m19_45  [color=blue, key=0, style=bold];
m19_51 -> m19_49  [color=blue, key=0, style=bold];
m19_55 -> m19_53  [color=blue, key=0, style=bold];
m19_56 -> m19_10  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m19_56 -> m19_19  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m19_56 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m19_56 -> m19_24  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m19_56 -> m19_12  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m19_56 -> m19_27  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m19_57 -> m19_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_57 -> m19_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_15  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan interval", style=bold];
m20_18 -> m20_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m20_18 -> m20_21  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_21  [key=2, style=dotted];
m20_20 -> m20_18  [color=blue, key=0, style=bold];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m20_3 -> m20_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_6  [key=2, style=dotted];
m20_5 -> m20_3  [color=blue, key=0, style=bold];
m20_6 -> m20_10  [key=0, style=solid];
m20_6 -> m20_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m20_6 -> m20_3  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m20_6 -> m20_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m20_6 -> m20_7  [color=darkorchid, key=3, label="Parameter variable System.Type jobType", style=bold];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_13  [key=2, style=dotted];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_14  [key=2, style=dotted];
m20_12 -> m20_6  [color=blue, key=0, style=bold];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_21  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_21  [key=2, style=dotted];
m20_24 -> m20_22  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_3  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=2, style=dotted];
m20_2 -> m20_0  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_6  [key=2, style=dotted];
m20_9 -> m20_7  [color=blue, key=0, style=bold];
m20_21 -> m20_25  [key=0, style=solid];
m20_21 -> m20_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m20_21 -> m20_18  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m20_21 -> m20_22  [color=darkorchid, key=3, label="Parameter variable System.Type jobType", style=bold];
m20_21 -> m20_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_13  [key=2, style=dotted];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_28  [key=2, style=dotted];
m20_27 -> m20_21  [color=blue, key=0, style=bold];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_18  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_18  [key=2, style=dotted];
m20_17 -> m20_15  [color=blue, key=0, style=bold];
}
