digraph  {
n3 [label="HangFire.Web.Pages.FetchedJobsPage", span=""];
n0 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
n1 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", label="Queue = queue", span="6-6"];
n2 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", label="Exit HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m1_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedStateFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_3 [cluster="Unk.>", file="FailedStateFacts.cs", label="Entry Unk.>", span=""];
m1_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m1_22 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m1_13 [cluster="Unk.Equal", file="FailedStateFacts.cs", label="Entry Unk.Equal", span=""];
m1_12 [cluster="System.Exception.Exception()", file="FailedStateFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m1_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m1_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="var state = new FailedState(new Exception())", span="19-19"];
m1_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Assert.Equal(FailedState.Name, state.StateName)", span="20-20"];
m1_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m1_20 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m1_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m1_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13"];
m1_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m1_4 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="13-13"];
m1_5 [cluster="lambda expression", file="FailedStateFacts.cs", label="new FailedState(null)", span="13-13"];
m1_6 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="13-13"];
m1_19 [cluster="System.Exception.Exception(string)", file="FailedStateFacts.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_14 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m1_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="FailedStateFacts.cs", label="var data = state.GetProperties(null)", prediction=0, span="27-27"];
m1_15 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="var state = new FailedState(new Exception(''Message''))", span="26-26"];
m1_17 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ExceptionType'', ''System.Exception'' },\r\n                    { ''ExceptionMessage'', ''Message'' },\r\n                    { ''ExceptionDetails'', ''<Non-empty>'' }\r\n                }, \r\n                data)", span="29-37"];
m1_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m2_5 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m2_7 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m2_0 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m2_2 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m2_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25"];
m2_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m2_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24"];
m3_2 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m3_3 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Exit HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m3_0 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m3_1 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Exit HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m6_86 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m6_82 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
m6_95 [cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="74-74"];
m6_81 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="9-9"];
m6_91 [cluster="string.Format(string, object)", file="JobDetailsPage1.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_92 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m6_93 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_78 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m6_0 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m6_1 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n'')", span="73-73"];
m6_2 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="JobDetailsDto job", span="88-88"];
m6_3 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="89-89"];
m6_4 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job = monitor.JobDetails(JobId.ToString())", span="91-91"];
m6_5 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="string title = null", span="94-94"];
m6_6 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job != null && job.Method != null", span="96-96"];
m6_7 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="title = HtmlHelper.DisplayMethod(job.Method)", span="98-98"];
m6_11 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job == null", span="114-114"];
m6_17 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.CreatedAt.HasValue", span="149-149"];
m6_19 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="161-161"];
m6_21 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Method != null", span="179-179"];
m6_23 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobMethodCallRenderer.Render(job.Method, job.Arguments, job.OldFormatArguments))", span="190-190"];
m6_26 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties.Count > 0", span="210-210"];
m6_28 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties", span="221-221"];
m6_37 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History.Count > 0", span="277-277"];
m6_40 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History", span="289-289"];
m6_8 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="title = title ?? ''Job''", span="101-101"];
m6_9 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Layout = new LayoutPage { Title = title, Subtitle = HtmlHelper.JobId(JobId.ToString(), false).ToString() }", span="103-103"];
m6_10 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n'')", span="109-109"];
m6_12 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    '')", span="120-120"];
m6_16 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    <div class=\''job-snippet\''>\r\n        <div class=\''job-snippet-code\''>\r\n'')", span="144-144"];
m6_13 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('' The job with id \''')", span="122-122"];
m6_14 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobId)", span="127-127"];
m6_15 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\' was expired or was not existed on the server.\r\n'')", span="132-132"];
m6_18 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\r\n                    C'' +\r\n''reated\r\n                    <span data-moment=\'''')", span="155-156"];
m6_20 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''></span>\r\n                </div>\r\n'')", span="166-166"];
m6_22 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <pre><code>'')", span="185-185"];
m6_25 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''clearfix\''></div>\r\n        </div>\r\n\r\n'')", span="205-205"];
m6_24 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</code></pre>\r\n'')", span="195-195"];
m6_27 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\r\n                <dl>\r\n'')", span="216-216"];
m6_36 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    </div>\r\n'')", span="271-271"];
m6_29 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dt>'')", span="227-227"];
m6_35 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                </dl>\r\n            </div>\r\n'')", span="261-261"];
m6_30 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Key)", span="232-232"];
m6_31 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dt>\r\n'')", span="237-237"];
m6_33 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Value)", span="246-246"];
m6_32 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dd><pre>'')", span="241-241"];
m6_34 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</pre></dd>\r\n'')", span="251-251"];
m6_38 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''        <h3>History</h3>\r\n'')", span="283-283"];
m6_39 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var index = 0", span="288-288"];
m6_42 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index == 0", span="295-295"];
m6_45 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(index == 0 ? ''job-history-current'' : null)", span="311-311"];
m6_76 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index++", span="488-488"];
m6_47 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="321-321"];
m6_44 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-history '')", span="306-306"];
m6_46 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\r\n                <div class=\''job-history-heading\'' style=\'''')", span="316-316"];
m6_48 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\r\n                    <span class=\''pull-right\'' data-moment=\'''')", span="326-326"];
m6_50 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>'')", span="336-336"];
m6_52 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</span>\r\n                    <h4 class=\''job-history-title\''>\r\n                    '' +\r\n''    '')", span="346-347"];
m6_54 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n\r\n'')", span="357-357"];
m6_56 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                            <small>'')", span="368-368"];
m6_59 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    </h4>\r\n                </div>\r\n\r\n'')", span="388-388"];
m6_58 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</small>\r\n'')", span="378-378"];
m6_66 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    <div class=\''job-history-body\''>\r\n                        <dl c'' +\r\n''lass=\''dl-horizontal\''>\r\n'')", span="426-427"];
m6_62 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="rendered != null", span="396-396"];
m6_64 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(rendered)", span="408-408"];
m6_63 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <div class=\''job-history-body\''>\r\n                         '' +\r\n''   '')", span="402-403"];
m6_75 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            </div>\r\n'')", span="482-482"];
m6_65 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n                        </div>\r\n'')", span="413-413"];
m6_68 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dt>'')", span="438-438"];
m6_74 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </dl>\r\n                    </div>\r\n'')", span="472-472"];
m6_69 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Key)", span="443-443"];
m6_72 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Value)", span="457-457"];
m6_70 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('':</dt>\r\n'')", span="448-448"];
m6_71 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dd>'')", span="452-452"];
m6_73 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dd>\r\n'')", span="462-462"];
m6_77 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m6_94 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="69-69"];
m6_96 [cluster="Unk.Where", file="JobDetailsPage1.generated.cs", label="Entry Unk.Where", span=""];
m6_85 [cluster="Unk.ToString", file="JobDetailsPage1.generated.cs", label="Entry Unk.ToString", span=""];
m6_90 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_97 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Entry lambda expression", span="432-432"];
m6_99 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Exit lambda expression", span="432-432"];
m6_88 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", span="28-28"];
m6_87 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m6_80 [cluster="string.ToString()", file="JobDetailsPage1.generated.cs", label="Entry string.ToString()", span="0-0"];
m6_89 [cluster="Unk.Write", file="JobDetailsPage1.generated.cs", label="Entry Unk.Write", span=""];
m6_84 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m6_79 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m6_83 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m6_100 [file="JobDetailsPage1.generated.cs", label="HangFire.Web.Pages.JobDetailsPage", span=""];
m8_35 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m8_37 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="JobState.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer(_options))", span="50-50"];
m8_36 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="JobState.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49"];
m8_38 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m8_83 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="137-137"];
m8_128 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="JobState.cs", label="return new BackgroundJobServer(_options, _storage.Object);", span="139-139"];
m8_129 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="137-137"];
m8_65 [cluster="Unk.Stop", file="JobState.cs", label="Entry Unk.Stop", span=""];
m8_0 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m8_1 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="JobState.cs", label="_storage = new Mock<JobStorage>()", span="17-17"];
m8_2 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="JobState.cs", label="_options = new BackgroundJobServerOptions()", span="18-18"];
m8_22 [cluster="Unk.Equal", file="JobState.cs", label="Entry Unk.Equal", span=""];
m8_61 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m8_62 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="JobState.cs", label="_serverMock.Object.Stop()", span="71-71"];
m8_63 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="JobState.cs", label="_runner.Verify(x => x.Stop())", span="73-73"];
m8_64 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m8_104 [cluster="object.GetType()", file="JobState.cs", label="Entry object.GetType()", span="0-0"];
m8_39 [cluster="Unk.DoesNotThrow", file="JobState.cs", label="Entry Unk.DoesNotThrow", span=""];
m8_69 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m8_70 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="JobState.cs", label="_serverMock.Object.Dispose()", span="79-79"];
m8_71 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="JobState.cs", label="_runner.Verify(x => x.Dispose())", span="81-81"];
m8_72 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m8_9 [cluster="Mock<IServerComponentRunner>.cstr", file="JobState.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m8_21 [cluster="Unk.>", file="JobState.cs", label="Entry Unk.>", span=""];
m8_112 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="118-118"];
m8_114 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="_storage.Setup(x => x.GetComponents()).Returns(new[] { storageComponent.Object })", span="122-122"];
m8_115 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="var server = CreateServer()", span="124-124"];
m8_113 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="var storageComponent = new Mock<IServerComponent>()", span="121-121"];
m8_116 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="var runners = server.GetServerComponentsRunner()", span="127-127"];
m8_118 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="Assert.Contains(storageComponent.Object, components)", span="134-134"];
m8_117 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="var components = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .ToArray()", span="130-132"];
m8_119 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="118-118"];
m8_5 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", color=green, community=0, file="JobState.cs", label="_serverMock.Setup(x => x.GetServerRunner()).Returns(_runner.Object)", prediction=1, span="25-25"];
m8_4 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="JobState.cs", label="_serverMock = new Mock<BackgroundJobServer>(_options, _storage.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="21-24"];
m8_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_6 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m8_124 [cluster="Unk.GetComponents", file="JobState.cs", label="Entry Unk.GetComponents", span=""];
m8_44 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m8_45 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="JobState.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="56-56"];
m8_46 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="JobState.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer())", span="57-57"];
m8_47 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m8_77 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m8_78 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="JobState.cs", label="var server = CreateServer()", span="87-87"];
m8_79 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="JobState.cs", label="var runner = server.GetServerRunner()", span="89-89"];
m8_81 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="JobState.cs", label="Assert.IsType<ServerCore>(((ServerComponentRunner) runner).Component)", span="92-92"];
m8_80 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="JobState.cs", label="Assert.NotNull(runner)", span="91-91"];
m8_82 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m8_100 [cluster="Unk.ToArray", file="JobState.cs", label="Entry Unk.ToArray", span=""];
m8_7 [cluster="Mock<JobStorage>.cstr", file="JobState.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m8_85 [cluster="Unk.NotNull", file="JobState.cs", label="Entry Unk.NotNull", span=""];
m8_43 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="JobState.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m8_11 [cluster="Unk.Setup", file="JobState.cs", label="Entry Unk.Setup", span=""];
m8_51 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="JobState.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m8_73 [cluster="Unk.Dispose", file="JobState.cs", label="Entry Unk.Dispose", span=""];
m8_34 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="JobState.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m8_10 [cluster="Mock<BackgroundJobServer>.cstr", file="JobState.cs", label="Entry Mock<BackgroundJobServer>.cstr", span=""];
m8_120 [cluster="Mock<IServerComponent>.cstr", file="JobState.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m8_52 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m8_53 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="JobState.cs", label="_serverMock.Object.Start()", span="63-63"];
m8_54 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="JobState.cs", label="_runner.Verify(x => x.Start())", span="65-65"];
m8_55 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m8_95 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="JobState.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99"];
m8_99 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobState.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m8_17 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m8_18 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="JobState.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32"];
m8_19 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="JobState.cs", label="Assert.Equal(''options'', exception.ParamName)", span="34-34"];
m8_20 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m8_125 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="131-131"];
m8_13 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="25-25"];
m8_14 [cluster="lambda expression", color=green, community=0, file="JobState.cs", label="x.GetServerRunner()", prediction=2, span="25-25"];
m8_15 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="25-25"];
m8_24 [cluster="lambda expression", file="JobState.cs", label="new BackgroundJobServer(null, _storage.Object)", span="32-32"];
m8_32 [cluster="lambda expression", file="JobState.cs", label="new BackgroundJobServer(_options, null)", span="41-41"];
m8_41 [cluster="lambda expression", file="JobState.cs", label="new BackgroundJobServer(_options)", span="50-50"];
m8_23 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="32-32"];
m8_25 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="32-32"];
m8_31 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="41-41"];
m8_33 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="41-41"];
m8_40 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="50-50"];
m8_42 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="50-50"];
m8_58 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="65-65"];
m8_66 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="73-73"];
m8_74 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="81-81"];
m8_121 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="122-122"];
m8_59 [cluster="lambda expression", file="JobState.cs", label="x.Start()", span="65-65"];
m8_60 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="65-65"];
m8_67 [cluster="lambda expression", file="JobState.cs", label="x.Stop()", span="73-73"];
m8_68 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="73-73"];
m8_75 [cluster="lambda expression", file="JobState.cs", label="x.Dispose()", span="81-81"];
m8_76 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="81-81"];
m8_123 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="122-122"];
m8_122 [cluster="lambda expression", file="JobState.cs", label="x.GetComponents()", span="122-122"];
m8_48 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="57-57"];
m8_101 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="105-105"];
m8_105 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="108-108"];
m8_108 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="109-109"];
m8_50 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="57-57"];
m8_49 [cluster="lambda expression", file="JobState.cs", label="new BackgroundJobServer()", span="57-57"];
m8_103 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="105-105"];
m8_102 [cluster="lambda expression", file="JobState.cs", label="x.GetType()", span="105-105"];
m8_107 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="108-108"];
m8_106 [cluster="lambda expression", file="JobState.cs", label="x.Component", span="108-108"];
m8_110 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="109-109"];
m8_109 [cluster="lambda expression", file="JobState.cs", label="x.GetType()", span="109-109"];
m8_126 [cluster="lambda expression", file="JobState.cs", label="x.Component", span="131-131"];
m8_127 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="131-131"];
m8_97 [cluster="Unk.Contains", file="JobState.cs", label="Entry Unk.Contains", span=""];
m8_16 [cluster="Unk.GetServerRunner", file="JobState.cs", label="Entry Unk.GetServerRunner", span=""];
m8_56 [cluster="Unk.Start", file="JobState.cs", label="Entry Unk.Start", span=""];
m8_96 [cluster="Unk.Select", file="JobState.cs", label="Entry Unk.Select", span=""];
m8_111 [cluster="Unk.GetType", file="JobState.cs", label="Entry Unk.GetType", span=""];
m8_27 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m8_28 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobState.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41"];
m8_29 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobState.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m8_30 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m8_98 [cluster="Unk.True", file="JobState.cs", label="Entry Unk.True", span=""];
m8_84 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="JobState.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77"];
m8_8 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobState.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m8_12 [cluster="Unk.Returns", file="JobState.cs", label="Entry Unk.Returns", span=""];
m8_26 [cluster="BackgroundJobServer.cstr", file="JobState.cs", label="Entry BackgroundJobServer.cstr", span=""];
m8_57 [cluster="Unk.Verify", file="JobState.cs", label="Entry Unk.Verify", span=""];
m8_86 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m8_87 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="var server = CreateServer()", span="99-99"];
m8_88 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="var runners = server.GetServerComponentsRunner()", span="102-102"];
m8_89 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="Assert.True(runners.Select(x => x.GetType()).Contains(typeof(WorkerManager)))", span="105-105"];
m8_90 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="var componentTypes = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="107-110"];
m8_93 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="Assert.Contains(typeof(SchedulePoller), componentTypes)", span="114-114"];
m8_91 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="112-112"];
m8_92 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="Assert.Contains(typeof(ServerWatchdog), componentTypes)", span="113-113"];
m8_94 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="JobState.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m8_130 [file="JobState.cs", label="HangFire.Core.Tests.BackgroundJobServerFacts", span=""];
m9_0 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m9_1 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m9_2 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m9_3 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m10_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_7 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m10_8 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="ProcessingState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ServerName'', _serverName }\r\n                };", span="38-42"];
m10_9 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="36-36"];
m10_5 [cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m10_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="28-28"];
m10_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="String.IsNullOrWhiteSpace(serverName)", span="30-30"];
m10_3 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="_serverName = serverName", span="31-31"];
m10_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="throw new ArgumentNullException(''serverName'');", span="30-30"];
m10_4 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="28-28"];
m10_11 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m10_12 [file="ProcessingState.cs", label="HangFire.States.ProcessingState", span=""];
m11_5 [cluster="System.TimeSpan.FromSeconds(double)", file="ProcessingStateFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="ProcessingStateFacts.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m11_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ProcessingStateFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m11_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="ProcessingStateFacts.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(5)", prediction=3, span="27-27"];
m11_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ProcessingStateFacts.cs", label="MaxRetryAttempts = 10", span="26-26"];
m11_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ProcessingStateFacts.cs", label="LowerLogVerbosity = false", span="28-28"];
m11_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ProcessingStateFacts.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m11_8 [cluster="Unk.OnFeatureStart", file="ProcessingStateFacts.cs", label="Entry Unk.OnFeatureStart", span=""];
m11_14 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="ProcessingStateFacts.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46"];
m11_16 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="ProcessingStateFacts.cs", label="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m11_15 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="ProcessingStateFacts.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m11_17 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="ProcessingStateFacts.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46"];
m11_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ProcessingStateFacts.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m12_31 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="ProcessingStateHandler.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", span="36-36"];
m12_17 [cluster="System.Collections.Generic.List<T>.List()", file="ProcessingStateHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_434 [cluster="Mock<T>.cstr", file="ProcessingStateHandler.cs", label="Entry Mock<T>.cstr", span=""];
m12_5 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="ProcessingStateHandler.cs", label="_context = new PerformContext(\r\n                workerContext.Object, connection.Object, jobId, job, DateTime.UtcNow, new Mock<IJobCancellationToken>().Object)", span="26-27"];
m12_6 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", color=green, community=0, file="ProcessingStateHandler.cs", label="_performer = new Mock<IJobPerformer>()", prediction=4, span="28-28"];
m12_7 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="ProcessingStateHandler.cs", label="_activator = new Mock<JobActivator>()", span="29-29"];
m12_10 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m12_81 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="97-97"];
m12_82 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="100-100"];
m12_83 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="101-101"];
m12_84 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="103-105"];
m12_85 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="ProcessingStateHandler.cs", label="var result = process.Run(_context, _performer.Object)", span="108-108"];
m12_86 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="ProcessingStateHandler.cs", label="Assert.Equal(''Returned value'', result)", span="111-111"];
m12_87 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="97-97"];
m12_22 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", span="35-35"];
m12_23 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="ProcessingStateHandler.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new DefaultJobPerformanceProcess(null))", span="37-38"];
m12_24 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="ProcessingStateHandler.cs", label="Assert.Equal(''activator'', exception.ParamName)", span="40-40"];
m12_25 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", span="35-35"];
m12_27 [cluster="Unk.Equal", file="ProcessingStateHandler.cs", label="Entry Unk.Equal", span=""];
m12_37 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="478-478"];
m12_427 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="ProcessingStateHandler.cs", label="return new DefaultJobPerformanceProcess(_activator.Object, _filters);", span="480-480"];
m12_428 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="478-478"];
m12_149 [cluster="Unk.DoesNotThrow", file="ProcessingStateHandler.cs", label="Entry Unk.DoesNotThrow", span=""];
m12_41 [cluster="Unk.Run", file="ProcessingStateHandler.cs", label="Entry Unk.Run", span=""];
m12_77 [cluster="Unk.OnPerformed", file="ProcessingStateHandler.cs", label="Entry Unk.OnPerformed", span=""];
m12_386 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="424-424"];
m12_387 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<OperationCanceledException>()", span="427-429"];
m12_388 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="431-431"];
m12_389 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="432-432"];
m12_391 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="ProcessingStateHandler.cs", label="filter.Verify(\r\n                x => x.OnServerException(It.IsAny<ServerExceptionContext>()),\r\n                Times.Never)", span="439-441"];
m12_390 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="ProcessingStateHandler.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="435-436"];
m12_392 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="424-424"];
m12_271 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ProcessingStateHandler.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m12_42 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="55-55"];
m12_43 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="57-57"];
m12_44 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="ProcessingStateHandler.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="59-60"];
m12_45 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="ProcessingStateHandler.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="62-62"];
m12_46 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="55-55"];
m12_180 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="214-214"];
m12_181 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="217-217"];
m12_182 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="218-218"];
m12_183 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="220-220"];
m12_186 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="223-223"];
m12_184 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="221-221"];
m12_185 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="222-222"];
m12_187 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="225-225"];
m12_188 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="228-228"];
m12_189 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="214-214"];
m12_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m12_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ProcessingStateHandler.cs", label="context.Transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", prediction=5, span="11-14"];
m12_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m12_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m12_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m12_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m12_9 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", span="18-18"];
m12_26 [cluster="Unk.>", file="ProcessingStateHandler.cs", label="Entry Unk.>", span=""];
m12_119 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="150-150"];
m12_120 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="var filter1 = CreateFilter<IServerExceptionFilter>()", span="153-153"];
m12_121 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="var filter2 = CreateFilter<IServerExceptionFilter>()", span="154-154"];
m12_123 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="157-157"];
m12_122 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="156-156"];
m12_124 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="159-161"];
m12_125 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="163-163"];
m12_126 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="166-167"];
m12_127 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="150-150"];
m12_306 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="343-343"];
m12_307 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="346-346"];
m12_308 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="var exception = new InvalidOperationException()", span="348-348"];
m12_310 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="353-354"];
m12_309 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="349-351"];
m12_311 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="356-356"];
m12_312 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="359-359"];
m12_313 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="343-343"];
m12_402 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="445-445"];
m12_403 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="448-448"];
m12_404 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<OperationCanceledException>()", span="449-450"];
m12_405 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="452-452"];
m12_406 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="ProcessingStateHandler.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="455-456"];
m12_407 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="445-445"];
m12_68 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="483-483"];
m12_430 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="ProcessingStateHandler.cs", label="var filter = new Mock<T>()", span="486-486"];
m12_431 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="ProcessingStateHandler.cs", label="_filters.Add(filter.Object)", span="487-487"];
m12_432 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="ProcessingStateHandler.cs", label="return filter;", span="489-489"];
m12_433 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="483-483"];
m12_414 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="460-460"];
m12_415 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="463-463"];
m12_416 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<OperationCanceledException>()", span="464-465"];
m12_417 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="467-467"];
m12_418 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="ProcessingStateHandler.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="470-471"];
m12_419 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="460-460"];
m12_51 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="66-66"];
m12_52 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="68-68"];
m12_53 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="70-70"];
m12_54 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="ProcessingStateHandler.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()), \r\n                Times.Once)", span="72-74"];
m12_55 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="66-66"];
m12_102 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="130-130"];
m12_103 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="133-133"];
m12_104 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="135-137"];
m12_107 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="ProcessingStateHandler.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="145-146"];
m12_105 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="139-139"];
m12_106 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="ProcessingStateHandler.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="142-143"];
m12_108 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="130-130"];
m12_162 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="191-191"];
m12_163 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="194-194"];
m12_164 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>()))\r\n                .InSequence()", span="196-197"];
m12_166 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>()))\r\n                .InSequence()", span="202-203"];
m12_165 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="_performer.Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .InSequence()", span="199-200"];
m12_167 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="205-205"];
m12_168 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="208-208"];
m12_169 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="191-191"];
m12_263 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="300-300"];
m12_264 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="303-303"];
m12_265 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="var exception = new InvalidOperationException()", span="305-305"];
m12_269 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="317-318"];
m12_266 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="306-308"];
m12_267 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="310-310"];
m12_268 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="313-314"];
m12_270 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="300-300"];
m12_118 [cluster="Unk.OnServerException", file="ProcessingStateHandler.cs", label="Entry Unk.OnServerException", span=""];
m12_141 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="173-173"];
m12_142 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="176-178"];
m12_143 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="180-180"];
m12_144 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="181-182"];
m12_145 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="184-184"];
m12_146 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ProcessingStateHandler.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="187-187"];
m12_147 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="173-173"];
m12_429 [cluster="DefaultJobPerformanceProcess.cstr", file="ProcessingStateHandler.cs", label="Entry DefaultJobPerformanceProcess.cstr", span=""];
m12_91 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="115-115"];
m12_92 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="118-120"];
m12_93 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="122-122"];
m12_94 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="ProcessingStateHandler.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="125-126"];
m12_95 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="115-115"];
m12_61 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="78-78"];
m12_62 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="81-81"];
m12_63 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="82-82"];
m12_66 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="ProcessingStateHandler.cs", label="filter.Verify(\r\n                x => x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value'')))", span="92-93"];
m12_64 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="84-86"];
m12_65 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="89-89"];
m12_67 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="78-78"];
m12_173 [cluster="Unk.OnPerforming", file="ProcessingStateHandler.cs", label="Entry Unk.OnPerforming", span=""];
m12_329 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="363-363"];
m12_330 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="366-366"];
m12_331 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="367-367"];
m12_336 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="382-382"];
m12_332 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="369-371"];
m12_333 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="373-374"];
m12_334 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="376-376"];
m12_335 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="379-379"];
m12_337 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="363-363"];
m12_128 [cluster="Unk.InSequence", file="ProcessingStateHandler.cs", label="Entry Unk.InSequence", span=""];
m12_435 [cluster="Unk.Add", file="ProcessingStateHandler.cs", label="Entry Unk.Add", span=""];
m12_15 [cluster="Mock<IJobPerformer>.cstr", file="ProcessingStateHandler.cs", label="Entry Mock<IJobPerformer>.cstr", span=""];
m12_222 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="256-256"];
m12_223 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="259-259"];
m12_224 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="260-260"];
m12_228 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="271-271"];
m12_225 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="262-263"];
m12_226 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="265-265"];
m12_227 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="268-268"];
m12_229 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="256-256"];
m12_69 [cluster="Unk.Setup", file="ProcessingStateHandler.cs", label="Entry Unk.Setup", span=""];
m12_21 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="474-474"];
m12_426 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="474-474"];
m12_272 [cluster="Unk.Throws", file="ProcessingStateHandler.cs", label="Entry Unk.Throws", span=""];
m12_60 [cluster="Unk.Perform", file="ProcessingStateHandler.cs", label="Entry Unk.Perform", span=""];
m12_32 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="44-44"];
m12_33 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="46-46"];
m12_34 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ProcessingStateHandler.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="48-49"];
m12_35 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ProcessingStateHandler.cs", label="Assert.Equal(''context'', exception.ParamName)", span="51-51"];
m12_36 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="44-44"];
m12_202 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="234-234"];
m12_203 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="237-237"];
m12_204 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="239-240"];
m12_208 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="252-252"];
m12_205 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="242-242"];
m12_206 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="245-245"];
m12_207 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="248-250"];
m12_209 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="234-234"];
m12_423 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="471-471"];
m12_18 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="24-24"];
m12_19 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Method()", span="24-24"];
m12_20 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="24-24"];
m12_28 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="38-38"];
m12_29 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="new DefaultJobPerformanceProcess(null)", span="38-38"];
m12_30 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="38-38"];
m12_39 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(null, _performer.Object)", span="49-49"];
m12_38 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="49-49"];
m12_40 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="49-49"];
m12_48 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, null)", span="60-60"];
m12_47 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="60-60"];
m12_49 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="60-60"];
m12_57 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="73-73"];
m12_58 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="73-73"];
m12_59 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="73-73"];
m12_71 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="85-85"];
m12_74 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="93-93"];
m12_72 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="85-85"];
m12_73 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="85-85"];
m12_75 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value''))", span="93-93"];
m12_76 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="93-93"];
m12_78 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="93-93"];
m12_79 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="(string)context.Result == ''Returned value''", span="93-93"];
m12_80 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="93-93"];
m12_88 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="104-104"];
m12_89 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="104-104"];
m12_90 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="104-104"];
m12_96 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="119-119"];
m12_100 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="126-126"];
m12_99 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="126-126"];
m12_97 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="119-119"];
m12_98 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="119-119"];
m12_101 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="126-126"];
m12_109 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="136-136"];
m12_113 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="143-143"];
m12_112 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="143-143"];
m12_115 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="145-146"];
m12_110 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="136-136"];
m12_111 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="136-136"];
m12_114 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="143-143"];
m12_116 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="145-146"];
m12_117 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="145-146"];
m12_129 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="156-156"];
m12_132 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="157-157"];
m12_135 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="160-160"];
m12_139 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="167-167"];
m12_138 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="167-167"];
m12_130 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="156-156"];
m12_131 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="156-156"];
m12_133 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="157-157"];
m12_134 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="157-157"];
m12_136 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="160-160"];
m12_137 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="160-160"];
m12_140 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="167-167"];
m12_150 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="177-177"];
m12_153 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="181-181"];
m12_156 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="182-182"];
m12_160 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="187-187"];
m12_159 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="187-187"];
m12_151 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="177-177"];
m12_152 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="177-177"];
m12_154 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="181-181"];
m12_155 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="181-181"];
m12_157 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.ExceptionHandled = true", span="182-182"];
m12_158 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="182-182"];
m12_161 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="187-187"];
m12_170 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="196-196"];
m12_174 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="199-199"];
m12_177 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="202-202"];
m12_171 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="196-196"];
m12_172 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="196-196"];
m12_175 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="199-199"];
m12_176 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="199-199"];
m12_178 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="202-202"];
m12_179 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="202-202"];
m12_190 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="220-220"];
m12_193 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="221-221"];
m12_196 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="222-222"];
m12_199 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="223-223"];
m12_191 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="220-220"];
m12_192 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="220-220"];
m12_194 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="221-221"];
m12_195 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="221-221"];
m12_197 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="222-222"];
m12_198 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="222-222"];
m12_200 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="223-223"];
m12_201 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="223-223"];
m12_210 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="239-239"];
m12_213 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="240-240"];
m12_216 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="249-249"];
m12_219 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="252-252"];
m12_211 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="239-239"];
m12_212 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="239-239"];
m12_214 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Canceled = true", span="240-240"];
m12_215 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="240-240"];
m12_217 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="249-249"];
m12_218 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="249-249"];
m12_220 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="252-252"];
m12_221 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="252-252"];
m12_230 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="262-262"];
m12_233 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="263-263"];
m12_236 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="271-271"];
m12_231 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="262-262"];
m12_232 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="262-262"];
m12_234 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="context.Canceled = true", span="263-263"];
m12_235 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="263-263"];
m12_237 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="271-271"];
m12_238 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="271-271"];
m12_239 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="271-271"];
m12_240 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="context.Canceled", span="271-271"];
m12_241 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="271-271"];
m12_251 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="280-280"];
m12_255 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="287-287"];
m12_254 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="287-287"];
m12_257 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="293-293"];
m12_260 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="296-296"];
m12_252 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="280-280"];
m12_253 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="280-280"];
m12_256 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="287-287"];
m12_258 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="293-293"];
m12_259 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="293-293"];
m12_261 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="296-296"];
m12_262 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="296-296"];
m12_280 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="317-318"];
m12_283 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="context.Exception == exception", span="318-318"];
m12_273 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="307-307"];
m12_277 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="314-314"];
m12_276 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="314-314"];
m12_279 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="317-318"];
m12_274 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="307-307"];
m12_275 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="307-307"];
m12_278 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="314-314"];
m12_281 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="317-318"];
m12_282 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="318-318"];
m12_284 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="318-318"];
m12_301 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="339-339"];
m12_304 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="context.Exception == exception", span="339-339"];
m12_294 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="330-330"];
m12_298 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="337-337"];
m12_297 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="337-337"];
m12_300 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="339-339"];
m12_295 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="330-330"];
m12_296 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="330-330"];
m12_299 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="337-337"];
m12_302 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="339-339"];
m12_303 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="339-339"];
m12_305 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="339-339"];
m12_318 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="353-353"];
m12_321 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="context.Exception == exception", span="353-353"];
m12_314 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="350-350"];
m12_317 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="353-353"];
m12_323 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="354-354"];
m12_327 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="359-359"];
m12_326 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="359-359"];
m12_315 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="350-350"];
m12_316 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="350-350"];
m12_319 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="353-353"];
m12_320 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="353-353"];
m12_322 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="353-353"];
m12_324 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.ExceptionHandled = true", span="354-354"];
m12_325 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="354-354"];
m12_328 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="359-359"];
m12_338 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="370-370"];
m12_341 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="373-373"];
m12_344 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="374-374"];
m12_348 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="379-379"];
m12_347 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="379-379"];
m12_350 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="382-382"];
m12_339 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="370-370"];
m12_340 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="370-370"];
m12_342 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="373-373"];
m12_343 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="373-373"];
m12_345 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.ExceptionHandled = true", span="374-374"];
m12_346 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="374-374"];
m12_349 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="379-379"];
m12_351 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="382-382"];
m12_352 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="382-382"];
m12_353 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="382-382"];
m12_354 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="context.Exception != null", span="382-382"];
m12_355 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="382-382"];
m12_363 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="390-390"];
m12_367 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="397-397"];
m12_366 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="396-397"];
m12_364 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="390-390"];
m12_365 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="390-390"];
m12_368 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="396-397"];
m12_377 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="407-407"];
m12_380 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="411-411"];
m12_384 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="418-418"];
m12_383 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="417-418"];
m12_378 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="407-407"];
m12_379 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="407-407"];
m12_381 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="411-411"];
m12_382 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="411-411"];
m12_385 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="417-418"];
m12_393 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="428-428"];
m12_397 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="436-436"];
m12_396 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="436-436"];
m12_399 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="440-440"];
m12_394 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="428-428"];
m12_395 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="428-428"];
m12_398 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="436-436"];
m12_400 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="440-440"];
m12_401 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="440-440"];
m12_408 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="449-449"];
m12_412 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="456-456"];
m12_411 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="456-456"];
m12_409 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="449-449"];
m12_410 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="449-449"];
m12_413 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="456-456"];
m12_420 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Entry lambda expression", span="464-464"];
m12_424 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="process.Run(_context, _performer.Object)", span="471-471"];
m12_421 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="464-464"];
m12_422 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="464-464"];
m12_425 [cluster="lambda expression", file="ProcessingStateHandler.cs", label="Exit lambda expression", span="471-471"];
m12_16 [cluster="Mock<JobActivator>.cstr", file="ProcessingStateHandler.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m12_56 [cluster="Unk.Verify", file="ProcessingStateHandler.cs", label="Entry Unk.Verify", span=""];
m12_356 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="386-386"];
m12_357 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="389-389"];
m12_358 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="390-391"];
m12_359 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="393-393"];
m12_360 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="396-397"];
m12_361 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="399-399"];
m12_362 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="386-386"];
m12_369 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="403-403"];
m12_370 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="406-406"];
m12_371 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="407-408"];
m12_372 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<ArgumentNullException>()", span="410-412"];
m12_373 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="414-414"];
m12_374 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="417-418"];
m12_375 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="420-420"];
m12_376 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="403-403"];
m12_14 [cluster="Mock<IJobCancellationToken>.cstr", file="ProcessingStateHandler.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m12_148 [cluster="Unk.Callback", file="ProcessingStateHandler.cs", label="Entry Unk.Callback", span=""];
m12_242 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="275-275"];
m12_243 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="var filter = CreateFilter<IServerFilter>()", span="278-278"];
m12_244 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="280-281"];
m12_249 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="296-296"];
m12_245 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="283-283"];
m12_246 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="286-287"];
m12_247 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="290-290"];
m12_248 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="292-294"];
m12_250 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="275-275"];
m12_70 [cluster="Unk.Returns", file="ProcessingStateHandler.cs", label="Entry Unk.Returns", span=""];
m12_11 [cluster="Mock<IStorageConnection>.cstr", file="ProcessingStateHandler.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m12_285 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="322-322"];
m12_286 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="325-325"];
m12_287 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="326-326"];
m12_292 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="339-339"];
m12_288 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="var exception = new InvalidOperationException()", span="328-328"];
m12_289 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="329-331"];
m12_290 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="var process = CreateProcess()", span="333-333"];
m12_291 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="336-337"];
m12_293 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="ProcessingStateHandler.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="322-322"];
m12_50 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="ProcessingStateHandler.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="51-51"];
m12_12 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ProcessingStateHandler.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m12_13 [cluster="PerformContext.cstr", file="ProcessingStateHandler.cs", label="Entry PerformContext.cstr", span=""];
m12_436 [file="ProcessingStateHandler.cs", label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", span=""];
m12_437 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_438 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_439 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_440 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_441 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_442 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_443 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_444 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_445 [file="ProcessingStateHandler.cs", label=exception, span=""];
m12_446 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_447 [file="ProcessingStateHandler.cs", label=exception, span=""];
m12_448 [file="ProcessingStateHandler.cs", label=exception, span=""];
m12_449 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_450 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_451 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_452 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_453 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_454 [file="ProcessingStateHandler.cs", label=process, span=""];
m12_455 [file="ProcessingStateHandler.cs", label=process, span=""];
m13_5 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
m13_6 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="var failedState = context.CandidateState as FailedState", span="46-46"];
m13_9 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="53-53"];
m13_11 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="ScheduleAgainLater(context, retryAttempt, failedState)", span="57-57"];
m13_13 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="TransitionToDeleted(context, failedState)", span="61-61"];
m13_15 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="Logger.ErrorException(\r\n                        String.Format(\r\n                            ''Failed to process the job '{0}': an exception occurred.'',\r\n                            context.JobId),\r\n                        failedState.Exception)", span="67-71"];
m13_7 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="failedState == null", span="47-47"];
m13_8 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="return;", span="50-50"];
m13_10 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="retryAttempt <= Attempts", span="55-55"];
m13_12 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="retryAttempt > Attempts && OnAttemptsExceeded == AttemptsExceededAction.Delete", span="59-59"];
m13_14 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label=LogEvents, span="65-65"];
m13_16 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RedisMonitoringApi.cs", label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
m13_31 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="RedisMonitoringApi.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m13_34 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RedisMonitoringApi.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="285-285"];
m13_28 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisMonitoringApi.cs", label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m13_40 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisMonitoringApi.cs", label="var random = new Random()", span="134-134"];
m13_41 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisMonitoringApi.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="135-136"];
m13_42 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="RedisMonitoringApi.cs", label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m13_32 [cluster="string.Format(string, object, object)", file="RedisMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m13_17 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="RedisMonitoringApi.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
m13_33 [cluster="string.Format(string, params object[])", file="RedisMonitoringApi.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m13_43 [cluster="System.Random.Random()", file="RedisMonitoringApi.cs", label="Entry System.Random.Random()", span="0-0"];
m13_18 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="Entry Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m13_22 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="84-84"];
m13_23 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="86-86"];
m13_24 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="context.CandidateState = new ScheduledState(delay)\r\n            {\r\n                Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n            }", span="90-93"];
m13_26 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay),\r\n                    failedState.Exception)", span="97-104"];
m13_25 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label=LogEvents, span="95-95"];
m13_27 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="Exit Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m13_21 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RedisMonitoringApi.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="166-166"];
m13_29 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisMonitoringApi.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m13_44 [cluster="System.Math.Pow(double, double)", file="RedisMonitoringApi.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m13_45 [cluster="System.Random.Next(int)", file="RedisMonitoringApi.cs", label="Entry System.Random.Next(int)", span="0-0"];
m13_46 [cluster="System.Math.Round(double)", file="RedisMonitoringApi.cs", label="Entry System.Math.Round(double)", span="0-0"];
m13_0 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisMonitoringApi.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m13_1 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisMonitoringApi.cs", label="Attempts = DefaultRetryAttempts", span="22-22"];
m13_2 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisMonitoringApi.cs", label="LogEvents = true", span="23-23"];
m13_3 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisMonitoringApi.cs", label="OnAttemptsExceeded = AttemptsExceededAction.Fail", span="24-24"];
m13_4 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RedisMonitoringApi.cs", label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m13_20 [cluster="string.Format(string, object)", file="RedisMonitoringApi.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_19 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="Entry Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m13_35 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="context.CandidateState = new DeletedState\r\n            {\r\n                Reason = String.Format(''Automatic deletion after retry count exceeded {0}'', Attempts)\r\n            }", span="115-118"];
m13_37 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occured. Job was automatically deleted because the retry attempt count exceeded {1}.'',\r\n                        context.JobId,\r\n                        Attempts),\r\n                    failedState.Exception)", span="122-127"];
m13_36 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label=LogEvents, span="120-120"];
m13_38 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="RedisMonitoringApi.cs", label="Exit Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m13_30 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="RedisMonitoringApi.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
m13_39 [cluster="Hangfire.States.DeletedState.DeletedState()", file="RedisMonitoringApi.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m13_47 [file="RedisMonitoringApi.cs", label="Hangfire.AutomaticRetryAttribute", span=""];
m14_28 [cluster="System.Runtime.InteropServices.Marshal.StringToBSTR(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Runtime.InteropServices.Marshal.StringToBSTR(string)", span="0-0"];
m14_25 [cluster="Unk.Exists", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Exists", span=""];
m14_3 [cluster="Unk.GetCount", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.GetCount", span=""];
m14_4 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", span="92-92"];
m14_5 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="!MessageQueue.Exists(path)", span="94-94"];
m14_16 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="var objectName = Marshal.StringToBSTR(''queue=Direct=OS:'' + path)", span="112-112"];
m14_6 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="return 0;", span="96-96"];
m14_7 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="var props = new MQMGMTPROPS()", span="99-99"];
m14_8 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="props.cProp = 1", span="100-100"];
m14_9 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="var aPropId = PROPID_MGMT_QUEUE_MESSAGE_COUNT", span="102-102"];
m14_10 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="props.aPropID = &aPropId", span="103-103"];
m14_11 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="var aPropVar = new MQPROPVariant()", span="105-105"];
m14_12 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="aPropVar.vt = VT_NULL", span="106-106"];
m14_13 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="props.aPropVar = &aPropVar", span="107-107"];
m14_14 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="var status = 0", span="109-109"];
m14_15 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="props.status = &status", span="110-110"];
m14_19 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="var result = MQMgmtGetInfo(null, (char*) objectName, &props)", span="119-119"];
m14_17 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="uint rtn", span="115-115"];
m14_18 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label=LockObject, span="117-117"];
m14_20 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="result != 0 || *props.status != 0 || props.aPropVar->vt != VT_UI4", span="120-120"];
m14_22 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="rtn = props.aPropVar->ulVal", span="126-126"];
m14_21 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="rtn = 0", span="122-122"];
m14_23 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="return rtn;", span="130-130"];
m14_24 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", file="RedisWriteOnlyTransaction.cs", label="Exit Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(string)", span="92-92"];
m14_27 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQPROPVariant.MQPROPVariant()", file="RedisWriteOnlyTransaction.cs", label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQPROPVariant.MQPROPVariant()", span="189-189"];
m14_26 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS.MQMGMTPROPS()", file="RedisWriteOnlyTransaction.cs", label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS.MQMGMTPROPS()", span="162-162"];
m14_29 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", file="RedisWriteOnlyTransaction.cs", label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", span="154-154"];
m14_30 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", file="RedisWriteOnlyTransaction.cs", label="Exit Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMgmtGetInfo(char*, char*, Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.MQMGMTPROPS*)", span="154-154"];
m14_0 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", file="RedisWriteOnlyTransaction.cs", label="Entry Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", span="74-74"];
m14_1 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", file="RedisWriteOnlyTransaction.cs", label="return GetCount(queue.Path);", span="76-76"];
m14_2 [cluster="Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", file="RedisWriteOnlyTransaction.cs", label="Exit Rsft.Lib.Msmq.MessageCounter.MessageQueueExtensions.GetCount(MessageQueue)", span="74-74"];
m15_16 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="54-54"];
m15_17 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ScheduledState.cs", label="context.Transaction.RemoveFromSet(''schedule'', context.JobId)", prediction=6, span="56-56"];
m15_18 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="54-54"];
m15_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m15_2 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m15_3 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m15_0 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m15_1 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m15_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m15_13 [cluster="Unk.GetData", file="ScheduledState.cs", label="Entry Unk.GetData", span=""];
m15_8 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="46-46"];
m15_9 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ScheduledState.cs", label="var stateData = context.NewState.GetData(context.JobMethod)", prediction=7, span="48-48"];
m15_10 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="var timestamp = long.Parse(stateData[''EnqueueAt''])", span="49-49"];
m15_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="context.Transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="51-51"];
m15_12 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="46-46"];
m15_14 [cluster="Unk.Parse", file="ScheduledState.cs", label="Entry Unk.Parse", span=""];
m16_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", span="17-17"];
m16_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow.AddDays(1))", span="19-19"];
m16_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="ScheduledStateFacts.cs", label="var data = state.GetProperties(null)", prediction=8, span="20-20"];
m16_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', ''<UtcNow timestamp>'' },\r\n                    { ''EnqueueAt'', ''<Tomorrow timestamp>'' },\r\n                },\r\n                data)", span="22-28"];
m16_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", span="17-17"];
m16_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledStateFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m16_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m16_12 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m16_14 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m16_0 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="10-10"];
m16_1 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="12-12"];
m16_2 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Assert.Equal(ScheduledState.Name, state.StateName)", span="13-13"];
m16_3 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="10-10"];
m16_5 [cluster="Unk.Equal", file="ScheduledStateFacts.cs", label="Entry Unk.Equal", span=""];
m16_11 [cluster="System.DateTime.AddDays(double)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m18_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_80 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="115-115"];
m18_81 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="AddToSet(key, value, 0.0)", span="117-117"];
m18_82 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="115-115"];
m18_96 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="141-141"];
m18_97 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="143-145"];
m18_98 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="141-141"];
m18_83 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="120-120"];
m18_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="122-127"];
m18_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="129-131"];
m18_86 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="120-120"];
m18_62 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="94-94"];
m18_63 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="96-98"];
m18_64 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="94-94"];
m18_143 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m18_36 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="61-61"];
m18_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="61-61"];
m18_108 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="155-155"];
m18_109 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="157-160"];
m18_110 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="162-164"];
m18_111 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="155-155"];
m18_24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="218-218"];
m18_141 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="_commandQueue.Enqueue(action)", span="220-220"];
m18_142 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="218-218"];
m18_18 [cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.EnlistTransaction", span=""];
m18_19 [cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m18_16 [cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m18_74 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="108-108"];
m18_75 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="110-112"];
m18_76 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="108-108"];
m18_68 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="101-101"];
m18_69 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="103-105"];
m18_70 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="101-101"];
m18_20 [cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Complete", span=""];
m18_28 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m18_90 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="134-134"];
m18_91 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="136-138"];
m18_92 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="134-134"];
m18_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="47-47"];
m18_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="49-51"];
m18_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="47-47"];
m18_102 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148"];
m18_103 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="150-152"];
m18_104 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148"];
m18_43 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="68-68"];
m18_45 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="68-68"];
m18_8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="28-28"];
m18_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="30-32"];
m18_10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="34-34"];
m18_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="transaction.Complete()", span="41-41"];
m18_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label=_commandQueue, span="36-36"];
m18_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="command(_connection)", span="38-38"];
m18_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="return true;", span="44-44"];
m18_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="28-28"];
m18_17 [cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionOptions.cstr", span=""];
m18_135 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="211-211"];
m18_136 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="213-215"];
m18_137 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="211-211"];
m18_138 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="213-215"];
m18_26 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="49-51"];
m18_25 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="49-51"];
m18_27 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="49-51"];
m18_34 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="56-58"];
m18_33 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="56-58"];
m18_35 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="56-58"];
m18_39 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="63-65"];
m18_41 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="63-65"];
m18_46 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="70-73"];
m18_48 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="70-73"];
m18_54 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="82-84"];
m18_53 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="82-84"];
m18_55 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="82-84"];
m18_60 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="89-91"];
m18_59 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="89-91"];
m18_61 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="89-91"];
m18_66 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="96-98"];
m18_65 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="96-98"];
m18_67 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="96-98"];
m18_72 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="103-105"];
m18_71 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="103-105"];
m18_73 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="103-105"];
m18_78 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="110-112"];
m18_77 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="110-112"];
m18_79 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="110-112"];
m18_88 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="129-131"];
m18_87 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="129-131"];
m18_89 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="129-131"];
m18_94 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="136-138"];
m18_93 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="136-138"];
m18_95 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="136-138"];
m18_100 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="143-145"];
m18_99 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="143-145"];
m18_101 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="143-145"];
m18_106 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="150-152"];
m18_105 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="150-152"];
m18_107 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="150-152"];
m18_113 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="162-164"];
m18_112 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="162-164"];
m18_114 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="162-164"];
m18_121 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="180-180"];
m18_123 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="184-184"];
m18_120 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="178-186"];
m18_122 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="affectedRows == 0", span="182-182"];
m18_124 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="178-186"];
m18_131 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="202-202"];
m18_133 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="206-206"];
m18_130 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="200-208"];
m18_132 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="affectedRows == 0", span="204-204"];
m18_134 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="200-208"];
m18_139 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="213-215"];
m18_140 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="213-215"];
m18_125 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="189-189"];
m18_126 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="191-196"];
m18_128 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="200-208"];
m18_127 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="197-198"];
m18_129 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="189-189"];
m18_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17"];
m18_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="connection == null", span="19-19"];
m18_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="_connection = connection", span="21-21"];
m18_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''connection'');", span="19-19"];
m18_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17"];
m18_115 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="167-167"];
m18_116 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="169-174"];
m18_118 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="178-186"];
m18_117 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="175-176"];
m18_119 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="167-167"];
m18_42 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m18_29 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m18_49 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="76-76"];
m18_50 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="78-80"];
m18_51 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="82-84"];
m18_52 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="76-76"];
m18_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="87-87"];
m18_57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="89-91"];
m18_58 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="87-87"];
m18_30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="54-54"];
m18_31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="56-58"];
m18_32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="54-54"];
m18_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="24-24"];
m18_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="24-24"];
m18_144 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m18_145 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_146 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m18_147 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_148 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_149 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_150 [file="SqlServerWriteOnlyTransaction.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m18_151 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_152 [file="SqlServerWriteOnlyTransaction.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m18_153 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_154 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_155 [file="SqlServerWriteOnlyTransaction.cs", label=enqueueJobSql, span=""];
m18_156 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_157 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_158 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m18_159 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_160 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_161 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m18_162 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_163 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_164 [file="SqlServerWriteOnlyTransaction.cs", label=double, span=""];
m18_165 [file="SqlServerWriteOnlyTransaction.cs", label=addSql, span=""];
m18_166 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_167 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_168 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_169 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_170 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_171 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_172 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m18_173 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m18_174 [file="SqlServerWriteOnlyTransaction.cs", label=trimSql, span=""];
m18_175 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_176 [file="SqlServerWriteOnlyTransaction.cs", label=updateSql, span=""];
m18_177 [file="SqlServerWriteOnlyTransaction.cs", label=insertSql, span=""];
m18_178 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_179 [file="SqlServerWriteOnlyTransaction.cs", label=updateSql, span=""];
m18_180 [file="SqlServerWriteOnlyTransaction.cs", label=insertSql, span=""];
m18_181 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m18_182 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m19_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateApplyingContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m19_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m19_6 [file="StateApplyingContext.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m21_13 [cluster="PerformContext.cstr", file="StateMachine.cs", label="Entry PerformContext.cstr", span=""];
m21_434 [cluster="Mock<T>.cstr", file="StateMachine.cs", label="Entry Mock<T>.cstr", span=""];
m21_17 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="StateMachine.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="61-61"];
m21_31 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="StateMachine.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m21_10 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="i++", span="35-35"];
m21_81 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="97-97"];
m21_85 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", color=green, community=0, file="StateMachine.cs", label="var result = process.Run(_context, _performer.Object)", prediction=9, span="108-108"];
m21_83 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="StateMachine.cs", label="var process = CreateProcess()", span="101-101"];
m21_84 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="103-105"];
m21_86 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", color=green, community=0, file="StateMachine.cs", label="Assert.Equal(''Returned value'', result)", prediction=10, span="111-111"];
m21_82 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="100-100"];
m21_87 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="97-97"];
m21_27 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="StateMachine.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m21_22 [cluster="HangFire.Server.WorkerManager.Start()", file="StateMachine.cs", label="Exit HangFire.Server.WorkerManager.Start()", span="46-46"];
m21_23 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="StateMachine.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m21_24 [cluster="HangFire.Server.WorkerManager.Stop()", file="StateMachine.cs", label="Entry HangFire.Server.WorkerManager.Stop()", span="51-51"];
m21_25 [cluster="HangFire.Server.WorkerManager.Stop()", file="StateMachine.cs", label="_workerRunners.Stop()", span="53-53"];
m21_11 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="_workerRunners = new ServerComponentRunnerCollection(workerRunners)", span="43-43"];
m21_37 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="478-478"];
m21_427 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="StateMachine.cs", label="return new DefaultJobPerformanceProcess(_activator.Object, _filters);", span="480-480"];
m21_428 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="478-478"];
m21_149 [cluster="Unk.DoesNotThrow", file="StateMachine.cs", label="Entry Unk.DoesNotThrow", span=""];
m21_77 [cluster="Unk.OnPerformed", file="StateMachine.cs", label="Entry Unk.OnPerformed", span=""];
m21_41 [cluster="Unk.Run", file="StateMachine.cs", label="Entry Unk.Run", span=""];
m21_386 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="424-424"];
m21_391 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="StateMachine.cs", label="filter.Verify(\r\n                x => x.OnServerException(It.IsAny<ServerExceptionContext>()),\r\n                Times.Never)", span="439-441"];
m21_387 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<OperationCanceledException>()", span="427-429"];
m21_390 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="StateMachine.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="435-436"];
m21_388 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="StateMachine.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="431-431"];
m21_389 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="StateMachine.cs", label="var process = CreateProcess()", span="432-432"];
m21_392 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="424-424"];
m21_271 [cluster="System.InvalidOperationException.InvalidOperationException()", file="StateMachine.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m21_42 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="55-55"];
m21_44 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="StateMachine.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="59-60"];
m21_43 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="StateMachine.cs", label="var process = CreateProcess()", span="57-57"];
m21_45 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="StateMachine.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="62-62"];
m21_46 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="55-55"];
m21_180 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="214-214"];
m21_181 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="217-217"];
m21_182 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="218-218"];
m21_187 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="var process = CreateProcess()", span="225-225"];
m21_188 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="228-228"];
m21_183 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="220-220"];
m21_186 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="223-223"];
m21_184 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="221-221"];
m21_185 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="222-222"];
m21_189 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="214-214"];
m21_26 [cluster="HangFire.Server.WorkerManager.Stop()", file="StateMachine.cs", label="Exit HangFire.Server.WorkerManager.Stop()", span="51-51"];
m21_119 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="150-150"];
m21_122 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateMachine.cs", label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", prediction=11, span="156-156"];
m21_121 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="StateMachine.cs", label="var filter2 = CreateFilter<IServerExceptionFilter>()", span="154-154"];
m21_123 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="StateMachine.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="157-157"];
m21_124 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", prediction=12, span="159-161"];
m21_125 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateMachine.cs", label="var process = CreateProcess()", prediction=12, span="163-163"];
m21_126 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateMachine.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", prediction=12, span="166-167"];
m21_120 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="StateMachine.cs", label="var filter1 = CreateFilter<IServerExceptionFilter>()", span="153-153"];
m21_127 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="150-150"];
m21_0 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="28-28"];
m21_5 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="var workerRunners = new List<IServerComponentRunner>(workerCount)", span="34-34"];
m21_6 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="var i = 1", span="35-35"];
m21_7 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="i <= workerCount", span="35-35"];
m21_8 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="var workerContext = new WorkerContext(sharedContext, i)", span="37-37"];
m21_1 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="sharedContext == null", span="30-30"];
m21_2 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="throw new ArgumentNullException(''sharedContext'');", span="30-30"];
m21_3 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="workerCount <= 0", span="32-32"];
m21_4 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="32-32"];
m21_9 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="StateMachine.cs", label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="40-40"];
m21_402 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="445-445"];
m21_404 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<OperationCanceledException>()", span="449-450"];
m21_406 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="StateMachine.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="455-456"];
m21_403 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="448-448"];
m21_405 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="StateMachine.cs", label="var process = CreateProcess()", span="452-452"];
m21_407 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="445-445"];
m21_14 [cluster="Mock<IJobCancellationToken>.cstr", file="StateMachine.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m21_68 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="483-483"];
m21_431 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="StateMachine.cs", label="_filters.Add(filter.Object)", span="487-487"];
m21_430 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="StateMachine.cs", label="var filter = new Mock<T>()", span="486-486"];
m21_432 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="StateMachine.cs", label="return filter;", span="489-489"];
m21_433 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="483-483"];
m21_102 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="130-130"];
m21_103 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateMachine.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", prediction=15, span="133-133"];
m21_104 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", prediction=12, span="135-137"];
m21_107 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateMachine.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", prediction=15, span="145-146"];
m21_105 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="StateMachine.cs", label="var process = CreateProcess()", span="139-139"];
m21_106 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateMachine.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", prediction=12, span="142-143"];
m21_108 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="130-130"];
m21_51 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="66-66"];
m21_54 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="StateMachine.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()), \r\n                Times.Once)", span="72-74"];
m21_52 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="StateMachine.cs", label="var process = CreateProcess()", span="68-68"];
m21_53 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="70-70"];
m21_55 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="66-66"];
m21_414 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="460-460"];
m21_416 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<OperationCanceledException>()", span="464-465"];
m21_418 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="StateMachine.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="470-471"];
m21_415 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="463-463"];
m21_417 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="StateMachine.cs", label="var process = CreateProcess()", span="467-467"];
m21_419 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="460-460"];
m21_162 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="191-191"];
m21_163 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="194-194"];
m21_165 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="_performer.Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .InSequence()", span="199-200"];
m21_167 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="var process = CreateProcess()", span="205-205"];
m21_168 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="208-208"];
m21_164 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>()))\r\n                .InSequence()", span="196-197"];
m21_166 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>()))\r\n                .InSequence()", span="202-203"];
m21_169 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="191-191"];
m21_263 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="300-300"];
m21_269 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="317-318"];
m21_268 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="313-314"];
m21_264 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="303-303"];
m21_266 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="306-308"];
m21_267 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="var process = CreateProcess()", span="310-310"];
m21_265 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="var exception = new InvalidOperationException()", span="305-305"];
m21_270 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="300-300"];
m21_118 [cluster="Unk.OnServerException", file="StateMachine.cs", label="Entry Unk.OnServerException", span=""];
m21_141 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="173-173"];
m21_142 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=green, community=0, file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", prediction=12, span="176-178"];
m21_143 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateMachine.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="180-180"];
m21_145 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateMachine.cs", label="var process = CreateProcess()", span="184-184"];
m21_146 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateMachine.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="187-187"];
m21_144 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateMachine.cs", label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="181-182"];
m21_147 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="173-173"];
m21_429 [cluster="DefaultJobPerformanceProcess.cstr", file="StateMachine.cs", label="Entry DefaultJobPerformanceProcess.cstr", span=""];
m21_91 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="115-115"];
m21_92 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", color=green, community=0, file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", prediction=12, span="118-120"];
m21_93 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="StateMachine.cs", label="var process = CreateProcess()", span="122-122"];
m21_94 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", color=green, community=0, file="StateMachine.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", prediction=12, span="125-126"];
m21_95 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="115-115"];
m21_61 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="78-78"];
m21_66 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", color=green, community=0, file="StateMachine.cs", label="filter.Verify(\r\n                x => x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value'')))", prediction=22, span="92-93"];
m21_62 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="81-81"];
m21_65 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="89-89"];
m21_63 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="StateMachine.cs", label="var process = CreateProcess()", span="82-82"];
m21_64 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="84-86"];
m21_67 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="78-78"];
m21_329 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="363-363"];
m21_336 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="382-382"];
m21_332 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="369-371"];
m21_330 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="366-366"];
m21_331 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="367-367"];
m21_334 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="var process = CreateProcess()", span="376-376"];
m21_335 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="379-379"];
m21_333 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="373-374"];
m21_337 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="363-363"];
m21_173 [cluster="Unk.OnPerforming", file="StateMachine.cs", label="Entry Unk.OnPerforming", span=""];
m21_128 [cluster="Unk.InSequence", file="StateMachine.cs", label="Entry Unk.InSequence", span=""];
m21_435 [cluster="Unk.Add", file="StateMachine.cs", label="Entry Unk.Add", span=""];
m21_15 [cluster="System.Collections.Generic.List<T>.List(int)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m21_16 [cluster="Mock<JobActivator>.cstr", file="StateMachine.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m21_222 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="256-256"];
m21_228 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="271-271"];
m21_223 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="259-259"];
m21_224 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="260-260"];
m21_226 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="var process = CreateProcess()", span="265-265"];
m21_227 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="268-268"];
m21_225 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="262-263"];
m21_229 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="256-256"];
m21_28 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="38-38"];
m21_29 [cluster="lambda expression", file="StateMachine.cs", label="new DefaultJobPerformanceProcess(null)", span="38-38"];
m21_30 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="38-38"];
m21_69 [cluster="Unk.Setup", file="StateMachine.cs", label="Entry Unk.Setup", span=""];
m21_272 [cluster="Unk.Throws", file="StateMachine.cs", label="Entry Unk.Throws", span=""];
m21_32 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="44-44"];
m21_33 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="StateMachine.cs", label="var process = CreateProcess()", span="46-46"];
m21_60 [cluster="Unk.Perform", file="StateMachine.cs", label="Entry Unk.Perform", span=""];
m21_34 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="StateMachine.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m21_35 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="StateMachine.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m21_36 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="StateMachine.cs", label="HangFire.Server.WorkerManager", span=""];
m21_21 [cluster="HangFire.Server.WorkerManager.Start()", file="StateMachine.cs", label="_workerRunners.Start()", span="48-48"];
m21_426 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="474-474"];
m21_202 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="234-234"];
m21_208 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="252-252"];
m21_207 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="248-250"];
m21_203 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="237-237"];
m21_205 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="var process = CreateProcess()", span="242-242"];
m21_206 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="245-245"];
m21_204 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="239-240"];
m21_209 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="234-234"];
m21_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m21_74 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="93-93"];
m21_75 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value''))", prediction=23, span="93-93"];
m21_76 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="93-93"];
m21_78 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="93-93"];
m21_79 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="(string)context.Result == ''Returned value''", prediction=24, span="93-93"];
m21_80 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="93-93"];
m21_96 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="119-119"];
m21_99 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="126-126"];
m21_97 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", prediction=25, span="119-119"];
m21_98 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="119-119"];
m21_109 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="136-136"];
m21_115 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="145-146"];
m21_112 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="143-143"];
m21_113 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="process.Run(_context, _performer.Object)", prediction=12, span="143-143"];
m21_114 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="143-143"];
m21_110 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", prediction=27, span="136-136"];
m21_111 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="136-136"];
m21_116 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", prediction=28, span="145-146"];
m21_117 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="145-146"];
m21_129 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="156-156"];
m21_135 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="160-160"];
m21_139 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="process.Run(_context, _performer.Object)", prediction=12, span="167-167"];
m21_138 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="167-167"];
m21_140 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="167-167"];
m21_130 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", prediction=30, span="156-156"];
m21_131 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="156-156"];
m21_150 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="177-177"];
m21_151 [cluster="lambda expression", color=green, community=0, file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", prediction=31, span="177-177"];
m21_152 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="177-177"];
m21_58 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="73-73"];
m21_72 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="85-85"];
m21_89 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="104-104"];
m21_133 [cluster="lambda expression", file="StateMachine.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="157-157"];
m21_136 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="160-160"];
m21_154 [cluster="lambda expression", file="StateMachine.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="181-181"];
m21_171 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="196-196"];
m21_175 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="199-199"];
m21_178 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="202-202"];
m21_191 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="220-220"];
m21_194 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="221-221"];
m21_197 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="222-222"];
m21_200 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="223-223"];
m21_211 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="239-239"];
m21_217 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="249-249"];
m21_220 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="252-252"];
m21_231 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="262-262"];
m21_237 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="271-271"];
m21_252 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="280-280"];
m21_258 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="293-293"];
m21_261 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="296-296"];
m21_280 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="317-318"];
m21_274 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="307-307"];
m21_301 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="339-339"];
m21_295 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="330-330"];
m21_318 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="353-353"];
m21_315 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="350-350"];
m21_339 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="370-370"];
m21_342 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="373-373"];
m21_351 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="382-382"];
m21_364 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="390-390"];
m21_378 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="407-407"];
m21_381 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="411-411"];
m21_394 [cluster="lambda expression", file="StateMachine.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="428-428"];
m21_400 [cluster="lambda expression", file="StateMachine.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="440-440"];
m21_409 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="449-449"];
m21_421 [cluster="lambda expression", file="StateMachine.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="464-464"];
m21_39 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(null, _performer.Object)", span="49-49"];
m21_48 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, null)", span="60-60"];
m21_100 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="126-126"];
m21_160 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="187-187"];
m21_255 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="287-287"];
m21_277 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="314-314"];
m21_298 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="337-337"];
m21_327 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="359-359"];
m21_348 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="379-379"];
m21_367 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="397-397"];
m21_384 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="418-418"];
m21_397 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="436-436"];
m21_412 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="456-456"];
m21_424 [cluster="lambda expression", file="StateMachine.cs", label="process.Run(_context, _performer.Object)", span="471-471"];
m21_88 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="104-104"];
m21_101 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="126-126"];
m21_132 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="157-157"];
m21_137 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="160-160"];
m21_71 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="85-85"];
m21_57 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="73-73"];
m21_219 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="252-252"];
m21_216 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="249-249"];
m21_236 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="271-271"];
m21_260 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="296-296"];
m21_257 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="293-293"];
m21_279 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="317-318"];
m21_300 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="339-339"];
m21_350 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="382-382"];
m21_399 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="440-440"];
m21_38 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="49-49"];
m21_47 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="60-60"];
m21_59 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="73-73"];
m21_73 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="85-85"];
m21_90 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="104-104"];
m21_134 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="157-157"];
m21_153 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="181-181"];
m21_155 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="181-181"];
m21_170 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="196-196"];
m21_172 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="196-196"];
m21_174 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="199-199"];
m21_176 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="199-199"];
m21_177 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="202-202"];
m21_179 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="202-202"];
m21_190 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="220-220"];
m21_192 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="220-220"];
m21_193 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="221-221"];
m21_195 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="221-221"];
m21_196 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="222-222"];
m21_198 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="222-222"];
m21_199 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="223-223"];
m21_201 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="223-223"];
m21_210 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="239-239"];
m21_212 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="239-239"];
m21_218 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="249-249"];
m21_221 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="252-252"];
m21_230 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="262-262"];
m21_232 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="262-262"];
m21_238 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="271-271"];
m21_239 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="271-271"];
m21_251 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="280-280"];
m21_254 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="287-287"];
m21_253 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="280-280"];
m21_259 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="293-293"];
m21_262 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="296-296"];
m21_281 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="317-318"];
m21_282 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="318-318"];
m21_276 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="314-314"];
m21_273 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="307-307"];
m21_275 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="307-307"];
m21_302 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="339-339"];
m21_303 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="339-339"];
m21_297 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="337-337"];
m21_294 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="330-330"];
m21_296 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="330-330"];
m21_317 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="353-353"];
m21_319 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="353-353"];
m21_320 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="353-353"];
m21_314 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="350-350"];
m21_316 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="350-350"];
m21_338 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="370-370"];
m21_340 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="370-370"];
m21_341 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="373-373"];
m21_343 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="373-373"];
m21_352 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="382-382"];
m21_353 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="382-382"];
m21_363 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="390-390"];
m21_366 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="396-397"];
m21_365 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="390-390"];
m21_377 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="407-407"];
m21_380 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="411-411"];
m21_383 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="417-418"];
m21_379 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="407-407"];
m21_382 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="411-411"];
m21_393 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="428-428"];
m21_396 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="436-436"];
m21_395 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="428-428"];
m21_401 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="440-440"];
m21_408 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="449-449"];
m21_411 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="456-456"];
m21_410 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="449-449"];
m21_420 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="464-464"];
m21_423 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="471-471"];
m21_422 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="464-464"];
m21_40 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="49-49"];
m21_49 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="60-60"];
m21_159 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="187-187"];
m21_161 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="187-187"];
m21_256 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="287-287"];
m21_278 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="314-314"];
m21_299 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="337-337"];
m21_326 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="359-359"];
m21_328 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="359-359"];
m21_347 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="379-379"];
m21_349 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="379-379"];
m21_368 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="396-397"];
m21_385 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="417-418"];
m21_398 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="436-436"];
m21_413 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="456-456"];
m21_425 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="471-471"];
m21_156 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="182-182"];
m21_213 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="240-240"];
m21_233 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="263-263"];
m21_323 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="354-354"];
m21_344 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="374-374"];
m21_283 [cluster="lambda expression", file="StateMachine.cs", label="context.Exception == exception", span="318-318"];
m21_304 [cluster="lambda expression", file="StateMachine.cs", label="context.Exception == exception", span="339-339"];
m21_241 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="271-271"];
m21_240 [cluster="lambda expression", file="StateMachine.cs", label="context.Canceled", span="271-271"];
m21_284 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="318-318"];
m21_305 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="339-339"];
m21_321 [cluster="lambda expression", file="StateMachine.cs", label="context.Exception == exception", span="353-353"];
m21_322 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="353-353"];
m21_355 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="382-382"];
m21_354 [cluster="lambda expression", file="StateMachine.cs", label="context.Exception != null", span="382-382"];
m21_158 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="182-182"];
m21_157 [cluster="lambda expression", file="StateMachine.cs", label="x.ExceptionHandled = true", span="182-182"];
m21_215 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="240-240"];
m21_214 [cluster="lambda expression", file="StateMachine.cs", label="x.Canceled = true", span="240-240"];
m21_235 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="263-263"];
m21_234 [cluster="lambda expression", file="StateMachine.cs", label="context.Canceled = true", span="263-263"];
m21_325 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="354-354"];
m21_324 [cluster="lambda expression", file="StateMachine.cs", label="x.ExceptionHandled = true", span="354-354"];
m21_346 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="374-374"];
m21_345 [cluster="lambda expression", file="StateMachine.cs", label="x.ExceptionHandled = true", span="374-374"];
m21_19 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="StateMachine.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m21_20 [cluster="HangFire.Server.WorkerManager.Start()", file="StateMachine.cs", label="Entry HangFire.Server.WorkerManager.Start()", span="46-46"];
m21_369 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="403-403"];
m21_371 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="407-408"];
m21_372 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<ArgumentNullException>()", span="410-412"];
m21_374 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="417-418"];
m21_375 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="420-420"];
m21_370 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="406-406"];
m21_373 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="var process = CreateProcess()", span="414-414"];
m21_376 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="403-403"];
m21_356 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="386-386"];
m21_358 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="390-391"];
m21_360 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="StateMachine.cs", label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="396-397"];
m21_361 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="StateMachine.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="399-399"];
m21_357 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="389-389"];
m21_359 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="StateMachine.cs", label="var process = CreateProcess()", span="393-393"];
m21_362 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="386-386"];
m21_306 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="343-343"];
m21_307 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="346-346"];
m21_309 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="349-351"];
m21_311 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="var process = CreateProcess()", span="356-356"];
m21_312 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="359-359"];
m21_310 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="353-354"];
m21_308 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="var exception = new InvalidOperationException()", span="348-348"];
m21_313 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="343-343"];
m21_148 [cluster="Unk.Callback", file="StateMachine.cs", label="Entry Unk.Callback", span=""];
m21_242 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="275-275"];
m21_249 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="296-296"];
m21_248 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="292-294"];
m21_244 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="280-281"];
m21_246 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="286-287"];
m21_247 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="290-290"];
m21_243 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="var filter = CreateFilter<IServerFilter>()", span="278-278"];
m21_245 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="var process = CreateProcess()", span="283-283"];
m21_250 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="275-275"];
m21_70 [cluster="Unk.Returns", file="StateMachine.cs", label="Entry Unk.Returns", span=""];
m21_12 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m21_56 [cluster="Unk.Verify", file="StateMachine.cs", label="Entry Unk.Verify", span=""];
m21_285 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="322-322"];
m21_292 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="339-339"];
m21_291 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="336-337"];
m21_286 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="325-325"];
m21_287 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="326-326"];
m21_289 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="329-331"];
m21_290 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="var process = CreateProcess()", span="333-333"];
m21_288 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="var exception = new InvalidOperationException()", span="328-328"];
m21_293 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateMachine.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="322-322"];
m21_50 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="StateMachine.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="51-51"];
m21_436 [file="StateMachine.cs", label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", span=""];
m21_440 [file="StateMachine.cs", label=process, span=""];
m21_441 [file="StateMachine.cs", label=process, span=""];
m21_445 [file="StateMachine.cs", label=exception, span=""];
m21_447 [file="StateMachine.cs", label=exception, span=""];
m21_448 [file="StateMachine.cs", label=exception, span=""];
m21_437 [file="StateMachine.cs", label=process, span=""];
m21_438 [file="StateMachine.cs", label=process, span=""];
m21_439 [file="StateMachine.cs", label=process, span=""];
m21_442 [file="StateMachine.cs", label=process, span=""];
m21_443 [file="StateMachine.cs", label=process, span=""];
m21_444 [file="StateMachine.cs", label=process, span=""];
m21_446 [file="StateMachine.cs", label=process, span=""];
m21_449 [file="StateMachine.cs", label=process, span=""];
m21_450 [file="StateMachine.cs", label=process, span=""];
m21_451 [file="StateMachine.cs", label=process, span=""];
m21_452 [file="StateMachine.cs", label=process, span=""];
m21_453 [file="StateMachine.cs", label=process, span=""];
m21_454 [file="StateMachine.cs", label=process, span=""];
m21_455 [file="StateMachine.cs", label=process, span=""];
m22_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateSteps.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m22_0 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", span="23-23"];
m22_1 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", file="StateSteps.cs", label="return UseMsmqQueues(storage, pathPattern, new []{ EnqueuedState.DefaultQueue });", span="25-25"];
m22_2 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", span="23-23"];
m22_12 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.Add(Hangfire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.Add(Hangfire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", span="40-40"];
m22_3 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="StateSteps.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", span="28-28"];
m22_4 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="StateSteps.cs", label="storage == null", span="30-30"];
m22_6 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="StateSteps.cs", label="var provider = new MsmqJobQueueProvider(pathPattern, queues)", span="32-32"];
m22_7 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="StateSteps.cs", label="storage.QueueProviders.Add(provider, queues)", span="33-33"];
m22_8 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="StateSteps.cs", label="return storage;", span="35-35"];
m22_5 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="StateSteps.cs", label="throw new ArgumentNullException(''storage'');", span="30-30"];
m22_9 [cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", file="StateSteps.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", span="28-28"];
m22_11 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", span="26-26"];
m23_0 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30"];
m23_1 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="32-35"];
m23_2 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30"];
m23_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m23_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="8-8"];
m23_5 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m23_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m23_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="9-9"];
m23_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="17-17"];
m23_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="19-19"];
m23_11 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m23_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededState.cs", label="context.Transaction.PersistJob(context.JobId)", prediction=32, span="49-49"];
m23_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m23_4 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m24_35 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m24_36 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="SucceededStateFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49"];
m24_37 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="SucceededStateFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer(_options))", span="50-50"];
m24_38 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m24_11 [cluster="Unk.Setup", file="SucceededStateFacts.cs", label="Entry Unk.Setup", span=""];
m24_86 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m24_87 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="SucceededStateFacts.cs", label="var server = CreateServer()", span="99-99"];
m24_88 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="SucceededStateFacts.cs", label="var runners = server.GetServerComponentsRunner()", span="102-102"];
m24_89 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="SucceededStateFacts.cs", label="Assert.True(runners.Select(x => x.GetType()).Contains(typeof(WorkerManager)))", span="105-105"];
m24_90 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="SucceededStateFacts.cs", label="var componentTypes = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="107-110"];
m24_91 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="SucceededStateFacts.cs", label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="112-112"];
m24_22 [cluster="Unk.Equal", file="SucceededStateFacts.cs", label="Entry Unk.Equal", span=""];
m24_65 [cluster="Unk.Stop", file="SucceededStateFacts.cs", label="Entry Unk.Stop", span=""];
m24_83 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="137-137"];
m24_0 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m24_1 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="SucceededStateFacts.cs", label="_storage = new Mock<JobStorage>()", span="17-17"];
m24_2 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="SucceededStateFacts.cs", label="_options = new BackgroundJobServerOptions()", span="18-18"];
m24_3 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="SucceededStateFacts.cs", label="_runner = new Mock<IServerComponentRunner>()", span="20-20"];
m24_61 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m24_62 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="_serverMock.Object.Stop()", span="71-71"];
m24_63 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="_runner.Verify(x => x.Stop())", span="73-73"];
m24_64 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m24_39 [cluster="Unk.DoesNotThrow", file="SucceededStateFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m24_69 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m24_70 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="SucceededStateFacts.cs", label="_serverMock.Object.Dispose()", span="79-79"];
m24_71 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="SucceededStateFacts.cs", label="_runner.Verify(x => x.Dispose())", span="81-81"];
m24_72 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m24_9 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', ''<UtcNow timestamp>'' },\r\n                },\r\n                data)", span="21-26"];
m24_21 [cluster="Unk.>", file="SucceededStateFacts.cs", label="Entry Unk.>", span=""];
m24_4 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateFacts.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="23-23"];
m24_5 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="SucceededStateFacts.cs", label="_serverMock.Setup(x => x.GetServerRunner()).Returns(_runner.Object)", span="25-25"];
m24_6 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m24_44 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m24_45 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="SucceededStateFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="56-56"];
m24_46 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="SucceededStateFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer())", span="57-57"];
m24_47 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m24_77 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m24_78 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="SucceededStateFacts.cs", label="var server = CreateServer()", span="87-87"];
m24_79 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="SucceededStateFacts.cs", label="var runner = server.GetServerRunner()", span="89-89"];
m24_80 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="SucceededStateFacts.cs", label="Assert.NotNull(runner)", span="91-91"];
m24_81 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="SucceededStateFacts.cs", label="Assert.IsType<ServerCore>(((ServerComponentRunner) runner).Component)", span="92-92"];
m24_82 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m24_100 [cluster="Unk.ToArray", file="SucceededStateFacts.cs", label="Entry Unk.ToArray", span=""];
m24_85 [cluster="Unk.NotNull", file="SucceededStateFacts.cs", label="Entry Unk.NotNull", span=""];
m24_43 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="SucceededStateFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m24_12 [cluster="Unk.Returns", file="SucceededStateFacts.cs", label="Entry Unk.Returns", span=""];
m24_51 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="SucceededStateFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m24_73 [cluster="Unk.Dispose", file="SucceededStateFacts.cs", label="Entry Unk.Dispose", span=""];
m24_34 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="SucceededStateFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m24_10 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m24_52 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m24_53 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="_serverMock.Object.Start()", span="63-63"];
m24_54 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="_runner.Verify(x => x.Start())", span="65-65"];
m24_55 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m24_95 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="SucceededStateFacts.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99"];
m24_99 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SucceededStateFacts.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m24_17 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m24_18 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="SucceededStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32"];
m24_19 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="SucceededStateFacts.cs", label="Assert.Equal(''options'', exception.ParamName)", span="34-34"];
m24_20 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m24_101 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="105-105"];
m24_13 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m24_14 [cluster="lambda expression", file="SucceededStateFacts.cs", label="x.GetServerRunner()", span="25-25"];
m24_15 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="25-25"];
m24_23 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="32-32"];
m24_24 [cluster="lambda expression", file="SucceededStateFacts.cs", label="new BackgroundJobServer(null, _storage.Object)", span="32-32"];
m24_25 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="32-32"];
m24_31 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="41-41"];
m24_32 [cluster="lambda expression", file="SucceededStateFacts.cs", label="new BackgroundJobServer(_options, null)", span="41-41"];
m24_33 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="41-41"];
m24_40 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="50-50"];
m24_41 [cluster="lambda expression", file="SucceededStateFacts.cs", label="new BackgroundJobServer(_options)", span="50-50"];
m24_42 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="50-50"];
m24_48 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="57-57"];
m24_49 [cluster="lambda expression", file="SucceededStateFacts.cs", label="new BackgroundJobServer()", span="57-57"];
m24_50 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="57-57"];
m24_58 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="65-65"];
m24_59 [cluster="lambda expression", file="SucceededStateFacts.cs", label="x.Start()", span="65-65"];
m24_60 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="65-65"];
m24_66 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="73-73"];
m24_67 [cluster="lambda expression", file="SucceededStateFacts.cs", label="x.Stop()", span="73-73"];
m24_68 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="73-73"];
m24_74 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Entry lambda expression", span="81-81"];
m24_75 [cluster="lambda expression", file="SucceededStateFacts.cs", label="x.Dispose()", span="81-81"];
m24_76 [cluster="lambda expression", file="SucceededStateFacts.cs", label="Exit lambda expression", span="81-81"];
m24_97 [cluster="Unk.Contains", file="SucceededStateFacts.cs", label="Entry Unk.Contains", span=""];
m24_16 [cluster="Unk.GetServerRunner", file="SucceededStateFacts.cs", label="Entry Unk.GetServerRunner", span=""];
m24_56 [cluster="Unk.Start", file="SucceededStateFacts.cs", label="Entry Unk.Start", span=""];
m24_96 [cluster="Unk.Select", file="SucceededStateFacts.cs", label="Entry Unk.Select", span=""];
m24_8 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededStateFacts.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", prediction=33, span="11-11"];
m24_7 [cluster="Mock<JobStorage>.cstr", file="SucceededStateFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m24_27 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m24_28 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SucceededStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41"];
m24_29 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SucceededStateFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m24_30 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m24_98 [cluster="Unk.True", file="SucceededStateFacts.cs", label="Entry Unk.True", span=""];
m24_84 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="SucceededStateFacts.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77"];
m24_26 [cluster="BackgroundJobServer.cstr", file="SucceededStateFacts.cs", label="Entry BackgroundJobServer.cstr", span=""];
m24_57 [cluster="Unk.Verify", file="SucceededStateFacts.cs", label="Entry Unk.Verify", span=""];
m24_130 [file="SucceededStateFacts.cs", label="HangFire.Core.Tests.BackgroundJobServerFacts", span=""];
m25_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="29-29"];
m25_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="30-30"];
m25_6 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m25_7 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededStateHandler.cs", label="context.Transaction.RemoveFromList(''succeeded'', context.JobId)", prediction=34, span="15-15"];
m25_8 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m25_0 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m25_3 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m25_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28"];
m26_57 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m26_58 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="SucceededStateHandlerFacts.cs", label="var writer = new StringWriter()", span="117-117"];
m26_59 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="SucceededStateHandlerFacts.cs", label="MarkupStackTrace(stackTrace, writer)", span="119-119"];
m26_60 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="SucceededStateHandlerFacts.cs", label="return new HtmlString(writer.ToString());", span="120-120"];
m26_61 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m26_117 [cluster="string.Trim()", file="SucceededStateHandlerFacts.cs", label="Entry string.Trim()", span="0-0"];
m26_114 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="228-228"];
m26_120 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(text != null)", span="230-230"];
m26_121 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(group != null)", span="231-231"];
m26_122 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(writer != null)", span="232-232"];
m26_123 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="return group.Success\r\n                 ? StackFrameSpan(text, anchor, klass, group.Value, group.Index, group.Length, writer)\r\n                 : anchor;", span="234-236"];
m26_124 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="228-228"];
m26_6 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.WriteResponse(IOwinResponse)", color=green, community=0, file="SucceededStateHandlerFacts.cs", label=_resourceNames, prediction=35, span="25-25"];
m26_63 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="145-145"];
m26_65 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(text != null)", span="147-147"];
m26_66 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(writer != null)", span="148-148"];
m26_68 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="_reStackTrace.Matches(text)", span="152-152"];
m26_69 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="HtmlEncode(text.Substring(anchor, match.Index - anchor), writer)", span="154-154"];
m26_70 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="MarkupStackFrame(text, match, writer)", span="155-155"];
m26_72 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="HtmlEncode(text.Substring(anchor), writer)", span="159-159"];
m26_67 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="int anchor = 0", span="150-150"];
m26_71 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="anchor = match.Index + match.Length", span="156-156"];
m26_73 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="145-145"];
m26_37 [cluster="System.Text.StringBuilder.Append(string)", file="SucceededStateHandlerFacts.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m26_76 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="260-260"];
m26_139 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(writer != null)", span="262-262"];
m26_140 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="HttpUtility.HtmlEncode(text, writer)", span="263-263"];
m26_141 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="260-260"];
m26_142 [cluster="Unk.HtmlEncode", file="SucceededStateHandlerFacts.cs", label="Entry Unk.HtmlEncode", span=""];
m26_46 [cluster="Unk.Join", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Join", span=""];
m26_0 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m26_1 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SucceededStateHandlerFacts.cs", label="job == null", span="32-32"];
m26_2 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SucceededStateHandlerFacts.cs", label="return new HtmlString(''<em>Can not find the target method.</em>'');", span="34-34"];
m26_3 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SucceededStateHandlerFacts.cs", label="return new HtmlString(String.Format(''{0}.{1}'', job.Type.Name, job.Method.Name));", span="37-37"];
m26_4 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m26_36 [cluster="System.Text.StringBuilder.StringBuilder()", file="SucceededStateHandlerFacts.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m26_5 [cluster="HtmlString.cstr", file="SucceededStateHandlerFacts.cs", label="Entry HtmlString.cstr", span=""];
m26_7 [cluster="HangFire.Web.HtmlHelper.Raw(string)", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", prediction=35, span="40-40"];
m26_8 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="SucceededStateHandlerFacts.cs", label="return new HtmlString(value);", span="42-42"];
m26_119 [cluster="System.IO.TextWriter.Write(char)", file="SucceededStateHandlerFacts.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m26_41 [cluster="System.Text.StringBuilder.ToString()", file="SucceededStateHandlerFacts.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m26_125 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="239-239"];
m26_126 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(text != null)", span="241-241"];
m26_127 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(writer != null)", span="242-242"];
m26_128 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="HtmlEncode(text.Substring(anchor, index - anchor), writer)", span="244-244"];
m26_129 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Span(writer, klass, value)", span="245-245"];
m26_130 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="return index + length;", span="246-246"];
m26_131 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="239-239"];
m26_74 [cluster="System.Diagnostics.Debug.Assert(bool)", file="SucceededStateHandlerFacts.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m26_39 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="SucceededStateHandlerFacts.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m26_15 [cluster="string.Substring(int, int)", file="SucceededStateHandlerFacts.cs", label="Entry string.Substring(int, int)", span="0-0"];
m26_16 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m26_17 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="duration == null", span="55-55"];
m26_20 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label=displaySign, span="58-58"];
m26_21 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="60-60"];
m26_22 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="duration = duration.Value.Duration()", span="63-63"];
m26_18 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="return null;", span="55-55"];
m26_24 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.AppendFormat(''{0}d '', duration.Value.Days)", span="67-67"];
m26_26 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.AppendFormat(''{0}h '', duration.Value.Hours)", span="72-72"];
m26_28 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.AppendFormat(''{0}m '', duration.Value.Minutes)", span="77-77"];
m26_30 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.AppendFormat(''{0}s '', duration.Value.Seconds)", span="82-82"];
m26_31 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.Length <= 1", span="85-85"];
m26_32 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.Append('' <1s '')", span="87-87"];
m26_33 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="builder.Remove(builder.Length - 1, 1)", span="90-90"];
m26_34 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="return builder.ToString();", span="92-92"];
m26_23 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="duration.Value.Days > 0", span="65-65"];
m26_25 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="duration.Value.Hours > 0", span="70-70"];
m26_27 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="duration.Value.Minutes > 0", span="75-75"];
m26_29 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="duration.Value.Seconds > 0", span="80-80"];
m26_35 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m26_75 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="SucceededStateHandlerFacts.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m26_50 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="100-100"];
m26_51 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededStateHandlerFacts.cs", label="string label", span="102-102"];
m26_52 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededStateHandlerFacts.cs", label="queue != null", span="103-103"];
m26_53 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededStateHandlerFacts.cs", label="label = ''<span class=\''label label-queue label-primary\''>'' + queue + ''</span>''", span="105-105"];
m26_54 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededStateHandlerFacts.cs", label="label = ''<span class=\''label label-queue label-danger\''><i>Unknown</i></span>''", span="109-109"];
m26_55 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededStateHandlerFacts.cs", label="return new HtmlString(label);", span="112-112"];
m26_56 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.QueueLabel(string)", span="100-100"];
m26_14 [cluster="System.Guid.TryParse(string, out System.Guid)", file="SucceededStateHandlerFacts.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m26_9 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m26_42 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="95-95"];
m26_43 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandlerFacts.cs", label="return @String.Join('', '', properties.Select(x => String.Format(''{0}: \''{1}\'''', x.Key, x.Value)));", span="97-97"];
m26_44 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="95-95"];
m26_38 [cluster="System.TimeSpan.Duration()", file="SucceededStateHandlerFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m26_47 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="97-97"];
m26_48 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="String.Format(''{0}: \''{1}\'''', x.Key, x.Value)", span="97-97"];
m26_49 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="97-97"];
m26_10 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m26_64 [cluster="System.IO.StringWriter.ToString()", file="SucceededStateHandlerFacts.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m26_11 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SucceededStateHandlerFacts.cs", label="HangFire.Dashboard.CombinedResourceDispatcher", span=""];
m26_13 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m26_45 [cluster="Unk.Select", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Select", span=""];
m26_115 [cluster="string.Split(params char[])", file="SucceededStateHandlerFacts.cs", label="Entry string.Split(params char[])", span="0-0"];
m26_62 [cluster="System.IO.StringWriter.StringWriter()", file="SucceededStateHandlerFacts.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m26_116 [cluster="string.LastIndexOf(char)", file="SucceededStateHandlerFacts.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m26_77 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="162-162"];
m26_79 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(text != null)", span="164-164"];
m26_80 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(match != null)", span="165-165"];
m26_81 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(writer != null)", span="166-166"];
m26_82 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="int anchor = match.Index", span="168-168"];
m26_83 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="GroupCollection groups = match.Groups", span="169-169"];
m26_85 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="HtmlEncode(text.Substring(anchor, type.Index - anchor), writer)", span="176-176"];
m26_87 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="writer.Write(''<span class='st-frame'>'')", span="178-178"];
m26_88 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="anchor = StackFrameSpan(text, anchor, ''st-type'', type, writer)", span="179-179"];
m26_89 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="anchor = StackFrameSpan(text, anchor, ''st-method'', groups[''method''], writer)", span="180-180"];
m26_91 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="HtmlEncode(text.Substring(anchor, parameters.Index - anchor), writer)", span="187-187"];
m26_92 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="writer.Write(''<span class='st-params'>('')", span="188-188"];
m26_97 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Span(writer, ''st-param'', parameter.Trim())", span="195-195"];
m26_99 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="writer.Write('', '')", span="200-200"];
m26_101 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Span(writer, ''st-param-type'', argType)", span="202-202"];
m26_102 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="writer.Write(' ')", span="203-203"];
m26_104 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Span(writer, ''st-param-name'', argName)", span="205-205"];
m26_105 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="writer.Write('')</span>'')", span="208-208"];
m26_107 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="anchor = StackFrameSpan(text, anchor, ''st-file'', groups[''file''], writer)", span="215-215"];
m26_108 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="anchor = StackFrameSpan(text, anchor, ''st-line'', groups[''line''], writer)", span="216-216"];
m26_109 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="writer.Write(''</span>'')", span="218-218"];
m26_110 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="int end = match.Index + match.Length", span="224-224"];
m26_111 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="HtmlEncode(text.Substring(anchor, end - anchor), writer)", span="225-225"];
m26_84 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Group type = groups[''type'']", span="175-175"];
m26_90 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Group parameters = groups[''params'']", span="186-186"];
m26_86 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="anchor = type.Index", span="177-177"];
m26_94 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="parameters.Captures[0].Value.Split(',')", span="190-190"];
m26_106 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="anchor = parameters.Index + parameters.Length", span="209-209"];
m26_93 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="int position = 0", span="189-189"];
m26_98 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="position++ > 0", span="199-199"];
m26_95 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="int spaceIndex = parameter.LastIndexOf(' ')", span="192-192"];
m26_100 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="string argType = parameter.Substring(0, spaceIndex).Trim()", span="201-201"];
m26_103 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="string argName = parameter.Substring(spaceIndex + 1).Trim()", span="204-204"];
m26_96 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="spaceIndex <= 0", span="193-193"];
m26_112 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="162-162"];
m26_40 [cluster="System.Text.StringBuilder.Remove(int, int)", file="SucceededStateHandlerFacts.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m26_113 [cluster="System.IO.TextWriter.Write(string)", file="SucceededStateHandlerFacts.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m26_118 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="249-249"];
m26_132 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="Debug.Assert(writer != null)", span="251-251"];
m26_133 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="writer.Write(''<span class=''')", span="253-253"];
m26_134 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="writer.Write(klass)", span="254-254"];
m26_135 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="writer.Write('''>'')", span="255-255"];
m26_136 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="HtmlEncode(value, writer)", span="256-256"];
m26_137 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="writer.Write(''</span>'')", span="257-257"];
m26_138 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="249-249"];
m26_78 [cluster="string.Substring(int)", file="SucceededStateHandlerFacts.cs", label="Entry string.Substring(int)", span="0-0"];
m27_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TestStateChangedFilter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m27_49 [cluster="System.Collections.Generic.List<T>.List()", file="TestStateChangedFilter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m27_52 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="128-128"];
m27_69 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="TestStateChangedFilter.cs", label="var components = _storage.GetComponents()", span="130-130"];
m27_70 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="TestStateChangedFilter.cs", label="return components\r\n                .Select(component => new ServerComponentRunner(component))\r\n                .ToArray();", span="132-134"];
m27_71 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="128-128"];
m27_17 [cluster="string.Format(string, object, object)", file="TestStateChangedFilter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m27_23 [cluster="Unk.Info", file="TestStateChangedFilter.cs", label="Entry Unk.Info", span=""];
m27_72 [cluster="HangFire.JobStorage.GetComponents()", file="TestStateChangedFilter.cs", label="Entry HangFire.JobStorage.GetComponents()", span="57-57"];
m27_40 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="TestStateChangedFilter.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m27_16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="TestStateChangedFilter.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m27_24 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m27_74 [cluster="Unk.ToArray", file="TestStateChangedFilter.cs", label="Entry Unk.ToArray", span=""];
m27_50 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="109-109"];
m27_54 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="var stateMachineFactory = new StateMachineFactory(_storage)", span="111-111"];
m27_56 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="yield return new WorkerManager(sharedWorkerContext, _options.WorkerCount);", span="120-120"];
m27_57 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="yield return new ServerComponentRunner(new ServerHeartbeat(_storage, _serverId));", span="121-121"];
m27_58 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="yield return new ServerComponentRunner(new ServerWatchdog(_storage));", span="122-122"];
m27_59 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="yield return new ServerComponentRunner(\r\n                new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval));", span="124-125"];
m27_55 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="112-118"];
m27_60 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="109-109"];
m27_66 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m27_28 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m27_2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m27_3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m27_63 [cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28"];
m27_0 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m27_1 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m27_4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m27_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="options == null", span="48-48"];
m27_7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="storage == null", span="49-49"];
m27_9 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="_options = options", span="51-51"];
m27_10 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="_storage = storage", span="52-52"];
m27_6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="throw new ArgumentNullException(''options'');", span="48-48"];
m27_8 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="throw new ArgumentNullException(''storage'');", span="49-49"];
m27_11 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="54-54"];
m27_12 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="_serverRunner = GetServerRunner()", span="57-57"];
m27_13 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m27_25 [cluster="HangFire.BackgroundJobServer.Stop()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="66-66"];
m27_26 [cluster="HangFire.BackgroundJobServer.Stop()", file="TestStateChangedFilter.cs", label="_serverRunner.Stop()", span="68-68"];
m27_27 [cluster="HangFire.BackgroundJobServer.Stop()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="66-66"];
m27_38 [cluster="HangFire.Server.ServerContext.ServerContext()", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18"];
m27_41 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m27_43 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99"];
m27_44 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="TestStateChangedFilter.cs", label="var componentRunners = new List<IServerComponentRunner>()", span="101-101"];
m27_45 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="TestStateChangedFilter.cs", label="componentRunners.AddRange(GetCommonComponentRunners())", span="103-103"];
m27_46 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="TestStateChangedFilter.cs", label="componentRunners.AddRange(GetStorageComponentRunners())", span="104-104"];
m27_47 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="TestStateChangedFilter.cs", label="return new ServerComponentRunnerCollection(componentRunners);", span="106-106"];
m27_48 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99"];
m27_15 [cluster="string.ToLowerInvariant()", file="TestStateChangedFilter.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m27_75 [cluster="lambda expression", file="TestStateChangedFilter.cs", label="Entry lambda expression", span="133-133"];
m27_76 [cluster="lambda expression", file="TestStateChangedFilter.cs", label="new ServerComponentRunner(component)", span="133-133"];
m27_77 [cluster="lambda expression", file="TestStateChangedFilter.cs", label="Exit lambda expression", span="133-133"];
m27_53 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m27_51 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="TestStateChangedFilter.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m27_68 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m27_73 [cluster="Unk.Select", file="TestStateChangedFilter.cs", label="Entry Unk.Select", span=""];
m27_19 [cluster="HangFire.BackgroundJobServer.Start()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="60-60"];
m27_20 [cluster="HangFire.BackgroundJobServer.Start()", file="TestStateChangedFilter.cs", label="Logger.Info(''Starting HangFire Server...'')", span="62-62"];
m27_21 [cluster="HangFire.BackgroundJobServer.Start()", file="TestStateChangedFilter.cs", label="_serverRunner.Start()", span="63-63"];
m27_22 [cluster="HangFire.BackgroundJobServer.Start()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="60-60"];
m27_18 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77"];
m27_34 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="TestStateChangedFilter.cs", label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="79-83"];
m27_35 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="TestStateChangedFilter.cs", label="var server = new ServerCore(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerComponentRunner>(GetServerComponentsRunner))", span="85-89"];
m27_36 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="TestStateChangedFilter.cs", label="return new ServerComponentRunner(\r\n                server, \r\n                new ServerComponentRunnerOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="91-96"];
m27_37 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="77-77"];
m27_42 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m27_29 [cluster="HangFire.BackgroundJobServer.Dispose()", file="TestStateChangedFilter.cs", label="Entry HangFire.BackgroundJobServer.Dispose()", span="71-71"];
m27_30 [cluster="HangFire.BackgroundJobServer.Dispose()", file="TestStateChangedFilter.cs", label="_serverRunner.Dispose()", span="73-73"];
m27_31 [cluster="HangFire.BackgroundJobServer.Dispose()", file="TestStateChangedFilter.cs", label="Logger.Info(''HangFire Server stopped.'')", span="74-74"];
m27_32 [cluster="HangFire.BackgroundJobServer.Dispose()", file="TestStateChangedFilter.cs", label="Exit HangFire.BackgroundJobServer.Dispose()", span="71-71"];
m27_62 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23"];
m27_64 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="28-28"];
m27_33 [cluster="System.IDisposable.Dispose()", file="TestStateChangedFilter.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m27_65 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m27_67 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
m27_61 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="TestStateChangedFilter.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m27_39 [cluster="HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", file="TestStateChangedFilter.cs", label="Entry HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", span="31-31"];
m27_78 [file="TestStateChangedFilter.cs", label="HangFire.BackgroundJobServer", span=""];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_4 -> m6_6  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_11  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_4 -> m6_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_28 -> m6_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_30 -> m6_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_30 -> m6_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_33 -> m6_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_39 -> m6_42  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_39 -> m6_45  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_39 -> m6_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_76 -> m6_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_100 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m6_100 -> m6_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m8_37 -> m8_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_63 -> m8_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_71 -> m8_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_114 -> m8_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_113 -> m8_118  [color=darkseagreen4, key=1, label=storageComponent, style=dashed];
m8_117 -> m8_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_5 -> m8_13  [color=green, key=1, label="lambda expression", style=dashed];
m8_46 -> m8_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_79 -> m8_81  [color=darkseagreen4, key=1, label=runner, style=dashed];
m8_54 -> m8_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_18 -> m8_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_28 -> m8_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_89 -> m8_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_90 -> m8_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_90 -> m8_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_90 -> m8_92  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m8_90 -> m8_93  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m8_130 -> m8_5  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_71  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m8_130 -> m8_128  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m10_12 -> m10_8  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m12_84 -> m12_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_23 -> m12_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_387 -> m12_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_388 -> m12_391  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_389 -> m12_397  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_391 -> m12_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_390 -> m12_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_43 -> m12_48  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_44 -> m12_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_181 -> m12_183  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_181 -> m12_186  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_182 -> m12_184  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_182 -> m12_185  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m12_183 -> m12_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_186 -> m12_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_184 -> m12_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_185 -> m12_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_4 -> m12_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_120 -> m12_123  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m12_123 -> m12_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_122 -> m12_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_124 -> m12_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_125 -> m12_139  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_126 -> m12_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_308 -> m12_318  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_308 -> m12_321  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_310 -> m12_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_310 -> m12_323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_309 -> m12_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_311 -> m12_327  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_312 -> m12_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_404 -> m12_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_405 -> m12_412  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_406 -> m12_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_430 -> m12_432  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_416 -> m12_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_417 -> m12_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_418 -> m12_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_54 -> m12_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_103 -> m12_107  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_104 -> m12_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_107 -> m12_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_105 -> m12_113  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_106 -> m12_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_163 -> m12_166  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_164 -> m12_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_166 -> m12_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_165 -> m12_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_264 -> m12_269  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_265 -> m12_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_265 -> m12_280  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_265 -> m12_283  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_269 -> m12_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_266 -> m12_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_267 -> m12_277  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_268 -> m12_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_142 -> m12_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_144 -> m12_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_144 -> m12_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_145 -> m12_160  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_146 -> m12_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_92 -> m12_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_93 -> m12_100  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_94 -> m12_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_62 -> m12_66  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_63 -> m12_65  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_66 -> m12_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_64 -> m12_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_330 -> m12_336  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_336 -> m12_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_332 -> m12_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_333 -> m12_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_333 -> m12_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_334 -> m12_348  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_335 -> m12_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_223 -> m12_228  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_228 -> m12_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_225 -> m12_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_225 -> m12_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_33 -> m12_39  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_34 -> m12_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_203 -> m12_208  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_204 -> m12_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_204 -> m12_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_208 -> m12_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_207 -> m12_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_75 -> m12_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_237 -> m12_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_280 -> m12_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_301 -> m12_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_318 -> m12_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_351 -> m12_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_358 -> m12_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_359 -> m12_367  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_360 -> m12_366  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_371 -> m12_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_372 -> m12_380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_373 -> m12_384  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_374 -> m12_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_243 -> m12_249  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_244 -> m12_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_249 -> m12_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_245 -> m12_255  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_246 -> m12_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_248 -> m12_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_286 -> m12_292  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m12_292 -> m12_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_288 -> m12_292  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_288 -> m12_301  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_288 -> m12_304  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_289 -> m12_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_290 -> m12_298  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_291 -> m12_297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_436 -> m12_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_48  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_142  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_146  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_168  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_206  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_207  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_227  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_255  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_266  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_268  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_277  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_289  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_291  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_298  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_309  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_312  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_327  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_332  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_335  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_348  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_367  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_372  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_384  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_387  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_390  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_397  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_406  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_412  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_418  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_424  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_427  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_436 -> m12_431  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m12_437 -> m12_39  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_438 -> m12_48  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_439 -> m12_100  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_440 -> m12_113  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_441 -> m12_139  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_442 -> m12_160  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_443 -> m12_255  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_444 -> m12_277  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_445 -> m12_280  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_445 -> m12_283  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_446 -> m12_298  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_447 -> m12_301  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_447 -> m12_304  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_448 -> m12_318  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_448 -> m12_321  [color=darkseagreen4, key=1, label=exception, style=dashed];
m12_449 -> m12_327  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_450 -> m12_348  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_451 -> m12_367  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_452 -> m12_384  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_453 -> m12_397  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_454 -> m12_412  [color=darkseagreen4, key=1, label=process, style=dashed];
m12_455 -> m12_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m13_5 -> m13_11  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m13_5 -> m13_13  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m13_5 -> m13_15  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m13_6 -> m13_11  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m13_6 -> m13_13  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m13_6 -> m13_15  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m13_9 -> m13_11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m13_9 -> m13_12  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m13_28 -> m13_41  [color=darkseagreen4, key=1, label=long, style=dashed];
m13_18 -> m13_23  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m13_18 -> m13_26  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m13_22 -> m13_26  [color=darkseagreen4, key=1, label=delay, style=dashed];
m13_19 -> m13_37  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m13_47 -> m13_10  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_11  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_12  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_13  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_14  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_25  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_26  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_36  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m13_47 -> m13_37  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m15_8 -> m15_11  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_96 -> m18_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_97 -> m18_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_83 -> m18_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_83 -> m18_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_84 -> m18_88  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m18_85 -> m18_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_63 -> m18_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_110 -> m18_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_75 -> m18_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_69 -> m18_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_91 -> m18_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_22 -> m18_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_103 -> m18_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_9 -> m18_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m18_136 -> m18_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_120 -> m18_123  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_130 -> m18_133  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_125 -> m18_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_126 -> m18_133  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m18_128 -> m18_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_127 -> m18_133  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m18_115 -> m18_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_116 -> m18_123  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m18_118 -> m18_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_117 -> m18_123  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m18_51 -> m18_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_57 -> m18_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_31 -> m18_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_144 -> m18_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m18_144 -> m18_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m18_144 -> m18_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m18_144 -> m18_81  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m18_144 -> m18_85  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m18_144 -> m18_97  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m18_144 -> m18_141  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m18_162 -> m18_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_163 -> m18_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_164 -> m18_88  [color=darkseagreen4, key=1, label=double, style=dashed];
m18_165 -> m18_88  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m18_168 -> m18_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_169 -> m18_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_175 -> m18_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_176 -> m18_123  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m18_177 -> m18_123  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m18_178 -> m18_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_179 -> m18_133  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m18_180 -> m18_133  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m21_10 -> m21_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_84 -> m21_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_23 -> m21_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_391 -> m21_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_387 -> m21_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_390 -> m21_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_388 -> m21_391  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_389 -> m21_397  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_44 -> m21_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_43 -> m21_48  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_181 -> m21_183  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m21_181 -> m21_186  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m21_182 -> m21_184  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m21_182 -> m21_185  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m21_183 -> m21_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_186 -> m21_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_184 -> m21_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_185 -> m21_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_122 -> m21_129  [color=green, key=1, label="lambda expression", style=dashed];
m21_123 -> m21_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_124 -> m21_135  [color=green, key=1, label="lambda expression", style=dashed];
m21_125 -> m21_139  [color=green, key=1, label=process, style=dashed];
m21_126 -> m21_138  [color=green, key=1, label="lambda expression", style=dashed];
m21_120 -> m21_123  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m21_0 -> m21_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_0 -> m21_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_5 -> m21_9  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m21_6 -> m21_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_4 -> m21_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_404 -> m21_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_406 -> m21_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_405 -> m21_412  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_430 -> m21_432  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_103 -> m21_107  [color=green, key=1, label=filter, style=dashed];
m21_104 -> m21_109  [color=green, key=1, label="lambda expression", style=dashed];
m21_107 -> m21_115  [color=green, key=1, label="lambda expression", style=dashed];
m21_105 -> m21_113  [color=green, key=1, label=process, style=dashed];
m21_106 -> m21_112  [color=green, key=1, label="lambda expression", style=dashed];
m21_54 -> m21_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_416 -> m21_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_418 -> m21_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_417 -> m21_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_163 -> m21_166  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_165 -> m21_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_164 -> m21_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_166 -> m21_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_269 -> m21_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_268 -> m21_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_264 -> m21_269  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_266 -> m21_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_267 -> m21_277  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_265 -> m21_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_265 -> m21_280  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_265 -> m21_283  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_142 -> m21_150  [color=green, key=1, label="lambda expression", style=dashed];
m21_145 -> m21_160  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_146 -> m21_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_144 -> m21_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_144 -> m21_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_92 -> m21_96  [color=green, key=1, label="lambda expression", style=dashed];
m21_93 -> m21_100  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_94 -> m21_99  [color=green, key=1, label="lambda expression", style=dashed];
m21_66 -> m21_74  [color=green, key=1, label="lambda expression", style=dashed];
m21_62 -> m21_66  [color=green, key=1, label=filter, style=dashed];
m21_63 -> m21_65  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_64 -> m21_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_336 -> m21_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_332 -> m21_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_330 -> m21_336  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m21_334 -> m21_348  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_335 -> m21_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_333 -> m21_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_333 -> m21_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_228 -> m21_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_223 -> m21_228  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m21_225 -> m21_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_225 -> m21_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_33 -> m21_39  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_34 -> m21_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_36 -> m21_9  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m21_36 -> m21_21  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m21_36 -> m21_25  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m21_36 -> m21_29  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m21_208 -> m21_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_207 -> m21_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_203 -> m21_208  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_204 -> m21_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_204 -> m21_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_75 -> m21_78  [color=green, key=1, label="lambda expression", style=dashed];
m21_237 -> m21_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_280 -> m21_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_301 -> m21_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_318 -> m21_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_351 -> m21_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_371 -> m21_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_372 -> m21_380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_374 -> m21_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_373 -> m21_384  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_358 -> m21_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_360 -> m21_366  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_359 -> m21_367  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_309 -> m21_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_311 -> m21_327  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_312 -> m21_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_310 -> m21_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_310 -> m21_323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_308 -> m21_318  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_308 -> m21_321  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_249 -> m21_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_248 -> m21_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_244 -> m21_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_246 -> m21_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_243 -> m21_249  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_245 -> m21_255  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_292 -> m21_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_291 -> m21_297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_286 -> m21_292  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m21_289 -> m21_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_290 -> m21_298  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_288 -> m21_292  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_288 -> m21_301  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_288 -> m21_304  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_436 -> m21_92  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_94  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_104  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_106  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_113  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_124  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_126  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_139  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_142  [color=green, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_48  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_146  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_168  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_206  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_207  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_227  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_255  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_266  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_268  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_277  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_289  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_291  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_298  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_309  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_312  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_327  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_332  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_335  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_348  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_367  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_372  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_384  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_387  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_390  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_397  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_406  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_412  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_418  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_424  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_427  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_436 -> m21_431  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m21_440 -> m21_113  [color=green, key=1, label=process, style=dashed];
m21_441 -> m21_139  [color=green, key=1, label=process, style=dashed];
m21_445 -> m21_280  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_445 -> m21_283  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_447 -> m21_301  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_447 -> m21_304  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_448 -> m21_318  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_448 -> m21_321  [color=darkseagreen4, key=1, label=exception, style=dashed];
m21_437 -> m21_39  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_438 -> m21_48  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_439 -> m21_100  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_442 -> m21_160  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_443 -> m21_255  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_444 -> m21_277  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_446 -> m21_298  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_449 -> m21_327  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_450 -> m21_348  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_451 -> m21_367  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_452 -> m21_384  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_453 -> m21_397  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_454 -> m21_412  [color=darkseagreen4, key=1, label=process, style=dashed];
m21_455 -> m21_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m22_3 -> m22_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m22_3 -> m22_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m23_11 -> m23_13  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m26_57 -> m26_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_58 -> m26_60  [color=darkseagreen4, key=1, label=writer, style=dashed];
m26_114 -> m26_121  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Group", style=dashed];
m26_114 -> m26_122  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_114 -> m26_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_66  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_63 -> m26_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_68 -> m26_70  [color=darkseagreen4, key=1, label=match, style=dashed];
m26_67 -> m26_69  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m26_67 -> m26_72  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m26_71 -> m26_72  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m26_76 -> m26_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_0 -> m26_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_0 -> m26_3  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m26_5 -> m26_7  [color=green, key=1, label=IOwinResponse, style=dashed];
m26_125 -> m26_127  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_125 -> m26_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_125 -> m26_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_125 -> m26_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_16 -> m26_20  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_16 -> m26_21  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_22 -> m26_24  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_22 -> m26_25  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_22 -> m26_26  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_22 -> m26_27  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_22 -> m26_28  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_22 -> m26_29  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_22 -> m26_30  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m26_50 -> m26_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_43 -> m26_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_48 -> m26_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m26_11 -> m26_6  [color=green, key=1, label="HangFire.Dashboard.CombinedResourceDispatcher", style=dashed];
m26_11 -> m26_7  [color=green, key=1, label="HangFire.Dashboard.CombinedResourceDispatcher", style=dashed];
m26_11 -> m26_1  [color=darkseagreen4, key=1, label="HangFire.Dashboard.CombinedResourceDispatcher", style=dashed];
m26_11 -> m26_2  [color=darkseagreen4, key=1, label="HangFire.Dashboard.CombinedResourceDispatcher", style=dashed];
m26_11 -> m26_3  [color=darkseagreen4, key=1, label="HangFire.Dashboard.CombinedResourceDispatcher", style=dashed];
m26_77 -> m26_80  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m26_77 -> m26_81  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_77 -> m26_87  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_77 -> m26_92  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_97  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_99  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_101  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_102  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_104  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_105  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_109  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_77 -> m26_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_82 -> m26_85  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m26_89 -> m26_91  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m26_108 -> m26_111  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m26_90 -> m26_94  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m26_94 -> m26_97  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m26_93 -> m26_98  [color=darkseagreen4, key=1, label=position, style=dashed];
m26_98 -> m26_98  [color=darkseagreen4, key=1, label=position, style=dashed];
m26_118 -> m26_133  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_118 -> m26_134  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_118 -> m26_135  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_118 -> m26_136  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m26_118 -> m26_137  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m27_70 -> m27_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_54 -> m27_59  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m27_4 -> m27_7  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m27_44 -> m27_46  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m27_44 -> m27_47  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m27_78 -> m27_21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_26  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_30  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_45  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_46  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_56  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_57  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_58  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m27_78 -> m27_59  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
}
