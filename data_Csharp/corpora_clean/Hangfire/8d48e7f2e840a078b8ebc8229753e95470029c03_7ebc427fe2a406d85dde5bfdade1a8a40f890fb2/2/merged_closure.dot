digraph  {
m0_11 [cluster="System.TimeSpan.FromSeconds(double)", file="Client.feature.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m0_12 [cluster="System.TimeSpan.FromMinutes(double)", file="Client.feature.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m0_13 [cluster="System.TimeSpan.FromHours(double)", file="Client.feature.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Client.feature.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="26-26"];
m0_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="TransactionIsolationLevel = null", prediction=0, span="28-28"];
m0_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", prediction=1, span="29-29"];
m0_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", prediction=2, span="30-30"];
m0_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", prediction=3, span="31-31"];
m0_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", prediction=4, span="32-32"];
m0_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="PrepareSchemaIfNecessary = true", prediction=5, span="33-33"];
m0_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="DashboardJobListLimit = 50000", prediction=6, span="34-34"];
m0_8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="_schema = Constants.DefaultSchema", prediction=7, span="35-35"];
m0_9 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs", label="TransactionTimeout = TimeSpan.FromMinutes(1)", prediction=8, span="36-36"];
m0_10 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Client.feature.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="26-26"];
m0_14 [file="Client.feature.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m2_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ClientJobDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_17 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m2_14 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ClientJobDescriptor.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m2_16 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57"];
m2_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25"];
m2_5 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs", label="properties == null", span="33-33"];
m2_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=green, community=0, file="ClientJobDescriptor.cs", label="Storage = storage", prediction=9, span="36-36"];
m2_10 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=green, community=0, file="ClientJobDescriptor.cs", label="CancellationToken = cancellationToken", prediction=10, span="38-38"];
m2_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''properties'');", span="33-33"];
m2_11 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25"];
m2_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m2_18 [file="ClientJobDescriptor.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m4_63 [cluster="System.Collections.Generic.List<T>.List()", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_362 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="DequeuedJobsWatcher.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m4_81 [cluster="long.Parse(string)", file="DequeuedJobsWatcher.cs", label="Entry long.Parse(string)", span="0-0"];
m4_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m4_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="DequeuedJobsWatcher.cs", label="ServerName = serverName", span="29-29"];
m4_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m4_3 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m4_137 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="544-544"];
m4_366 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs", label="return UseConnection<JobList<FetchedJobDto>>(connection =>\r\n            {\r\n\r\n                const string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null'';\r\n\r\n                var jobs = connection.Query<SqlJob>(\r\n                    fetchedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList();\r\n\r\n                var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count);\r\n\r\n                foreach (var job in jobs)\r\n                {\r\n                    result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                        job.Id.ToString(),\r\n                        new FetchedJobDto\r\n                        {\r\n                            Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                            State = job.StateName,\r\n                            FetchedAt = job.FetchedAt\r\n                        }));\r\n                }\r\n\r\n                return new JobList<FetchedJobDto>(result);\r\n            });", span="546-576"];
m4_367 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="544-544"];
m4_363 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m4_35 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m4_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="288-288"];
m4_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DequeuedJobsWatcher.cs", label="return UseConnection<StatisticsDto>(connection =>\r\n            {\r\n                const string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n'';\r\n\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count);\r\n\r\n                    Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0;\r\n\r\n                    stats.Enqueued = getCountIfExists(EnqueuedState.StateName);\r\n                    stats.Failed = getCountIfExists(FailedState.StateName);\r\n                    stats.Processing = getCountIfExists(ProcessingState.StateName);\r\n                    stats.Scheduled = getCountIfExists(ScheduledState.StateName);\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n\r\n                stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count();\r\n\r\n                return stats;\r\n            });", span="290-327"];
m4_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="288-288"];
m4_33 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m4_47 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="105-105"];
m4_48 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="DequeuedJobsWatcher.cs", label="return GetTimelineStats(''failed'');", span="107-107"];
m4_49 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="105-105"];
m4_73 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m4_316 [cluster="Unk.Open", file="DequeuedJobsWatcher.cs", label="Entry Unk.Open", span=""];
m4_148 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="424-424"];
m4_307 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="var connection = new SqlConnection(_connectionString)", span="427-427"];
m4_306 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="var transaction = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="426-426"];
m4_308 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="connection.Open()", span="429-429"];
m4_309 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="var result = action(connection)", span="431-431"];
m4_310 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="transaction.Complete()", span="433-433"];
m4_311 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="return result;", span="435-435"];
m4_312 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="424-424"];
m4_315 [cluster="SqlConnection.cstr", file="DequeuedJobsWatcher.cs", label="Entry SqlConnection.cstr", span=""];
m4_219 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m4_141 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="330-330"];
m4_220 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DequeuedJobsWatcher.cs", label="return UseConnection<Dictionary<DateTime, long>>(connection =>\r\n            {\r\n                var endDate = DateTime.UtcNow;\r\n                var dates = new List<DateTime>();\r\n                for (var i = 0; i < 24; i++)\r\n                {\r\n                    dates.Add(endDate);\r\n                    endDate = endDate.AddHours(-1);\r\n                }\r\n\r\n                var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList();\r\n\r\n                const string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys'';\r\n\r\n                var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count);\r\n\r\n                foreach (var key in keys)\r\n                {\r\n                    if (!valuesMap.ContainsKey(key)) valuesMap.Add(key, 0);\r\n                }\r\n\r\n                var result = new Dictionary<DateTime, long>();\r\n                for (var i = 0; i < dates.Count; i++)\r\n                {\r\n                    var value = valuesMap[valuesMap.Keys.ElementAt(i)];\r\n                    result.Add(dates[i], value);\r\n                }\r\n\r\n                return result;\r\n            });", span="332-367"];
m4_221 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="330-330"];
m4_378 [cluster="Unk.ToString", file="DequeuedJobsWatcher.cs", label="Entry Unk.ToString", span=""];
m4_145 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="239-239"];
m4_146 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DequeuedJobsWatcher.cs", label="return UseConnection<JobDetailsDto>(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="241-275"];
m4_147 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="239-239"];
m4_204 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m4_325 [cluster="Unk.DeserializeJobs", file="DequeuedJobsWatcher.cs", label="Entry Unk.DeserializeJobs", span=""];
m4_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="69-69"];
m4_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="DequeuedJobsWatcher.cs", label="return GetNumberOfJobsByStateName(ProcessingState.StateName);", span="71-71"];
m4_25 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="69-69"];
m4_138 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="229-229"];
m4_139 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DequeuedJobsWatcher.cs", label="return GetHourlyTimelineStats(''succeeded'');", span="231-231"];
m4_140 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="229-229"];
m4_136 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m4_201 [cluster="Unk.Read", file="DequeuedJobsWatcher.cs", label="Entry Unk.Read", span=""];
m4_345 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m4_74 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="154-154"];
m4_75 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DequeuedJobsWatcher.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="156-167"];
m4_76 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="154-154"];
m4_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="137-137"];
m4_67 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DequeuedJobsWatcher.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="139-151"];
m4_68 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="137-137"];
m4_215 [cluster="Unk.ContainsKey", file="DequeuedJobsWatcher.cs", label="Entry Unk.ContainsKey", span=""];
m4_42 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m4_109 [cluster="Unk.EnqueuedJobs", file="DequeuedJobsWatcher.cs", label="Entry Unk.EnqueuedJobs", span=""];
m4_43 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="100-100"];
m4_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DequeuedJobsWatcher.cs", label="return GetTimelineStats(''succeeded'');", span="102-102"];
m4_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="100-100"];
m4_344 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m4_15 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56"];
m4_16 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs", label="var queueApi = GetQueueApi(queue)", span="58-58"];
m4_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="59-59"];
m4_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs", label="return counters.FetchedCount ?? 0;", span="61-61"];
m4_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56"];
m4_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_200 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m4_202 [cluster="System.Func<T, TResult>.Invoke(T)", file="DequeuedJobsWatcher.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_364 [cluster="int.ToString()", file="DequeuedJobsWatcher.cs", label="Entry int.ToString()", span="0-0"];
m4_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64"];
m4_21 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="DequeuedJobsWatcher.cs", label="return GetNumberOfJobsByStateName(FailedState.StateName);", span="66-66"];
m4_22 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64"];
m4_64 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m4_353 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="526-526"];
m4_358 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="537-538"];
m4_354 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="530-530"];
m4_355 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label=jobs, span="532-532"];
m4_357 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="535-535"];
m4_359 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="return new JobList<TDto>(result);", span="541-541"];
m4_356 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="534-534"];
m4_360 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="526-526"];
m4_313 [cluster="TransactionScope.cstr", file="DequeuedJobsWatcher.cs", label="Entry TransactionScope.cstr", span=""];
m4_104 [cluster="Unk.ToArray", file="DequeuedJobsWatcher.cs", label="Entry Unk.ToArray", span=""];
m4_284 [cluster="System.DateTime.AddDays(double)", file="DequeuedJobsWatcher.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m4_162 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m4_305 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m4_13 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="413-413"];
m4_298 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="DequeuedJobsWatcher.cs", label="return UseConnection<IPersistentJobQueueMonitoringApi>(connection =>\r\n            {\r\n                var provider = _queueProviders.GetProvider(queueName);\r\n                var monitoringApi = provider.GetJobQueueMonitoringApi(connection);\r\n\r\n                return monitoringApi;\r\n            });", span="415-421"];
m4_299 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="413-413"];
m4_88 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m4_212 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="307-307"];
m4_54 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="112-134"];
m4_55 [cluster="lambda expression", color=green, community=0, file="DequeuedJobsWatcher.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", prediction=11, span="114-116"];
m4_56 [cluster="lambda expression", color=green, community=0, file="DequeuedJobsWatcher.cs", label="var result = new List<ServerDto>()", prediction=12, span="118-118"];
m4_57 [cluster="lambda expression", color=green, community=0, file="DequeuedJobsWatcher.cs", label=servers, prediction=11, span="120-120"];
m4_59 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="123-130"];
m4_60 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return result;", span="133-133"];
m4_58 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="122-122"];
m4_93 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray()", span="187-191"];
m4_98 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(enqueuedJobIds)\r\n                    })", span="200-206"];
m4_157 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="267-273"];
m4_197 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count()", span="322-324"];
m4_301 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var provider = _queueProviders.GetProvider(queueName)", span="417-417"];
m4_323 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return DeserializeJobs(\r\n                    jobs,\r\n                    (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = sqlJob.StateName,\r\n                        EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                            ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                            : null\r\n                    });", span="456-465"];
m4_351 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return DeserializeJobs(jobs, selector);", span="522-522"];
m4_373 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                        job.Id.ToString(),\r\n                        new FetchedJobDto\r\n                        {\r\n                            Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                            State = job.StateName,\r\n                            FetchedAt = job.FetchedAt\r\n                        }))", span="565-572"];
m4_152 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="251-251"];
m4_155 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="254-254"];
m4_156 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList()", span="255-265"];
m4_171 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            }", span="258-264"];
m4_193 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Servers = multi.Read<int>().Single()", span="314-314"];
m4_194 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="316-316"];
m4_195 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", span="317-317"];
m4_196 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Recurring = multi.Read<int>().Single()", span="319-319"];
m4_322 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var jobs = connection.Query<SqlJob>(\r\n                    enqueuedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList()", span="451-454"];
m4_334 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var count = connection.Query<int>(\r\n                     sqlQuery,\r\n                     new { state = stateName })\r\n                     .Single()", span="476-479"];
m4_350 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var jobs = connection.Query<SqlJob>(\r\n                            jobsSql,\r\n                            new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                            .ToList()", span="517-520"];
m4_370 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var jobs = connection.Query<SqlJob>(\r\n                    fetchedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList()", span="556-559"];
m4_61 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="112-134"];
m4_230 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="342-342"];
m4_270 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="385-385"];
m4_269 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="384-384"];
m4_224 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var dates = new List<DateTime>()", span="335-335"];
m4_265 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var dates = new List<DateTime>()", span="376-376"];
m4_30 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="79-84"];
m4_39 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="92-97"];
m4_69 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="143-151"];
m4_77 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="160-167"];
m4_85 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="176-180"];
m4_92 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="185-210"];
m4_94 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="193-193"];
m4_110 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="188-188"];
m4_114 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="189-189"];
m4_118 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="189-189"];
m4_121 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="190-190"];
m4_95 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label=tuples, span="195-195"];
m4_96 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="197-197"];
m4_97 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="198-198"];
m4_149 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="241-275"];
m4_158 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="241-275"];
m4_183 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="290-327"];
m4_185 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var stats = new StatisticsDto()", span="302-302"];
m4_198 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return stats;", span="326-326"];
m4_216 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="323-323"];
m4_222 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="332-367"];
m4_262 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="372-410"];
m4_300 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="415-421"];
m4_302 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi(connection)", span="418-418"];
m4_320 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="441-466"];
m4_324 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="441-466"];
m4_326 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="458-465"];
m4_332 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="471-482"];
m4_348 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="506-523"];
m4_352 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="506-523"];
m4_368 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="546-576"];
m4_371 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="561-561"];
m4_372 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label=jobs, span="563-563"];
m4_151 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="249-249"];
m4_153 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="job == null", span="252-252"];
m4_164 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="254-254"];
m4_167 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="254-254"];
m4_170 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="258-264"];
m4_172 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="258-264"];
m4_186 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var multi = connection.QueryMultiple(sql)", span="303-303"];
m4_192 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="312-312"];
m4_321 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="444-449"];
m4_333 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="473-474"];
m4_335 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return count;", span="481-481"];
m4_349 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="508-515"];
m4_369 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="549-554"];
m4_226 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="i < 24", span="336-336"];
m4_231 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="344-347"];
m4_249 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="342-342"];
m4_232 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="349-352"];
m4_233 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label=keys, span="354-354"];
m4_271 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="387-390"];
m4_288 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="385-385"];
m4_272 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="392-395"];
m4_273 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label=keys, span="397-397"];
m4_266 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="startDate <= endDate", span="378-378"];
m4_285 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="384-384"];
m4_278 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="i < stringDates.Count", span="403-403"];
m4_223 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var endDate = DateTime.UtcNow", span="334-334"];
m4_225 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var i = 0", span="336-336"];
m4_227 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="dates.Add(endDate)", span="338-338"];
m4_238 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="i < dates.Count", span="360-360"];
m4_240 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="result.Add(dates[i], value)", span="363-363"];
m4_264 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var startDate = endDate.AddDays(-7)", span="375-375"];
m4_267 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="dates.Add(endDate)", span="380-380"];
m4_280 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="result.Add(dates[i], value)", span="406-406"];
m4_32 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="79-84"];
m4_31 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="79-84"];
m4_41 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="92-97"];
m4_40 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="92-97"];
m4_289 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="385-385"];
m4_71 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="143-151"];
m4_70 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="143-151"];
m4_79 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="160-167"];
m4_78 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="160-167"];
m4_87 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="176-180"];
m4_86 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                }", span="176-180"];
m4_100 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="185-210"];
m4_111 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.GetJobQueueMonitoringApi(connection)", span="188-188"];
m4_99 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return result;", span="209-209"];
m4_112 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="188-188"];
m4_116 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="189-189"];
m4_115 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.GetQueues()", span="189-189"];
m4_120 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="189-189"];
m4_119 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new { Monitoring = monitoring, Queue = queue }", span="189-189"];
m4_123 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="190-190"];
m4_122 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.Queue", span="190-190"];
m4_250 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="342-342"];
m4_150 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="244-247"];
m4_154 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return null;", span="252-252"];
m4_199 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="290-327"];
m4_184 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="292-300"];
m4_217 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.GetJobQueueMonitoringApi(connection).GetQueues()", span="323-323"];
m4_189 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="309-309"];
m4_190 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Failed = getCountIfExists(FailedState.StateName)", span="310-310"];
m4_191 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="311-311"];
m4_218 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="323-323"];
m4_243 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="332-367"];
m4_283 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="372-410"];
m4_263 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var endDate = DateTime.UtcNow.Date", span="374-374"];
m4_304 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="415-421"];
m4_303 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return monitoringApi;", span="420-420"];
m4_328 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="458-465"];
m4_327 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = sqlJob.StateName,\r\n                        EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                            ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                            : null\r\n                    }", span="458-465"];
m4_336 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="471-482"];
m4_375 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="546-576"];
m4_374 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return new JobList<FetchedJobDto>(result);", span="575-575"];
m4_187 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="305-305"];
m4_166 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="254-254"];
m4_165 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.Name", span="254-254"];
m4_169 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="254-254"];
m4_168 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.Value", span="254-254"];
m4_188 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="307-307"];
m4_229 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="i++", span="336-336"];
m4_251 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="342-342"];
m4_254 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="352-352"];
m4_257 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="352-352"];
m4_234 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="!valuesMap.ContainsKey(key)", span="356-356"];
m4_235 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="valuesMap.Add(key, 0)", span="356-356"];
m4_239 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="362-362"];
m4_236 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var result = new Dictionary<DateTime, long>()", span="359-359"];
m4_290 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="385-385"];
m4_292 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="395-395"];
m4_295 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="395-395"];
m4_274 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="!valuesMap.ContainsKey(key)", span="399-399"];
m4_275 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="valuesMap.Add(key, 0)", span="399-399"];
m4_279 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="405-405"];
m4_276 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var result = new Dictionary<DateTime, long>()", span="402-402"];
m4_268 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="endDate = endDate.AddDays(-1)", span="381-381"];
m4_287 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="384-384"];
m4_286 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.ToString(''yyyy-MM-dd'')", span="384-384"];
m4_277 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var i = 0", span="403-403"];
m4_281 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="i++", span="403-403"];
m4_282 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return result;", span="409-409"];
m4_228 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="endDate = endDate.AddHours(-1)", span="339-339"];
m4_237 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="var i = 0", span="360-360"];
m4_241 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="i++", span="360-360"];
m4_242 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="return result;", span="366-366"];
m4_206 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="305-305"];
m4_209 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Entry lambda expression", span="305-305"];
m4_213 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="307-307"];
m4_256 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="352-352"];
m4_255 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="(string)x.Key", span="352-352"];
m4_259 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="352-352"];
m4_258 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="(long)x.Count", span="352-352"];
m4_294 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="395-395"];
m4_293 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="(string)x.Key", span="395-395"];
m4_297 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="395-395"];
m4_296 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="(long)x.Count", span="395-395"];
m4_208 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="305-305"];
m4_207 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.State", span="305-305"];
m4_211 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="305-305"];
m4_210 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="x.Count", span="305-305"];
m4_214 [cluster="lambda expression", file="DequeuedJobsWatcher.cs", label="Exit lambda expression", span="307-307"];
m4_108 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m4_65 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_62 [cluster="Unk.ToList", file="DequeuedJobsWatcher.cs", label="Entry Unk.ToList", span=""];
m4_291 [cluster="Unk.Format", file="DequeuedJobsWatcher.cs", label="Entry Unk.Format", span=""];
m4_29 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="500-500"];
m4_346 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="return UseConnection<JobList<TDto>>(connection =>\r\n            {\r\n                const string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n'';\r\n\r\n                var jobs = connection.Query<SqlJob>(\r\n                            jobsSql,\r\n                            new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                            .ToList();\r\n\r\n                return DeserializeJobs(jobs, selector);\r\n            });", span="506-523"];
m4_347 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="500-500"];
m4_379 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m4_252 [cluster="System.DateTime.ToString(string)", file="DequeuedJobsWatcher.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m4_131 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="221-221"];
m4_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="var queueApi = GetQueueApi(queue)", span="223-223"];
m4_134 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="return FetchedJobs(fetchedJobIds);", span="226-226"];
m4_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="224-224"];
m4_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="221-221"];
m4_105 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="DequeuedJobsWatcher.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m4_248 [cluster="Unk.ElementAt", file="DequeuedJobsWatcher.cs", label="Entry Unk.ElementAt", span=""];
m4_130 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="439-439"];
m4_318 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs", label="return UseConnection<JobList<EnqueuedJobDto>>(connection =>\r\n            {\r\n\r\n                const string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null'';\r\n\r\n                var jobs = connection.Query<SqlJob>(\r\n                    enqueuedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList();\r\n\r\n                return DeserializeJobs(\r\n                    jobs,\r\n                    (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = sqlJob.StateName,\r\n                        EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                            ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                            : null\r\n                    });\r\n            });", span="441-466"];
m4_319 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="439-439"];
m4_377 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="DequeuedJobsWatcher.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m4_245 [cluster="Unk.Query", file="DequeuedJobsWatcher.cs", label="Entry Unk.Query", span=""];
m4_26 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="74-74"];
m4_27 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="DequeuedJobsWatcher.cs", label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="76-84"];
m4_28 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="74-74"];
m4_246 [cluster="Unk.Add", file="DequeuedJobsWatcher.cs", label="Entry Unk.Add", span=""];
m4_317 [cluster="Unk.Complete", file="DequeuedJobsWatcher.cs", label="Entry Unk.Complete", span=""];
m4_314 [cluster="TransactionOptions.cstr", file="DequeuedJobsWatcher.cs", label="Entry TransactionOptions.cstr", span=""];
m4_376 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="DequeuedJobsWatcher.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m4_7 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="469-469"];
m4_244 [cluster="System.DateTime.AddHours(double)", file="DequeuedJobsWatcher.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m4_4 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="DequeuedJobsWatcher.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ServerName'', ServerName }\r\n                };", span="37-41"];
m4_5 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m4_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_159 [cluster="Unk.QueryMultiple", file="DequeuedJobsWatcher.cs", label="Entry Unk.QueryMultiple", span=""];
m4_80 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m4_36 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="87-87"];
m4_37 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DequeuedJobsWatcher.cs", label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="89-97"];
m4_38 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="87-87"];
m4_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="283-283"];
m4_178 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="DequeuedJobsWatcher.cs", label="return GetNumberOfJobsByStateName(DeletedState.StateName);", span="285-285"];
m4_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="283-283"];
m4_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="213-213"];
m4_125 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="var queueApi = GetQueueApi(queue)", span="215-215"];
m4_127 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="return EnqueuedJobs(enqueuedJobIds);", span="218-218"];
m4_126 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="216-216"];
m4_128 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="213-213"];
m4_50 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="110-110"];
m4_51 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="DequeuedJobsWatcher.cs", label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", prediction=14, span="112-134"];
m4_52 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="110-110"];
m4_253 [cluster="string.Format(string, object, object)", file="DequeuedJobsWatcher.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_102 [cluster="Unk.SelectMany", file="DequeuedJobsWatcher.cs", label="Entry Unk.SelectMany", span=""];
m4_161 [cluster="Unk.ToDictionary", file="DequeuedJobsWatcher.cs", label="Entry Unk.ToDictionary", span=""];
m4_174 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="278-278"];
m4_175 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DequeuedJobsWatcher.cs", label="return GetNumberOfJobsByStateName(SucceededState.StateName);", span="280-280"];
m4_176 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="278-278"];
m4_337 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="485-485"];
m4_338 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="487-487"];
m4_339 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs", label="data.Arguments = arguments", span="488-488"];
m4_340 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs", label="return data.Deserialize();", span="492-492"];
m4_342 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs", label="return null;", span="496-496"];
m4_341 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs", label=JobLoadException, span="494-494"];
m4_343 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="485-485"];
m4_329 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m4_72 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m4_53 [cluster="Unk.>", file="DequeuedJobsWatcher.cs", label="Entry Unk.>", span=""];
m4_14 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m4_106 [cluster="Unk.GetEnqueuedJobIds", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m4_103 [cluster="Unk.OrderBy", file="DequeuedJobsWatcher.cs", label="Entry Unk.OrderBy", span=""];
m4_107 [cluster="Unk.GetEnqueuedAndFetchedCount", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m4_117 [cluster="Unk.GetQueues", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetQueues", span=""];
m4_46 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="370-370"];
m4_260 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DequeuedJobsWatcher.cs", label="return UseConnection<Dictionary<DateTime, long>>(connection =>\r\n            {\r\n                var endDate = DateTime.UtcNow.Date;\r\n                var startDate = endDate.AddDays(-7);\r\n                var dates = new List<DateTime>();\r\n\r\n                while (startDate <= endDate)\r\n                {\r\n                    dates.Add(endDate);\r\n                    endDate = endDate.AddDays(-1);\r\n                }\r\n\r\n                var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList();\r\n                var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList();\r\n\r\n                const string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys'';\r\n\r\n                var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count);\r\n\r\n                foreach (var key in keys)\r\n                {\r\n                    if (!valuesMap.ContainsKey(key)) valuesMap.Add(key, 0);\r\n                }\r\n\r\n                var result = new Dictionary<DateTime, long>();\r\n                for (var i = 0; i < stringDates.Count; i++)\r\n                {\r\n                    var value = valuesMap[valuesMap.Keys.ElementAt(i)];\r\n                    result.Add(dates[i], value);\r\n                }\r\n\r\n                return result;\r\n            });", span="372-410"];
m4_261 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="370-370"];
m4_247 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_365 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m4_82 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="170-170"];
m4_83 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="DequeuedJobsWatcher.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                });", span="172-180"];
m4_84 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="170-170"];
m4_8 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs", label="HangFire.States.ProcessingState", span=""];
m4_9 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs", label="var queueApi = GetQueueApi(queue)", span="50-50"];
m4_10 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="51-51"];
m4_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs", label="return counters.EnqueuedCount ?? 0;", span="53-53"];
m4_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="48-48"];
m4_142 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="234-234"];
m4_143 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DequeuedJobsWatcher.cs", label="return GetHourlyTimelineStats(''failed'');", span="236-236"];
m4_144 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="234-234"];
m4_129 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m4_205 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_101 [cluster="Unk.Select", file="DequeuedJobsWatcher.cs", label="Entry Unk.Select", span=""];
m4_113 [cluster="Unk.GetJobQueueMonitoringApi", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m4_173 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m4_203 [cluster="Unk.Single", file="DequeuedJobsWatcher.cs", label="Entry Unk.Single", span=""];
m4_361 [cluster="System.Collections.Generic.List<T>.List(int)", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m4_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="183-183"];
m4_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DequeuedJobsWatcher.cs", label="return UseConnection<IList<QueueWithTopEnqueuedJobsDto>>(connection =>\r\n            {\r\n                var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray();\r\n\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length);\r\n\r\n                foreach (var tuple in tuples)\r\n                {\r\n                    var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5);\r\n                    var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue);\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(enqueuedJobIds)\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="185-210"];
m4_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="183-183"];
m4_330 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DequeuedJobsWatcher.cs", label="return UseConnection<long>(connection =>\r\n            {\r\n                const string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state'';\r\n\r\n                var count = connection.Query<int>(\r\n                     sqlQuery,\r\n                     new { state = stateName })\r\n                     .Single();\r\n\r\n                return count;\r\n            });", span="471-482"];
m4_331 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="469-469"];
m4_160 [cluster="Unk.SingleOrDefault", file="DequeuedJobsWatcher.cs", label="Entry Unk.SingleOrDefault", span=""];
m4_163 [cluster="Unk.DeserializeJob", file="DequeuedJobsWatcher.cs", label="Entry Unk.DeserializeJob", span=""];
m4_380 [file="DequeuedJobsWatcher.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m4_387 [file="DequeuedJobsWatcher.cs", label=string, span=""];
m4_393 [file="DequeuedJobsWatcher.cs", label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", span=""];
m4_388 [file="DequeuedJobsWatcher.cs", label="System.Collections.Generic.IEnumerable<int>", span=""];
m4_389 [file="DequeuedJobsWatcher.cs", label=string, span=""];
m4_390 [file="DequeuedJobsWatcher.cs", label=int, span=""];
m4_391 [file="DequeuedJobsWatcher.cs", label=int, span=""];
m4_392 [file="DequeuedJobsWatcher.cs", label=string, span=""];
m4_394 [file="DequeuedJobsWatcher.cs", label="System.Collections.Generic.IEnumerable<int>", span=""];
m4_385 [file="DequeuedJobsWatcher.cs", label=string, span=""];
m4_386 [file="DequeuedJobsWatcher.cs", label=string, span=""];
m4_382 [file="DequeuedJobsWatcher.cs", label=string, span=""];
m4_381 [file="DequeuedJobsWatcher.cs", label=SqlConnection, span=""];
m4_384 [file="DequeuedJobsWatcher.cs", label=SqlConnection, span=""];
m4_383 [file="DequeuedJobsWatcher.cs", label=countByStates, span=""];
m5_14 [cluster="HangFire.Web.RazorPage.Write(object)", file="HangFireJobActivatorTests.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m5_13 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="HangFireJobActivatorTests.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m5_15 [cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="HangFireJobActivatorTests.cs", label="Entry HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58"];
m5_0 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="Entry HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23"];
m5_1 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="WriteLiteral(''\r\n'')", span="27-27"];
m5_2 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="WriteLiteral(''\r\n    <div class=\''btn-group pull-right paginator\''>\r\n'')", span="30-30"];
m5_3 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="new[] { 10, 20, 50, 100 }", span="35-35"];
m5_4 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="WriteLiteral(''            <a class=\''btn btn-sm btn-default '')", span="41-41"];
m5_11 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="WriteLiteral(''    </div>\r\n    <div class=\''btn-toolbar-spacer pull-right\''></div>\r\n    <div class'' +\r\n''=\''btn-toolbar-label btn-toolbar-label-sm pull-right\''>\r\n        Jobs per page:\r\n '' +\r\n''   </div>\r\n'')", span="81-83"];
m5_5 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="Write(count == _pager.RecordsPerPage ? ''active'' : null)", span="46-46"];
m5_7 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="Write(_pager.RecordsPerPageUrl(count))", span="56-56"];
m5_9 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="Write(count)", span="66-66"];
m5_6 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="WriteLiteral(''\'' \r\n                   href=\'''')", span="51-51"];
m5_8 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="WriteLiteral(''\''>'')", span="61-61"];
m5_10 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="WriteLiteral(''</a>    \r\n'')", span="71-71"];
m5_12 [cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs", label="Exit HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23"];
m5_16 [file="HangFireJobActivatorTests.cs", label="HangFire.Web.Pages.PerPageSelector", span=""];
m7_27 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobClient.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_31 [cluster="Unk.>", file="JobClient.cs", label="Entry Unk.>", span=""];
m7_61 [cluster="Unk.Map", file="JobClient.cs", label="Entry Unk.Map", span=""];
m7_37 [cluster="IAppBuilder.UseHangfireDashboard(string)", file="JobClient.cs", label="Entry IAppBuilder.UseHangfireDashboard(string)", span="98-98"];
m7_38 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="JobClient.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98"];
m7_39 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", color=green, community=0, file="JobClient.cs", label="return builder.UseHangfireDashboard(pathMatch, new DashboardOptions());", prediction=15, span="102-102"];
m7_40 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="JobClient.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98"];
m7_66 [cluster="System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", file="JobClient.cs", label="Entry System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", span="42-42"];
m7_9 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63"];
m7_10 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="builder == null", prediction=16, span="68-68"];
m7_11 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="throw new ArgumentNullException(''builder'');", prediction=17, span="68-68"];
m7_12 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="options == null", span="69-69"];
m7_25 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="return builder;", prediction=18, span="90-90"];
m7_24 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="token.Register(server.Dispose)", prediction=19, span="88-88"];
m7_16 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="var server = new BackgroundJobServer(options, storage)", span="72-72"];
m7_19 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", prediction=19, span="76-76"];
m7_21 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="token = context.Get<CancellationToken>(''server.OnDispose'')", prediction=19, span="80-80"];
m7_22 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="token == default(CancellationToken)", prediction=19, span="83-83"];
m7_18 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="var context = new OwinContext(builder.Properties)", span="75-75"];
m7_20 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="token == default(CancellationToken)", prediction=23, span="77-77"];
m7_23 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs", label="throw new InvalidOperationException(''Current OWIN environment does not contain an instance of the `CancellationToken` class under `host.OnAppDisposing` key.'');", prediction=24, span="85-85"];
m7_14 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="storage == null", span="70-70"];
m7_13 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="throw new ArgumentNullException(''options'');", span="69-69"];
m7_15 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="throw new ArgumentNullException(''storage'');", span="70-70"];
m7_17 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="Servers.Add(server)", span="73-73"];
m7_26 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63"];
m7_33 [cluster="Unk.Register", file="JobClient.cs", label="Entry Unk.Register", span=""];
m7_41 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="JobClient.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m7_47 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113"];
m7_49 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="throw new ArgumentNullException(''builder'');", span="119-119"];
m7_51 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="throw new ArgumentNullException(''pathMatch'');", span="120-120"];
m7_53 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="throw new ArgumentNullException(''options'');", span="121-121"];
m7_55 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="throw new ArgumentNullException(''storage'');", span="122-122"];
m7_48 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="builder == null", span="119-119"];
m7_50 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="pathMatch == null", span="120-120"];
m7_52 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="options == null", span="121-121"];
m7_54 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="storage == null", span="122-122"];
m7_58 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="return builder;", span="130-130"];
m7_56 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="SignatureConversions.AddConversions(builder)", span="124-124"];
m7_57 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="builder.Map(pathMatch, subApp => subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes))", span="126-128"];
m7_59 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113"];
m7_28 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="80-80"];
m7_34 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", file="JobClient.cs", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93"];
m7_35 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", color=green, community=0, file="JobClient.cs", label="return builder.UseHangfireDashboard(''/hangfire'');", prediction=25, span="95-95"];
m7_36 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", file="JobClient.cs", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93"];
m7_42 [cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", file="JobClient.cs", label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", span="105-105"];
m7_29 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="JobClient.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m7_62 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="126-128"];
m7_63 [cluster="lambda expression", file="JobClient.cs", label="subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes)", span="126-128"];
m7_64 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="126-128"];
m7_60 [cluster="Unk.AddConversions", file="JobClient.cs", label="Entry Unk.AddConversions", span=""];
m7_30 [cluster="OwinContext.cstr", file="JobClient.cs", label="Entry OwinContext.cstr", span=""];
m7_65 [cluster="Unk.UseOwin", file="JobClient.cs", label="Entry Unk.UseOwin", span=""];
m7_32 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobClient.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_75 [file="JobClient.cs", label="Hangfire.DashboardOptions", span=""];
m7_76 [file="JobClient.cs", label="Hangfire.JobStorage", span=""];
m8_0 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobCreator.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m8_1 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobCreator.cs", label="Title = title", span="6-6"];
m8_2 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobCreator.cs", label="Exit Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m8_3 [file="JobCreator.cs", label="Hangfire.Dashboard.Pages.LayoutPage", span=""];
m9_0 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m9_1 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Performed = true", span="185-185"];
m9_2 [cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183"];
m9_7 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m9_8 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205"];
m9_3 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m9_4 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="A = a", span="196-196"];
m9_5 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="B = b", span="197-197"];
m9_6 [cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194"];
m9_9 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m9_10 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Disposed = true", span="211-211"];
m9_11 [cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs", label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209"];
m9_12 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.CorrectJob", span=""];
m9_13 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span=""];
m9_14 [file="JobInvokerTests.cs", label="HangFire.Tests.JobInvokerTests.DisposableJob", span=""];
m10_42 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_112 [cluster="Unk.EnqueueItemOnList", file="JobState.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m10_48 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="JobState.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8"];
m10_49 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", span="126-126"];
m10_87 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", span="126-126"];
m10_107 [cluster="Unk.SetRangeInHash", file="JobState.cs", label="Entry Unk.SetRangeInHash", span=""];
m10_46 [cluster="System.TimeSpan.FromMinutes(double)", file="JobState.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m10_77 [cluster="Unk.Apply", file="JobState.cs", label="Entry Unk.Apply", span=""];
m10_0 [cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs", label="Entry HangFire.States.JobState.JobState(string)", span="10-10"];
m10_1 [cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs", label="Reason = reason", span="12-12"];
m10_2 [cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs", label="Exit HangFire.States.JobState.JobState(string)", span="10-10"];
m10_103 [cluster="Unk.SetEntryInHash", file="JobState.cs", label="Entry Unk.SetEntryInHash", span=""];
m10_45 [cluster="string.Format(string, object)", file="JobState.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_111 [cluster="HangFire.JobHelper.ToJson(object)", file="JobState.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m10_99 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m10_83 [cluster="Unk.RemoveEntry", file="JobState.cs", label="Entry Unk.RemoveEntry", span=""];
m10_75 [cluster="Unk.OnStateUnapplied", file="JobState.cs", label="Entry Unk.OnStateUnapplied", span=""];
m10_17 [cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="37-37"];
m10_18 [cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="39-39"];
m10_50 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Entry HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="81-81"];
m10_67 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Exit HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="81-81"];
m10_88 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="136-136"];
m10_98 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="136-136"];
m10_78 [cluster="Unk.OnStateApplied", file="JobState.cs", label="Entry Unk.OnStateApplied", span=""];
m10_72 [cluster="Unk.GetDescriptor", file="JobState.cs", label="Entry Unk.GetDescriptor", span=""];
m10_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_15 [cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41"];
m10_16 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs", label="Entry HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="39-39"];
m10_21 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs", label="Exit HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="39-39"];
m10_44 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobState.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m10_73 [cluster="Unk.Unapply", file="JobState.cs", label="Entry Unk.Unapply", span=""];
m10_26 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_43 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobState.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m10_27 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="JobState.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m10_41 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="JobState.cs", label="Exit HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m10_9 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="Entry HangFire.States.JobState.JobState()", span="31-31"];
m10_14 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="Exit HangFire.States.JobState.JobState()", span="31-31"];
m10_3 [cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="JobState.cs", label="Entry HangFire.States.JobState.Apply(IRedisTransaction, string)", span="19-19"];
m10_4 [cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="JobState.cs", label="Exit HangFire.States.JobState.Apply(IRedisTransaction, string)", span="19-19"];
m10_108 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="159-161"];
m10_80 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="104-105"];
m10_82 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="104-105"];
m10_100 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="146-149"];
m10_104 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="151-153"];
m10_102 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="146-149"];
m10_106 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="151-153"];
m10_110 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="159-161"];
m10_69 [cluster="Unk.Contains", file="JobState.cs", label="Entry Unk.Contains", span=""];
m10_68 [cluster="Unk.GetValueFromHash", file="JobState.cs", label="Entry Unk.GetValueFromHash", span=""];
m10_79 [cluster="Unk.Commit", file="JobState.cs", label="Entry Unk.Commit", span=""];
m10_71 [cluster="Unk.IsNullOrEmpty", file="JobState.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m10_19 [cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49"];
m10_23 [cluster="HangFire.States.JobState.GetDescriptor(string)", file="JobState.cs", label="Entry HangFire.States.JobState.GetDescriptor(string)", span="45-45"];
m10_25 [cluster="HangFire.States.JobState.GetDescriptor(string)", file="JobState.cs", label="Exit HangFire.States.JobState.GetDescriptor(string)", span="45-45"];
m10_74 [cluster="Unk.QueueCommand", file="JobState.cs", label="Entry Unk.QueueCommand", span=""];
m10_22 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_76 [cluster="Unk.AppendHistory", file="JobState.cs", label="Entry Unk.AppendHistory", span=""];
m10_47 [cluster="Unk.AcquireLock", file="JobState.cs", label="Entry Unk.AcquireLock", span=""];
m10_70 [cluster="Unk.CreateTransaction", file="JobState.cs", label="Entry Unk.CreateTransaction", span=""];
m10_5 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="Entry HangFire.States.JobState.GetProperties()", span="22-22"];
m10_6 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="return new Dictionary<string, string>();", span="24-24"];
m10_7 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="Exit HangFire.States.JobState.GetProperties()", span="22-22"];
m10_113 [file="JobState.cs", label="HangFire.States.JobState", span=""];
m10_114 [file="JobState.cs", label=string, span=""];
m10_115 [file="JobState.cs", label=string, span=""];
m10_116 [file="JobState.cs", label="HangFire.States.JobState", span=""];
m10_117 [file="JobState.cs", label=properties, span=""];
m12_8 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="return Async(jobType, null);", span="24-24"];
m12_9 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Exit HangFire.Perform.Async(System.Type)", span="22-22"];
m12_18 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", color=green, community=0, file="Perform.cs", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = queues\r\n            }", prediction=26, span="66-69"];
m12_19 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="Perform.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="71-71"];
m12_20 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="Perform.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="62-62"];
m12_16 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="return In<TJob>(interval, null);", span="39-39"];
m12_6 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="31-31"];
m12_12 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="Perform.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
m12_7 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type)", span="22-22"];
m12_0 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="Perform.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="29-29"];
m12_1 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="Perform.cs", label="configuration.UseServer(() => new BackgroundJobServer())", span="31-31"];
m12_2 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="Perform.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="29-29"];
m12_3 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="Perform.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m12_4 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="31-31"];
m12_5 [cluster="lambda expression", file="Perform.cs", label="new BackgroundJobServer()", span="31-31"];
m12_22 [cluster="lambda expression", file="Perform.cs", label="new BackgroundJobServer(options)", span="71-71"];
m12_23 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="71-71"];
m12_24 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="Perform.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="84-84"];
m12_14 [cluster="lambda expression", file="Perform.cs", label="new BackgroundJobServer(options)", span="51-51"];
m12_21 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="71-71"];
m12_27 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="Perform.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="84-84"];
m12_13 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="51-51"];
m12_31 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="Perform.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="106-106"];
m12_32 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="Perform.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="110-110"];
m12_33 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="Perform.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="106-106"];
m12_37 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="Perform.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="121-121"];
m12_38 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="Perform.cs", label="configuration.UseServer(() => new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage))", span="125-127"];
m12_39 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="Perform.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="121-121"];
m12_15 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="51-51"];
m12_17 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="Perform.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="62-62"];
m12_28 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="95-95"];
m12_47 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="145-145"];
m12_41 [cluster="lambda expression", file="Perform.cs", label="new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage)", span="125-127"];
m12_29 [cluster="lambda expression", file="Perform.cs", label="new BackgroundJobServer(options)", span="95-95"];
m12_40 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="125-127"];
m12_42 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="125-127"];
m12_35 [cluster="lambda expression", file="Perform.cs", label="new BackgroundJobServer(options)", span="110-110"];
m12_34 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="110-110"];
m12_30 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="95-95"];
m12_48 [cluster="lambda expression", file="Perform.cs", label="new BackgroundJobServer(options, storage)", span="145-145"];
m12_36 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="110-110"];
m12_49 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="145-145"];
m12_44 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="Perform.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="140-140"];
m12_45 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="Perform.cs", label="configuration.UseServer(() => new BackgroundJobServer(options, storage))", span="145-145"];
m12_46 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="Perform.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="140-140"];
m12_43 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="Perform.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="74-74"];
m12_51 [file="Perform.cs", label=options, span=""];
m12_54 [file="Perform.cs", label="Hangfire.JobStorage", span=""];
m12_50 [file="Perform.cs", label=options, span=""];
m12_52 [file="Perform.cs", label=options, span=""];
m12_53 [file="Perform.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m12_55 [file="Perform.cs", label="Hangfire.JobStorage", span=""];
m12_56 [file="Perform.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m14_16 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", span="30-30"];
m14_6 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m14_5 [cluster="Mock<IBackgroundProcess>.cstr", file="PrefetchJobFetcher.cs", label="Entry Mock<IBackgroundProcess>.cstr", span=""];
m14_22 [cluster="Unk.Same", file="PrefetchJobFetcher.cs", label="Entry Unk.Same", span=""];
m14_78 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="89-89"];
m14_79 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs", label="var wrapper = CreateWrapper()", span="91-91"];
m14_80 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs", label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<InvalidOperationException>()", span="92-92"];
m14_82 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_context.Object))", span="95-95"];
m14_81 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs", label="_context.CancellationTokenSource.Cancel()", span="93-93"];
m14_83 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs", label="_process.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()), Times.Once)", span="97-97"];
m14_84 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="89-89"];
m14_12 [cluster="Unk.Equal", file="PrefetchJobFetcher.cs", label="Entry Unk.Equal", span=""];
m14_85 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m14_11 [cluster="Unk.>", file="PrefetchJobFetcher.cs", label="Entry Unk.>", span=""];
m14_95 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="101-101"];
m14_96 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs", label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<OperationCanceledException>()", span="103-103"];
m14_97 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs", label="var wrapper = CreateWrapper()", span="104-104"];
m14_98 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_context.Object))", span="106-106"];
m14_99 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs", label="_process.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()), Times.Once)", span="108-108"];
m14_100 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="101-101"];
m14_34 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", span="51-51"];
m14_35 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs", label="var component = new Mock<IServerComponent>()", span="53-53"];
m14_36 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs", label="var wrapper = new AutomaticRetryProcess(component.Object)", span="54-54"];
m14_38 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs", label="component.Verify(x => x.Execute(_context.CancellationTokenSource.Token))", span="58-58"];
m14_37 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs", label="wrapper.Execute(_context.Object)", span="56-56"];
m14_39 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", span="51-51"];
m14_28 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m14_0 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", span="15-15"];
m14_1 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs", label="_process = new Mock<IBackgroundProcess>()", span="17-17"];
m14_2 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs", label="_maxRetryAttempts = 3", span="18-18"];
m14_3 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs", label="_context = new BackgroundProcessContextMock()", span="19-19"];
m14_4 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", span="15-15"];
m14_21 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", span="111-111"];
m14_110 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", file="PrefetchJobFetcher.cs", label="return new AutomaticRetryProcess(_process.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", span="113-117"];
m14_111 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", span="111-111"];
m14_120 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m14_23 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", span="41-41"];
m14_24 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs", label="var wrapper = CreateWrapper()", span="43-43"];
m14_25 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs", label="wrapper.Execute(_context.Object)", span="45-45"];
m14_26 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs", label="_process.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()))", span="47-47"];
m14_27 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", span="41-41"];
m14_41 [cluster="AutomaticRetryProcess.cstr", file="PrefetchJobFetcher.cs", label="Entry AutomaticRetryProcess.cstr", span=""];
m14_7 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="23-23"];
m14_8 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new AutomaticRetryProcess(null))", span="25-27"];
m14_9 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs", label="Assert.Equal(''innerProcess'', exception.ParamName)", span="29-29"];
m14_10 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="23-23"];
m14_115 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="123-123"];
m14_116 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="125-125"];
m14_117 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="token.ThrowIfCancellationRequested()", span="126-126"];
m14_118 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="123-123"];
m14_62 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="75-75"];
m14_63 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs", label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<InvalidOperationException>()", span="77-77"];
m14_64 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs", label="_maxRetryAttempts = 0", span="78-78"];
m14_65 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs", label="var wrapper = CreateWrapper()", span="79-79"];
m14_66 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_context.Object))", span="81-81"];
m14_67 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs", label="_process.Verify(x => x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>()),\r\n                Times.Once)", span="83-85"];
m14_68 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="75-75"];
m14_51 [cluster="Unk.Setup", file="PrefetchJobFetcher.cs", label="Entry Unk.Setup", span=""];
m14_40 [cluster="Mock<IServerComponent>.cstr", file="PrefetchJobFetcher.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m14_45 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="62-62"];
m14_46 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs", label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<InvalidOperationException>()", span="64-64"];
m14_47 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs", label="var wrapper = CreateWrapper()", span="65-65"];
m14_48 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_context.Object))", span="67-67"];
m14_49 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs", label="_process.Verify(x => x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>()),\r\n                Times.Exactly(_maxRetryAttempts))", span="69-71"];
m14_50 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="62-62"];
m14_52 [cluster="Unk.Exactly", file="PrefetchJobFetcher.cs", label="Entry Unk.Exactly", span=""];
m14_112 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="116-116"];
m14_13 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="27-27"];
m14_14 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="new AutomaticRetryProcess(null)", span="27-27"];
m14_15 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="27-27"];
m14_30 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="47-47"];
m14_31 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="47-47"];
m14_32 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="47-47"];
m14_42 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="58-58"];
m14_43 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(_context.CancellationTokenSource.Token)", span="58-58"];
m14_44 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="58-58"];
m14_53 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="64-64"];
m14_57 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="wrapper.Execute(_context.Object)", span="67-67"];
m14_56 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="67-67"];
m14_59 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="69-70"];
m14_54 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="64-64"];
m14_55 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="64-64"];
m14_58 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="67-67"];
m14_60 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>())", span="69-70"];
m14_61 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="69-70"];
m14_69 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="77-77"];
m14_73 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="wrapper.Execute(_context.Object)", span="81-81"];
m14_72 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="81-81"];
m14_75 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="83-84"];
m14_70 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="77-77"];
m14_71 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="77-77"];
m14_74 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="81-81"];
m14_76 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>())", span="83-84"];
m14_77 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="83-84"];
m14_90 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="wrapper.Execute(_context.Object)", span="95-95"];
m14_86 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="92-92"];
m14_89 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="95-95"];
m14_92 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="97-97"];
m14_87 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="92-92"];
m14_88 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="92-92"];
m14_91 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="95-95"];
m14_93 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="97-97"];
m14_94 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="97-97"];
m14_101 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="103-103"];
m14_105 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="wrapper.Execute(_context.Object)", span="106-106"];
m14_104 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="106-106"];
m14_107 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="108-108"];
m14_102 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="103-103"];
m14_103 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="103-103"];
m14_106 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="106-106"];
m14_108 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="108-108"];
m14_109 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="108-108"];
m14_113 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="TimeSpan.Zero", span="116-116"];
m14_114 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="116-116"];
m14_33 [cluster="Unk.Execute", file="PrefetchJobFetcher.cs", label="Entry Unk.Execute", span=""];
m14_119 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m14_17 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m14_18 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs", label="var wrapper = CreateWrapper()", span="35-35"];
m14_19 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs", label="Assert.Same(_process.Object, wrapper.InnerProcess)", span="37-37"];
m14_20 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m14_29 [cluster="Unk.Verify", file="PrefetchJobFetcher.cs", label="Entry Unk.Verify", span=""];
m14_121 [file="PrefetchJobFetcher.cs", label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", span=""];
m14_122 [file="PrefetchJobFetcher.cs", label=wrapper, span=""];
m14_123 [file="PrefetchJobFetcher.cs", label=wrapper, span=""];
m14_124 [file="PrefetchJobFetcher.cs", label=wrapper, span=""];
m14_125 [file="PrefetchJobFetcher.cs", label=wrapper, span=""];
m16_21 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerJobDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_27 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="ServerJobDescriptor.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m16_23 [cluster="HangFire.JobActivator.ActivateJob(System.Type)", file="ServerJobDescriptor.cs", label="Entry HangFire.JobActivator.ActivateJob(System.Type)", span="6-6"];
m16_26 [cluster="string.Format(string, object, object)", file="ServerJobDescriptor.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m16_0 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12"];
m16_1 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="_redis = redis", span="17-17"];
m16_38 [cluster="Unk.SetEntryInHash", file="ServerJobDescriptor.cs", label="Entry Unk.SetEntryInHash", span=""];
m16_25 [cluster="object.GetType()", file="ServerJobDescriptor.cs", label="Entry object.GetType()", span="0-0"];
m16_37 [cluster="HangFire.JobHelper.ToJson(object)", file="ServerJobDescriptor.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m16_36 [cluster="string.Format(string, object)", file="ServerJobDescriptor.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_31 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ServerJobDescriptor.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m16_45 [cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.Perform()", span="79-79"];
m16_46 [cluster="HangFire.Server.ServerJobDescriptor.Perform()", color=green, community=0, file="ServerJobDescriptor.cs", label="_jobInstance.Perform()", prediction=27, span="81-81"];
m16_47 [cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.Perform()", span="79-79"];
m16_44 [cluster="Unk.>", file="ServerJobDescriptor.cs", label="Entry Unk.>", span=""];
m16_22 [cluster="System.Type.GetType(string, bool, bool)", file="ServerJobDescriptor.cs", label="Entry System.Type.GetType(string, bool, bool)", span="0-0"];
m16_6 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="JobId = payload.Id", span="21-21"];
m16_8 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="_jobInstance = activator.ActivateJob(type)", span="24-24"];
m16_9 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="_jobInstance == null", span="26-26"];
m16_13 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="var propertyInfo = _jobInstance.GetType().GetProperty(arg.Key)", span="38-38"];
m16_17 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="propertyInfo.SetValue(_jobInstance, value, null)", span="46-46"];
m16_19 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not set the property '{0}' of the instance of class '{1}'. See the inner exception for details.'',\r\n                                propertyInfo.Name, _jobInstance.GetType().Name),\r\n                            ex);", span="50-54"];
m16_2 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="activator == null", span="18-18"];
m16_4 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="payload == null", span="19-19"];
m16_7 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="var type = Type.GetType(payload.Type, true, true)", span="23-23"];
m16_10 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''{0} returned NULL instance of the '{1}' type.'',\r\n                    activator.GetType().FullName,\r\n                    type.FullName));", span="28-31"];
m16_11 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(payload.Args)", span="34-34"];
m16_12 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label=args, span="36-36"];
m16_14 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="propertyInfo != null", span="39-39"];
m16_15 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="var converter = TypeDescriptor.GetConverter(propertyInfo.PropertyType)", span="41-41"];
m16_16 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="var value = converter.ConvertFromInvariantString(arg.Value)", span="45-45"];
m16_18 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label=Exception, span="48-48"];
m16_3 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''activator'');", span="18-18"];
m16_5 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="throw new ArgumentNullException(''payload'');", span="19-19"];
m16_20 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12"];
m16_28 [cluster="System.Type.GetProperty(string)", file="ServerJobDescriptor.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m16_39 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="70-70"];
m16_40 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="var value = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                name)", span="72-74"];
m16_41 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="return JobHelper.FromJson<T>(value);", span="76-76"];
m16_42 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="70-70"];
m16_24 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ServerJobDescriptor.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m16_48 [cluster="HangFire.BackgroundJob.Perform()", file="ServerJobDescriptor.cs", label="Entry HangFire.BackgroundJob.Perform()", span="4-4"];
m16_29 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ServerJobDescriptor.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m16_32 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="ServerJobDescriptor.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m16_49 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.Dispose()", span="84-84"];
m16_50 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="var disposable = _jobInstance as IDisposable", span="86-86"];
m16_51 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="disposable != null", span="87-87"];
m16_52 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="disposable.Dispose()", span="89-89"];
m16_53 [cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.Dispose()", span="84-84"];
m16_43 [cluster="Unk.GetValueFromHash", file="ServerJobDescriptor.cs", label="Entry Unk.GetValueFromHash", span=""];
m16_55 [cluster="HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", span="93-93"];
m16_56 [cluster="HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", color=green, community=0, file="ServerJobDescriptor.cs", label="Dispose()", prediction=27, span="95-95"];
m16_57 [cluster="HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", span="93-93"];
m16_33 [cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs", label="Entry HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", span="62-62"];
m16_34 [cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs", label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                name,\r\n                JobHelper.ToJson(value))", span="64-67"];
m16_35 [cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs", label="Exit HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", span="62-62"];
m16_30 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="ServerJobDescriptor.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m16_54 [cluster="System.IDisposable.Dispose()", file="ServerJobDescriptor.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m16_58 [file="ServerJobDescriptor.cs", label="HangFire.Server.ServerJobDescriptor", span=""];
m18_34 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="States.feature.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m18_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="States.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_0 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="States.feature.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32"];
m18_1 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="States.feature.cs", label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32"];
m18_33 [cluster="Hangfire.JobStorage.GetConnection()", file="States.feature.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m18_19 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="States.feature.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m18_20 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="States.feature.cs", label="Entry Hangfire.Server.SchedulePoller.ToString()", span="64-64"];
m18_21 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="States.feature.cs", label="return ''Schedule Poller'';", span="66-66"];
m18_22 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="States.feature.cs", label="Exit Hangfire.Server.SchedulePoller.ToString()", span="64-64"];
m18_36 [cluster="string.IsNullOrEmpty(string)", file="States.feature.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_37 [cluster="System.Func<T, TResult>.Invoke(T)", file="States.feature.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m18_35 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="States.feature.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m18_39 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="States.feature.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m18_18 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="States.feature.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m18_9 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="Entry Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45"];
m18_10 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="!EnqueueNextScheduledJob(context)", span="47-47"];
m18_14 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="context.CancellationToken.WaitHandle.WaitOne(_pollInterval)", span="55-55"];
m18_15 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="_enqueuedCount++", span="60-60"];
m18_13 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="_enqueuedCount = 0", span="52-52"];
m18_16 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="Exit Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45"];
m18_2 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="37-37"];
m18_3 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs", label="stateMachineFactory == null", span="39-39"];
m18_5 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs", label="_stateMachineFactory = stateMachineFactory", span="41-41"];
m18_6 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs", label="_pollInterval = pollInterval", span="42-42"];
m18_4 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="39-39"];
m18_7 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs", label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="37-37"];
m18_40 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="States.feature.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m18_38 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="States.feature.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m18_17 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="69-69"];
m18_23 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="var connection = context.Storage.GetConnection()", span="71-71"];
m18_28 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="var stateMachine = _stateMachineFactory(context.Storage).Create(connection)", span="84-84"];
m18_25 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="76-77"];
m18_26 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="String.IsNullOrEmpty(jobId)", span="79-79"];
m18_30 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", span="90-90"];
m18_27 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="return false;", span="81-81"];
m18_29 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="85-88"];
m18_31 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="return true;", span="92-92"];
m18_32 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs", label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="69-69"];
m18_41 [file="States.feature.cs", label="Hangfire.Server.SchedulePoller", span=""];
m19_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateSteps.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m19_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateSteps.cs", label="ServerName = serverName", span="29-29"];
m19_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateSteps.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m19_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m19_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m19_3 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="StateSteps.cs", label="Entry HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m19_4 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="StateSteps.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ServerName'', ServerName }\r\n                };", span="37-41"];
m19_5 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="StateSteps.cs", label="Exit HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m19_8 [file="StateSteps.cs", label="HangFire.States.ProcessingState", span=""];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m4_366 -> m4_368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_181 -> m4_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_306 -> m4_310  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m4_309 -> m4_311  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_141 -> m4_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_220 -> m4_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_146 -> m4_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_75 -> m4_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_67 -> m4_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_353 -> m4_355  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>", style=dashed];
m4_354 -> m4_358  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_354 -> m4_359  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_355 -> m4_358  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_298 -> m4_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_55 -> m4_57  [color=green, key=1, label=servers, style=dashed];
m4_56 -> m4_60  [color=green, key=1, label=result, style=dashed];
m4_93 -> m4_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_93 -> m4_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_93 -> m4_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_93 -> m4_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_93 -> m4_95  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m4_197 -> m4_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_323 -> m4_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_155 -> m4_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_155 -> m4_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_156 -> m4_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_370 -> m4_372  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m4_230 -> m4_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_230 -> m4_233  [color=darkseagreen4, key=1, label=keys, style=dashed];
m4_270 -> m4_288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_270 -> m4_273  [color=darkseagreen4, key=1, label=keys, style=dashed];
m4_269 -> m4_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_269 -> m4_278  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m4_224 -> m4_227  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_224 -> m4_238  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_224 -> m4_240  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_265 -> m4_267  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_265 -> m4_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m4_92 -> m4_111  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m4_94 -> m4_99  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_183 -> m4_217  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m4_185 -> m4_198  [color=darkseagreen4, key=1, label=stats, style=dashed];
m4_371 -> m4_374  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_232 -> m4_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_232 -> m4_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_232 -> m4_234  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_232 -> m4_235  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_233 -> m4_235  [color=darkseagreen4, key=1, label=key, style=dashed];
m4_272 -> m4_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_272 -> m4_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_272 -> m4_274  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_272 -> m4_275  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m4_273 -> m4_275  [color=darkseagreen4, key=1, label=key, style=dashed];
m4_223 -> m4_227  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_225 -> m4_229  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_264 -> m4_266  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m4_263 -> m4_266  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_263 -> m4_267  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m4_187 -> m4_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_187 -> m4_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_187 -> m4_213  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m4_188 -> m4_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_229 -> m4_229  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_236 -> m4_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_236 -> m4_242  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_276 -> m4_280  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_276 -> m4_282  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_277 -> m4_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_277 -> m4_281  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_281 -> m4_281  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_237 -> m4_240  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_237 -> m4_241  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_241 -> m4_241  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_29 -> m4_351  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m4_346 -> m4_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_318 -> m4_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_27 -> m4_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_37 -> m4_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_51 -> m4_54  [color=green, key=1, label="lambda expression", style=dashed];
m4_338 -> m4_340  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_46 -> m4_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_260 -> m4_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_83 -> m4_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_8 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
m4_90 -> m4_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_330 -> m4_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_380 -> m4_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_24  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_44  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_48  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_127  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_134  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_139  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_143  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_175  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_178  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_380 -> m4_351  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m4_393 -> m4_351  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m4_385 -> m4_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_386 -> m4_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_381 -> m4_111  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m4_384 -> m4_217  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m4_383 -> m4_213  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m5_3 -> m5_5  [color=darkseagreen4, key=1, label=count, style=dashed];
m5_3 -> m5_7  [color=darkseagreen4, key=1, label=count, style=dashed];
m5_3 -> m5_9  [color=darkseagreen4, key=1, label=count, style=dashed];
m5_16 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m5_16 -> m5_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.PerPageSelector", style=dashed];
m7_9 -> m7_25  [color=green, key=1, label=IAppBuilder, style=dashed];
m7_9 -> m7_12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m7_9 -> m7_14  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_16 -> m7_24  [color=green, key=1, label=server, style=dashed];
m7_19 -> m7_24  [color=green, key=1, label=token, style=dashed];
m7_19 -> m7_22  [color=green, key=1, label=token, style=dashed];
m7_21 -> m7_24  [color=green, key=1, label=token, style=dashed];
m7_47 -> m7_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_47 -> m7_52  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m7_47 -> m7_54  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_47 -> m7_56  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_47 -> m7_57  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_47 -> m7_63  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m7_47 -> m7_58  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_57 -> m7_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_75 -> m7_63  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m7_76 -> m7_63  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m12_9 -> m12_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m12_18 -> m12_22  [color=green, key=1, label=options, style=dashed];
m12_1 -> m12_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_31 -> m12_35  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m12_32 -> m12_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_37 -> m12_41  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m12_38 -> m12_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_17 -> m12_19  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m12_44 -> m12_48  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m12_45 -> m12_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_51 -> m12_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m12_54 -> m12_41  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m12_50 -> m12_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m12_52 -> m12_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m12_53 -> m12_35  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m12_55 -> m12_48  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m12_56 -> m12_48  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m14_79 -> m14_82  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_79 -> m14_90  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_80 -> m14_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_82 -> m14_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_83 -> m14_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_96 -> m14_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_97 -> m14_105  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_98 -> m14_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_99 -> m14_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_35 -> m14_38  [color=darkseagreen4, key=1, label=component, style=dashed];
m14_38 -> m14_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_26 -> m14_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_8 -> m14_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_116 -> m14_116  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m14_117 -> m14_117  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m14_63 -> m14_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_65 -> m14_73  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_66 -> m14_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_67 -> m14_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_46 -> m14_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_47 -> m14_57  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_48 -> m14_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_49 -> m14_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_121 -> m14_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_48  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_121 -> m14_99  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", style=dashed];
m14_122 -> m14_57  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_123 -> m14_73  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_124 -> m14_90  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m14_125 -> m14_105  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m16_0 -> m16_2  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m16_0 -> m16_4  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m16_0 -> m16_10  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m16_13 -> m16_17  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m16_13 -> m16_19  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m16_7 -> m16_10  [color=darkseagreen4, key=1, label=type, style=dashed];
m16_50 -> m16_52  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m16_58 -> m16_46  [color=green, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m16_58 -> m16_56  [color=green, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m16_58 -> m16_9  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m16_58 -> m16_17  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m16_58 -> m16_19  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m16_58 -> m16_34  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobDescriptor", style=dashed];
m18_9 -> m18_14  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m18_28 -> m18_30  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m18_25 -> m18_30  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m18_41 -> m18_10  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m18_41 -> m18_14  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m18_41 -> m18_15  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m19_8 -> m19_4  [color=darkseagreen4, key=1, label="HangFire.States.ProcessingState", style=dashed];
}
