digraph  {
m0_11 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Client.feature.cs"];
m0_12 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="Client.feature.cs"];
m0_13 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="Client.feature.cs"];
m0_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="26-26", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Client.feature.cs"];
m0_1 [label="TransactionIsolationLevel = null", span="28-28", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="29-29", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_4 [label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="31-31", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_6 [label="PrepareSchemaIfNecessary = true", span="33-33", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_7 [label="DashboardJobListLimit = 50000", span="34-34", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_8 [label="_schema = Constants.DefaultSchema", span="35-35", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_9 [label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="36-36", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="Client.feature.cs"];
m0_10 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="26-26", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Client.feature.cs"];
m0_14 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", file="Client.feature.cs"];
m2_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ClientJobDescriptor.cs"];
m2_17 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ClientJobDescriptor.cs"];
m2_14 [label="Hangfire.Server.BackgroundProcessContext", span="", cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ClientJobDescriptor.cs"];
m2_15 [label="CancellationToken.WaitHandle.WaitOne(timeout)", span="59-59", cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_16 [label="Exit Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57", cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ClientJobDescriptor.cs"];
m2_0 [label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs"];
m2_1 [label="serverId == null", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_3 [label="storage == null", span="32-32", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_5 [label="properties == null", span="33-33", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs"];
m2_7 [label="ServerId = serverId", span="35-35", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_8 [label="Storage = storage", span="36-36", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs", color=green, community=0];
m2_9 [label="Properties = new Dictionary<string, object>(properties, StringComparer.OrdinalIgnoreCase)", span="37-37", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_10 [label="CancellationToken = cancellationToken", span="38-38", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=green, community=0, file="ClientJobDescriptor.cs"];
m2_2 [label="throw new ArgumentNullException(''serverId'');", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_4 [label="throw new ArgumentNullException(''storage'');", span="32-32", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_6 [label="throw new ArgumentNullException(''properties'');", span="33-33", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs"];
m2_11 [label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="ClientJobDescriptor.cs"];
m2_13 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="ClientJobDescriptor.cs"];
m2_18 [label="Hangfire.Server.BackgroundProcessContext", span="", file="ClientJobDescriptor.cs"];
m4_63 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DequeuedJobsWatcher.cs"];
m4_362 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="DequeuedJobsWatcher.cs"];
m4_81 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="DequeuedJobsWatcher.cs"];
m4_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="DequeuedJobsWatcher.cs"];
m4_1 [label="ServerName = serverName", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="DequeuedJobsWatcher.cs"];
m4_2 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="DequeuedJobsWatcher.cs"];
m4_3 [label="Entry HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="DequeuedJobsWatcher.cs"];
m4_137 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="544-544", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs"];
m4_366 [label="return UseConnection<JobList<FetchedJobDto>>(connection =>\r\n            {\r\n\r\n                const string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null'';\r\n\r\n                var jobs = connection.Query<SqlJob>(\r\n                    fetchedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList();\r\n\r\n                var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count);\r\n\r\n                foreach (var job in jobs)\r\n                {\r\n                    result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                        job.Id.ToString(),\r\n                        new FetchedJobDto\r\n                        {\r\n                            Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                            State = job.StateName,\r\n                            FetchedAt = job.FetchedAt\r\n                        }));\r\n                }\r\n\r\n                return new JobList<FetchedJobDto>(result);\r\n            });", span="546-576", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs"];
m4_367 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="544-544", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs"];
m4_363 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DequeuedJobsWatcher.cs"];
m4_35 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="DequeuedJobsWatcher.cs"];
m4_180 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="288-288", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DequeuedJobsWatcher.cs"];
m4_181 [label="return UseConnection<StatisticsDto>(connection =>\r\n            {\r\n                const string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n'';\r\n\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count);\r\n\r\n                    Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0;\r\n\r\n                    stats.Enqueued = getCountIfExists(EnqueuedState.StateName);\r\n                    stats.Failed = getCountIfExists(FailedState.StateName);\r\n                    stats.Processing = getCountIfExists(ProcessingState.StateName);\r\n                    stats.Scheduled = getCountIfExists(ScheduledState.StateName);\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n\r\n                stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count();\r\n\r\n                return stats;\r\n            });", span="290-327", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DequeuedJobsWatcher.cs"];
m4_182 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="288-288", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="DequeuedJobsWatcher.cs"];
m4_33 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="DequeuedJobsWatcher.cs"];
m4_47 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="105-105", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="DequeuedJobsWatcher.cs"];
m4_48 [label="return GetTimelineStats(''failed'');", span="107-107", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="DequeuedJobsWatcher.cs"];
m4_49 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="105-105", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="DequeuedJobsWatcher.cs"];
m4_73 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="DequeuedJobsWatcher.cs"];
m4_316 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="DequeuedJobsWatcher.cs"];
m4_148 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="424-424", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_307 [label="var connection = new SqlConnection(_connectionString)", span="427-427", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_306 [label="var transaction = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="426-426", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_308 [label="connection.Open()", span="429-429", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_309 [label="var result = action(connection)", span="431-431", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_310 [label="transaction.Complete()", span="433-433", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_311 [label="return result;", span="435-435", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_312 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="424-424", cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="DequeuedJobsWatcher.cs"];
m4_315 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="DequeuedJobsWatcher.cs"];
m4_219 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="DequeuedJobsWatcher.cs"];
m4_141 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="330-330", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DequeuedJobsWatcher.cs"];
m4_220 [label="return UseConnection<Dictionary<DateTime, long>>(connection =>\r\n            {\r\n                var endDate = DateTime.UtcNow;\r\n                var dates = new List<DateTime>();\r\n                for (var i = 0; i < 24; i++)\r\n                {\r\n                    dates.Add(endDate);\r\n                    endDate = endDate.AddHours(-1);\r\n                }\r\n\r\n                var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList();\r\n\r\n                const string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys'';\r\n\r\n                var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count);\r\n\r\n                foreach (var key in keys)\r\n                {\r\n                    if (!valuesMap.ContainsKey(key)) valuesMap.Add(key, 0);\r\n                }\r\n\r\n                var result = new Dictionary<DateTime, long>();\r\n                for (var i = 0; i < dates.Count; i++)\r\n                {\r\n                    var value = valuesMap[valuesMap.Keys.ElementAt(i)];\r\n                    result.Add(dates[i], value);\r\n                }\r\n\r\n                return result;\r\n            });", span="332-367", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DequeuedJobsWatcher.cs"];
m4_221 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="330-330", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="DequeuedJobsWatcher.cs"];
m4_378 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="DequeuedJobsWatcher.cs"];
m4_145 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="239-239", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DequeuedJobsWatcher.cs"];
m4_146 [label="return UseConnection<JobDetailsDto>(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="241-275", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DequeuedJobsWatcher.cs"];
m4_147 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="239-239", cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="DequeuedJobsWatcher.cs"];
m4_204 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="DequeuedJobsWatcher.cs"];
m4_325 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="DequeuedJobsWatcher.cs"];
m4_23 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="69-69", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="DequeuedJobsWatcher.cs"];
m4_24 [label="return GetNumberOfJobsByStateName(ProcessingState.StateName);", span="71-71", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="DequeuedJobsWatcher.cs"];
m4_25 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="69-69", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="DequeuedJobsWatcher.cs"];
m4_138 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="229-229", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DequeuedJobsWatcher.cs"];
m4_139 [label="return GetHourlyTimelineStats(''succeeded'');", span="231-231", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DequeuedJobsWatcher.cs"];
m4_140 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="229-229", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="DequeuedJobsWatcher.cs"];
m4_136 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_201 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="DequeuedJobsWatcher.cs"];
m4_345 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="DequeuedJobsWatcher.cs"];
m4_74 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_75 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="156-167", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_76 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="154-154", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_66 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="137-137", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_67 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="139-151", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_68 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="137-137", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_215 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="DequeuedJobsWatcher.cs"];
m4_42 [label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="DequeuedJobsWatcher.cs"];
m4_109 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="DequeuedJobsWatcher.cs"];
m4_43 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="100-100", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DequeuedJobsWatcher.cs"];
m4_44 [label="return GetTimelineStats(''succeeded'');", span="102-102", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DequeuedJobsWatcher.cs"];
m4_45 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="100-100", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="DequeuedJobsWatcher.cs"];
m4_344 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="DequeuedJobsWatcher.cs"];
m4_15 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_16 [label="var queueApi = GetQueueApi(queue)", span="58-58", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_17 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="59-59", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_18 [label="return counters.FetchedCount ?? 0;", span="61-61", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_19 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DequeuedJobsWatcher.cs"];
m4_200 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="DequeuedJobsWatcher.cs"];
m4_202 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DequeuedJobsWatcher.cs"];
m4_364 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="DequeuedJobsWatcher.cs"];
m4_20 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="DequeuedJobsWatcher.cs"];
m4_21 [label="return GetNumberOfJobsByStateName(FailedState.StateName);", span="66-66", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="DequeuedJobsWatcher.cs"];
m4_22 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="DequeuedJobsWatcher.cs"];
m4_64 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="DequeuedJobsWatcher.cs"];
m4_353 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="526-526", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_358 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="537-538", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_354 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="530-530", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_355 [label=jobs, span="532-532", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_357 [label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="535-535", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_359 [label="return new JobList<TDto>(result);", span="541-541", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_356 [label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="534-534", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_360 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="526-526", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_313 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="DequeuedJobsWatcher.cs"];
m4_104 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="DequeuedJobsWatcher.cs"];
m4_284 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="DequeuedJobsWatcher.cs"];
m4_162 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="DequeuedJobsWatcher.cs"];
m4_305 [label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="DequeuedJobsWatcher.cs"];
m4_13 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="DequeuedJobsWatcher.cs"];
m4_298 [label="return UseConnection<IPersistentJobQueueMonitoringApi>(connection =>\r\n            {\r\n                var provider = _queueProviders.GetProvider(queueName);\r\n                var monitoringApi = provider.GetJobQueueMonitoringApi(connection);\r\n\r\n                return monitoringApi;\r\n            });", span="415-421", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="DequeuedJobsWatcher.cs"];
m4_299 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="413-413", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="DequeuedJobsWatcher.cs"];
m4_88 [label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="DequeuedJobsWatcher.cs"];
m4_212 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_54 [label="Entry lambda expression", span="112-134", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_55 [label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="114-116", cluster="lambda expression", color=green, community=0, file="DequeuedJobsWatcher.cs"];
m4_56 [label="var result = new List<ServerDto>()", span="118-118", cluster="lambda expression", color=green, community=0, file="DequeuedJobsWatcher.cs"];
m4_57 [label=servers, span="120-120", cluster="lambda expression", color=green, community=0, file="DequeuedJobsWatcher.cs"];
m4_59 [label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="123-130", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_60 [label="return result;", span="133-133", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_58 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="122-122", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_93 [label="var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray()", span="187-191", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_98 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(enqueuedJobIds)\r\n                    })", span="200-206", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_157 [label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="267-273", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_197 [label="stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count()", span="322-324", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_301 [label="var provider = _queueProviders.GetProvider(queueName)", span="417-417", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_323 [label="return DeserializeJobs(\r\n                    jobs,\r\n                    (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = sqlJob.StateName,\r\n                        EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                            ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                            : null\r\n                    });", span="456-465", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_351 [label="return DeserializeJobs(jobs, selector);", span="522-522", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_373 [label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                        job.Id.ToString(),\r\n                        new FetchedJobDto\r\n                        {\r\n                            Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                            State = job.StateName,\r\n                            FetchedAt = job.FetchedAt\r\n                        }))", span="565-572", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_152 [label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="251-251", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_155 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="254-254", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_156 [label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList()", span="255-265", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_171 [label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            }", span="258-264", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_193 [label="stats.Servers = multi.Read<int>().Single()", span="314-314", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_194 [label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="316-316", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_195 [label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", span="317-317", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_196 [label="stats.Recurring = multi.Read<int>().Single()", span="319-319", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_322 [label="var jobs = connection.Query<SqlJob>(\r\n                    enqueuedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList()", span="451-454", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_334 [label="var count = connection.Query<int>(\r\n                     sqlQuery,\r\n                     new { state = stateName })\r\n                     .Single()", span="476-479", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_350 [label="var jobs = connection.Query<SqlJob>(\r\n                            jobsSql,\r\n                            new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                            .ToList()", span="517-520", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_370 [label="var jobs = connection.Query<SqlJob>(\r\n                    fetchedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList()", span="556-559", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_61 [label="Exit lambda expression", span="112-134", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_230 [label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="342-342", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_270 [label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="385-385", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_269 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="384-384", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_224 [label="var dates = new List<DateTime>()", span="335-335", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_265 [label="var dates = new List<DateTime>()", span="376-376", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_30 [label="Entry lambda expression", span="79-84", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_39 [label="Entry lambda expression", span="92-97", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_69 [label="Entry lambda expression", span="143-151", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_77 [label="Entry lambda expression", span="160-167", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_85 [label="Entry lambda expression", span="176-180", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_92 [label="Entry lambda expression", span="185-210", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_94 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="193-193", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_110 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_114 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_118 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_121 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_95 [label=tuples, span="195-195", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_96 [label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="197-197", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_97 [label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="198-198", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_149 [label="Entry lambda expression", span="241-275", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_158 [label="Exit lambda expression", span="241-275", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_183 [label="Entry lambda expression", span="290-327", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_185 [label="var stats = new StatisticsDto()", span="302-302", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_198 [label="return stats;", span="326-326", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_216 [label="Entry lambda expression", span="323-323", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_222 [label="Entry lambda expression", span="332-367", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_262 [label="Entry lambda expression", span="372-410", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_300 [label="Entry lambda expression", span="415-421", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_302 [label="var monitoringApi = provider.GetJobQueueMonitoringApi(connection)", span="418-418", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_320 [label="Entry lambda expression", span="441-466", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_324 [label="Exit lambda expression", span="441-466", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_326 [label="Entry lambda expression", span="458-465", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_332 [label="Entry lambda expression", span="471-482", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_348 [label="Entry lambda expression", span="506-523", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_352 [label="Exit lambda expression", span="506-523", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_368 [label="Entry lambda expression", span="546-576", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_371 [label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="561-561", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_372 [label=jobs, span="563-563", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_151 [label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="249-249", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_153 [label="job == null", span="252-252", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_164 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_167 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_170 [label="Entry lambda expression", span="258-264", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_172 [label="Exit lambda expression", span="258-264", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_186 [label="var multi = connection.QueryMultiple(sql)", span="303-303", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_192 [label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="312-312", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_321 [label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="444-449", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_333 [label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="473-474", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_335 [label="return count;", span="481-481", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_349 [label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="508-515", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_369 [label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="549-554", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_226 [label="i < 24", span="336-336", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_231 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="344-347", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_249 [label="Entry lambda expression", span="342-342", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_232 [label="var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="349-352", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_233 [label=keys, span="354-354", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_271 [label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="387-390", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_288 [label="Entry lambda expression", span="385-385", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_272 [label="var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="392-395", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_273 [label=keys, span="397-397", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_266 [label="startDate <= endDate", span="378-378", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_285 [label="Entry lambda expression", span="384-384", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_278 [label="i < stringDates.Count", span="403-403", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_223 [label="var endDate = DateTime.UtcNow", span="334-334", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_225 [label="var i = 0", span="336-336", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_227 [label="dates.Add(endDate)", span="338-338", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_238 [label="i < dates.Count", span="360-360", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_240 [label="result.Add(dates[i], value)", span="363-363", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_264 [label="var startDate = endDate.AddDays(-7)", span="375-375", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_267 [label="dates.Add(endDate)", span="380-380", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_280 [label="result.Add(dates[i], value)", span="406-406", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_32 [label="Exit lambda expression", span="79-84", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_31 [label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="79-84", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_41 [label="Exit lambda expression", span="92-97", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_40 [label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="92-97", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_289 [label="String.Format(''stats:{0}:{1}'', type, x)", span="385-385", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_71 [label="Exit lambda expression", span="143-151", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_70 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="143-151", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_79 [label="Exit lambda expression", span="160-167", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_78 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="160-167", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_87 [label="Exit lambda expression", span="176-180", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_86 [label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                }", span="176-180", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_100 [label="Exit lambda expression", span="185-210", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_111 [label="x.GetJobQueueMonitoringApi(connection)", span="188-188", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_99 [label="return result;", span="209-209", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_112 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_116 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_115 [label="x.GetQueues()", span="189-189", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_120 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_119 [label="new { Monitoring = monitoring, Queue = queue }", span="189-189", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_123 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_122 [label="x.Queue", span="190-190", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_250 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="342-342", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_150 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="244-247", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_154 [label="return null;", span="252-252", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_199 [label="Exit lambda expression", span="290-327", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_184 [label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="292-300", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_217 [label="x.GetJobQueueMonitoringApi(connection).GetQueues()", span="323-323", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_189 [label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="309-309", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_190 [label="stats.Failed = getCountIfExists(FailedState.StateName)", span="310-310", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_191 [label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="311-311", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_218 [label="Exit lambda expression", span="323-323", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_243 [label="Exit lambda expression", span="332-367", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_283 [label="Exit lambda expression", span="372-410", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_263 [label="var endDate = DateTime.UtcNow.Date", span="374-374", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_304 [label="Exit lambda expression", span="415-421", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_303 [label="return monitoringApi;", span="420-420", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_328 [label="Exit lambda expression", span="458-465", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_327 [label="new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = sqlJob.StateName,\r\n                        EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                            ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                            : null\r\n                    }", span="458-465", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_336 [label="Exit lambda expression", span="471-482", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_375 [label="Exit lambda expression", span="546-576", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_374 [label="return new JobList<FetchedJobDto>(result);", span="575-575", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_187 [label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="305-305", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_166 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_165 [label="x.Name", span="254-254", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_169 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_168 [label="x.Value", span="254-254", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_188 [label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="307-307", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_229 [label="i++", span="336-336", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_251 [label="Exit lambda expression", span="342-342", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_254 [label="Entry lambda expression", span="352-352", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_257 [label="Entry lambda expression", span="352-352", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_234 [label="!valuesMap.ContainsKey(key)", span="356-356", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_235 [label="valuesMap.Add(key, 0)", span="356-356", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_239 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="362-362", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_236 [label="var result = new Dictionary<DateTime, long>()", span="359-359", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_290 [label="Exit lambda expression", span="385-385", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_292 [label="Entry lambda expression", span="395-395", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_295 [label="Entry lambda expression", span="395-395", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_274 [label="!valuesMap.ContainsKey(key)", span="399-399", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_275 [label="valuesMap.Add(key, 0)", span="399-399", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_279 [label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="405-405", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_276 [label="var result = new Dictionary<DateTime, long>()", span="402-402", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_268 [label="endDate = endDate.AddDays(-1)", span="381-381", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_287 [label="Exit lambda expression", span="384-384", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_286 [label="x.ToString(''yyyy-MM-dd'')", span="384-384", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_277 [label="var i = 0", span="403-403", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_281 [label="i++", span="403-403", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_282 [label="return result;", span="409-409", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_228 [label="endDate = endDate.AddHours(-1)", span="339-339", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_237 [label="var i = 0", span="360-360", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_241 [label="i++", span="360-360", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_242 [label="return result;", span="366-366", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_206 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_209 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_213 [label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="307-307", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_256 [label="Exit lambda expression", span="352-352", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_255 [label="(string)x.Key", span="352-352", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_259 [label="Exit lambda expression", span="352-352", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_258 [label="(long)x.Count", span="352-352", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_294 [label="Exit lambda expression", span="395-395", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_293 [label="(string)x.Key", span="395-395", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_297 [label="Exit lambda expression", span="395-395", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_296 [label="(long)x.Count", span="395-395", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_208 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_207 [label="x.State", span="305-305", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_211 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_210 [label="x.Count", span="305-305", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_214 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="DequeuedJobsWatcher.cs"];
m4_108 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="DequeuedJobsWatcher.cs"];
m4_65 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DequeuedJobsWatcher.cs"];
m4_62 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="DequeuedJobsWatcher.cs"];
m4_291 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="DequeuedJobsWatcher.cs"];
m4_29 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="500-500", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_346 [label="return UseConnection<JobList<TDto>>(connection =>\r\n            {\r\n                const string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n'';\r\n\r\n                var jobs = connection.Query<SqlJob>(\r\n                            jobsSql,\r\n                            new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                            .ToList();\r\n\r\n                return DeserializeJobs(jobs, selector);\r\n            });", span="506-523", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_347 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="500-500", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="DequeuedJobsWatcher.cs"];
m4_379 [label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="DequeuedJobsWatcher.cs"];
m4_252 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="DequeuedJobsWatcher.cs"];
m4_131 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="221-221", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_132 [label="var queueApi = GetQueueApi(queue)", span="223-223", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_134 [label="return FetchedJobs(fetchedJobIds);", span="226-226", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_133 [label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="224-224", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_135 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="221-221", cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_105 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="DequeuedJobsWatcher.cs"];
m4_248 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="DequeuedJobsWatcher.cs"];
m4_130 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs"];
m4_318 [label="return UseConnection<JobList<EnqueuedJobDto>>(connection =>\r\n            {\r\n\r\n                const string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null'';\r\n\r\n                var jobs = connection.Query<SqlJob>(\r\n                    enqueuedJobsSql,\r\n                    new { jobIds = jobIds })\r\n                    .ToList();\r\n\r\n                return DeserializeJobs(\r\n                    jobs,\r\n                    (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = sqlJob.StateName,\r\n                        EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                            ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                            : null\r\n                    });\r\n            });", span="441-466", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs"];
m4_319 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="439-439", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="DequeuedJobsWatcher.cs"];
m4_377 [label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span="", cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="DequeuedJobsWatcher.cs"];
m4_245 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="DequeuedJobsWatcher.cs"];
m4_26 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="74-74", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_27 [label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="76-84", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_28 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="74-74", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_246 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DequeuedJobsWatcher.cs"];
m4_317 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="DequeuedJobsWatcher.cs"];
m4_314 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="DequeuedJobsWatcher.cs"];
m4_376 [label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="DequeuedJobsWatcher.cs"];
m4_7 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="469-469", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DequeuedJobsWatcher.cs"];
m4_244 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="DequeuedJobsWatcher.cs"];
m4_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ServerName'', ServerName }\r\n                };", span="37-41", cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="DequeuedJobsWatcher.cs"];
m4_5 [label="Exit HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="DequeuedJobsWatcher.cs"];
m4_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcher.cs"];
m4_159 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="DequeuedJobsWatcher.cs"];
m4_80 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="DequeuedJobsWatcher.cs"];
m4_36 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="87-87", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_37 [label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="89-97", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_38 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="87-87", cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_177 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="283-283", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="DequeuedJobsWatcher.cs"];
m4_178 [label="return GetNumberOfJobsByStateName(DeletedState.StateName);", span="285-285", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="DequeuedJobsWatcher.cs"];
m4_179 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="283-283", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="DequeuedJobsWatcher.cs"];
m4_124 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="213-213", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_125 [label="var queueApi = GetQueueApi(queue)", span="215-215", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_127 [label="return EnqueuedJobs(enqueuedJobIds);", span="218-218", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_126 [label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="216-216", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_128 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="213-213", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_50 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DequeuedJobsWatcher.cs"];
m4_51 [label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="112-134", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="DequeuedJobsWatcher.cs"];
m4_52 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="110-110", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="DequeuedJobsWatcher.cs"];
m4_253 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="DequeuedJobsWatcher.cs"];
m4_102 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="DequeuedJobsWatcher.cs"];
m4_161 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="DequeuedJobsWatcher.cs"];
m4_174 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="278-278", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DequeuedJobsWatcher.cs"];
m4_175 [label="return GetNumberOfJobsByStateName(SucceededState.StateName);", span="280-280", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DequeuedJobsWatcher.cs"];
m4_176 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="278-278", cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="DequeuedJobsWatcher.cs"];
m4_337 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="485-485", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs"];
m4_338 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="487-487", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs"];
m4_339 [label="data.Arguments = arguments", span="488-488", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs"];
m4_340 [label="return data.Deserialize();", span="492-492", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs"];
m4_342 [label="return null;", span="496-496", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs"];
m4_341 [label=JobLoadException, span="494-494", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs"];
m4_343 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="485-485", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="DequeuedJobsWatcher.cs"];
m4_329 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DequeuedJobsWatcher.cs"];
m4_72 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="DequeuedJobsWatcher.cs"];
m4_53 [label="Entry Unk.>", span="", cluster="Unk.>", file="DequeuedJobsWatcher.cs"];
m4_14 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_106 [label="Entry Unk.GetEnqueuedJobIds", span="", cluster="Unk.GetEnqueuedJobIds", file="DequeuedJobsWatcher.cs"];
m4_103 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="DequeuedJobsWatcher.cs"];
m4_107 [label="Entry Unk.GetEnqueuedAndFetchedCount", span="", cluster="Unk.GetEnqueuedAndFetchedCount", file="DequeuedJobsWatcher.cs"];
m4_117 [label="Entry Unk.GetQueues", span="", cluster="Unk.GetQueues", file="DequeuedJobsWatcher.cs"];
m4_46 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="370-370", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DequeuedJobsWatcher.cs"];
m4_260 [label="return UseConnection<Dictionary<DateTime, long>>(connection =>\r\n            {\r\n                var endDate = DateTime.UtcNow.Date;\r\n                var startDate = endDate.AddDays(-7);\r\n                var dates = new List<DateTime>();\r\n\r\n                while (startDate <= endDate)\r\n                {\r\n                    dates.Add(endDate);\r\n                    endDate = endDate.AddDays(-1);\r\n                }\r\n\r\n                var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList();\r\n                var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList();\r\n\r\n                const string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys'';\r\n\r\n                var valuesMap = connection.Query(\r\n                    sqlQuery,\r\n                    new { keys = keys })\r\n                    .ToDictionary(x => (string)x.Key, x => (long)x.Count);\r\n\r\n                foreach (var key in keys)\r\n                {\r\n                    if (!valuesMap.ContainsKey(key)) valuesMap.Add(key, 0);\r\n                }\r\n\r\n                var result = new Dictionary<DateTime, long>();\r\n                for (var i = 0; i < stringDates.Count; i++)\r\n                {\r\n                    var value = valuesMap[valuesMap.Keys.ElementAt(i)];\r\n                    result.Add(dates[i], value);\r\n                }\r\n\r\n                return result;\r\n            });", span="372-410", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DequeuedJobsWatcher.cs"];
m4_261 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="370-370", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="DequeuedJobsWatcher.cs"];
m4_247 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcher.cs"];
m4_365 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="DequeuedJobsWatcher.cs"];
m4_82 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="170-170", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_83 [label="return GetJobs(\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                });", span="172-180", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_84 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="170-170", cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="DequeuedJobsWatcher.cs"];
m4_8 [label="HangFire.States.ProcessingState", span="", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_9 [label="var queueApi = GetQueueApi(queue)", span="50-50", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_10 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="51-51", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_11 [label="return counters.EnqueuedCount ?? 0;", span="53-53", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_12 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="48-48", cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="DequeuedJobsWatcher.cs"];
m4_142 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="234-234", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DequeuedJobsWatcher.cs"];
m4_143 [label="return GetHourlyTimelineStats(''failed'');", span="236-236", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DequeuedJobsWatcher.cs"];
m4_144 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="234-234", cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="DequeuedJobsWatcher.cs"];
m4_129 [label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23", cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="DequeuedJobsWatcher.cs"];
m4_205 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DequeuedJobsWatcher.cs"];
m4_101 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DequeuedJobsWatcher.cs"];
m4_113 [label="Entry Unk.GetJobQueueMonitoringApi", span="", cluster="Unk.GetJobQueueMonitoringApi", file="DequeuedJobsWatcher.cs"];
m4_173 [label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="DequeuedJobsWatcher.cs"];
m4_203 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="DequeuedJobsWatcher.cs"];
m4_361 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="DequeuedJobsWatcher.cs"];
m4_89 [label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="183-183", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DequeuedJobsWatcher.cs"];
m4_90 [label="return UseConnection<IList<QueueWithTopEnqueuedJobsDto>>(connection =>\r\n            {\r\n                var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray();\r\n\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length);\r\n\r\n                foreach (var tuple in tuples)\r\n                {\r\n                    var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5);\r\n                    var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue);\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(enqueuedJobIds)\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="185-210", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DequeuedJobsWatcher.cs"];
m4_91 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="183-183", cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="DequeuedJobsWatcher.cs"];
m4_330 [label="return UseConnection<long>(connection =>\r\n            {\r\n                const string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state'';\r\n\r\n                var count = connection.Query<int>(\r\n                     sqlQuery,\r\n                     new { state = stateName })\r\n                     .Single();\r\n\r\n                return count;\r\n            });", span="471-482", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DequeuedJobsWatcher.cs"];
m4_331 [label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="469-469", cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="DequeuedJobsWatcher.cs"];
m4_160 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="DequeuedJobsWatcher.cs"];
m4_163 [label="Entry Unk.DeserializeJob", span="", cluster="Unk.DeserializeJob", file="DequeuedJobsWatcher.cs"];
m4_380 [label="HangFire.SqlServer.SqlServerMonitoringApi", span="", file="DequeuedJobsWatcher.cs"];
m4_387 [label=string, span="", file="DequeuedJobsWatcher.cs"];
m4_393 [label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", span="", file="DequeuedJobsWatcher.cs"];
m4_388 [label="System.Collections.Generic.IEnumerable<int>", span="", file="DequeuedJobsWatcher.cs"];
m4_389 [label=string, span="", file="DequeuedJobsWatcher.cs"];
m4_390 [label=int, span="", file="DequeuedJobsWatcher.cs"];
m4_391 [label=int, span="", file="DequeuedJobsWatcher.cs"];
m4_392 [label=string, span="", file="DequeuedJobsWatcher.cs"];
m4_394 [label="System.Collections.Generic.IEnumerable<int>", span="", file="DequeuedJobsWatcher.cs"];
m4_385 [label=string, span="", file="DequeuedJobsWatcher.cs"];
m4_386 [label=string, span="", file="DequeuedJobsWatcher.cs"];
m4_382 [label=string, span="", file="DequeuedJobsWatcher.cs"];
m4_381 [label=SqlConnection, span="", file="DequeuedJobsWatcher.cs"];
m4_384 [label=SqlConnection, span="", file="DequeuedJobsWatcher.cs"];
m4_383 [label=countByStates, span="", file="DequeuedJobsWatcher.cs"];
m5_14 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="HangFireJobActivatorTests.cs"];
m5_13 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="HangFireJobActivatorTests.cs"];
m5_15 [label="Entry HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58", cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="HangFireJobActivatorTests.cs"];
m5_0 [label="Entry HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_1 [label="WriteLiteral(''\r\n'')", span="27-27", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_2 [label="WriteLiteral(''\r\n    <div class=\''btn-group pull-right paginator\''>\r\n'')", span="30-30", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_3 [label="new[] { 10, 20, 50, 100 }", span="35-35", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_4 [label="WriteLiteral(''            <a class=\''btn btn-sm btn-default '')", span="41-41", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_11 [label="WriteLiteral(''    </div>\r\n    <div class=\''btn-toolbar-spacer pull-right\''></div>\r\n    <div class'' +\r\n''=\''btn-toolbar-label btn-toolbar-label-sm pull-right\''>\r\n        Jobs per page:\r\n '' +\r\n''   </div>\r\n'')", span="81-83", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_5 [label="Write(count == _pager.RecordsPerPage ? ''active'' : null)", span="46-46", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_7 [label="Write(_pager.RecordsPerPageUrl(count))", span="56-56", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_9 [label="Write(count)", span="66-66", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_6 [label="WriteLiteral(''\'' \r\n                   href=\'''')", span="51-51", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_8 [label="WriteLiteral(''\''>'')", span="61-61", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_10 [label="WriteLiteral(''</a>    \r\n'')", span="71-71", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_12 [label="Exit HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="HangFireJobActivatorTests.cs"];
m5_16 [label="HangFire.Web.Pages.PerPageSelector", span="", file="HangFireJobActivatorTests.cs"];
m7_27 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobClient.cs"];
m7_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobClient.cs"];
m7_61 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="JobClient.cs"];
m7_37 [label="Entry IAppBuilder.UseHangfireDashboard(string)", span="98-98", cluster="IAppBuilder.UseHangfireDashboard(string)", file="JobClient.cs"];
m7_38 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="JobClient.cs"];
m7_39 [label="return builder.UseHangfireDashboard(pathMatch, new DashboardOptions());", span="102-102", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", color=green, community=0, file="JobClient.cs"];
m7_40 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="JobClient.cs"];
m7_66 [label="Entry System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", span="42-42", cluster="System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", file="JobClient.cs"];
m7_9 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_10 [label="builder == null", span="68-68", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_11 [label="throw new ArgumentNullException(''builder'');", span="68-68", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_12 [label="options == null", span="69-69", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_25 [label="return builder;", span="90-90", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_24 [label="token.Register(server.Dispose)", span="88-88", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_16 [label="var server = new BackgroundJobServer(options, storage)", span="72-72", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_19 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="76-76", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_21 [label="token = context.Get<CancellationToken>(''server.OnDispose'')", span="80-80", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_22 [label="token == default(CancellationToken)", span="83-83", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_18 [label="var context = new OwinContext(builder.Properties)", span="75-75", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_20 [label="token == default(CancellationToken)", span="77-77", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_23 [label="throw new InvalidOperationException(''Current OWIN environment does not contain an instance of the `CancellationToken` class under `host.OnAppDisposing` key.'');", span="85-85", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="JobClient.cs"];
m7_14 [label="storage == null", span="70-70", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_13 [label="throw new ArgumentNullException(''options'');", span="69-69", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_15 [label="throw new ArgumentNullException(''storage'');", span="70-70", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_17 [label="Servers.Add(server)", span="73-73", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_26 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_33 [label="Entry Unk.Register", span="", cluster="Unk.Register", file="JobClient.cs"];
m7_41 [label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23", cluster="Hangfire.DashboardOptions.DashboardOptions()", file="JobClient.cs"];
m7_47 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_49 [label="throw new ArgumentNullException(''builder'');", span="119-119", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_51 [label="throw new ArgumentNullException(''pathMatch'');", span="120-120", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_53 [label="throw new ArgumentNullException(''options'');", span="121-121", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_55 [label="throw new ArgumentNullException(''storage'');", span="122-122", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_48 [label="builder == null", span="119-119", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_50 [label="pathMatch == null", span="120-120", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_52 [label="options == null", span="121-121", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_54 [label="storage == null", span="122-122", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_58 [label="return builder;", span="130-130", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_56 [label="SignatureConversions.AddConversions(builder)", span="124-124", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_57 [label="builder.Map(pathMatch, subApp => subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes))", span="126-128", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_59 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_28 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="JobClient.cs"];
m7_34 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", file="JobClient.cs"];
m7_35 [label="return builder.UseHangfireDashboard(''/hangfire'');", span="95-95", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", color=green, community=0, file="JobClient.cs"];
m7_36 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", file="JobClient.cs"];
m7_42 [label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", span="105-105", cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", file="JobClient.cs"];
m7_29 [label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="JobClient.cs"];
m7_62 [label="Entry lambda expression", span="126-128", cluster="lambda expression", file="JobClient.cs"];
m7_63 [label="subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes)", span="126-128", cluster="lambda expression", file="JobClient.cs"];
m7_64 [label="Exit lambda expression", span="126-128", cluster="lambda expression", file="JobClient.cs"];
m7_60 [label="Entry Unk.AddConversions", span="", cluster="Unk.AddConversions", file="JobClient.cs"];
m7_30 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="JobClient.cs"];
m7_65 [label="Entry Unk.UseOwin", span="", cluster="Unk.UseOwin", file="JobClient.cs"];
m7_32 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobClient.cs"];
m7_75 [label="Hangfire.DashboardOptions", span="", file="JobClient.cs"];
m7_76 [label="Hangfire.JobStorage", span="", file="JobClient.cs"];
m8_0 [label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4", cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobCreator.cs"];
m8_1 [label="Title = title", span="6-6", cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobCreator.cs"];
m8_2 [label="Exit Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4", cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobCreator.cs"];
m8_3 [label="Hangfire.Dashboard.Pages.LayoutPage", span="", file="JobCreator.cs"];
m9_0 [label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs"];
m9_1 [label="Performed = true", span="185-185", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs"];
m9_2 [label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs"];
m9_7 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs"];
m9_8 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs"];
m9_3 [label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m9_4 [label="A = a", span="196-196", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m9_5 [label="B = b", span="197-197", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m9_6 [label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m9_9 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs"];
m9_10 [label="Disposed = true", span="211-211", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs"];
m9_11 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs"];
m9_12 [label="HangFire.Tests.JobInvokerTests.CorrectJob", span="", file="JobInvokerTests.cs"];
m9_13 [label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span="", file="JobInvokerTests.cs"];
m9_14 [label="HangFire.Tests.JobInvokerTests.DisposableJob", span="", file="JobInvokerTests.cs"];
m10_42 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobState.cs"];
m10_112 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="JobState.cs"];
m10_48 [label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="JobState.cs"];
m10_49 [label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", span="126-126", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", file="JobState.cs"];
m10_84 [label="var transaction = redis.CreateTransaction()", span="129-129", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_85 [label="AppendHistory(transaction, jobId, state, appendToJob)", span="131-131", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_86 [label="transaction.Commit()", span="132-132", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_87 [label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", span="126-126", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", file="JobState.cs"];
m10_107 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="JobState.cs"];
m10_46 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JobState.cs"];
m10_77 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="JobState.cs"];
m10_0 [label="Entry HangFire.States.JobState.JobState(string)", span="10-10", cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs"];
m10_1 [label="Reason = reason", span="12-12", cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs"];
m10_2 [label="Exit HangFire.States.JobState.JobState(string)", span="10-10", cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs"];
m10_103 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="JobState.cs"];
m10_45 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobState.cs"];
m10_111 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)", file="JobState.cs"];
m10_99 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobState.cs"];
m10_83 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="JobState.cs"];
m10_75 [label="Entry Unk.OnStateUnapplied", span="", cluster="Unk.OnStateUnapplied", file="JobState.cs"];
m10_17 [label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="37-37", cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="JobState.cs"];
m10_18 [label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="39-39", cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="JobState.cs"];
m10_59 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId)))", span="104-105", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=1, file="JobState.cs"];
m10_50 [label="Entry HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="81-81", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs"];
m10_51 [label="var oldState = redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId), ''State'')", span="86-87", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=1, file="JobState.cs"];
m10_52 [label="allowedStates.Length > 0 && !allowedStates.Contains(oldState)", span="89-89", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_54 [label="var transaction = redis.CreateTransaction()", span="94-94", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_58 [label="descriptor.Unapply(transaction, jobId)", span="101-101", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_60 [label=filters, span="107-107", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_61 [label="filter.OnStateUnapplied(transaction, jobId, oldState)", span="109-109", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_62 [label="AppendHistory(transaction, jobId, state, true)", span="113-113", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_63 [label="state.Apply(transaction, jobId)", span="115-115", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_64 [label=filters, span="117-117", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_65 [label="filter.OnStateApplied(transaction, jobId, state)", span="119-119", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_55 [label="!String.IsNullOrEmpty(oldState)", span="96-96", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_56 [label="var descriptor = GetDescriptor(oldState)", span="98-98", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_53 [label="return false;", span="91-91", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_66 [label="return transaction.Commit();", span="122-122", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_57 [label="descriptor != null", span="99-99", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs"];
m10_67 [label="Exit HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="81-81", cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs"];
m10_93 [label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="146-149", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=1, file="JobState.cs"];
m10_88 [label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="136-136", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="JobState.cs"];
m10_89 [label="var properties = state.GetProperties()", span="139-139", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_91 [label="properties.Add(''State'', state.StateName)", span="142-142", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_92 [label=appendToJob, span="144-144", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_94 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="151-153", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=1, file="JobState.cs"];
m10_95 [label="properties.Add(''Reason'', state.Reason)", span="156-156", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_97 [label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties)))", span="159-161", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=1, file="JobState.cs"];
m10_90 [label="var now = DateTime.UtcNow", span="140-140", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_96 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="157-157", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs"];
m10_98 [label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="136-136", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="JobState.cs"];
m10_78 [label="Entry Unk.OnStateApplied", span="", cluster="Unk.OnStateApplied", file="JobState.cs"];
m10_72 [label="Entry Unk.GetDescriptor", span="", cluster="Unk.GetDescriptor", file="JobState.cs"];
m10_8 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobState.cs"];
m10_15 [label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41", cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="JobState.cs"];
m10_16 [label="Entry HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="39-39", cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs"];
m10_20 [label="Descriptors.Add(stateName, descriptor)", span="42-42", cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", color=red, community=0, file="JobState.cs"];
m10_21 [label="Exit HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="39-39", cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs"];
m10_44 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobState.cs"];
m10_73 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="JobState.cs"];
m10_26 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobState.cs"];
m10_43 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobState.cs"];
m10_27 [label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="JobState.cs"];
m10_28 [label="redis == null", span="54-54", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_30 [label="state == null", span="55-55", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_33 [label="redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', jobId), TimeSpan.FromMinutes(1))", span="60-61", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=1, file="JobState.cs"];
m10_35 [label="var oldState = state", span="65-65", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_36 [label="state = filter.OnStateChanged(redis, jobId, oldState)", span="66-66", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_38 [label="AppendHistory(redis, jobId, oldState, false)", span="70-70", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_40 [label="return ApplyState(redis, jobId, state, appliedFilters, allowedStates);", span="77-77", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_29 [label="throw new ArgumentNullException(''redis'');", span="54-54", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_31 [label="throw new ArgumentNullException(''state'');", span="55-55", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_32 [label="var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="57-58", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=1, file="JobState.cs"];
m10_34 [label=changingFilters, span="63-63", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_39 [label="var appliedFilters = GlobalJobFilters.Filters\r\n                    .OfType<IStateAppliedFilter>().ToList()", span="74-75", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=1, file="JobState.cs"];
m10_37 [label="oldState != state", span="68-68", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs"];
m10_41 [label="Exit HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="JobState.cs"];
m10_9 [label="Entry HangFire.States.JobState.JobState()", span="31-31", cluster="HangFire.States.JobState.JobState()", file="JobState.cs"];
m10_10 [label="RegisterDescriptor(FailedState.Name, new FailedState.Descriptor())", span="33-33", cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs"];
m10_11 [label="RegisterDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="34-34", cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs"];
m10_12 [label="RegisterDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="35-35", cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs"];
m10_13 [label="RegisterDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="36-36", cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs"];
m10_14 [label="Exit HangFire.States.JobState.JobState()", span="31-31", cluster="HangFire.States.JobState.JobState()", file="JobState.cs"];
m10_3 [label="Entry HangFire.States.JobState.Apply(IRedisTransaction, string)", span="19-19", cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="JobState.cs"];
m10_4 [label="Exit HangFire.States.JobState.Apply(IRedisTransaction, string)", span="19-19", cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="JobState.cs"];
m10_108 [label="Entry lambda expression", span="159-161", cluster="lambda expression", file="JobState.cs"];
m10_81 [label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId))", span="104-105", cluster="lambda expression", color=red, community=1, file="JobState.cs"];
m10_80 [label="Entry lambda expression", span="104-105", cluster="lambda expression", file="JobState.cs"];
m10_82 [label="Exit lambda expression", span="104-105", cluster="lambda expression", file="JobState.cs"];
m10_101 [label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="146-149", cluster="lambda expression", color=red, community=1, file="JobState.cs"];
m10_105 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="151-153", cluster="lambda expression", color=red, community=1, file="JobState.cs"];
m10_109 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties))", span="159-161", cluster="lambda expression", color=red, community=1, file="JobState.cs"];
m10_100 [label="Entry lambda expression", span="146-149", cluster="lambda expression", file="JobState.cs"];
m10_104 [label="Entry lambda expression", span="151-153", cluster="lambda expression", file="JobState.cs"];
m10_102 [label="Exit lambda expression", span="146-149", cluster="lambda expression", file="JobState.cs"];
m10_106 [label="Exit lambda expression", span="151-153", cluster="lambda expression", file="JobState.cs"];
m10_110 [label="Exit lambda expression", span="159-161", cluster="lambda expression", file="JobState.cs"];
m10_69 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="JobState.cs"];
m10_68 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="JobState.cs"];
m10_79 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobState.cs"];
m10_71 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="JobState.cs"];
m10_19 [label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49", cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="JobState.cs"];
m10_23 [label="Entry HangFire.States.JobState.GetDescriptor(string)", span="45-45", cluster="HangFire.States.JobState.GetDescriptor(string)", file="JobState.cs"];
m10_24 [label="return Descriptors.ContainsKey(stateName) ? Descriptors[stateName] : null;", span="48-48", cluster="HangFire.States.JobState.GetDescriptor(string)", color=red, community=0, file="JobState.cs"];
m10_25 [label="Exit HangFire.States.JobState.GetDescriptor(string)", span="45-45", cluster="HangFire.States.JobState.GetDescriptor(string)", file="JobState.cs"];
m10_74 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobState.cs"];
m10_22 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobState.cs"];
m10_76 [label="Entry Unk.AppendHistory", span="", cluster="Unk.AppendHistory", file="JobState.cs"];
m10_47 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="JobState.cs"];
m10_70 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="JobState.cs"];
m10_5 [label="Entry HangFire.States.JobState.GetProperties()", span="22-22", cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs"];
m10_6 [label="return new Dictionary<string, string>();", span="24-24", cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs"];
m10_7 [label="Exit HangFire.States.JobState.GetProperties()", span="22-22", cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs"];
m10_113 [label="HangFire.States.JobState", span="", file="JobState.cs"];
m10_114 [label=string, span="", file="JobState.cs"];
m10_115 [label=string, span="", file="JobState.cs"];
m10_116 [label="HangFire.States.JobState", span="", file="JobState.cs"];
m10_117 [label=properties, span="", file="JobState.cs"];
m12_8 [label="return Async(jobType, null);", span="24-24", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m12_9 [label="Exit HangFire.Perform.Async(System.Type)", span="22-22", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m12_10 [label="var client = new JobClient(RedisFactory.PooledManager)", span="29-29", cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", color=red, community=0];
m12_11 [label="return client.Async(jobType, args);", span="31-31", cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", color=red, community=0];
m12_18 [label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = queues\r\n            }", span="66-69", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="Perform.cs", color=green, community=0];
m12_19 [label="configuration.UseServer(() => new BackgroundJobServer(options))", span="71-71", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="Perform.cs"];
m12_20 [label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="62-62", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="Perform.cs"];
m12_16 [label="return In<TJob>(interval, null);", span="39-39", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs"];
m12_6 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="Perform.cs"];
m12_12 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="Perform.cs"];
m12_7 [label="Entry HangFire.Perform.Async(System.Type)", span="22-22", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m12_0 [label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="29-29", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="Perform.cs"];
m12_1 [label="configuration.UseServer(() => new BackgroundJobServer())", span="31-31", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="Perform.cs"];
m12_2 [label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="29-29", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="Perform.cs"];
m12_3 [label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81", cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="Perform.cs"];
m12_4 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="Perform.cs"];
m12_5 [label="new BackgroundJobServer()", span="31-31", cluster="lambda expression", file="Perform.cs"];
m12_22 [label="new BackgroundJobServer(options)", span="71-71", cluster="lambda expression", file="Perform.cs"];
m12_23 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="Perform.cs"];
m12_24 [label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="84-84", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="Perform.cs"];
m12_14 [label="new BackgroundJobServer(options)", span="51-51", cluster="lambda expression", file="Perform.cs"];
m12_21 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="Perform.cs"];
m12_25 [label="var options = new BackgroundJobServerOptions\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues\r\n            }", span="89-93", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", color=red, community=0, file="Perform.cs"];
m12_26 [label="configuration.UseServer(() => new BackgroundJobServer(options))", span="95-95", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", color=red, community=0, file="Perform.cs"];
m12_27 [label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="84-84", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="Perform.cs"];
m12_13 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="Perform.cs"];
m12_31 [label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="106-106", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="Perform.cs"];
m12_32 [label="configuration.UseServer(() => new BackgroundJobServer(options))", span="110-110", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="Perform.cs"];
m12_33 [label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="106-106", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="Perform.cs"];
m12_37 [label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="121-121", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="Perform.cs"];
m12_38 [label="configuration.UseServer(() => new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage))", span="125-127", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="Perform.cs"];
m12_39 [label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="121-121", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="Perform.cs"];
m12_15 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="Perform.cs"];
m12_17 [label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="62-62", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="Perform.cs"];
m12_28 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="Perform.cs"];
m12_47 [label="Entry lambda expression", span="145-145", cluster="lambda expression", file="Perform.cs"];
m12_41 [label="new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage)", span="125-127", cluster="lambda expression", file="Perform.cs"];
m12_29 [label="new BackgroundJobServer(options)", span="95-95", cluster="lambda expression", file="Perform.cs"];
m12_40 [label="Entry lambda expression", span="125-127", cluster="lambda expression", file="Perform.cs"];
m12_42 [label="Exit lambda expression", span="125-127", cluster="lambda expression", file="Perform.cs"];
m12_35 [label="new BackgroundJobServer(options)", span="110-110", cluster="lambda expression", file="Perform.cs"];
m12_34 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="Perform.cs"];
m12_30 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="Perform.cs"];
m12_48 [label="new BackgroundJobServer(options, storage)", span="145-145", cluster="lambda expression", file="Perform.cs"];
m12_36 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="Perform.cs"];
m12_49 [label="Exit lambda expression", span="145-145", cluster="lambda expression", file="Perform.cs"];
m12_44 [label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="140-140", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="Perform.cs"];
m12_45 [label="configuration.UseServer(() => new BackgroundJobServer(options, storage))", span="145-145", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="Perform.cs"];
m12_46 [label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="140-140", cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="Perform.cs"];
m12_43 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="Perform.cs"];
m12_51 [label=options, span="", file="Perform.cs"];
m12_54 [label="Hangfire.JobStorage", span="", file="Perform.cs"];
m12_50 [label=options, span="", file="Perform.cs"];
m12_52 [label=options, span="", file="Perform.cs"];
m12_53 [label="Hangfire.BackgroundJobServerOptions", span="", file="Perform.cs"];
m12_55 [label="Hangfire.JobStorage", span="", file="Perform.cs"];
m12_56 [label="Hangfire.BackgroundJobServerOptions", span="", file="Perform.cs"];
m14_16 [label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="PrefetchJobFetcher.cs"];
m14_6 [label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12", cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="PrefetchJobFetcher.cs"];
m14_5 [label="Entry Mock<IBackgroundProcess>.cstr", span="", cluster="Mock<IBackgroundProcess>.cstr", file="PrefetchJobFetcher.cs"];
m14_22 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="PrefetchJobFetcher.cs"];
m14_78 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="89-89", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs"];
m14_79 [label="var wrapper = CreateWrapper()", span="91-91", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs"];
m14_80 [label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<InvalidOperationException>()", span="92-92", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs"];
m14_82 [label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_context.Object))", span="95-95", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs"];
m14_81 [label="_context.CancellationTokenSource.Cancel()", span="93-93", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs"];
m14_83 [label="_process.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()), Times.Once)", span="97-97", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs"];
m14_84 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="89-89", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="PrefetchJobFetcher.cs"];
m14_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PrefetchJobFetcher.cs"];
m14_85 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="PrefetchJobFetcher.cs"];
m14_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="PrefetchJobFetcher.cs"];
m14_95 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="101-101", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs"];
m14_96 [label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<OperationCanceledException>()", span="103-103", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs"];
m14_97 [label="var wrapper = CreateWrapper()", span="104-104", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs"];
m14_98 [label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_context.Object))", span="106-106", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs"];
m14_99 [label="_process.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()), Times.Once)", span="108-108", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs"];
m14_100 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="101-101", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="PrefetchJobFetcher.cs"];
m14_34 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", span="51-51", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs"];
m14_35 [label="var component = new Mock<IServerComponent>()", span="53-53", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs"];
m14_36 [label="var wrapper = new AutomaticRetryProcess(component.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs"];
m14_38 [label="component.Verify(x => x.Execute(_context.CancellationTokenSource.Token))", span="58-58", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs"];
m14_37 [label="wrapper.Execute(_context.Object)", span="56-56", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs"];
m14_39 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", span="51-51", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAComponent()", file="PrefetchJobFetcher.cs"];
m14_28 [label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="PrefetchJobFetcher.cs"];
m14_0 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", span="15-15", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs"];
m14_1 [label="_process = new Mock<IBackgroundProcess>()", span="17-17", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs"];
m14_2 [label="_maxRetryAttempts = 3", span="18-18", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs"];
m14_3 [label="_context = new BackgroundProcessContextMock()", span="19-19", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs"];
m14_4 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", span="15-15", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.AutomaticRetryProcessFacts()", file="PrefetchJobFetcher.cs"];
m14_21 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", span="111-111", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", file="PrefetchJobFetcher.cs"];
m14_110 [label="return new AutomaticRetryProcess(_process.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", span="113-117", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", file="PrefetchJobFetcher.cs"];
m14_111 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", span="111-111", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.CreateWrapper()", file="PrefetchJobFetcher.cs"];
m14_120 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="PrefetchJobFetcher.cs"];
m14_23 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", span="41-41", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs"];
m14_24 [label="var wrapper = CreateWrapper()", span="43-43", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs"];
m14_25 [label="wrapper.Execute(_context.Object)", span="45-45", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs"];
m14_26 [label="_process.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()))", span="47-47", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs"];
m14_27 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", span="41-41", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_CallsTheExecuteMethod_OfAProcess()", file="PrefetchJobFetcher.cs"];
m14_41 [label="Entry AutomaticRetryProcess.cstr", span="", cluster="AutomaticRetryProcess.cstr", file="PrefetchJobFetcher.cs"];
m14_7 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="23-23", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs"];
m14_8 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new AutomaticRetryProcess(null))", span="25-27", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs"];
m14_9 [label="Assert.Equal(''innerProcess'', exception.ParamName)", span="29-29", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs"];
m14_10 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="23-23", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="PrefetchJobFetcher.cs"];
m14_115 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="123-123", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m14_116 [label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="125-125", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m14_117 [label="token.ThrowIfCancellationRequested()", span="126-126", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m14_118 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="123-123", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs"];
m14_62 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="75-75", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs"];
m14_63 [label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<InvalidOperationException>()", span="77-77", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs"];
m14_64 [label="_maxRetryAttempts = 0", span="78-78", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs"];
m14_65 [label="var wrapper = CreateWrapper()", span="79-79", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs"];
m14_66 [label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_context.Object))", span="81-81", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs"];
m14_67 [label="_process.Verify(x => x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>()),\r\n                Times.Once)", span="83-85", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs"];
m14_68 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="75-75", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="PrefetchJobFetcher.cs"];
m14_51 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="PrefetchJobFetcher.cs"];
m14_40 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="PrefetchJobFetcher.cs"];
m14_45 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="62-62", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs"];
m14_46 [label="_process.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Throws<InvalidOperationException>()", span="64-64", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs"];
m14_47 [label="var wrapper = CreateWrapper()", span="65-65", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs"];
m14_48 [label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_context.Object))", span="67-67", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs"];
m14_49 [label="_process.Verify(x => x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>()),\r\n                Times.Exactly(_maxRetryAttempts))", span="69-71", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs"];
m14_50 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="62-62", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="PrefetchJobFetcher.cs"];
m14_52 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="PrefetchJobFetcher.cs"];
m14_112 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_13 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_14 [label="new AutomaticRetryProcess(null)", span="27-27", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_15 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_30 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_31 [label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="47-47", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_32 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_42 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_43 [label="x.Execute(_context.CancellationTokenSource.Token)", span="58-58", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_44 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_53 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_57 [label="wrapper.Execute(_context.Object)", span="67-67", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_56 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_59 [label="Entry lambda expression", span="69-70", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_54 [label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="64-64", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_55 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_58 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_60 [label="x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>())", span="69-70", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_61 [label="Exit lambda expression", span="69-70", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_69 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_73 [label="wrapper.Execute(_context.Object)", span="81-81", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_72 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_75 [label="Entry lambda expression", span="83-84", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_70 [label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="77-77", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_71 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_74 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_76 [label="x.Execute(\r\n                It.IsNotNull<BackgroundProcessContext>())", span="83-84", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_77 [label="Exit lambda expression", span="83-84", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_90 [label="wrapper.Execute(_context.Object)", span="95-95", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_86 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_89 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_92 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_87 [label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="92-92", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_88 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_91 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_93 [label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="97-97", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_94 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_101 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_105 [label="wrapper.Execute(_context.Object)", span="106-106", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_104 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_107 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_102 [label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="103-103", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_103 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_106 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_108 [label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="108-108", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_109 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_113 [label="TimeSpan.Zero", span="116-116", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_114 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m14_33 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="PrefetchJobFetcher.cs"];
m14_119 [label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(int)", file="PrefetchJobFetcher.cs"];
m14_17 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", span="33-33", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs"];
m14_18 [label="var wrapper = CreateWrapper()", span="35-35", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs"];
m14_19 [label="Assert.Same(_process.Object, wrapper.InnerProcess)", span="37-37", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs"];
m14_20 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", span="33-33", cluster="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts.InnerComponent_ReturnsGivenComponent()", file="PrefetchJobFetcher.cs"];
m14_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="PrefetchJobFetcher.cs"];
m14_121 [label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts", span="", file="PrefetchJobFetcher.cs"];
m14_122 [label=wrapper, span="", file="PrefetchJobFetcher.cs"];
m14_123 [label=wrapper, span="", file="PrefetchJobFetcher.cs"];
m14_124 [label=wrapper, span="", file="PrefetchJobFetcher.cs"];
m14_125 [label=wrapper, span="", file="PrefetchJobFetcher.cs"];
m16_21 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerJobDescriptor.cs"];
m16_27 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37", cluster="HangFire.JobHelper.FromJson<T>(string)", file="ServerJobDescriptor.cs"];
m16_23 [label="Entry HangFire.JobActivator.ActivateJob(System.Type)", span="6-6", cluster="HangFire.JobActivator.ActivateJob(System.Type)", file="ServerJobDescriptor.cs"];
m16_26 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ServerJobDescriptor.cs"];
m16_0 [label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_1 [label="_redis = redis", span="17-17", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_38 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="ServerJobDescriptor.cs"];
m16_25 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ServerJobDescriptor.cs"];
m16_37 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)", file="ServerJobDescriptor.cs"];
m16_36 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ServerJobDescriptor.cs"];
m16_31 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ServerJobDescriptor.cs"];
m16_45 [label="Entry HangFire.Server.ServerJobDescriptor.Perform()", span="79-79", cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="ServerJobDescriptor.cs"];
m16_46 [label="_jobInstance.Perform()", span="81-81", cluster="HangFire.Server.ServerJobDescriptor.Perform()", color=green, community=0, file="ServerJobDescriptor.cs"];
m16_47 [label="Exit HangFire.Server.ServerJobDescriptor.Perform()", span="79-79", cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="ServerJobDescriptor.cs"];
m16_44 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerJobDescriptor.cs"];
m16_22 [label="Entry System.Type.GetType(string, bool, bool)", span="0-0", cluster="System.Type.GetType(string, bool, bool)", file="ServerJobDescriptor.cs"];
m16_6 [label="JobId = payload.Id", span="21-21", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_8 [label="_jobInstance = activator.ActivateJob(type)", span="24-24", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_9 [label="_jobInstance == null", span="26-26", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_13 [label="var propertyInfo = _jobInstance.GetType().GetProperty(arg.Key)", span="38-38", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_17 [label="propertyInfo.SetValue(_jobInstance, value, null)", span="46-46", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_19 [label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not set the property '{0}' of the instance of class '{1}'. See the inner exception for details.'',\r\n                                propertyInfo.Name, _jobInstance.GetType().Name),\r\n                            ex);", span="50-54", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_2 [label="activator == null", span="18-18", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_4 [label="payload == null", span="19-19", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_7 [label="var type = Type.GetType(payload.Type, true, true)", span="23-23", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_10 [label="throw new InvalidOperationException(String.Format(\r\n                    ''{0} returned NULL instance of the '{1}' type.'',\r\n                    activator.GetType().FullName,\r\n                    type.FullName));", span="28-31", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_11 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(payload.Args)", span="34-34", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_12 [label=args, span="36-36", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_14 [label="propertyInfo != null", span="39-39", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_15 [label="var converter = TypeDescriptor.GetConverter(propertyInfo.PropertyType)", span="41-41", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_16 [label="var value = converter.ConvertFromInvariantString(arg.Value)", span="45-45", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_18 [label=Exception, span="48-48", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_3 [label="throw new ArgumentNullException(''activator'');", span="18-18", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_5 [label="throw new ArgumentNullException(''payload'');", span="19-19", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_20 [label="Exit HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="ServerJobDescriptor.cs"];
m16_28 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="ServerJobDescriptor.cs"];
m16_39 [label="Entry HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="70-70", cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs"];
m16_40 [label="var value = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                name)", span="72-74", cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs"];
m16_41 [label="return JobHelper.FromJson<T>(value);", span="76-76", cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs"];
m16_42 [label="Exit HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="70-70", cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerJobDescriptor.cs"];
m16_24 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ServerJobDescriptor.cs"];
m16_48 [label="Entry HangFire.BackgroundJob.Perform()", span="4-4", cluster="HangFire.BackgroundJob.Perform()", file="ServerJobDescriptor.cs"];
m16_29 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ServerJobDescriptor.cs"];
m16_32 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="ServerJobDescriptor.cs"];
m16_49 [label="Entry HangFire.Server.ServerJobDescriptor.Dispose()", span="84-84", cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs"];
m16_50 [label="var disposable = _jobInstance as IDisposable", span="86-86", cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs"];
m16_51 [label="disposable != null", span="87-87", cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs"];
m16_52 [label="disposable.Dispose()", span="89-89", cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs"];
m16_53 [label="Exit HangFire.Server.ServerJobDescriptor.Dispose()", span="84-84", cluster="HangFire.Server.ServerJobDescriptor.Dispose()", file="ServerJobDescriptor.cs"];
m16_43 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="ServerJobDescriptor.cs"];
m16_55 [label="Entry HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", span="93-93", cluster="HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", file="ServerJobDescriptor.cs"];
m16_56 [label="Dispose()", span="95-95", cluster="HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", color=green, community=0, file="ServerJobDescriptor.cs"];
m16_57 [label="Exit HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", span="93-93", cluster="HangFire.Server.ServerJobDescriptor.System.IDisposable.Dispose()", file="ServerJobDescriptor.cs"];
m16_33 [label="Entry HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", span="62-62", cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs"];
m16_34 [label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                name,\r\n                JobHelper.ToJson(value))", span="64-67", cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs"];
m16_35 [label="Exit HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", span="62-62", cluster="HangFire.Server.ServerJobDescriptor.SetParameter(string, object)", file="ServerJobDescriptor.cs"];
m16_30 [label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="ServerJobDescriptor.cs"];
m16_54 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ServerJobDescriptor.cs"];
m16_58 [label="HangFire.Server.ServerJobDescriptor", span="", file="ServerJobDescriptor.cs"];
m18_34 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="States.feature.cs"];
m18_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="States.feature.cs"];
m18_0 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="States.feature.cs"];
m18_1 [label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="States.feature.cs"];
m18_33 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="States.feature.cs"];
m18_19 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="States.feature.cs"];
m18_20 [label="Entry Hangfire.Server.SchedulePoller.ToString()", span="64-64", cluster="Hangfire.Server.SchedulePoller.ToString()", file="States.feature.cs"];
m18_21 [label="return ''Schedule Poller'';", span="66-66", cluster="Hangfire.Server.SchedulePoller.ToString()", file="States.feature.cs"];
m18_22 [label="Exit Hangfire.Server.SchedulePoller.ToString()", span="64-64", cluster="Hangfire.Server.SchedulePoller.ToString()", file="States.feature.cs"];
m18_36 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="States.feature.cs"];
m18_37 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="States.feature.cs"];
m18_35 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="States.feature.cs"];
m18_39 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="States.feature.cs"];
m18_18 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="States.feature.cs"];
m18_9 [label="Entry Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_10 [label="!EnqueueNextScheduledJob(context)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_14 [label="context.CancellationToken.WaitHandle.WaitOne(_pollInterval)", span="55-55", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_11 [label="_enqueuedCount != 0", span="49-49", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="States.feature.cs"];
m18_15 [label="_enqueuedCount++", span="60-60", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_12 [label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="51-51", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="States.feature.cs"];
m18_13 [label="_enqueuedCount = 0", span="52-52", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_16 [label="Exit Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45", cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_2 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="37-37", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs"];
m18_3 [label="stateMachineFactory == null", span="39-39", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs"];
m18_5 [label="_stateMachineFactory = stateMachineFactory", span="41-41", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs"];
m18_6 [label="_pollInterval = pollInterval", span="42-42", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs"];
m18_4 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="39-39", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs"];
m18_7 [label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="37-37", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="States.feature.cs"];
m18_40 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="States.feature.cs"];
m18_38 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="States.feature.cs"];
m18_17 [label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="69-69", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_23 [label="var connection = context.Storage.GetConnection()", span="71-71", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_28 [label="var stateMachine = _stateMachineFactory(context.Storage).Create(connection)", span="84-84", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_24 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="73-73", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="States.feature.cs"];
m18_25 [label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="76-77", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_26 [label="String.IsNullOrEmpty(jobId)", span="79-79", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_30 [label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", span="90-90", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_27 [label="return false;", span="81-81", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_29 [label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="85-88", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_31 [label="return true;", span="92-92", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_32 [label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="69-69", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="States.feature.cs"];
m18_41 [label="Hangfire.Server.SchedulePoller", span="", file="States.feature.cs"];
m19_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateSteps.cs"];
m19_1 [label="ServerName = serverName", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateSteps.cs"];
m19_2 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateSteps.cs"];
m19_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateSteps.cs"];
m19_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs"];
m19_3 [label="Entry HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="StateSteps.cs"];
m19_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ServerName'', ServerName }\r\n                };", span="37-41", cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="StateSteps.cs"];
m19_5 [label="Exit HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="StateSteps.cs"];
m19_8 [label="HangFire.States.ProcessingState", span="", file="StateSteps.cs"];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_11  [key=2, style=dotted, color=green];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_12  [key=2, style=dotted, color=green];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_13  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_12  [key=2, style=dotted, color=green];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_12  [key=2, style=dotted, color=green];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m0_14 -> m0_1  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_2  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_4  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_6  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_7  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_8  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_14 -> m0_9  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m2_14 -> m2_15  [key=0, style=solid, color=red];
m2_14 -> m2_8  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m2_14 -> m2_10  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m2_14 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m2_14 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m2_15 -> m2_16  [key=0, style=solid, color=red];
m2_15 -> m2_17  [key=2, style=dotted, color=red];
m2_16 -> m2_14  [key=0, style=bold, color=blue];
m2_0 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m2_0 -> m2_10  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_0 -> m2_3  [key=1, style=dashed, color=red, label="Hangfire.JobStorage"];
m2_0 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m2_0 -> m2_7  [key=1, style=dashed, color=red, label=string];
m2_0 -> m2_9  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, object>"];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_3  [key=0, style=solid, color=red];
m2_3 -> m2_4  [key=0, style=solid, color=red];
m2_3 -> m2_5  [key=0, style=solid, color=red];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid, color=red];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_13  [key=2, style=dotted, color=red];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_2 -> m2_11  [key=0, style=solid, color=red];
m2_2 -> m2_12  [key=2, style=dotted, color=red];
m2_4 -> m2_11  [key=0, style=solid, color=red];
m2_4 -> m2_12  [key=2, style=dotted, color=red];
m2_6 -> m2_11  [key=0, style=solid];
m2_6 -> m2_12  [key=2, style=dotted];
m2_11 -> m2_0  [key=0, style=bold, color=blue];
m2_18 -> m2_7  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m2_18 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m2_18 -> m2_9  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m2_18 -> m2_10  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m2_18 -> m2_15  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid];
m4_137 -> m4_366  [key=0, style=solid];
m4_137 -> m4_370  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<int>"];
m4_366 -> m4_53  [key=2, style=dotted];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_367 -> m4_137  [key=0, style=bold, color=blue];
m4_180 -> m4_181  [key=0, style=solid];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_148  [key=2, style=dotted];
m4_181 -> m4_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_182 -> m4_180  [key=0, style=bold, color=blue];
m4_47 -> m4_48  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_46  [key=2, style=dotted];
m4_49 -> m4_47  [key=0, style=bold, color=blue];
m4_148 -> m4_306  [key=0, style=solid];
m4_148 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label="System.Func<SqlConnection, T>"];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_315  [key=2, style=dotted];
m4_307 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label=connection];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_313  [key=2, style=dotted];
m4_306 -> m4_314  [key=2, style=dotted];
m4_306 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_316  [key=2, style=dotted];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_202  [key=2, style=dotted];
m4_309 -> m4_311  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_317  [key=2, style=dotted];
m4_311 -> m4_312  [key=0, style=solid];
m4_312 -> m4_148  [key=0, style=bold, color=blue];
m4_141 -> m4_220  [key=0, style=solid];
m4_141 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_141 -> m4_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_220 -> m4_53  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_221 -> m4_141  [key=0, style=bold, color=blue];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_148  [key=2, style=dotted];
m4_146 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_147 -> m4_145  [key=0, style=bold, color=blue];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_7  [key=2, style=dotted];
m4_25 -> m4_23  [key=0, style=bold, color=blue];
m4_138 -> m4_139  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_141  [key=2, style=dotted];
m4_140 -> m4_138  [key=0, style=bold, color=blue];
m4_74 -> m4_75  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_29  [key=2, style=dotted];
m4_75 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_76 -> m4_74  [key=0, style=bold, color=blue];
m4_66 -> m4_67  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_29  [key=2, style=dotted];
m4_67 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_68 -> m4_66  [key=0, style=bold, color=blue];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=2, style=dotted];
m4_45 -> m4_43  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_13  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_14  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_15  [key=0, style=bold, color=blue];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_7  [key=2, style=dotted];
m4_22 -> m4_20  [key=0, style=bold, color=blue];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>"];
m4_353 -> m4_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m4_358 -> m4_65  [key=2, style=dotted];
m4_358 -> m4_355  [key=0, style=solid];
m4_358 -> m4_363  [key=2, style=dotted];
m4_358 -> m4_364  [key=2, style=dotted];
m4_354 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_354 -> m4_355  [key=0, style=solid];
m4_354 -> m4_361  [key=2, style=dotted];
m4_354 -> m4_359  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_355 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_359  [key=0, style=solid];
m4_355 -> m4_357  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_337  [key=2, style=dotted];
m4_357 -> m4_362  [key=2, style=dotted];
m4_359 -> m4_365  [key=2, style=dotted];
m4_359 -> m4_360  [key=0, style=solid];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_344  [key=2, style=dotted];
m4_360 -> m4_353  [key=0, style=bold, color=blue];
m4_13 -> m4_298  [key=0, style=solid];
m4_13 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_148  [key=2, style=dotted];
m4_298 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_299 -> m4_13  [key=0, style=bold, color=blue];
m4_212 -> m4_213  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid, color=green];
m4_55 -> m4_56  [key=0, style=solid, color=green];
m4_55 -> m4_53  [key=2, style=dotted, color=green];
m4_55 -> m4_62  [key=2, style=dotted, color=green];
m4_55 -> m4_57  [key=1, style=dashed, color=green, label=servers];
m4_56 -> m4_57  [key=0, style=solid, color=green];
m4_56 -> m4_63  [key=2, style=dotted, color=green];
m4_56 -> m4_59  [key=1, style=dashed, color=green, label=result];
m4_56 -> m4_60  [key=1, style=dashed, color=green, label=result];
m4_57 -> m4_58  [key=0, style=solid, color=green];
m4_57 -> m4_60  [key=0, style=solid, color=green];
m4_57 -> m4_59  [key=1, style=dashed, color=green, label=server];
m4_59 -> m4_57  [key=0, style=solid, color=green];
m4_59 -> m4_64  [key=2, style=dotted];
m4_59 -> m4_65  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_58 -> m4_53  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_101  [key=2, style=dotted];
m4_93 -> m4_102  [key=2, style=dotted];
m4_93 -> m4_103  [key=2, style=dotted];
m4_93 -> m4_104  [key=2, style=dotted];
m4_93 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_93 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_93 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_93 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_93 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=tuples];
m4_98 -> m4_95  [key=0, style=solid];
m4_98 -> m4_108  [key=2, style=dotted];
m4_98 -> m4_109  [key=2, style=dotted];
m4_98 -> m4_65  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_162  [key=2, style=dotted];
m4_157 -> m4_163  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_204  [key=2, style=dotted];
m4_197 -> m4_205  [key=2, style=dotted];
m4_197 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_305  [key=2, style=dotted];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_325  [key=2, style=dotted];
m4_323 -> m4_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_325  [key=2, style=dotted];
m4_373 -> m4_372  [key=0, style=solid];
m4_373 -> m4_377  [key=2, style=dotted];
m4_373 -> m4_378  [key=2, style=dotted];
m4_373 -> m4_379  [key=2, style=dotted];
m4_373 -> m4_163  [key=2, style=dotted];
m4_373 -> m4_65  [key=2, style=dotted];
m4_152 -> m4_53  [key=2, style=dotted];
m4_152 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label=job];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_160  [key=2, style=dotted];
m4_155 -> m4_53  [key=2, style=dotted];
m4_155 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_161  [key=2, style=dotted];
m4_155 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_155 -> m4_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_156 -> m4_53  [key=2, style=dotted];
m4_156 -> m4_62  [key=2, style=dotted];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_101  [key=2, style=dotted];
m4_156 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_171 -> m4_53  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_173  [key=2, style=dotted];
m4_193 -> m4_53  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_203  [key=2, style=dotted];
m4_194 -> m4_53  [key=2, style=dotted];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_160  [key=2, style=dotted];
m4_195 -> m4_53  [key=2, style=dotted];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_160  [key=2, style=dotted];
m4_196 -> m4_53  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_203  [key=2, style=dotted];
m4_322 -> m4_53  [key=2, style=dotted];
m4_322 -> m4_62  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_334 -> m4_53  [key=2, style=dotted];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_203  [key=2, style=dotted];
m4_350 -> m4_53  [key=2, style=dotted];
m4_350 -> m4_62  [key=2, style=dotted];
m4_350 -> m4_351  [key=0, style=solid];
m4_370 -> m4_53  [key=2, style=dotted];
m4_370 -> m4_62  [key=2, style=dotted];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_372  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m4_61 -> m4_54  [key=0, style=bold, color=blue];
m4_230 -> m4_62  [key=2, style=dotted];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_101  [key=2, style=dotted];
m4_230 -> m4_249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_230 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=keys];
m4_230 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label=keys];
m4_270 -> m4_62  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_101  [key=2, style=dotted];
m4_270 -> m4_288  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_270 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=keys];
m4_270 -> m4_273  [key=1, style=dashed, color=darkseagreen4, label=keys];
m4_269 -> m4_62  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_101  [key=2, style=dotted];
m4_269 -> m4_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_269 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m4_224 -> m4_63  [key=2, style=dotted];
m4_224 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_224 -> m4_225  [key=0, style=solid];
m4_224 -> m4_227  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_224 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_224 -> m4_240  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_265 -> m4_63  [key=2, style=dotted];
m4_265 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_267  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_265 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_30 -> m4_31  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_94 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_105  [key=2, style=dotted];
m4_94 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_110 -> m4_111  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_118 -> m4_119  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_95 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_99  [key=0, style=solid];
m4_95 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m4_96 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_106  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_107  [key=2, style=dotted];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_158 -> m4_149  [key=0, style=bold, color=blue];
m4_183 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_183 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_185 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_200  [key=2, style=dotted];
m4_185 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_191  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_185 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label=stats];
m4_198 -> m4_199  [key=0, style=solid];
m4_216 -> m4_217  [key=0, style=solid];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_302  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_113  [key=2, style=dotted];
m4_320 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_320 -> m4_321  [key=0, style=solid];
m4_324 -> m4_320  [key=0, style=bold, color=blue];
m4_326 -> m4_327  [key=0, style=solid];
m4_332 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_332 -> m4_333  [key=0, style=solid];
m4_348 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_348 -> m4_349  [key=0, style=solid];
m4_352 -> m4_348  [key=0, style=bold, color=blue];
m4_368 -> m4_370  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_368 -> m4_369  [key=0, style=solid];
m4_371 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_376  [key=2, style=dotted];
m4_371 -> m4_374  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_372 -> m4_373  [key=0, style=solid];
m4_372 -> m4_374  [key=0, style=solid];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label=multi];
m4_151 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label=multi];
m4_151 -> m4_159  [key=2, style=dotted];
m4_153 -> m4_155  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_170 -> m4_171  [key=0, style=solid];
m4_172 -> m4_170  [key=0, style=bold, color=blue];
m4_186 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=multi];
m4_186 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label=multi];
m4_186 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=multi];
m4_186 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=multi];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_159  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_202  [key=2, style=dotted];
m4_321 -> m4_322  [key=0, style=solid];
m4_333 -> m4_334  [key=0, style=solid];
m4_335 -> m4_336  [key=0, style=solid];
m4_349 -> m4_350  [key=0, style=solid];
m4_369 -> m4_370  [key=0, style=solid];
m4_226 -> m4_230  [key=0, style=solid];
m4_226 -> m4_227  [key=0, style=solid];
m4_231 -> m4_232  [key=0, style=solid];
m4_249 -> m4_250  [key=0, style=solid];
m4_232 -> m4_161  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_245  [key=2, style=dotted];
m4_232 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_232 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_232 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_232 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_232 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_236  [key=0, style=solid];
m4_233 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label=key];
m4_271 -> m4_272  [key=0, style=solid];
m4_288 -> m4_289  [key=0, style=solid];
m4_272 -> m4_161  [key=2, style=dotted];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_245  [key=2, style=dotted];
m4_272 -> m4_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_272 -> m4_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_272 -> m4_274  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_272 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_272 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_276  [key=0, style=solid];
m4_273 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label=key];
m4_266 -> m4_269  [key=0, style=solid];
m4_266 -> m4_267  [key=0, style=solid];
m4_285 -> m4_286  [key=0, style=solid];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_282  [key=0, style=solid];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_227  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_223 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_227 -> m4_65  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_242  [key=0, style=solid];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> m4_246  [key=2, style=dotted];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m4_264 -> m4_284  [key=2, style=dotted];
m4_267 -> m4_65  [key=2, style=dotted];
m4_267 -> m4_268  [key=0, style=solid];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_246  [key=2, style=dotted];
m4_32 -> m4_30  [key=0, style=bold, color=blue];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_34  [key=2, style=dotted];
m4_31 -> m4_35  [key=2, style=dotted];
m4_41 -> m4_39  [key=0, style=bold, color=blue];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [key=2, style=dotted];
m4_40 -> m4_35  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_291  [key=2, style=dotted];
m4_71 -> m4_69  [key=0, style=bold, color=blue];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=2, style=dotted];
m4_70 -> m4_73  [key=2, style=dotted];
m4_79 -> m4_77  [key=0, style=bold, color=blue];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_80  [key=2, style=dotted];
m4_78 -> m4_34  [key=2, style=dotted];
m4_78 -> m4_81  [key=2, style=dotted];
m4_78 -> m4_73  [key=2, style=dotted];
m4_87 -> m4_85  [key=0, style=bold, color=blue];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [key=2, style=dotted];
m4_86 -> m4_73  [key=2, style=dotted];
m4_100 -> m4_92  [key=0, style=bold, color=blue];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_113  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_112 -> m4_110  [key=0, style=bold, color=blue];
m4_116 -> m4_114  [key=0, style=bold, color=blue];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_117  [key=2, style=dotted];
m4_120 -> m4_118  [key=0, style=bold, color=blue];
m4_119 -> m4_120  [key=0, style=solid];
m4_123 -> m4_121  [key=0, style=bold, color=blue];
m4_122 -> m4_123  [key=0, style=solid];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_252  [key=2, style=dotted];
m4_250 -> m4_253  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_154 -> m4_158  [key=0, style=solid];
m4_199 -> m4_183  [key=0, style=bold, color=blue];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=sql];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_113  [key=2, style=dotted];
m4_217 -> m4_219  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_202  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_202  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_202  [key=2, style=dotted];
m4_218 -> m4_216  [key=0, style=bold, color=blue];
m4_243 -> m4_222  [key=0, style=bold, color=blue];
m4_283 -> m4_262  [key=0, style=bold, color=blue];
m4_263 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_267  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_263 -> m4_268  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_304 -> m4_300  [key=0, style=bold, color=blue];
m4_303 -> m4_304  [key=0, style=solid];
m4_328 -> m4_326  [key=0, style=bold, color=blue];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_329  [key=2, style=dotted];
m4_327 -> m4_73  [key=2, style=dotted];
m4_336 -> m4_332  [key=0, style=bold, color=blue];
m4_375 -> m4_368  [key=0, style=bold, color=blue];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_365  [key=2, style=dotted];
m4_187 -> m4_161  [key=2, style=dotted];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_201  [key=2, style=dotted];
m4_187 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_187 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_187 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m4_166 -> m4_164  [key=0, style=bold, color=blue];
m4_165 -> m4_166  [key=0, style=solid];
m4_169 -> m4_167  [key=0, style=bold, color=blue];
m4_168 -> m4_169  [key=0, style=solid];
m4_188 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m4_188 -> m4_191  [key=1, style=dashed, color=darkseagreen4, label=getCountIfExists];
m4_188 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_229 -> m4_226  [key=0, style=solid];
m4_229 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_251 -> m4_249  [key=0, style=bold, color=blue];
m4_254 -> m4_255  [key=0, style=solid];
m4_257 -> m4_258  [key=0, style=solid];
m4_234 -> m4_233  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_215  [key=2, style=dotted];
m4_235 -> m4_233  [key=0, style=solid];
m4_235 -> m4_246  [key=2, style=dotted];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_248  [key=2, style=dotted];
m4_236 -> m4_240  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_247  [key=2, style=dotted];
m4_236 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_290 -> m4_288  [key=0, style=bold, color=blue];
m4_292 -> m4_293  [key=0, style=solid];
m4_295 -> m4_296  [key=0, style=solid];
m4_274 -> m4_273  [key=0, style=solid];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_215  [key=2, style=dotted];
m4_275 -> m4_273  [key=0, style=solid];
m4_275 -> m4_246  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_248  [key=2, style=dotted];
m4_276 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_247  [key=2, style=dotted];
m4_276 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_268 -> m4_266  [key=0, style=solid];
m4_268 -> m4_268  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_268 -> m4_284  [key=2, style=dotted];
m4_287 -> m4_285  [key=0, style=bold, color=blue];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_252  [key=2, style=dotted];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_277 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_277 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_281 -> m4_278  [key=0, style=solid];
m4_281 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_282 -> m4_283  [key=0, style=solid];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m4_228 -> m4_244  [key=2, style=dotted];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_240  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_237 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_237 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_241 -> m4_238  [key=0, style=solid];
m4_241 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_242 -> m4_243  [key=0, style=solid];
m4_206 -> m4_207  [key=0, style=solid];
m4_209 -> m4_210  [key=0, style=solid];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_215  [key=2, style=dotted];
m4_256 -> m4_254  [key=0, style=bold, color=blue];
m4_255 -> m4_256  [key=0, style=solid];
m4_259 -> m4_257  [key=0, style=bold, color=blue];
m4_258 -> m4_259  [key=0, style=solid];
m4_294 -> m4_292  [key=0, style=bold, color=blue];
m4_293 -> m4_294  [key=0, style=solid];
m4_297 -> m4_295  [key=0, style=bold, color=blue];
m4_296 -> m4_297  [key=0, style=solid];
m4_208 -> m4_206  [key=0, style=bold, color=blue];
m4_207 -> m4_208  [key=0, style=solid];
m4_211 -> m4_209  [key=0, style=bold, color=blue];
m4_210 -> m4_211  [key=0, style=solid];
m4_214 -> m4_212  [key=0, style=bold, color=blue];
m4_29 -> m4_346  [key=0, style=solid];
m4_29 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m4_29 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_148  [key=2, style=dotted];
m4_346 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_347 -> m4_29  [key=0, style=bold, color=blue];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_133  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_13  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_137  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_136  [key=2, style=dotted];
m4_135 -> m4_131  [key=0, style=bold, color=blue];
m4_130 -> m4_318  [key=0, style=solid];
m4_130 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<int>"];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_148  [key=2, style=dotted];
m4_318 -> m4_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_319 -> m4_130  [key=0, style=bold, color=blue];
m4_26 -> m4_27  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_27 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_28 -> m4_26  [key=0, style=bold, color=blue];
m4_7 -> m4_330  [key=0, style=solid];
m4_7 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_3  [key=0, style=bold, color=blue];
m4_6 -> m4_4  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_29  [key=2, style=dotted];
m4_37 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_38 -> m4_36  [key=0, style=bold, color=blue];
m4_177 -> m4_178  [key=0, style=solid];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_7  [key=2, style=dotted];
m4_179 -> m4_177  [key=0, style=bold, color=blue];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_13  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_130  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_129  [key=2, style=dotted];
m4_128 -> m4_124  [key=0, style=bold, color=blue];
m4_50 -> m4_51  [key=0, style=solid, color=green];
m4_51 -> m4_52  [key=0, style=solid, color=green];
m4_51 -> m4_53  [key=2, style=dotted, color=green];
m4_51 -> m4_54  [key=1, style=dashed, color=green, label="lambda expression"];
m4_52 -> m4_50  [key=0, style=bold, color=blue];
m4_174 -> m4_175  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_7  [key=2, style=dotted];
m4_176 -> m4_174  [key=0, style=bold, color=blue];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_339  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_338 -> m4_344  [key=2, style=dotted];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=data];
m4_339 -> m4_340  [key=0, style=solid];
m4_340 -> m4_343  [key=0, style=solid];
m4_340 -> m4_345  [key=2, style=dotted];
m4_342 -> m4_343  [key=0, style=solid];
m4_341 -> m4_342  [key=0, style=solid];
m4_343 -> m4_337  [key=0, style=bold, color=blue];
m4_46 -> m4_260  [key=0, style=solid];
m4_46 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_46 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_260 -> m4_53  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_261 -> m4_46  [key=0, style=bold, color=blue];
m4_82 -> m4_83  [key=0, style=solid];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_29  [key=2, style=dotted];
m4_83 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_84 -> m4_82  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_8 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m4_8 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_8  [key=0, style=bold, color=blue];
m4_142 -> m4_143  [key=0, style=solid];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_141  [key=2, style=dotted];
m4_144 -> m4_142  [key=0, style=bold, color=blue];
m4_89 -> m4_90  [key=0, style=solid];
m4_90 -> m4_53  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_91 -> m4_89  [key=0, style=bold, color=blue];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_148  [key=2, style=dotted];
m4_330 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_331 -> m4_7  [key=0, style=bold, color=blue];
m4_380 -> m4_51  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_178  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_323  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_330  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_346  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_380 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerMonitoringApi"];
m4_387 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_393 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m4_388 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<int>"];
m4_389 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_390 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_391 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_392 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_394 -> m4_370  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<int>"];
m4_385 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_385 -> m4_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_386 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_386 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_382 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_381 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_384 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_383 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=countByStates];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_13  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_13  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_11  [key=0, style=solid];
m5_3 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_3 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_3 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_13  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_14  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_15  [key=2, style=dotted];
m5_7 -> m5_14  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_13  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_13  [key=2, style=dotted];
m5_10 -> m5_3  [key=0, style=solid];
m5_10 -> m5_13  [key=2, style=dotted];
m5_12 -> m5_0  [key=0, style=bold, color=blue];
m5_16 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m5_16 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m7_38 -> m7_39  [key=0, style=solid, color=green];
m7_39 -> m7_40  [key=0, style=solid, color=green];
m7_39 -> m7_41  [key=2, style=dotted, color=green];
m7_39 -> m7_42  [key=2, style=dotted, color=green];
m7_40 -> m7_38  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid, color=green];
m7_9 -> m7_25  [key=1, style=dashed, color=green, label=IAppBuilder];
m7_9 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m7_9 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m7_9 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m7_9 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m7_10 -> m7_11  [key=0, style=solid, color=green];
m7_10 -> m7_12  [key=0, style=solid, color=green];
m7_11 -> m7_26  [key=0, style=solid, color=green];
m7_11 -> m7_27  [key=2, style=dotted, color=green];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid, color=green];
m7_24 -> m7_25  [key=0, style=solid, color=green];
m7_24 -> m7_33  [key=2, style=dotted, color=green];
m7_16 -> m7_24  [key=1, style=dashed, color=green, label=server];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_28  [key=2, style=dotted];
m7_19 -> m7_24  [key=1, style=dashed, color=green, label=token];
m7_19 -> m7_20  [key=0, style=solid, color=green];
m7_19 -> m7_31  [key=2, style=dotted, color=green];
m7_19 -> m7_22  [key=1, style=dashed, color=green, label=token];
m7_21 -> m7_24  [key=1, style=dashed, color=green, label=token];
m7_21 -> m7_22  [key=0, style=solid, color=green];
m7_21 -> m7_31  [key=2, style=dotted, color=green];
m7_22 -> m7_24  [key=0, style=solid, color=green];
m7_22 -> m7_23  [key=0, style=solid, color=green];
m7_18 -> m7_19  [key=0, style=solid, color=green];
m7_18 -> m7_21  [key=1, style=dashed, color=green, label=context];
m7_18 -> m7_30  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid, color=green];
m7_20 -> m7_22  [key=0, style=solid, color=green];
m7_23 -> m7_26  [key=0, style=solid, color=green];
m7_23 -> m7_32  [key=2, style=dotted, color=green];
m7_14 -> m7_16  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_13 -> m7_26  [key=0, style=solid];
m7_13 -> m7_27  [key=2, style=dotted];
m7_15 -> m7_26  [key=0, style=solid];
m7_15 -> m7_27  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_29  [key=2, style=dotted];
m7_26 -> m7_9  [key=0, style=bold, color=blue];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_47 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m7_47 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m7_47 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m7_47 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m7_47 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m7_47 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m7_49 -> m7_27  [key=2, style=dotted];
m7_49 -> m7_59  [key=0, style=solid];
m7_51 -> m7_27  [key=2, style=dotted];
m7_51 -> m7_59  [key=0, style=solid];
m7_53 -> m7_27  [key=2, style=dotted];
m7_53 -> m7_59  [key=0, style=solid];
m7_55 -> m7_27  [key=2, style=dotted];
m7_55 -> m7_59  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_54  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_56  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_60  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_61  [key=2, style=dotted];
m7_57 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_59 -> m7_47  [key=0, style=bold, color=blue];
m7_34 -> m7_35  [key=0, style=solid, color=green];
m7_35 -> m7_36  [key=0, style=solid, color=green];
m7_35 -> m7_37  [key=2, style=dotted, color=green];
m7_36 -> m7_34  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_65  [key=2, style=dotted];
m7_63 -> m7_66  [key=2, style=dotted];
m7_64 -> m7_62  [key=0, style=bold, color=blue];
m7_75 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m7_76 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_3 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.LayoutPage"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_7  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_3  [key=0, style=bold, color=blue];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_9  [key=0, style=bold, color=blue];
m9_12 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.CorrectJob"];
m9_13 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
m9_13 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
m9_14 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.DisposableJob"];
m10_49 -> m10_84  [key=0, style=solid, color=red];
m10_49 -> m10_85  [key=1, style=dashed, color=red, label=string];
m10_84 -> m10_85  [key=0, style=solid, color=red];
m10_84 -> m10_70  [key=2, style=dotted, color=red];
m10_84 -> m10_86  [key=1, style=dashed, color=red, label=transaction];
m10_85 -> m10_86  [key=0, style=solid, color=red];
m10_85 -> m10_76  [key=2, style=dotted, color=red];
m10_86 -> m10_87  [key=0, style=solid, color=red];
m10_86 -> m10_79  [key=2, style=dotted, color=red];
m10_87 -> m10_49  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_59 -> m10_60  [key=0, style=solid, color=red];
m10_59 -> m10_74  [key=2, style=dotted, color=red];
m10_59 -> m10_80  [key=1, style=dashed, color=red, label="lambda expression"];
m10_50 -> m10_51  [key=0, style=solid, color=red];
m10_50 -> m10_52  [key=1, style=dashed, color=red, label="params string[]"];
m10_50 -> m10_54  [key=1, style=dashed, color=red, label=IRedisClient];
m10_50 -> m10_58  [key=1, style=dashed, color=red, label=string];
m10_50 -> m10_59  [key=1, style=dashed, color=red, label=string];
m10_50 -> m10_81  [key=1, style=dashed, color=red, label=string];
m10_50 -> m10_60  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m10_50 -> m10_61  [key=1, style=dashed, color=red, label=string];
m10_50 -> m10_62  [key=1, style=dashed, color=red, label=string];
m10_50 -> m10_63  [key=1, style=dashed, color=red, label=string];
m10_50 -> m10_64  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m10_50 -> m10_65  [key=1, style=dashed, color=red, label=string];
m10_50 -> m10_38  [key=3, color=red, style=bold, label="method methodReturn bool ApplyState"];
m10_51 -> m10_52  [key=0, style=solid, color=red];
m10_51 -> m10_45  [key=2, style=dotted, color=red];
m10_51 -> m10_68  [key=2, style=dotted, color=red];
m10_51 -> m10_55  [key=1, style=dashed, color=red, label=oldState];
m10_51 -> m10_56  [key=1, style=dashed, color=red, label=oldState];
m10_51 -> m10_61  [key=1, style=dashed, color=red, label=oldState];
m10_52 -> m10_53  [key=0, style=solid, color=red];
m10_52 -> m10_54  [key=0, style=solid, color=red];
m10_52 -> m10_69  [key=2, style=dotted, color=red];
m10_54 -> m10_55  [key=0, style=solid, color=red];
m10_54 -> m10_70  [key=2, style=dotted, color=red];
m10_54 -> m10_58  [key=1, style=dashed, color=red, label=transaction];
m10_54 -> m10_59  [key=1, style=dashed, color=red, label=transaction];
m10_54 -> m10_61  [key=1, style=dashed, color=red, label=transaction];
m10_54 -> m10_62  [key=1, style=dashed, color=red, label=transaction];
m10_54 -> m10_63  [key=1, style=dashed, color=red, label=transaction];
m10_54 -> m10_65  [key=1, style=dashed, color=red, label=transaction];
m10_54 -> m10_66  [key=1, style=dashed, color=red, label=transaction];
m10_58 -> m10_59  [key=0, style=solid, color=red];
m10_58 -> m10_73  [key=2, style=dotted, color=red];
m10_60 -> m10_61  [key=0, style=solid, color=red];
m10_60 -> m10_62  [key=0, style=solid, color=red];
m10_61 -> m10_60  [key=0, style=solid, color=red];
m10_61 -> m10_75  [key=2, style=dotted, color=red];
m10_62 -> m10_63  [key=0, style=solid, color=red];
m10_62 -> m10_76  [key=2, style=dotted, color=red];
m10_63 -> m10_64  [key=0, style=solid, color=red];
m10_63 -> m10_77  [key=2, style=dotted, color=red];
m10_64 -> m10_65  [key=0, style=solid, color=red];
m10_64 -> m10_66  [key=0, style=solid, color=red];
m10_65 -> m10_64  [key=0, style=solid, color=red];
m10_65 -> m10_78  [key=2, style=dotted, color=red];
m10_55 -> m10_56  [key=0, style=solid, color=red];
m10_55 -> m10_62  [key=0, style=solid, color=red];
m10_55 -> m10_71  [key=2, style=dotted, color=red];
m10_56 -> m10_57  [key=0, style=solid, color=red];
m10_56 -> m10_72  [key=2, style=dotted, color=red];
m10_56 -> m10_58  [key=1, style=dashed, color=red, label=descriptor];
m10_53 -> m10_67  [key=0, style=solid, color=red];
m10_66 -> m10_67  [key=0, style=solid, color=red];
m10_66 -> m10_79  [key=2, style=dotted, color=red];
m10_57 -> m10_58  [key=0, style=solid, color=red];
m10_57 -> m10_59  [key=0, style=solid, color=red];
m10_67 -> m10_50  [key=0, style=bold, color=blue];
m10_93 -> m10_94  [key=0, style=solid, color=red];
m10_93 -> m10_74  [key=2, style=dotted, color=red];
m10_93 -> m10_100  [key=1, style=dashed, color=red, label="lambda expression"];
m10_88 -> m10_89  [key=0, style=solid, color=red];
m10_88 -> m10_91  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m10_88 -> m10_92  [key=1, style=dashed, color=red, label=bool];
m10_88 -> m10_93  [key=1, style=dashed, color=red, label=IRedisTransaction];
m10_88 -> m10_101  [key=1, style=dashed, color=red, label=string];
m10_88 -> m10_94  [key=1, style=dashed, color=red, label=IRedisTransaction];
m10_88 -> m10_105  [key=1, style=dashed, color=red, label=string];
m10_88 -> m10_95  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m10_88 -> m10_97  [key=1, style=dashed, color=red, label=IRedisTransaction];
m10_88 -> m10_109  [key=1, style=dashed, color=red, label=string];
m10_89 -> m10_90  [key=0, style=solid, color=red];
m10_89 -> m10_5  [key=2, style=dotted, color=red];
m10_89 -> m10_91  [key=1, style=dashed, color=red, label=properties];
m10_89 -> m10_94  [key=1, style=dashed, color=red, label=properties];
m10_89 -> m10_105  [key=1, style=dashed, color=red, label=properties];
m10_89 -> m10_95  [key=1, style=dashed, color=red, label=properties];
m10_89 -> m10_96  [key=1, style=dashed, color=red, label=properties];
m10_89 -> m10_97  [key=1, style=dashed, color=red, label=properties];
m10_89 -> m10_109  [key=1, style=dashed, color=red, label=properties];
m10_91 -> m10_92  [key=0, style=solid, color=red];
m10_91 -> m10_22  [key=2, style=dotted, color=red];
m10_92 -> m10_93  [key=0, style=solid, color=red];
m10_92 -> m10_95  [key=0, style=solid, color=red];
m10_94 -> m10_95  [key=0, style=solid, color=red];
m10_94 -> m10_74  [key=2, style=dotted, color=red];
m10_94 -> m10_104  [key=1, style=dashed, color=red, label="lambda expression"];
m10_95 -> m10_96  [key=0, style=solid, color=red];
m10_95 -> m10_22  [key=2, style=dotted, color=red];
m10_97 -> m10_98  [key=0, style=solid, color=red];
m10_97 -> m10_74  [key=2, style=dotted, color=red];
m10_97 -> m10_108  [key=1, style=dashed, color=red, label="lambda expression"];
m10_90 -> m10_91  [key=0, style=solid, color=red];
m10_90 -> m10_96  [key=1, style=dashed, color=red, label=now];
m10_96 -> m10_97  [key=0, style=solid, color=red];
m10_96 -> m10_99  [key=2, style=dotted, color=red];
m10_96 -> m10_22  [key=2, style=dotted, color=red];
m10_98 -> m10_88  [key=0, style=bold, color=blue];
m10_16 -> m10_20  [key=0, style=solid, color=red];
m10_20 -> m10_21  [key=0, style=solid, color=red];
m10_20 -> m10_22  [key=2, style=dotted, color=red];
m10_21 -> m10_16  [key=0, style=bold, color=blue];
m10_27 -> m10_28  [key=0, style=solid, color=red];
m10_27 -> m10_30  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m10_27 -> m10_33  [key=1, style=dashed, color=red, label=IRedisClient];
m10_27 -> m10_35  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m10_27 -> m10_36  [key=1, style=dashed, color=red, label=IRedisClient];
m10_27 -> m10_38  [key=1, style=dashed, color=red, label=IRedisClient];
m10_27 -> m10_40  [key=1, style=dashed, color=red, label=IRedisClient];
m10_27 -> m10_50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Apply"];
m10_28 -> m10_29  [key=0, style=solid, color=red];
m10_28 -> m10_30  [key=0, style=solid, color=red];
m10_30 -> m10_31  [key=0, style=solid, color=red];
m10_30 -> m10_32  [key=0, style=solid, color=red];
m10_33 -> m10_34  [key=0, style=solid, color=red];
m10_33 -> m10_45  [key=2, style=dotted, color=red];
m10_33 -> m10_46  [key=2, style=dotted, color=red];
m10_33 -> m10_47  [key=2, style=dotted, color=red];
m10_35 -> m10_36  [key=0, style=solid, color=red];
m10_35 -> m10_37  [key=1, style=dashed, color=red, label=oldState];
m10_35 -> m10_38  [key=1, style=dashed, color=red, label=oldState];
m10_36 -> m10_37  [key=0, style=solid, color=red];
m10_36 -> m10_48  [key=2, style=dotted, color=red];
m10_36 -> m10_40  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m10_38 -> m10_34  [key=0, style=solid, color=red];
m10_38 -> m10_49  [key=2, style=dotted, color=red];
m10_40 -> m10_41  [key=0, style=solid, color=red];
m10_40 -> m10_50  [key=2, style=dotted, color=red];
m10_29 -> m10_41  [key=0, style=solid, color=red];
m10_29 -> m10_42  [key=2, style=dotted, color=red];
m10_31 -> m10_41  [key=0, style=solid, color=red];
m10_31 -> m10_42  [key=2, style=dotted, color=red];
m10_32 -> m10_33  [key=0, style=solid, color=red];
m10_32 -> m10_43  [key=2, style=dotted, color=red];
m10_32 -> m10_44  [key=2, style=dotted, color=red];
m10_32 -> m10_34  [key=1, style=dashed, color=red, label=changingFilters];
m10_34 -> m10_35  [key=0, style=solid, color=red];
m10_34 -> m10_39  [key=0, style=solid, color=red];
m10_34 -> m10_36  [key=1, style=dashed, color=red, label=filter];
m10_39 -> m10_40  [key=0, style=solid, color=red];
m10_39 -> m10_43  [key=2, style=dotted, color=red];
m10_39 -> m10_44  [key=2, style=dotted, color=red];
m10_37 -> m10_38  [key=0, style=solid, color=red];
m10_37 -> m10_34  [key=0, style=solid, color=red];
m10_41 -> m10_27  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid, color=red];
m10_10 -> m10_11  [key=0, style=solid, color=red];
m10_10 -> m10_15  [key=2, style=dotted, color=red];
m10_10 -> m10_16  [key=2, style=dotted, color=red];
m10_11 -> m10_12  [key=0, style=solid, color=red];
m10_11 -> m10_17  [key=2, style=dotted, color=red];
m10_11 -> m10_16  [key=2, style=dotted, color=red];
m10_12 -> m10_13  [key=0, style=solid, color=red];
m10_12 -> m10_18  [key=2, style=dotted, color=red];
m10_12 -> m10_16  [key=2, style=dotted, color=red];
m10_13 -> m10_14  [key=0, style=solid, color=red];
m10_13 -> m10_19  [key=2, style=dotted, color=red];
m10_13 -> m10_16  [key=2, style=dotted, color=red];
m10_14 -> m10_9  [key=0, style=bold, color=blue];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_3  [key=0, style=bold, color=blue];
m10_108 -> m10_109  [key=0, style=solid, color=red];
m10_81 -> m10_82  [key=0, style=solid, color=red];
m10_81 -> m10_45  [key=2, style=dotted, color=red];
m10_81 -> m10_83  [key=2, style=dotted, color=red];
m10_80 -> m10_81  [key=0, style=solid, color=red];
m10_82 -> m10_80  [key=0, style=bold, color=blue];
m10_101 -> m10_102  [key=0, style=solid, color=red];
m10_101 -> m10_45  [key=2, style=dotted, color=red];
m10_101 -> m10_103  [key=2, style=dotted, color=red];
m10_105 -> m10_106  [key=0, style=solid, color=red];
m10_105 -> m10_45  [key=2, style=dotted, color=red];
m10_105 -> m10_107  [key=2, style=dotted, color=red];
m10_109 -> m10_110  [key=0, style=solid, color=red];
m10_109 -> m10_45  [key=2, style=dotted, color=red];
m10_109 -> m10_111  [key=2, style=dotted, color=red];
m10_109 -> m10_112  [key=2, style=dotted, color=red];
m10_100 -> m10_101  [key=0, style=solid, color=red];
m10_104 -> m10_105  [key=0, style=solid, color=red];
m10_102 -> m10_100  [key=0, style=bold, color=blue];
m10_106 -> m10_104  [key=0, style=bold, color=blue];
m10_110 -> m10_108  [key=0, style=bold, color=blue];
m10_23 -> m10_24  [key=0, style=solid, color=red];
m10_24 -> m10_25  [key=0, style=solid, color=red];
m10_24 -> m10_26  [key=2, style=dotted, color=red];
m10_25 -> m10_23  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=2, style=dotted];
m10_7 -> m10_5  [key=0, style=bold, color=blue];
m10_113 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m10_114 -> m10_81  [key=1, style=dashed, color=red, label=string];
m10_115 -> m10_101  [key=1, style=dashed, color=red, label=string];
m10_115 -> m10_105  [key=1, style=dashed, color=red, label=string];
m10_115 -> m10_109  [key=1, style=dashed, color=red, label=string];
m10_116 -> m10_101  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m10_117 -> m10_105  [key=1, style=dashed, color=red, label=properties];
m10_117 -> m10_109  [key=1, style=dashed, color=red, label=properties];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBootstrapperConfiguration"];
m12_8 -> m12_6  [key=2, style=dotted];
m12_9 -> m12_12  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_9 -> m12_7  [key=0, style=bold, color=blue];
m12_10 -> m12_3  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid, color=red];
m12_10 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_11 -> m12_8  [key=0, style=bold, color=blue];
m12_11 -> m12_12  [key=0, style=solid, color=red];
m12_11 -> m12_14  [key=2, style=dotted, color=red];
m12_18 -> m12_19  [key=0, style=solid, color=green];
m12_18 -> m12_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan interval"];
m12_18 -> m12_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m12_18 -> m12_21  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m12_18 -> m12_12  [key=2, style=dotted, color=green];
m12_18 -> m12_22  [key=1, style=dashed, color=green, label=options];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_21  [key=2, style=dotted];
m12_19 -> m12_3  [key=2, style=dotted];
m12_20 -> m12_18  [key=0, style=bold, color=blue];
m12_20 -> m12_17  [key=0, style=bold, color=blue];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=2, style=dotted];
m12_6 -> m12_10  [key=0, style=solid, color=red];
m12_6 -> m12_11  [key=1, style=dashed, color=red, label="System.Type"];
m12_6 -> m12_3  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m12_6 -> m12_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m12_6 -> m12_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type jobType"];
m12_6 -> m12_4  [key=0, style=bold, color=blue];
m12_12 -> m12_6  [key=0, style=bold, color=blue];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m12_3 -> m12_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_6  [key=2, style=dotted];
m12_5 -> m12_3  [key=0, style=bold, color=blue];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_7  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_21  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m12_22 -> m12_16  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_21  [key=2, style=dotted];
m12_24 -> m12_22  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBootstrapperConfiguration"];
m12_14 -> m12_16  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_21 -> m12_25  [key=0, style=solid, color=red];
m12_21 -> m12_26  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m12_21 -> m12_18  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m12_21 -> m12_22  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type jobType"];
m12_21 -> m12_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m12_25 -> m12_26  [key=0, style=solid, color=red];
m12_25 -> m12_13  [key=2, style=dotted, color=red];
m12_25 -> m12_12  [key=2, style=dotted];
m12_25 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_26 -> m12_27  [key=0, style=solid, color=red];
m12_26 -> m12_28  [key=2, style=dotted, color=red];
m12_26 -> m12_3  [key=2, style=dotted];
m12_27 -> m12_21  [key=0, style=bold, color=blue];
m12_27 -> m12_24  [key=0, style=bold, color=blue];
m12_13 -> m12_14  [key=0, style=solid];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m12_32 -> m12_3  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_33 -> m12_31  [key=0, style=bold, color=blue];
m12_37 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m12_37 -> m12_38  [key=0, style=solid];
m12_38 -> m12_3  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_39 -> m12_37  [key=0, style=bold, color=blue];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_18  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m12_15 -> m12_13  [key=0, style=bold, color=blue];
m12_17 -> m12_15  [key=0, style=bold, color=blue];
m12_17 -> m12_18  [key=0, style=solid, color=green];
m12_17 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBootstrapperConfiguration"];
m12_28 -> m12_29  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_41 -> m12_12  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_43  [key=2, style=dotted];
m12_29 -> m12_16  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid];
m12_42 -> m12_40  [key=0, style=bold, color=blue];
m12_35 -> m12_16  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_34 -> m12_35  [key=0, style=solid];
m12_30 -> m12_28  [key=0, style=bold, color=blue];
m12_48 -> m12_43  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_36 -> m12_34  [key=0, style=bold, color=blue];
m12_49 -> m12_47  [key=0, style=bold, color=blue];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m12_45 -> m12_3  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_46 -> m12_44  [key=0, style=bold, color=blue];
m12_51 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_54 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m12_50 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_52 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_53 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m12_55 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m12_56 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m14_78 -> m14_79  [key=0, style=solid];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_21  [key=2, style=dotted];
m14_79 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_79 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_51  [key=2, style=dotted];
m14_80 -> m14_11  [key=2, style=dotted];
m14_80 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_11  [key=2, style=dotted];
m14_82 -> m14_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_81 -> m14_82  [key=0, style=solid];
m14_81 -> m14_85  [key=2, style=dotted];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_29  [key=2, style=dotted];
m14_83 -> m14_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_84 -> m14_78  [key=0, style=bold, color=blue];
m14_95 -> m14_96  [key=0, style=solid];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_51  [key=2, style=dotted];
m14_96 -> m14_11  [key=2, style=dotted];
m14_96 -> m14_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_21  [key=2, style=dotted];
m14_97 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_98 -> m14_99  [key=0, style=solid];
m14_98 -> m14_11  [key=2, style=dotted];
m14_98 -> m14_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_29  [key=2, style=dotted];
m14_99 -> m14_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_100 -> m14_95  [key=0, style=bold, color=blue];
m14_34 -> m14_35  [key=0, style=solid];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_40  [key=2, style=dotted];
m14_35 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label=component];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_41  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_29  [key=2, style=dotted];
m14_38 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_28  [key=2, style=dotted];
m14_39 -> m14_34  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_6  [key=2, style=dotted];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m14_21 -> m14_110  [key=0, style=solid];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_41  [key=2, style=dotted];
m14_111 -> m14_21  [key=0, style=bold, color=blue];
m14_23 -> m14_24  [key=0, style=solid];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_21  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_28  [key=2, style=dotted];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_29  [key=2, style=dotted];
m14_26 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_27 -> m14_23  [key=0, style=bold, color=blue];
m14_7 -> m14_8  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_11  [key=2, style=dotted];
m14_8 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_12  [key=2, style=dotted];
m14_10 -> m14_7  [key=0, style=bold, color=blue];
m14_115 -> m14_116  [key=0, style=solid];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_119  [key=2, style=dotted];
m14_116 -> m14_116  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_117 -> m14_118  [key=0, style=solid];
m14_117 -> m14_120  [key=2, style=dotted];
m14_117 -> m14_117  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m14_118 -> m14_115  [key=0, style=bold, color=blue];
m14_62 -> m14_63  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_51  [key=2, style=dotted];
m14_63 -> m14_11  [key=2, style=dotted];
m14_63 -> m14_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_64 -> m14_65  [key=0, style=solid];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_21  [key=2, style=dotted];
m14_65 -> m14_73  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_11  [key=2, style=dotted];
m14_66 -> m14_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_29  [key=2, style=dotted];
m14_67 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_68 -> m14_62  [key=0, style=bold, color=blue];
m14_45 -> m14_46  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_51  [key=2, style=dotted];
m14_46 -> m14_11  [key=2, style=dotted];
m14_46 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_21  [key=2, style=dotted];
m14_47 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_11  [key=2, style=dotted];
m14_48 -> m14_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_52  [key=2, style=dotted];
m14_49 -> m14_29  [key=2, style=dotted];
m14_49 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_50 -> m14_45  [key=0, style=bold, color=blue];
m14_112 -> m14_113  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=2, style=dotted];
m14_15 -> m14_13  [key=0, style=bold, color=blue];
m14_30 -> m14_31  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_11  [key=2, style=dotted];
m14_31 -> m14_33  [key=2, style=dotted];
m14_32 -> m14_30  [key=0, style=bold, color=blue];
m14_42 -> m14_43  [key=0, style=solid];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_33  [key=2, style=dotted];
m14_44 -> m14_42  [key=0, style=bold, color=blue];
m14_53 -> m14_54  [key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_28  [key=2, style=dotted];
m14_56 -> m14_57  [key=0, style=solid];
m14_59 -> m14_60  [key=0, style=solid];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_11  [key=2, style=dotted];
m14_54 -> m14_33  [key=2, style=dotted];
m14_55 -> m14_53  [key=0, style=bold, color=blue];
m14_58 -> m14_56  [key=0, style=bold, color=blue];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_11  [key=2, style=dotted];
m14_60 -> m14_33  [key=2, style=dotted];
m14_61 -> m14_59  [key=0, style=bold, color=blue];
m14_69 -> m14_70  [key=0, style=solid];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_28  [key=2, style=dotted];
m14_72 -> m14_73  [key=0, style=solid];
m14_75 -> m14_76  [key=0, style=solid];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_11  [key=2, style=dotted];
m14_70 -> m14_33  [key=2, style=dotted];
m14_71 -> m14_69  [key=0, style=bold, color=blue];
m14_74 -> m14_72  [key=0, style=bold, color=blue];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_11  [key=2, style=dotted];
m14_76 -> m14_33  [key=2, style=dotted];
m14_77 -> m14_75  [key=0, style=bold, color=blue];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_28  [key=2, style=dotted];
m14_86 -> m14_87  [key=0, style=solid];
m14_89 -> m14_90  [key=0, style=solid];
m14_92 -> m14_93  [key=0, style=solid];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_11  [key=2, style=dotted];
m14_87 -> m14_33  [key=2, style=dotted];
m14_88 -> m14_86  [key=0, style=bold, color=blue];
m14_91 -> m14_89  [key=0, style=bold, color=blue];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_11  [key=2, style=dotted];
m14_93 -> m14_33  [key=2, style=dotted];
m14_94 -> m14_92  [key=0, style=bold, color=blue];
m14_101 -> m14_102  [key=0, style=solid];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_28  [key=2, style=dotted];
m14_104 -> m14_105  [key=0, style=solid];
m14_107 -> m14_108  [key=0, style=solid];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_11  [key=2, style=dotted];
m14_102 -> m14_33  [key=2, style=dotted];
m14_103 -> m14_101  [key=0, style=bold, color=blue];
m14_106 -> m14_104  [key=0, style=bold, color=blue];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_11  [key=2, style=dotted];
m14_108 -> m14_33  [key=2, style=dotted];
m14_109 -> m14_107  [key=0, style=bold, color=blue];
m14_113 -> m14_114  [key=0, style=solid];
m14_114 -> m14_112  [key=0, style=bold, color=blue];
m14_17 -> m14_18  [key=0, style=solid];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_21  [key=2, style=dotted];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_22  [key=2, style=dotted];
m14_20 -> m14_17  [key=0, style=bold, color=blue];
m14_121 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_121 -> m14_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryProcessFacts"];
m14_122 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_123 -> m14_73  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_124 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m14_125 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m16_0 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m16_0 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m16_0 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m16_0 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m16_0 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m16_0 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_1 -> m16_2  [key=0, style=solid];
m16_45 -> m16_46  [key=0, style=solid, color=green];
m16_46 -> m16_47  [key=0, style=solid, color=green];
m16_46 -> m16_48  [key=2, style=dotted, color=green];
m16_47 -> m16_45  [key=0, style=bold, color=blue];
m16_6 -> m16_7  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_23  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [key=0, style=solid];
m16_13 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=arg];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_25  [key=2, style=dotted];
m16_13 -> m16_28  [key=2, style=dotted];
m16_13 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m16_13 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=arg];
m16_13 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m16_13 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_12  [key=0, style=solid];
m16_17 -> m16_31  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_32  [key=2, style=dotted];
m16_19 -> m16_25  [key=2, style=dotted];
m16_19 -> m16_26  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [key=0, style=solid];
m16_4 -> m16_6  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_22  [key=2, style=dotted];
m16_7 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label=type];
m16_10 -> m16_20  [key=0, style=solid];
m16_10 -> m16_24  [key=2, style=dotted];
m16_10 -> m16_25  [key=2, style=dotted];
m16_10 -> m16_26  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_27  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_20  [key=0, style=solid];
m16_14 -> m16_12  [key=0, style=solid];
m16_14 -> m16_15  [key=0, style=solid];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_29  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=arg];
m16_16 -> m16_30  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_3 -> m16_20  [key=0, style=solid];
m16_3 -> m16_21  [key=2, style=dotted];
m16_5 -> m16_20  [key=0, style=solid];
m16_5 -> m16_21  [key=2, style=dotted];
m16_20 -> m16_0  [key=0, style=bold, color=blue];
m16_39 -> m16_40  [key=0, style=solid];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_36  [key=2, style=dotted];
m16_40 -> m16_43  [key=2, style=dotted];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_44  [key=2, style=dotted];
m16_42 -> m16_39  [key=0, style=bold, color=blue];
m16_49 -> m16_50  [key=0, style=solid];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label=disposable];
m16_51 -> m16_53  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_54  [key=2, style=dotted];
m16_53 -> m16_49  [key=0, style=bold, color=blue];
m16_55 -> m16_56  [key=0, style=solid, color=green];
m16_56 -> m16_57  [key=0, style=solid, color=green];
m16_56 -> m16_49  [key=2, style=dotted, color=green];
m16_57 -> m16_55  [key=0, style=bold, color=blue];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_36  [key=2, style=dotted];
m16_34 -> m16_37  [key=2, style=dotted];
m16_34 -> m16_38  [key=2, style=dotted];
m16_35 -> m16_33  [key=0, style=bold, color=blue];
m16_58 -> m16_46  [key=1, style=dashed, color=green, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_56  [key=1, style=dashed, color=green, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m16_58 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobDescriptor"];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m18_20 -> m18_21  [key=0, style=solid];
m18_21 -> m18_22  [key=0, style=solid];
m18_22 -> m18_20  [key=0, style=bold, color=blue];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_10 -> m18_11  [key=0, style=solid, color=red];
m18_10 -> m18_15  [key=0, style=solid];
m18_10 -> m18_17  [key=2, style=dotted];
m18_14 -> m18_16  [key=0, style=solid];
m18_14 -> m18_19  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid, color=red];
m18_11 -> m18_14  [key=0, style=solid, color=red];
m18_15 -> m18_16  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid, color=red];
m18_12 -> m18_18  [key=2, style=dotted, color=red];
m18_13 -> m18_14  [key=0, style=solid];
m18_16 -> m18_9  [key=0, style=bold, color=blue];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>"];
m18_2 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_4 -> m18_7  [key=0, style=solid];
m18_4 -> m18_8  [key=2, style=dotted];
m18_7 -> m18_2  [key=0, style=bold, color=blue];
m18_17 -> m18_23  [key=0, style=solid];
m18_17 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_23 -> m18_24  [key=0, style=solid, color=red];
m18_23 -> m18_33  [key=2, style=dotted];
m18_23 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label=connection];
m18_23 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label=connection];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_37  [key=2, style=dotted];
m18_28 -> m18_38  [key=2, style=dotted];
m18_28 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m18_24 -> m18_25  [key=0, style=solid, color=red];
m18_24 -> m18_34  [key=2, style=dotted, color=red];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_35  [key=2, style=dotted];
m18_25 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_28  [key=0, style=solid];
m18_26 -> m18_36  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_40  [key=2, style=dotted];
m18_27 -> m18_32  [key=0, style=solid];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_39  [key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid];
m18_32 -> m18_17  [key=0, style=bold, color=blue];
m18_41 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_11  [key=1, style=dashed, color=red, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_12  [key=1, style=dashed, color=red, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m18_41 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_3 -> m19_4  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_6  [key=2, style=dotted];
m19_4 -> m19_7  [key=2, style=dotted];
m19_5 -> m19_3  [key=0, style=bold, color=blue];
m19_8 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m19_8 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
}
