digraph  {
n0 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="32-32"];
n1 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="connection == null", span="34-34"];
n4 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="!IsSqlEditionSupported(connection)", span="38-38"];
n8 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="connection.Execute(script)", span="49-49"];
n2 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="throw new ArgumentNullException(''connection'');", span="34-34"];
n3 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Log.Debug(''Start installing HangFire SQL objects...'')", span="36-36"];
n12 [cluster="Unk.Debug", label="Entry Unk.Debug", span=""];
n5 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="40-40"];
n6 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="43-45"];
n13 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="54-54"];
n7 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="47-47"];
n15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="60-60"];
n16 [cluster="string.Replace(string, string)", label="Entry string.Replace(string, string)", span="0-0"];
n9 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Log.Debug(''HangFire SQL objects installed.'')", span="51-51"];
n17 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
n10 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="32-32"];
n11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n14 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
n18 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="56-56"];
n19 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="57-57"];
n21 [cluster="Unk.>", label="Entry Unk.>", span=""];
n22 [cluster="Unk.Single", label="Entry Unk.Single", span=""];
n20 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="54-54"];
n23 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="62-62"];
n25 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="66-69"];
n24 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="stream == null", span="64-64"];
n29 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
n26 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="var reader = new StreamReader(stream)", span="72-72"];
n27 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="return reader.ReadToEnd();", span="74-74"];
n32 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
n28 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="60-60"];
n30 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n31 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n33 [cluster="System.IO.StreamReader.ReadToEnd()", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
d5 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", color=green, community=0, label="-1: _stateMock = new Mock<JobState>(''SomeReason'')", span="28-28"];
d47 [label="HangFire.Tests.Client.JobClientTests", span=""];
d4 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", label="_client = new JobClient(_connectionMock.Object, _creatorMock.Object)", span="27-27"];
d6 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", label="_method = new JobMethod(typeof(JobClientTests), typeof(JobClientTests).GetMethod(''Method''))", span="29-29"];
d14 [cluster="Mock<JobState>.cstr", label="Entry Mock<JobState>.cstr", span=""];
d1 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", label="_connectionMock = new Mock<IStorageConnection>()", span="23-23"];
d2 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", label="_connectionMock.Setup(x => x.Storage).Returns(new Mock<JobStorage>().Object)", span="24-24"];
d3 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", label="_creatorMock = new Mock<JobCreator>()", span="26-26"];
d21 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", label="new JobClient(null, _creatorMock.Object)", span="37-37"];
d24 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", label="new JobClient(_connectionMock.Object, null)", span="46-46"];
d27 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", label="_client.CreateJob(null, new string[0], _stateMock.Object)", span="54-54"];
d31 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", label="_client.CreateJob(_method, null, _stateMock.Object)", span="61-61"];
d34 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", label="_client.CreateJob(_method, new string[0], null)", span="68-68"];
d38 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", label="_client.CreateJob(_method, new[] { ''hello'', ''3'' }, _stateMock.Object)", span="74-74"];
d13 [cluster="JobClient.cstr", label="Entry JobClient.cstr", span=""];
d7 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", label="Exit HangFire.Tests.Client.JobClientTests.Initialize()", span="21-21"];
d15 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48"];
d16 [cluster="System.Type.GetMethod(string)", label="Entry System.Type.GetMethod(string)", span="0-0"];
d0 [cluster="HangFire.Tests.Client.JobClientTests.Initialize()", label="Entry HangFire.Tests.Client.JobClientTests.Initialize()", span="21-21"];
d8 [cluster="Mock<IStorageConnection>.cstr", label="Entry Mock<IStorageConnection>.cstr", span=""];
d9 [cluster="Unk.Setup", label="Entry Unk.Setup", span=""];
d10 [cluster="Mock<JobStorage>.cstr", label="Entry Mock<JobStorage>.cstr", span=""];
d11 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
d17 [cluster="lambda expression", label="Entry lambda expression", span="24-24"];
d12 [cluster="Mock<JobCreator>.cstr", label="Entry Mock<JobCreator>.cstr", span=""];
d20 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", label="Entry HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", span="34-34"];
d22 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", label="Exit HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", span="34-34"];
d23 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", label="Entry HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="43-43"];
d25 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", label="Exit HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="43-43"];
d26 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="52-52"];
d28 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="52-52"];
d29 [cluster="Unk.CreateJob", label="Entry Unk.CreateJob", span=""];
d30 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="59-59"];
d32 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="59-59"];
d33 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="66-66"];
d35 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="66-66"];
d36 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", label="Entry HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75"];
d37 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", span="72-72"];
d39 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", span="72-72"];
d19 [cluster="lambda expression", label="Exit lambda expression", span="24-24"];
d18 [cluster="lambda expression", label="x.Storage", span="24-24"];
m0_26 [cluster="Unk.GetTestJob", file="WriteTransactionFacts.cs", label="Entry Unk.GetTestJob", span=""];
m0_205 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m0_12 [cluster="Unk.UseConnection", file="WriteTransactionFacts.cs", label="Entry Unk.UseConnection", span=""];
m0_256 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="303-303"];
m0_257 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="305-316"];
m0_258 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="303-303"];
m0_82 [cluster="Unk.Equal", file="WriteTransactionFacts.cs", label="Entry Unk.Equal", span=""];
m0_243 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m0_93 [cluster="Unk.SetJobState", file="WriteTransactionFacts.cs", label="Entry Unk.SetJobState", span=""];
m0_192 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="222-222"];
m0_193 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="224-233"];
m0_194 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="222-222"];
m0_34 [cluster="Unk.ExpireJob", file="WriteTransactionFacts.cs", label="Entry Unk.ExpireJob", span=""];
m0_125 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m0_126 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="WriteTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149"];
m0_127 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m0_139 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m0_140 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="WriteTransactionFacts.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156"];
m0_141 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m0_22 [cluster="Unk.Query", file="WriteTransactionFacts.cs", label="Entry Unk.Query", span=""];
m0_142 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m0_143 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n            })", span="162-170"];
m0_144 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m0_94 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m0_96 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="WriteTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<State>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n                state.Object.Reason = ''Reason'';\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="113-135"];
m0_95 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="WriteTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111"];
m0_97 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m0_298 [cluster="System.Action<T>.Invoke(T)", file="WriteTransactionFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_33 [cluster="System.TimeSpan.FromDays(double)", file="WriteTransactionFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_179 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m0_0 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m0_1 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="WriteTransactionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18"];
m0_2 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m0_24 [cluster="Unk.ToString", file="WriteTransactionFacts.cs", label="Entry Unk.ToString", span=""];
m0_180 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="205-205"];
m0_181 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="207-218"];
m0_182 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="205-205"];
m0_27 [cluster="System.DateTime.AddDays(double)", file="WriteTransactionFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m0_124 [cluster="Unk.AddJobState", file="WriteTransactionFacts.cs", label="Entry Unk.AddJobState", span=""];
m0_48 [cluster="Unk.NotNull", file="WriteTransactionFacts.cs", label="Entry Unk.NotNull", span=""];
m0_81 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WriteTransactionFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_268 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m0_78 [cluster="Mock<State>.cstr", file="WriteTransactionFacts.cs", label="Entry Mock<State>.cstr", span=""];
m0_25 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="361-361"];
m0_299 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection)", span="365-365"];
m0_300 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs", label="action(transaction)", span="367-367"];
m0_301 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs", label="transaction.Commit()", span="368-368"];
m0_302 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="361-361"];
m0_79 [cluster="Unk.Setup", file="WriteTransactionFacts.cs", label="Entry Unk.Setup", span=""];
m0_281 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="337-337"];
m0_282 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="339-350"];
m0_283 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="337-337"];
m0_29 [cluster="Unk.Null", file="WriteTransactionFacts.cs", label="Entry Unk.Null", span=""];
m0_155 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="174-174"];
m0_156 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="176-187"];
m0_157 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="174-174"];
m0_303 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m0_89 [cluster="Unk.SerializeData", file="WriteTransactionFacts.cs", label="Entry Unk.SerializeData", span=""];
m0_230 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="271-271"];
m0_231 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="273-282"];
m0_232 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="271-271"];
m0_35 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m0_37 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64"];
m0_36 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m0_38 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m0_115 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="118-118"];
m0_145 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="162-170"];
m0_146 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164"];
m0_147 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166"];
m0_151 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="164-164"];
m0_148 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(''my-key'', record.Key)", span="168-168"];
m0_149 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(1, record.Value)", span="169-169"];
m0_150 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="162-170"];
m0_152 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.IncrementCounter(''my-key'')", span="164-164"];
m0_153 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="164-164"];
m0_158 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="176-187"];
m0_159 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="178-182"];
m0_160 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="184-184"];
m0_163 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="178-182"];
m0_161 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(2, recordCount)", span="186-186"];
m0_162 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="176-187"];
m0_164 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.IncrementCounter(''my-key'')", span="180-180"];
m0_165 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.IncrementCounter(''my-key'')", span="181-181"];
m0_166 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="178-182"];
m0_170 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="193-201"];
m0_171 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x => x.DecrementCounter(''my-key''))", span="195-195"];
m0_172 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var record = sql.Query(''select * from HangFire.Counter'').Single()", span="197-197"];
m0_176 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="195-195"];
m0_173 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(''my-key'', record.Key)", span="199-199"];
m0_174 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(-1, record.Value)", span="200-200"];
m0_175 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="193-201"];
m0_177 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.DecrementCounter(''my-key'')", span="195-195"];
m0_178 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="195-195"];
m0_183 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="207-218"];
m0_184 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="209-213"];
m0_185 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="215-215"];
m0_188 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="209-213"];
m0_186 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(2, recordCount)", span="217-217"];
m0_187 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="207-218"];
m0_189 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.DecrementCounter(''my-key'')", span="211-211"];
m0_190 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: x.DecrementCounter(''my-key'')", span="212-212"];
m0_191 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="209-213"];
m0_195 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="224-233"];
m0_196 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="226-226"];
m0_197 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="228-228"];
m0_202 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="226-226"];
m0_198 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(''my-key'', record.Key)", span="230-230"];
m0_199 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(''my-value'', record.Value)", span="231-231"];
m0_200 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(0.0, record.Score, 2)", span="232-232"];
m0_201 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="224-233"];
m0_203 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="226-226"];
m0_204 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="226-226"];
m0_209 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="239-250"];
m0_210 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="241-245"];
m0_211 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="247-247"];
m0_214 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="241-245"];
m0_212 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(2, recordCount)", span="249-249"];
m0_213 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="239-250"];
m0_215 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="243-243"];
m0_216 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''another-value'')", span="244-244"];
m0_217 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="241-245"];
m0_221 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="256-267"];
m0_222 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="258-262"];
m0_223 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="264-264"];
m0_226 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="258-262"];
m0_224 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(1, recordCount)", span="266-266"];
m0_225 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="256-267"];
m0_227 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="260-260"];
m0_228 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="261-261"];
m0_229 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="258-262"];
m0_233 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="273-282"];
m0_234 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="275-275"];
m0_235 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="277-277"];
m0_240 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="275-275"];
m0_236 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(''my-key'', record.Key)", span="279-279"];
m0_237 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(''my-value'', record.Value)", span="280-280"];
m0_238 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(3.2, record.Score, 3)", span="281-281"];
m0_239 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="273-282"];
m0_241 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'', 3.2)", span="275-275"];
m0_242 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="275-275"];
m0_247 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="288-299"];
m0_248 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="290-294"];
m0_249 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="296-296"];
m0_252 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="290-294"];
m0_250 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(3.2, record.Score, 3)", span="298-298"];
m0_251 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="288-299"];
m0_253 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="292-292"];
m0_254 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'', 3.2)", span="293-293"];
m0_255 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="290-294"];
m0_259 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="305-316"];
m0_260 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="307-311"];
m0_261 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="313-313"];
m0_264 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="307-311"];
m0_262 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(0, recordCount)", span="315-315"];
m0_263 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="305-316"];
m0_265 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="309-309"];
m0_266 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.RemoveFromSet(''my-key'', ''my-value'')", span="310-310"];
m0_267 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="307-311"];
m0_272 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="322-333"];
m0_273 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="324-328"];
m0_274 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="330-330"];
m0_277 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="324-328"];
m0_275 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(1, recordCount)", span="332-332"];
m0_276 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="322-333"];
m0_278 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="326-326"];
m0_279 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.RemoveFromSet(''my-key'', ''different-value'')", span="327-327"];
m0_280 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="324-328"];
m0_284 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="339-350"];
m0_285 [cluster="lambda expression", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="341-345"];
m0_286 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="347-347"];
m0_289 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="341-345"];
m0_287 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: Assert.Equal(1, recordCount)", span="349-349"];
m0_288 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="339-350"];
m0_290 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.AddToSet(''my-key'', ''my-value'')", span="343-343"];
m0_291 [cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs", label="-1: x.RemoveFromSet(''different-key'', ''my-value'')", span="344-344"];
m0_292 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="341-345"];
m0_16 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34"];
m0_17 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="36-36"];
m0_19 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39"];
m0_42 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="57-57"];
m0_43 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="59-59"];
m0_45 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62"];
m0_64 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86"];
m0_65 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="88-88"];
m0_68 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92"];
m0_104 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123"];
m0_105 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="125-125"];
m0_129 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143"];
m0_14 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31"];
m0_15 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32"];
m0_40 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m0_41 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m0_58 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m0_59 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m0_71 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96"];
m0_99 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115"];
m0_108 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129"];
m0_130 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145"];
m0_72 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97"];
m0_66 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''State'', job.StateName)", span="89-89"];
m0_73 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''State'', jobState.Name)", span="98-98"];
m0_74 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99"];
m0_76 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101"];
m0_109 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130"];
m0_110 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''State'', jobState.Name)", span="131-131"];
m0_111 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132"];
m0_113 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134"];
m0_131 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146"];
m0_132 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Equal(''default'', record.Queue)", span="147-147"];
m0_13 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="29-41"];
m0_30 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="34-34"];
m0_18 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37"];
m0_20 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Null(anotherJob.ExpireAt)", span="40-40"];
m0_39 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="52-64"];
m0_49 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="57-57"];
m0_44 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Null(job.ExpireAt)", span="60-60"];
m0_46 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63"];
m0_57 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="75-102"];
m0_63 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="state.Object.Reason = ''Reason''", span="84-84"];
m0_90 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="86-86"];
m0_67 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.NotNull(job.StateId)", span="90-90"];
m0_69 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Null(anotherJob.StateName)", span="93-93"];
m0_70 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Null(anotherJob.StateId)", span="94-94"];
m0_98 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="113-135"];
m0_103 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="state.Object.Reason = ''Reason''", span="121-121"];
m0_121 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="123-123"];
m0_106 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Null(job.StateName)", span="126-126"];
m0_107 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Null(job.StateId)", span="127-127"];
m0_128 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="141-149"];
m0_135 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="143-143"];
m0_31 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34"];
m0_50 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.PersistJob(jobId)", span="57-57"];
m0_91 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.SetJobState(jobId, state.Object)", span="86-86"];
m0_60 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var state = new Mock<State>()", span="80-80"];
m0_75 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.NotNull(jobState.CreatedAt)", span="100-100"];
m0_100 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="var state = new Mock<State>()", span="117-117"];
m0_122 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.AddJobState(jobId, state.Object)", span="123-123"];
m0_112 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.NotNull(jobState.CreatedAt)", span="133-133"];
m0_133 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Assert.Null(record.FetchedAt)", span="148-148"];
m0_77 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="75-102"];
m0_114 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="113-135"];
m0_4 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="18-18"];
m0_21 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="29-41"];
m0_32 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="34-34"];
m0_47 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="52-64"];
m0_51 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="57-57"];
m0_62 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="82-83"];
m0_92 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="86-86"];
m0_102 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="119-120"];
m0_123 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="123-123"];
m0_134 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="141-149"];
m0_137 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="143-143"];
m0_136 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.AddToQueue(''default'', ''1'')", span="143-143"];
m0_5 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="new SqlServerWriteOnlyTransaction(null)", span="18-18"];
m0_61 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="81-81"];
m0_101 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="118-118"];
m0_6 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="18-18"];
m0_86 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="82-82"];
m0_118 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="119-119"];
m0_83 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="81-81"];
m0_88 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="82-82"];
m0_87 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.SerializeData()", span="82-82"];
m0_120 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="119-119"];
m0_119 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.SerializeData()", span="119-119"];
m0_85 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="81-81"];
m0_84 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.Name", span="81-81"];
m0_116 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.Name", span="118-118"];
m0_117 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="118-118"];
m0_269 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="320-320"];
m0_270 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="322-333"];
m0_271 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="320-320"];
m0_218 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="254-254"];
m0_219 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="256-267"];
m0_220 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="254-254"];
m0_293 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="353-353"];
m0_295 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs", label="action(connection)", span="357-357"];
m0_294 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs", label="var connection = ConnectionUtils.CreateConnection()", span="355-355"];
m0_296 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="353-353"];
m0_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m0_23 [cluster="Unk.Single", file="WriteTransactionFacts.cs", label="Entry Unk.Single", span=""];
m0_8 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m0_10 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="29-41"];
m0_9 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27"];
m0_11 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m0_53 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m0_55 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="WriteTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<State>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n                state.Object.Reason = ''Reason'';\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102"];
m0_54 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="WriteTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m0_56 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m0_28 [cluster="Unk.True", file="WriteTransactionFacts.cs", label="Entry Unk.True", span=""];
m0_138 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m0_297 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m0_154 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m0_80 [cluster="Unk.Returns", file="WriteTransactionFacts.cs", label="Entry Unk.Returns", span=""];
m0_206 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="237-237"];
m0_207 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="239-250"];
m0_208 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="237-237"];
m0_244 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="286-286"];
m0_245 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="288-299"];
m0_246 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="286-286"];
m0_52 [cluster="Unk.PersistJob", file="WriteTransactionFacts.cs", label="Entry Unk.PersistJob", span=""];
m0_167 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="WriteTransactionFacts.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="191-191"];
m0_168 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", color=green, community=1, file="WriteTransactionFacts.cs", label="-1: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n            })", span="193-201"];
m0_169 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="WriteTransactionFacts.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="191-191"];
m0_304 [file="WriteTransactionFacts.cs", label="HangFire.SqlServer.Tests.WriteTransactionFacts", span=""];
m0_305 [file="WriteTransactionFacts.cs", label=arrangeSql, span=""];
m0_307 [file="WriteTransactionFacts.cs", label=arrangeSql, span=""];
m0_309 [file="WriteTransactionFacts.cs", label=arrangeSql, span=""];
m0_312 [file="WriteTransactionFacts.cs", label=arrangeSql, span=""];
m0_306 [file="WriteTransactionFacts.cs", label=jobId, span=""];
m0_308 [file="WriteTransactionFacts.cs", label=jobId, span=""];
m0_310 [file="WriteTransactionFacts.cs", label=jobId, span=""];
m0_311 [file="WriteTransactionFacts.cs", label=state, span=""];
m0_313 [file="WriteTransactionFacts.cs", label=jobId, span=""];
m0_314 [file="WriteTransactionFacts.cs", label=state, span=""];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
n0 -> n8  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=0, style=solid];
n4 -> n13  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n17  [key=2, style=dotted];
n2 -> n10  [key=0, style=solid];
n2 -> n11  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n12  [key=2, style=dotted];
n5 -> n10  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n15  [key=2, style=dotted];
n13 -> n18  [key=0, style=solid];
n13 -> n0  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [key=2, style=dotted];
n7 -> n7  [color=darkseagreen4, key=1, label=script, style=dashed];
n15 -> n23  [key=0, style=solid];
n15 -> n25  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
n15 -> n6  [color=darkorchid, key=3, label="Parameter variable string resourceName", style=bold];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=2, style=dotted];
n10 -> n0  [color=blue, key=0, style=bold];
n18 -> n19  [key=0, style=solid];
n18 -> n21  [key=2, style=dotted];
n18 -> n22  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n20 -> n13  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n23 -> n29  [key=2, style=dotted];
n23 -> n26  [color=darkseagreen4, key=1, label=stream, style=dashed];
n25 -> n28  [key=0, style=solid];
n25 -> n30  [key=2, style=dotted];
n25 -> n31  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n32  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n33  [key=2, style=dotted];
n28 -> n15  [color=blue, key=0, style=bold];
d5 -> d5  [color=green, key=3, label="Field variable int RequiredSchemaVersion", style=bold];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d14  [color=green, key=2, style=dotted];
d47 -> d5  [color=green, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d1  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d2  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d3  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d4  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d6  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d21  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d24  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d27  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d31  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d34  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d47 -> d38  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
d4 -> d5  [color=green, key=0, style=solid];
d4 -> d13  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d15  [key=2, style=dotted];
d6 -> d16  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d8  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d2 -> d9  [key=2, style=dotted];
d2 -> d10  [key=2, style=dotted];
d2 -> d11  [key=2, style=dotted];
d2 -> d17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d3 -> d4  [key=0, style=solid];
d3 -> d12  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d13  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d13  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d27 -> d29  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d31 -> d29  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d36  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d29  [key=2, style=dotted];
d7 -> d0  [color=blue, key=0, style=bold];
d0 -> d1  [key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d22 -> d20  [color=blue, key=0, style=bold];
d23 -> d24  [key=0, style=solid];
d25 -> d23  [color=blue, key=0, style=bold];
d26 -> d27  [key=0, style=solid];
d28 -> d26  [color=blue, key=0, style=bold];
d30 -> d31  [key=0, style=solid];
d32 -> d30  [color=blue, key=0, style=bold];
d33 -> d34  [key=0, style=solid];
d35 -> d33  [color=blue, key=0, style=bold];
d37 -> d38  [key=0, style=solid];
d39 -> d37  [color=blue, key=0, style=bold];
d19 -> d17  [color=blue, key=0, style=bold];
d18 -> d19  [key=0, style=solid];
m0_256 -> m0_257  [color=green, key=0, style=solid];
m0_257 -> m0_258  [color=green, key=0, style=solid];
m0_257 -> m0_12  [color=green, key=2, style=dotted];
m0_257 -> m0_259  [color=green, key=1, label="lambda expression", style=dashed];
m0_258 -> m0_256  [color=blue, key=0, style=bold];
m0_192 -> m0_193  [color=green, key=0, style=solid];
m0_193 -> m0_194  [color=green, key=0, style=solid];
m0_193 -> m0_12  [color=green, key=2, style=dotted];
m0_193 -> m0_195  [color=green, key=1, label="lambda expression", style=dashed];
m0_194 -> m0_192  [color=blue, key=0, style=bold];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_12  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_127 -> m0_125  [color=blue, key=0, style=bold];
m0_139 -> m0_140  [key=0, style=solid];
m0_140 -> m0_22  [key=2, style=dotted];
m0_140 -> m0_23  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_141 -> m0_139  [color=blue, key=0, style=bold];
m0_142 -> m0_143  [color=green, key=0, style=solid];
m0_143 -> m0_144  [color=green, key=0, style=solid];
m0_143 -> m0_12  [color=green, key=2, style=dotted];
m0_143 -> m0_145  [color=green, key=1, label="lambda expression", style=dashed];
m0_144 -> m0_142  [color=blue, key=0, style=bold];
m0_94 -> m0_95  [key=0, style=solid];
m0_96 -> m0_12  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_99  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_95 -> m0_9  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m0_97 -> m0_94  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> n21  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [color=green, key=0, style=solid];
m0_181 -> m0_182  [color=green, key=0, style=solid];
m0_181 -> m0_12  [color=green, key=2, style=dotted];
m0_181 -> m0_183  [color=green, key=1, label="lambda expression", style=dashed];
m0_182 -> m0_180  [color=blue, key=0, style=bold];
m0_25 -> m0_299  [key=0, style=solid];
m0_25 -> m0_300  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_7  [key=2, style=dotted];
m0_299 -> m0_301  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_298  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_303  [key=2, style=dotted];
m0_302 -> m0_25  [color=blue, key=0, style=bold];
m0_281 -> m0_282  [color=green, key=0, style=solid];
m0_282 -> m0_283  [color=green, key=0, style=solid];
m0_282 -> m0_12  [color=green, key=2, style=dotted];
m0_282 -> m0_284  [color=green, key=1, label="lambda expression", style=dashed];
m0_283 -> m0_281  [color=blue, key=0, style=bold];
m0_155 -> m0_156  [color=green, key=0, style=solid];
m0_156 -> m0_157  [color=green, key=0, style=solid];
m0_156 -> m0_12  [color=green, key=2, style=dotted];
m0_156 -> m0_158  [color=green, key=1, label="lambda expression", style=dashed];
m0_157 -> m0_155  [color=blue, key=0, style=bold];
m0_230 -> m0_231  [color=green, key=0, style=solid];
m0_231 -> m0_232  [color=green, key=0, style=solid];
m0_231 -> m0_12  [color=green, key=2, style=dotted];
m0_231 -> m0_233  [color=green, key=1, label="lambda expression", style=dashed];
m0_232 -> m0_230  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_37 -> m0_12  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_40  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_36 -> m0_41  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_36 -> m0_36  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m0_38 -> m0_35  [color=blue, key=0, style=bold];
m0_115 -> m0_116  [key=0, style=solid];
m0_145 -> m0_146  [color=green, key=0, style=solid];
m0_145 -> m0_147  [color=green, key=1, label=SqlConnection, style=dashed];
m0_146 -> m0_147  [color=green, key=0, style=solid];
m0_146 -> m0_25  [color=green, key=2, style=dotted];
m0_146 -> m0_151  [color=green, key=1, label="lambda expression", style=dashed];
m0_147 -> m0_148  [color=green, key=0, style=solid];
m0_147 -> m0_22  [color=green, key=2, style=dotted];
m0_147 -> m0_23  [color=green, key=2, style=dotted];
m0_147 -> m0_149  [color=green, key=1, label=record, style=dashed];
m0_151 -> m0_152  [color=green, key=0, style=solid];
m0_148 -> m0_149  [color=green, key=0, style=solid];
m0_148 -> m0_82  [color=green, key=2, style=dotted];
m0_149 -> m0_150  [color=green, key=0, style=solid];
m0_149 -> m0_82  [color=green, key=2, style=dotted];
m0_150 -> m0_145  [color=blue, key=0, style=bold];
m0_152 -> m0_153  [color=green, key=0, style=solid];
m0_152 -> m0_154  [color=green, key=2, style=dotted];
m0_153 -> m0_151  [color=blue, key=0, style=bold];
m0_158 -> m0_159  [color=green, key=0, style=solid];
m0_158 -> m0_160  [color=green, key=1, label=SqlConnection, style=dashed];
m0_159 -> m0_160  [color=green, key=0, style=solid];
m0_159 -> m0_25  [color=green, key=2, style=dotted];
m0_159 -> m0_163  [color=green, key=1, label="lambda expression", style=dashed];
m0_160 -> m0_161  [color=green, key=0, style=solid];
m0_160 -> n21  [color=green, key=2, style=dotted];
m0_160 -> m0_23  [color=green, key=2, style=dotted];
m0_163 -> m0_164  [color=green, key=0, style=solid];
m0_163 -> m0_165  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_161 -> m0_162  [color=green, key=0, style=solid];
m0_161 -> m0_82  [color=green, key=2, style=dotted];
m0_162 -> m0_158  [color=blue, key=0, style=bold];
m0_164 -> m0_165  [color=green, key=0, style=solid];
m0_164 -> m0_154  [color=green, key=2, style=dotted];
m0_165 -> m0_166  [color=green, key=0, style=solid];
m0_165 -> m0_154  [color=green, key=2, style=dotted];
m0_166 -> m0_163  [color=blue, key=0, style=bold];
m0_170 -> m0_171  [color=green, key=0, style=solid];
m0_170 -> m0_172  [color=green, key=1, label=SqlConnection, style=dashed];
m0_171 -> m0_172  [color=green, key=0, style=solid];
m0_171 -> m0_25  [color=green, key=2, style=dotted];
m0_171 -> m0_176  [color=green, key=1, label="lambda expression", style=dashed];
m0_172 -> m0_173  [color=green, key=0, style=solid];
m0_172 -> m0_22  [color=green, key=2, style=dotted];
m0_172 -> m0_23  [color=green, key=2, style=dotted];
m0_172 -> m0_174  [color=green, key=1, label=record, style=dashed];
m0_176 -> m0_177  [color=green, key=0, style=solid];
m0_173 -> m0_174  [color=green, key=0, style=solid];
m0_173 -> m0_82  [color=green, key=2, style=dotted];
m0_174 -> m0_175  [color=green, key=0, style=solid];
m0_174 -> m0_82  [color=green, key=2, style=dotted];
m0_175 -> m0_170  [color=blue, key=0, style=bold];
m0_177 -> m0_178  [color=green, key=0, style=solid];
m0_177 -> m0_179  [color=green, key=2, style=dotted];
m0_178 -> m0_176  [color=blue, key=0, style=bold];
m0_183 -> m0_184  [color=green, key=0, style=solid];
m0_183 -> m0_185  [color=green, key=1, label=SqlConnection, style=dashed];
m0_184 -> m0_185  [color=green, key=0, style=solid];
m0_184 -> m0_25  [color=green, key=2, style=dotted];
m0_184 -> m0_188  [color=green, key=1, label="lambda expression", style=dashed];
m0_185 -> m0_186  [color=green, key=0, style=solid];
m0_185 -> n21  [color=green, key=2, style=dotted];
m0_185 -> m0_23  [color=green, key=2, style=dotted];
m0_188 -> m0_189  [color=green, key=0, style=solid];
m0_188 -> m0_190  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_186 -> m0_187  [color=green, key=0, style=solid];
m0_186 -> m0_82  [color=green, key=2, style=dotted];
m0_187 -> m0_183  [color=blue, key=0, style=bold];
m0_189 -> m0_190  [color=green, key=0, style=solid];
m0_189 -> m0_179  [color=green, key=2, style=dotted];
m0_190 -> m0_191  [color=green, key=0, style=solid];
m0_190 -> m0_179  [color=green, key=2, style=dotted];
m0_191 -> m0_188  [color=blue, key=0, style=bold];
m0_195 -> m0_196  [color=green, key=0, style=solid];
m0_195 -> m0_197  [color=green, key=1, label=SqlConnection, style=dashed];
m0_196 -> m0_197  [color=green, key=0, style=solid];
m0_196 -> m0_25  [color=green, key=2, style=dotted];
m0_196 -> m0_202  [color=green, key=1, label="lambda expression", style=dashed];
m0_197 -> m0_198  [color=green, key=0, style=solid];
m0_197 -> m0_22  [color=green, key=2, style=dotted];
m0_197 -> m0_23  [color=green, key=2, style=dotted];
m0_197 -> m0_199  [color=green, key=1, label=record, style=dashed];
m0_197 -> m0_200  [color=green, key=1, label=record, style=dashed];
m0_202 -> m0_203  [color=green, key=0, style=solid];
m0_198 -> m0_199  [color=green, key=0, style=solid];
m0_198 -> m0_82  [color=green, key=2, style=dotted];
m0_199 -> m0_200  [color=green, key=0, style=solid];
m0_199 -> m0_82  [color=green, key=2, style=dotted];
m0_200 -> m0_201  [color=green, key=0, style=solid];
m0_200 -> m0_82  [color=green, key=2, style=dotted];
m0_201 -> m0_195  [color=blue, key=0, style=bold];
m0_203 -> m0_204  [color=green, key=0, style=solid];
m0_203 -> m0_205  [color=green, key=2, style=dotted];
m0_204 -> m0_202  [color=blue, key=0, style=bold];
m0_209 -> m0_210  [color=green, key=0, style=solid];
m0_209 -> m0_211  [color=green, key=1, label=SqlConnection, style=dashed];
m0_210 -> m0_211  [color=green, key=0, style=solid];
m0_210 -> m0_25  [color=green, key=2, style=dotted];
m0_210 -> m0_214  [color=green, key=1, label="lambda expression", style=dashed];
m0_211 -> m0_212  [color=green, key=0, style=solid];
m0_211 -> n21  [color=green, key=2, style=dotted];
m0_211 -> m0_23  [color=green, key=2, style=dotted];
m0_214 -> m0_215  [color=green, key=0, style=solid];
m0_214 -> m0_216  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_212 -> m0_213  [color=green, key=0, style=solid];
m0_212 -> m0_82  [color=green, key=2, style=dotted];
m0_213 -> m0_209  [color=blue, key=0, style=bold];
m0_215 -> m0_216  [color=green, key=0, style=solid];
m0_215 -> m0_205  [color=green, key=2, style=dotted];
m0_216 -> m0_217  [color=green, key=0, style=solid];
m0_216 -> m0_205  [color=green, key=2, style=dotted];
m0_217 -> m0_214  [color=blue, key=0, style=bold];
m0_221 -> m0_222  [color=green, key=0, style=solid];
m0_221 -> m0_223  [color=green, key=1, label=SqlConnection, style=dashed];
m0_222 -> m0_223  [color=green, key=0, style=solid];
m0_222 -> m0_25  [color=green, key=2, style=dotted];
m0_222 -> m0_226  [color=green, key=1, label="lambda expression", style=dashed];
m0_223 -> m0_224  [color=green, key=0, style=solid];
m0_223 -> n21  [color=green, key=2, style=dotted];
m0_223 -> m0_23  [color=green, key=2, style=dotted];
m0_226 -> m0_227  [color=green, key=0, style=solid];
m0_226 -> m0_228  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_224 -> m0_225  [color=green, key=0, style=solid];
m0_224 -> m0_82  [color=green, key=2, style=dotted];
m0_225 -> m0_221  [color=blue, key=0, style=bold];
m0_227 -> m0_228  [color=green, key=0, style=solid];
m0_227 -> m0_205  [color=green, key=2, style=dotted];
m0_228 -> m0_229  [color=green, key=0, style=solid];
m0_228 -> m0_205  [color=green, key=2, style=dotted];
m0_229 -> m0_226  [color=blue, key=0, style=bold];
m0_233 -> m0_234  [color=green, key=0, style=solid];
m0_233 -> m0_235  [color=green, key=1, label=SqlConnection, style=dashed];
m0_234 -> m0_235  [color=green, key=0, style=solid];
m0_234 -> m0_25  [color=green, key=2, style=dotted];
m0_234 -> m0_240  [color=green, key=1, label="lambda expression", style=dashed];
m0_235 -> m0_236  [color=green, key=0, style=solid];
m0_235 -> m0_22  [color=green, key=2, style=dotted];
m0_235 -> m0_23  [color=green, key=2, style=dotted];
m0_235 -> m0_237  [color=green, key=1, label=record, style=dashed];
m0_235 -> m0_238  [color=green, key=1, label=record, style=dashed];
m0_240 -> m0_241  [color=green, key=0, style=solid];
m0_236 -> m0_237  [color=green, key=0, style=solid];
m0_236 -> m0_82  [color=green, key=2, style=dotted];
m0_237 -> m0_238  [color=green, key=0, style=solid];
m0_237 -> m0_82  [color=green, key=2, style=dotted];
m0_238 -> m0_239  [color=green, key=0, style=solid];
m0_238 -> m0_82  [color=green, key=2, style=dotted];
m0_239 -> m0_233  [color=blue, key=0, style=bold];
m0_241 -> m0_242  [color=green, key=0, style=solid];
m0_241 -> m0_243  [color=green, key=2, style=dotted];
m0_242 -> m0_240  [color=blue, key=0, style=bold];
m0_247 -> m0_248  [color=green, key=0, style=solid];
m0_247 -> m0_249  [color=green, key=1, label=SqlConnection, style=dashed];
m0_248 -> m0_249  [color=green, key=0, style=solid];
m0_248 -> m0_25  [color=green, key=2, style=dotted];
m0_248 -> m0_252  [color=green, key=1, label="lambda expression", style=dashed];
m0_249 -> m0_250  [color=green, key=0, style=solid];
m0_249 -> m0_22  [color=green, key=2, style=dotted];
m0_249 -> m0_23  [color=green, key=2, style=dotted];
m0_252 -> m0_253  [color=green, key=0, style=solid];
m0_252 -> m0_254  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_250 -> m0_251  [color=green, key=0, style=solid];
m0_250 -> m0_82  [color=green, key=2, style=dotted];
m0_251 -> m0_247  [color=blue, key=0, style=bold];
m0_253 -> m0_254  [color=green, key=0, style=solid];
m0_253 -> m0_205  [color=green, key=2, style=dotted];
m0_254 -> m0_255  [color=green, key=0, style=solid];
m0_254 -> m0_243  [color=green, key=2, style=dotted];
m0_255 -> m0_252  [color=blue, key=0, style=bold];
m0_259 -> m0_260  [color=green, key=0, style=solid];
m0_259 -> m0_261  [color=green, key=1, label=SqlConnection, style=dashed];
m0_260 -> m0_261  [color=green, key=0, style=solid];
m0_260 -> m0_25  [color=green, key=2, style=dotted];
m0_260 -> m0_264  [color=green, key=1, label="lambda expression", style=dashed];
m0_261 -> m0_262  [color=green, key=0, style=solid];
m0_261 -> n21  [color=green, key=2, style=dotted];
m0_261 -> m0_23  [color=green, key=2, style=dotted];
m0_264 -> m0_265  [color=green, key=0, style=solid];
m0_264 -> m0_266  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_262 -> m0_263  [color=green, key=0, style=solid];
m0_262 -> m0_82  [color=green, key=2, style=dotted];
m0_263 -> m0_259  [color=blue, key=0, style=bold];
m0_265 -> m0_266  [color=green, key=0, style=solid];
m0_265 -> m0_205  [color=green, key=2, style=dotted];
m0_266 -> m0_267  [color=green, key=0, style=solid];
m0_266 -> m0_268  [color=green, key=2, style=dotted];
m0_267 -> m0_264  [color=blue, key=0, style=bold];
m0_272 -> m0_273  [color=green, key=0, style=solid];
m0_272 -> m0_274  [color=green, key=1, label=SqlConnection, style=dashed];
m0_273 -> m0_274  [color=green, key=0, style=solid];
m0_273 -> m0_25  [color=green, key=2, style=dotted];
m0_273 -> m0_277  [color=green, key=1, label="lambda expression", style=dashed];
m0_274 -> m0_275  [color=green, key=0, style=solid];
m0_274 -> n21  [color=green, key=2, style=dotted];
m0_274 -> m0_23  [color=green, key=2, style=dotted];
m0_277 -> m0_278  [color=green, key=0, style=solid];
m0_277 -> m0_279  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_275 -> m0_276  [color=green, key=0, style=solid];
m0_275 -> m0_82  [color=green, key=2, style=dotted];
m0_276 -> m0_272  [color=blue, key=0, style=bold];
m0_278 -> m0_279  [color=green, key=0, style=solid];
m0_278 -> m0_205  [color=green, key=2, style=dotted];
m0_279 -> m0_280  [color=green, key=0, style=solid];
m0_279 -> m0_268  [color=green, key=2, style=dotted];
m0_280 -> m0_277  [color=blue, key=0, style=bold];
m0_284 -> m0_285  [color=green, key=0, style=solid];
m0_284 -> m0_286  [color=green, key=1, label=SqlConnection, style=dashed];
m0_285 -> m0_286  [color=green, key=0, style=solid];
m0_285 -> m0_25  [color=green, key=2, style=dotted];
m0_285 -> m0_289  [color=green, key=1, label="lambda expression", style=dashed];
m0_286 -> m0_287  [color=green, key=0, style=solid];
m0_286 -> n21  [color=green, key=2, style=dotted];
m0_286 -> m0_23  [color=green, key=2, style=dotted];
m0_289 -> m0_290  [color=green, key=0, style=solid];
m0_289 -> m0_291  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_287 -> m0_288  [color=green, key=0, style=solid];
m0_287 -> m0_82  [color=green, key=2, style=dotted];
m0_288 -> m0_284  [color=blue, key=0, style=bold];
m0_290 -> m0_291  [color=green, key=0, style=solid];
m0_290 -> m0_205  [color=green, key=2, style=dotted];
m0_291 -> m0_292  [color=green, key=0, style=solid];
m0_291 -> m0_268  [color=green, key=2, style=dotted];
m0_292 -> m0_289  [color=blue, key=0, style=bold];
m0_16 -> m0_25  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_26  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_26  [key=2, style=dotted];
m0_42 -> m0_25  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_26  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_26  [key=2, style=dotted];
m0_64 -> m0_25  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_26  [key=2, style=dotted];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_26  [key=2, style=dotted];
m0_68 -> m0_70  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m0_104 -> m0_25  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_26  [key=2, style=dotted];
m0_105 -> m0_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_129 -> m0_25  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_22  [key=2, style=dotted];
m0_14 -> m0_23  [key=2, style=dotted];
m0_14 -> m0_16  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_14 -> m0_17  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_24  [key=2, style=dotted];
m0_14 -> m0_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_15 -> m0_22  [key=2, style=dotted];
m0_15 -> m0_23  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m0_15 -> m0_24  [key=2, style=dotted];
m0_40 -> m0_22  [key=2, style=dotted];
m0_40 -> m0_23  [key=2, style=dotted];
m0_40 -> m0_42  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_40 -> m0_43  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_24  [key=2, style=dotted];
m0_40 -> m0_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_41 -> m0_22  [key=2, style=dotted];
m0_41 -> m0_23  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_45  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m0_41 -> m0_24  [key=2, style=dotted];
m0_58 -> m0_22  [key=2, style=dotted];
m0_58 -> m0_23  [key=2, style=dotted];
m0_58 -> m0_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_58 -> m0_65  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_24  [key=2, style=dotted];
m0_58 -> m0_91  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_58 -> m0_72  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_59 -> m0_22  [key=2, style=dotted];
m0_59 -> m0_23  [key=2, style=dotted];
m0_59 -> m0_68  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_24  [key=2, style=dotted];
m0_71 -> m0_22  [key=2, style=dotted];
m0_71 -> m0_23  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_71 -> m0_74  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_71 -> m0_75  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_71 -> m0_76  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_99 -> m0_22  [key=2, style=dotted];
m0_99 -> m0_23  [key=2, style=dotted];
m0_99 -> m0_104  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_99 -> m0_105  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_24  [key=2, style=dotted];
m0_99 -> m0_122  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_99 -> m0_109  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_108 -> m0_22  [key=2, style=dotted];
m0_108 -> m0_23  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_108 -> m0_111  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_108 -> m0_112  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_108 -> m0_113  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_130 -> m0_22  [key=2, style=dotted];
m0_130 -> m0_23  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_130 -> m0_133  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_72 -> m0_82  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_24  [key=2, style=dotted];
m0_66 -> m0_82  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_73 -> m0_82  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_82  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_76 -> m0_82  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_109 -> m0_82  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_24  [key=2, style=dotted];
m0_110 -> m0_82  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_82  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_113 -> m0_82  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_131 -> m0_82  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_24  [key=2, style=dotted];
m0_132 -> m0_82  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_13 -> m0_16  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_13 -> m0_17  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_13 -> m0_19  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_27  [key=2, style=dotted];
m0_18 -> m0_28  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_29  [key=2, style=dotted];
m0_39 -> m0_42  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_39 -> m0_43  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_39 -> m0_45  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_49 -> m0_50  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_29  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=2, style=dotted];
m0_57 -> m0_64  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_57 -> m0_65  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_57 -> m0_68  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_57 -> m0_71  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_63  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_63 -> m0_91  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_48  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_29  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_29  [key=2, style=dotted];
m0_98 -> m0_104  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_98 -> m0_105  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_108  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_103  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_103 -> m0_122  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_121 -> m0_122  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_29  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_29  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_135 -> m0_136  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=2, style=dotted];
m0_31 -> m0_34  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=2, style=dotted];
m0_60 -> m0_63  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_78  [key=2, style=dotted];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_48  [key=2, style=dotted];
m0_100 -> m0_103  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_78  [key=2, style=dotted];
m0_100 -> m0_102  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_48  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_29  [key=2, style=dotted];
m0_77 -> m0_57  [color=blue, key=0, style=bold];
m0_114 -> m0_98  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_21 -> m0_13  [color=blue, key=0, style=bold];
m0_32 -> m0_30  [color=blue, key=0, style=bold];
m0_47 -> m0_39  [color=blue, key=0, style=bold];
m0_51 -> m0_49  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_79  [key=2, style=dotted];
m0_62 -> m0_81  [key=2, style=dotted];
m0_62 -> m0_80  [key=2, style=dotted];
m0_62 -> m0_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_92 -> m0_90  [color=blue, key=0, style=bold];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_79  [key=2, style=dotted];
m0_102 -> m0_81  [key=2, style=dotted];
m0_102 -> m0_80  [key=2, style=dotted];
m0_102 -> m0_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_123 -> m0_121  [color=blue, key=0, style=bold];
m0_134 -> m0_128  [color=blue, key=0, style=bold];
m0_137 -> m0_135  [color=blue, key=0, style=bold];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_138  [key=2, style=dotted];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_79  [key=2, style=dotted];
m0_61 -> m0_80  [key=2, style=dotted];
m0_61 -> m0_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_79  [key=2, style=dotted];
m0_101 -> m0_80  [key=2, style=dotted];
m0_101 -> m0_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_88 -> m0_86  [color=blue, key=0, style=bold];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_89  [key=2, style=dotted];
m0_120 -> m0_118  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_89  [key=2, style=dotted];
m0_85 -> m0_83  [color=blue, key=0, style=bold];
m0_84 -> m0_85  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_115  [color=blue, key=0, style=bold];
m0_269 -> m0_270  [color=green, key=0, style=solid];
m0_270 -> m0_271  [color=green, key=0, style=solid];
m0_270 -> m0_12  [color=green, key=2, style=dotted];
m0_270 -> m0_272  [color=green, key=1, label="lambda expression", style=dashed];
m0_271 -> m0_269  [color=blue, key=0, style=bold];
m0_218 -> m0_219  [color=green, key=0, style=solid];
m0_219 -> m0_220  [color=green, key=0, style=solid];
m0_219 -> m0_12  [color=green, key=2, style=dotted];
m0_219 -> m0_221  [color=green, key=1, label="lambda expression", style=dashed];
m0_220 -> m0_218  [color=blue, key=0, style=bold];
m0_293 -> m0_295  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m0_293 -> m0_294  [key=0, style=solid];
m0_295 -> m0_298  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_297  [key=2, style=dotted];
m0_296 -> m0_293  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_14  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_9 -> m0_15  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_9 -> m0_9  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m0_11 -> m0_8  [color=blue, key=0, style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_12  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_58  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_54 -> m0_59  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_54 -> m0_9  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m0_56 -> m0_53  [color=blue, key=0, style=bold];
m0_206 -> m0_207  [color=green, key=0, style=solid];
m0_207 -> m0_208  [color=green, key=0, style=solid];
m0_207 -> m0_12  [color=green, key=2, style=dotted];
m0_207 -> m0_209  [color=green, key=1, label="lambda expression", style=dashed];
m0_208 -> m0_206  [color=blue, key=0, style=bold];
m0_244 -> m0_245  [color=green, key=0, style=solid];
m0_245 -> m0_246  [color=green, key=0, style=solid];
m0_245 -> m0_12  [color=green, key=2, style=dotted];
m0_245 -> m0_247  [color=green, key=1, label="lambda expression", style=dashed];
m0_246 -> m0_244  [color=blue, key=0, style=bold];
m0_167 -> m0_168  [color=green, key=0, style=solid];
m0_168 -> m0_169  [color=green, key=0, style=solid];
m0_168 -> m0_12  [color=green, key=2, style=dotted];
m0_168 -> m0_170  [color=green, key=1, label="lambda expression", style=dashed];
m0_169 -> m0_167  [color=blue, key=0, style=bold];
m0_304 -> m0_143  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_146  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_156  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_159  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_168  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_171  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_181  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_184  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_193  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_196  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_207  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_210  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_219  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_222  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_231  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_234  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_245  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_248  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_257  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_260  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_270  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_273  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_282  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_285  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_43  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_45  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_55  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_64  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_65  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_68  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_96  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_104  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_105  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_126  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_304 -> m0_129  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m0_305 -> m0_14  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_305 -> m0_15  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_307 -> m0_40  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_307 -> m0_41  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_309 -> m0_58  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_309 -> m0_59  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_312 -> m0_99  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_306 -> m0_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_308 -> m0_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_310 -> m0_91  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_311 -> m0_91  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_313 -> m0_122  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_314 -> m0_122  [color=darkseagreen4, key=1, label=state, style=dashed];
}
